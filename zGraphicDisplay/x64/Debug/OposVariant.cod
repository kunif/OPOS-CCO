; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29336.0 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?WM_ATLGETHOST@ATL@@3IA				; ATL::WM_ATLGETHOST
PUBLIC	?WM_ATLGETCONTROL@ATL@@3IA			; ATL::WM_ATLGETCONTROL
PUBLIC	LIBID_ATLLib
PUBLIC	__pobjMapEntryFirst
PUBLIC	__pobjMapEntryLast
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPEAUHINSTANCE__@@@ZEA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZEA			; ATL::_pPerfUnRegFunc
PUBLIC	?_AtlRegisterPerUser@ATL@@3_NA			; ATL::_AtlRegisterPerUser
PUBLIC	?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA		; ATL::_pAtlModule
PUBLIC	?_pModule@ATL@@3PEAVCComModule@1@EA		; ATL::_pModule
PUBLIC	?_pAtlAutoThreadModule@ATL@@3PEAUIAtlAutoThreadModule@1@EA ; ATL::_pAtlAutoThreadModule
PUBLIC	?chDirSep@ATL@@3_WB				; ATL::chDirSep
PUBLIC	?chRightBracket@ATL@@3_WB			; ATL::chRightBracket
PUBLIC	?chLeftBracket@ATL@@3_WB			; ATL::chLeftBracket
PUBLIC	?chQuote@ATL@@3_WB				; ATL::chQuote
PUBLIC	?chEquals@ATL@@3_WB				; ATL::chEquals
PUBLIC	?szStringVal@ATL@@3QEB_WEB			; ATL::szStringVal
PUBLIC	?multiszStringVal@ATL@@3QEB_WEB			; ATL::multiszStringVal
PUBLIC	?szDwordVal@ATL@@3QEB_WEB			; ATL::szDwordVal
PUBLIC	?szBinaryVal@ATL@@3QEB_WEB			; ATL::szBinaryVal
PUBLIC	?szValToken@ATL@@3QEB_WEB			; ATL::szValToken
PUBLIC	?szForceRemove@ATL@@3QEB_WEB			; ATL::szForceRemove
PUBLIC	?szNoRemove@ATL@@3QEB_WEB			; ATL::szNoRemove
PUBLIC	?szDelete@ATL@@3QEB_WEB				; ATL::szDelete
PUBLIC	CLSID_Registrar
PUBLIC	IID_IRegistrar
PUBLIC	IID_IDocHostUIHandlerDispatch
PUBLIC	IID_IAxWinHostWindow
PUBLIC	IID_IAxWinHostWindowLic
PUBLIC	IID_IAxWinAmbientDispatch
PUBLIC	IID_IAxWinAmbientDispatchEx
PUBLIC	IID_IInternalConnection
;	COMDAT ?WM_ATLGETHOST@ATL@@3IA
_BSS	SEGMENT
?WM_ATLGETHOST@ATL@@3IA DD 01H DUP (?)			; ATL::WM_ATLGETHOST
_BSS	ENDS
;	COMDAT ?WM_ATLGETCONTROL@ATL@@3IA
_BSS	SEGMENT
?WM_ATLGETCONTROL@ATL@@3IA DD 01H DUP (?)		; ATL::WM_ATLGETCONTROL
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPEAUHINSTANCE__@@@ZEA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPEAUHINSTANCE__@@@ZEA DQ 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZEA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZEA DQ 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?_AtlRegisterPerUser@ATL@@3_NA
_BSS	SEGMENT
?_AtlRegisterPerUser@ATL@@3_NA DB 01H DUP (?)		; ATL::_AtlRegisterPerUser
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA
_BSS	SEGMENT
?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA DQ 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PEAVCComModule@1@EA
_BSS	SEGMENT
?_pModule@ATL@@3PEAVCComModule@1@EA DQ 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PEAUIAtlAutoThreadModule@1@EA
_BSS	SEGMENT
?_pAtlAutoThreadModule@ATL@@3PEAUIAtlAutoThreadModule@1@EA DQ 01H DUP (?) ; ATL::_pAtlAutoThreadModule
_BSS	ENDS
;	COMDAT IID_IInternalConnection
CONST	SEGMENT
IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT IID_IAxWinAmbientDispatchEx
CONST	SEGMENT
IID_IAxWinAmbientDispatchEx DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT IID_IAxWinAmbientDispatch
CONST	SEGMENT
IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT IID_IAxWinHostWindowLic
CONST	SEGMENT
IID_IAxWinHostWindowLic DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
CONST	ENDS
;	COMDAT IID_IAxWinHostWindow
CONST	SEGMENT
IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT IID_IRegistrar
CONST	SEGMENT
IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT CLSID_Registrar
CONST	SEGMENT
CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT ?szDelete@ATL@@3QEB_WEB
CONST	SEGMENT
?szDelete@ATL@@3QEB_WEB DQ FLAT:$SG110909		; ATL::szDelete
CONST	ENDS
;	COMDAT ?szNoRemove@ATL@@3QEB_WEB
CONST	SEGMENT
?szNoRemove@ATL@@3QEB_WEB DQ FLAT:$SG110907		; ATL::szNoRemove
CONST	ENDS
;	COMDAT ?szForceRemove@ATL@@3QEB_WEB
CONST	SEGMENT
?szForceRemove@ATL@@3QEB_WEB DQ FLAT:$SG110905		; ATL::szForceRemove
CONST	ENDS
;	COMDAT ?szValToken@ATL@@3QEB_WEB
CONST	SEGMENT
?szValToken@ATL@@3QEB_WEB DQ FLAT:$SG110903		; ATL::szValToken
CONST	ENDS
;	COMDAT ?szBinaryVal@ATL@@3QEB_WEB
CONST	SEGMENT
?szBinaryVal@ATL@@3QEB_WEB DQ FLAT:$SG110901		; ATL::szBinaryVal
CONST	ENDS
;	COMDAT ?szDwordVal@ATL@@3QEB_WEB
CONST	SEGMENT
?szDwordVal@ATL@@3QEB_WEB DQ FLAT:$SG110899		; ATL::szDwordVal
CONST	ENDS
;	COMDAT ?multiszStringVal@ATL@@3QEB_WEB
CONST	SEGMENT
?multiszStringVal@ATL@@3QEB_WEB DQ FLAT:$SG110897	; ATL::multiszStringVal
CONST	ENDS
;	COMDAT ?szStringVal@ATL@@3QEB_WEB
CONST	SEGMENT
?szStringVal@ATL@@3QEB_WEB DQ FLAT:$SG110895		; ATL::szStringVal
CONST	ENDS
;	COMDAT ?chEquals@ATL@@3_WB
CONST	SEGMENT
?chEquals@ATL@@3_WB DW 03dH				; ATL::chEquals
CONST	ENDS
;	COMDAT ?chQuote@ATL@@3_WB
CONST	SEGMENT
?chQuote@ATL@@3_WB DW 027H				; ATL::chQuote
CONST	ENDS
;	COMDAT ?chLeftBracket@ATL@@3_WB
CONST	SEGMENT
?chLeftBracket@ATL@@3_WB DW 07bH			; ATL::chLeftBracket
CONST	ENDS
;	COMDAT ?chRightBracket@ATL@@3_WB
CONST	SEGMENT
?chRightBracket@ATL@@3_WB DW 07dH			; ATL::chRightBracket
CONST	ENDS
;	COMDAT ?chDirSep@ATL@@3_WB
CONST	SEGMENT
?chDirSep@ATL@@3_WB DW 05cH				; ATL::chDirSep
CONST	ENDS
;	COMDAT __pobjMapEntryLast
ATL$__z	SEGMENT
__pobjMapEntryLast DQ 0000000000000000H
ATL$__z	ENDS
;	COMDAT __pobjMapEntryFirst
ATL$__a	SEGMENT
__pobjMapEntryFirst DQ 0000000000000000H
ATL$__a	ENDS
;	COMDAT LIBID_ATLLib
CONST	SEGMENT
LIBID_ATLLib DD	044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
CONST	SEGMENT
$SG181901 DB	'p', 00H, 'p', 00H, 'v', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	00H, 00H
	ORG $+2
$SG181902 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG181918 DB	':', 00H, 00H, 00H
	ORG $+4
$SG181903 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG190425 DB	00H, 00H
	ORG $+2
$SG190474 DB	00H, 00H
	ORG $+2
$SG110895 DB	'S', 00H, 00H, 00H
$SG93179 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG93252 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 00H, 00H
$SG93301 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'Q', 00H, 'I', 00H, 00H, 00H
	ORG $+2
$SG93350 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'r', 00H, 00H, 00H
$SG110897 DB	'M', 00H, 00H, 00H
$SG93399 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'f', 00H, 'c', 00H, 'o'
	DB	00H, 'u', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG110899 DB	'D', 00H, 00H, 00H
$SG93448 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H
$SG110901 DB	'B', 00H, 00H, 00H
$SG93497 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r'
	DB	00H, 'o', 00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG186218 DB	00H, 00H
	ORG $+2
$SG93546 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 's', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 00H, 00H
$SG93595 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'D', 00H, 'B', 00H, 'C', 00H, 'l', 00H, 'i'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG186312 DB	00H, 00H
	ORG $+2
$SG93644 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'D', 00H, 'B', 00H, 'P', 00H, 'r', 00H, 'o'
	DB	00H, 'v', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG93693 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'n', 00H, 'a', 00H, 'p', 00H, 'i'
	DB	00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG93742 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'I', 00H, 'm'
	DB	00H, 'p', 00H, 'l', 00H, 00H, 00H
$SG93791 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG93840 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'E', 00H, 'x', 00H, 'c', 00H, 'e', 00H, 'p'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+4
$SG93889 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+6
$SG93938 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'a', 00H, 'c', 00H, 'h', 00H, 'e'
	DB	00H, 00H, 00H
	ORG $+4
$SG93987 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'c'
	DB	00H, 'i', 00H, 'l', 00H, 00H, 00H
$SG94036 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG94085 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 00H, 00H
$SG94090 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'U', 00H, 't', 00H, 'i', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+6
$SG94139 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 'c', 00H, 'u', 00H, 'r'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H
	ORG $+6
$SG94188 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 00H
	DB	00H
	ORG $+6
$SG94237 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'I', 00H, 'S', 00H, 'A', 00H, 'P', 00H, 'I'
	DB	00H, 00H, 00H
	ORG $+4
$SG192724 DB	'p', 00H, 'T', 00H, 'h', 00H, 'i', 00H, 's', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG192725 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG192726 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG192729 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h', 00H
$SG192730 DB	'S', 00H, 'u', 00H, 'b', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 't'
	DB	00H, 'h', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 'g', 00H, 'h', 00H
	DB	' ', 00H, 'a', 00H, ' ', 00H, 'h', 00H, 'o', 00H, 'o', 00H, 'k'
	DB	00H, ' ', 00H, 'd', 00H, 'i', 00H, 's', 00H, 'c', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, 'e', 00H, 'd', 00H, '.', 00H, 0aH, 00H, 00H
	DB	00H
	ORG $+2
$SG192749 DB	'p', 00H, 'T', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H
	DB	'>', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'C', 00H, 'u', 00H, 'r'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'M', 00H, 's', 00H
	DB	'g', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '&', 00H, 'm'
	DB	00H, 's', 00H, 'g', 00H, 00H, 00H
	ORG $+6
$SG192750 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG192786 DB	't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'm', 00H, '_', 00H, 'h', 00H, 'W', 00H, 'n', 00H, 'd', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+4
$SG192751 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG192787 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG192794 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG192788 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG192793 DB	't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'm', 00H, '_', 00H, 'h', 00H, 'W', 00H, 'n', 00H, 'd', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'h', 00H, 'W', 00H, 'n', 00H
	DB	'd', 00H, 00H, 00H
	ORG $+6
$SG192795 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG192812 DB	't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'm', 00H, '_', 00H, 'h', 00H, 'W', 00H, 'n', 00H, 'd', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+4
$SG192813 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG192814 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG192815 DB	':', 00H, ':', 00H, 'I', 00H, 's', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '(', 00H, 'h', 00H, 'W'
	DB	00H, 'n', 00H, 'd', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG192816 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG192817 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG110903 DB	'V', 00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG110905 DB	'F', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'R', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 00H, 00H
$SG110907 DB	'N', 00H, 'o', 00H, 'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'v', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG110909 DB	'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG192835 DB	't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'm', 00H, '_', 00H, 'h', 00H, 'W', 00H, 'n', 00H, 'd', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+4
$SG192836 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG192860 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG192837 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG192859 DB	'p', 00H, 'T', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H
	DB	'>', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'C', 00H, 'u', 00H, 'r'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'M', 00H, 's', 00H
	DB	'g', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '&', 00H, 'm'
	DB	00H, 's', 00H, 'g', 00H, 00H, 00H
	ORG $+6
$SG192861 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG192894 DB	'p', 00H, 'p', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
$SG192895 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG192922 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG192896 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG192921 DB	'p', 00H, 'p', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
$SG192923 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG193075 DB	'm', 00H, '_', 00H, 'b', 00H, 'e', 00H, 'g', 00H, 'i', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H
	ORG $+6
$SG193076 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG193106 DB	'h', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG193077 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG193107 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG193142 DB	'h', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG193108 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG193143 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG193144 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG193178 DB	'h', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG193179 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG193214 DB	'h', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG193180 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG193215 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG193216 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG193438 DB	'p', 00H, 'p', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
$SG193439 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG193440 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG111605 DB	'A', 00H, 'p', 00H, 'p', 00H, 'I', 00H, 'D', 00H, 00H, 00H
	ORG $+4
$SG111606 DB	'C', 00H, 'L', 00H, 'S', 00H, 'I', 00H, 'D', 00H, 00H, 00H
	ORG $+4
$SG111607 DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'C', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
	ORG $+6
$SG111608 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'T', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG111609 DB	'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'f', 00H
	DB	'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H
	ORG $+4
$SG111610 DB	'H', 00H, 'a', 00H, 'r', 00H, 'd', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG111611 DB	'M', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG111612 DB	'S', 00H, 'A', 00H, 'M', 00H, 00H, 00H
$SG111613 DB	'S', 00H, 'E', 00H, 'C', 00H, 'U', 00H, 'R', 00H, 'I', 00H
	DB	'T', 00H, 'Y', 00H, 00H, 00H
	ORG $+6
$SG111614 DB	'S', 00H, 'Y', 00H, 'S', 00H, 'T', 00H, 'E', 00H, 'M', 00H
	DB	00H, 00H
	ORG $+2
$SG111615 DB	'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG111616 DB	'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'L', 00H, 'i', 00H
	DB	'b', 00H, 00H, 00H
$SG186222 DB	'_', 00H, '_', 00H, 'a', 00H, 't', 00H, 'l', 00H, '_', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l'
	DB	00H, 00H, 00H
	ORG $+4
$SG186223 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG186227 DB	'l', 00H, 'p', 00H, 's', 00H, 'z', 00H, 'N', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG186224 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG186228 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG186229 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG186234 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ':', 00H, ' ', 00H, '0'
	DB	00H, 'x', 00H, '%', 00H, 'x', 00H, ' ', 00H, '-', 00H, ' ', 00H
	DB	'%', 00H, 'T', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG186243 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG186231 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlhost.h', 00H
	ORG $+7
$SG186242 DB	'l', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H
	DB	00H, 00H
	ORG $+2
$SG186317 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG186232 DB	'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H
	DB	'l', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'f', 00H, 'a', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '''', 00H, '%', 00H, 'T', 00H, 's', 00H
	DB	'''', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG186323 DB	'l', 00H, 'p', 00H, 's', 00H, 'z', 00H, 'N', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG186233 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlhost.h', 00H
	ORG $+7
$SG186316 DB	'_', 00H, '_', 00H, 'a', 00H, 't', 00H, 'l', 00H, '_', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l'
	DB	00H, 00H, 00H
	ORG $+4
$SG186324 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG186244 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG186330 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ':', 00H, ' ', 00H, '0'
	DB	00H, 'x', 00H, '%', 00H, 'x', 00H, ' ', 00H, '-', 00H, ' ', 00H
	DB	'%', 00H, 'T', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG186339 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG186318 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG186338 DB	'l', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H
	DB	00H, 00H
	ORG $+2
$SG112736 DB	'l', 00H, 'p', 00H, 's', 00H, 'z', 00H, 'P', 00H, 'a', 00H
	DB	't', 00H, 'h', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+4
$SG186325 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG112737 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG186327 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlhost.h', 00H
	ORG $+15
$SG186328 DB	'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H
	DB	'l', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'f', 00H, 'a', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '''', 00H, '%', 00H, 'T', 00H, 's', 00H
	DB	'''', 00H, 0aH, 00H, 00H, 00H
	ORG $+10
$SG186329 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlhost.h', 00H
	ORG $+15
$SG186340 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+14
$SG112738 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??_I@YAXPEAX_K1P6AX0@Z@Z			; `vector destructor iterator'
PUBLIC	HRESULT_FROM_WIN32
PUBLIC	__local_stdio_printf_options
PUBLIC	_vswprintf_s_l
PUBLIC	swprintf_s
PUBLIC	?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z		; ATL::CCRTAllocator::Allocate
PUBLIC	?Free@CCRTAllocator@ATL@@SAXPEAX@Z		; ATL::CCRTAllocator::Free
PUBLIC	??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
PUBLIC	??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
PUBLIC	??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
PUBLIC	??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ	; ATL::CTraceCategoryEx<2,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
PUBLIC	??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
PUBLIC	??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
PUBLIC	??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
PUBLIC	??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ	; ATL::CTraceCategoryEx<32,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
PUBLIC	??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
PUBLIC	?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z		; ATL::CTrace::GetCategoryName
PUBLIC	?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z		; ATL::CTrace::TraceV
PUBLIC	?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z	; ATL::CTrace::TraceV
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z	; ATL::CTrace::RegisterCategory
PUBLIC	??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
PUBLIC	??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
PUBLIC	??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
PUBLIC	?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
PUBLIC	??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	??0CPreserveLastError@ATL@@QEAA@XZ		; ATL::CPreserveLastError::CPreserveLastError
PUBLIC	??1CPreserveLastError@ATL@@QEAA@XZ		; ATL::CPreserveLastError::~CPreserveLastError
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	?_AtlRaiseException@ATL@@YAXKK@Z		; ATL::_AtlRaiseException
PUBLIC	?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
PUBLIC	??0CComCriticalSection@ATL@@QEAA@XZ		; ATL::CComCriticalSection::CComCriticalSection
PUBLIC	??1CComCriticalSection@ATL@@QEAA@XZ		; ATL::CComCriticalSection::~CComCriticalSection
PUBLIC	?Init@CComCriticalSection@ATL@@QEAAJXZ		; ATL::CComCriticalSection::Init
PUBLIC	?Term@CComCriticalSection@ATL@@QEAAJXZ		; ATL::CComCriticalSection::Term
PUBLIC	?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
PUBLIC	??1CComBSTR@ATL@@QEAA@XZ			; ATL::CComBSTR::~CComBSTR
PUBLIC	??0_ATL_COM_MODULE70@ATL@@QEAA@XZ		; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
PUBLIC	??1_ATL_COM_MODULE70@ATL@@QEAA@XZ		; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
PUBLIC	??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
PUBLIC	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
PUBLIC	??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
PUBLIC	??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ		; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
PUBLIC	??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ		; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
PUBLIC	?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
PUBLIC	?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
PUBLIC	??0CAtlComModule@ATL@@QEAA@XZ			; ATL::CAtlComModule::CAtlComModule
PUBLIC	??1CAtlComModule@ATL@@QEAA@XZ			; ATL::CAtlComModule::~CAtlComModule
PUBLIC	?Term@CAtlComModule@ATL@@QEAAXXZ		; ATL::CAtlComModule::Term
PUBLIC	??0CAtlWinModule@ATL@@QEAA@XZ			; ATL::CAtlWinModule::CAtlWinModule
PUBLIC	??1CAtlWinModule@ATL@@QEAA@XZ			; ATL::CAtlWinModule::~CAtlWinModule
PUBLIC	?Term@CAtlWinModule@ATL@@QEAAXXZ		; ATL::CAtlWinModule::Term
PUBLIC	??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid
PUBLIC	??_Estringdispid@CComTypeInfoHolder@ATL@@QEAAPEAXI@Z ; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor'
PUBLIC	??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z		; ATL::AtlMultiply<unsigned __int64>
PUBLIC	?Clear@OposVariant@@QEAAJXZ			; OposVariant::Clear
PUBLIC	?SetVARIANT_BOOL@OposVariant@@QEAAXF@Z		; OposVariant::SetVARIANT_BOOL
PUBLIC	?SetVARIANT_BOOL_Ptr@OposVariant@@QEAAXPEAFAEAJ@Z ; OposVariant::SetVARIANT_BOOL_Ptr
PUBLIC	?GetLONG@OposVariant@@QEAAJXZ			; OposVariant::GetLONG
PUBLIC	?ChangeLONG@OposVariant@@QEAAXPEAJAEAJ@Z	; OposVariant::ChangeLONG
PUBLIC	?SetLONG@OposVariant@@QEAAXJ@Z			; OposVariant::SetLONG
PUBLIC	?SetLONG_Ptr@OposVariant@@QEAAXPEAJAEAJ@Z	; OposVariant::SetLONG_Ptr
PUBLIC	?ChangeCURRENCY@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z ; OposVariant::ChangeCURRENCY
PUBLIC	?SetCURRENCY@OposVariant@@QEAAXTtagCY@@@Z	; OposVariant::SetCURRENCY
PUBLIC	?SetCURRENCY_Ptr@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z ; OposVariant::SetCURRENCY_Ptr
PUBLIC	?ChangeBSTR@OposVariant@@QEAAXPEAPEA_WAEAJ@Z	; OposVariant::ChangeBSTR
PUBLIC	?SetBSTR@OposVariant@@QEAAXPEA_WAEAJ@Z		; OposVariant::SetBSTR
PUBLIC	?SetBSTR_Copy@OposVariant@@QEAAXPEA_WAEAJ@Z	; OposVariant::SetBSTR_Copy
PUBLIC	?SetBSTR_OutPtr@OposVariant@@QEAA_NPEAPEA_WAEAJ@Z ; OposVariant::SetBSTR_OutPtr
PUBLIC	?SetBSTR_InOutPtr@OposVariant@@QEAA_NPEAPEA_WAEAJ@Z ; OposVariant::SetBSTR_InOutPtr
PUBLIC	?SetVARIANT@OposVariant@@QEAAXAEAUtagVARIANT@@GAEAJ@Z ; OposVariant::SetVARIANT
PUBLIC	?SetVARIANT_Ptr@OposVariant@@QEAAXAEAPEAUtagVARIANT@@GAEAJ@Z ; OposVariant::SetVARIANT_Ptr
PUBLIC	?SetString@OposVariant@@QEAAXPEB_WAEAJ@Z	; OposVariant::SetString
PUBLIC	?SetDispatch_Ptr@OposVariant@@QEAAXPEAUIDispatch@@AEAJ@Z ; OposVariant::SetDispatch_Ptr
PUBLIC	??0OposDispParms@@QEAA@PEAVOposVariant@@H@Z	; OposDispParms::OposDispParms
PUBLIC	??1OposDispParms@@QEAA@XZ			; OposDispParms::~OposDispParms
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_13COJANIEC@?$AA0@				; `string'
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@		; `string'
PUBLIC	??_C@_1OE@EFJOHFCD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
PUBLIC	?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
PUBLIC	?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
PUBLIC	?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
PUBLIC	?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
PUBLIC	?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
PUBLIC	?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
PUBLIC	?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
PUBLIC	?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
PUBLIC	?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
PUBLIC	?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
PUBLIC	?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
PUBLIC	?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
PUBLIC	?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
PUBLIC	?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
PUBLIC	?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
PUBLIC	?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
PUBLIC	?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
PUBLIC	?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
PUBLIC	?m_nLevel@CTrace@ATL@@1IA			; ATL::CTrace::m_nLevel
PUBLIC	?m_nCategory@CTrace@ATL@@1IA			; ATL::CTrace::m_nCategory
PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ ; `string'
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ ; `string'
PUBLIC	??_C@_1OE@DGDFBHKA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	?_AtlComModule@ATL@@3VCAtlComModule@1@A		; ATL::_AtlComModule
PUBLIC	?_AtlWinModule@ATL@@3VCAtlWinModule@1@A		; ATL::_AtlWinModule
PUBLIC	??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_1OK@FGCLCILL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	??_U@YAPEAX_K@Z:PROC				; operator new[]
EXTRN	??_V@YAXPEAX@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPEAX_K@Z:PROC				; operator delete[]
EXTRN	atexit:PROC
EXTRN	free:PROC
EXTRN	malloc:PROC
EXTRN	_CrtDbgReportW:PROC
EXTRN	memset:PROC
EXTRN	wcscpy_s:PROC
EXTRN	wcslen:PROC
EXTRN	__imp_DecodePointer:PROC
EXTRN	__imp_RaiseException:PROC
EXTRN	__imp_GetLastError:PROC
EXTRN	__imp_SetLastError:PROC
EXTRN	__imp_InitializeCriticalSectionEx:PROC
EXTRN	__imp_DeleteCriticalSection:PROC
EXTRN	__imp_UnregisterClassW:PROC
EXTRN	__imp_SysAllocString:PROC
EXTRN	__imp_SysAllocStringLen:PROC
EXTRN	__imp_SysFreeString:PROC
EXTRN	__imp_SysStringLen:PROC
EXTRN	__imp_VariantClear:PROC
EXTRN	__imp_VariantCopyInd:PROC
EXTRN	__imp_VariantChangeType:PROC
EXTRN	__stdio_common_vswprintf:PROC
EXTRN	__stdio_common_vswprintf_s:PROC
EXTRN	__stdio_common_vsnwprintf_s:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
EXTRN	__ImageBase:ZWORD
EXTRN	__security_cookie:QWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A
_BSS	SEGMENT
?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceGeneral
_BSS	ENDS
;	COMDAT ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A
_BSS	SEGMENT
?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCOM
_BSS	ENDS
;	COMDAT ?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A
_BSS	SEGMENT
?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceQI
_BSS	ENDS
;	COMDAT ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A
_BSS	SEGMENT
?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRegistrar
_BSS	ENDS
;	COMDAT ?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A
_BSS	SEGMENT
?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRefcount
_BSS	ENDS
;	COMDAT ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A
_BSS	SEGMENT
?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceWindowing
_BSS	ENDS
;	COMDAT ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A
_BSS	SEGMENT
?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceControls
_BSS	ENDS
;	COMDAT ?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A
_BSS	SEGMENT
?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceHosting
_BSS	ENDS
;	COMDAT ?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBClient
_BSS	ENDS
;	COMDAT ?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBProvider
_BSS	ENDS
;	COMDAT ?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSnapin
_BSS	ENDS
;	COMDAT ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceNotImpl
_BSS	ENDS
;	COMDAT ?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceAllocation
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceTime
_BSS	ENDS
;	COMDAT ?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCache
_BSS	ENDS
;	COMDAT ?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceStencil
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT ?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceMap
_BSS	ENDS
;	COMDAT ?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceUtil
_BSS	ENDS
;	COMDAT ?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSecurity
_BSS	ENDS
;	COMDAT ?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSync
_BSS	ENDS
;	COMDAT ?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceISAPI
_BSS	ENDS
;	COMDAT ?m_nLevel@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLevel@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLevel
_BSS	ENDS
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?_AtlComModule@ATL@@3VCAtlComModule@1@A
_BSS	SEGMENT
?_AtlComModule@ATL@@3VCAtlComModule@1@A DB 048H DUP (?)	; ATL::_AtlComModule
_BSS	ENDS
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_BSS	SEGMENT
?_AtlWinModule@ATL@@3VCAtlWinModule@1@A DB 048H DUP (?)	; ATL::_AtlWinModule
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN7
	DD	imagerel $LN7+139
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_I@YAXPEAX_K1P6AX0@Z@Z DD imagerel $LN7
	DD	imagerel $LN7+166
	DD	imagerel $unwind$??_I@YAXPEAX_K1P6AX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$HRESULT_FROM_WIN32 DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$HRESULT_FROM_WIN32
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vswprintf_s_l DD imagerel $LN5
	DD	imagerel $LN5+132
	DD	imagerel $unwind$_vswprintf_s_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$swprintf_s DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$swprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Free@CCRTAllocator@ATL@@SAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?Free@CCRTAllocator@ATL@@SAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceGeneral@ATL@@YAXXZ DD imagerel ??__EatlTraceGeneral@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceGeneral@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceGeneral@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceCOM@ATL@@YAXXZ DD imagerel ??__EatlTraceCOM@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceCOM@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceCOM@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceQI@ATL@@YAXXZ DD imagerel ??__EatlTraceQI@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceQI@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceQI@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceRegistrar@ATL@@YAXXZ DD imagerel ??__EatlTraceRegistrar@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceRegistrar@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceRegistrar@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceRefcount@ATL@@YAXXZ DD imagerel ??__EatlTraceRefcount@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceRefcount@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceRefcount@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceWindowing@ATL@@YAXXZ DD imagerel ??__EatlTraceWindowing@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceWindowing@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceWindowing@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceControls@ATL@@YAXXZ DD imagerel ??__EatlTraceControls@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceControls@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceControls@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceHosting@ATL@@YAXXZ DD imagerel ??__EatlTraceHosting@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceHosting@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceHosting@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceDBClient@ATL@@YAXXZ DD imagerel ??__EatlTraceDBClient@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceDBClient@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceDBClient@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceDBProvider@ATL@@YAXXZ DD imagerel ??__EatlTraceDBProvider@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceDBProvider@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceDBProvider@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceSnapin@ATL@@YAXXZ DD imagerel ??__EatlTraceSnapin@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceSnapin@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceSnapin@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceNotImpl@ATL@@YAXXZ DD imagerel ??__EatlTraceNotImpl@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceNotImpl@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceNotImpl@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceAllocation@ATL@@YAXXZ DD imagerel ??__EatlTraceAllocation@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceAllocation@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceAllocation@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceException@ATL@@YAXXZ DD imagerel ??__EatlTraceException@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceException@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceException@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceTime@ATL@@YAXXZ DD imagerel ??__EatlTraceTime@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceTime@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceTime@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceCache@ATL@@YAXXZ DD imagerel ??__EatlTraceCache@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceCache@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceCache@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceStencil@ATL@@YAXXZ DD imagerel ??__EatlTraceStencil@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceStencil@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceStencil@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceString@ATL@@YAXXZ DD imagerel ??__EatlTraceString@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceString@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceString@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceMap@ATL@@YAXXZ DD imagerel ??__EatlTraceMap@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceMap@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceMap@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceUtil@ATL@@YAXXZ DD imagerel ??__EatlTraceUtil@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceUtil@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceUtil@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceSecurity@ATL@@YAXXZ DD imagerel ??__EatlTraceSecurity@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceSecurity@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceSecurity@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceSync@ATL@@YAXXZ DD imagerel ??__EatlTraceSync@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceSync@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceSync@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceISAPI@ATL@@YAXXZ DD imagerel ??__EatlTraceISAPI@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceISAPI@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceISAPI@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z DD imagerel $LN7
	DD	imagerel $LN7+116
	DD	imagerel $unwind$?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z DD imagerel $LN12
	DD	imagerel $LN12+682
	DD	imagerel $unwind$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z DD imagerel $LN6
	DD	imagerel $LN6+429
	DD	imagerel $unwind$?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z DD imagerel $LN6
	DD	imagerel $LN6+212
	DD	imagerel $unwind$?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD imagerel $LN5
	DD	imagerel $LN5+145
	DD	imagerel $unwind$?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD imagerel $LN4
	DD	imagerel $LN4+115
	DD	imagerel $unwind$?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CPreserveLastError@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??0CPreserveLastError@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CPreserveLastError@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??1CPreserveLastError@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ DD imagerel $LN3
	DD	imagerel $LN3+176
	DD	imagerel $unwind$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_AtlRaiseException@ATL@@YAXKK@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$?_AtlRaiseException@ATL@@YAXKK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CComCriticalSection@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0CComCriticalSection@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CComCriticalSection@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1CComCriticalSection@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Init@CComCriticalSection@ATL@@QEAAJXZ DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$?Init@CComCriticalSection@ATL@@QEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Term@CComCriticalSection@ATL@@QEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?Term@CComCriticalSection@ATL@@QEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CComBSTR@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??1CComBSTR@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+132
	DD	imagerel $unwind$?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z DD imagerel $LN7
	DD	imagerel $LN7+172
	DD	imagerel $unwind$??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z DD imagerel $LN7
	DD	imagerel $LN7+249
	DD	imagerel $unwind$?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z DD imagerel $LN9
	DD	imagerel $LN9+228
	DD	imagerel $unwind$?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CAtlComModule@ATL@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+286
	DD	imagerel $unwind$??0CAtlComModule@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CAtlComModule@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??1CAtlComModule@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Term@CAtlComModule@ATL@@QEAAXXZ DD imagerel $LN9
	DD	imagerel $LN9+213
	DD	imagerel $unwind$?Term@CAtlComModule@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__E_AtlComModule@ATL@@YAXXZ DD imagerel ??__E_AtlComModule@ATL@@YAXXZ
	DD	imagerel ??__E_AtlComModule@ATL@@YAXXZ+51
	DD	imagerel $unwind$??__E_AtlComModule@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__F_AtlComModule@ATL@@YAXXZ DD imagerel ??__F_AtlComModule@ATL@@YAXXZ
	DD	imagerel ??__F_AtlComModule@ATL@@YAXXZ+39
	DD	imagerel $unwind$??__F_AtlComModule@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CAtlWinModule@ATL@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+165
	DD	imagerel $unwind$??0CAtlWinModule@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CAtlWinModule@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??1CAtlWinModule@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Term@CAtlWinModule@ATL@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?Term@CAtlWinModule@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__E_AtlWinModule@ATL@@YAXXZ DD imagerel ??__E_AtlWinModule@ATL@@YAXXZ
	DD	imagerel ??__E_AtlWinModule@ATL@@YAXXZ+51
	DD	imagerel $unwind$??__E_AtlWinModule@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__F_AtlWinModule@ATL@@YAXXZ DD imagerel ??__F_AtlWinModule@ATL@@YAXXZ
	DD	imagerel ??__F_AtlWinModule@ATL@@YAXXZ+39
	DD	imagerel $unwind$??__F_AtlWinModule@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Estringdispid@CComTypeInfoHolder@ATL@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+176
	DD	imagerel $unwind$??_Estringdispid@CComTypeInfoHolder@ATL@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z DD imagerel $LN5
	DD	imagerel $LN5+124
	DD	imagerel $unwind$??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clear@OposVariant@@QEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?Clear@OposVariant@@QEAAJXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?SetVARIANT_BOOL@OposVariant@@QEAAXF@Z DD imagerel $LN5
	DD	imagerel $LN5+106
	DD	imagerel $unwind$?SetVARIANT_BOOL@OposVariant@@QEAAXF@Z
$pdata$?SetVARIANT_BOOL_Ptr@OposVariant@@QEAAXPEAFAEAJ@Z DD imagerel $LN5
	DD	imagerel $LN5+104
	DD	imagerel $unwind$?SetVARIANT_BOOL_Ptr@OposVariant@@QEAAXPEAFAEAJ@Z
$pdata$?GetLONG@OposVariant@@QEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?GetLONG@OposVariant@@QEAAJXZ
$pdata$?ChangeLONG@OposVariant@@QEAAXPEAJAEAJ@Z DD imagerel $LN7
	DD	imagerel $LN7+159
	DD	imagerel $unwind$?ChangeLONG@OposVariant@@QEAAXPEAJAEAJ@Z
$pdata$?SetLONG@OposVariant@@QEAAXJ@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?SetLONG@OposVariant@@QEAAXJ@Z
$pdata$?SetLONG_Ptr@OposVariant@@QEAAXPEAJAEAJ@Z DD imagerel $LN5
	DD	imagerel $LN5+104
	DD	imagerel $unwind$?SetLONG_Ptr@OposVariant@@QEAAXPEAJAEAJ@Z
$pdata$?ChangeCURRENCY@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z DD imagerel $LN7
	DD	imagerel $LN7+157
	DD	imagerel $unwind$?ChangeCURRENCY@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z
$pdata$?SetCURRENCY@OposVariant@@QEAAXTtagCY@@@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?SetCURRENCY@OposVariant@@QEAAXTtagCY@@@Z
$pdata$?SetCURRENCY_Ptr@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z DD imagerel $LN5
	DD	imagerel $LN5+104
	DD	imagerel $unwind$?SetCURRENCY_Ptr@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z
$pdata$?ChangeBSTR@OposVariant@@QEAAXPEAPEA_WAEAJ@Z DD imagerel $LN7
	DD	imagerel $LN7+164
	DD	imagerel $unwind$?ChangeBSTR@OposVariant@@QEAAXPEAPEA_WAEAJ@Z
$pdata$?SetBSTR@OposVariant@@QEAAXPEA_WAEAJ@Z DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$?SetBSTR@OposVariant@@QEAAXPEA_WAEAJ@Z
$pdata$?SetBSTR_Copy@OposVariant@@QEAAXPEA_WAEAJ@Z DD imagerel $LN7
	DD	imagerel $LN7+168
	DD	imagerel $unwind$?SetBSTR_Copy@OposVariant@@QEAAXPEA_WAEAJ@Z
$pdata$?SetBSTR_OutPtr@OposVariant@@QEAA_NPEAPEA_WAEAJ@Z DD imagerel $LN4
	DD	imagerel $LN4+96
	DD	imagerel $unwind$?SetBSTR_OutPtr@OposVariant@@QEAA_NPEAPEA_WAEAJ@Z
$pdata$?SetBSTR_InOutPtr@OposVariant@@QEAA_NPEAPEA_WAEAJ@Z DD imagerel $LN4
	DD	imagerel $LN4+108
	DD	imagerel $unwind$?SetBSTR_InOutPtr@OposVariant@@QEAA_NPEAPEA_WAEAJ@Z
$pdata$?SetVARIANT@OposVariant@@QEAAXAEAUtagVARIANT@@GAEAJ@Z DD imagerel $LN6
	DD	imagerel $LN6+143
	DD	imagerel $unwind$?SetVARIANT@OposVariant@@QEAAXAEAUtagVARIANT@@GAEAJ@Z
$pdata$?SetVARIANT_Ptr@OposVariant@@QEAAXAEAPEAUtagVARIANT@@GAEAJ@Z DD imagerel $LN8
	DD	imagerel $LN8+166
	DD	imagerel $unwind$?SetVARIANT_Ptr@OposVariant@@QEAAXAEAPEAUtagVARIANT@@GAEAJ@Z
$pdata$?SetString@OposVariant@@QEAAXPEB_WAEAJ@Z DD imagerel $LN7
	DD	imagerel $LN7+155
	DD	imagerel $unwind$?SetString@OposVariant@@QEAAXPEB_WAEAJ@Z
$pdata$?SetDispatch_Ptr@OposVariant@@QEAAXPEAUIDispatch@@AEAJ@Z DD imagerel $LN5
	DD	imagerel $LN5+129
	DD	imagerel $unwind$?SetDispatch_Ptr@OposVariant@@QEAAXPEAUIDispatch@@AEAJ@Z
$pdata$??0OposDispParms@@QEAA@PEAVOposVariant@@H@Z DD imagerel $LN6
	DD	imagerel $LN6+258
	DD	imagerel $unwind$??0OposDispParms@@QEAA@PEAVOposVariant@@H@Z
$pdata$??1OposDispParms@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+70
	DD	imagerel $unwind$??1OposDispParms@@QEAA@XZ
pdata	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceGeneral$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceGeneral@ATL@@YAXXZ ; ATL::atlTraceGeneral$initializer$
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'm'
	DB	00H, '_', 00H, 'p', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OK@FGCLCILL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OK@FGCLCILL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 's', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'c', 00H
	DB	'o', 00H, 'l', 00H, 'l', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB 'n'
	DB	00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'n', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'm', 00H, '_', 00H, 'n'
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, ' ', 00H, 'A', 00H, 't', 00H, 'l', 00H, 'W'
	DB	00H, 'i', 00H, 'n', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'u', 00H
	DB	'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 0aH
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, ' ', 00H, 'C', 00H, 'A', 00H, 't', 00H, 'l'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'M', 00H, 'o', 00H, 'd', 00H
	DB	'u', 00H, 'l', 00H, 'e', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.28.29333\atlmfc\include\atlbase.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1OE@DGDFBHKA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@DGDFBHKA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H
	DB	's', 00H, '%', 00H, 'l', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'u', 00H, ' '
	DB	00H, '-', 00H, ' ', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'l', 00H
	DB	's', 00H, ' ', 00H, '-', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?m_nCategory@CTrace@ATL@@1IA
_DATA	SEGMENT
?m_nCategory@CTrace@ATL@@1IA DD 0ffffffffH		; ATL::CTrace::m_nCategory
_DATA	ENDS
;	COMDAT ??_C@_1OE@EFJOHFCD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@EFJOHFCD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_13COJANIEC@?$AA0@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0@ DB '0', 00H, 00H, 00H		; `string'
CONST	ENDS
CONST	SEGMENT
	ORG $+2
?GetLONG@OposVariant@@QEAAJXZ$rtcName$0 DB 06eH		; OposVariant::GetLONG
	DB	04cH
	DB	06fH
	DB	06eH
	DB	067H
	DB	00H
	ORG $+2
?GetLONG@OposVariant@@QEAAJXZ$rtcName$1 DB 068H		; OposVariant::GetLONG
	DB	072H
	DB	00H
	ORG $+1
?GetLONG@OposVariant@@QEAAJXZ$rtcVarDesc DD 044H	; OposVariant::GetLONG
	DD	04H
	DQ	FLAT:?GetLONG@OposVariant@@QEAAJXZ$rtcName$1
	DD	024H
	DD	04H
	DQ	FLAT:?GetLONG@OposVariant@@QEAAJXZ$rtcName$0
	ORG $+96
?GetLONG@OposVariant@@QEAAJXZ$rtcFrameData DD 02H	; OposVariant::GetLONG
	DD	00H
	DQ	FLAT:?GetLONG@OposVariant@@QEAAJXZ$rtcVarDesc
?ChangeLONG@OposVariant@@QEAAXPEAJAEAJ@Z$rtcName$0 DB 076H ; OposVariant::ChangeLONG
	DB	061H
	DB	072H
	DB	00H
?ChangeCURRENCY@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z$rtcName$0 DB 076H ; OposVariant::ChangeCURRENCY
	DB	061H
	DB	072H
	DB	00H
?ChangeBSTR@OposVariant@@QEAAXPEAPEA_WAEAJ@Z$rtcName$0 DB 076H ; OposVariant::ChangeBSTR
	DB	061H
	DB	072H
	DB	00H
	ORG $+4
?ChangeLONG@OposVariant@@QEAAXPEAJAEAJ@Z$rtcVarDesc DD 028H ; OposVariant::ChangeLONG
	DD	018H
	DQ	FLAT:?ChangeLONG@OposVariant@@QEAAXPEAJAEAJ@Z$rtcName$0
	ORG $+48
?ChangeLONG@OposVariant@@QEAAXPEAJAEAJ@Z$rtcFrameData DD 01H ; OposVariant::ChangeLONG
	DD	00H
	DQ	FLAT:?ChangeLONG@OposVariant@@QEAAXPEAJAEAJ@Z$rtcVarDesc
?ChangeCURRENCY@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z$rtcVarDesc DD 028H ; OposVariant::ChangeCURRENCY
	DD	018H
	DQ	FLAT:?ChangeCURRENCY@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z$rtcName$0
	ORG $+48
?ChangeCURRENCY@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z$rtcFrameData DD 01H ; OposVariant::ChangeCURRENCY
	DD	00H
	DQ	FLAT:?ChangeCURRENCY@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z$rtcVarDesc
?ChangeBSTR@OposVariant@@QEAAXPEAPEA_WAEAJ@Z$rtcVarDesc DD 028H ; OposVariant::ChangeBSTR
	DD	018H
	DQ	FLAT:?ChangeBSTR@OposVariant@@QEAAXPEAPEA_WAEAJ@Z$rtcName$0
	ORG $+48
?ChangeBSTR@OposVariant@@QEAAXPEAPEA_WAEAJ@Z$rtcFrameData DD 01H ; OposVariant::ChangeBSTR
	DD	00H
	DQ	FLAT:?ChangeBSTR@OposVariant@@QEAAXPEAPEA_WAEAJ@Z$rtcVarDesc
CONST	ENDS
xdata	SEGMENT
$unwind$?SetVARIANT_BOOL@OposVariant@@QEAAXF@Z DD 022301H
	DD	0700b520fH
$unwind$?SetVARIANT_BOOL_Ptr@OposVariant@@QEAAXPEAFAEAJ@Z DD 022801H
	DD	070103214H
$unwind$?GetLONG@OposVariant@@QEAAJXZ DD 021e01H
	DD	07006b20aH
$unwind$?ChangeLONG@OposVariant@@QEAAXPEAJAEAJ@Z DD 022801H
	DD	070109214H
$unwind$?SetLONG@OposVariant@@QEAAXJ@Z DD 022201H
	DD	0700a320eH
$unwind$?SetLONG_Ptr@OposVariant@@QEAAXPEAJAEAJ@Z DD 022801H
	DD	070103214H
$unwind$?ChangeCURRENCY@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z DD 022801H
	DD	070109214H
$unwind$?SetCURRENCY@OposVariant@@QEAAXTtagCY@@@Z DD 022301H
	DD	0700b320fH
$unwind$?SetCURRENCY_Ptr@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z DD 022801H
	DD	070103214H
$unwind$?ChangeBSTR@OposVariant@@QEAAXPEAPEA_WAEAJ@Z DD 022801H
	DD	070109214H
$unwind$?SetBSTR@OposVariant@@QEAAXPEA_WAEAJ@Z DD 022801H
	DD	070103214H
$unwind$?SetBSTR_Copy@OposVariant@@QEAAXPEA_WAEAJ@Z DD 022801H
	DD	070105214H
$unwind$?SetBSTR_OutPtr@OposVariant@@QEAA_NPEAPEA_WAEAJ@Z DD 022801H
	DD	070105214H
$unwind$?SetBSTR_InOutPtr@OposVariant@@QEAA_NPEAPEA_WAEAJ@Z DD 022801H
	DD	070103214H
$unwind$?SetVARIANT@OposVariant@@QEAAXAEAUtagVARIANT@@GAEAJ@Z DD 022e01H
	DD	07016521aH
$unwind$?SetVARIANT_Ptr@OposVariant@@QEAAXAEAPEAUtagVARIANT@@GAEAJ@Z DD 022e01H
	DD	07016521aH
$unwind$?SetString@OposVariant@@QEAAXPEB_WAEAJ@Z DD 022801H
	DD	070105214H
$unwind$?SetDispatch_Ptr@OposVariant@@QEAAXPEAUIDispatch@@AEAJ@Z DD 022801H
	DD	070103214H
$unwind$??0OposDispParms@@QEAA@PEAVOposVariant@@H@Z DD 032901H
	DD	070116215H
	DD	06010H
$unwind$??1OposDispParms@@QEAA@XZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clear@OposVariant@@QEAAJXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Estringdispid@CComTypeInfoHolder@ATL@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__F_AtlWinModule@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__E_AtlWinModule@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Term@CAtlWinModule@ATL@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CAtlWinModule@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CAtlWinModule@ATL@@QEAA@XZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__F_AtlComModule@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__E_AtlComModule@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Term@CAtlComModule@ATL@@QEAAXXZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CAtlComModule@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CAtlComModule@ATL@@QEAA@XZ DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z DD 022201H
	DD	0700a520eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CComBSTR@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Term@CComCriticalSection@ATL@@QEAAJXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Init@CComCriticalSection@ATL@@QEAAJXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CComCriticalSection@ATL@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CComCriticalSection@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_AtlRaiseException@ATL@@YAXKK@Z DD 022001H
	DD	07009320dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ DD 022f01H
	DD	07014d218H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcName$0 DB 070H ; ATL::CTraceFileAndLineInfo::operator()
	DB	06cH
	DB	065H
	DB	00H
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcName$1 DB 070H ; ATL::CTraceFileAndLineInfo::operator()
	DB	074H
	DB	072H
	DB	00H
	ORG $+8
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcVarDesc DD 058H ; ATL::CTraceFileAndLineInfo::operator()
	DD	08H
	DQ	FLAT:??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcName$0
	ORG $+96
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcFrameData DD 02H ; ATL::CTraceFileAndLineInfo::operator()
	DD	00H
	DQ	FLAT:??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CPreserveLastError@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CPreserveLastError@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcName$0 DB 06eH ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
	DB	042H
	DB	079H
	DB	074H
	DB	065H
	DB	073H
	DB	00H
	ORG $+9
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcVarDesc DD 028H ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
	DD	08H
	DQ	FLAT:?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcName$0
	ORG $+48
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcFrameData DD 01H ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
	DD	00H
	DQ	FLAT:?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z DD 022201H
	DD	0700a520eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z DD 023201H
	DD	07014f21bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcName$0 DB 077H ; ATL::CTrace::TraceV
	DB	073H
	DB	07aH
	DB	042H
	DB	075H
	DB	066H
	DB	00H
	ORG $+9
?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcVarDesc DD 058H ; ATL::CTrace::TraceV
	DD	08H
	DQ	FLAT:?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcName$0
	ORG $+48
?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcFrameData DD 01H ; ATL::CTrace::TraceV
	DD	00H
	DQ	FLAT:?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z DD 034419H
	DD	0158011bH
	DD	07014H
	DD	imagerel __GSHandlerCheck
	DD	0ab8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$0 DB 077H	; ATL::CTrace::TraceV
	DB	073H
	DB	07aH
	DB	043H
	DB	061H
	DB	074H
	DB	065H
	DB	067H
	DB	06fH
	DB	072H
	DB	079H
	DB	00H
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$1 DB 077H	; ATL::CTrace::TraceV
	DB	073H
	DB	07aH
	DB	042H
	DB	075H
	DB	066H
	DB	00H
	ORG $+5
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$2 DB 066H	; ATL::CTrace::TraceV
	DB	069H
	DB	06cH
	DB	065H
	DB	04eH
	DB	061H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+15
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcVarDesc DD 0890H ; ATL::CTrace::TraceV
	DD	0208H
	DQ	FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$2
	DD	0868H
	DD	08H
	DQ	FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$1
	DD	040H
	DD	0800H
	DQ	FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$0
	ORG $+144
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcFrameData DD 03H ; ATL::CTrace::TraceV
	DD	00H
	DQ	FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z DD 021c01H
	DD	070051209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceISAPI@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceSync@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceSecurity@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceUtil@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceMap@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceString@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceStencil@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceCache@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceTime@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceException@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceAllocation@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceNotImpl@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceSnapin@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceDBProvider@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceDBClient@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceHosting@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceControls@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceWindowing@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceRefcount@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceRegistrar@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceQI@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceCOM@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceGeneral@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Free@CCRTAllocator@ATL@@SAXPEAX@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$swprintf_s DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
swprintf_s$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
swprintf_s$rtcVarDesc DD 048H
	DD	08H
	DQ	FLAT:swprintf_s$rtcName$0
	ORG $+48
swprintf_s$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:swprintf_s$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vswprintf_s_l DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$HRESULT_FROM_WIN32 DD 021c01H
	DD	070051209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_I@YAXPEAX_K1P6AX0@Z@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCOM$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceCOM@ATL@@YAXXZ ; ATL::atlTraceCOM$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceQI$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceQI@ATL@@YAXXZ ; ATL::atlTraceQI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRegistrar$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceRegistrar@ATL@@YAXXZ ; ATL::atlTraceRegistrar$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRefcount$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceRefcount@ATL@@YAXXZ ; ATL::atlTraceRefcount$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceWindowing$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceWindowing@ATL@@YAXXZ ; ATL::atlTraceWindowing$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceControls$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceControls@ATL@@YAXXZ ; ATL::atlTraceControls$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceHosting$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceHosting@ATL@@YAXXZ ; ATL::atlTraceHosting$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBClient$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceDBClient@ATL@@YAXXZ ; ATL::atlTraceDBClient$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBProvider$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceDBProvider@ATL@@YAXXZ ; ATL::atlTraceDBProvider$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSnapin$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceSnapin@ATL@@YAXXZ ; ATL::atlTraceSnapin$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceNotImpl$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceNotImpl@ATL@@YAXXZ ; ATL::atlTraceNotImpl$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceAllocation$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceAllocation@ATL@@YAXXZ ; ATL::atlTraceAllocation$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceTime$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceTime@ATL@@YAXXZ ; ATL::atlTraceTime$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCache$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceCache@ATL@@YAXXZ ; ATL::atlTraceCache$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceStencil$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceStencil@ATL@@YAXXZ ; ATL::atlTraceStencil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceString$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceString@ATL@@YAXXZ ; ATL::atlTraceString$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceMap$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceMap@ATL@@YAXXZ ; ATL::atlTraceMap$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceUtil$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceUtil@ATL@@YAXXZ ; ATL::atlTraceUtil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSecurity$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceSecurity@ATL@@YAXXZ ; ATL::atlTraceSecurity$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSync$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceSync@ATL@@YAXXZ ; ATL::atlTraceSync$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceISAPI$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceISAPI@ATL@@YAXXZ ; ATL::atlTraceISAPI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlComModule$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__E_AtlComModule@ATL@@YAXXZ ; ATL::_AtlComModule$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlWinModule$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__E_AtlWinModule@ATL@@YAXXZ ; ATL::_AtlWinModule$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1OposDispParms@@QEAA@XZ PROC				; OposDispParms::~OposDispParms

; 427  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 428  :     // If we allocated some variables, delete them.
; 429  :     if (rgvarg)

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 17		 je	 SHORT $LN2@OposDispPa

; 430  :         delete [] rgvarg;

  00029	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00031	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00036	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0003b	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]
$LN2@OposDispPa:

; 431  : }

  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
??1OposDispParms@@QEAA@XZ ENDP				; OposDispParms::~OposDispParms
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
$T1 = 32
tv129 = 40
this$ = 80
pVars$ = 88
nVars$ = 96
??0OposDispParms@@QEAA@PEAVOposVariant@@H@Z PROC	; OposDispParms::OposDispParms

; 396  : {

$LN6:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00015	48 8b fc	 mov	 rdi, rsp
  00018	b9 0e 00 00 00	 mov	 ecx, 14
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 397  :     // Initialize the DISPPARAMS to empty.
; 398  :     rgvarg = 0;

  00029	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 399  :     rgdispidNamedArgs = 0;

  00035	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 400  :     cArgs = 0;

  00042	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00047	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [rax+16], 0

; 401  :     cNamedArgs = 0;

  0004e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00053	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [rax+20], 0

; 402  : 
; 403  :     // If some variables and we successfully allocate memory...
; 404  :     if ( nVars != 0 && ( rgvarg = new VARIANT[nVars] ) != 0 )

  0005a	83 7c 24 60 00	 cmp	 DWORD PTR nVars$[rsp], 0
  0005f	0f 84 91 00 00
	00		 je	 $LN4@OposDispPa
  00065	48 63 44 24 60	 movsxd	 rax, DWORD PTR nVars$[rsp]
  0006a	48 89 44 24 28	 mov	 QWORD PTR tv129[rsp], rax
  0006f	b8 18 00 00 00	 mov	 eax, 24
  00074	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv129[rsp]
  00079	48 f7 e1	 mul	 rcx
  0007c	48 c7 c1 ff ff
	ff ff		 mov	 rcx, -1
  00083	48 0f 40 c1	 cmovo	 rax, rcx
  00087	48 8b c8	 mov	 rcx, rax
  0008a	e8 00 00 00 00	 call	 ??_U@YAPEAX_K@Z		; operator new[]
  0008f	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00094	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00099	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0009e	48 89 08	 mov	 QWORD PTR [rax], rcx
  000a1	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  000a7	74 4d		 je	 SHORT $LN4@OposDispPa

; 405  :     {
; 406  :         // Set variable count.
; 407  :         cArgs = nVars;

  000a9	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000ae	8b 4c 24 60	 mov	 ecx, DWORD PTR nVars$[rsp]
  000b2	89 48 10	 mov	 DWORD PTR [rax+16], ecx
$LN2@OposDispPa:

; 408  :         // Copy OposVariant array elements to the VARIANT array.
; 409  :         //  - For [in] arguments, this will copy the type (VT_BOOL, VT_I4, VT_CY, VT_BSTR) and
; 410  :         //      its corresponding data. Note that for VT_BSTR, the data is a system string pointer.
; 411  :         //  - For [out] or [in,out] arguments, this will copy the type (VT_BYREF ORed with one
; 412  :         //      of the above 4 types) and the corresponding pointer to data.
; 413  :         //       * For VT_BYREF|VT_BOOL, VT_BYREF|VT_I4, and VT_BYREF|VT_CY, the pointer is to a primitive type.
; 414  :         //       * For VT_BYREF|VT_BSTR, the pointer is to a system string pointer.
; 415  :         //      If the function that is called (in a SO method or App event) changes the VARIANT,
; 416  :         //      it does so by updating the data that is pointed to -- which is the pointer that
; 417  :         //      was set by the OposVariant::Set...Ptr call.
; 418  :         // Because of the above, we must not call VariantClear on destruction of our class instance,
; 419  :         //   since that would delete the original OposVariant's data for VT_BSTR ([in]) and for
; 420  :         //   the VT_BYREF types ([out] and [in,out]).
; 421  :         while ( --nVars >= 0 )

  000b5	8b 44 24 60	 mov	 eax, DWORD PTR nVars$[rsp]
  000b9	ff c8		 dec	 eax
  000bb	89 44 24 60	 mov	 DWORD PTR nVars$[rsp], eax
  000bf	83 7c 24 60 00	 cmp	 DWORD PTR nVars$[rsp], 0
  000c4	7c 30		 jl	 SHORT $LN3@OposDispPa

; 422  :             rgvarg[nVars] = pVars[nVars];

  000c6	48 63 44 24 60	 movsxd	 rax, DWORD PTR nVars$[rsp]
  000cb	48 6b c0 20	 imul	 rax, rax, 32		; 00000020H
  000cf	48 63 4c 24 60	 movsxd	 rcx, DWORD PTR nVars$[rsp]
  000d4	48 6b c9 18	 imul	 rcx, rcx, 24
  000d8	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  000dd	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  000e0	4c 8b 44 24 58	 mov	 r8, QWORD PTR pVars$[rsp]
  000e5	48 8d 3c 0a	 lea	 rdi, QWORD PTR [rdx+rcx]
  000e9	49 8d 34 00	 lea	 rsi, QWORD PTR [r8+rax]
  000ed	b9 18 00 00 00	 mov	 ecx, 24
  000f2	f3 a4		 rep movsb
  000f4	eb bf		 jmp	 SHORT $LN2@OposDispPa
$LN3@OposDispPa:
$LN4@OposDispPa:

; 423  :     }
; 424  : }

  000f6	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000fb	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000ff	5f		 pop	 rdi
  00100	5e		 pop	 rsi
  00101	c3		 ret	 0
??0OposDispParms@@QEAA@PEAVOposVariant@@H@Z ENDP	; OposDispParms::OposDispParms
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
this$ = 48
pSrc$ = 56
hr$ = 64
?SetDispatch_Ptr@OposVariant@@QEAAXPEAUIDispatch@@AEAJ@Z PROC ; OposVariant::SetDispatch_Ptr

; 373  : {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 374  :     Clear();

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?Clear@OposVariant@@QEAAJXZ ; OposVariant::Clear

; 375  : 
; 376  :     // Validate that the parameter is not NULL.
; 377  :     if ( pSrc == 0 )

  00032	48 83 7c 24 38
	00		 cmp	 QWORD PTR pSrc$[rsp], 0
  00038	75 0d		 jne	 SHORT $LN2@SetDispatc

; 378  :         hr = E_POINTER;

  0003a	48 8b 44 24 40	 mov	 rax, QWORD PTR hr$[rsp]
  0003f	c7 00 03 40 00
	80		 mov	 DWORD PTR [rax], -2147467261 ; ffffffff80004003H
  00045	eb 34		 jmp	 SHORT $LN3@SetDispatc
$LN2@SetDispatc:

; 379  : 
; 380  :     // Set the variant, plus set flag so that the pointer is released by destructor.
; 381  :     else
; 382  :     {
; 383  :         vt = VT_DISPATCH;

  00047	b8 09 00 00 00	 mov	 eax, 9
  0004c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00051	66 89 01	 mov	 WORD PTR [rcx], ax

; 384  :         pdispVal = pSrc;

  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pSrc$[rsp]
  0005e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 385  :         pSrc->AddRef();

  00062	48 8b 44 24 38	 mov	 rax, QWORD PTR pSrc$[rsp]
  00067	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pSrc$[rsp]
  0006f	ff 50 08	 call	 QWORD PTR [rax+8]

; 386  :         _bNeedClear = true;

  00072	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00077	c6 40 18 01	 mov	 BYTE PTR [rax+24], 1
$LN3@SetDispatc:

; 387  :     }
; 388  : }

  0007b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007f	5f		 pop	 rdi
  00080	c3		 ret	 0
?SetDispatch_Ptr@OposVariant@@QEAAXPEAUIDispatch@@AEAJ@Z ENDP ; OposVariant::SetDispatch_Ptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
tv72 = 32
this$ = 64
lpszSrc$ = 72
hr$ = 80
?SetString@OposVariant@@QEAAXPEB_WAEAJ@Z PROC		; OposVariant::SetString

; 350  : {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 351  :     Clear();

  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?Clear@OposVariant@@QEAAJXZ ; OposVariant::Clear

; 352  : 
; 353  :     // Allocate a BSTR and copy source string into it.
; 354  :     bstrVal = SysAllocString(

  00032	48 83 7c 24 48
	00		 cmp	 QWORD PTR lpszSrc$[rsp], 0
  00038	74 0c		 je	 SHORT $LN5@SetString
  0003a	48 8b 44 24 48	 mov	 rax, QWORD PTR lpszSrc$[rsp]
  0003f	48 89 44 24 20	 mov	 QWORD PTR tv72[rsp], rax
  00044	eb 0c		 jmp	 SHORT $LN6@SetString
$LN5@SetString:
  00046	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG190474
  0004d	48 89 44 24 20	 mov	 QWORD PTR tv72[rsp], rax
$LN6@SetString:
  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv72[rsp]
  00057	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SysAllocString
  0005d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00062	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 355  :         lpszSrc ? lpszSrc : L"" );  // Source string, or empty string if NULL.
; 356  : 
; 357  :     // Set HRESULT if failed.
; 358  :     if ( NULL == bstrVal )

  00066	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006b	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00070	75 0d		 jne	 SHORT $LN2@SetString

; 359  :         hr = E_OUTOFMEMORY;

  00072	48 8b 44 24 50	 mov	 rax, QWORD PTR hr$[rsp]
  00077	c7 00 0e 00 07
	80		 mov	 DWORD PTR [rax], -2147024882 ; ffffffff8007000eH
  0007d	eb 16		 jmp	 SHORT $LN3@SetString
$LN2@SetString:

; 360  :     // Otherwise set variant type, plus set flag so that the BSTR is deleted by destructor.
; 361  :     else
; 362  :     {
; 363  :         vt = VT_BSTR;

  0007f	b8 08 00 00 00	 mov	 eax, 8
  00084	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00089	66 89 01	 mov	 WORD PTR [rcx], ax

; 364  :         _bNeedClear = true;

  0008c	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00091	c6 40 18 01	 mov	 BYTE PTR [rax+24], 1
$LN3@SetString:

; 365  :     }
; 366  : }

  00095	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00099	5f		 pop	 rdi
  0009a	c3		 ret	 0
?SetString@OposVariant@@QEAAXPEB_WAEAJ@Z ENDP		; OposVariant::SetString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
hrTmp$1 = 32
this$ = 64
pvar$ = 72
Type$ = 80
hr$ = 88
?SetVARIANT_Ptr@OposVariant@@QEAAXAEAPEAUtagVARIANT@@GAEAJ@Z PROC ; OposVariant::SetVARIANT_Ptr

; 323  : {

$LN8:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	66 44 89 44 24
	18		 mov	 WORD PTR [rsp+24], r8w
  0000b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00010	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00015	57		 push	 rdi
  00016	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 0c 00 00 00	 mov	 ecx, 12
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 324  :     Clear();

  0002e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ?Clear@OposVariant@@QEAAJXZ ; OposVariant::Clear

; 325  : 
; 326  :     // If type is EMPTY, then allow. Callee may set it.
; 327  :     if ( pvar->vt == VT_EMPTY )

  00038	48 8b 44 24 48	 mov	 rax, QWORD PTR pvar$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	0f b7 00	 movzx	 eax, WORD PTR [rax]
  00043	85 c0		 test	 eax, eax
  00045	75 02		 jne	 SHORT $LN2@SetVARIANT

; 328  :         ;

  00047	eb 57		 jmp	 SHORT $LN3@SetVARIANT
$LN2@SetVARIANT:

; 329  : 
; 330  :     // If type matches (ignoring the BYREF flag), then copy the variant.
; 331  :     //   Strips the BYREF if present.
; 332  :     else if ( ( pvar->vt & ~VT_BYREF ) == Type )

  00049	48 8b 44 24 48	 mov	 rax, QWORD PTR pvar$[rsp]
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00051	0f b7 00	 movzx	 eax, WORD PTR [rax]
  00054	0f ba f0 0e	 btr	 eax, 14
  00058	0f b7 4c 24 50	 movzx	 ecx, WORD PTR Type$[rsp]
  0005d	3b c1		 cmp	 eax, ecx
  0005f	75 34		 jne	 SHORT $LN4@SetVARIANT

; 333  :     {
; 334  :         HRESULT hrTmp = VariantCopyInd( this, pvar );

  00061	48 8b 44 24 48	 mov	 rax, QWORD PTR pvar$[rsp]
  00066	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00069	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_VariantCopyInd
  00074	89 44 24 20	 mov	 DWORD PTR hrTmp$1[rsp], eax

; 335  :         if ( FAILED(hrTmp) )

  00078	83 7c 24 20 00	 cmp	 DWORD PTR hrTmp$1[rsp], 0
  0007d	7d 0b		 jge	 SHORT $LN6@SetVARIANT

; 336  :             hr = hrTmp;

  0007f	48 8b 44 24 58	 mov	 rax, QWORD PTR hr$[rsp]
  00084	8b 4c 24 20	 mov	 ecx, DWORD PTR hrTmp$1[rsp]
  00088	89 08		 mov	 DWORD PTR [rax], ecx
$LN6@SetVARIANT:

; 337  :         _bNeedClear = true;

  0008a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008f	c6 40 18 01	 mov	 BYTE PTR [rax+24], 1

; 338  :     }

  00093	eb 0b		 jmp	 SHORT $LN5@SetVARIANT
$LN4@SetVARIANT:

; 339  : 
; 340  :     // If type doesn't match, then return failure.
; 341  :     else
; 342  :         hr = E_INVALIDARG;

  00095	48 8b 44 24 58	 mov	 rax, QWORD PTR hr$[rsp]
  0009a	c7 00 57 00 07
	80		 mov	 DWORD PTR [rax], -2147024809 ; ffffffff80070057H
$LN5@SetVARIANT:
$LN3@SetVARIANT:

; 343  : }

  000a0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?SetVARIANT_Ptr@OposVariant@@QEAAXAEAPEAUtagVARIANT@@GAEAJ@Z ENDP ; OposVariant::SetVARIANT_Ptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
hrTmp$1 = 32
this$ = 64
var$ = 72
Type$ = 80
hr$ = 88
?SetVARIANT@OposVariant@@QEAAXAEAUtagVARIANT@@GAEAJ@Z PROC ; OposVariant::SetVARIANT

; 305  : {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	66 44 89 44 24
	18		 mov	 WORD PTR [rsp+24], r8w
  0000b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00010	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00015	57		 push	 rdi
  00016	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 0c 00 00 00	 mov	 ecx, 12
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 306  :     Clear();

  0002e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ?Clear@OposVariant@@QEAAJXZ ; OposVariant::Clear

; 307  : 
; 308  :     // If type matches (ignoring the BYREF flag), then copy the variant.
; 309  :     //   Strips the BYREF if present.
; 310  :     if ( ( var.vt & ~VT_BYREF ) == Type )

  00038	48 8b 44 24 48	 mov	 rax, QWORD PTR var$[rsp]
  0003d	0f b7 00	 movzx	 eax, WORD PTR [rax]
  00040	0f ba f0 0e	 btr	 eax, 14
  00044	0f b7 4c 24 50	 movzx	 ecx, WORD PTR Type$[rsp]
  00049	3b c1		 cmp	 eax, ecx
  0004b	75 31		 jne	 SHORT $LN2@SetVARIANT

; 311  :     {
; 312  :         HRESULT hrTmp = VariantCopyInd( this, &var );

  0004d	48 8b 54 24 48	 mov	 rdx, QWORD PTR var$[rsp]
  00052	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00057	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_VariantCopyInd
  0005d	89 44 24 20	 mov	 DWORD PTR hrTmp$1[rsp], eax

; 313  :         if ( FAILED(hrTmp) )

  00061	83 7c 24 20 00	 cmp	 DWORD PTR hrTmp$1[rsp], 0
  00066	7d 0b		 jge	 SHORT $LN4@SetVARIANT

; 314  :             hr = hrTmp;

  00068	48 8b 44 24 58	 mov	 rax, QWORD PTR hr$[rsp]
  0006d	8b 4c 24 20	 mov	 ecx, DWORD PTR hrTmp$1[rsp]
  00071	89 08		 mov	 DWORD PTR [rax], ecx
$LN4@SetVARIANT:

; 315  :         _bNeedClear = true;

  00073	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00078	c6 40 18 01	 mov	 BYTE PTR [rax+24], 1

; 316  :     }

  0007c	eb 0b		 jmp	 SHORT $LN3@SetVARIANT
$LN2@SetVARIANT:

; 317  :     // If type doesn't match, then return failure.
; 318  :     else
; 319  :         hr = E_INVALIDARG;

  0007e	48 8b 44 24 58	 mov	 rax, QWORD PTR hr$[rsp]
  00083	c7 00 57 00 07
	80		 mov	 DWORD PTR [rax], -2147024809 ; ffffffff80070057H
$LN3@SetVARIANT:

; 320  : }

  00089	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008d	5f		 pop	 rdi
  0008e	c3		 ret	 0
?SetVARIANT@OposVariant@@QEAAXAEAUtagVARIANT@@GAEAJ@Z ENDP ; OposVariant::SetVARIANT
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
this$ = 48
pbstrSrc$ = 56
hr$ = 64
?SetBSTR_InOutPtr@OposVariant@@QEAA_NPEAPEA_WAEAJ@Z PROC ; OposVariant::SetBSTR_InOutPtr

; 284  : {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 285  :     Clear();

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?Clear@OposVariant@@QEAAJXZ ; OposVariant::Clear

; 286  : 
; 287  :     // Validate that the parameter is not NULL.
; 288  :     if ( pbstrSrc == 0 )

  00032	48 83 7c 24 38
	00		 cmp	 QWORD PTR pbstrSrc$[rsp], 0
  00038	75 0f		 jne	 SHORT $LN2@SetBSTR_In

; 289  :     {
; 290  :         hr = E_POINTER;

  0003a	48 8b 44 24 40	 mov	 rax, QWORD PTR hr$[rsp]
  0003f	c7 00 03 40 00
	80		 mov	 DWORD PTR [rax], -2147467261 ; ffffffff80004003H

; 291  :         return false;

  00045	32 c0		 xor	 al, al
  00047	eb 1d		 jmp	 SHORT $LN1@SetBSTR_In
$LN2@SetBSTR_In:

; 292  :     }
; 293  : 
; 294  :     // Set the variant.
; 295  :     vt = VT_BYREF | VT_BSTR;

  00049	b8 08 40 00 00	 mov	 eax, 16392		; 00004008H
  0004e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00053	66 89 01	 mov	 WORD PTR [rcx], ax

; 296  :     pbstrVal = pbstrSrc;

  00056	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pbstrSrc$[rsp]
  00060	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 297  :     return true;

  00064	b0 01		 mov	 al, 1
$LN1@SetBSTR_In:

; 298  : }

  00066	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006a	5f		 pop	 rdi
  0006b	c3		 ret	 0
?SetBSTR_InOutPtr@OposVariant@@QEAA_NPEAPEA_WAEAJ@Z ENDP ; OposVariant::SetBSTR_InOutPtr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
bRC$ = 32
this$ = 64
pbstrSrc$ = 72
hr$ = 80
?SetBSTR_OutPtr@OposVariant@@QEAA_NPEAPEA_WAEAJ@Z PROC	; OposVariant::SetBSTR_OutPtr

; 270  : {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 271  :     // Perform the in/out work first.
; 272  :     bool bRC = SetBSTR_InOutPtr( pbstrSrc, hr );

  00028	4c 8b 44 24 50	 mov	 r8, QWORD PTR hr$[rsp]
  0002d	48 8b 54 24 48	 mov	 rdx, QWORD PTR pbstrSrc$[rsp]
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?SetBSTR_InOutPtr@OposVariant@@QEAA_NPEAPEA_WAEAJ@Z ; OposVariant::SetBSTR_InOutPtr
  0003c	88 44 24 20	 mov	 BYTE PTR bRC$[rsp], al

; 273  : 
; 274  :     // If succeeded, then ensure that the BSTR* points to zero:
; 275  :     //   This relieves subsequent code from needing to know out vs. in/out,
; 276  :     //   so that they won't wrongly try to reallocate an out.
; 277  :     if (bRC)

  00040	0f b6 44 24 20	 movzx	 eax, BYTE PTR bRC$[rsp]
  00045	85 c0		 test	 eax, eax
  00047	74 0c		 je	 SHORT $LN2@SetBSTR_Ou

; 278  :         *pbstrSrc = 0;

  00049	48 8b 44 24 48	 mov	 rax, QWORD PTR pbstrSrc$[rsp]
  0004e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@SetBSTR_Ou:

; 279  : 
; 280  :     return bRC;

  00055	0f b6 44 24 20	 movzx	 eax, BYTE PTR bRC$[rsp]

; 281  : }

  0005a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005e	5f		 pop	 rdi
  0005f	c3		 ret	 0
?SetBSTR_OutPtr@OposVariant@@QEAA_NPEAPEA_WAEAJ@Z ENDP	; OposVariant::SetBSTR_OutPtr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
tv75 = 32
this$ = 64
bstrSrc$ = 72
hr$ = 80
?SetBSTR_Copy@OposVariant@@QEAAXPEA_WAEAJ@Z PROC	; OposVariant::SetBSTR_Copy

; 248  : {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 249  :     Clear();

  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?Clear@OposVariant@@QEAAJXZ ; OposVariant::Clear

; 250  : 
; 251  :     // Allocate a BSTR and copy source BSTR into it.
; 252  :     bstrVal = SysAllocStringLen(

  00032	48 83 7c 24 48
	00		 cmp	 QWORD PTR bstrSrc$[rsp], 0
  00038	74 0c		 je	 SHORT $LN5@SetBSTR_Co
  0003a	48 8b 44 24 48	 mov	 rax, QWORD PTR bstrSrc$[rsp]
  0003f	48 89 44 24 20	 mov	 QWORD PTR tv75[rsp], rax
  00044	eb 0c		 jmp	 SHORT $LN6@SetBSTR_Co
$LN5@SetBSTR_Co:
  00046	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG190425
  0004d	48 89 44 24 20	 mov	 QWORD PTR tv75[rsp], rax
$LN6@SetBSTR_Co:
  00052	48 8b 4c 24 48	 mov	 rcx, QWORD PTR bstrSrc$[rsp]
  00057	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SysStringLen
  0005d	8b d0		 mov	 edx, eax
  0005f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv75[rsp]
  00064	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SysAllocStringLen
  0006a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006f	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 253  :            bstrSrc ? bstrSrc : L"",     // Source string, or empty string if NULL.
; 254  :            SysStringLen(bstrSrc) );     // Length of string; will return zero if NULL.
; 255  : 
; 256  :     // Set HRESULT if failed.
; 257  :     if ( NULL == bstrVal )

  00073	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00078	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  0007d	75 0d		 jne	 SHORT $LN2@SetBSTR_Co

; 258  :         hr = E_OUTOFMEMORY;

  0007f	48 8b 44 24 50	 mov	 rax, QWORD PTR hr$[rsp]
  00084	c7 00 0e 00 07
	80		 mov	 DWORD PTR [rax], -2147024882 ; ffffffff8007000eH
  0008a	eb 16		 jmp	 SHORT $LN3@SetBSTR_Co
$LN2@SetBSTR_Co:

; 259  :     // Otherwise set variant type, plus set flag so that the BSTR is deleted by destructor.
; 260  :     else
; 261  :     {
; 262  :         vt = VT_BSTR;

  0008c	b8 08 00 00 00	 mov	 eax, 8
  00091	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00096	66 89 01	 mov	 WORD PTR [rcx], ax

; 263  :         _bNeedClear = true;

  00099	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009e	c6 40 18 01	 mov	 BYTE PTR [rax+24], 1
$LN3@SetBSTR_Co:

; 264  :     }
; 265  : }

  000a2	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a6	5f		 pop	 rdi
  000a7	c3		 ret	 0
?SetBSTR_Copy@OposVariant@@QEAAXPEA_WAEAJ@Z ENDP	; OposVariant::SetBSTR_Copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
this$ = 48
bstrSrc$ = 56
hr$ = 64
?SetBSTR@OposVariant@@QEAAXPEA_WAEAJ@Z PROC		; OposVariant::SetBSTR

; 227  : {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 228  :     // If non-NULL BSTR, then just pass BSTR in the variant.
; 229  :     //   _bNeedClear flag remains off because we are not responsible
; 230  :     //   for deleting the BSTR.
; 231  :     if ( bstrSrc != 0 )

  00028	48 83 7c 24 38
	00		 cmp	 QWORD PTR bstrSrc$[rsp], 0
  0002e	74 27		 je	 SHORT $LN2@SetBSTR

; 232  :     {
; 233  :         Clear();

  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	e8 00 00 00 00	 call	 ?Clear@OposVariant@@QEAAJXZ ; OposVariant::Clear

; 234  :         vt = VT_BSTR;

  0003a	b8 08 00 00 00	 mov	 eax, 8
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00044	66 89 01	 mov	 WORD PTR [rcx], ax

; 235  :         bstrVal = bstrSrc;

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR bstrSrc$[rsp]
  00051	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 236  :     }

  00055	eb 11		 jmp	 SHORT $LN3@SetBSTR
$LN2@SetBSTR:

; 237  : 
; 238  :     // If NULL BSTR, call function so that zero-length BSTR is passed.
; 239  :     //   This may prevent a lazy/bad service objects from causing GPF,
; 240  :     //   in case they don't check each BSTR for NULL.
; 241  :     else
; 242  :         SetBSTR_Copy( 0, hr );

  00057	4c 8b 44 24 40	 mov	 r8, QWORD PTR hr$[rsp]
  0005c	33 d2		 xor	 edx, edx
  0005e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00063	e8 00 00 00 00	 call	 ?SetBSTR_Copy@OposVariant@@QEAAXPEA_WAEAJ@Z ; OposVariant::SetBSTR_Copy
$LN3@SetBSTR:

; 243  : }

  00068	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006c	5f		 pop	 rdi
  0006d	c3		 ret	 0
?SetBSTR@OposVariant@@QEAAXPEA_WAEAJ@Z ENDP		; OposVariant::SetBSTR
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
var$4 = 40
tv75 = 72
this$ = 96
pbstrSrc$ = 104
hr$ = 112
?ChangeBSTR@OposVariant@@QEAAXPEAPEA_WAEAJ@Z PROC	; OposVariant::ChangeBSTR

; 206  : {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 207  :     // Validate that the parameter is not NULL.
; 208  :     if ( pbstrSrc == 0 )

  00028	48 83 7c 24 68
	00		 cmp	 QWORD PTR pbstrSrc$[rsp], 0
  0002e	75 0d		 jne	 SHORT $LN2@ChangeBSTR

; 209  :         hr = E_POINTER;

  00030	48 8b 44 24 70	 mov	 rax, QWORD PTR hr$[rsp]
  00035	c7 00 03 40 00
	80		 mov	 DWORD PTR [rax], -2147467261 ; ffffffff80004003H
  0003b	eb 52		 jmp	 SHORT $LN3@ChangeBSTR
$LN2@ChangeBSTR:

; 210  : 
; 211  :     // If pointer OK, set it after trying to coerce variant.
; 212  :     else
; 213  :     {
; 214  :         // Try to coerce variant to a new variant of type BSTR.
; 215  :         VARIANT var;
; 216  :         var.vt = VT_EMPTY;

  0003d	33 c0		 xor	 eax, eax
  0003f	66 89 44 24 28	 mov	 WORD PTR var$4[rsp], ax

; 217  :         hr = VariantChangeType(

  00044	66 41 b9 08 00	 mov	 r9w, 8
  00049	45 33 c0	 xor	 r8d, r8d
  0004c	48 8b 54 24 60	 mov	 rdx, QWORD PTR this$[rsp]
  00051	48 8d 4c 24 28	 lea	 rcx, QWORD PTR var$4[rsp]
  00056	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_VariantChangeType
  0005c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR hr$[rsp]
  00061	89 01		 mov	 DWORD PTR [rcx], eax

; 218  :             &var, static_cast<VARIANT*>(this), 0, VT_BSTR );
; 219  :         // If coercion was successful, then update to the BSTR; else set to NULL.
; 220  :         *pbstrSrc = ( hr == S_OK ) ? var.bstrVal : 0;

  00063	48 8b 44 24 70	 mov	 rax, QWORD PTR hr$[rsp]
  00068	83 38 00	 cmp	 DWORD PTR [rax], 0
  0006b	75 0c		 jne	 SHORT $LN5@ChangeBSTR
  0006d	48 8b 44 24 30	 mov	 rax, QWORD PTR var$4[rsp+8]
  00072	48 89 44 24 48	 mov	 QWORD PTR tv75[rsp], rax
  00077	eb 09		 jmp	 SHORT $LN6@ChangeBSTR
$LN5@ChangeBSTR:
  00079	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR tv75[rsp], 0
$LN6@ChangeBSTR:
  00082	48 8b 44 24 68	 mov	 rax, QWORD PTR pbstrSrc$[rsp]
  00087	48 8b 4c 24 48	 mov	 rcx, QWORD PTR tv75[rsp]
  0008c	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@ChangeBSTR:

; 221  :     }
; 222  : }

  0008f	48 8b cc	 mov	 rcx, rsp
  00092	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ChangeBSTR@OposVariant@@QEAAXPEAPEA_WAEAJ@Z$rtcFrameData
  00099	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0009e	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000a2	5f		 pop	 rdi
  000a3	c3		 ret	 0
?ChangeBSTR@OposVariant@@QEAAXPEAPEA_WAEAJ@Z ENDP	; OposVariant::ChangeBSTR
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
this$ = 48
pcySrc$ = 56
hr$ = 64
?SetCURRENCY_Ptr@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z PROC ; OposVariant::SetCURRENCY_Ptr

; 185  : {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 186  :     Clear();

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?Clear@OposVariant@@QEAAJXZ ; OposVariant::Clear

; 187  : 
; 188  :     // Validate that the parameter is not NULL.
; 189  :     if ( pcySrc == 0 )

  00032	48 83 7c 24 38
	00		 cmp	 QWORD PTR pcySrc$[rsp], 0
  00038	75 0d		 jne	 SHORT $LN2@SetCURRENC

; 190  :         hr = E_POINTER;

  0003a	48 8b 44 24 40	 mov	 rax, QWORD PTR hr$[rsp]
  0003f	c7 00 03 40 00
	80		 mov	 DWORD PTR [rax], -2147467261 ; ffffffff80004003H
  00045	eb 1b		 jmp	 SHORT $LN3@SetCURRENC
$LN2@SetCURRENC:

; 191  : 
; 192  :     // Set the variant.
; 193  :     else
; 194  :     {
; 195  :         vt = VT_BYREF | VT_CY;

  00047	b8 06 40 00 00	 mov	 eax, 16390		; 00004006H
  0004c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00051	66 89 01	 mov	 WORD PTR [rcx], ax

; 196  :         pcyVal = pcySrc;

  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pcySrc$[rsp]
  0005e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
$LN3@SetCURRENC:

; 197  :     }
; 198  : }

  00062	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00066	5f		 pop	 rdi
  00067	c3		 ret	 0
?SetCURRENCY_Ptr@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z ENDP ; OposVariant::SetCURRENCY_Ptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
this$ = 48
cySrc$ = 56
?SetCURRENCY@OposVariant@@QEAAXTtagCY@@@Z PROC		; OposVariant::SetCURRENCY

; 176  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 177  :     Clear();

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?Clear@OposVariant@@QEAAJXZ ; OposVariant::Clear

; 178  :     vt = VT_CY;

  0002d	b8 06 00 00 00	 mov	 eax, 6
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	66 89 01	 mov	 WORD PTR [rcx], ax

; 179  :     cyVal = cySrc;

  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cySrc$[rsp]
  00044	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 180  : }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?SetCURRENCY@OposVariant@@QEAAXTtagCY@@@Z ENDP		; OposVariant::SetCURRENCY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
var$4 = 40
this$ = 96
pcySrc$ = 104
hr$ = 112
?ChangeCURRENCY@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z PROC ; OposVariant::ChangeCURRENCY

; 152  : {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 153  :     // Validate that the parameter is not NULL.
; 154  :     if ( pcySrc == 0 )

  00028	48 83 7c 24 68
	00		 cmp	 QWORD PTR pcySrc$[rsp], 0
  0002e	75 0d		 jne	 SHORT $LN2@ChangeCURR

; 155  :         hr = E_POINTER;

  00030	48 8b 44 24 70	 mov	 rax, QWORD PTR hr$[rsp]
  00035	c7 00 03 40 00
	80		 mov	 DWORD PTR [rax], -2147467261 ; ffffffff80004003H
  0003b	eb 4b		 jmp	 SHORT $LN3@ChangeCURR
$LN2@ChangeCURR:

; 156  : 
; 157  :     // If pointer OK, set it after trying to coerce variant.
; 158  :     else
; 159  :     {
; 160  :         // Try to coerce variant to a new variant of type CURRENCY (CY).
; 161  :         VARIANT var;
; 162  :         var.vt = VT_EMPTY;

  0003d	33 c0		 xor	 eax, eax
  0003f	66 89 44 24 28	 mov	 WORD PTR var$4[rsp], ax

; 163  :         hr = VariantChangeType(

  00044	66 41 b9 06 00	 mov	 r9w, 6
  00049	45 33 c0	 xor	 r8d, r8d
  0004c	48 8b 54 24 60	 mov	 rdx, QWORD PTR this$[rsp]
  00051	48 8d 4c 24 28	 lea	 rcx, QWORD PTR var$4[rsp]
  00056	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_VariantChangeType
  0005c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR hr$[rsp]
  00061	89 01		 mov	 DWORD PTR [rcx], eax

; 164  :             &var, static_cast<VARIANT*>(this), 0, VT_CY );
; 165  :         // If coercion was successful, then update to the CURRENCY; else set to zero.
; 166  :         if ( hr == S_OK )

  00063	48 8b 44 24 70	 mov	 rax, QWORD PTR hr$[rsp]
  00068	83 38 00	 cmp	 DWORD PTR [rax], 0
  0006b	75 0f		 jne	 SHORT $LN4@ChangeCURR

; 167  :             *pcySrc = var.cyVal;

  0006d	48 8b 44 24 68	 mov	 rax, QWORD PTR pcySrc$[rsp]
  00072	48 8b 4c 24 30	 mov	 rcx, QWORD PTR var$4[rsp+8]
  00077	48 89 08	 mov	 QWORD PTR [rax], rcx
  0007a	eb 0c		 jmp	 SHORT $LN5@ChangeCURR
$LN4@ChangeCURR:

; 168  :         else
; 169  :             pcySrc->int64 = 0;

  0007c	48 8b 44 24 68	 mov	 rax, QWORD PTR pcySrc$[rsp]
  00081	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN5@ChangeCURR:
$LN3@ChangeCURR:

; 170  :     }
; 171  : }

  00088	48 8b cc	 mov	 rcx, rsp
  0008b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ChangeCURRENCY@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z$rtcFrameData
  00092	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00097	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0009b	5f		 pop	 rdi
  0009c	c3		 ret	 0
?ChangeCURRENCY@OposVariant@@QEAAXPEATtagCY@@AEAJ@Z ENDP ; OposVariant::ChangeCURRENCY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
this$ = 48
pnSrc$ = 56
hr$ = 64
?SetLONG_Ptr@OposVariant@@QEAAXPEAJAEAJ@Z PROC		; OposVariant::SetLONG_Ptr

; 132  : {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 133  :     Clear();

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?Clear@OposVariant@@QEAAJXZ ; OposVariant::Clear

; 134  : 
; 135  :     // Validate that the parameter is not NULL.
; 136  :     if ( pnSrc == 0 )

  00032	48 83 7c 24 38
	00		 cmp	 QWORD PTR pnSrc$[rsp], 0
  00038	75 0d		 jne	 SHORT $LN2@SetLONG_Pt

; 137  :         hr = E_POINTER;

  0003a	48 8b 44 24 40	 mov	 rax, QWORD PTR hr$[rsp]
  0003f	c7 00 03 40 00
	80		 mov	 DWORD PTR [rax], -2147467261 ; ffffffff80004003H
  00045	eb 1b		 jmp	 SHORT $LN3@SetLONG_Pt
$LN2@SetLONG_Pt:

; 138  : 
; 139  :     // Set the variant.
; 140  :     else
; 141  :     {
; 142  :         vt = VT_BYREF | VT_I4;

  00047	b8 03 40 00 00	 mov	 eax, 16387		; 00004003H
  0004c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00051	66 89 01	 mov	 WORD PTR [rcx], ax

; 143  :         plVal = pnSrc;

  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pnSrc$[rsp]
  0005e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
$LN3@SetLONG_Pt:

; 144  :     }
; 145  : }

  00062	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00066	5f		 pop	 rdi
  00067	c3		 ret	 0
?SetLONG_Ptr@OposVariant@@QEAAXPEAJAEAJ@Z ENDP		; OposVariant::SetLONG_Ptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
this$ = 48
nSrc$ = 56
?SetLONG@OposVariant@@QEAAXJ@Z PROC			; OposVariant::SetLONG

; 123  : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 124  :     Clear();

  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ?Clear@OposVariant@@QEAAJXZ ; OposVariant::Clear

; 125  :     vt = VT_I4;

  0002c	b8 03 00 00 00	 mov	 eax, 3
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	66 89 01	 mov	 WORD PTR [rcx], ax

; 126  :     lVal = nSrc;

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	8b 4c 24 38	 mov	 ecx, DWORD PTR nSrc$[rsp]
  00042	89 48 08	 mov	 DWORD PTR [rax+8], ecx

; 127  : }

  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
?SetLONG@OposVariant@@QEAAXJ@Z ENDP			; OposVariant::SetLONG
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
var$4 = 40
tv75 = 68
this$ = 96
pLong$ = 104
hr$ = 112
?ChangeLONG@OposVariant@@QEAAXPEAJAEAJ@Z PROC		; OposVariant::ChangeLONG

; 102  : {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 103  :     // Validate that the parameter is not NULL.
; 104  :     if ( pLong == 0 )

  00028	48 83 7c 24 68
	00		 cmp	 QWORD PTR pLong$[rsp], 0
  0002e	75 0d		 jne	 SHORT $LN2@ChangeLONG

; 105  :         hr = E_POINTER;

  00030	48 8b 44 24 70	 mov	 rax, QWORD PTR hr$[rsp]
  00035	c7 00 03 40 00
	80		 mov	 DWORD PTR [rax], -2147467261 ; ffffffff80004003H
  0003b	eb 4d		 jmp	 SHORT $LN3@ChangeLONG
$LN2@ChangeLONG:

; 106  : 
; 107  :     // If pointer OK, set it after trying to coerce variant.
; 108  :     else
; 109  :     {
; 110  :         // Try to coerce variant to a new variant of type LONG (I4).
; 111  :         VARIANT var;
; 112  :         var.vt = VT_EMPTY;

  0003d	33 c0		 xor	 eax, eax
  0003f	66 89 44 24 28	 mov	 WORD PTR var$4[rsp], ax

; 113  :         hr = VariantChangeType(

  00044	66 41 b9 03 00	 mov	 r9w, 3
  00049	45 33 c0	 xor	 r8d, r8d
  0004c	48 8b 54 24 60	 mov	 rdx, QWORD PTR this$[rsp]
  00051	48 8d 4c 24 28	 lea	 rcx, QWORD PTR var$4[rsp]
  00056	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_VariantChangeType
  0005c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR hr$[rsp]
  00061	89 01		 mov	 DWORD PTR [rcx], eax

; 114  :             &var, static_cast<VARIANT*>(this), 0, VT_I4 );
; 115  :         // If coercion was successful, then update to the LONG; else set to zero.
; 116  :         *pLong = ( hr == S_OK ) ? var.lVal : 0;

  00063	48 8b 44 24 70	 mov	 rax, QWORD PTR hr$[rsp]
  00068	83 38 00	 cmp	 DWORD PTR [rax], 0
  0006b	75 0a		 jne	 SHORT $LN5@ChangeLONG
  0006d	8b 44 24 30	 mov	 eax, DWORD PTR var$4[rsp+8]
  00071	89 44 24 44	 mov	 DWORD PTR tv75[rsp], eax
  00075	eb 08		 jmp	 SHORT $LN6@ChangeLONG
$LN5@ChangeLONG:
  00077	c7 44 24 44 00
	00 00 00	 mov	 DWORD PTR tv75[rsp], 0
$LN6@ChangeLONG:
  0007f	48 8b 44 24 68	 mov	 rax, QWORD PTR pLong$[rsp]
  00084	8b 4c 24 44	 mov	 ecx, DWORD PTR tv75[rsp]
  00088	89 08		 mov	 DWORD PTR [rax], ecx
$LN3@ChangeLONG:

; 117  :     }
; 118  : }

  0008a	48 8b cc	 mov	 rcx, rsp
  0008d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ChangeLONG@OposVariant@@QEAAXPEAJAEAJ@Z$rtcFrameData
  00094	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00099	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0009d	5f		 pop	 rdi
  0009e	c3		 ret	 0
?ChangeLONG@OposVariant@@QEAAXPEAJAEAJ@Z ENDP		; OposVariant::ChangeLONG
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
nLong$ = 36
hr$ = 68
this$ = 112
?GetLONG@OposVariant@@QEAAJXZ PROC			; OposVariant::GetLONG

; 92   : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 18 00 00 00	 mov	 ecx, 24
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 93   :     LONG nLong = 0;

  0001e	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR nLong$[rsp], 0

; 94   :     HRESULT hr;
; 95   :     ChangeLONG( &nLong, hr );

  00026	4c 8d 44 24 44	 lea	 r8, QWORD PTR hr$[rsp]
  0002b	48 8d 54 24 24	 lea	 rdx, QWORD PTR nLong$[rsp]
  00030	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00035	e8 00 00 00 00	 call	 ?ChangeLONG@OposVariant@@QEAAXPEAJAEAJ@Z ; OposVariant::ChangeLONG

; 96   :     return nLong;

  0003a	8b 44 24 24	 mov	 eax, DWORD PTR nLong$[rsp]

; 97   : }

  0003e	8b f8		 mov	 edi, eax
  00040	48 8b cc	 mov	 rcx, rsp
  00043	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?GetLONG@OposVariant@@QEAAJXZ$rtcFrameData
  0004a	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0004f	8b c7		 mov	 eax, edi
  00051	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?GetLONG@OposVariant@@QEAAJXZ ENDP			; OposVariant::GetLONG
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
this$ = 48
pbSrc$ = 56
hr$ = 64
?SetVARIANT_BOOL_Ptr@OposVariant@@QEAAXPEAFAEAJ@Z PROC	; OposVariant::SetVARIANT_BOOL_Ptr

; 72   : {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 73   :     Clear();

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?Clear@OposVariant@@QEAAJXZ ; OposVariant::Clear

; 74   : 
; 75   :     // Validate that the parameter is not NULL.
; 76   :     if ( pbSrc == 0 )

  00032	48 83 7c 24 38
	00		 cmp	 QWORD PTR pbSrc$[rsp], 0
  00038	75 0d		 jne	 SHORT $LN2@SetVARIANT

; 77   :         hr = E_POINTER;

  0003a	48 8b 44 24 40	 mov	 rax, QWORD PTR hr$[rsp]
  0003f	c7 00 03 40 00
	80		 mov	 DWORD PTR [rax], -2147467261 ; ffffffff80004003H
  00045	eb 1b		 jmp	 SHORT $LN3@SetVARIANT
$LN2@SetVARIANT:

; 78   : 
; 79   :     // Set the variant.
; 80   :     else
; 81   :     {
; 82   :         vt = VT_BYREF | VT_BOOL;

  00047	b8 0b 40 00 00	 mov	 eax, 16395		; 0000400bH
  0004c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00051	66 89 01	 mov	 WORD PTR [rcx], ax

; 83   :         pboolVal = pbSrc;

  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pbSrc$[rsp]
  0005e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
$LN3@SetVARIANT:

; 84   :     }
; 85   : }

  00062	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00066	5f		 pop	 rdi
  00067	c3		 ret	 0
?SetVARIANT_BOOL_Ptr@OposVariant@@QEAAXPEAFAEAJ@Z ENDP	; OposVariant::SetVARIANT_BOOL_Ptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.cpp
_TEXT	SEGMENT
tv77 = 32
this$ = 64
bSrc$ = 72
?SetVARIANT_BOOL@OposVariant@@QEAAXF@Z PROC		; OposVariant::SetVARIANT_BOOL

; 63   : {

$LN5:
  00000	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 64   :     Clear();

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?Clear@OposVariant@@QEAAJXZ ; OposVariant::Clear

; 65   :     vt = VT_BOOL;

  0002d	b8 0b 00 00 00	 mov	 eax, 11
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	66 89 01	 mov	 WORD PTR [rcx], ax

; 66   :     boolVal = bSrc ? VARIANT_TRUE : VARIANT_FALSE;

  0003a	0f bf 44 24 48	 movsx	 eax, WORD PTR bSrc$[rsp]
  0003f	85 c0		 test	 eax, eax
  00041	74 0c		 je	 SHORT $LN3@SetVARIANT
  00043	b8 ff ff ff ff	 mov	 eax, -1
  00048	66 89 44 24 20	 mov	 WORD PTR tv77[rsp], ax
  0004d	eb 07		 jmp	 SHORT $LN4@SetVARIANT
$LN3@SetVARIANT:
  0004f	33 c0		 xor	 eax, eax
  00051	66 89 44 24 20	 mov	 WORD PTR tv77[rsp], ax
$LN4@SetVARIANT:
  00056	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005b	0f b7 4c 24 20	 movzx	 ecx, WORD PTR tv77[rsp]
  00060	66 89 48 08	 mov	 WORD PTR [rax+8], cx

; 67   : }

  00064	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00068	5f		 pop	 rdi
  00069	c3		 ret	 0
?SetVARIANT_BOOL@OposVariant@@QEAAXF@Z ENDP		; OposVariant::SetVARIANT_BOOL
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.h
;	COMDAT ?Clear@OposVariant@@QEAAJXZ
_TEXT	SEGMENT
this$ = 48
?Clear@OposVariant@@QEAAJXZ PROC			; OposVariant::Clear, COMDAT

; 79   :     HRESULT Clear() { _bNeedClear = false; return VariantClear(this); }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	c6 40 18 00	 mov	 BYTE PTR [rax+24], 0
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_VariantClear
  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?Clear@OposVariant@@QEAAJXZ ENDP			; OposVariant::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z
_TEXT	SEGMENT
ptResult$ = 48
tLeft$ = 56
tRight$ = 64
??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z PROC		; ATL::AtlMultiply<unsigned __int64>, COMDAT

; 99   : {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 100  : 	/* avoid divide 0 */
; 101  : 	if(tLeft==0)

  00028	48 83 7c 24 38
	00		 cmp	 QWORD PTR tLeft$[rsp], 0
  0002e	75 10		 jne	 SHORT $LN2@AtlMultipl

; 102  : 	{
; 103  : 		*ptResult=0;

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR ptResult$[rsp]
  00035	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 104  : 		return S_OK;

  0003c	33 c0		 xor	 eax, eax
  0003e	eb 36		 jmp	 SHORT $LN1@AtlMultipl
$LN2@AtlMultipl:

; 105  : 	}
; 106  : 	if(::ATL::AtlLimits<T>::_Max/tLeft < tRight)

  00040	33 d2		 xor	 edx, edx
  00042	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  00049	48 f7 74 24 38	 div	 QWORD PTR tLeft$[rsp]
  0004e	48 3b 44 24 40	 cmp	 rax, QWORD PTR tRight$[rsp]
  00053	73 0c		 jae	 SHORT $LN3@AtlMultipl

; 107  : 	{
; 108  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  00055	b9 16 02 00 00	 mov	 ecx, 534		; 00000216H
  0005a	e8 00 00 00 00	 call	 HRESULT_FROM_WIN32
  0005f	eb 15		 jmp	 SHORT $LN1@AtlMultipl
$LN3@AtlMultipl:

; 109  : 	}
; 110  : 	*ptResult= tLeft * tRight;

  00061	48 8b 44 24 38	 mov	 rax, QWORD PTR tLeft$[rsp]
  00066	48 0f af 44 24
	40		 imul	 rax, QWORD PTR tRight$[rsp]
  0006c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR ptResult$[rsp]
  00071	48 89 01	 mov	 QWORD PTR [rcx], rax

; 111  : 	return S_OK;

  00074	33 c0		 xor	 eax, eax
$LN1@AtlMultipl:

; 112  : }

  00076	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007a	5f		 pop	 rdi
  0007b	c3		 ret	 0
??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z ENDP		; ATL::AtlMultiply<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Estringdispid@CComTypeInfoHolder@ATL@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Estringdispid@CComTypeInfoHolder@ATL@@QEAAPEAXI@Z PROC ; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor', COMDAT
$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00026	83 e0 02	 and	 eax, 2
  00029	85 c0		 test	 eax, eax
  0002b	74 54		 je	 SHORT $LN2@vector
  0002d	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ
  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00039	4c 8b 40 f8	 mov	 r8, QWORD PTR [rax-8]
  0003d	ba 10 00 00 00	 mov	 edx, 16
  00042	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ??_I@YAXPEAX_K1P6AX0@Z@Z
  0004c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00050	83 e0 01	 and	 eax, 1
  00053	85 c0		 test	 eax, eax
  00055	74 1f		 je	 SHORT $LN3@vector
  00057	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 6b 40 f8 10	 imul	 rax, QWORD PTR [rax-8], 16
  00061	48 83 c0 08	 add	 rax, 8
  00065	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0006a	48 83 e9 08	 sub	 rcx, 8
  0006e	48 8b d0	 mov	 rdx, rax
  00071	e8 00 00 00 00	 call	 ??_V@YAXPEAX_K@Z	; operator delete[]
$LN3@vector:
  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0007b	48 83 e8 08	 sub	 rax, 8
  0007f	eb 29		 jmp	 SHORT $LN1@vector
$LN2@vector:
  00081	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00086	e8 00 00 00 00	 call	 ??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ
  0008b	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0008f	83 e0 01	 and	 eax, 1
  00092	85 c0		 test	 eax, eax
  00094	74 0f		 je	 SHORT $LN4@vector
  00096	ba 10 00 00 00	 mov	 edx, 16
  0009b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  000a0	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN4@vector:
  000a5	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
$LN1@vector:
  000aa	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000ae	5f		 pop	 rdi
  000af	c3		 ret	 0
??_Estringdispid@CComTypeInfoHolder@ATL@@QEAAPEAXI@Z ENDP ; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ PROC	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QEAA@XZ ; ATL::CComBSTR::~CComBSTR
  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ ENDP	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F_AtlWinModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlWinModule'', COMDAT
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  0001c	e8 00 00 00 00	 call	 ??1CAtlWinModule@ATL@@QEAA@XZ ; ATL::CAtlWinModule::~CAtlWinModule
  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
??__F_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlWinModule''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlWinModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlWinModule'', COMDAT

; 2972 : __declspec(selectany) CAtlWinModule _AtlWinModule;

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  0001c	e8 00 00 00 00	 call	 ??0CAtlWinModule@ATL@@QEAA@XZ ; ATL::CAtlWinModule::CAtlWinModule
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__F_AtlWinModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlWinModule''
  00028	e8 00 00 00 00	 call	 atexit
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??__E_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlWinModule''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlWinModule@ATL@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Term@CAtlWinModule@ATL@@QEAAXXZ PROC			; ATL::CAtlWinModule::Term, COMDAT

; 2956 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2957 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A ; ATL::_AtlBaseModule
  00025	e8 00 00 00 00	 call	 ?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
  0002a	48 8b d0	 mov	 rdx, rax
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm

; 2958 : 	}

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
?Term@CAtlWinModule@ATL@@QEAAXXZ ENDP			; ATL::CAtlWinModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlWinModule@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CAtlWinModule@ATL@@QEAA@XZ PROC			; ATL::CAtlWinModule::~CAtlWinModule, COMDAT

; 2951 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2952 : 		Term();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?Term@CAtlWinModule@ATL@@QEAAXXZ ; ATL::CAtlWinModule::Term

; 2953 : 	}

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??1CAtlWinModule@ATL@@QEAA@XZ ENDP			; ATL::CAtlWinModule::~CAtlWinModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlWinModule@ATL@@QEAA@XZ
_TEXT	SEGMENT
hr$ = 48
this$ = 80
??0CAtlWinModule@ATL@@QEAA@XZ PROC			; ATL::CAtlWinModule::CAtlWinModule, COMDAT

; 2937 : 	CAtlWinModule()

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ

; 2938 : 	{
; 2939 : 		cbSize = sizeof(_ATL_WIN_MODULE);

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0002d	c7 00 48 00 00
	00		 mov	 DWORD PTR [rax], 72	; 00000048H

; 2940 : 		HRESULT hr = AtlWinModuleInit(this);

  00033	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00038	e8 00 00 00 00	 call	 ?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
  0003d	89 44 24 30	 mov	 DWORD PTR hr$[rsp], eax

; 2941 : 		if (FAILED(hr))

  00041	83 7c 24 30 00	 cmp	 DWORD PTR hr$[rsp], 0
  00046	7d 52		 jge	 SHORT $LN2@CAtlWinMod

; 2942 : 		{
; 2943 : 			ATLASSERT(0);

  00048	33 c0		 xor	 eax, eax
  0004a	85 c0		 test	 eax, eax
  0004c	75 3a		 jne	 SHORT $LN4@CAtlWinMod
  0004e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
  00055	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00061	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00066	45 33 c9	 xor	 r9d, r9d
  00069	41 b8 7f 0b 00
	00		 mov	 r8d, 2943		; 00000b7fH
  0006f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00076	b9 02 00 00 00	 mov	 ecx, 2
  0007b	e8 00 00 00 00	 call	 _CrtDbgReportW
  00080	83 f8 01	 cmp	 eax, 1
  00083	75 03		 jne	 SHORT $LN4@CAtlWinMod
  00085	cc		 int	 3
  00086	33 c0		 xor	 eax, eax
$LN4@CAtlWinMod:

; 2944 : 			CAtlBaseModule::m_bInitFailed = true;

  00088	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2945 : 			cbSize = 0;

  0008f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00094	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN2@CAtlWinMod:

; 2946 : 			return;
; 2947 : 		}
; 2948 : 	}

  0009a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0009f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a3	5f		 pop	 rdi
  000a4	c3		 ret	 0
??0CAtlWinModule@ATL@@QEAA@XZ ENDP			; ATL::CAtlWinModule::CAtlWinModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F_AtlComModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlComModule'', COMDAT
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  0001c	e8 00 00 00 00	 call	 ??1CAtlComModule@ATL@@QEAA@XZ ; ATL::CAtlComModule::~CAtlComModule
  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
??__F_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlComModule''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlComModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlComModule'', COMDAT

; 2716 : __declspec(selectany) CAtlComModule _AtlComModule;

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  0001c	e8 00 00 00 00	 call	 ??0CAtlComModule@ATL@@QEAA@XZ ; ATL::CAtlComModule::CAtlComModule
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__F_AtlComModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlComModule''
  00028	e8 00 00 00 00	 call	 atexit
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??__E_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlComModule''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlComModule@ATL@@QEAAXXZ
_TEXT	SEGMENT
ppEntry$1 = 32
pCache$2 = 40
factory$3 = 48
this$ = 80
?Term@CAtlComModule@ATL@@QEAAXXZ PROC			; ATL::CAtlComModule::Term, COMDAT

; 2613 : 	{

$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 2614 : 		if (cbSize == 0)

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	83 38 00	 cmp	 DWORD PTR [rax], 0
  00026	75 05		 jne	 SHORT $LN5@Term

; 2615 : 			return;

  00028	e9 a2 00 00 00	 jmp	 $LN1@Term
$LN5@Term:

; 2616 : 
; 2617 : 		for (_ATL_OBJMAP_ENTRY_EX** ppEntry = m_ppAutoObjMapFirst; ppEntry < m_ppAutoObjMapLast; ppEntry++)

  0002d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00036	48 89 44 24 20	 mov	 QWORD PTR ppEntry$1[rsp], rax
  0003b	eb 0e		 jmp	 SHORT $LN4@Term
$LN2@Term:
  0003d	48 8b 44 24 20	 mov	 rax, QWORD PTR ppEntry$1[rsp]
  00042	48 83 c0 08	 add	 rax, 8
  00046	48 89 44 24 20	 mov	 QWORD PTR ppEntry$1[rsp], rax
$LN4@Term:
  0004b	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00054	48 39 44 24 20	 cmp	 QWORD PTR ppEntry$1[rsp], rax
  00059	73 58		 jae	 SHORT $LN3@Term

; 2618 : 		{
; 2619 : 			if (*ppEntry != NULL)

  0005b	48 8b 44 24 20	 mov	 rax, QWORD PTR ppEntry$1[rsp]
  00060	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00064	74 4b		 je	 SHORT $LN6@Term

; 2620 : 			{
; 2621 : 				_ATL_OBJMAP_CACHE* pCache = (**ppEntry).pCache;

  00066	48 8b 44 24 20	 mov	 rax, QWORD PTR ppEntry$1[rsp]
  0006b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006e	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00072	48 89 44 24 28	 mov	 QWORD PTR pCache$2[rsp], rax

; 2622 : 
; 2623 : 				if (pCache->pCF != NULL)

  00077	48 8b 44 24 28	 mov	 rax, QWORD PTR pCache$2[rsp]
  0007c	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00080	74 2f		 je	 SHORT $LN7@Term

; 2624 : 				{
; 2625 : 					// Decode factory pointer if it's not null
; 2626 : 					IUnknown *factory = reinterpret_cast<IUnknown*>(::DecodePointer(pCache->pCF));

  00082	48 8b 44 24 28	 mov	 rax, QWORD PTR pCache$2[rsp]
  00087	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0008a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DecodePointer
  00090	48 89 44 24 30	 mov	 QWORD PTR factory$3[rsp], rax

; 2627 : 					_Analysis_assume_(factory != nullptr);
; 2628 : 					factory->Release();

  00095	48 8b 44 24 30	 mov	 rax, QWORD PTR factory$3[rsp]
  0009a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR factory$3[rsp]
  000a2	ff 50 10	 call	 QWORD PTR [rax+16]

; 2629 : 					pCache->pCF = NULL;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR pCache$2[rsp]
  000aa	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN7@Term:
$LN6@Term:

; 2630 : 				}
; 2631 : 			}
; 2632 : 		}

  000b1	eb 8a		 jmp	 SHORT $LN2@Term
$LN3@Term:

; 2633 : 		m_csObjMap.Term();

  000b3	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000b8	48 83 c0 20	 add	 rax, 32			; 00000020H
  000bc	48 8b c8	 mov	 rcx, rax
  000bf	e8 00 00 00 00	 call	 ?Term@CComCriticalSection@ATL@@QEAAJXZ ; ATL::CComCriticalSection::Term

; 2634 : 		// Set to 0 to indicate that this function has been called
; 2635 : 		// At this point no one should be concerned about cbsize
; 2636 : 		// having the correct value
; 2637 : 		cbSize = 0;

  000c4	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000c9	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN1@Term:

; 2638 : 	}

  000cf	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d3	5f		 pop	 rdi
  000d4	c3		 ret	 0
?Term@CAtlComModule@ATL@@QEAAXXZ ENDP			; ATL::CAtlComModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlComModule@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CAtlComModule@ATL@@QEAA@XZ PROC			; ATL::CAtlComModule::~CAtlComModule, COMDAT

; 2607 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2608 : 		Term();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?Term@CAtlComModule@ATL@@QEAAXXZ ; ATL::CAtlComModule::Term

; 2609 : 	}

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??1CAtlComModule@ATL@@QEAA@XZ ENDP			; ATL::CAtlComModule::~CAtlComModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlComModule@ATL@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 48
tv144 = 64
this$ = 96
??0CAtlComModule@ATL@@QEAA@XZ PROC			; ATL::CAtlComModule::CAtlComModule, COMDAT

; 2586 : 	CAtlComModule() throw()

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_ATL_COM_MODULE70@ATL@@QEAA@XZ

; 2587 : 	{
; 2588 : 		cbSize = 0;

  00028	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0002d	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 2589 : 
; 2590 : 		m_hInstTypeLib = reinterpret_cast<HINSTANCE>(&__ImageBase);

  00033	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__ImageBase
  0003f	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 2591 : 
; 2592 : 		m_ppAutoObjMapFirst = &__pobjMapEntryFirst + 1;

  00043	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:__pobjMapEntryFirst
  0004a	48 83 c0 08	 add	 rax, 8
  0004e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00053	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 2593 : 		m_ppAutoObjMapLast = &__pobjMapEntryLast;

  00057	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__pobjMapEntryLast
  00063	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2594 : 
; 2595 : 		if (FAILED(m_csObjMap.Init()))

  00067	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0006c	48 83 c0 20	 add	 rax, 32			; 00000020H
  00070	48 8b c8	 mov	 rcx, rax
  00073	e8 00 00 00 00	 call	 ?Init@CComCriticalSection@ATL@@QEAAJXZ ; ATL::CComCriticalSection::Init
  00078	85 c0		 test	 eax, eax
  0007a	0f 8d 88 00 00
	00		 jge	 $LN2@CAtlComMod

; 2596 : 		{
; 2597 : 			ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to initialize critical section in CAtlComModule\n"));

  00080	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00087	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  0008c	89 44 24 40	 mov	 DWORD PTR tv144[rsp], eax
  00090	41 b8 25 0a 00
	00		 mov	 r8d, 2597		; 00000a25H
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0009d	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T1[rsp]
  000a2	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000a7	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
  000ae	45 33 c0	 xor	 r8d, r8d
  000b1	8b 4c 24 40	 mov	 ecx, DWORD PTR tv144[rsp]
  000b5	8b d1		 mov	 edx, ecx
  000b7	48 8b c8	 mov	 rcx, rax
  000ba	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ ; ATL::CTraceFileAndLineInfo::operator()

; 2598 : 			ATLASSERT(0);

  000bf	33 c0		 xor	 eax, eax
  000c1	85 c0		 test	 eax, eax
  000c3	75 3a		 jne	 SHORT $LN4@CAtlComMod
  000c5	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
  000cc	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000d1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000d8	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000dd	45 33 c9	 xor	 r9d, r9d
  000e0	41 b8 26 0a 00
	00		 mov	 r8d, 2598		; 00000a26H
  000e6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000ed	b9 02 00 00 00	 mov	 ecx, 2
  000f2	e8 00 00 00 00	 call	 _CrtDbgReportW
  000f7	83 f8 01	 cmp	 eax, 1
  000fa	75 03		 jne	 SHORT $LN4@CAtlComMod
  000fc	cc		 int	 3
  000fd	33 c0		 xor	 eax, eax
$LN4@CAtlComMod:

; 2599 : 			CAtlBaseModule::m_bInitFailed = true;

  000ff	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2600 : 			return;

  00106	eb 0b		 jmp	 SHORT $LN1@CAtlComMod
$LN2@CAtlComMod:

; 2601 : 		}
; 2602 : 		// Set cbSize on success.
; 2603 : 		cbSize = sizeof(_ATL_COM_MODULE);

  00108	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0010d	c7 00 48 00 00
	00		 mov	 DWORD PTR [rax], 72	; 00000048H
$LN1@CAtlComMod:

; 2604 : 	}

  00113	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00118	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0011c	5f		 pop	 rdi
  0011d	c3		 ret	 0
??0CAtlComModule@ATL@@QEAA@XZ ENDP			; ATL::CAtlComModule::CAtlComModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z
_TEXT	SEGMENT
i$1 = 32
pWinModule$ = 64
hInst$ = 72
?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z PROC ; ATL::AtlWinModuleTerm, COMDAT

; 7652 : {

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 7653 : 	if (pWinModule == NULL)

  00023	48 83 7c 24 40
	00		 cmp	 QWORD PTR pWinModule$[rsp], 0
  00029	75 0a		 jne	 SHORT $LN5@AtlWinModu

; 7654 : 		return E_INVALIDARG;

  0002b	b8 57 00 07 80	 mov	 eax, -2147024809	; ffffffff80070057H
  00030	e9 a9 00 00 00	 jmp	 $LN1@AtlWinModu
$LN5@AtlWinModu:

; 7655 : 	if (pWinModule->cbSize == 0)

  00035	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  0003a	83 38 00	 cmp	 DWORD PTR [rax], 0
  0003d	75 07		 jne	 SHORT $LN6@AtlWinModu

; 7656 : 		return S_OK;

  0003f	33 c0		 xor	 eax, eax
  00041	e9 98 00 00 00	 jmp	 $LN1@AtlWinModu
$LN6@AtlWinModu:

; 7657 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

  00046	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  0004b	8b 00		 mov	 eax, DWORD PTR [rax]
  0004d	48 83 f8 48	 cmp	 rax, 72			; 00000048H
  00051	74 0a		 je	 SHORT $LN7@AtlWinModu

; 7658 : 		return E_INVALIDARG;

  00053	b8 57 00 07 80	 mov	 eax, -2147024809	; ffffffff80070057H
  00058	e9 81 00 00 00	 jmp	 $LN1@AtlWinModu
$LN7@AtlWinModu:

; 7659 : 
; 7660 : 	for (int i = 0; i < pWinModule->m_rgWindowClassAtoms.GetSize(); i++)

  0005d	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  00065	eb 0a		 jmp	 SHORT $LN4@AtlWinModu
$LN2@AtlWinModu:
  00067	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  0006b	ff c0		 inc	 eax
  0006d	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@AtlWinModu:
  00071	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  00076	48 83 c0 38	 add	 rax, 56			; 00000038H
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
  00082	39 44 24 20	 cmp	 DWORD PTR i$1[rsp], eax
  00086	7d 27		 jge	 SHORT $LN3@AtlWinModu

; 7661 : 		UnregisterClass((LPCTSTR)pWinModule->m_rgWindowClassAtoms[i], hInst);

  00088	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  0008d	48 83 c0 38	 add	 rax, 56			; 00000038H
  00091	8b 54 24 20	 mov	 edx, DWORD PTR i$1[rsp]
  00095	48 8b c8	 mov	 rcx, rax
  00098	e8 00 00 00 00	 call	 ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
  0009d	0f b7 00	 movzx	 eax, WORD PTR [rax]
  000a0	48 8b 54 24 48	 mov	 rdx, QWORD PTR hInst$[rsp]
  000a5	8b c8		 mov	 ecx, eax
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_UnregisterClassW
  000ad	eb b8		 jmp	 SHORT $LN2@AtlWinModu
$LN3@AtlWinModu:

; 7662 : 	pWinModule->m_rgWindowClassAtoms.RemoveAll();

  000af	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  000b4	48 83 c0 38	 add	 rax, 56			; 00000038H
  000b8	48 8b c8	 mov	 rcx, rax
  000bb	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll

; 7663 : 	pWinModule->m_csWindowCreate.Term();

  000c0	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  000c5	48 83 c0 08	 add	 rax, 8
  000c9	48 8b c8	 mov	 rcx, rax
  000cc	e8 00 00 00 00	 call	 ?Term@CComCriticalSection@ATL@@QEAAJXZ ; ATL::CComCriticalSection::Term

; 7664 : 	pWinModule->cbSize = 0;

  000d1	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  000d6	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 7665 : 	return S_OK;

  000dc	33 c0		 xor	 eax, eax
$LN1@AtlWinModu:

; 7666 : }

  000de	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000e2	5f		 pop	 rdi
  000e3	c3		 ret	 0
?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z ENDP ; ATL::AtlWinModuleTerm
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z
_TEXT	SEGMENT
hr$ = 48
$T1 = 56
tv81 = 72
pWinModule$ = 96
?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z PROC ; ATL::AtlWinModuleInit, COMDAT

; 8396 : {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 8397 : 	if (pWinModule == NULL)

  0001e	48 83 7c 24 60
	00		 cmp	 QWORD PTR pWinModule$[rsp], 0
  00024	75 0a		 jne	 SHORT $LN2@AtlWinModu

; 8398 : 		return E_INVALIDARG;

  00026	b8 57 00 07 80	 mov	 eax, -2147024809	; ffffffff80070057H
  0002b	e9 c3 00 00 00	 jmp	 $LN1@AtlWinModu
$LN2@AtlWinModu:

; 8399 : 
; 8400 : 	// check only in the DLL
; 8401 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

  00030	48 8b 44 24 60	 mov	 rax, QWORD PTR pWinModule$[rsp]
  00035	8b 00		 mov	 eax, DWORD PTR [rax]
  00037	48 83 f8 48	 cmp	 rax, 72			; 00000048H
  0003b	74 0a		 je	 SHORT $LN3@AtlWinModu

; 8402 : 		return E_INVALIDARG;

  0003d	b8 57 00 07 80	 mov	 eax, -2147024809	; ffffffff80070057H
  00042	e9 ac 00 00 00	 jmp	 $LN1@AtlWinModu
$LN3@AtlWinModu:

; 8403 : 
; 8404 : 	pWinModule->m_pCreateWndList = NULL;

  00047	48 8b 44 24 60	 mov	 rax, QWORD PTR pWinModule$[rsp]
  0004c	48 c7 40 30 00
	00 00 00	 mov	 QWORD PTR [rax+48], 0

; 8405 : 
; 8406 : 	HRESULT hr = pWinModule->m_csWindowCreate.Init();

  00054	48 8b 44 24 60	 mov	 rax, QWORD PTR pWinModule$[rsp]
  00059	48 83 c0 08	 add	 rax, 8
  0005d	48 8b c8	 mov	 rcx, rax
  00060	e8 00 00 00 00	 call	 ?Init@CComCriticalSection@ATL@@QEAAJXZ ; ATL::CComCriticalSection::Init
  00065	89 44 24 30	 mov	 DWORD PTR hr$[rsp], eax

; 8407 : 	if (FAILED(hr))

  00069	83 7c 24 30 00	 cmp	 DWORD PTR hr$[rsp], 0
  0006e	7d 7f		 jge	 SHORT $LN4@AtlWinModu

; 8408 : 	{
; 8409 : 		ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Unable to initialize critical section in AtlWinModuleInit\n"));

  00070	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  00077	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ ; ATL::CTraceCategoryEx<32,0>::operator unsigned int
  0007c	89 44 24 48	 mov	 DWORD PTR tv81[rsp], eax
  00080	41 b8 d9 20 00
	00		 mov	 r8d, 8409		; 000020d9H
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0008d	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T1[rsp]
  00092	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00097	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
  0009e	45 33 c0	 xor	 r8d, r8d
  000a1	8b 4c 24 48	 mov	 ecx, DWORD PTR tv81[rsp]
  000a5	8b d1		 mov	 edx, ecx
  000a7	48 8b c8	 mov	 rcx, rax
  000aa	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ ; ATL::CTraceFileAndLineInfo::operator()

; 8410 : 		ATLASSERT(0);

  000af	33 c0		 xor	 eax, eax
  000b1	85 c0		 test	 eax, eax
  000b3	75 3a		 jne	 SHORT $LN6@AtlWinModu
  000b5	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
  000bc	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000c1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000c8	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000cd	45 33 c9	 xor	 r9d, r9d
  000d0	41 b8 da 20 00
	00		 mov	 r8d, 8410		; 000020daH
  000d6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000dd	b9 02 00 00 00	 mov	 ecx, 2
  000e2	e8 00 00 00 00	 call	 _CrtDbgReportW
  000e7	83 f8 01	 cmp	 eax, 1
  000ea	75 03		 jne	 SHORT $LN6@AtlWinModu
  000ec	cc		 int	 3
  000ed	33 c0		 xor	 eax, eax
$LN6@AtlWinModu:
$LN4@AtlWinModu:

; 8411 : 	}
; 8412 : 	return hr;

  000ef	8b 44 24 30	 mov	 eax, DWORD PTR hr$[rsp]
$LN1@AtlWinModu:

; 8413 : }

  000f3	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000f7	5f		 pop	 rdi
  000f8	c3		 ret	 0
?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z ENDP ; ATL::AtlWinModuleInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ PROC			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 38	 add	 rax, 56			; 00000038H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 83 c0 08	 add	 rax, 8
  00038	48 8b c8	 mov	 rcx, rax
  0003b	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00040	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ ENDP			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ PROC			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??0CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::CComCriticalSection
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 83 c0 38	 add	 rax, 56			; 00000038H
  00038	48 8b c8	 mov	 rcx, rax
  0003b	e8 00 00 00 00	 call	 ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ ENDP			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z
_TEXT	SEGMENT
this$ = 64
nIndex$ = 72
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[], COMDAT

; 236  : 	{

$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 237  : 		ATLASSERT(nIndex >= 0 && nIndex < m_nSize);

  00022	83 7c 24 48 00	 cmp	 DWORD PTR nIndex$[rsp], 0
  00027	7c 0e		 jl	 SHORT $LN5@operator
  00029	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002e	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00031	39 44 24 48	 cmp	 DWORD PTR nIndex$[rsp], eax
  00035	7c 3a		 jl	 SHORT $LN6@operator
$LN5@operator:
  00037	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
  0003e	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00043	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0004a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004f	45 33 c9	 xor	 r9d, r9d
  00052	41 b8 ed 00 00
	00		 mov	 r8d, 237		; 000000edH
  00058	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OK@FGCLCILL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0005f	b9 02 00 00 00	 mov	 ecx, 2
  00064	e8 00 00 00 00	 call	 _CrtDbgReportW
  00069	83 f8 01	 cmp	 eax, 1
  0006c	75 03		 jne	 SHORT $LN6@operator
  0006e	cc		 int	 3
  0006f	33 c0		 xor	 eax, eax
$LN6@operator:

; 238  : 		if(nIndex < 0 || nIndex >= m_nSize)

  00071	83 7c 24 48 00	 cmp	 DWORD PTR nIndex$[rsp], 0
  00076	7c 0e		 jl	 SHORT $LN3@operator
  00078	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0007d	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00080	39 44 24 48	 cmp	 DWORD PTR nIndex$[rsp], eax
  00084	7c 0f		 jl	 SHORT $LN2@operator
$LN3@operator:

; 239  : 		{
; 240  : 			_AtlRaiseException((DWORD)EXCEPTION_ARRAY_BOUNDS_EXCEEDED);

  00086	ba 01 00 00 00	 mov	 edx, 1
  0008b	b9 8c 00 00 c0	 mov	 ecx, -1073741684	; c000008cH
  00090	e8 00 00 00 00	 call	 ?_AtlRaiseException@ATL@@YAXKK@Z ; ATL::_AtlRaiseException
$LN2@operator:

; 241  : 		}
; 242  : 		return m_aT[nIndex];

  00095	48 63 44 24 48	 movsxd	 rax, DWORD PTR nIndex$[rsp]
  0009a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0009f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000a2	48 8d 04 41	 lea	 rax, QWORD PTR [rcx+rax*2]
$LN4@operator:

; 243  : 	}

  000a6	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000aa	5f		 pop	 rdi
  000ab	c3		 ret	 0
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ
_TEXT	SEGMENT
i$1 = 32
this$ = 64
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll, COMDAT

; 215  : 	{

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 216  : 		if(m_aT != NULL)

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 3d		 je	 SHORT $LN5@RemoveAll

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)

  00029	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  00031	eb 0a		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00033	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  00037	ff c0		 inc	 eax
  00039	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@RemoveAll:
  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00045	39 44 24 20	 cmp	 DWORD PTR i$1[rsp], eax
  00049	7d 02		 jge	 SHORT $LN3@RemoveAll

; 219  : 				m_aT[i].~T();

  0004b	eb e6		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 220  : 			free(m_aT);

  0004d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00055	e8 00 00 00 00	 call	 free

; 221  : 			m_aT = NULL;

  0005a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN5@RemoveAll:

; 222  : 		}
; 223  : 		m_nSize = 0;

  00066	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006b	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0

; 224  : 		m_nAllocSize = 0;

  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00077	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [rax+12], 0

; 225  :     }

  0007e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00082	5f		 pop	 rdi
  00083	c3		 ret	 0
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ
_TEXT	SEGMENT
this$ = 16
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize, COMDAT

; 160  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 161  : 		return m_nSize;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	8b 40 08	 mov	 eax, DWORD PTR [rax+8]

; 162  : 	}

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT

; 310  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 311  : 	RemoveAll();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll

; 312  : }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT

; 120  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0
  0001e	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00023	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [rax+12], 0

; 121  : 	}

  0002a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_ATL_COM_MODULE70@ATL@@QEAA@XZ PROC			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 20	 add	 rax, 32			; 00000020H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??1_ATL_COM_MODULE70@ATL@@QEAA@XZ ENDP			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_ATL_COM_MODULE70@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0_ATL_COM_MODULE70@ATL@@QEAA@XZ PROC			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 20	 add	 rax, 32			; 00000020H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??0CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::CComCriticalSection
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??0_ATL_COM_MODULE70@ATL@@QEAA@XZ ENDP			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1CComBSTR@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CComBSTR@ATL@@QEAA@XZ PROC				; ATL::CComBSTR::~CComBSTR, COMDAT

; 1673 : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1674 :     ::SysFreeString(m_str);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00026	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SysFreeString

; 1675 : }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1CComBSTR@ATL@@QEAA@XZ ENDP				; ATL::CComBSTR::~CComBSTR
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ
_TEXT	SEGMENT
this$ = 16
?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ PROC ; ATL::CAtlBaseModule::GetModuleInstance, COMDAT

; 289  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 290  : 		return m_hInst;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 291  : 	}

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ENDP ; ATL::CAtlBaseModule::GetModuleInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ?Term@CComCriticalSection@ATL@@QEAAJXZ
_TEXT	SEGMENT
this$ = 48
?Term@CComCriticalSection@ATL@@QEAAJXZ PROC		; ATL::CComCriticalSection::Term, COMDAT

; 154  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 155  : 		DeleteCriticalSection(&m_sec);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DeleteCriticalSection

; 156  : 		return S_OK;

  0002c	33 c0		 xor	 eax, eax

; 157  : 	}

  0002e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00032	5f		 pop	 rdi
  00033	c3		 ret	 0
?Term@CComCriticalSection@ATL@@QEAAJXZ ENDP		; ATL::CComCriticalSection::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ?Init@CComCriticalSection@ATL@@QEAAJXZ
_TEXT	SEGMENT
hRes$ = 32
this$ = 64
?Init@CComCriticalSection@ATL@@QEAAJXZ PROC		; ATL::CComCriticalSection::Init, COMDAT

; 143  : 	{

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 144  : 		HRESULT hRes = S_OK;

  0001e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR hRes$[rsp], 0

; 145  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

  00026	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002b	45 33 c0	 xor	 r8d, r8d
  0002e	33 d2		 xor	 edx, edx
  00030	48 8b c8	 mov	 rcx, rax
  00033	e8 00 00 00 00	 call	 ?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
  00038	85 c0		 test	 eax, eax
  0003a	75 11		 jne	 SHORT $LN2@Init

; 146  : 		{
; 147  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

  0003c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError
  00042	8b c8		 mov	 ecx, eax
  00044	e8 00 00 00 00	 call	 HRESULT_FROM_WIN32
  00049	89 44 24 20	 mov	 DWORD PTR hRes$[rsp], eax
$LN2@Init:

; 148  : 		}
; 149  : 
; 150  : 		return hRes;

  0004d	8b 44 24 20	 mov	 eax, DWORD PTR hRes$[rsp]

; 151  : 	}

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?Init@CComCriticalSection@ATL@@QEAAJXZ ENDP		; ATL::CComCriticalSection::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ??1CComCriticalSection@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1CComCriticalSection@ATL@@QEAA@XZ PROC		; ATL::CComCriticalSection::~CComCriticalSection, COMDAT

; 129  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 130  : 	}

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??1CComCriticalSection@ATL@@QEAA@XZ ENDP		; ATL::CComCriticalSection::~CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ??0CComCriticalSection@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0CComCriticalSection@ATL@@QEAA@XZ PROC		; ATL::CComCriticalSection::CComCriticalSection, COMDAT

; 123  : 	CComCriticalSection() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 124  : 	{
; 125  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	41 b8 28 00 00
	00		 mov	 r8d, 40			; 00000028H
  00029	33 d2		 xor	 edx, edx
  0002b	48 8b c8	 mov	 rcx, rax
  0002e	e8 00 00 00 00	 call	 memset

; 126  : 	}

  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
??0CComCriticalSection@ATL@@QEAA@XZ ENDP		; ATL::CComCriticalSection::CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwinverapi.h
;	COMDAT ?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z
_TEXT	SEGMENT
lpCriticalSection$ = 48
dwSpinCount$ = 56
Flags$ = 64
?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z PROC ; ATL::_AtlInitializeCriticalSectionEx, COMDAT

; 727  : {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 728  : #if (NTDDI_VERSION >= NTDDI_VISTA) && !defined(_USING_V110_SDK71_) && !defined(_ATL_XP_TARGETING)
; 729  : 	// InitializeCriticalSectionEx is available in Vista or later, desktop or store apps
; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  00027	44 8b 44 24 40	 mov	 r8d, DWORD PTR Flags$[rsp]
  0002c	8b 54 24 38	 mov	 edx, DWORD PTR dwSpinCount$[rsp]
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR lpCriticalSection$[rsp]
  00035	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_InitializeCriticalSectionEx

; 731  : #else
; 732  : 	UNREFERENCED_PARAMETER(Flags);
; 733  : 
; 734  : 	// ...otherwise fall back to using InitializeCriticalSectionAndSpinCount.
; 735  : 	return ::InitializeCriticalSectionAndSpinCount(lpCriticalSection, dwSpinCount);
; 736  : #endif
; 737  : }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z ENDP ; ATL::_AtlInitializeCriticalSectionEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlexcept.h
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT
dwExceptionCode$ = 48
dwExceptionFlags$ = 56
?_AtlRaiseException@ATL@@YAXKK@Z PROC			; ATL::_AtlRaiseException, COMDAT

; 30   : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	57		 push	 rdi
  00009	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 08 00 00 00	 mov	 ecx, 8
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	8b 4c 24 30	 mov	 ecx, DWORD PTR [rsp+48]

; 31   : 	RaiseException( dwExceptionCode, dwExceptionFlags, 0, NULL );

  00020	45 33 c9	 xor	 r9d, r9d
  00023	45 33 c0	 xor	 r8d, r8d
  00026	8b 54 24 38	 mov	 edx, DWORD PTR dwExceptionFlags$[rsp]
  0002a	8b 4c 24 30	 mov	 ecx, DWORD PTR dwExceptionCode$[rsp]
  0002e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RaiseException

; 32   : }

  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
?_AtlRaiseException@ATL@@YAXKK@Z ENDP			; ATL::_AtlRaiseException
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ
_TEXT	SEGMENT
ple$ = 52
ptr$ = 88
this$ = 128
dwCategory$ = 136
nLevel$ = 144
pszFmt$ = 152
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ PROC	; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 436  : 	{

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 1c 00 00 00	 mov	 ecx, 28
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]

; 437  : 		CPreserveLastError ple;

  0002f	48 8d 4c 24 34	 lea	 rcx, QWORD PTR ple$[rsp]
  00034	e8 00 00 00 00	 call	 ??0CPreserveLastError@ATL@@QEAA@XZ ; ATL::CPreserveLastError::CPreserveLastError

; 438  : 		va_list ptr; va_start(ptr, pszFmt);

  00039	48 8d 84 24 a0
	00 00 00	 lea	 rax, QWORD PTR pszFmt$[rsp+8]
  00041	48 89 44 24 58	 mov	 QWORD PTR ptr$[rsp], rax

; 439  : 		ATL::CTrace::TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

  00046	48 8b 44 24 58	 mov	 rax, QWORD PTR ptr$[rsp]
  0004b	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00050	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR pszFmt$[rsp]
  00058	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0005d	44 8b 8c 24 90
	00 00 00	 mov	 r9d, DWORD PTR nLevel$[rsp]
  00065	44 8b 84 24 88
	00 00 00	 mov	 r8d, DWORD PTR dwCategory$[rsp]
  0006d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00075	8b 50 08	 mov	 edx, DWORD PTR [rax+8]
  00078	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00080	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00083	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z ; ATL::CTrace::TraceV

; 440  : 		va_end(ptr);

  00088	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR ptr$[rsp], 0

; 441  : 	}

  00091	48 8d 4c 24 34	 lea	 rcx, QWORD PTR ple$[rsp]
  00096	e8 00 00 00 00	 call	 ??1CPreserveLastError@ATL@@QEAA@XZ ; ATL::CPreserveLastError::~CPreserveLastError
  0009b	48 8b cc	 mov	 rcx, rsp
  0009e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcFrameData
  000a5	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000aa	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000ae	5f		 pop	 rdi
  000af	c3		 ret	 0
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ ENDP	; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z
_TEXT	SEGMENT
this$ = 16
pszFileName$ = 24
nLineNo$ = 32
??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z PROC		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT

; 411  : 	{

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 410  : 		: m_pszFileName(pszFileName), m_nLineNo(nLineNo)

  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR pszFileName$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	8b 4c 24 20	 mov	 ecx, DWORD PTR nLineNo$[rsp]
  00026	89 48 08	 mov	 DWORD PTR [rax+8], ecx

; 412  : 	}

  00029	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002e	5f		 pop	 rdi
  0002f	c3		 ret	 0
??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??1CPreserveLastError@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CPreserveLastError@ATL@@QEAA@XZ PROC			; ATL::CPreserveLastError::~CPreserveLastError, COMDAT

; 396  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 397  : 		SetLastError(m_dwLastError);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	8b 08		 mov	 ecx, DWORD PTR [rax]
  00025	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetLastError

; 398  : 	}

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
??1CPreserveLastError@ATL@@QEAA@XZ ENDP			; ATL::CPreserveLastError::~CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0CPreserveLastError@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0CPreserveLastError@ATL@@QEAA@XZ PROC			; ATL::CPreserveLastError::CPreserveLastError, COMDAT

; 390  : 	CPreserveLastError()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 391  : 	{
; 392  : 		m_dwLastError = GetLastError();

  0001e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00029	89 01		 mov	 DWORD PTR [rcx], eax

; 393  : 	}

  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??0CPreserveLastError@ATL@@QEAA@XZ ENDP			; ATL::CPreserveLastError::CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
_TEXT	SEGMENT
nBytes$ = 40
this$ = 80
nElements$ = 88
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z PROC ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate, COMDAT

; 455  : 	{

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 456  : 		size_t nBytes=0;

  00023	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR nBytes$[rsp], 0

; 457  : 		if(FAILED(::ATL::AtlMultiply(&nBytes, nElements, sizeof(T))))

  0002c	41 b8 02 00 00
	00		 mov	 r8d, 2
  00032	48 8b 54 24 58	 mov	 rdx, QWORD PTR nElements$[rsp]
  00037	48 8d 4c 24 28	 lea	 rcx, QWORD PTR nBytes$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z ; ATL::AtlMultiply<unsigned __int64>
  00041	85 c0		 test	 eax, eax
  00043	7d 04		 jge	 SHORT $LN2@Allocate

; 458  : 		{
; 459  : 			return false;

  00045	32 c0		 xor	 al, al
  00047	eb 0f		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 460  : 		}
; 461  : 		return this->AllocateBytes(nBytes);

  00049	48 8b 54 24 28	 mov	 rdx, QWORD PTR nBytes$[rsp]
  0004e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00053	e8 00 00 00 00	 call	 ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
$LN1@Allocate:

; 462  : 	}

  00058	48 8b f8	 mov	 rdi, rax
  0005b	48 8b cc	 mov	 rcx, rsp
  0005e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcFrameData
  00065	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006a	48 8b c7	 mov	 rax, rdi
  0006d	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00071	5f		 pop	 rdi
  00072	c3		 ret	 0
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ENDP ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT

; 434  : 	CHeapPtr() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 435  : 	{

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>

; 436  : 	}

  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free, COMDAT

; 407  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 408  : 		Allocator::Free(m_pData);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00026	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPEAX@Z ; ATL::CCRTAllocator::Free

; 409  : 		m_pData = NULL;

  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 410  : 	}

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
_TEXT	SEGMENT
this$ = 64
nBytes$ = 72
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes, COMDAT

; 381  : 	{

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 382  : 		ATLASSERT(m_pData == NULL);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0002c	74 3a		 je	 SHORT $LN4@AllocateBy
  0002e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  00035	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0003a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00041	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00046	45 33 c9	 xor	 r9d, r9d
  00049	41 b8 7e 01 00
	00		 mov	 r8d, 382		; 0000017eH
  0004f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OE@EFJOHFCD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00056	b9 02 00 00 00	 mov	 ecx, 2
  0005b	e8 00 00 00 00	 call	 _CrtDbgReportW
  00060	83 f8 01	 cmp	 eax, 1
  00063	75 03		 jne	 SHORT $LN4@AllocateBy
  00065	cc		 int	 3
  00066	33 c0		 xor	 eax, eax
$LN4@AllocateBy:

; 383  : 		m_pData = static_cast<T*>(Allocator::Allocate(nBytes));

  00068	48 8b 4c 24 48	 mov	 rcx, QWORD PTR nBytes$[rsp]
  0006d	e8 00 00 00 00	 call	 ?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z ; ATL::CCRTAllocator::Allocate
  00072	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00077	48 89 01	 mov	 QWORD PTR [rcx], rax

; 384  : 		if (m_pData == NULL)

  0007a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0007f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00083	75 04		 jne	 SHORT $LN2@AllocateBy

; 385  : 			return false;

  00085	32 c0		 xor	 al, al
  00087	eb 02		 jmp	 SHORT $LN1@AllocateBy
$LN2@AllocateBy:

; 386  : 
; 387  : 		return true;

  00089	b0 01		 mov	 al, 1
$LN1@AllocateBy:

; 388  : 	}

  0008b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ
_TEXT	SEGMENT
this$ = 16
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *, COMDAT

; 363  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 364  : 		return m_pData;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 365  : 	}

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT

; 349  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 350  : 		Free();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free

; 351  : 	}

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT

; 336  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 335  : 		m_pData(NULL)

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 337  : 	}

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z
_TEXT	SEGMENT
pszCategory$ = 64
nCategory$ = 72
?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 330  : 		if (pszCategory == nullptr)

  00022	48 83 7c 24 40
	00		 cmp	 QWORD PTR pszCategory$[rsp], 0
  00028	75 05		 jne	 SHORT $LN2@RegisterCa

; 331  : 		{
; 332  : 			return;

  0002a	e9 9f 00 00 00	 jmp	 $LN1@RegisterCa
$LN2@RegisterCa:

; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  0002f	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 32 ; ATL::CTrace::m_nLastCategory, 00000020H
  00036	72 42		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  00038	33 c0		 xor	 eax, eax
  0003a	85 c0		 test	 eax, eax
  0003c	75 3a		 jne	 SHORT $LN5@RegisterCa
  0003e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
  00045	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0004a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00051	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00056	45 33 c9	 xor	 r9d, r9d
  00059	41 b8 51 01 00
	00		 mov	 r8d, 337		; 00000151H
  0005f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OE@DGDFBHKA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00066	b9 02 00 00 00	 mov	 ecx, 2
  0006b	e8 00 00 00 00	 call	 _CrtDbgReportW
  00070	83 f8 01	 cmp	 eax, 1
  00073	75 03		 jne	 SHORT $LN5@RegisterCa
  00075	cc		 int	 3
  00076	33 c0		 xor	 eax, eax
$LN5@RegisterCa:

; 338  : 			return;

  00078	eb 54		 jmp	 SHORT $LN1@RegisterCa
$LN3@RegisterCa:

; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  0007a	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  00080	48 69 c0 04 01
	00 00		 imul	 rax, rax, 260		; 00000104H
  00087	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A ; ATL::CTrace::m_nMap
  0008e	8b 54 24 48	 mov	 edx, DWORD PTR nCategory$[rsp]
  00092	89 14 01	 mov	 DWORD PTR [rcx+rax], edx

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);

  00095	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  0009b	48 69 c0 04 01
	00 00		 imul	 rax, rax, 260		; 00000104H
  000a2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A ; ATL::CTrace::m_nMap
  000a9	48 8d 44 01 04	 lea	 rax, QWORD PTR [rcx+rax+4]
  000ae	4c 8b 44 24 40	 mov	 r8, QWORD PTR pszCategory$[rsp]
  000b3	ba 7f 00 00 00	 mov	 edx, 127		; 0000007fH
  000b8	48 8b c8	 mov	 rcx, rax
  000bb	e8 00 00 00 00	 call	 wcscpy_s

; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	
; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);
; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);
; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  000c0	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  000c6	ff c0		 inc	 eax
  000c8	89 05 00 00 00
	00		 mov	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  000ce	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z
_TEXT	SEGMENT
cchNeeded$ = 64
wszBuf$ = 88
vsnwprintf_result$ = 100
tv129 = 104
tv132 = 112
tv139 = 120
pszFileName$ = 144
nLine$ = 152
dwCategory$ = 160
nLevel$ = 168
pwszFmt$ = 176
args$ = 184
?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 281  : 	{

$LN6:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0001b	48 8b fc	 mov	 rdi, rsp
  0001e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 282  : #if _MSC_VER < 1900
; 283  : 		int cchNeeded = _vscwprintf(pwszFmt, args);
; 284  : #else
; 285  : 		// Explicitly request the legacy wide format specifiers mode from the CRT,
; 286  : 		// for compatibility with previous versions.  While the CRT supports two
; 287  : 		// modes, the ATL and MFC functions that accept format strings only support
; 288  : 		// legacy mode format strings.
; 289  : 		int cchNeeded = __stdio_common_vswprintf(

  00032	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 83 c8 02	 or	 rax, 2
  0003e	48 83 c8 04	 or	 rax, 4
  00042	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  0004a	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0004f	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00058	4c 8b 8c 24 b0
	00 00 00	 mov	 r9, QWORD PTR pwszFmt$[rsp]
  00060	45 33 c0	 xor	 r8d, r8d
  00063	33 d2		 xor	 edx, edx
  00065	48 8b c8	 mov	 rcx, rax
  00068	e8 00 00 00 00	 call	 __stdio_common_vswprintf
  0006d	89 44 24 40	 mov	 DWORD PTR cchNeeded$[rsp], eax

; 290  : 			_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS |
; 291  : 			_CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR |
; 292  : 			_CRT_INTERNAL_PRINTF_LEGACY_WIDE_SPECIFIERS,
; 293  : 			NULL, 0, pwszFmt, NULL, args);
; 294  : #endif
; 295  : 		if (cchNeeded < 0)

  00071	83 7c 24 40 00	 cmp	 DWORD PTR cchNeeded$[rsp], 0
  00076	7d 05		 jge	 SHORT $LN2@TraceV

; 296  : 		{
; 297  : 			return;

  00078	e9 18 01 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:

; 298  : 		}
; 299  : 
; 300  : 		CHeapPtr<wchar_t> wszBuf;

  0007d	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00082	e8 00 00 00 00	 call	 ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>

; 301  : 		if (!wszBuf.Allocate(cchNeeded + 1))

  00087	8b 44 24 40	 mov	 eax, DWORD PTR cchNeeded$[rsp]
  0008b	ff c0		 inc	 eax
  0008d	48 98		 cdqe
  0008f	48 8b d0	 mov	 rdx, rax
  00092	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00097	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  0009c	0f b6 c0	 movzx	 eax, al
  0009f	85 c0		 test	 eax, eax
  000a1	75 0f		 jne	 SHORT $LN3@TraceV

; 302  : 		{
; 303  : 			return;

  000a3	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  000a8	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  000ad	e9 e3 00 00 00	 jmp	 $LN1@TraceV
$LN3@TraceV:

; 304  : 		}
; 305  : 
; 306  : 		wszBuf[0] = '\0';

  000b2	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  000b7	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  000bc	b9 02 00 00 00	 mov	 ecx, 2
  000c1	48 6b c9 00	 imul	 rcx, rcx, 0
  000c5	33 d2		 xor	 edx, edx
  000c7	66 89 14 08	 mov	 WORD PTR [rax+rcx], dx

; 307  : 
; 308  : #if _MSC_VER < 1900
; 309  : 		if (_vsnwprintf_s(wszBuf, cchNeeded + 1, cchNeeded, pwszFmt, args) == -1)
; 310  : #else
; 311  : 		// Explicitly request the legacy wide format specifiers mode from the CRT,
; 312  : 		// for compatibility with previous versions.  While the CRT supports two
; 313  : 		// modes, the ATL and MFC functions that accept format strings only support
; 314  : 		// legacy mode format strings.
; 315  : 		int const vsnwprintf_result = __stdio_common_vsnwprintf_s(

  000cb	48 63 44 24 40	 movsxd	 rax, DWORD PTR cchNeeded$[rsp]
  000d0	48 89 44 24 68	 mov	 QWORD PTR tv129[rsp], rax
  000d5	8b 4c 24 40	 mov	 ecx, DWORD PTR cchNeeded$[rsp]
  000d9	ff c1		 inc	 ecx
  000db	48 63 c9	 movsxd	 rcx, ecx
  000de	48 89 4c 24 70	 mov	 QWORD PTR tv132[rsp], rcx
  000e3	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  000e8	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  000ed	48 89 44 24 78	 mov	 QWORD PTR tv139[rsp], rax
  000f2	e8 00 00 00 00	 call	 __local_stdio_printf_options
  000f7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000fa	48 83 c8 04	 or	 rax, 4
  000fe	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  00106	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  0010b	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  00114	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR pwszFmt$[rsp]
  0011c	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00121	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv129[rsp]
  00126	4c 8b c9	 mov	 r9, rcx
  00129	48 8b 4c 24 70	 mov	 rcx, QWORD PTR tv132[rsp]
  0012e	4c 8b c1	 mov	 r8, rcx
  00131	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv139[rsp]
  00136	48 8b d1	 mov	 rdx, rcx
  00139	48 8b c8	 mov	 rcx, rax
  0013c	e8 00 00 00 00	 call	 __stdio_common_vsnwprintf_s
  00141	89 44 24 64	 mov	 DWORD PTR vsnwprintf_result$[rsp], eax

; 316  : 			_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS |
; 317  : 			_CRT_INTERNAL_PRINTF_LEGACY_WIDE_SPECIFIERS,
; 318  : 			wszBuf, cchNeeded + 1, cchNeeded, pwszFmt, NULL, args);
; 319  : 		if (vsnwprintf_result < 0)

  00145	83 7c 24 64 00	 cmp	 DWORD PTR vsnwprintf_result$[rsp], 0
  0014a	7d 0c		 jge	 SHORT $LN4@TraceV

; 320  : #endif
; 321  : 		{
; 322  : 			return;

  0014c	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00151	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  00156	eb 3d		 jmp	 SHORT $LN1@TraceV
$LN4@TraceV:

; 323  : 		}
; 324  : 
; 325  : 		TraceV(pszFileName, nLine, dwCategory, nLevel, wszBuf);

  00158	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  0015d	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00162	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00167	44 8b 8c 24 a8
	00 00 00	 mov	 r9d, DWORD PTR nLevel$[rsp]
  0016f	44 8b 84 24 a0
	00 00 00	 mov	 r8d, DWORD PTR dwCategory$[rsp]
  00177	8b 94 24 98 00
	00 00		 mov	 edx, DWORD PTR nLine$[rsp]
  0017e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR pszFileName$[rsp]
  00186	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z ; ATL::CTrace::TraceV

; 326  : 	}

  0018b	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00190	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
$LN1@TraceV:
  00195	48 8b cc	 mov	 rcx, rsp
  00198	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcFrameData
  0019f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001a4	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  001ab	5f		 pop	 rdi
  001ac	c3		 ret	 0
?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z
_TEXT	SEGMENT
wszCategory$ = 64
categoryLength$ = 2116
pwszCategoryName$ = 2120
chCount$ = 2128
wszBuf$ = 2152
fileName$ = 2192
tv145 = 2736
__$ArrayPad$ = 2744
pszFileName$ = 2768
nLine$ = 2776
dwCategory$ = 2784
nLevel$ = 2792
pwszMessage$ = 2800
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 150  : 	{

$LN12:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 81 ec c0 0a
	00 00		 sub	 rsp, 2752		; 00000ac0H
  0001b	48 8b fc	 mov	 rdi, rsp
  0001e	b9 b0 02 00 00	 mov	 ecx, 688		; 000002b0H
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	48 8b 8c 24 d0
	0a 00 00	 mov	 rcx, QWORD PTR [rsp+2768]
  00032	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00039	48 33 c4	 xor	 rax, rsp
  0003c	48 89 84 24 b8
	0a 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 151  : 		if (CTrace::m_nLevel == CTrace::DisableTracing || CTrace::m_nLevel < nLevel || (CTrace::m_nCategory & dwCategory) == 0)

  00044	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?m_nLevel@CTrace@ATL@@1IA, -1 ; ATL::CTrace::m_nLevel, ffffffffH
  0004b	74 24		 je	 SHORT $LN3@TraceV
  0004d	8b 84 24 e8 0a
	00 00		 mov	 eax, DWORD PTR nLevel$[rsp]
  00054	39 05 00 00 00
	00		 cmp	 DWORD PTR ?m_nLevel@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLevel
  0005a	72 15		 jb	 SHORT $LN3@TraceV
  0005c	8b 84 24 e0 0a
	00 00		 mov	 eax, DWORD PTR dwCategory$[rsp]
  00063	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nCategory
  00069	23 c8		 and	 ecx, eax
  0006b	8b c1		 mov	 eax, ecx
  0006d	85 c0		 test	 eax, eax
  0006f	75 05		 jne	 SHORT $LN2@TraceV
$LN3@TraceV:

; 152  : 		{
; 153  : 			return;

  00071	e9 0c 02 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:

; 154  : 		}
; 155  : 
; 156  : 		wchar_t wszCategory[TraceBufferSize] = {'\0'};

  00076	48 8d 44 24 40	 lea	 rax, QWORD PTR wszCategory$[rsp]
  0007b	48 8b f8	 mov	 rdi, rax
  0007e	33 c0		 xor	 eax, eax
  00080	b9 00 08 00 00	 mov	 ecx, 2048		; 00000800H
  00085	f3 aa		 rep stosb

; 157  : 		int categoryLength = 0;

  00087	c7 84 24 44 08
	00 00 00 00 00
	00		 mov	 DWORD PTR categoryLength$[rsp], 0

; 158  : 		const wchar_t *const pwszCategoryName = GetCategoryName(dwCategory);

  00092	8b 8c 24 e0 0a
	00 00		 mov	 ecx, DWORD PTR dwCategory$[rsp]
  00099	e8 00 00 00 00	 call	 ?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z ; ATL::CTrace::GetCategoryName
  0009e	48 89 84 24 48
	08 00 00	 mov	 QWORD PTR pwszCategoryName$[rsp], rax

; 159  : 		if (pwszCategoryName != nullptr)

  000a6	48 83 bc 24 48
	08 00 00 00	 cmp	 QWORD PTR pwszCategoryName$[rsp], 0
  000af	74 36		 je	 SHORT $LN4@TraceV

; 160  : 		{
; 161  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%ls - ", pwszCategoryName)) == -1)

  000b1	4c 8b 8c 24 48
	08 00 00	 mov	 r9, QWORD PTR pwszCategoryName$[rsp]
  000b9	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
  000c0	ba 00 04 00 00	 mov	 edx, 1024		; 00000400H
  000c5	48 8d 4c 24 40	 lea	 rcx, QWORD PTR wszCategory$[rsp]
  000ca	e8 00 00 00 00	 call	 swprintf_s
  000cf	89 84 24 44 08
	00 00		 mov	 DWORD PTR categoryLength$[rsp], eax
  000d6	83 bc 24 44 08
	00 00 ff	 cmp	 DWORD PTR categoryLength$[rsp], -1
  000de	75 05		 jne	 SHORT $LN6@TraceV

; 162  : 			{
; 163  : 				return;

  000e0	e9 9d 01 00 00	 jmp	 $LN1@TraceV
$LN6@TraceV:

; 164  : 			}
; 165  : 		}

  000e5	eb 34		 jmp	 SHORT $LN5@TraceV
$LN4@TraceV:

; 166  : 		else
; 167  : 		{
; 168  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%u - ", dwCategory)) == -1)

  000e7	44 8b 8c 24 e0
	0a 00 00	 mov	 r9d, DWORD PTR dwCategory$[rsp]
  000ef	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
  000f6	ba 00 04 00 00	 mov	 edx, 1024		; 00000400H
  000fb	48 8d 4c 24 40	 lea	 rcx, QWORD PTR wszCategory$[rsp]
  00100	e8 00 00 00 00	 call	 swprintf_s
  00105	89 84 24 44 08
	00 00		 mov	 DWORD PTR categoryLength$[rsp], eax
  0010c	83 bc 24 44 08
	00 00 ff	 cmp	 DWORD PTR categoryLength$[rsp], -1
  00114	75 05		 jne	 SHORT $LN5@TraceV

; 169  : 			{
; 170  : 				return;

  00116	e9 67 01 00 00	 jmp	 $LN1@TraceV
$LN5@TraceV:

; 171  : 			}
; 172  : 		}
; 173  : 
; 174  : 		int chCount = (int)wcslen(pwszMessage) + categoryLength + 1;

  0011b	48 8b 8c 24 f0
	0a 00 00	 mov	 rcx, QWORD PTR pwszMessage$[rsp]
  00123	e8 00 00 00 00	 call	 wcslen
  00128	8b 8c 24 44 08
	00 00		 mov	 ecx, DWORD PTR categoryLength$[rsp]
  0012f	8d 44 08 01	 lea	 eax, DWORD PTR [rax+rcx+1]
  00133	89 84 24 50 08
	00 00		 mov	 DWORD PTR chCount$[rsp], eax

; 175  : 		CHeapPtr<wchar_t> wszBuf;

  0013a	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00142	e8 00 00 00 00	 call	 ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>

; 176  : 		if (!wszBuf.Allocate(chCount))

  00147	48 63 84 24 50
	08 00 00	 movsxd	 rax, DWORD PTR chCount$[rsp]
  0014f	48 8b d0	 mov	 rdx, rax
  00152	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  0015a	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  0015f	0f b6 c0	 movzx	 eax, al
  00162	85 c0		 test	 eax, eax
  00164	75 12		 jne	 SHORT $LN8@TraceV

; 177  : 		{
; 178  : 			return;

  00166	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  0016e	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  00173	e9 0a 01 00 00	 jmp	 $LN1@TraceV
$LN8@TraceV:

; 179  : 		}
; 180  : 
; 181  : 		wszBuf[0] = '\0';

  00178	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00180	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00185	b9 02 00 00 00	 mov	 ecx, 2
  0018a	48 6b c9 00	 imul	 rcx, rcx, 0
  0018e	33 d2		 xor	 edx, edx
  00190	66 89 14 08	 mov	 WORD PTR [rax+rcx], dx

; 182  : 
; 183  : 		if (swprintf_s(wszBuf, chCount, L"%ls%ls", wszCategory, pwszMessage) == -1)

  00194	48 63 84 24 50
	08 00 00	 movsxd	 rax, DWORD PTR chCount$[rsp]
  0019c	48 89 84 24 b0
	0a 00 00	 mov	 QWORD PTR tv145[rsp], rax
  001a4	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  001ac	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  001b1	48 8b 8c 24 f0
	0a 00 00	 mov	 rcx, QWORD PTR pwszMessage$[rsp]
  001b9	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001be	4c 8d 4c 24 40	 lea	 r9, QWORD PTR wszCategory$[rsp]
  001c3	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
  001ca	48 8b 8c 24 b0
	0a 00 00	 mov	 rcx, QWORD PTR tv145[rsp]
  001d2	48 8b d1	 mov	 rdx, rcx
  001d5	48 8b c8	 mov	 rcx, rax
  001d8	e8 00 00 00 00	 call	 swprintf_s
  001dd	83 f8 ff	 cmp	 eax, -1
  001e0	75 12		 jne	 SHORT $LN9@TraceV

; 184  : 		{
; 185  : 			return;

  001e2	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  001ea	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  001ef	e9 8e 00 00 00	 jmp	 $LN1@TraceV
$LN9@TraceV:

; 186  : 		}
; 187  : 
; 188  : 		wchar_t fileName[_MAX_PATH] = {'\0'};	

  001f4	48 8d 84 24 90
	08 00 00	 lea	 rax, QWORD PTR fileName$[rsp]
  001fc	48 8b f8	 mov	 rdi, rax
  001ff	33 c0		 xor	 eax, eax
  00201	b9 08 02 00 00	 mov	 ecx, 520		; 00000208H
  00206	f3 aa		 rep stosb

; 189  : #if _MSC_VER < 1900
; 190  : 		if (swprintf_s(fileName, _MAX_PATH, L"%S", pszFileName) == -1)
; 191  : #else
; 192  : 		if (swprintf_s(fileName, _MAX_PATH, L"%hs", pszFileName) == -1)

  00208	4c 8b 8c 24 d0
	0a 00 00	 mov	 r9, QWORD PTR pszFileName$[rsp]
  00210	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  00217	ba 04 01 00 00	 mov	 edx, 260		; 00000104H
  0021c	48 8d 8c 24 90
	08 00 00	 lea	 rcx, QWORD PTR fileName$[rsp]
  00224	e8 00 00 00 00	 call	 swprintf_s
  00229	83 f8 ff	 cmp	 eax, -1
  0022c	75 0f		 jne	 SHORT $LN10@TraceV

; 193  : #endif
; 194  : 		{
; 195  : 			return;

  0022e	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00236	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  0023b	eb 45		 jmp	 SHORT $LN1@TraceV
$LN10@TraceV:

; 196  : 		}
; 197  : 
; 198  : 		_CrtDbgReportW(_CRT_WARN, fileName, nLine, nullptr, L"%ls", static_cast<const wchar_t*>(wszBuf));

  0023d	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00245	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  0024a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0024f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00256	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0025b	45 33 c9	 xor	 r9d, r9d
  0025e	44 8b 84 24 d8
	0a 00 00	 mov	 r8d, DWORD PTR nLine$[rsp]
  00266	48 8d 94 24 90
	08 00 00	 lea	 rdx, QWORD PTR fileName$[rsp]
  0026e	33 c9		 xor	 ecx, ecx
  00270	e8 00 00 00 00	 call	 _CrtDbgReportW

; 199  : 	}

  00275	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  0027d	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
$LN1@TraceV:
  00282	48 8b cc	 mov	 rcx, rsp
  00285	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcFrameData
  0028c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00291	48 8b 8c 24 b8
	0a 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00299	48 33 cc	 xor	 rcx, rsp
  0029c	e8 00 00 00 00	 call	 __security_check_cookie
  002a1	48 81 c4 c0 0a
	00 00		 add	 rsp, 2752		; 00000ac0H
  002a8	5f		 pop	 rdi
  002a9	c3		 ret	 0
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z
_TEXT	SEGMENT
i$1 = 0
nCategory$ = 32
?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z PROC		; ATL::CTrace::GetCategoryName, COMDAT

; 132  : 	{

$LN7:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 10	 sub	 rsp, 16
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 04 00 00 00	 mov	 ecx, 4
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]

; 133  : 		for(unsigned int i = 0; i < m_nLastCategory; i++) 

  0001c	c7 04 24 00 00
	00 00		 mov	 DWORD PTR i$1[rsp], 0
  00023	eb 08		 jmp	 SHORT $LN4@GetCategor
$LN2@GetCategor:
  00025	8b 04 24	 mov	 eax, DWORD PTR i$1[rsp]
  00028	ff c0		 inc	 eax
  0002a	89 04 24	 mov	 DWORD PTR i$1[rsp], eax
$LN4@GetCategor:
  0002d	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  00033	39 04 24	 cmp	 DWORD PTR i$1[rsp], eax
  00036	73 34		 jae	 SHORT $LN3@GetCategor

; 134  : 		{
; 135  : 			if (m_nMap[i].nCategory == nCategory)

  00038	8b 04 24	 mov	 eax, DWORD PTR i$1[rsp]
  0003b	48 69 c0 04 01
	00 00		 imul	 rax, rax, 260		; 00000104H
  00042	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A ; ATL::CTrace::m_nMap
  00049	8b 54 24 20	 mov	 edx, DWORD PTR nCategory$[rsp]
  0004d	39 14 01	 cmp	 DWORD PTR [rcx+rax], edx
  00050	75 18		 jne	 SHORT $LN5@GetCategor

; 136  : 			{
; 137  : 				return m_nMap[i].categryName;

  00052	8b 04 24	 mov	 eax, DWORD PTR i$1[rsp]
  00055	48 69 c0 04 01
	00 00		 imul	 rax, rax, 260		; 00000104H
  0005c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A ; ATL::CTrace::m_nMap
  00063	48 8d 44 01 04	 lea	 rax, QWORD PTR [rcx+rax+4]
  00068	eb 04		 jmp	 SHORT $LN1@GetCategor
$LN5@GetCategor:

; 138  : 			}
; 139  : 		}

  0006a	eb b9		 jmp	 SHORT $LN2@GetCategor
$LN3@GetCategor:

; 140  : 
; 141  : 		return nullptr;

  0006c	33 c0		 xor	 eax, eax
$LN1@GetCategor:

; 142  : 	}

  0006e	48 83 c4 10	 add	 rsp, 16
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z ENDP		; ATL::CTrace::GetCategoryName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceISAPI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceISAPI@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceISAPI'', COMDAT

; 119  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceISAPI> atlTraceISAPI(_T("atlTraceISAPI"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG94237
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceISAPI@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceISAPI''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 40 00	 mov	 edx, 4194304		; 00400000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSync@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSync@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSync'', COMDAT

; 118  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSync> atlTraceSync(_T("atlTraceSync"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG94188
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceSync@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSync''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 20 00	 mov	 edx, 2097152		; 00200000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSecurity@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSecurity@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSecurity'', COMDAT

; 117  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSecurity> atlTraceSecurity(_T("atlTraceSecurity"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG94139
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceSecurity@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSecurity''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 10 00	 mov	 edx, 1048576		; 00100000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceUtil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceUtil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceUtil'', COMDAT

; 116  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceUtil> atlTraceUtil(_T("atlTraceUtil"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG94090
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceUtil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceUtil''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceMap@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceMap@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceMap'', COMDAT

; 115  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceMap> atlTraceMap(_T("atlTraceMap"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG94085
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceMap@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceMap''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 04 00	 mov	 edx, 262144		; 00040000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceString@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceString@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceString'', COMDAT

; 114  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceString> atlTraceString(_T("atlTraceString"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG94036
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceString@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceString''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 02 00	 mov	 edx, 131072		; 00020000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceStencil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceStencil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceStencil'', COMDAT

; 113  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceStencil> atlTraceStencil(_T("atlTraceStencil"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93987
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceStencil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceStencil''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 01 00	 mov	 edx, 65536		; 00010000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceCache@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCache@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCache'', COMDAT

; 112  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCache> atlTraceCache(_T("atlTraceCache"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93938
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceCache@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCache''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 80 00 00	 mov	 edx, 32768		; 00008000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceTime@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceTime@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceTime'', COMDAT

; 111  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceTime> atlTraceTime(_T("atlTraceTime"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93889
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceTime@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceTime''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 40 00 00	 mov	 edx, 16384		; 00004000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93840
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 20 00 00	 mov	 edx, 8192		; 00002000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceAllocation@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceAllocation@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceAllocation'', COMDAT

; 109  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceAllocation> atlTraceAllocation(_T("atlTraceAllocation"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93791
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceAllocation@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceAllocation''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 10 00 00	 mov	 edx, 4096		; 00001000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceNotImpl@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceNotImpl@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceNotImpl'', COMDAT

; 108  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceNotImpl> atlTraceNotImpl(_T("atlTraceNotImpl"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93742
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceNotImpl@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceNotImpl''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 08 00 00	 mov	 edx, 2048		; 00000800H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSnapin@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSnapin@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSnapin'', COMDAT

; 107  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSnapin> atlTraceSnapin(_T("atlTraceSnapin"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93693
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceSnapin@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSnapin''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 04 00 00	 mov	 edx, 1024		; 00000400H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceDBProvider@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBProvider@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBProvider'', COMDAT

; 106  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBProvider> atlTraceDBProvider(_T("atlTraceDBProvider"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93644
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceDBProvider@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBProvider''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 02 00 00	 mov	 edx, 512		; 00000200H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceDBClient@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBClient@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBClient'', COMDAT

; 105  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBClient> atlTraceDBClient(_T("atlTraceDBClient"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93595
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceDBClient@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBClient''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 01 00 00	 mov	 edx, 256		; 00000100H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceHosting@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceHosting@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceHosting'', COMDAT

; 104  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceHosting> atlTraceHosting(_T("atlTraceHosting"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93546
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceHosting@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceHosting''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 80 00 00 00	 mov	 edx, 128		; 00000080H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceControls@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceControls@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceControls'', COMDAT

; 103  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceControls> atlTraceControls(_T("atlTraceControls"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93497
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceControls@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceControls''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceWindowing@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceWindowing@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceWindowing'', COMDAT

; 102  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceWindowing> atlTraceWindowing(_T("atlTraceWindowing"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93448
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceWindowing@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceWindowing''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ
_TEXT	SEGMENT
this$ = 16
??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ PROC	; ATL::CTraceCategoryEx<32,0>::operator unsigned int, COMDAT

; 79   : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  00006	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ ENDP	; ATL::CTraceCategoryEx<32,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceRefcount@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRefcount@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRefcount'', COMDAT

; 101  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRefcount> atlTraceRefcount(_T("atlTraceRefcount"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93399
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceRefcount@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRefcount''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 10 00 00 00	 mov	 edx, 16
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceRegistrar@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRegistrar@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRegistrar'', COMDAT

; 100  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRegistrar> atlTraceRegistrar(_T("atlTraceRegistrar"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93350
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceRegistrar@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRegistrar''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 08 00 00 00	 mov	 edx, 8
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceQI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceQI@ATL@@YAXXZ PROC				; ATL::`dynamic initializer for 'atlTraceQI'', COMDAT

; 99   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceQI> atlTraceQI(_T("atlTraceQI"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93301
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceQI@ATL@@YAXXZ ENDP				; ATL::`dynamic initializer for 'atlTraceQI''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 04 00 00 00	 mov	 edx, 4
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceCOM@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCOM@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCOM'', COMDAT

; 98   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCom> atlTraceCOM(_T("atlTraceCOM"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93252
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceCOM@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCOM''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ
_TEXT	SEGMENT
this$ = 16
??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ PROC		; ATL::CTraceCategoryEx<2,0>::operator unsigned int, COMDAT

; 79   : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  00006	b8 02 00 00 00	 mov	 eax, 2

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ ENDP		; ATL::CTraceCategoryEx<2,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 02 00 00 00	 mov	 edx, 2
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceGeneral@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceGeneral@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceGeneral'', COMDAT

; 97   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceGeneral> atlTraceGeneral(_T("atlTraceGeneral"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93179
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceGeneral@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceGeneral''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 01 00 00 00	 mov	 edx, 1
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 08 00	 mov	 edx, 524288		; 00080000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPEAX@Z
_TEXT	SEGMENT
p$ = 48
?Free@CCRTAllocator@ATL@@SAXPEAX@Z PROC			; ATL::CCRTAllocator::Free, COMDAT

; 266  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 267  : 		free(p);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR p$[rsp]
  00023	e8 00 00 00 00	 call	 free

; 268  : 	}

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?Free@CCRTAllocator@ATL@@SAXPEAX@Z ENDP			; ATL::CCRTAllocator::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z
_TEXT	SEGMENT
nBytes$ = 48
?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z PROC		; ATL::CCRTAllocator::Allocate, COMDAT

; 261  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 262  : 		return malloc(nBytes);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR nBytes$[rsp]
  00023	e8 00 00 00 00	 call	 malloc

; 263  : 	}

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z ENDP		; ATL::CCRTAllocator::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_wstdio.h
;	COMDAT swprintf_s
_TEXT	SEGMENT
_Result$ = 48
_ArgList$ = 72
_Buffer$ = 112
_BufferCount$ = 120
_Format$ = 128
swprintf_s PROC						; COMDAT

; 1523 :         {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1524 :             int _Result;
; 1525 :             va_list _ArgList;
; 1526 :             __crt_va_start(_ArgList, _Format);

  0002d	48 8d 84 24 88
	00 00 00	 lea	 rax, QWORD PTR _Format$[rsp+8]
  00035	48 89 44 24 48	 mov	 QWORD PTR _ArgList$[rsp], rax

; 1527 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0003a	48 8b 44 24 48	 mov	 rax, QWORD PTR _ArgList$[rsp]
  0003f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00044	45 33 c9	 xor	 r9d, r9d
  00047	4c 8b 84 24 80
	00 00 00	 mov	 r8, QWORD PTR _Format$[rsp]
  0004f	48 8b 54 24 78	 mov	 rdx, QWORD PTR _BufferCount$[rsp]
  00054	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  00059	e8 00 00 00 00	 call	 _vswprintf_s_l
  0005e	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1528 :             __crt_va_end(_ArgList);

  00062	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR _ArgList$[rsp], 0

; 1529 :             return _Result;

  0006b	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]

; 1530 :         }

  0006f	8b f8		 mov	 edi, eax
  00071	48 8b cc	 mov	 rcx, rsp
  00074	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:swprintf_s$rtcFrameData
  0007b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00080	8b c7		 mov	 eax, edi
  00082	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00086	5f		 pop	 rdi
  00087	c3		 ret	 0
swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_wstdio.h
;	COMDAT _vswprintf_s_l
_TEXT	SEGMENT
_Result$ = 48
tv73 = 52
_Buffer$ = 80
_BufferCount$ = 88
_Format$ = 96
_Locale$ = 104
_ArgList$ = 112
_vswprintf_s_l PROC					; COMDAT

; 1256 :     {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1257 :         int const _Result = __stdio_common_vswprintf_s(

  0002d	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00032	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00037	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0003c	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Locale$[rsp]
  00041	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00046	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Format$[rsp]
  0004b	4c 8b 44 24 58	 mov	 r8, QWORD PTR _BufferCount$[rsp]
  00050	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Buffer$[rsp]
  00055	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00058	e8 00 00 00 00	 call	 __stdio_common_vswprintf_s
  0005d	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1258 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1259 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1260 : 
; 1261 :         return _Result < 0 ? -1 : _Result;

  00061	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00066	7d 0a		 jge	 SHORT $LN3@vswprintf_
  00068	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv73[rsp], -1
  00070	eb 08		 jmp	 SHORT $LN4@vswprintf_
$LN3@vswprintf_:
  00072	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  00076	89 44 24 34	 mov	 DWORD PTR tv73[rsp], eax
$LN4@vswprintf_:
  0007a	8b 44 24 34	 mov	 eax, DWORD PTR tv73[rsp]

; 1262 :     }

  0007e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00082	5f		 pop	 rdi
  00083	c3		 ret	 0
_vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 90   :     {

$LN3:
  00000	40 57		 push	 rdi

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00002	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  00009	5f		 pop	 rdi
  0000a	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\shared\winerror.h
;	COMDAT HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = 0
x$ = 32
HRESULT_FROM_WIN32 PROC					; COMDAT

; 29051: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

$LN5:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 10	 sub	 rsp, 16
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 04 00 00 00	 mov	 ecx, 4
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]
  0001c	83 7c 24 20 00	 cmp	 DWORD PTR x$[rsp], 0
  00021	7f 09		 jg	 SHORT $LN3@HRESULT_FR
  00023	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00027	89 04 24	 mov	 DWORD PTR tv68[rsp], eax
  0002a	eb 15		 jmp	 SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
  0002c	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00030	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00035	0d 00 00 07 00	 or	 eax, 458752		; 00070000H
  0003a	0f ba e8 1f	 bts	 eax, 31
  0003e	89 04 24	 mov	 DWORD PTR tv68[rsp], eax
$LN4@HRESULT_FR:
  00041	8b 04 24	 mov	 eax, DWORD PTR tv68[rsp]
  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_I@YAXPEAX_K1P6AX0@Z@Z
_TEXT	SEGMENT
tv68 = 32
tv69 = 40
__t$ = 64
__s$ = 72
__n$ = 80
__f$ = 88
??_I@YAXPEAX_K1P6AX0@Z@Z PROC				; `vector destructor iterator', COMDAT
$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0002d	48 8b 44 24 48	 mov	 rax, QWORD PTR __s$[rsp]
  00032	48 0f af 44 24
	50		 imul	 rax, QWORD PTR __n$[rsp]
  00038	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __t$[rsp]
  0003d	48 03 c8	 add	 rcx, rax
  00040	48 8b c1	 mov	 rax, rcx
  00043	48 89 44 24 40	 mov	 QWORD PTR __t$[rsp], rax
$LN2@vector:
  00048	48 8b 44 24 50	 mov	 rax, QWORD PTR __n$[rsp]
  0004d	48 89 44 24 20	 mov	 QWORD PTR tv68[rsp], rax
  00052	48 8b 44 24 50	 mov	 rax, QWORD PTR __n$[rsp]
  00057	48 ff c8	 dec	 rax
  0005a	48 89 44 24 50	 mov	 QWORD PTR __n$[rsp], rax
  0005f	48 83 7c 24 20
	00		 cmp	 QWORD PTR tv68[rsp], 0
  00065	76 0a		 jbe	 SHORT $LN5@vector
  00067	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  0006f	eb 08		 jmp	 SHORT $LN6@vector
$LN5@vector:
  00071	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN6@vector:
  00079	83 7c 24 28 00	 cmp	 DWORD PTR tv69[rsp], 0
  0007e	74 20		 je	 SHORT $LN3@vector
  00080	48 8b 44 24 48	 mov	 rax, QWORD PTR __s$[rsp]
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __t$[rsp]
  0008a	48 2b c8	 sub	 rcx, rax
  0008d	48 8b c1	 mov	 rax, rcx
  00090	48 89 44 24 40	 mov	 QWORD PTR __t$[rsp], rax
  00095	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __t$[rsp]
  0009a	ff 54 24 58	 call	 QWORD PTR __f$[rsp]
  0009e	eb a8		 jmp	 SHORT $LN2@vector
$LN3@vector:
  000a0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
??_I@YAXPEAX_K1P6AX0@Z@Z ENDP				; `vector destructor iterator'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
tv66 = 32
tv67 = 40
__t$ = 64
__s$ = 72
__n$ = 80
__f$ = 88
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN2@vector:
  0002d	48 8b 44 24 50	 mov	 rax, QWORD PTR __n$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00037	48 8b 44 24 50	 mov	 rax, QWORD PTR __n$[rsp]
  0003c	48 ff c8	 dec	 rax
  0003f	48 89 44 24 50	 mov	 QWORD PTR __n$[rsp], rax
  00044	48 83 7c 24 20
	00		 cmp	 QWORD PTR tv66[rsp], 0
  0004a	76 0a		 jbe	 SHORT $LN5@vector
  0004c	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR tv67[rsp], 1
  00054	eb 08		 jmp	 SHORT $LN6@vector
$LN5@vector:
  00056	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR tv67[rsp], 0
$LN6@vector:
  0005e	83 7c 24 28 00	 cmp	 DWORD PTR tv67[rsp], 0
  00063	74 20		 je	 SHORT $LN3@vector
  00065	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __t$[rsp]
  0006a	ff 54 24 58	 call	 QWORD PTR __f$[rsp]
  0006e	48 8b 44 24 48	 mov	 rax, QWORD PTR __s$[rsp]
  00073	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __t$[rsp]
  00078	48 03 c8	 add	 rcx, rax
  0007b	48 8b c1	 mov	 rax, rcx
  0007e	48 89 44 24 40	 mov	 QWORD PTR __t$[rsp], rax
  00083	eb a8		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00085	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00089	5f		 pop	 rdi
  0008a	c3		 ret	 0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
