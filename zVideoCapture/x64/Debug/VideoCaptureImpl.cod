; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29336.0 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?WM_ATLGETHOST@ATL@@3IA				; ATL::WM_ATLGETHOST
PUBLIC	?WM_ATLGETCONTROL@ATL@@3IA			; ATL::WM_ATLGETCONTROL
PUBLIC	LIBID_ATLLib
PUBLIC	__pobjMapEntryFirst
PUBLIC	__pobjMapEntryLast
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPEAUHINSTANCE__@@@ZEA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZEA			; ATL::_pPerfUnRegFunc
PUBLIC	?_AtlRegisterPerUser@ATL@@3_NA			; ATL::_AtlRegisterPerUser
PUBLIC	?g_WindowName@@3PA_WA				; g_WindowName
PUBLIC	?g_ControlDescription@@3PADA			; g_ControlDescription
PUBLIC	?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA		; ATL::_pAtlModule
PUBLIC	?_pModule@ATL@@3PEAVCComModule@1@EA		; ATL::_pModule
PUBLIC	?s_nInstances@COPOSVideoCapture@@1HA		; COPOSVideoCapture::s_nInstances
PUBLIC	?_pAtlAutoThreadModule@ATL@@3PEAUIAtlAutoThreadModule@1@EA ; ATL::_pAtlAutoThreadModule
PUBLIC	?chDirSep@ATL@@3_WB				; ATL::chDirSep
PUBLIC	?chRightBracket@ATL@@3_WB			; ATL::chRightBracket
PUBLIC	?chLeftBracket@ATL@@3_WB			; ATL::chLeftBracket
PUBLIC	?chQuote@ATL@@3_WB				; ATL::chQuote
PUBLIC	?chEquals@ATL@@3_WB				; ATL::chEquals
PUBLIC	?szStringVal@ATL@@3QEB_WEB			; ATL::szStringVal
PUBLIC	?multiszStringVal@ATL@@3QEB_WEB			; ATL::multiszStringVal
PUBLIC	?szDwordVal@ATL@@3QEB_WEB			; ATL::szDwordVal
PUBLIC	?szBinaryVal@ATL@@3QEB_WEB			; ATL::szBinaryVal
PUBLIC	?szValToken@ATL@@3QEB_WEB			; ATL::szValToken
PUBLIC	?szForceRemove@ATL@@3QEB_WEB			; ATL::szForceRemove
PUBLIC	?szNoRemove@ATL@@3QEB_WEB			; ATL::szNoRemove
PUBLIC	?szDelete@ATL@@3QEB_WEB				; ATL::szDelete
PUBLIC	?g_ControlVersion@@3JA				; g_ControlVersion
PUBLIC	CLSID_Registrar
PUBLIC	IID_IRegistrar
PUBLIC	IID_IDocHostUIHandlerDispatch
PUBLIC	IID_IAxWinHostWindow
PUBLIC	IID_IAxWinHostWindowLic
PUBLIC	IID_IAxWinAmbientDispatch
PUBLIC	IID_IAxWinAmbientDispatchEx
PUBLIC	IID_IInternalConnection
;	COMDAT ?WM_ATLGETHOST@ATL@@3IA
_BSS	SEGMENT
?WM_ATLGETHOST@ATL@@3IA DD 01H DUP (?)			; ATL::WM_ATLGETHOST
_BSS	ENDS
;	COMDAT ?WM_ATLGETCONTROL@ATL@@3IA
_BSS	SEGMENT
?WM_ATLGETCONTROL@ATL@@3IA DD 01H DUP (?)		; ATL::WM_ATLGETCONTROL
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPEAUHINSTANCE__@@@ZEA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPEAUHINSTANCE__@@@ZEA DQ 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZEA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZEA DQ 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?_AtlRegisterPerUser@ATL@@3_NA
_BSS	SEGMENT
?_AtlRegisterPerUser@ATL@@3_NA DB 01H DUP (?)		; ATL::_AtlRegisterPerUser
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA
_BSS	SEGMENT
?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA DQ 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PEAVCComModule@1@EA
_BSS	SEGMENT
?_pModule@ATL@@3PEAVCComModule@1@EA DQ 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
_BSS	SEGMENT
?s_nInstances@COPOSVideoCapture@@1HA DD 01H DUP (?)	; COPOSVideoCapture::s_nInstances
_BSS	ENDS
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PEAUIAtlAutoThreadModule@1@EA
_BSS	SEGMENT
?_pAtlAutoThreadModule@ATL@@3PEAUIAtlAutoThreadModule@1@EA DQ 01H DUP (?) ; ATL::_pAtlAutoThreadModule
_BSS	ENDS
;	COMDAT IID_IInternalConnection
CONST	SEGMENT
IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT IID_IAxWinAmbientDispatchEx
CONST	SEGMENT
IID_IAxWinAmbientDispatchEx DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT IID_IAxWinAmbientDispatch
CONST	SEGMENT
IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT IID_IAxWinHostWindowLic
CONST	SEGMENT
IID_IAxWinHostWindowLic DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
CONST	ENDS
;	COMDAT IID_IAxWinHostWindow
CONST	SEGMENT
IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT IID_IRegistrar
CONST	SEGMENT
IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT CLSID_Registrar
CONST	SEGMENT
CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT ?szDelete@ATL@@3QEB_WEB
CONST	SEGMENT
?szDelete@ATL@@3QEB_WEB DQ FLAT:$SG110909		; ATL::szDelete
CONST	ENDS
;	COMDAT ?szNoRemove@ATL@@3QEB_WEB
CONST	SEGMENT
?szNoRemove@ATL@@3QEB_WEB DQ FLAT:$SG110907		; ATL::szNoRemove
CONST	ENDS
;	COMDAT ?szForceRemove@ATL@@3QEB_WEB
CONST	SEGMENT
?szForceRemove@ATL@@3QEB_WEB DQ FLAT:$SG110905		; ATL::szForceRemove
CONST	ENDS
;	COMDAT ?szValToken@ATL@@3QEB_WEB
CONST	SEGMENT
?szValToken@ATL@@3QEB_WEB DQ FLAT:$SG110903		; ATL::szValToken
CONST	ENDS
;	COMDAT ?szBinaryVal@ATL@@3QEB_WEB
CONST	SEGMENT
?szBinaryVal@ATL@@3QEB_WEB DQ FLAT:$SG110901		; ATL::szBinaryVal
CONST	ENDS
;	COMDAT ?szDwordVal@ATL@@3QEB_WEB
CONST	SEGMENT
?szDwordVal@ATL@@3QEB_WEB DQ FLAT:$SG110899		; ATL::szDwordVal
CONST	ENDS
;	COMDAT ?multiszStringVal@ATL@@3QEB_WEB
CONST	SEGMENT
?multiszStringVal@ATL@@3QEB_WEB DQ FLAT:$SG110897	; ATL::multiszStringVal
CONST	ENDS
;	COMDAT ?szStringVal@ATL@@3QEB_WEB
CONST	SEGMENT
?szStringVal@ATL@@3QEB_WEB DQ FLAT:$SG110895		; ATL::szStringVal
CONST	ENDS
;	COMDAT ?chEquals@ATL@@3_WB
CONST	SEGMENT
?chEquals@ATL@@3_WB DW 03dH				; ATL::chEquals
CONST	ENDS
;	COMDAT ?chQuote@ATL@@3_WB
CONST	SEGMENT
?chQuote@ATL@@3_WB DW 027H				; ATL::chQuote
CONST	ENDS
;	COMDAT ?chLeftBracket@ATL@@3_WB
CONST	SEGMENT
?chLeftBracket@ATL@@3_WB DW 07bH			; ATL::chLeftBracket
CONST	ENDS
;	COMDAT ?chRightBracket@ATL@@3_WB
CONST	SEGMENT
?chRightBracket@ATL@@3_WB DW 07dH			; ATL::chRightBracket
CONST	ENDS
;	COMDAT ?chDirSep@ATL@@3_WB
CONST	SEGMENT
?chDirSep@ATL@@3_WB DW 05cH				; ATL::chDirSep
CONST	ENDS
_DATA	SEGMENT
?g_WindowName@@3PA_WA DB 'H', 00H, 'W', 00H, '_', 00H, 'O', 00H, 'P', 00H
	DB	'O', 00H, 'S', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o'
	DB	00H, 'C', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'u', 00H, 'r', 00H
	DB	'e', 00H, 00H, 00H				; g_WindowName
?g_ControlVersion@@3JA DD 0f80c0H			; g_ControlVersion
	ORG $+4
?g_ControlDescription@@3PADA DB 'OPOS VideoCapture Control 1.16.000 [Publ'
	DB	'ic, by KF] [With Tracing]', 00H		; g_ControlDescription
_DATA	ENDS
;	COMDAT __pobjMapEntryLast
ATL$__z	SEGMENT
__pobjMapEntryLast DQ 0000000000000000H
ATL$__z	ENDS
;	COMDAT __pobjMapEntryFirst
ATL$__a	SEGMENT
__pobjMapEntryFirst DQ 0000000000000000H
ATL$__a	ENDS
;	COMDAT LIBID_ATLLib
CONST	SEGMENT
LIBID_ATLLib DD	044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
CONST	SEGMENT
$SG198051 DB	'p', 00H, 'T', 00H, 'h', 00H, 'i', 00H, 's', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG198052 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198053 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG198056 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h', 00H
$SG198057 DB	'S', 00H, 'u', 00H, 'b', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 't'
	DB	00H, 'h', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 'g', 00H, 'h', 00H
	DB	' ', 00H, 'a', 00H, ' ', 00H, 'h', 00H, 'o', 00H, 'o', 00H, 'k'
	DB	00H, ' ', 00H, 'd', 00H, 'i', 00H, 's', 00H, 'c', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, 'e', 00H, 'd', 00H, '.', 00H, 0aH, 00H, 00H
	DB	00H
	ORG $+2
$SG198076 DB	'p', 00H, 'T', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H
	DB	'>', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'C', 00H, 'u', 00H, 'r'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'M', 00H, 's', 00H
	DB	'g', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '&', 00H, 'm'
	DB	00H, 's', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG181918 DB	':', 00H, 00H, 00H
$SG198077 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198113 DB	't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'm', 00H, '_', 00H, 'h', 00H, 'W', 00H, 'n', 00H, 'd', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+4
$SG198078 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG198114 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198121 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198115 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG198120 DB	't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'm', 00H, '_', 00H, 'h', 00H, 'W', 00H, 'n', 00H, 'd', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'h', 00H, 'W', 00H, 'n', 00H
	DB	'd', 00H, 00H, 00H
	ORG $+6
$SG198122 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG198139 DB	't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'm', 00H, '_', 00H, 'h', 00H, 'W', 00H, 'n', 00H, 'd', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG110895 DB	'S', 00H, 00H, 00H
$SG198140 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198141 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG198142 DB	':', 00H, ':', 00H, 'I', 00H, 's', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '(', 00H, 'h', 00H, 'W'
	DB	00H, 'n', 00H, 'd', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG110897 DB	'M', 00H, 00H, 00H
$SG198143 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198144 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG198162 DB	't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'm', 00H, '_', 00H, 'h', 00H, 'W', 00H, 'n', 00H, 'd', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG110899 DB	'D', 00H, 00H, 00H
$SG198163 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198164 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG198186 DB	'p', 00H, 'T', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H
	DB	'>', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'C', 00H, 'u', 00H, 'r'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'M', 00H, 's', 00H
	DB	'g', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '&', 00H, 'm'
	DB	00H, 's', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG110901 DB	'B', 00H, 00H, 00H
$SG198187 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198247 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198188 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG198246 DB	'p', 00H, 'p', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
$SG198248 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG198273 DB	'p', 00H, 'p', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
$SG198274 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG181902 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198275 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG181901 DB	'p', 00H, 'p', 00H, 'v', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	00H, 00H
	ORG $+2
$SG181903 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG193003 DB	00H, 00H
	ORG $+2
$SG198427 DB	'm', 00H, '_', 00H, 'b', 00H, 'e', 00H, 'g', 00H, 'i', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H
	ORG $+2
$SG193011 DB	00H, 00H
	ORG $+2
$SG198428 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198429 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG198458 DB	'h', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG198459 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198460 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG193068 DB	00H, 00H
	ORG $+2
$SG198494 DB	'h', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG198495 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198530 DB	'h', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG198496 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG193110 DB	00H, 00H
	ORG $+2
$SG198531 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198532 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG193214 DB	00H, 00H
	ORG $+2
$SG198566 DB	'h', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG198567 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG199152 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198568 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG193292 DB	00H, 00H
	ORG $+2
$SG199151 DB	'm', 00H, '_', 00H, 'b', 00H, 'e', 00H, 'g', 00H, 'i', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H
	ORG $+6
$SG199354 DB	'p', 00H, 'p', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
$SG199355 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG199153 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG199356 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG199381 DB	'p', 00H, 'p', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
$SG199382 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG199533 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG199383 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG199532 DB	'm', 00H, '_', 00H, 'b', 00H, 'e', 00H, 'g', 00H, 'i', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H
	ORG $+6
$SG199534 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG199556 DB	'p', 00H, 'p', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
$SG199557 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG93252 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 00H, 00H
$SG199558 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG93179 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG93301 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'Q', 00H, 'I', 00H, 00H, 00H
	ORG $+2
$SG93350 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'r', 00H, 00H, 00H
$SG193293 DB	's', 00H, 00H, 00H
$SG93399 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'f', 00H, 'c', 00H, 'o'
	DB	00H, 'u', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG193322 DB	00H, 00H
	ORG $+2
$SG93448 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H
$SG194113 DB	'Hue', 00H
$SG93497 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r'
	DB	00H, 'o', 00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG194003 DB	'CapHue', 00H
	ORG $+1
$SG194118 DB	'Hue', 00H
$SG93546 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 's', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 00H, 00H
$SG93595 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'D', 00H, 'B', 00H, 'C', 00H, 'l', 00H, 'i'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG194298 DB	'a', 00H, 00H, 00H
$SG93644 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'D', 00H, 'B', 00H, 'P', 00H, 'r', 00H, 'o'
	DB	00H, 'v', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG93693 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'n', 00H, 'a', 00H, 'p', 00H, 'i'
	DB	00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG93742 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'I', 00H, 'm'
	DB	00H, 'p', 00H, 'l', 00H, 00H, 00H
$SG93791 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG93840 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'E', 00H, 'x', 00H, 'c', 00H, 'e', 00H, 'p'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
$SG194405 DB	'>', 00H, 00H, 00H
$SG93889 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG186218 DB	00H, 00H
	ORG $+2
$SG93938 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'a', 00H, 'c', 00H, 'h', 00H, 'e'
	DB	00H, 00H, 00H
$SG186312 DB	00H, 00H
	ORG $+2
$SG93987 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'c'
	DB	00H, 'i', 00H, 'l', 00H, 00H, 00H
$SG94036 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG94085 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 00H, 00H
$SG94090 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'U', 00H, 't', 00H, 'i', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+6
$SG94139 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 'c', 00H, 'u', 00H, 'r'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H
	ORG $+6
$SG94188 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 00H
	DB	00H
	ORG $+6
$SG94237 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'I', 00H, 'S', 00H, 'A', 00H, 'P', 00H, 'I'
	DB	00H, 00H, 00H
	ORG $+4
$SG110903 DB	'V', 00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG110905 DB	'F', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'R', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 00H, 00H
$SG110907 DB	'N', 00H, 'o', 00H, 'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'v', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG110909 DB	'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG192892 DB	'COFreezeEvents', 00H
	ORG $+1
$SG192893 DB	'GetPropertyNumber', 00H
	ORG $+6
$SG192894 DB	'SetPropertyNumber', 00H
	ORG $+6
$SG192895 DB	'GetPropertyString', 00H
	ORG $+6
$SG192896 DB	'SetPropertyString', 00H
	ORG $+6
$SG192897 DB	'OpenService', 00H
	ORG $+4
$SG192898 DB	'CheckHealth', 00H
	ORG $+4
$SG192899 DB	'ClaimDevice', 00H
	ORG $+4
$SG192900 DB	'ClearInput', 00H
	ORG $+5
$SG192901 DB	'CloseService', 00H
	ORG $+3
$SG192902 DB	'DirectIO', 00H
	ORG $+7
$SG192903 DB	'ReleaseDevice', 00H
	ORG $+2
$SG192904 DB	'ResetStatistics', 00H
$SG192905 DB	'RetrieveStatistics', 00H
	ORG $+5
$SG192906 DB	'UpdateStatistics', 00H
	ORG $+7
$SG192907 DB	'CompareFirmwareVersion', 00H
	ORG $+1
$SG192908 DB	'UpdateFirmware', 00H
	ORG $+1
$SG192909 DB	'StartVideoRecording', 00H
	ORG $+4
$SG192910 DB	'StopVideoRecording', 00H
	ORG $+5
$SG192911 DB	'TakePhotograph', 00H
	ORG $+1
$SG193004 DB	'*', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ':', 00H, ' ', 00H, '%', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG193009 DB	'*', 00H, 'D', 00H, 'e', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'u', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H
	DB	00H
	ORG $+6
$SG193019 DB	'*', 00H, 'F', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'z', 00H
	DB	'e', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's'
	DB	00H, ':', 00H, ' ', 00H, 'F', 00H, 'r', 00H, 'e', 00H, 'e', 00H
	DB	'z', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, '%', 00H, 'd'
	DB	00H, 00H, 00H
	ORG $+2
$SG193021 DB	'*', 00H, 'F', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'z', 00H
	DB	'e', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's'
	DB	00H, ':', 00H, ' ', 00H, 'U', 00H, 'n', 00H, 'f', 00H, 'r', 00H
	DB	'e', 00H, 'e', 00H, 'z', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' '
	DB	00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+6
$SG193065 DB	'+', 00H, '%', 00H, 'h', 00H, 's', 00H, ' ', 00H, '[', 00H
	DB	'G', 00H, 'e', 00H, 't', 00H, ']', 00H, 00H, 00H
	ORG $+2
$SG193071 DB	' ', 00H, '-', 00H, '-', 00H, ' ', 00H, 'C', 00H, 'l', 00H
	DB	'o', 00H, 's', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG193074 DB	' ', 00H, '-', 00H, '-', 00H, ' ', 00H, 'N', 00H, 'o', 00H
	DB	't', 00H, ' ', 00H, 's', 00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o'
	DB	00H, 'r', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'b', 00H
	DB	'y', 00H, ' ', 00H, 'S', 00H, 'O', 00H, 00H, 00H
$SG193076 DB	' ', 00H, '-', 00H, '-', 00H, ' ', 00H, 'C', 00H, 'O', 00H
	DB	'M', 00H, ' ', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r'
	DB	00H, ':', 00H, ' ', 00H, 'H', 00H, 'R', 00H, ' ', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, 00H, 00H
	ORG $+6
$SG193077 DB	'-', 00H, '%', 00H, 'h', 00H, 's', 00H, ' ', 00H, '[', 00H
	DB	'G', 00H, 'e', 00H, 't', 00H, ']', 00H, ':', 00H, ' ', 00H, '%'
	DB	00H, 'd', 00H, ' ', 00H, '(', 00H, '0', 00H, 'x', 00H, '%', 00H
	DB	'X', 00H, ')', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG193106 DB	'+', 00H, '%', 00H, 'h', 00H, 's', 00H, ' ', 00H, '[', 00H
	DB	'S', 00H, 'e', 00H, 't', 00H, ']', 00H, ':', 00H, ' ', 00H, '%'
	DB	00H, 'd', 00H, ' ', 00H, '(', 00H, '0', 00H, 'x', 00H, '%', 00H
	DB	'X', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG193113 DB	' ', 00H, '-', 00H, '-', 00H, ' ', 00H, 'C', 00H, 'l', 00H
	DB	'o', 00H, 's', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG193116 DB	' ', 00H, '-', 00H, '-', 00H, ' ', 00H, 'N', 00H, 'o', 00H
	DB	't', 00H, ' ', 00H, 's', 00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o'
	DB	00H, 'r', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'b', 00H
	DB	'y', 00H, ' ', 00H, 'S', 00H, 'O', 00H, 00H, 00H
$SG193118 DB	' ', 00H, '-', 00H, '-', 00H, ' ', 00H, 'C', 00H, 'O', 00H
	DB	'M', 00H, ' ', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r'
	DB	00H, ':', 00H, ' ', 00H, 'H', 00H, 'R', 00H, ' ', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, 00H, 00H
	ORG $+6
$SG193119 DB	'-', 00H, '%', 00H, 'h', 00H, 's', 00H, ' ', 00H, '[', 00H
	DB	'S', 00H, 'e', 00H, 't', 00H, ']', 00H, '%', 00H, 's', 00H, 00H
	DB	00H
	ORG $+6
$SG193164 DB	'+', 00H, '%', 00H, 'h', 00H, 's', 00H, ' ', 00H, '[', 00H
	DB	'G', 00H, 'e', 00H, 't', 00H, ']', 00H, 00H, 00H
	ORG $+2
$SG193168 DB	'[', 00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H
	DB	']', 00H, 00H, 00H
$SG193169 DB	'-', 00H, '%', 00H, 'h', 00H, 's', 00H, ' ', 00H, '[', 00H
	DB	'G', 00H, 'e', 00H, 't', 00H, ']', 00H, '.', 00H, 00H, 00H
$SG193172 DB	'-', 00H, '%', 00H, 'h', 00H, 's', 00H, ' ', 00H, '[', 00H
	DB	'G', 00H, 'e', 00H, 't', 00H, ']', 00H, ' ', 00H, '-', 00H, '-'
	DB	00H, ' ', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H
	DB	'd', 00H, '.', 00H, 00H, 00H
$SG193784 DB	'State', 00H
	ORG $+6
$SG193175 DB	'-', 00H, '%', 00H, 'h', 00H, 's', 00H, ' ', 00H, '[', 00H
	DB	'G', 00H, 'e', 00H, 't', 00H, ']', 00H, ' ', 00H, '-', 00H, '-'
	DB	00H, ' ', 00H, 'N', 00H, 'o', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	'u', 00H, 'p', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 'b', 00H, 'y', 00H, ' ', 00H, 'S', 00H
	DB	'O', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG193209 DB	'+', 00H, '%', 00H, 'h', 00H, 's', 00H, ' ', 00H, '[', 00H
	DB	'S', 00H, 'e', 00H, 't', 00H, ']', 00H, '.', 00H, 00H, 00H
$SG193177 DB	'-', 00H, '%', 00H, 'h', 00H, 's', 00H, ' ', 00H, '[', 00H
	DB	'G', 00H, 'e', 00H, 't', 00H, ']', 00H, ' ', 00H, '-', 00H, '-'
	DB	00H, ' ', 00H, 'C', 00H, 'O', 00H, 'M', 00H, ' ', 00H, 'e', 00H
	DB	'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ':', 00H, ' ', 00H, 'H'
	DB	00H, 'R', 00H, ' ', 00H, '=', 00H, ' ', 00H, '0', 00H, 'x', 00H
	DB	'%', 00H, 'X', 00H, 00H, 00H
	ORG $+2
$SG193217 DB	' ', 00H, '-', 00H, '-', 00H, ' ', 00H, 'C', 00H, 'l', 00H
	DB	'o', 00H, 's', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG193220 DB	' ', 00H, '-', 00H, '-', 00H, ' ', 00H, 'N', 00H, 'o', 00H
	DB	't', 00H, ' ', 00H, 's', 00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o'
	DB	00H, 'r', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'b', 00H
	DB	'y', 00H, ' ', 00H, 'S', 00H, 'O', 00H, 00H, 00H
$SG193222 DB	' ', 00H, '-', 00H, '-', 00H, ' ', 00H, 'C', 00H, 'O', 00H
	DB	'M', 00H, ' ', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r'
	DB	00H, ':', 00H, ' ', 00H, 'H', 00H, 'R', 00H, ' ', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, 00H, 00H
	ORG $+6
$SG193223 DB	'-', 00H, '%', 00H, 'h', 00H, 's', 00H, ' ', 00H, '[', 00H
	DB	'S', 00H, 'e', 00H, 't', 00H, ']', 00H, '%', 00H, 's', 00H, 00H
	DB	00H
	ORG $+6
$SG193295 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, '#', 00H, '%', 00H
	DB	'u', 00H, ':', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG193294 DB	'+', 00H, '%', 00H, 'h', 00H, 's', 00H, ' ', 00H, '[', 00H
	DB	'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, ']', 00H, ' ', 00H, ' ', 00H, '%', 00H, 'u', 00H
	DB	' ', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG193297 DB	'%', 00H, 's', 00H, 'E', 00H, 'M', 00H, 'P', 00H, 'T', 00H
	DB	'Y', 00H, 00H, 00H
$SG193299 DB	'%', 00H, 's', 00H, 'B', 00H, 'O', 00H, 'O', 00H, 'L', 00H
	DB	' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, 00H, 00H
$SG193301 DB	'%', 00H, 's', 00H, 'B', 00H, 'O', 00H, 'O', 00H, 'L', 00H
	DB	'*', 00H, ' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, 00H
	DB	00H
	ORG $+6
$SG193303 DB	'%', 00H, 's', 00H, 'L', 00H, 'O', 00H, 'N', 00H, 'G', 00H
	DB	' ', 00H, '%', 00H, 'd', 00H, ' ', 00H, '(', 00H, '0', 00H, 'x'
	DB	00H, '%', 00H, 'X', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG193305 DB	'%', 00H, 's', 00H, 'L', 00H, 'O', 00H, 'N', 00H, 'G', 00H
	DB	'*', 00H, ' ', 00H, '%', 00H, 'd', 00H, ' ', 00H, '(', 00H, '0'
	DB	00H, 'x', 00H, '%', 00H, 'X', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG193307 DB	'%', 00H, 's', 00H, 'D', 00H, 'I', 00H, 'S', 00H, 'P', 00H
	DB	'A', 00H, 'T', 00H, 'C', 00H, 'H', 00H, ' ', 00H, '0', 00H, 'x'
	DB	00H, '%', 00H, 'X', 00H, 00H, 00H
$SG193309 DB	'%', 00H, 's', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H
	DB	'N', 00H, 'G', 00H, ';', 00H, 00H, 00H
	ORG $+4
$SG193311 DB	'%', 00H, 's', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H
	DB	'N', 00H, 'G', 00H, '*', 00H, ';', 00H, 00H, 00H
	ORG $+2
$SG193313 DB	'%', 00H, 's', 00H, 'U', 00H, 'n', 00H, 'k', 00H, 'n', 00H
	DB	'o', 00H, 'w', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'V', 00H, 'a'
	DB	00H, 'r', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, '=', 00H
	DB	'0', 00H, 'x', 00H, '%', 00H, 'X', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG193316 DB	'-', 00H, ' ', 00H, ' ', 00H, 'F', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ':', 00H, ' ', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, 0aH, 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H
	DB	00H
	ORG $+2
$SG193325 DB	' ', 00H, '-', 00H, '-', 00H, ' ', 00H, 'C', 00H, 'l', 00H
	DB	'o', 00H, 's', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG193328 DB	' ', 00H, '-', 00H, '-', 00H, ' ', 00H, 'N', 00H, 'o', 00H
	DB	't', 00H, ' ', 00H, 's', 00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o'
	DB	00H, 'r', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'b', 00H
	DB	'y', 00H, ' ', 00H, 'S', 00H, 'O', 00H, 00H, 00H
$SG193330 DB	' ', 00H, '-', 00H, '-', 00H, ' ', 00H, 'C', 00H, 'O', 00H
	DB	'M', 00H, ' ', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r'
	DB	00H, ':', 00H, ' ', 00H, 'H', 00H, 'R', 00H, ' ', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, 00H, 00H
	ORG $+6
$SG193331 DB	'-', 00H, '%', 00H, 'h', 00H, 's', 00H, ' ', 00H, '[', 00H
	DB	'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, ']', 00H, ' ', 00H, ' ', 00H, 'R', 00H, 'C', 00H
	DB	'=', 00H, '%', 00H, 'd', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+6
$SG193332 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, '#', 00H, '%', 00H
	DB	'u', 00H, ':', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG193334 DB	'%', 00H, 's', 00H, 'B', 00H, 'O', 00H, 'O', 00H, 'L', 00H
	DB	'*', 00H, ' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, 00H
	DB	00H
	ORG $+6
$SG193336 DB	'%', 00H, 's', 00H, 'L', 00H, 'O', 00H, 'N', 00H, 'G', 00H
	DB	'*', 00H, ' ', 00H, '%', 00H, 'd', 00H, ' ', 00H, '(', 00H, '0'
	DB	00H, 'x', 00H, '%', 00H, 'X', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG193338 DB	'%', 00H, 's', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H
	DB	'N', 00H, 'G', 00H, '*', 00H, ';', 00H, 00H, 00H
	ORG $+2
$SG193341 DB	'%', 00H, 's', 00H, ' ', 00H, 'U', 00H, 'n', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+6
$SG193364 DB	'*', 00H, 'S', 00H, 'e', 00H, 't', 00H, 'C', 00H, 'O', 00H
	DB	'F', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'z', 00H, 'e', 00H, 'E'
	DB	00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, ':', 00H
	DB	' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, 00H, 00H
	ORG $+6
$SG193499 DB	'SOFTWARE\OLEforRetail\ServiceOPOS\VideoCapture', 00H
	ORG $+1
$SG193525 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'C', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'S'
	DB	00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	' ', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, 00H, 00H
	ORG $+2
$SG193492 DB	'*', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, ' ', 00H
	DB	'[', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, ']', 00H, ':', 00H, ' ', 00H, 'D', 00H
	DB	'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'N', 00H, 'a'
	DB	00H, 'm', 00H, 'e', 00H, ' ', 00H, '<', 00H, '%', 00H, 'l', 00H
	DB	's', 00H, '>', 00H, 00H, 00H
	ORG $+2
$SG111608 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'T', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG193494 DB	'-', 00H, ' ', 00H, ' ', 00H, 'F', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ':', 00H, ' ', 00H, 'C', 00H, 'C'
	DB	00H, 'O', 00H, ' ', 00H, 'a', 00H, 'l', 00H, 'r', 00H, 'e', 00H
	DB	'a', 00H, 'd', 00H, 'y', 00H, ' ', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'n', 00H, ' ', 00H, '(', 00H, '%', 00H, 'd', 00H, '/', 00H
	DB	'%', 00H, 'd', 00H, ')', 00H, 00H, 00H
$SG111609 DB	'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'f', 00H
	DB	'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H
	ORG $+4
$SG193496 DB	'-', 00H, ' ', 00H, ' ', 00H, 'F', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ':', 00H, ' ', 00H, 'E', 00H, 'm'
	DB	00H, 'p', 00H, 't', 00H, 'y', 00H, ' ', 00H, 'd', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'n', 00H, 'a'
	DB	00H, 'm', 00H, 'e', 00H, ' ', 00H, '(', 00H, '%', 00H, 'd', 00H
	DB	'/', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG193498 DB	'-', 00H, ' ', 00H, ' ', 00H, 'F', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ':', 00H, ' ', 00H, 'D', 00H, 'e'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'n', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'o', 00H, 'o'
	DB	00H, ' ', 00H, 'b', 00H, 'i', 00H, 'g', 00H, ' ', 00H, '(', 00H
	DB	'%', 00H, 'd', 00H, '/', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG193501 DB	'-', 00H, ' ', 00H, ' ', 00H, 'F', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ':', 00H, ' ', 00H, 'C', 00H, 'a'
	DB	00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'g'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, 'r', 00H, 'y', 00H, ' ', 00H
	DB	'k', 00H, 'e', 00H, 'y', 00H, ' ', 00H, '<', 00H, '%', 00H, 's'
	DB	00H, '>', 00H, ' ', 00H, '(', 00H, '%', 00H, 'd', 00H, '/', 00H
	DB	'%', 00H, 'd', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG111605 DB	'A', 00H, 'p', 00H, 'p', 00H, 'I', 00H, 'D', 00H, 00H, 00H
$SG194093 DB	'Gain', 00H
	ORG $+7
$SG193502 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'R', 00H, 'e', 00H
	DB	'g', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 'K', 00H, 'e'
	DB	00H, 'y', 00H, 'E', 00H, 'x', 00H, ' ', 00H, 'e', 00H, 'r', 00H
	DB	'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '%', 00H, 'd', 00H, 0aH
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H
	DB	00H, 00H
	ORG $+6
$SG111606 DB	'C', 00H, 'L', 00H, 'S', 00H, 'I', 00H, 'D', 00H, 00H, 00H
$SG194098 DB	'Gain', 00H
	ORG $+7
$SG193503 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'O', 00H, 'p', 00H
	DB	'e', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e'
	DB	00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H, 'r', 00H, 'y', 00H
	DB	' ', 00H, 'k', 00H, 'e', 00H, 'y', 00H, ' ', 00H, 'H', 00H, 'K'
	DB	00H, 'L', 00H, 'M', 00H, '\', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG193507 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'N', 00H, 'a', 00H, 'm'
	DB	00H, 'e', 00H, ' ', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'n', 00H
	DB	'o', 00H, 't', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'L', 00H, 'o'
	DB	00H, 'g', 00H, 'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'N', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, ';', 00H, ' ', 00H, 't', 00H, 'r'
	DB	00H, 'e', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 'a', 00H, 's', 00H, ' ', 00H, 'P', 00H, 'h', 00H, 'y'
	DB	00H, 's', 00H, 'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'N', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+4
$SG193508 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'N', 00H, 'a', 00H, 'm'
	DB	00H, 'e', 00H, ' ', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'a', 00H
	DB	' ', 00H, 'L', 00H, 'o', 00H, 'g', 00H, 'i', 00H, 'c', 00H, 'a'
	DB	00H, 'l', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ';', 00H
	DB	' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'v', 00H, 'e', 00H, 'r'
	DB	00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 't', 00H, 'o', 00H
	DB	' ', 00H, 'P', 00H, 'h', 00H, 'y', 00H, 's', 00H, 'i', 00H, 'c'
	DB	00H, 'a', 00H, 'l', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	' ', 00H, '<', 00H, '%', 00H, 's', 00H, '>', 00H, 00H, 00H
$SG193510 DB	'-', 00H, ' ', 00H, ' ', 00H, 'F', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ':', 00H, ' ', 00H, 'C', 00H, 'a'
	DB	00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'D', 00H, 'e', 00H, 'v'
	DB	00H, 'i', 00H, 'c', 00H, 'e', 00H, 'N', 00H, 'a', 00H, 'm', 00H
	DB	'e', 00H, ' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 'k', 00H, 'e'
	DB	00H, 'y', 00H, ' ', 00H, '(', 00H, '%', 00H, 'd', 00H, '/', 00H
	DB	'%', 00H, 'd', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG111610 DB	'H', 00H, 'a', 00H, 'r', 00H, 'd', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG193511 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'R', 00H, 'e', 00H
	DB	'g', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 'K', 00H, 'e'
	DB	00H, 'y', 00H, 'E', 00H, 'x', 00H, ' ', 00H, 'e', 00H, 'r', 00H
	DB	'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '%', 00H, 'd', 00H, 0aH
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H
	DB	00H, 00H
	ORG $+6
$SG193512 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'O', 00H, 'p', 00H
	DB	'e', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'D', 00H, 'e'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'N', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 'k'
	DB	00H, 'e', 00H, 'y', 00H, 00H, 00H
	ORG $+6
$SG111612 DB	'S', 00H, 'A', 00H, 'M', 00H, 00H, 00H
$SG193515 DB	'-', 00H, ' ', 00H, ' ', 00H, 'F', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ':', 00H, ' ', 00H, 'C', 00H, 'a'
	DB	00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'g', 00H
	DB	'e', 00H, 't', 00H, ' ', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g'
	DB	00H, 'I', 00H, 'D', 00H, ' ', 00H, 'f', 00H, 'r', 00H, 'o', 00H
	DB	'm', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'y', 00H, ' ', 00H, '(', 00H, '%', 00H
	DB	'd', 00H, '/', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG111613 DB	'S', 00H, 'E', 00H, 'C', 00H, 'U', 00H, 'R', 00H, 'I', 00H
	DB	'T', 00H, 'Y', 00H, 00H, 00H
	ORG $+6
$SG193516 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'R', 00H, 'e', 00H
	DB	'g', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 'K', 00H, 'e'
	DB	00H, 'y', 00H, 'E', 00H, 'x', 00H, ' ', 00H, 'e', 00H, 'r', 00H
	DB	'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '%', 00H, 'd', 00H, 0aH
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H
	DB	00H, 00H
	ORG $+6
$SG193533 DB	'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 00H, 00H
$SG194398 DB	'h', 00H, 's', 00H, 00H, 00H
	ORG $+6
$SG193517 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'N', 00H, 'a', 00H, 'm'
	DB	00H, 'e', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'p', 00H, 'p', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'P'
	DB	00H, 'r', 00H, 'o', 00H, 'g', 00H, 'I', 00H, 'D', 00H, ' ', 00H
	DB	'<', 00H, '%', 00H, 's', 00H, '>', 00H, 00H, 00H
	ORG $+6
$SG193519 DB	'-', 00H, ' ', 00H, ' ', 00H, 'F', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ':', 00H, ' ', 00H, 'C', 00H, 'a'
	DB	00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 't', 00H, ' '
	DB	00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H, 'I', 00H, 'D', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'C', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, 'I', 00H, 'D', 00H, ' ', 00H, '(', 00H
	DB	'%', 00H, 'd', 00H, '/', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H
	DB	00H
$SG111615 DB	'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG193520 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'C', 00H, 'L', 00H
	DB	'S', 00H, 'I', 00H, 'D', 00H, 'F', 00H, 'r', 00H, 'o', 00H, 'm'
	DB	00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H, 'I', 00H, 'D', 00H
	DB	' ', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, 0aH, 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+4
$SG193521 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'P', 00H, 'r', 00H
	DB	'o', 00H, 'g', 00H, 'I', 00H, 'D', 00H, ' ', 00H, 'm', 00H, 'a'
	DB	00H, 'p', 00H, 'p', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 't', 00H
	DB	'o', 00H, ' ', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, 'I', 00H, 'D', 00H, 00H, 00H
	ORG $+6
$SG193523 DB	'-', 00H, ' ', 00H, ' ', 00H, 'F', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ':', 00H, ' ', 00H, 'C', 00H, 'a'
	DB	00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'c', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'S'
	DB	00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	' ', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, '(', 00H, '%', 00H, 'd', 00H, '/', 00H, '%', 00H
	DB	'd', 00H, ')', 00H, 00H, 00H
$SG193524 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'C', 00H, 'o', 00H
	DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'I'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'c', 00H
	DB	'e', 00H, ' ', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, 0aH, 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H
	DB	00H
	ORG $+2
$SG193527 DB	'-', 00H, ' ', 00H, ' ', 00H, 'F', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ':', 00H, ' ', 00H, 'C', 00H, 'a'
	DB	00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'g', 00H
	DB	'e', 00H, 't', 00H, ' ', 00H, 'S', 00H, 'e', 00H, 'r', 00H, 'v'
	DB	00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, '''', 00H, 's', 00H, ' '
	DB	00H, 'D', 00H, 'i', 00H, 's', 00H, 'p', 00H, 'a', 00H, 't', 00H
	DB	'c', 00H, 'h', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '(', 00H, '%', 00H
	DB	'd', 00H, '/', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H
$SG111607 DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'C', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
	ORG $+6
$SG193528 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'Q', 00H, 'u', 00H
	DB	'e', 00H, 'r', 00H, 'y', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'e', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '0'
	DB	00H, 'x', 00H, '%', 00H, 'X', 00H, 0aH, 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+6
$SG193529 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'A', 00H, 'c', 00H
	DB	'q', 00H, 'u', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H
	DB	'e', 00H, ' ', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, '''', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'i', 00H
	DB	's', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'c', 00H, 'h', 00H, ' '
	DB	00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 00H, 00H
	ORG $+2
$SG111611 DB	'M', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG111614 DB	'S', 00H, 'Y', 00H, 'S', 00H, 'T', 00H, 'E', 00H, 'M', 00H
	DB	00H, 00H
	ORG $+2
$SG193536 DB	'C', 00H, 'l', 00H, 'a', 00H, 'i', 00H, 'm', 00H, 00H, 00H
	ORG $+4
$SG111616 DB	'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'L', 00H, 'i', 00H
	DB	'b', 00H, 00H, 00H
$SG193539 DB	'R', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H
	DB	'e', 00H, 00H, 00H
$SG193544 DB	'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 00H, 00H
	ORG $+4
$SG193547 DB	'C', 00H, 'l', 00H, 'a', 00H, 'i', 00H, 'm', 00H, 00H, 00H
	ORG $+4
$SG193550 DB	'R', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H
	DB	'e', 00H, 00H, 00H
$SG193553 DB	'-', 00H, ' ', 00H, ' ', 00H, 'F', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ':', 00H, ' ', 00H, 'D', 00H, 'o'
	DB	00H, 'e', 00H, 's', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't'
	DB	00H, ' ', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'o', 00H
	DB	'f', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i'
	DB	00H, 'a', 00H, 'l', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'l', 00H
	DB	'e', 00H, 'a', 00H, 's', 00H, 'e', 00H, '''', 00H, 's', 00H, ' '
	DB	00H, 'm', 00H, 'e', 00H, 't', 00H, 'h', 00H, 'o', 00H, 'd', 00H
	DB	's', 00H, ' ', 00H, '(', 00H, '%', 00H, 'd', 00H, '/', 00H, '%'
	DB	00H, 'd', 00H, ')', 00H, 00H, 00H
$SG193561 DB	'Open-OpenService', 00H
	ORG $+7
$SG193554 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'z', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o'
	DB	00H, 'C', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'u', 00H, 'r', 00H
	DB	'e', 00H, '\', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o'
	DB	00H, 'C', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'u', 00H, 'r', 00H
	DB	'e', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG193555 DB	'(', 00H, '(', 00H, 'H', 00H, 'R', 00H, 'E', 00H, 'S', 00H
	DB	'U', 00H, 'L', 00H, 'T', 00H, ')', 00H, '0', 00H, 'L', 00H, ')'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'Q', 00H, 'u', 00H
	DB	'e', 00H, 'r', 00H, 'y', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H, 'e', 00H, '(', 00H
	DB	' ', 00H, 'I', 00H, 'I', 00H, 'D', 00H, '_', 00H, 'I', 00H, 'D'
	DB	00H, 'i', 00H, 's', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'c', 00H
	DB	'h', 00H, ',', 00H, ' ', 00H, '(', 00H, 'v', 00H, 'o', 00H, 'i'
	DB	00H, 'd', 00H, '*', 00H, '*', 00H, ')', 00H, ' ', 00H, '&', 00H
	DB	'p', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'p', 00H, 'a', 00H, 't'
	DB	00H, 'c', 00H, 'h', 00H, ' ', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG193557 DB	'VideoCapture', 00H
	ORG $+3
$SG193559 DB	'-', 00H, ' ', 00H, ' ', 00H, 'F', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ':', 00H, ' ', 00H, 'S', 00H, 'e'
	DB	00H, 't', 00H, 'u', 00H, 'p', 00H, ' ', 00H, 'f', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 'S'
	DB	00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, '0'
	DB	00H, 'x', 00H, '%', 00H, 'X', 00H, 0aH, 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+4
$SG193565 DB	'G', 00H, 'e', 00H, 't', 00H, 'O', 00H, 'p', 00H, 'e', 00H
	DB	'n', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'u', 00H, 'l', 00H, 't'
	DB	00H, 00H, 00H
$SG194399 DB	'l', 00H, 's', 00H, 00H, 00H
	ORG $+6
$SG193568 DB	'-', 00H, ' ', 00H, ' ', 00H, 'F', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ':', 00H, ' ', 00H, 'S', 00H, 'e'
	DB	00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, ''''
	DB	00H, 's', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e'
	DB	00H, ' ', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 'o', 00H, 'r', 00H
	DB	't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'f', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, 'u', 00H, 'r', 00H, 'e', 00H, ' ', 00H, '(', 00H
	DB	'%', 00H, 'd', 00H, '/', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H
	DB	00H
	ORG $+6
$SG193569 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'o', 00H, 'k', 00H, 'e', 00H, ' ', 00H, 'e', 00H, 'r'
	DB	00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '0', 00H, 'x', 00H
	DB	'%', 00H, 'X', 00H, 0aH, 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+6
$SG193573 DB	'Open-ServiceObjectDescription', 00H
	ORG $+2
$SG193574 DB	'Open-DeviceDescription', 00H
	ORG $+1
$SG193571 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'S', 00H, 'e', 00H
	DB	'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'O'
	DB	00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, '''', 00H
	DB	's', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 'S'
	DB	00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 'e'
	DB	00H, 'd', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG193575 DB	'Open-DeviceName', 00H
$SG193589 DB	'-', 00H, ' ', 00H, ' ', 00H, 'S', 00H, 'u', 00H, 'c', 00H
	DB	'c', 00H, 'e', 00H, 's', 00H, 's', 00H, ' ', 00H, '(', 00H, '0'
	DB	00H, '/', 00H, '0', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG193572 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, '<', 00H, 'S', 00H
	DB	't', 00H, 'a', 00H, 'r', 00H, 't', 00H, '>', 00H, ' ', 00H, 'S'
	DB	00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	' ', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 'e', 00H
	DB	'r', 00H, 't', 00H, 'i', 00H, 'e', 00H, 's', 00H, '.', 00H, 00H
	DB	00H
	ORG $+2
$SG193576 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, '<', 00H, 'E', 00H
	DB	'n', 00H, 'd', 00H, '>', 00H, ' ', 00H, 'S', 00H, 'e', 00H, 'r'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'O', 00H
	DB	'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'P'
	DB	00H, 'r', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, '.', 00H, 00H, 00H
	ORG $+6
$SG193577 DB	'Open-ServiceObjectVersion', 00H
	ORG $+6
$SG193580 DB	'-', 00H, ' ', 00H, ' ', 00H, 'F', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ':', 00H, ' ', 00H, 'S', 00H, 'e'
	DB	00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, ''''
	DB	00H, 's', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'j', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, ' ', 00H, 'i', 00H, 's', 00H, ' ', 00H
	DB	'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, '1', 00H, ' ', 00H, '('
	DB	00H, '%', 00H, 'd', 00H, '/', 00H, '%', 00H, 'd', 00H, ')', 00H
	DB	00H, 00H
	ORG $+2
$SG193601 DB	'*', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H
	DB	' ', 00H, '[', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, ']', 00H, ' ', 00H, ' ', 00H
	DB	'R', 00H, 'C', 00H, '=', 00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+6
$SG193585 DB	'-', 00H, ' ', 00H, ' ', 00H, 'F', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ':', 00H, ' ', 00H, 'D', 00H, 'o'
	DB	00H, 'e', 00H, 's', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't'
	DB	00H, ' ', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'o', 00H
	DB	'f', 00H, ' ', 00H, 'i', 00H, 't', 00H, 's', 00H, ' ', 00H, 'r'
	DB	00H, 'e', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	'''', 00H, 's', 00H, ' ', 00H, 'm', 00H, 'e', 00H, 't', 00H, 'h'
	DB	00H, 'o', 00H, 'd', 00H, 's', 00H, ' ', 00H, '(', 00H, '%', 00H
	DB	'd', 00H, '/', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H
$SG193602 DB	'Close-CloseService', 00H
	ORG $+5
$SG193603 DB	'*', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H
	DB	' ', 00H, '[', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, ']', 00H, ' ', 00H, ' ', 00H
	DB	'R', 00H, 'C', 00H, '=', 00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+6
$SG193613 DB	'*', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 'i', 00H, 'm', 00H
	DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' '
	DB	00H, '[', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, ']', 00H, ' ', 00H, '-', 00H, '-'
	DB	00H, ' ', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H
	DB	'd', 00H, 00H, 00H
	ORG $+4
$SG193615 DB	'ClaimDevice', 00H
	ORG $+12
$SG193623 DB	'*', 00H, 'R', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'a', 00H
	DB	's', 00H, 'e', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c'
	DB	00H, 'e', 00H, ' ', 00H, '[', 00H, 'F', 00H, 'u', 00H, 'n', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ']', 00H, ' '
	DB	00H, '-', 00H, '-', 00H, ' ', 00H, 'C', 00H, 'l', 00H, 'o', 00H
	DB	's', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG193624 DB	'ReleaseDevice', 00H
	ORG $+2
$SG193630 DB	'*', 00H, 'S', 00H, 'O', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'c', 00H, 'e', 00H, 's', 00H, 's', 00H, 'I', 00H, 'D', 00H, ':'
	DB	00H, ' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, 00H, 00H
	ORG $+2
$SG193639 DB	'CheckHealth', 00H
	ORG $+4
$SG193645 DB	'ClearInput', 00H
	ORG $+5
$SG193659 DB	'DirectIO', 00H
	ORG $+7
$SG193669 DB	'ResetStatistics', 00H
$SG193679 DB	'RetrieveStatistics', 00H
	ORG $+5
$SG193689 DB	'UpdateStatistics', 00H
	ORG $+7
$SG193702 DB	'CompareFirmwareVersion', 00H
	ORG $+1
$SG193712 DB	'UpdateFirmware', 00H
	ORG $+1
$SG193726 DB	'StartVideo', 00H
	ORG $+5
$SG193732 DB	'StopVideo', 00H
	ORG $+6
$SG193746 DB	'TakePhoto', 00H
	ORG $+6
$SG193751 DB	'FreezeEvents', 00H
	ORG $+3
$SG193759 DB	'*', 00H, 'F', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'z', 00H
	DB	'e', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's'
	DB	00H, ' ', 00H, '[', 00H, 'S', 00H, 'e', 00H, 't', 00H, ']', 00H
	DB	' ', 00H, '-', 00H, '-', 00H, ' ', 00H, 'C', 00H, 'l', 00H, 'o'
	DB	00H, 's', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+4
$SG193762 DB	'FreezeEvents', 00H
	ORG $+3
$SG193763 DB	'FreezeEvents', 00H
	ORG $+3
$SG193771 DB	'*', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'u', 00H, 'l', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ' ', 00H, '['
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, ']', 00H, ' ', 00H, '-', 00H
	DB	'-', 00H, ' ', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e'
	DB	00H, 'd', 00H, 00H, 00H
$SG193774 DB	'*', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'u', 00H, 'l', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ' ', 00H, '['
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, ']', 00H, ':', 00H, ' ', 00H
	DB	'%', 00H, 'd', 00H, ' ', 00H, '-', 00H, '-', 00H, ' ', 00H, 'f'
	DB	00H, 'r', 00H, 'o', 00H, 'm', 00H, ' ', 00H, 'C', 00H, 'O', 00H
	DB	00H, 00H
	ORG $+6
$SG193775 DB	'ResultCode', 00H
	ORG $+5
$SG193783 DB	'*', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	' ', 00H, '[', 00H, 'G', 00H, 'e', 00H, 't', 00H, ']', 00H, ' '
	DB	00H, '-', 00H, '-', 00H, ' ', 00H, 'C', 00H, 'l', 00H, 'o', 00H
	DB	's', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG193808 DB	'BinaryConversion', 00H
	ORG $+7
$SG193791 DB	'*', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H
	DB	'o', 00H, 'l', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, 'r', 00H
	DB	'i', 00H, 'p', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, '[', 00H, 'G', 00H, 'e', 00H, 't', 00H, ']', 00H, ':', 00H
	DB	' ', 00H, '<', 00H, '%', 00H, 'h', 00H, 's', 00H, '>', 00H, 00H
	DB	00H
	ORG $+2
$SG193797 DB	'*', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H
	DB	'o', 00H, 'l', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, ' ', 00H, '[', 00H, 'G', 00H, 'e', 00H, 't'
	DB	00H, ']', 00H, ':', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
$SG193803 DB	'*', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 'R', 00H
	DB	'e', 00H, 's', 00H, 'u', 00H, 'l', 00H, 't', 00H, ' ', 00H, '['
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, ']', 00H, ':', 00H, ' ', 00H
	DB	'%', 00H, 'd', 00H, 00H, 00H
	ORG $+4
$SG193813 DB	'BinaryConversion', 00H
	ORG $+7
$SG193818 DB	'CapPowerReporting', 00H
	ORG $+6
$SG193823 DB	'CheckHealthText', 00H
$SG193828 DB	'Claimed', 00H
$SG193833 DB	'DeviceEnabled', 00H
	ORG $+2
$SG193838 DB	'DeviceEnabled', 00H
	ORG $+2
$SG193843 DB	'PowerNotify', 00H
	ORG $+4
$SG193848 DB	'PowerNotify', 00H
	ORG $+4
$SG193853 DB	'PowerState', 00H
	ORG $+5
$SG193858 DB	'ResultCodeExtended', 00H
	ORG $+5
$SG193863 DB	'ServiceObjectDescription', 00H
	ORG $+7
$SG193868 DB	'ServiceObjectVersion', 00H
	ORG $+3
$SG193873 DB	'DeviceDescription', 00H
	ORG $+6
$SG193878 DB	'DeviceName', 00H
	ORG $+5
$SG193883 DB	'CapStatisticsReporting', 00H
	ORG $+1
$SG193888 DB	'CapUpdateStatistics', 00H
	ORG $+4
$SG193893 DB	'CapCompareFirmwareVersion', 00H
	ORG $+6
$SG193898 DB	'CapUpdateFirmware', 00H
	ORG $+6
$SG193903 DB	'AutoExposure', 00H
	ORG $+3
$SG193908 DB	'AutoExposure', 00H
	ORG $+3
$SG193913 DB	'AutoFocus', 00H
	ORG $+6
$SG193918 DB	'AutoFocus', 00H
	ORG $+6
$SG193923 DB	'AutoGain', 00H
	ORG $+7
$SG193928 DB	'AutoGain', 00H
	ORG $+7
$SG193933 DB	'AutoWhiteBalance', 00H
	ORG $+7
$SG193938 DB	'AutoWhiteBalance', 00H
	ORG $+7
$SG193943 DB	'Brightness', 00H
	ORG $+5
$SG193948 DB	'Brightness', 00H
	ORG $+5
$SG193953 DB	'CapAssociatedHardTotalsDevice', 00H
	ORG $+2
$SG193958 DB	'CapAutoExposure', 00H
$SG193963 DB	'CapAutoFocus', 00H
	ORG $+3
$SG193968 DB	'CapAutoGain', 00H
	ORG $+4
$SG193973 DB	'CapAutoWhiteBalance', 00H
	ORG $+4
$SG193978 DB	'CapBrightness', 00H
	ORG $+2
$SG193983 DB	'CapContrast', 00H
	ORG $+4
$SG193988 DB	'CapExposure', 00H
	ORG $+4
$SG193993 DB	'CapGain', 00H
$SG193998 DB	'CapHorizontalFlip', 00H
	ORG $+6
$SG194008 DB	'CapPhoto', 00H
	ORG $+7
$SG194013 DB	'CapPhotoColorSpace', 00H
	ORG $+5
$SG194018 DB	'CapPhotoFrameRate', 00H
	ORG $+6
$SG194023 DB	'CapPhotoResolution', 00H
	ORG $+5
$SG194028 DB	'CapPhotoType', 00H
	ORG $+3
$SG194033 DB	'CapSaturation', 00H
	ORG $+2
$SG194038 DB	'CapStorage', 00H
	ORG $+5
$SG194043 DB	'CapVerticalFlip', 00H
$SG194048 DB	'CapVideo', 00H
	ORG $+7
$SG194053 DB	'CapVideoColorSpace', 00H
	ORG $+5
$SG194058 DB	'CapVideoFrameRate', 00H
	ORG $+6
$SG194063 DB	'CapVideoResolution', 00H
	ORG $+5
$SG194068 DB	'CapVideoType', 00H
	ORG $+3
$SG194073 DB	'Contrast', 00H
	ORG $+7
$SG194078 DB	'Contrast', 00H
	ORG $+7
$SG194083 DB	'Exposure', 00H
	ORG $+7
$SG194088 DB	'Exposure', 00H
	ORG $+7
$SG194103 DB	'HorizontalFlip', 00H
	ORG $+1
$SG194108 DB	'HorizontalFlip', 00H
	ORG $+1
$SG194123 DB	'PhotoColorSpace', 00H
$SG194128 DB	'PhotoColorSpace', 00H
$SG194133 DB	'PhotoColorSpaceList', 00H
	ORG $+4
$SG194138 DB	'PhotoFrameRate', 00H
	ORG $+1
$SG194143 DB	'PhotoFrameRate', 00H
	ORG $+1
$SG194148 DB	'PhotoMaxFrameRate', 00H
	ORG $+6
$SG194153 DB	'PhotoResolution', 00H
$SG194158 DB	'PhotoResolution', 00H
$SG194163 DB	'PhotoResolutionList', 00H
	ORG $+4
$SG194168 DB	'PhotoType', 00H
	ORG $+6
$SG194173 DB	'PhotoType', 00H
	ORG $+6
$SG194178 DB	'PhotoTypeList', 00H
	ORG $+2
$SG194183 DB	'RemainingRecordingTimeInSec', 00H
	ORG $+4
$SG194188 DB	'Saturation', 00H
	ORG $+5
$SG194193 DB	'Saturation', 00H
	ORG $+5
$SG194198 DB	'Storage', 00H
$SG194203 DB	'Storage', 00H
$SG194208 DB	'VerticalFlip', 00H
	ORG $+3
$SG194213 DB	'VerticalFlip', 00H
	ORG $+3
$SG194218 DB	'VideoCaptureMode', 00H
	ORG $+7
$SG194223 DB	'VideoCaptureMode', 00H
	ORG $+7
$SG194228 DB	'VideoColorSpace', 00H
$SG194233 DB	'VideoColorSpace', 00H
$SG194238 DB	'VideoColorSpaceList', 00H
	ORG $+4
$SG194243 DB	'VideoFrameRate', 00H
	ORG $+1
$SG194248 DB	'VideoFrameRate', 00H
	ORG $+1
$SG194253 DB	'VideoMaxFrameRate', 00H
	ORG $+6
$SG194258 DB	'VideoResolution', 00H
$SG194263 DB	'VideoResolution', 00H
$SG194268 DB	'VideoResolutionList', 00H
	ORG $+4
$SG194273 DB	'VideoType', 00H
	ORG $+6
$SG194278 DB	'VideoType', 00H
	ORG $+6
$SG194283 DB	'VideoTypeList', 00H
	ORG $+2
$SG194313 DB	'[', 00H, 'U', 00H, 'n', 00H, 'k', 00H, 'n', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, ']', 00H, 00H, 00H
	ORG $+4
$SG194326 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 'h', 00H
	DB	's', 00H, 00H, 00H
$SG194356 DB	'%', 00H, 's', 00H, ' ', 00H, 'L', 00H, 'e', 00H, 'n', 00H
	DB	'g', 00H, 't', 00H, 'h', 00H, ' ', 00H, '0', 00H, ' ', 00H, '<'
	DB	00H, '>', 00H, 00H, 00H
	ORG $+2
$SG194359 DB	'%', 00H, 's', 00H, ' ', 00H, 'L', 00H, 'e', 00H, 'n', 00H
	DB	'g', 00H, 't', 00H, 'h', 00H, ' ', 00H, '%', 00H, 'u', 00H, 00H
	DB	00H
	ORG $+6
$SG194371 DB	'%', 00H, 's', 00H, ' ', 00H, 'L', 00H, 'e', 00H, 'n', 00H
	DB	'g', 00H, 't', 00H, 'h', 00H, ' ', 00H, '%', 00H, 'u', 00H, ' '
	DB	00H, '[', 00H, 'B', 00H, 'i', 00H, 'n', 00H, 'C', 00H, 'o', 00H
	DB	'n', 00H, 'v', 00H, ']', 00H, 00H, 00H
	ORG $+2
$SG194404 DB	' ', 00H, '<', 00H, '%', 00H, 00H, 00H
$SG194406 DB	' ', 00H, ' ', 00H, '<', 00H, '%', 00H, '%', 00H, '.', 00H
	DB	'%', 00H, 'u', 00H, '%', 00H, 's', 00H, '>', 00H, 00H, 00H
$SG194407 DB	'%', 00H, 's', 00H, ' ', 00H, '[', 00H, 'C', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 's', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 'n', 00H, '-', 00H, 'A', 00H, 'S', 00H
	DB	'C', 00H, 'I', 00H, 'I', 00H, ']', 00H, 00H, 00H
$SG186222 DB	'_', 00H, '_', 00H, 'a', 00H, 't', 00H, 'l', 00H, '_', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l'
	DB	00H, 00H, 00H
	ORG $+4
$SG186223 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG186224 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG186227 DB	'l', 00H, 'p', 00H, 's', 00H, 'z', 00H, 'N', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG186228 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG186243 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG186229 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG186234 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ':', 00H, ' ', 00H, '0'
	DB	00H, 'x', 00H, '%', 00H, 'x', 00H, ' ', 00H, '-', 00H, ' ', 00H
	DB	'%', 00H, 'T', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG186317 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG186231 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlhost.h', 00H
	ORG $+7
$SG186242 DB	'l', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H
	DB	00H, 00H
	ORG $+2
$SG186323 DB	'l', 00H, 'p', 00H, 's', 00H, 'z', 00H, 'N', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG186232 DB	'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H
	DB	'l', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'f', 00H, 'a', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '''', 00H, '%', 00H, 'T', 00H, 's', 00H
	DB	'''', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG186324 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG186233 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlhost.h', 00H
	ORG $+7
$SG186316 DB	'_', 00H, '_', 00H, 'a', 00H, 't', 00H, 'l', 00H, '_', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l'
	DB	00H, 00H, 00H
	ORG $+4
$SG186330 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ':', 00H, ' ', 00H, '0'
	DB	00H, 'x', 00H, '%', 00H, 'x', 00H, ' ', 00H, '-', 00H, ' ', 00H
	DB	'%', 00H, 'T', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG186339 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG186244 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG186338 DB	'l', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H
	DB	00H, 00H
	ORG $+2
$SG112736 DB	'l', 00H, 'p', 00H, 's', 00H, 'z', 00H, 'P', 00H, 'a', 00H
	DB	't', 00H, 'h', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+4
$SG186318 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG112737 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG186325 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+14
$SG186327 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlhost.h', 00H
	ORG $+15
$SG186328 DB	'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H
	DB	'l', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'f', 00H, 'a', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '''', 00H, '%', 00H, 'T', 00H, 's', 00H
	DB	'''', 00H, 0aH, 00H, 00H, 00H
	ORG $+10
$SG186329 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlhost.h', 00H
	ORG $+15
$SG186340 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+14
$SG112738 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??_I@YAXPEAX_K1P6AX0@Z@Z			; `vector destructor iterator'
PUBLIC	InlineIsEqualGUID
PUBLIC	HRESULT_FROM_WIN32
PUBLIC	??0IUnknown@@QEAA@XZ				; IUnknown::IUnknown
PUBLIC	??0IPersist@@QEAA@XZ				; IPersist::IPersist
PUBLIC	??0IPersistStorage@@QEAA@XZ			; IPersistStorage::IPersistStorage
PUBLIC	??0IDataObject@@QEAA@XZ				; IDataObject::IDataObject
PUBLIC	??0IDispatch@@QEAA@XZ				; IDispatch::IDispatch
PUBLIC	??0IOleObject@@QEAA@XZ				; IOleObject::IOleObject
PUBLIC	??0IOleWindow@@QEAA@XZ				; IOleWindow::IOleWindow
PUBLIC	??0IOleInPlaceActiveObject@@QEAA@XZ		; IOleInPlaceActiveObject::IOleInPlaceActiveObject
PUBLIC	??0IOleInPlaceObject@@QEAA@XZ			; IOleInPlaceObject::IOleInPlaceObject
PUBLIC	??0IViewObject@@QEAA@XZ				; IViewObject::IViewObject
PUBLIC	??0IViewObject2@@QEAA@XZ			; IViewObject2::IViewObject2
PUBLIC	?AtlThrowImpl@ATL@@YAXJ@Z			; ATL::AtlThrowImpl
PUBLIC	__local_stdio_printf_options
PUBLIC	_vfwprintf_l
PUBLIC	vfwprintf
PUBLIC	_vsnwprintf_l
PUBLIC	_snwprintf
PUBLIC	_vsnwprintf
PUBLIC	_vswprintf_s_l
PUBLIC	swprintf_s
PUBLIC	??$AtlMultiply@H@ATL@@YAJPEAHHH@Z		; ATL::AtlMultiply<int>
PUBLIC	?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z		; ATL::CCRTAllocator::Allocate
PUBLIC	?Free@CCRTAllocator@ATL@@SAXPEAX@Z		; ATL::CCRTAllocator::Free
PUBLIC	??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
PUBLIC	??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
PUBLIC	??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
PUBLIC	??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ	; ATL::CTraceCategoryEx<2,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
PUBLIC	??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
PUBLIC	??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
PUBLIC	??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
PUBLIC	??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ	; ATL::CTraceCategoryEx<32,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
PUBLIC	??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAAIXZ	; ATL::CTraceCategoryEx<64,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
PUBLIC	??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAAIXZ	; ATL::CTraceCategoryEx<8192,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
PUBLIC	?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z		; ATL::CTrace::GetCategoryName
PUBLIC	?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z		; ATL::CTrace::TraceV
PUBLIC	?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z	; ATL::CTrace::TraceV
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z	; ATL::CTrace::RegisterCategory
PUBLIC	??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
PUBLIC	??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
PUBLIC	??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
PUBLIC	?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
PUBLIC	??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	??0CPreserveLastError@ATL@@QEAA@XZ		; ATL::CPreserveLastError::CPreserveLastError
PUBLIC	??1CPreserveLastError@ATL@@QEAA@XZ		; ATL::CPreserveLastError::~CPreserveLastError
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	?_AtlRaiseException@ATL@@YAXKK@Z		; ATL::_AtlRaiseException
PUBLIC	?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
PUBLIC	??0CComCriticalSection@ATL@@QEAA@XZ		; ATL::CComCriticalSection::CComCriticalSection
PUBLIC	??1CComCriticalSection@ATL@@QEAA@XZ		; ATL::CComCriticalSection::~CComCriticalSection
PUBLIC	?Init@CComCriticalSection@ATL@@QEAAJXZ		; ATL::CComCriticalSection::Init
PUBLIC	?Term@CComCriticalSection@ATL@@QEAAJXZ		; ATL::CComCriticalSection::Term
PUBLIC	?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
PUBLIC	??0IEnumConnections@@QEAA@XZ			; IEnumConnections::IEnumConnections
PUBLIC	??0IConnectionPointContainer@@QEAA@XZ		; IConnectionPointContainer::IConnectionPointContainer
PUBLIC	??0IProvideClassInfo@@QEAA@XZ			; IProvideClassInfo::IProvideClassInfo
PUBLIC	??0IProvideClassInfo2@@QEAA@XZ			; IProvideClassInfo2::IProvideClassInfo2
PUBLIC	??0IOleControl@@QEAA@XZ				; IOleControl::IOleControl
PUBLIC	??0ISpecifyPropertyPages@@QEAA@XZ		; ISpecifyPropertyPages::ISpecifyPropertyPages
PUBLIC	??0IPersistStreamInit@@QEAA@XZ			; IPersistStreamInit::IPersistStreamInit
PUBLIC	??0IOleInPlaceObjectWindowless@@QEAA@XZ		; IOleInPlaceObjectWindowless::IOleInPlaceObjectWindowless
PUBLIC	??0IViewObjectEx@@QEAA@XZ			; IViewObjectEx::IViewObjectEx
PUBLIC	??0IQuickActivate@@QEAA@XZ			; IQuickActivate::IQuickActivate
PUBLIC	??0?$CComPtrBase@UIDispatch@@@ATL@@IEAA@XZ	; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>
PUBLIC	??1?$CComPtrBase@UIDispatch@@@ATL@@QEAA@XZ	; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>
PUBLIC	??0?$CComPtr@UIDispatch@@@ATL@@QEAA@XZ		; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
PUBLIC	??1?$CComPtr@UIDispatch@@@ATL@@QEAA@XZ		; ATL::CComPtr<IDispatch>::~CComPtr<IDispatch>
PUBLIC	??0?$CComPtrBase@UIUnknown@@@ATL@@IEAA@XZ	; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>
PUBLIC	??0?$CComPtrBase@UIUnknown@@@ATL@@IEAA@PEAUIUnknown@@@Z ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>
PUBLIC	?Swap@?$CComPtrBase@UIUnknown@@@ATL@@IEAAXAEAV12@@Z ; ATL::CComPtrBase<IUnknown>::Swap
PUBLIC	??1?$CComPtrBase@UIUnknown@@@ATL@@QEAA@XZ	; ATL::CComPtrBase<IUnknown>::~CComPtrBase<IUnknown>
PUBLIC	??B?$CComPtrBase@UIUnknown@@@ATL@@QEBAPEAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
PUBLIC	??0?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ		; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
PUBLIC	??0?$CComPtr@UIUnknown@@@ATL@@QEAA@PEAUIUnknown@@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
PUBLIC	??0?$CComPtr@UIUnknown@@@ATL@@QEAA@AEBV01@@Z	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
PUBLIC	??4?$CComPtr@UIUnknown@@@ATL@@QEAAPEAUIUnknown@@PEAU2@@Z ; ATL::CComPtr<IUnknown>::operator=
PUBLIC	??1?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ		; ATL::CComPtr<IUnknown>::~CComPtr<IUnknown>
PUBLIC	??1CComBSTR@ATL@@QEAA@XZ			; ATL::CComBSTR::~CComBSTR
PUBLIC	?Increment@CComSingleThreadModel@ATL@@SAKPEAJ@Z	; ATL::CComSingleThreadModel::Increment
PUBLIC	?Decrement@CComSingleThreadModel@ATL@@SAKPEAJ@Z	; ATL::CComSingleThreadModel::Decrement
PUBLIC	??0_ATL_COM_MODULE70@ATL@@QEAA@XZ		; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
PUBLIC	??1_ATL_COM_MODULE70@ATL@@QEAA@XZ		; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
PUBLIC	??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
PUBLIC	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
PUBLIC	??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
PUBLIC	??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ		; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
PUBLIC	??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ		; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
PUBLIC	?AtlInternalQueryInterface@ATL@@YAJPEAXPEBU_ATL_INTMAP_ENTRY@1@AEBU_GUID@@PEAPEAX@Z ; ATL::AtlInternalQueryInterface
PUBLIC	?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
PUBLIC	?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
PUBLIC	?InlineIsEqualUnknown@ATL@@YAHAEBU_GUID@@@Z	; ATL::InlineIsEqualUnknown
PUBLIC	??0CAtlComModule@ATL@@QEAA@XZ			; ATL::CAtlComModule::CAtlComModule
PUBLIC	??1CAtlComModule@ATL@@QEAA@XZ			; ATL::CAtlComModule::~CAtlComModule
PUBLIC	?Term@CAtlComModule@ATL@@QEAAXXZ		; ATL::CAtlComModule::Term
PUBLIC	??0CAtlWinModule@ATL@@QEAA@XZ			; ATL::CAtlWinModule::CAtlWinModule
PUBLIC	??1CAtlWinModule@ATL@@QEAA@XZ			; ATL::CAtlWinModule::~CAtlWinModule
PUBLIC	?Term@CAtlWinModule@ATL@@QEAAXXZ		; ATL::CAtlWinModule::Term
PUBLIC	?GetModuleInstance@CComModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ; ATL::CComModule::GetModuleInstance
PUBLIC	??0CDynamicStdCallThunk2@ATL@@QEAA@XZ		; ATL::CDynamicStdCallThunk2::CDynamicStdCallThunk2
PUBLIC	??1CDynamicStdCallThunk2@ATL@@QEAA@XZ		; ATL::CDynamicStdCallThunk2::~CDynamicStdCallThunk2
PUBLIC	??0CComObjectRootBase@ATL@@QEAA@XZ		; ATL::CComObjectRootBase::CComObjectRootBase
PUBLIC	??1CComObjectRootBase@ATL@@QEAA@XZ		; ATL::CComObjectRootBase::~CComObjectRootBase
PUBLIC	?FinalConstruct@CComObjectRootBase@ATL@@QEAAJXZ	; ATL::CComObjectRootBase::FinalConstruct
PUBLIC	?_AtlFinalConstruct@CComObjectRootBase@ATL@@QEAAJXZ ; ATL::CComObjectRootBase::_AtlFinalConstruct
PUBLIC	?FinalRelease@CComObjectRootBase@ATL@@QEAAXXZ	; ATL::CComObjectRootBase::FinalRelease
PUBLIC	?InternalQueryInterface@CComObjectRootBase@ATL@@SAJPEAXPEBU_ATL_INTMAP_ENTRY@2@AEBU_GUID@@PEAPEAX@Z ; ATL::CComObjectRootBase::InternalQueryInterface
PUBLIC	?SetVoid@CComObjectRootBase@ATL@@QEAAXPEAX@Z	; ATL::CComObjectRootBase::SetVoid
PUBLIC	?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QEAAXXZ ; ATL::CComObjectRootBase::InternalFinalConstructAddRef
PUBLIC	?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QEAAXXZ ; ATL::CComObjectRootBase::InternalFinalConstructRelease
PUBLIC	??1?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::~CComObjectRootEx<ATL::CComSingleThreadModel>
PUBLIC	?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef
PUBLIC	?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease
PUBLIC	?_AtlInitialConstruct@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAJXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::_AtlInitialConstruct
PUBLIC	?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock
PUBLIC	?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock
PUBLIC	??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::CComObjectRootEx<ATL::CComSingleThreadModel>
PUBLIC	??0ModuleLockHelper@ATL@@QEAA@XZ		; ATL::ModuleLockHelper::ModuleLockHelper
PUBLIC	??1ModuleLockHelper@ATL@@QEAA@XZ		; ATL::ModuleLockHelper::~ModuleLockHelper
PUBLIC	??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid
PUBLIC	??_Estringdispid@CComTypeInfoHolder@ATL@@QEAAPEAXI@Z ; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor'
PUBLIC	?copy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAJPEAUtagCONNECTDATA@@PEBU3@@Z ; ATL::_Copy<tagCONNECTDATA>::copy
PUBLIC	?init@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z ; ATL::_Copy<tagCONNECTDATA>::init
PUBLIC	?destroy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z ; ATL::_Copy<tagCONNECTDATA>::destroy
PUBLIC	??0CComDynamicUnkArray@ATL@@QEAA@XZ		; ATL::CComDynamicUnkArray::CComDynamicUnkArray
PUBLIC	??1CComDynamicUnkArray@ATL@@QEAA@XZ		; ATL::CComDynamicUnkArray::~CComDynamicUnkArray
PUBLIC	?Add@CComDynamicUnkArray@ATL@@QEAAKPEAUIUnknown@@@Z ; ATL::CComDynamicUnkArray::Add
PUBLIC	?Remove@CComDynamicUnkArray@ATL@@QEAAHK@Z	; ATL::CComDynamicUnkArray::Remove
PUBLIC	?GetCookie@CComDynamicUnkArray@ATL@@QEAAKPEAPEAUIUnknown@@@Z ; ATL::CComDynamicUnkArray::GetCookie
PUBLIC	?GetUnknown@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@K@Z ; ATL::CComDynamicUnkArray::GetUnknown
PUBLIC	?begin@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::begin
PUBLIC	?end@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::end
PUBLIC	?GetAt@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@H@Z ; ATL::CComDynamicUnkArray::GetAt
PUBLIC	?GetSize@CComDynamicUnkArray@ATL@@QEBAHXZ	; ATL::CComDynamicUnkArray::GetSize
PUBLIC	??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z		; ATL::AtlMultiply<unsigned __int64>
PUBLIC	??0CWindow@ATL@@QEAA@PEAUHWND__@@@Z		; ATL::CWindow::CWindow
PUBLIC	??0CWndProcThunk@ATL@@QEAA@XZ			; ATL::CWndProcThunk::CWndProcThunk
PUBLIC	??1CWndProcThunk@ATL@@QEAA@XZ			; ATL::CWndProcThunk::~CWndProcThunk
PUBLIC	??0CMessageMap@ATL@@QEAA@XZ			; ATL::CMessageMap::CMessageMap
PUBLIC	??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QEAA@XZ ; ATL::CWindowImplRoot<ATL::CWindow>::CWindowImplRoot<ATL::CWindow>
PUBLIC	??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UEAA@XZ ; ATL::CWindowImplRoot<ATL::CWindow>::~CWindowImplRoot<ATL::CWindow>
PUBLIC	??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QEAA@XZ ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >
PUBLIC	??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UEAA@XZ ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >
PUBLIC	??0?$CComPtrBase@UIOleClientSite@@@ATL@@IEAA@XZ	; ATL::CComPtrBase<IOleClientSite>::CComPtrBase<IOleClientSite>
PUBLIC	??1?$CComPtrBase@UIOleClientSite@@@ATL@@QEAA@XZ	; ATL::CComPtrBase<IOleClientSite>::~CComPtrBase<IOleClientSite>
PUBLIC	??0?$CComPtr@UIOleClientSite@@@ATL@@QEAA@XZ	; ATL::CComPtr<IOleClientSite>::CComPtr<IOleClientSite>
PUBLIC	??1?$CComPtr@UIOleClientSite@@@ATL@@QEAA@XZ	; ATL::CComPtr<IOleClientSite>::~CComPtr<IOleClientSite>
PUBLIC	??0?$CComPtrBase@UIAdviseSink@@@ATL@@IEAA@XZ	; ATL::CComPtrBase<IAdviseSink>::CComPtrBase<IAdviseSink>
PUBLIC	??1?$CComPtrBase@UIAdviseSink@@@ATL@@QEAA@XZ	; ATL::CComPtrBase<IAdviseSink>::~CComPtrBase<IAdviseSink>
PUBLIC	??0?$CComPtr@UIAdviseSink@@@ATL@@QEAA@XZ	; ATL::CComPtr<IAdviseSink>::CComPtr<IAdviseSink>
PUBLIC	??1?$CComPtr@UIAdviseSink@@@ATL@@QEAA@XZ	; ATL::CComPtr<IAdviseSink>::~CComPtr<IAdviseSink>
PUBLIC	??0IObjectSafety@@QEAA@XZ			; IObjectSafety::IObjectSafety
PUBLIC	??0CComControlBase@ATL@@QEAA@AEAPEAUHWND__@@@Z	; ATL::CComControlBase::CComControlBase
PUBLIC	??1CComControlBase@ATL@@UEAA@XZ			; ATL::CComControlBase::~CComControlBase
PUBLIC	??0?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@IEAA@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::CComPtrBase<IOleInPlaceSiteWindowless>
PUBLIC	??1?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::~CComPtrBase<IOleInPlaceSiteWindowless>
PUBLIC	??0?$CComPtr@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ ; ATL::CComPtr<IOleInPlaceSiteWindowless>::CComPtr<IOleInPlaceSiteWindowless>
PUBLIC	??1?$CComPtr@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ ; ATL::CComPtr<IOleInPlaceSiteWindowless>::~CComPtr<IOleInPlaceSiteWindowless>
PUBLIC	??0?$CComPtrBase@UIDataAdviseHolder@@@ATL@@IEAA@XZ ; ATL::CComPtrBase<IDataAdviseHolder>::CComPtrBase<IDataAdviseHolder>
PUBLIC	??1?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QEAA@XZ ; ATL::CComPtrBase<IDataAdviseHolder>::~CComPtrBase<IDataAdviseHolder>
PUBLIC	??0?$CComPtr@UIDataAdviseHolder@@@ATL@@QEAA@XZ	; ATL::CComPtr<IDataAdviseHolder>::CComPtr<IDataAdviseHolder>
PUBLIC	??1?$CComPtr@UIDataAdviseHolder@@@ATL@@QEAA@XZ	; ATL::CComPtr<IDataAdviseHolder>::~CComPtr<IDataAdviseHolder>
PUBLIC	??0?$CComPtrBase@UIOleAdviseHolder@@@ATL@@IEAA@XZ ; ATL::CComPtrBase<IOleAdviseHolder>::CComPtrBase<IOleAdviseHolder>
PUBLIC	??1?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QEAA@XZ ; ATL::CComPtrBase<IOleAdviseHolder>::~CComPtrBase<IOleAdviseHolder>
PUBLIC	??0?$CComPtr@UIOleAdviseHolder@@@ATL@@QEAA@XZ	; ATL::CComPtr<IOleAdviseHolder>::CComPtr<IOleAdviseHolder>
PUBLIC	??1?$CComPtr@UIOleAdviseHolder@@@ATL@@QEAA@XZ	; ATL::CComPtr<IOleAdviseHolder>::~CComPtr<IOleAdviseHolder>
PUBLIC	??0?$CComQIPtr@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QEAA@XZ ; ATL::CComQIPtr<IDispatch,&_GUID_00020400_0000_0000_c000_000000000046>::CComQIPtr<IDispatch,&_GUID_00020400_0000_0000_c000_000000000046>
PUBLIC	??1?$CComQIPtr@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QEAA@XZ ; ATL::CComQIPtr<IDispatch,&_GUID_00020400_0000_0000_c000_000000000046>::~CComQIPtr<IDispatch,&_GUID_00020400_0000_0000_c000_000000000046>
PUBLIC	??0IOPOSVideoCapture_1_16@@QEAA@XZ		; IOPOSVideoCapture_1_16::IOPOSVideoCapture_1_16
PUBLIC	??0IOPOSVideoCapture@@QEAA@XZ			; IOPOSVideoCapture::IOPOSVideoCapture
PUBLIC	??0OposVariant@@QEAA@XZ				; OposVariant::OposVariant
PUBLIC	??1OposVariant@@QEAA@XZ				; OposVariant::~OposVariant
PUBLIC	?Clear@OposVariant@@QEAAJXZ			; OposVariant::Clear
PUBLIC	??_EOposVariant@@QEAAPEAXI@Z			; OposVariant::`vector deleting destructor'
PUBLIC	??1OposVariantResult@@QEAA@XZ			; OposVariantResult::~OposVariantResult
PUBLIC	??0OposVariantResult@@QEAA@XZ			; OposVariantResult::OposVariantResult
PUBLIC	??0?$IDispatchImpl@UIOPOSVideoCapture@@$1?IID_IOPOSVideoCapture@@3U_GUID@@B$1?LIBID_OposVideoCapture_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@QEAA@XZ ; ATL::IDispatchImpl<IOPOSVideoCapture,&IID_IOPOSVideoCapture,&LIBID_OposVideoCapture_CCO,1,0,ATL::CComTypeInfoHolder>::IDispatchImpl<IOPOSVideoCapture,&IID_IOPOSVideoCapture,&LIBID_OposVideoCapture_CCO,1,0,ATL::CComTypeInfoHolder>
PUBLIC	??0?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@QEAA@XZ ; ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> >
PUBLIC	??1?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@UEAA@XZ ; ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> >
PUBLIC	??0?$CComControl@VCOPOSVideoCapture@@V?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@QEAA@XZ ; ATL::CComControl<COPOSVideoCapture,ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >::CComControl<COPOSVideoCapture,ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >
PUBLIC	??1?$CComControl@VCOPOSVideoCapture@@V?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UEAA@XZ ; ATL::CComControl<COPOSVideoCapture,ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >::~CComControl<COPOSVideoCapture,ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >
PUBLIC	??0?$IPersistStreamInitImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ; ATL::IPersistStreamInitImpl<COPOSVideoCapture>::IPersistStreamInitImpl<COPOSVideoCapture>
PUBLIC	??0?$IOleControlImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ; ATL::IOleControlImpl<COPOSVideoCapture>::IOleControlImpl<COPOSVideoCapture>
PUBLIC	??0?$IOleObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ; ATL::IOleObjectImpl<COPOSVideoCapture>::IOleObjectImpl<COPOSVideoCapture>
PUBLIC	??0?$IOleInPlaceActiveObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ; ATL::IOleInPlaceActiveObjectImpl<COPOSVideoCapture>::IOleInPlaceActiveObjectImpl<COPOSVideoCapture>
PUBLIC	??0?$IViewObjectExImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ; ATL::IViewObjectExImpl<COPOSVideoCapture>::IViewObjectExImpl<COPOSVideoCapture>
PUBLIC	??0?$IOleInPlaceObjectWindowlessImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSVideoCapture>::IOleInPlaceObjectWindowlessImpl<COPOSVideoCapture>
PUBLIC	??0?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ; ATL::IConnectionPointContainerImpl<COPOSVideoCapture>::IConnectionPointContainerImpl<COPOSVideoCapture>
PUBLIC	??0?$IPersistStorageImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ; ATL::IPersistStorageImpl<COPOSVideoCapture>::IPersistStorageImpl<COPOSVideoCapture>
PUBLIC	??0?$ISpecifyPropertyPagesImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ; ATL::ISpecifyPropertyPagesImpl<COPOSVideoCapture>::ISpecifyPropertyPagesImpl<COPOSVideoCapture>
PUBLIC	??0?$IQuickActivateImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ; ATL::IQuickActivateImpl<COPOSVideoCapture>::IQuickActivateImpl<COPOSVideoCapture>
PUBLIC	??0?$IDataObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ; ATL::IDataObjectImpl<COPOSVideoCapture>::IDataObjectImpl<COPOSVideoCapture>
PUBLIC	??0?$IProvideClassInfo2Impl@$1?CLSID_OPOSVideoCapture@@3U_GUID@@B$1?DIID__IOPOSVideoCaptureEvents@@3U2@B$1?LIBID_OposVideoCapture_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@QEAA@XZ ; ATL::IProvideClassInfo2Impl<&CLSID_OPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,&LIBID_OposVideoCapture_CCO,1,0,ATL::CComTypeInfoHolder>::IProvideClassInfo2Impl<&CLSID_OPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,&LIBID_OposVideoCapture_CCO,1,0,ATL::CComTypeInfoHolder>
PUBLIC	??0?$IObjectSafetyImpl@VCOPOSVideoCapture@@$02@ATL@@QEAA@XZ ; ATL::IObjectSafetyImpl<COPOSVideoCapture,3>::IObjectSafetyImpl<COPOSVideoCapture,3>
PUBLIC	??0?$_ICPLocator@$1?IID_IPropertyNotifySink@@3U_GUID@@B@ATL@@QEAA@XZ ; ATL::_ICPLocator<&IID_IPropertyNotifySink>::_ICPLocator<&IID_IPropertyNotifySink>
PUBLIC	??1?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ ; ATL::IConnectionPointImpl<COPOSVideoCapture,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::~IConnectionPointImpl<COPOSVideoCapture,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>
PUBLIC	??0?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ ; ATL::IConnectionPointImpl<COPOSVideoCapture,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::IConnectionPointImpl<COPOSVideoCapture,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>
PUBLIC	??0?$IPropertyNotifySinkCP@VCOPOSVideoCapture@@VCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ ; ATL::IPropertyNotifySinkCP<COPOSVideoCapture,ATL::CComDynamicUnkArray>::IPropertyNotifySinkCP<COPOSVideoCapture,ATL::CComDynamicUnkArray>
PUBLIC	??1?$IPropertyNotifySinkCP@VCOPOSVideoCapture@@VCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ ; ATL::IPropertyNotifySinkCP<COPOSVideoCapture,ATL::CComDynamicUnkArray>::~IPropertyNotifySinkCP<COPOSVideoCapture,ATL::CComDynamicUnkArray>
PUBLIC	??0?$_ICPLocator@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@B@ATL@@QEAA@XZ ; ATL::_ICPLocator<&DIID__IOPOSVideoCaptureEvents>::_ICPLocator<&DIID__IOPOSVideoCaptureEvents>
PUBLIC	??1?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::~IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>
PUBLIC	?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJAEBU_GUID@@PEAPEAX@Z ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::_LocCPQueryInterface
PUBLIC	?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAU_GUID@@@Z ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::GetConnectionInterface
PUBLIC	?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAPEAUIConnectionPointContainer@@@Z ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::GetConnectionPointContainer
PUBLIC	?Advise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAUIUnknown@@PEAK@Z ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::Advise
PUBLIC	?Unadvise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJK@Z ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::Unadvise
PUBLIC	?EnumConnections@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::EnumConnections
PUBLIC	??0?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>
PUBLIC	?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_DirectIOEvent
PUBLIC	?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_ErrorEvent
PUBLIC	?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJ@Z ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_StatusUpdateEvent
PUBLIC	??0?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAA@PEAVCOPOSVideoCapture@@@Z ; CProxy_IOPOSEvents<COPOSVideoCapture>::CProxy_IOPOSEvents<COPOSVideoCapture>
PUBLIC	?Advise@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@UEAAJPEAUIUnknown@@PEAK@Z ; CProxy_IOPOSEvents<COPOSVideoCapture>::Advise
PUBLIC	?Unadvise@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@UEAAJK@Z ; CProxy_IOPOSEvents<COPOSVideoCapture>::Unadvise
PUBLIC	?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z ; CProxy_IOPOSEvents<COPOSVideoCapture>::FireTheEvent
PUBLIC	??1?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAA@XZ ; CProxy_IOPOSEvents<COPOSVideoCapture>::~CProxy_IOPOSEvents<COPOSVideoCapture>
PUBLIC	??0COPOSVideoCapture@@QEAA@XZ			; COPOSVideoCapture::COPOSVideoCapture
PUBLIC	?FinalConstruct@COPOSVideoCapture@@QEAAJXZ	; COPOSVideoCapture::FinalConstruct
PUBLIC	??1COPOSVideoCapture@@UEAA@XZ			; COPOSVideoCapture::~COPOSVideoCapture
PUBLIC	?SetRC@COPOSVideoCapture@@IEAAJJ@Z		; COPOSVideoCapture::SetRC
PUBLIC	?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ	; COPOSVideoCapture::WriteTrace
PUBLIC	?WriteTraceString@COPOSVideoCapture@@QEAAXPEB_WPEA_W@Z ; COPOSVideoCapture::WriteTraceString
PUBLIC	?WriteTraceString@COPOSVideoCapture@@QEAAXPEAXHHHPEB_WZZ ; COPOSVideoCapture::WriteTraceString
PUBLIC	?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z ; COPOSVideoCapture::WriteTraceError
PUBLIC	?WriteTraceMethods@COPOSVideoCapture@@QEAAXPEAJH@Z ; COPOSVideoCapture::WriteTraceMethods
PUBLIC	?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp
PUBLIC	?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z	; COPOSVideoCapture::SetOposProp
PUBLIC	?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp
PUBLIC	?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJFJ@Z	; COPOSVideoCapture::SetOposProp
PUBLIC	?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp
PUBLIC	?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z ; COPOSVideoCapture::SetOposProp
PUBLIC	?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z ; COPOSVideoCapture::DoInvoke
PUBLIC	?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z	; COPOSVideoCapture::SetCOFreezeEvents
PUBLIC	?FreezeEvents@COPOSVideoCapture@@MEAAJH@Z	; COPOSVideoCapture::FreezeEvents
PUBLIC	?OnDraw@COPOSVideoCapture@@MEAAJAEAUATL_DRAWINFO@@@Z ; COPOSVideoCapture::OnDraw
PUBLIC	?GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z ; COPOSVideoCapture::GetConnMap
PUBLIC	?EventInit@COPOSVideoCapture@@IEAAJXZ		; COPOSVideoCapture::EventInit
PUBLIC	?EventOpen@COPOSVideoCapture@@IEAAXXZ		; COPOSVideoCapture::EventOpen
PUBLIC	?EventClaim@COPOSVideoCapture@@IEAAXXZ		; COPOSVideoCapture::EventClaim
PUBLIC	?EventPreCloseRelease@COPOSVideoCapture@@IEAAXXZ ; COPOSVideoCapture::EventPreCloseRelease
PUBLIC	?EventClose@COPOSVideoCapture@@IEAAXXZ		; COPOSVideoCapture::EventClose
PUBLIC	?EventUninit@COPOSVideoCapture@@IEAAXXZ		; COPOSVideoCapture::EventUninit
PUBLIC	?s_EventWindowProc@COPOSVideoCapture@@KA_JPEAUHWND__@@I_K_J@Z ; COPOSVideoCapture::s_EventWindowProc
PUBLIC	?EventWindowProc@COPOSVideoCapture@@IEAA_JI_K_J@Z ; COPOSVideoCapture::EventWindowProc
PUBLIC	?FireEventSetup@COPOSVideoCapture@@IEAA_NXZ	; COPOSVideoCapture::FireEventSetup
PUBLIC	?FireEventCleanup@COPOSVideoCapture@@IEAAXXZ	; COPOSVideoCapture::FireEventCleanup
PUBLIC	?SOProcessID@COPOSVideoCapture@@UEAAJPEAJ@Z	; COPOSVideoCapture::SOProcessID
PUBLIC	?get_OpenResult@COPOSVideoCapture@@UEAAJPEAJ@Z	; COPOSVideoCapture::get_OpenResult
PUBLIC	?get_BinaryConversion@COPOSVideoCapture@@UEAAJPEAJ@Z ; COPOSVideoCapture::get_BinaryConversion
PUBLIC	?put_BinaryConversion@COPOSVideoCapture@@UEAAJJ@Z ; COPOSVideoCapture::put_BinaryConversion
PUBLIC	?get_CapPowerReporting@COPOSVideoCapture@@UEAAJPEAJ@Z ; COPOSVideoCapture::get_CapPowerReporting
PUBLIC	?get_CheckHealthText@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_CheckHealthText
PUBLIC	?get_Claimed@COPOSVideoCapture@@UEAAJPEAF@Z	; COPOSVideoCapture::get_Claimed
PUBLIC	?get_DeviceEnabled@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_DeviceEnabled
PUBLIC	?put_DeviceEnabled@COPOSVideoCapture@@UEAAJF@Z	; COPOSVideoCapture::put_DeviceEnabled
PUBLIC	?get_FreezeEvents@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_FreezeEvents
PUBLIC	?put_FreezeEvents@COPOSVideoCapture@@UEAAJF@Z	; COPOSVideoCapture::put_FreezeEvents
PUBLIC	?get_PowerNotify@COPOSVideoCapture@@UEAAJPEAJ@Z	; COPOSVideoCapture::get_PowerNotify
PUBLIC	?put_PowerNotify@COPOSVideoCapture@@UEAAJJ@Z	; COPOSVideoCapture::put_PowerNotify
PUBLIC	?get_PowerState@COPOSVideoCapture@@UEAAJPEAJ@Z	; COPOSVideoCapture::get_PowerState
PUBLIC	?get_ResultCode@COPOSVideoCapture@@UEAAJPEAJ@Z	; COPOSVideoCapture::get_ResultCode
PUBLIC	?get_ResultCodeExtended@COPOSVideoCapture@@UEAAJPEAJ@Z ; COPOSVideoCapture::get_ResultCodeExtended
PUBLIC	?get_State@COPOSVideoCapture@@UEAAJPEAJ@Z	; COPOSVideoCapture::get_State
PUBLIC	?get_ControlObjectDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_ControlObjectDescription
PUBLIC	?get_ControlObjectVersion@COPOSVideoCapture@@UEAAJPEAJ@Z ; COPOSVideoCapture::get_ControlObjectVersion
PUBLIC	?get_ServiceObjectDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_ServiceObjectDescription
PUBLIC	?get_ServiceObjectVersion@COPOSVideoCapture@@UEAAJPEAJ@Z ; COPOSVideoCapture::get_ServiceObjectVersion
PUBLIC	?get_DeviceDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_DeviceDescription
PUBLIC	?get_DeviceName@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_DeviceName
PUBLIC	?get_CapStatisticsReporting@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapStatisticsReporting
PUBLIC	?get_CapUpdateStatistics@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapUpdateStatistics
PUBLIC	?get_CapCompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapCompareFirmwareVersion
PUBLIC	?get_CapUpdateFirmware@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapUpdateFirmware
PUBLIC	?CheckHealth@COPOSVideoCapture@@UEAAJJPEAJ@Z	; COPOSVideoCapture::CheckHealth
PUBLIC	?ClaimDevice@COPOSVideoCapture@@UEAAJJPEAJ@Z	; COPOSVideoCapture::ClaimDevice
PUBLIC	?ClearInput@COPOSVideoCapture@@UEAAJPEAJ@Z	; COPOSVideoCapture::ClearInput
PUBLIC	?Close@COPOSVideoCapture@@UEAAJPEAJ@Z		; COPOSVideoCapture::Close
PUBLIC	?DirectIO@COPOSVideoCapture@@UEAAJJPEAJPEAPEA_W0@Z ; COPOSVideoCapture::DirectIO
PUBLIC	?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z	; COPOSVideoCapture::Open
PUBLIC	?ReleaseDevice@COPOSVideoCapture@@UEAAJPEAJ@Z	; COPOSVideoCapture::ReleaseDevice
PUBLIC	?ResetStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z ; COPOSVideoCapture::ResetStatistics
PUBLIC	?RetrieveStatistics@COPOSVideoCapture@@UEAAJPEAPEA_WPEAJ@Z ; COPOSVideoCapture::RetrieveStatistics
PUBLIC	?UpdateStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z ; COPOSVideoCapture::UpdateStatistics
PUBLIC	?CompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEA_WPEAJ1@Z ; COPOSVideoCapture::CompareFirmwareVersion
PUBLIC	?UpdateFirmware@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z ; COPOSVideoCapture::UpdateFirmware
PUBLIC	?get_AutoExposure@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_AutoExposure
PUBLIC	?put_AutoExposure@COPOSVideoCapture@@UEAAJF@Z	; COPOSVideoCapture::put_AutoExposure
PUBLIC	?get_AutoFocus@COPOSVideoCapture@@UEAAJPEAF@Z	; COPOSVideoCapture::get_AutoFocus
PUBLIC	?put_AutoFocus@COPOSVideoCapture@@UEAAJF@Z	; COPOSVideoCapture::put_AutoFocus
PUBLIC	?get_AutoGain@COPOSVideoCapture@@UEAAJPEAF@Z	; COPOSVideoCapture::get_AutoGain
PUBLIC	?put_AutoGain@COPOSVideoCapture@@UEAAJF@Z	; COPOSVideoCapture::put_AutoGain
PUBLIC	?get_AutoWhiteBalance@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_AutoWhiteBalance
PUBLIC	?put_AutoWhiteBalance@COPOSVideoCapture@@UEAAJF@Z ; COPOSVideoCapture::put_AutoWhiteBalance
PUBLIC	?get_Brightness@COPOSVideoCapture@@UEAAJPEAJ@Z	; COPOSVideoCapture::get_Brightness
PUBLIC	?put_Brightness@COPOSVideoCapture@@UEAAJJ@Z	; COPOSVideoCapture::put_Brightness
PUBLIC	?get_CapAssociatedHardTotalsDevice@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_CapAssociatedHardTotalsDevice
PUBLIC	?get_CapAutoExposure@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapAutoExposure
PUBLIC	?get_CapAutoFocus@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapAutoFocus
PUBLIC	?get_CapAutoGain@COPOSVideoCapture@@UEAAJPEAF@Z	; COPOSVideoCapture::get_CapAutoGain
PUBLIC	?get_CapAutoWhiteBalance@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapAutoWhiteBalance
PUBLIC	?get_CapBrightness@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapBrightness
PUBLIC	?get_CapContrast@COPOSVideoCapture@@UEAAJPEAF@Z	; COPOSVideoCapture::get_CapContrast
PUBLIC	?get_CapExposure@COPOSVideoCapture@@UEAAJPEAF@Z	; COPOSVideoCapture::get_CapExposure
PUBLIC	?get_CapGain@COPOSVideoCapture@@UEAAJPEAF@Z	; COPOSVideoCapture::get_CapGain
PUBLIC	?get_CapHorizontalFlip@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapHorizontalFlip
PUBLIC	?get_CapHue@COPOSVideoCapture@@UEAAJPEAF@Z	; COPOSVideoCapture::get_CapHue
PUBLIC	?get_CapPhoto@COPOSVideoCapture@@UEAAJPEAF@Z	; COPOSVideoCapture::get_CapPhoto
PUBLIC	?get_CapPhotoColorSpace@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapPhotoColorSpace
PUBLIC	?get_CapPhotoFrameRate@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapPhotoFrameRate
PUBLIC	?get_CapPhotoResolution@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapPhotoResolution
PUBLIC	?get_CapPhotoType@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapPhotoType
PUBLIC	?get_CapSaturation@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapSaturation
PUBLIC	?get_CapStorage@COPOSVideoCapture@@UEAAJPEAJ@Z	; COPOSVideoCapture::get_CapStorage
PUBLIC	?get_CapVerticalFlip@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapVerticalFlip
PUBLIC	?get_CapVideo@COPOSVideoCapture@@UEAAJPEAF@Z	; COPOSVideoCapture::get_CapVideo
PUBLIC	?get_CapVideoColorSpace@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapVideoColorSpace
PUBLIC	?get_CapVideoFrameRate@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapVideoFrameRate
PUBLIC	?get_CapVideoResolution@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapVideoResolution
PUBLIC	?get_CapVideoType@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_CapVideoType
PUBLIC	?get_Contrast@COPOSVideoCapture@@UEAAJPEAJ@Z	; COPOSVideoCapture::get_Contrast
PUBLIC	?put_Contrast@COPOSVideoCapture@@UEAAJJ@Z	; COPOSVideoCapture::put_Contrast
PUBLIC	?get_Exposure@COPOSVideoCapture@@UEAAJPEAJ@Z	; COPOSVideoCapture::get_Exposure
PUBLIC	?put_Exposure@COPOSVideoCapture@@UEAAJJ@Z	; COPOSVideoCapture::put_Exposure
PUBLIC	?get_Gain@COPOSVideoCapture@@UEAAJPEAJ@Z	; COPOSVideoCapture::get_Gain
PUBLIC	?put_Gain@COPOSVideoCapture@@UEAAJJ@Z		; COPOSVideoCapture::put_Gain
PUBLIC	?get_HorizontalFlip@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_HorizontalFlip
PUBLIC	?put_HorizontalFlip@COPOSVideoCapture@@UEAAJF@Z	; COPOSVideoCapture::put_HorizontalFlip
PUBLIC	?get_Hue@COPOSVideoCapture@@UEAAJPEAJ@Z		; COPOSVideoCapture::get_Hue
PUBLIC	?put_Hue@COPOSVideoCapture@@UEAAJJ@Z		; COPOSVideoCapture::put_Hue
PUBLIC	?get_PhotoColorSpace@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_PhotoColorSpace
PUBLIC	?put_PhotoColorSpace@COPOSVideoCapture@@UEAAJPEA_W@Z ; COPOSVideoCapture::put_PhotoColorSpace
PUBLIC	?get_PhotoColorSpaceList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_PhotoColorSpaceList
PUBLIC	?get_PhotoFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z ; COPOSVideoCapture::get_PhotoFrameRate
PUBLIC	?put_PhotoFrameRate@COPOSVideoCapture@@UEAAJJ@Z	; COPOSVideoCapture::put_PhotoFrameRate
PUBLIC	?get_PhotoMaxFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z ; COPOSVideoCapture::get_PhotoMaxFrameRate
PUBLIC	?get_PhotoResolution@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_PhotoResolution
PUBLIC	?put_PhotoResolution@COPOSVideoCapture@@UEAAJPEA_W@Z ; COPOSVideoCapture::put_PhotoResolution
PUBLIC	?get_PhotoResolutionList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_PhotoResolutionList
PUBLIC	?get_PhotoType@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_PhotoType
PUBLIC	?put_PhotoType@COPOSVideoCapture@@UEAAJPEA_W@Z	; COPOSVideoCapture::put_PhotoType
PUBLIC	?get_PhotoTypeList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_PhotoTypeList
PUBLIC	?get_RemainingRecordingTimeInSec@COPOSVideoCapture@@UEAAJPEAJ@Z ; COPOSVideoCapture::get_RemainingRecordingTimeInSec
PUBLIC	?get_Saturation@COPOSVideoCapture@@UEAAJPEAJ@Z	; COPOSVideoCapture::get_Saturation
PUBLIC	?put_Saturation@COPOSVideoCapture@@UEAAJJ@Z	; COPOSVideoCapture::put_Saturation
PUBLIC	?get_Storage@COPOSVideoCapture@@UEAAJPEAJ@Z	; COPOSVideoCapture::get_Storage
PUBLIC	?put_Storage@COPOSVideoCapture@@UEAAJJ@Z	; COPOSVideoCapture::put_Storage
PUBLIC	?get_VerticalFlip@COPOSVideoCapture@@UEAAJPEAF@Z ; COPOSVideoCapture::get_VerticalFlip
PUBLIC	?put_VerticalFlip@COPOSVideoCapture@@UEAAJF@Z	; COPOSVideoCapture::put_VerticalFlip
PUBLIC	?get_VideoCaptureMode@COPOSVideoCapture@@UEAAJPEAJ@Z ; COPOSVideoCapture::get_VideoCaptureMode
PUBLIC	?put_VideoCaptureMode@COPOSVideoCapture@@UEAAJJ@Z ; COPOSVideoCapture::put_VideoCaptureMode
PUBLIC	?get_VideoColorSpace@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_VideoColorSpace
PUBLIC	?put_VideoColorSpace@COPOSVideoCapture@@UEAAJPEA_W@Z ; COPOSVideoCapture::put_VideoColorSpace
PUBLIC	?get_VideoColorSpaceList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_VideoColorSpaceList
PUBLIC	?get_VideoFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z ; COPOSVideoCapture::get_VideoFrameRate
PUBLIC	?put_VideoFrameRate@COPOSVideoCapture@@UEAAJJ@Z	; COPOSVideoCapture::put_VideoFrameRate
PUBLIC	?get_VideoMaxFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z ; COPOSVideoCapture::get_VideoMaxFrameRate
PUBLIC	?get_VideoResolution@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_VideoResolution
PUBLIC	?put_VideoResolution@COPOSVideoCapture@@UEAAJPEA_W@Z ; COPOSVideoCapture::put_VideoResolution
PUBLIC	?get_VideoResolutionList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_VideoResolutionList
PUBLIC	?get_VideoType@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_VideoType
PUBLIC	?put_VideoType@COPOSVideoCapture@@UEAAJPEA_W@Z	; COPOSVideoCapture::put_VideoType
PUBLIC	?get_VideoTypeList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ; COPOSVideoCapture::get_VideoTypeList
PUBLIC	?StartVideo@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z ; COPOSVideoCapture::StartVideo
PUBLIC	?StopVideo@COPOSVideoCapture@@UEAAJPEAJ@Z	; COPOSVideoCapture::StopVideo
PUBLIC	?TakePhoto@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z ; COPOSVideoCapture::TakePhoto
PUBLIC	??0_CW@@QEAA@PEBD@Z				; _CW::_CW
PUBLIC	??0_CW@@QEAA@PEB_W@Z				; _CW::_CW
PUBLIC	??B_CW@@QEAAPEB_WXZ				; _CW::operator wchar_t const *
PUBLIC	??1_CW@@QEAA@XZ					; _CW::~_CW
PUBLIC	??0_CWNCC@@QEAA@PEBD@Z				; _CWNCC::_CWNCC
PUBLIC	??B_CWNCC@@QEAAPEA_WXZ				; _CWNCC::operator wchar_t *
PUBLIC	??1_CWNCC@@QEAA@XZ				; _CWNCC::~_CWNCC
PUBLIC	??0?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QEAA@XZ ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >
PUBLIC	??1?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAA@XZ ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::~CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >
PUBLIC	?Next@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJKPEAUtagCONNECTDATA@@PEAK@Z ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Next
PUBLIC	?Skip@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJK@Z ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Skip
PUBLIC	?Reset@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJXZ ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Reset
PUBLIC	?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Clone
PUBLIC	?Init@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QEAAJPEAUtagCONNECTDATA@@0PEAUIUnknown@@W4CComEnumFlags@2@@Z ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Init
PUBLIC	?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAAJAEBU_GUID@@PEAPEAX@Z ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_InternalQueryInterface
PUBLIC	?_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SAPEBU_ATL_INTMAP_ENTRY@2@XZ ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_GetEntries
PUBLIC	??0?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAA@XZ ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>
PUBLIC	??1?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@UEAA@XZ ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::~CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>
PUBLIC	??0?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QEAA@PEAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >
PUBLIC	??1?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAA@XZ ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::~CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >
PUBLIC	?AddRef@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::AddRef
PUBLIC	?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::Release
PUBLIC	?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAJAEBU_GUID@@PEAPEAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::QueryInterface
PUBLIC	?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SAJPEAPEAV12@@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CreateInstance
PUBLIC	??_G?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAPEAXI@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::`scalar deleting destructor'
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_13COJANIEC@?$AA0@				; `string'
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@		; `string'
PUBLIC	??_C@_1OE@EFJOHFCD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
PUBLIC	?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
PUBLIC	?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
PUBLIC	?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
PUBLIC	?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
PUBLIC	?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
PUBLIC	?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
PUBLIC	?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
PUBLIC	?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
PUBLIC	?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
PUBLIC	?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
PUBLIC	?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
PUBLIC	?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
PUBLIC	?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
PUBLIC	?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
PUBLIC	?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
PUBLIC	?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
PUBLIC	?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
PUBLIC	?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
PUBLIC	?m_nLevel@CTrace@ATL@@1IA			; ATL::CTrace::m_nLevel
PUBLIC	?m_nCategory@CTrace@ATL@@1IA			; ATL::CTrace::m_nCategory
PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ ; `string'
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ ; `string'
PUBLIC	??_C@_1OE@DGDFBHKA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0HD@ECNMIKGK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5@ ; `string'
PUBLIC	??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe@	; `string'
PUBLIC	??_C@_1OG@DEDHKNLM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@ ; `string'
PUBLIC	??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	?_AtlComModule@ATL@@3VCAtlComModule@1@A		; ATL::_AtlComModule
PUBLIC	?_AtlWinModule@ATL@@3VCAtlWinModule@1@A		; ATL::_AtlWinModule
PUBLIC	_GUID_b196b284_bab4_101a_b69c_00aa00341d07
PUBLIC	??_C@_1BG@PEGMCOIG@?$AAp?$AAT?$AAh?$AAi?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BK@ENABKMAI@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1GE@KALDMMBC@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?9?$AA?$DO?$AAp?$AAF?$AAu?$AAn?$AAc@ ; `string'
PUBLIC	??_C@_1BA@JJDNGNLN@?$AA?$CB?$AAb?$AAB?$AAl?$AAi?$AAn?$AAd@ ; `string'
PUBLIC	??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@ ; `string'
PUBLIC	??_C@_1BO@IINBGKAE@?$AAp?$AAp?$AAv?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BK@MDGGGAPK@?$AAm?$AA_?$AAd?$AAw?$AAR?$AAe?$AAf?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BO@CFNLNIPO@?$AAm?$AA_?$AAd?$AAw?$AAR?$AAe?$AAf?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1?$AAL@ ; `string'
PUBLIC	??_C@_1IG@BMPHLDAM@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAL?$AA?$CC?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_1CE@GFEBMKPP@?$AAp?$AAp?$AAF?$AAi?$AAn?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CK?$AAp?$AAp?$AAF?$AAi@ ; `string'
PUBLIC	??_C@_1FI@CDNFCAGD@?$AAd?$AAw?$AAC?$AAo?$AAo?$AAk?$AAi?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@ ; `string'
PUBLIC	??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_1EO@PKGIEOJK@?$AAi?$AAd?$AAx?$AA?5?$AA?$DM?$AA?5?$AAd?$AAw?$AAC?$AAo?$AAo?$AAk?$AAi?$AAe?$AA?5@ ; `string'
PUBLIC	_GUID_b196b287_bab4_101a_b69c_00aa00341d07
PUBLIC	??_C@_1OA@EJAAKNNE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1CG@KBMKEOOB@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy@ ; `string'
PUBLIC	?pConnMap@?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@0PEBU_ATL_CONNMAP_ENTRY@2@EB ; ATL::IConnectionPointContainerImpl<COPOSVideoCapture>::pConnMap
PUBLIC	??_7?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@6B@ ; CProxy_IOPOSEvents<COPOSVideoCapture>::`vftable'
PUBLIC	?_entries@?1??GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z@4QBU34@B ; `COPOSVideoCapture::GetConnMap'::`2'::_entries
PUBLIC	?$TSS0@?1??GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z@4HA ; `COPOSVideoCapture::GetConnMap'::`2'::$TSS0
PUBLIC	??_C@_1FK@EJDCNMFO@?$AA?5?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa@ ; `string'
PUBLIC	??_C@_1FM@GHFMGGAO@?$AA?5?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa@ ; `string'
PUBLIC	??_C@_1GC@FLDBIEFG@?$AA?5?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa@ ; `string'
PUBLIC	??_C@_1BI@PMBJJHKM@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAC?$AAl?$AAa?$AAi?$AAm@ ; `string'
PUBLIC	??_C@_1CM@JMADAJDC@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAP?$AAr?$AAe?$AAC?$AAl?$AAo?$AAs?$AAe?$AAR@ ; `string'
PUBLIC	??_C@_1GM@EMMHBPEM@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@ ; `string'
PUBLIC	??_C@_1DE@EPLGDCDL@?$AA?$CB?$AA?5?$AA_?$AAE?$AAv?$AAe?$AAn?$AAt?$AA_?$AAb?$AAE?$AAv?$AAe?$AAn?$AAt@ ; `string'
PUBLIC	??_C@_1BI@IOGKIMIM@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAC?$AAl?$AAo?$AAs?$AAe@ ; `string'
PUBLIC	??_C@_1FC@INBMHOIJ@?$AA?3?$AA?3?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@ ; `string'
PUBLIC	??_C@_1IK@JGLBMEDC@?$AA?3?$AA?3?$AAU?$AAn?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAC?$AAl?$AAa@ ; `string'
PUBLIC	??_C@_1FK@NNNDFBMJ@?$AA?3?$AA?3?$AAC?$AAl?$AAo?$AAs?$AAe?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AA?$CI?$AA?5@ ; `string'
PUBLIC	??_C@_1FE@CAEAEALH@?$AA?3?$AA?3?$AAC?$AAl?$AAo?$AAs?$AAe?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AA?$CI?$AA?5@ ; `string'
PUBLIC	??_C@_1EO@JKFBLFHJ@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAP?$AAr?$AAo@ ; `string'
PUBLIC	??_C@_1EI@OGEHNNLE@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAP?$AAr?$AAo@ ; `string'
PUBLIC	??_C@_1FG@KGPDBNHF@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAP?$AAr?$AAo@ ; `string'
PUBLIC	??_C@_1CO@NKNAIIAP@?$AA?$CK?$AAU?$AAn?$AAa?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?3?$AA?5?$AAC?$AAo?$AAo?$AAk@ ; `string'
PUBLIC	??_C@_1EA@IMKHEMDJ@?$AA?$CK?$AAA?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?3?$AA?5?$AAS?$AAi?$AAn?$AAk?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1CE@PGFMOFKI@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe@ ; `string'
PUBLIC	??_C@_1BG@LODEBHDD@?$AAE?$AAr?$AAr?$AAo?$AAr?$AAE?$AAv?$AAe?$AAn?$AAt@ ; `string'
PUBLIC	??_C@_1BM@CBGEBBBJ@?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt@ ; `string'
PUBLIC	_GUID_b196b286_bab4_101a_b69c_00aa00341d07
PUBLIC	??_C@_0HA@JEDONBAF@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1GI@EDPGCMOP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5@ ; `string'
PUBLIC	??_C@_1OK@FGCLCILL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1GI@CMBOLMBG@?$AA?$CK?$AAF?$AAi?$AAr?$AAe?$AAT?$AAh?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5@ ; `string'
PUBLIC	??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BE@ENNDGLJC@?$AA_?$AAC?$AAC?$AAo?$AAm?$AAE?$AAn?$AAu?$AAm@ ; `string'
PUBLIC	??_7?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@ ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::`vftable'
PUBLIC	?_entries@?1??_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SAPEBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B ; `ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_GetEntries'::`2'::_entries
EXTRN	_purecall:PROC
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	??_U@YAPEAX_K@Z:PROC				; operator new[]
EXTRN	??_V@YAXPEAX@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPEAX_K@Z:PROC				; operator delete[]
EXTRN	atexit:PROC
EXTRN	__report_rangecheckfailure:PROC
EXTRN	_Init_thread_header:PROC
EXTRN	_Init_thread_footer:PROC
EXTRN	calloc:PROC
EXTRN	free:PROC
EXTRN	malloc:PROC
EXTRN	_recalloc:PROC
EXTRN	??2@YAPEAX_KAEBUnothrow_t@std@@@Z:PROC		; operator new
EXTRN	??_U@YAPEAX_KAEBUnothrow_t@std@@@Z:PROC		; operator new[]
EXTRN	_CrtDbgReportW:PROC
EXTRN	isdigit:PROC
EXTRN	memcmp:PROC
EXTRN	memset:PROC
EXTRN	wcscpy_s:PROC
EXTRN	wcscat:PROC
EXTRN	wcscpy:PROC
EXTRN	wcslen:PROC
EXTRN	__imp_DeleteFileW:PROC
EXTRN	__imp_DecodePointer:PROC
EXTRN	__imp_CloseHandle:PROC
EXTRN	__imp_RaiseException:PROC
EXTRN	__imp_GetLastError:PROC
EXTRN	__imp_SetLastError:PROC
EXTRN	__imp_InitializeCriticalSectionEx:PROC
EXTRN	__imp_DeleteCriticalSection:PROC
EXTRN	__imp_SetEvent:PROC
EXTRN	__imp_CreateMutexW:PROC
EXTRN	__imp_CreateEventW:PROC
EXTRN	__imp_GetCurrentProcessId:PROC
EXTRN	__imp_GetCurrentThreadId:PROC
EXTRN	__imp_LocalFree:PROC
EXTRN	__imp_FormatMessageW:PROC
EXTRN	__imp_BitBlt:PROC
EXTRN	__imp_CreateCompatibleDC:PROC
EXTRN	__imp_DeleteObject:PROC
EXTRN	__imp_SelectObject:PROC
EXTRN	__imp_GetObjectW:PROC
EXTRN	__imp_PeekMessageW:PROC
EXTRN	__imp_DefWindowProcW:PROC
EXTRN	__imp_RegisterClassW:PROC
EXTRN	__imp_UnregisterClassW:PROC
EXTRN	__imp_CreateWindowExW:PROC
EXTRN	__imp_DestroyWindow:PROC
EXTRN	__imp_GetWindowLongPtrW:PROC
EXTRN	__imp_SetWindowLongPtrW:PROC
EXTRN	__imp_LoadBitmapW:PROC
EXTRN	__imp_RegCloseKey:PROC
EXTRN	__imp_RegOpenKeyExW:PROC
EXTRN	__imp_RegQueryValueExW:PROC
EXTRN	__imp_CoCreateInstance:PROC
EXTRN	__imp_CLSIDFromProgID:PROC
EXTRN	__imp_SysAllocString:PROC
EXTRN	__imp_SysFreeString:PROC
EXTRN	__imp_SysStringLen:PROC
EXTRN	__imp_SysStringByteLen:PROC
EXTRN	__imp_VariantClear:PROC
EXTRN	_wfopen:PROC
EXTRN	__stdio_common_vfwprintf:PROC
EXTRN	__stdio_common_vswprintf:PROC
EXTRN	__stdio_common_vswprintf_s:PROC
EXTRN	__stdio_common_vsnwprintf_s:PROC
EXTRN	fclose:PROC
EXTRN	putc:PROC
EXTRN	AtlThunk_FreeData:PROC
EXTRN	?_assert@@YAXPEB_W0I@Z:PROC			; _assert
EXTRN	?SetVARIANT_BOOL@OposVariant@@QEAAXF@Z:PROC	; OposVariant::SetVARIANT_BOOL
EXTRN	?GetLONG@OposVariant@@QEAAJXZ:PROC		; OposVariant::GetLONG
EXTRN	?ChangeLONG@OposVariant@@QEAAXPEAJAEAJ@Z:PROC	; OposVariant::ChangeLONG
EXTRN	?SetLONG@OposVariant@@QEAAXJ@Z:PROC		; OposVariant::SetLONG
EXTRN	?SetLONG_Ptr@OposVariant@@QEAAXPEAJAEAJ@Z:PROC	; OposVariant::SetLONG_Ptr
EXTRN	?ChangeBSTR@OposVariant@@QEAAXPEAPEA_WAEAJ@Z:PROC ; OposVariant::ChangeBSTR
EXTRN	?SetBSTR@OposVariant@@QEAAXPEA_WAEAJ@Z:PROC	; OposVariant::SetBSTR
EXTRN	?SetBSTR_Copy@OposVariant@@QEAAXPEA_WAEAJ@Z:PROC ; OposVariant::SetBSTR_Copy
EXTRN	?SetBSTR_InOutPtr@OposVariant@@QEAA_NPEAPEA_WAEAJ@Z:PROC ; OposVariant::SetBSTR_InOutPtr
EXTRN	?SetString@OposVariant@@QEAAXPEB_WAEAJ@Z:PROC	; OposVariant::SetString
EXTRN	?SetDispatch_Ptr@OposVariant@@QEAAXPEAUIDispatch@@AEAJ@Z:PROC ; OposVariant::SetDispatch_Ptr
EXTRN	??0OposDispParms@@QEAA@PEAVOposVariant@@H@Z:PROC ; OposDispParms::OposDispParms
EXTRN	??1OposDispParms@@QEAA@XZ:PROC			; OposDispParms::~OposDispParms
EXTRN	?cw_strcpy@@YAHPEA_WPEBD@Z:PROC			; cw_strcpy
EXTRN	?DupWide@_CW@@AEAAXXZ:PROC			; _CW::DupWide
EXTRN	??_E?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAPEAXI@Z:PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::`vector deleting destructor'
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	_Init_thread_epoch:DWORD
EXTRN	?nothrow@std@@3Unothrow_t@1@B:BYTE		; std::nothrow
EXTRN	IID_IUnknown:BYTE
EXTRN	GUID_NULL:BYTE
EXTRN	IID_IDispatch:BYTE
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
EXTRN	__ImageBase:ZWORD
EXTRN	?_Module@@3VCComModule@ATL@@A:BYTE		; _Module
EXTRN	DIID__IOPOSVideoCaptureEvents:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_tls_index:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A
_BSS	SEGMENT
?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceGeneral
_BSS	ENDS
;	COMDAT ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A
_BSS	SEGMENT
?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCOM
_BSS	ENDS
;	COMDAT ?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A
_BSS	SEGMENT
?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceQI
_BSS	ENDS
;	COMDAT ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A
_BSS	SEGMENT
?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRegistrar
_BSS	ENDS
;	COMDAT ?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A
_BSS	SEGMENT
?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRefcount
_BSS	ENDS
;	COMDAT ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A
_BSS	SEGMENT
?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceWindowing
_BSS	ENDS
;	COMDAT ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A
_BSS	SEGMENT
?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceControls
_BSS	ENDS
;	COMDAT ?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A
_BSS	SEGMENT
?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceHosting
_BSS	ENDS
;	COMDAT ?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBClient
_BSS	ENDS
;	COMDAT ?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBProvider
_BSS	ENDS
;	COMDAT ?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSnapin
_BSS	ENDS
;	COMDAT ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceNotImpl
_BSS	ENDS
;	COMDAT ?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceAllocation
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceTime
_BSS	ENDS
;	COMDAT ?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCache
_BSS	ENDS
;	COMDAT ?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceStencil
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT ?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceMap
_BSS	ENDS
;	COMDAT ?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceUtil
_BSS	ENDS
;	COMDAT ?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSecurity
_BSS	ENDS
;	COMDAT ?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSync
_BSS	ENDS
;	COMDAT ?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceISAPI
_BSS	ENDS
;	COMDAT ?m_nLevel@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLevel@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLevel
_BSS	ENDS
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?_AtlComModule@ATL@@3VCAtlComModule@1@A
_BSS	SEGMENT
?_AtlComModule@ATL@@3VCAtlComModule@1@A DB 048H DUP (?)	; ATL::_AtlComModule
_BSS	ENDS
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_BSS	SEGMENT
?_AtlWinModule@ATL@@3VCAtlWinModule@1@A DB 048H DUP (?)	; ATL::_AtlWinModule
_BSS	ENDS
;	COMDAT ?pConnMap@?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@0PEBU_ATL_CONNMAP_ENTRY@2@EB
_BSS	SEGMENT
?pConnMap@?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@0PEBU_ATL_CONNMAP_ENTRY@2@EB DQ 01H DUP (?) ; ATL::IConnectionPointContainerImpl<COPOSVideoCapture>::pConnMap
_BSS	ENDS
;	COMDAT ?_entries@?1??GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z@4QBU34@B
_BSS	SEGMENT
?_entries@?1??GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z@4QBU34@B DQ 03H DUP (?) ; `COPOSVideoCapture::GetConnMap'::`2'::_entries
_BSS	ENDS
;	COMDAT ?$TSS0@?1??GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z@4HA
_BSS	SEGMENT
?$TSS0@?1??GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z@4HA DD 01H DUP (?) ; `COPOSVideoCapture::GetConnMap'::`2'::$TSS0
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN7
	DD	imagerel $LN7+139
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_I@YAXPEAX_K1P6AX0@Z@Z DD imagerel $LN7
	DD	imagerel $LN7+166
	DD	imagerel $unwind$??_I@YAXPEAX_K1P6AX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$InlineIsEqualGUID DD imagerel $LN5
	DD	imagerel $LN5+208
	DD	imagerel $unwind$InlineIsEqualGUID
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$HRESULT_FROM_WIN32 DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$HRESULT_FROM_WIN32
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IUnknown@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0IUnknown@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IPersist@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IPersist@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IPersistStorage@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IPersistStorage@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IDataObject@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IDataObject@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IDispatch@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IDispatch@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IOleObject@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IOleObject@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IOleWindow@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IOleWindow@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IOleInPlaceActiveObject@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IOleInPlaceActiveObject@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IOleInPlaceObject@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IOleInPlaceObject@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IViewObject@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IViewObject@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IViewObject2@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IViewObject2@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AtlThrowImpl@ATL@@YAXJ@Z DD imagerel $LN8
	DD	imagerel $LN8+221
	DD	imagerel $unwind$?AtlThrowImpl@ATL@@YAXJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfwprintf_l DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$_vfwprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$vfwprintf DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$vfwprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsnwprintf_l DD imagerel $LN5
	DD	imagerel $LN5+139
	DD	imagerel $unwind$_vsnwprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_snwprintf DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$_snwprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsnwprintf DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$_vsnwprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vswprintf_s_l DD imagerel $LN5
	DD	imagerel $LN5+132
	DD	imagerel $unwind$_vswprintf_s_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$swprintf_s DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$swprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$AtlMultiply@H@ATL@@YAJPEAHHH@Z DD imagerel $LN5
	DD	imagerel $LN5+111
	DD	imagerel $unwind$??$AtlMultiply@H@ATL@@YAJPEAHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Free@CCRTAllocator@ATL@@SAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?Free@CCRTAllocator@ATL@@SAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceGeneral@ATL@@YAXXZ DD imagerel ??__EatlTraceGeneral@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceGeneral@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceGeneral@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceCOM@ATL@@YAXXZ DD imagerel ??__EatlTraceCOM@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceCOM@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceCOM@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceQI@ATL@@YAXXZ DD imagerel ??__EatlTraceQI@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceQI@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceQI@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceRegistrar@ATL@@YAXXZ DD imagerel ??__EatlTraceRegistrar@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceRegistrar@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceRegistrar@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceRefcount@ATL@@YAXXZ DD imagerel ??__EatlTraceRefcount@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceRefcount@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceRefcount@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceWindowing@ATL@@YAXXZ DD imagerel ??__EatlTraceWindowing@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceWindowing@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceWindowing@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceControls@ATL@@YAXXZ DD imagerel ??__EatlTraceControls@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceControls@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceControls@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceHosting@ATL@@YAXXZ DD imagerel ??__EatlTraceHosting@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceHosting@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceHosting@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceDBClient@ATL@@YAXXZ DD imagerel ??__EatlTraceDBClient@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceDBClient@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceDBClient@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceDBProvider@ATL@@YAXXZ DD imagerel ??__EatlTraceDBProvider@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceDBProvider@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceDBProvider@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceSnapin@ATL@@YAXXZ DD imagerel ??__EatlTraceSnapin@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceSnapin@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceSnapin@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceNotImpl@ATL@@YAXXZ DD imagerel ??__EatlTraceNotImpl@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceNotImpl@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceNotImpl@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceAllocation@ATL@@YAXXZ DD imagerel ??__EatlTraceAllocation@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceAllocation@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceAllocation@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceException@ATL@@YAXXZ DD imagerel ??__EatlTraceException@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceException@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceException@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceTime@ATL@@YAXXZ DD imagerel ??__EatlTraceTime@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceTime@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceTime@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceCache@ATL@@YAXXZ DD imagerel ??__EatlTraceCache@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceCache@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceCache@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceStencil@ATL@@YAXXZ DD imagerel ??__EatlTraceStencil@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceStencil@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceStencil@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceString@ATL@@YAXXZ DD imagerel ??__EatlTraceString@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceString@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceString@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceMap@ATL@@YAXXZ DD imagerel ??__EatlTraceMap@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceMap@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceMap@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceUtil@ATL@@YAXXZ DD imagerel ??__EatlTraceUtil@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceUtil@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceUtil@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceSecurity@ATL@@YAXXZ DD imagerel ??__EatlTraceSecurity@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceSecurity@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceSecurity@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceSync@ATL@@YAXXZ DD imagerel ??__EatlTraceSync@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceSync@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceSync@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceISAPI@ATL@@YAXXZ DD imagerel ??__EatlTraceISAPI@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceISAPI@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceISAPI@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z DD imagerel $LN7
	DD	imagerel $LN7+116
	DD	imagerel $unwind$?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z DD imagerel $LN12
	DD	imagerel $LN12+682
	DD	imagerel $unwind$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z DD imagerel $LN6
	DD	imagerel $LN6+429
	DD	imagerel $unwind$?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z DD imagerel $LN6
	DD	imagerel $LN6+212
	DD	imagerel $unwind$?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD imagerel $LN5
	DD	imagerel $LN5+145
	DD	imagerel $unwind$?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD imagerel $LN4
	DD	imagerel $LN4+115
	DD	imagerel $unwind$?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CPreserveLastError@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??0CPreserveLastError@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CPreserveLastError@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??1CPreserveLastError@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ DD imagerel $LN3
	DD	imagerel $LN3+176
	DD	imagerel $unwind$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_AtlRaiseException@ATL@@YAXKK@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$?_AtlRaiseException@ATL@@YAXKK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CComCriticalSection@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0CComCriticalSection@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CComCriticalSection@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1CComCriticalSection@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Init@CComCriticalSection@ATL@@QEAAJXZ DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$?Init@CComCriticalSection@ATL@@QEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Term@CComCriticalSection@ATL@@QEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?Term@CComCriticalSection@ATL@@QEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IEnumConnections@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IEnumConnections@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IConnectionPointContainer@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IConnectionPointContainer@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IProvideClassInfo@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IProvideClassInfo@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IProvideClassInfo2@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IProvideClassInfo2@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IOleControl@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IOleControl@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ISpecifyPropertyPages@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0ISpecifyPropertyPages@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IPersistStreamInit@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IPersistStreamInit@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IOleInPlaceObjectWindowless@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IOleInPlaceObjectWindowless@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IViewObjectEx@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IViewObjectEx@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IQuickActivate@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IQuickActivate@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComPtrBase@UIDispatch@@@ATL@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0?$CComPtrBase@UIDispatch@@@ATL@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComPtrBase@UIDispatch@@@ATL@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$CComPtrBase@UIDispatch@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComPtr@UIDispatch@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$CComPtr@UIDispatch@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComPtr@UIDispatch@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CComPtr@UIDispatch@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComPtrBase@UIUnknown@@@ATL@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0?$CComPtrBase@UIUnknown@@@ATL@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComPtrBase@UIUnknown@@@ATL@@IEAA@PEAUIUnknown@@@Z DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$??0?$CComPtrBase@UIUnknown@@@ATL@@IEAA@PEAUIUnknown@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Swap@?$CComPtrBase@UIUnknown@@@ATL@@IEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?Swap@?$CComPtrBase@UIUnknown@@@ATL@@IEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComPtrBase@UIUnknown@@@ATL@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$CComPtrBase@UIUnknown@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$CComPtrBase@UIUnknown@@@ATL@@QEBAPEAUIUnknown@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??B?$CComPtrBase@UIUnknown@@@ATL@@QEBAPEAUIUnknown@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComPtr@UIUnknown@@@ATL@@QEAA@PEAUIUnknown@@@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CComPtr@UIUnknown@@@ATL@@QEAA@PEAUIUnknown@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComPtr@UIUnknown@@@ATL@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$CComPtr@UIUnknown@@@ATL@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$CComPtr@UIUnknown@@@ATL@@QEAAPEAUIUnknown@@PEAU2@@Z DD imagerel $LN4
	DD	imagerel $LN4+104
	DD	imagerel $unwind$??4?$CComPtr@UIUnknown@@@ATL@@QEAAPEAUIUnknown@@PEAU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CComBSTR@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??1CComBSTR@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Increment@CComSingleThreadModel@ATL@@SAKPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$?Increment@CComSingleThreadModel@ATL@@SAKPEAJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Decrement@CComSingleThreadModel@ATL@@SAKPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$?Decrement@CComSingleThreadModel@ATL@@SAKPEAJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+132
	DD	imagerel $unwind$?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z DD imagerel $LN7
	DD	imagerel $LN7+172
	DD	imagerel $unwind$??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AtlInternalQueryInterface@ATL@@YAJPEAXPEBU_ATL_INTMAP_ENTRY@1@AEBU_GUID@@PEAPEAX@Z DD imagerel $LN22
	DD	imagerel $LN22+702
	DD	imagerel $unwind$?AtlInternalQueryInterface@ATL@@YAJPEAXPEBU_ATL_INTMAP_ENTRY@1@AEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z DD imagerel $LN7
	DD	imagerel $LN7+249
	DD	imagerel $unwind$?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z DD imagerel $LN9
	DD	imagerel $LN9+228
	DD	imagerel $unwind$?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InlineIsEqualUnknown@ATL@@YAHAEBU_GUID@@@Z DD imagerel $LN5
	DD	imagerel $LN5+141
	DD	imagerel $unwind$?InlineIsEqualUnknown@ATL@@YAHAEBU_GUID@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CAtlComModule@ATL@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+286
	DD	imagerel $unwind$??0CAtlComModule@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CAtlComModule@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??1CAtlComModule@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Term@CAtlComModule@ATL@@QEAAXXZ DD imagerel $LN9
	DD	imagerel $LN9+213
	DD	imagerel $unwind$?Term@CAtlComModule@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__E_AtlComModule@ATL@@YAXXZ DD imagerel ??__E_AtlComModule@ATL@@YAXXZ
	DD	imagerel ??__E_AtlComModule@ATL@@YAXXZ+51
	DD	imagerel $unwind$??__E_AtlComModule@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__F_AtlComModule@ATL@@YAXXZ DD imagerel ??__F_AtlComModule@ATL@@YAXXZ
	DD	imagerel ??__F_AtlComModule@ATL@@YAXXZ+39
	DD	imagerel $unwind$??__F_AtlComModule@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CAtlWinModule@ATL@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+165
	DD	imagerel $unwind$??0CAtlWinModule@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CAtlWinModule@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??1CAtlWinModule@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Term@CAtlWinModule@ATL@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?Term@CAtlWinModule@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__E_AtlWinModule@ATL@@YAXXZ DD imagerel ??__E_AtlWinModule@ATL@@YAXXZ
	DD	imagerel ??__E_AtlWinModule@ATL@@YAXXZ+51
	DD	imagerel $unwind$??__E_AtlWinModule@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__F_AtlWinModule@ATL@@YAXXZ DD imagerel ??__F_AtlWinModule@ATL@@YAXXZ
	DD	imagerel ??__F_AtlWinModule@ATL@@YAXXZ+39
	DD	imagerel $unwind$??__F_AtlWinModule@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetModuleInstance@CComModule@ATL@@QEAAPEAUHINSTANCE__@@XZ DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?GetModuleInstance@CComModule@ATL@@QEAAPEAUHINSTANCE__@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CDynamicStdCallThunk2@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0CDynamicStdCallThunk2@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CDynamicStdCallThunk2@ATL@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$??1CDynamicStdCallThunk2@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CComObjectRootBase@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$??0CComObjectRootBase@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CComObjectRootBase@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1CComObjectRootBase@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FinalConstruct@CComObjectRootBase@ATL@@QEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+10
	DD	imagerel $unwind$?FinalConstruct@CComObjectRootBase@ATL@@QEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_AtlFinalConstruct@CComObjectRootBase@ATL@@QEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+10
	DD	imagerel $unwind$?_AtlFinalConstruct@CComObjectRootBase@ATL@@QEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FinalRelease@CComObjectRootBase@ATL@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?FinalRelease@CComObjectRootBase@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalQueryInterface@CComObjectRootBase@ATL@@SAJPEAXPEBU_ATL_INTMAP_ENTRY@2@AEBU_GUID@@PEAPEAX@Z DD imagerel $LN6
	DD	imagerel $LN6+286
	DD	imagerel $unwind$?InternalQueryInterface@CComObjectRootBase@ATL@@SAJPEAXPEBU_ATL_INTMAP_ENTRY@2@AEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetVoid@CComObjectRootBase@ATL@@QEAAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?SetVoid@CComObjectRootBase@ATL@@QEAAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+110
	DD	imagerel $unwind$?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAKXZ DD imagerel $LN7
	DD	imagerel $LN7+120
	DD	imagerel $unwind$?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAKXZ DD imagerel $LN5
	DD	imagerel $LN5+128
	DD	imagerel $unwind$?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_AtlInitialConstruct@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+10
	DD	imagerel $unwind$?_AtlInitialConstruct@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ModuleLockHelper@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0ModuleLockHelper@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ModuleLockHelper@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??1ModuleLockHelper@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Estringdispid@CComTypeInfoHolder@ATL@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+176
	DD	imagerel $unwind$??_Estringdispid@CComTypeInfoHolder@ATL@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAJPEAUtagCONNECTDATA@@PEBU3@@Z DD imagerel $LN14
	DD	imagerel $LN14+235
	DD	imagerel $unwind$?copy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAJPEAUtagCONNECTDATA@@PEBU3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?init@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?init@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?destroy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$?destroy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CComDynamicUnkArray@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0CComDynamicUnkArray@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CComDynamicUnkArray@ATL@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$??1CComDynamicUnkArray@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Add@CComDynamicUnkArray@ATL@@QEAAKPEAUIUnknown@@@Z DD imagerel $LN11
	DD	imagerel $LN11+467
	DD	imagerel $unwind$?Add@CComDynamicUnkArray@ATL@@QEAAKPEAUIUnknown@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Remove@CComDynamicUnkArray@ATL@@QEAAHK@Z DD imagerel $LN8
	DD	imagerel $LN8+210
	DD	imagerel $unwind$?Remove@CComDynamicUnkArray@ATL@@QEAAHK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCookie@CComDynamicUnkArray@ATL@@QEAAKPEAPEAUIUnknown@@@Z DD imagerel $LN10
	DD	imagerel $LN10+240
	DD	imagerel $unwind$?GetCookie@CComDynamicUnkArray@ATL@@QEAAKPEAPEAUIUnknown@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetUnknown@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@K@Z DD imagerel $LN7
	DD	imagerel $LN7+164
	DD	imagerel $unwind$?GetUnknown@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?begin@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?end@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetAt@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@H@Z DD imagerel $LN7
	DD	imagerel $LN7+163
	DD	imagerel $unwind$?GetAt@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSize@CComDynamicUnkArray@ATL@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?GetSize@CComDynamicUnkArray@ATL@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z DD imagerel $LN5
	DD	imagerel $LN5+124
	DD	imagerel $unwind$??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CWindow@ATL@@QEAA@PEAUHWND__@@@Z DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$??0CWindow@ATL@@QEAA@PEAUHWND__@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CWndProcThunk@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??0CWndProcThunk@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CWndProcThunk@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??1CWndProcThunk@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CMessageMap@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0CMessageMap@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+112
	DD	imagerel $unwind$??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+192
	DD	imagerel $unwind$??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComPtrBase@UIOleClientSite@@@ATL@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0?$CComPtrBase@UIOleClientSite@@@ATL@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComPtrBase@UIOleClientSite@@@ATL@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$CComPtrBase@UIOleClientSite@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComPtr@UIOleClientSite@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$CComPtr@UIOleClientSite@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComPtr@UIOleClientSite@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CComPtr@UIOleClientSite@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComPtrBase@UIAdviseSink@@@ATL@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0?$CComPtrBase@UIAdviseSink@@@ATL@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComPtrBase@UIAdviseSink@@@ATL@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$CComPtrBase@UIAdviseSink@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComPtr@UIAdviseSink@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$CComPtr@UIAdviseSink@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComPtr@UIAdviseSink@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CComPtr@UIAdviseSink@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IObjectSafety@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IObjectSafety@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CComControlBase@ATL@@QEAA@AEAPEAUHWND__@@@Z DD imagerel $LN3
	DD	imagerel $LN3+537
	DD	imagerel $unwind$??0CComControlBase@ATL@@QEAA@AEAPEAUHWND__@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CComControlBase@ATL@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$??1CComControlBase@ATL@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComPtr@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$CComPtr@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComPtr@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CComPtr@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComPtrBase@UIDataAdviseHolder@@@ATL@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0?$CComPtrBase@UIDataAdviseHolder@@@ATL@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComPtr@UIDataAdviseHolder@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$CComPtr@UIDataAdviseHolder@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComPtr@UIDataAdviseHolder@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CComPtr@UIDataAdviseHolder@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComPtrBase@UIOleAdviseHolder@@@ATL@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0?$CComPtrBase@UIOleAdviseHolder@@@ATL@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComPtr@UIOleAdviseHolder@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$CComPtr@UIOleAdviseHolder@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComPtr@UIOleAdviseHolder@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CComPtr@UIOleAdviseHolder@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComQIPtr@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$CComQIPtr@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComQIPtr@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CComQIPtr@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IOPOSVideoCapture_1_16@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IOPOSVideoCapture_1_16@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IOPOSVideoCapture@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0IOPOSVideoCapture@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0OposVariant@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$??0OposVariant@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1OposVariant@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??1OposVariant@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clear@OposVariant@@QEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?Clear@OposVariant@@QEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_EOposVariant@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+176
	DD	imagerel $unwind$??_EOposVariant@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1OposVariantResult@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??1OposVariantResult@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0OposVariantResult@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0OposVariantResult@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$IDispatchImpl@UIOPOSVideoCapture@@$1?IID_IOPOSVideoCapture@@3U_GUID@@B$1?LIBID_OposVideoCapture_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$IDispatchImpl@UIOPOSVideoCapture@@$1?IID_IOPOSVideoCapture@@3U_GUID@@B$1?LIBID_OposVideoCapture_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComControl@VCOPOSVideoCapture@@V?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$??0?$CComControl@VCOPOSVideoCapture@@V?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComControl@VCOPOSVideoCapture@@V?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??1?$CComControl@VCOPOSVideoCapture@@V?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$IPersistStreamInitImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$IPersistStreamInitImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$IOleControlImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$IOleControlImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$IOleObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$IOleObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$IOleInPlaceActiveObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$IOleInPlaceActiveObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$IViewObjectExImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$IViewObjectExImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$IOleInPlaceObjectWindowlessImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$IOleInPlaceObjectWindowlessImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$IPersistStorageImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$IPersistStorageImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ISpecifyPropertyPagesImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$ISpecifyPropertyPagesImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$IQuickActivateImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$IQuickActivateImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$IDataObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$IDataObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$IProvideClassInfo2Impl@$1?CLSID_OPOSVideoCapture@@3U_GUID@@B$1?DIID__IOPOSVideoCaptureEvents@@3U2@B$1?LIBID_OposVideoCapture_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$IProvideClassInfo2Impl@$1?CLSID_OPOSVideoCapture@@3U_GUID@@B$1?DIID__IOPOSVideoCaptureEvents@@3U2@B$1?LIBID_OposVideoCapture_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$IObjectSafetyImpl@VCOPOSVideoCapture@@$02@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??0?$IObjectSafetyImpl@VCOPOSVideoCapture@@$02@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_ICPLocator@$1?IID_IPropertyNotifySink@@3U_GUID@@B@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$_ICPLocator@$1?IID_IPropertyNotifySink@@3U_GUID@@B@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+148
	DD	imagerel $unwind$??1?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??0?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$IPropertyNotifySinkCP@VCOPOSVideoCapture@@VCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$IPropertyNotifySinkCP@VCOPOSVideoCapture@@VCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$IPropertyNotifySinkCP@VCOPOSVideoCapture@@VCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$IPropertyNotifySinkCP@VCOPOSVideoCapture@@VCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_ICPLocator@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@B@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$_ICPLocator@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@B@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+148
	DD	imagerel $unwind$??1?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJAEBU_GUID@@PEAPEAX@Z DD imagerel $LN8
	DD	imagerel $LN8+214
	DD	imagerel $unwind$?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJAEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAU_GUID@@@Z DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAU_GUID@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAPEAUIConnectionPointContainer@@@Z DD imagerel $LN5
	DD	imagerel $LN5+113
	DD	imagerel $unwind$?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAPEAUIConnectionPointContainer@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Advise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAUIUnknown@@PEAK@Z DD imagerel $LN15
	DD	imagerel $LN15+506
	DD	imagerel $unwind$?Advise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAUIUnknown@@PEAK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Unadvise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJK@Z DD imagerel $LN8
	DD	imagerel $LN8+235
	DD	imagerel $unwind$?Unadvise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EnumConnections@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z DD imagerel $LN19
	DD	imagerel $LN19+834
	DD	imagerel $unwind$?EnumConnections@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??0?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z DD imagerel $LN9
	DD	imagerel $LN9+656
	DD	imagerel $unwind$?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z DD imagerel $LN9
	DD	imagerel $LN9+676
	DD	imagerel $unwind$?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJ@Z DD imagerel $LN9
	DD	imagerel $LN9+484
	DD	imagerel $unwind$?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAA@PEAVCOPOSVideoCapture@@@Z DD imagerel $LN3
	DD	imagerel $LN3+145
	DD	imagerel $unwind$??0?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAA@PEAVCOPOSVideoCapture@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Advise@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@UEAAJPEAUIUnknown@@PEAK@Z DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$?Advise@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@UEAAJPEAUIUnknown@@PEAK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Unadvise@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@UEAAJK@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$?Unadvise@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@UEAAJK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z DD imagerel $LN9
	DD	imagerel $LN9+478
	DD	imagerel $unwind$?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$??0COPOSVideoCapture@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+377
	DD	imagerel $unwind$??0COPOSVideoCapture@@QEAA@XZ
$pdata$?FinalConstruct@COPOSVideoCapture@@QEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+223
	DD	imagerel $unwind$?FinalConstruct@COPOSVideoCapture@@QEAAJXZ
$pdata$??1COPOSVideoCapture@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$??1COPOSVideoCapture@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetRC@COPOSVideoCapture@@IEAAJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$?SetRC@COPOSVideoCapture@@IEAAJJ@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ
$pdata$?WriteTraceString@COPOSVideoCapture@@QEAAXPEB_WPEA_W@Z DD imagerel $LN34
	DD	imagerel $LN34+1080
	DD	imagerel $unwind$?WriteTraceString@COPOSVideoCapture@@QEAAXPEB_WPEA_W@Z
$pdata$?WriteTraceString@COPOSVideoCapture@@QEAAXPEAXHHHPEB_WZZ DD imagerel $LN16
	DD	imagerel $LN16+640
	DD	imagerel $unwind$?WriteTraceString@COPOSVideoCapture@@QEAAXPEAXHHHPEB_WZZ
$pdata$?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z DD imagerel $LN8
	DD	imagerel $LN8+241
	DD	imagerel $unwind$?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z
$pdata$?WriteTraceMethods@COPOSVideoCapture@@QEAAXPEAJH@Z DD imagerel $LN7
	DD	imagerel $LN7+135
	DD	imagerel $unwind$?WriteTraceMethods@COPOSVideoCapture@@QEAAXPEAJH@Z
$pdata$?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z DD imagerel $LN12
	DD	imagerel $LN12+792
	DD	imagerel $unwind$?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z
$pdata$?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z DD imagerel $LN13
	DD	imagerel $LN13+858
	DD	imagerel $unwind$?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z
$pdata$?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z DD imagerel $LN5
	DD	imagerel $LN5+153
	DD	imagerel $unwind$?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z
$pdata$?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJFJ@Z DD imagerel $LN5
	DD	imagerel $LN5+112
	DD	imagerel $unwind$?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJFJ@Z
$pdata$?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z DD imagerel $LN13
	DD	imagerel $LN13+781
	DD	imagerel $unwind$?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z
$pdata$?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z DD imagerel $LN16
	DD	imagerel $LN16+973
	DD	imagerel $unwind$?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z
$pdata$?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z DD imagerel $LN62
	DD	imagerel $LN62+2890
	DD	imagerel $unwind$?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z
$pdata$?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z DD imagerel $LN4
	DD	imagerel $LN4+390
	DD	imagerel $unwind$?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z
$pdata$?FreezeEvents@COPOSVideoCapture@@MEAAJH@Z DD imagerel $LN7
	DD	imagerel $LN7+298
	DD	imagerel $unwind$?FreezeEvents@COPOSVideoCapture@@MEAAJH@Z
$pdata$?OnDraw@COPOSVideoCapture@@MEAAJAEAUATL_DRAWINFO@@@Z DD imagerel $LN7
	DD	imagerel $LN7+452
	DD	imagerel $unwind$?OnDraw@COPOSVideoCapture@@MEAAJAEAUATL_DRAWINFO@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z DD imagerel $LN13
	DD	imagerel $LN13+347
	DD	imagerel $unwind$?GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EventInit@COPOSVideoCapture@@IEAAJXZ DD imagerel $LN8
	DD	imagerel $LN8+684
	DD	imagerel $unwind$?EventInit@COPOSVideoCapture@@IEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EventOpen@COPOSVideoCapture@@IEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?EventOpen@COPOSVideoCapture@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EventClaim@COPOSVideoCapture@@IEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?EventClaim@COPOSVideoCapture@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EventPreCloseRelease@COPOSVideoCapture@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+126
	DD	imagerel $unwind$?EventPreCloseRelease@COPOSVideoCapture@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EventClose@COPOSVideoCapture@@IEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+147
	DD	imagerel $unwind$?EventClose@COPOSVideoCapture@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EventUninit@COPOSVideoCapture@@IEAAXXZ DD imagerel $LN11
	DD	imagerel $LN11+296
	DD	imagerel $unwind$?EventUninit@COPOSVideoCapture@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?s_EventWindowProc@COPOSVideoCapture@@KA_JPEAUHWND__@@I_K_J@Z DD imagerel $LN6
	DD	imagerel $LN6+174
	DD	imagerel $unwind$?s_EventWindowProc@COPOSVideoCapture@@KA_JPEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EventWindowProc@COPOSVideoCapture@@IEAA_JI_K_J@Z DD imagerel $LN12
	DD	imagerel $LN12+373
	DD	imagerel $unwind$?EventWindowProc@COPOSVideoCapture@@IEAA_JI_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FireEventSetup@COPOSVideoCapture@@IEAA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+118
	DD	imagerel $unwind$?FireEventSetup@COPOSVideoCapture@@IEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FireEventCleanup@COPOSVideoCapture@@IEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?FireEventCleanup@COPOSVideoCapture@@IEAAXXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?SOProcessID@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?SOProcessID@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?get_OpenResult@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$?get_OpenResult@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?get_BinaryConversion@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_BinaryConversion@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?put_BinaryConversion@COPOSVideoCapture@@UEAAJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$?put_BinaryConversion@COPOSVideoCapture@@UEAAJJ@Z
$pdata$?get_CapPowerReporting@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapPowerReporting@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?get_CheckHealthText@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CheckHealthText@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?get_Claimed@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_Claimed@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_DeviceEnabled@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_DeviceEnabled@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?put_DeviceEnabled@COPOSVideoCapture@@UEAAJF@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?put_DeviceEnabled@COPOSVideoCapture@@UEAAJF@Z
$pdata$?get_FreezeEvents@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_FreezeEvents@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?put_FreezeEvents@COPOSVideoCapture@@UEAAJF@Z DD imagerel $LN6
	DD	imagerel $LN6+204
	DD	imagerel $unwind$?put_FreezeEvents@COPOSVideoCapture@@UEAAJF@Z
$pdata$?get_PowerNotify@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_PowerNotify@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?put_PowerNotify@COPOSVideoCapture@@UEAAJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?put_PowerNotify@COPOSVideoCapture@@UEAAJJ@Z
$pdata$?get_PowerState@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_PowerState@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?get_ResultCode@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN7
	DD	imagerel $LN7+188
	DD	imagerel $unwind$?get_ResultCode@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?get_ResultCodeExtended@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_ResultCodeExtended@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?get_State@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN5
	DD	imagerel $LN5+125
	DD	imagerel $unwind$?get_State@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?get_ControlObjectDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+119
	DD	imagerel $unwind$?get_ControlObjectDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?get_ControlObjectVersion@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$?get_ControlObjectVersion@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?get_ServiceObjectDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_ServiceObjectDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?get_ServiceObjectVersion@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_ServiceObjectVersion@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?get_DeviceDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_DeviceDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?get_DeviceName@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_DeviceName@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?get_CapStatisticsReporting@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapStatisticsReporting@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapUpdateStatistics@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapUpdateStatistics@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapCompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapCompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapUpdateFirmware@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapUpdateFirmware@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?CheckHealth@COPOSVideoCapture@@UEAAJJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+180
	DD	imagerel $unwind$?CheckHealth@COPOSVideoCapture@@UEAAJJPEAJ@Z
$pdata$?ClaimDevice@COPOSVideoCapture@@UEAAJJPEAJ@Z DD imagerel $LN4
	DD	imagerel $LN4+270
	DD	imagerel $unwind$?ClaimDevice@COPOSVideoCapture@@UEAAJJPEAJ@Z
$pdata$?ClearInput@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$?ClearInput@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?Close@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN4
	DD	imagerel $LN4+264
	DD	imagerel $unwind$?Close@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?DirectIO@COPOSVideoCapture@@UEAAJJPEAJPEAPEA_W0@Z DD imagerel $LN3
	DD	imagerel $LN3+365
	DD	imagerel $unwind$?DirectIO@COPOSVideoCapture@@UEAAJJPEAJPEAPEA_W0@Z
$pdata$?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z DD imagerel $LN59
	DD	imagerel $LN59+5325
	DD	imagerel $unwind$?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z
$pdata$?ReleaseDevice@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN4
	DD	imagerel $LN4+168
	DD	imagerel $unwind$?ReleaseDevice@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?ResetStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+212
	DD	imagerel $unwind$?ResetStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z
$pdata$?RetrieveStatistics@COPOSVideoCapture@@UEAAJPEAPEA_WPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+212
	DD	imagerel $unwind$?RetrieveStatistics@COPOSVideoCapture@@UEAAJPEAPEA_WPEAJ@Z
$pdata$?UpdateStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+212
	DD	imagerel $unwind$?UpdateStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z
$pdata$?CompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEA_WPEAJ1@Z DD imagerel $LN3
	DD	imagerel $LN3+303
	DD	imagerel $unwind$?CompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEA_WPEAJ1@Z
$pdata$?UpdateFirmware@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+212
	DD	imagerel $unwind$?UpdateFirmware@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z
$pdata$?get_AutoExposure@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_AutoExposure@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?put_AutoExposure@COPOSVideoCapture@@UEAAJF@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?put_AutoExposure@COPOSVideoCapture@@UEAAJF@Z
$pdata$?get_AutoFocus@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_AutoFocus@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?put_AutoFocus@COPOSVideoCapture@@UEAAJF@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?put_AutoFocus@COPOSVideoCapture@@UEAAJF@Z
$pdata$?get_AutoGain@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_AutoGain@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?put_AutoGain@COPOSVideoCapture@@UEAAJF@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?put_AutoGain@COPOSVideoCapture@@UEAAJF@Z
$pdata$?get_AutoWhiteBalance@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_AutoWhiteBalance@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?put_AutoWhiteBalance@COPOSVideoCapture@@UEAAJF@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?put_AutoWhiteBalance@COPOSVideoCapture@@UEAAJF@Z
$pdata$?get_Brightness@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_Brightness@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?put_Brightness@COPOSVideoCapture@@UEAAJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?put_Brightness@COPOSVideoCapture@@UEAAJJ@Z
$pdata$?get_CapAssociatedHardTotalsDevice@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapAssociatedHardTotalsDevice@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?get_CapAutoExposure@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapAutoExposure@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapAutoFocus@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapAutoFocus@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapAutoGain@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapAutoGain@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapAutoWhiteBalance@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapAutoWhiteBalance@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapBrightness@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapBrightness@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapContrast@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapContrast@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapExposure@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapExposure@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapGain@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapGain@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapHorizontalFlip@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapHorizontalFlip@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapHue@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapHue@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapPhoto@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapPhoto@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapPhotoColorSpace@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapPhotoColorSpace@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapPhotoFrameRate@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapPhotoFrameRate@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapPhotoResolution@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapPhotoResolution@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapPhotoType@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapPhotoType@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapSaturation@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapSaturation@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapStorage@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapStorage@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?get_CapVerticalFlip@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapVerticalFlip@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapVideo@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapVideo@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapVideoColorSpace@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapVideoColorSpace@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapVideoFrameRate@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapVideoFrameRate@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapVideoResolution@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapVideoResolution@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_CapVideoType@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_CapVideoType@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?get_Contrast@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_Contrast@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?put_Contrast@COPOSVideoCapture@@UEAAJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?put_Contrast@COPOSVideoCapture@@UEAAJJ@Z
$pdata$?get_Exposure@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_Exposure@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?put_Exposure@COPOSVideoCapture@@UEAAJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?put_Exposure@COPOSVideoCapture@@UEAAJJ@Z
$pdata$?get_Gain@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_Gain@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?put_Gain@COPOSVideoCapture@@UEAAJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?put_Gain@COPOSVideoCapture@@UEAAJJ@Z
$pdata$?get_HorizontalFlip@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_HorizontalFlip@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?put_HorizontalFlip@COPOSVideoCapture@@UEAAJF@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?put_HorizontalFlip@COPOSVideoCapture@@UEAAJF@Z
$pdata$?get_Hue@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_Hue@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?put_Hue@COPOSVideoCapture@@UEAAJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?put_Hue@COPOSVideoCapture@@UEAAJJ@Z
$pdata$?get_PhotoColorSpace@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_PhotoColorSpace@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?put_PhotoColorSpace@COPOSVideoCapture@@UEAAJPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?put_PhotoColorSpace@COPOSVideoCapture@@UEAAJPEA_W@Z
$pdata$?get_PhotoColorSpaceList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_PhotoColorSpaceList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?get_PhotoFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_PhotoFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?put_PhotoFrameRate@COPOSVideoCapture@@UEAAJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?put_PhotoFrameRate@COPOSVideoCapture@@UEAAJJ@Z
$pdata$?get_PhotoMaxFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_PhotoMaxFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?get_PhotoResolution@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_PhotoResolution@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?put_PhotoResolution@COPOSVideoCapture@@UEAAJPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?put_PhotoResolution@COPOSVideoCapture@@UEAAJPEA_W@Z
$pdata$?get_PhotoResolutionList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_PhotoResolutionList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?get_PhotoType@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_PhotoType@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?put_PhotoType@COPOSVideoCapture@@UEAAJPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?put_PhotoType@COPOSVideoCapture@@UEAAJPEA_W@Z
$pdata$?get_PhotoTypeList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_PhotoTypeList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?get_RemainingRecordingTimeInSec@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_RemainingRecordingTimeInSec@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?get_Saturation@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_Saturation@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?put_Saturation@COPOSVideoCapture@@UEAAJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?put_Saturation@COPOSVideoCapture@@UEAAJJ@Z
$pdata$?get_Storage@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_Storage@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?put_Storage@COPOSVideoCapture@@UEAAJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?put_Storage@COPOSVideoCapture@@UEAAJJ@Z
$pdata$?get_VerticalFlip@COPOSVideoCapture@@UEAAJPEAF@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_VerticalFlip@COPOSVideoCapture@@UEAAJPEAF@Z
$pdata$?put_VerticalFlip@COPOSVideoCapture@@UEAAJF@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?put_VerticalFlip@COPOSVideoCapture@@UEAAJF@Z
$pdata$?get_VideoCaptureMode@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_VideoCaptureMode@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?put_VideoCaptureMode@COPOSVideoCapture@@UEAAJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?put_VideoCaptureMode@COPOSVideoCapture@@UEAAJJ@Z
$pdata$?get_VideoColorSpace@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_VideoColorSpace@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?put_VideoColorSpace@COPOSVideoCapture@@UEAAJPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?put_VideoColorSpace@COPOSVideoCapture@@UEAAJPEA_W@Z
$pdata$?get_VideoColorSpaceList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_VideoColorSpaceList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?get_VideoFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_VideoFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?put_VideoFrameRate@COPOSVideoCapture@@UEAAJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?put_VideoFrameRate@COPOSVideoCapture@@UEAAJJ@Z
$pdata$?get_VideoMaxFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_VideoMaxFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?get_VideoResolution@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_VideoResolution@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?put_VideoResolution@COPOSVideoCapture@@UEAAJPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?put_VideoResolution@COPOSVideoCapture@@UEAAJPEA_W@Z
$pdata$?get_VideoResolutionList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_VideoResolutionList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?get_VideoType@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_VideoType@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?put_VideoType@COPOSVideoCapture@@UEAAJPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?put_VideoType@COPOSVideoCapture@@UEAAJPEA_W@Z
$pdata$?get_VideoTypeList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?get_VideoTypeList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z
$pdata$?StartVideo@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+359
	DD	imagerel $unwind$?StartVideo@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z
$pdata$?StopVideo@COPOSVideoCapture@@UEAAJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$?StopVideo@COPOSVideoCapture@@UEAAJPEAJ@Z
$pdata$?TakePhoto@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z DD imagerel $LN3
	DD	imagerel $LN3+359
	DD	imagerel $unwind$?TakePhoto@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_CW@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??0_CW@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_CW@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??0_CW@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B_CW@@QEAAPEB_WXZ DD imagerel $LN4
	DD	imagerel $LN4+67
	DD	imagerel $unwind$??B_CW@@QEAAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_CW@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+113
	DD	imagerel $unwind$??1_CW@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_CWNCC@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0_CWNCC@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B_CWNCC@@QEAAPEA_WXZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??B_CWNCC@@QEAAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_CWNCC@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1_CWNCC@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__E?pConnMap@?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@0PEBU_ATL_CONNMAP_ENTRY@2@EB@@YAXXZ DD imagerel ??__E?pConnMap@?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@0PEBU_ATL_CONNMAP_ENTRY@2@EB@@YAXXZ
	DD	imagerel ??__E?pConnMap@?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@0PEBU_ATL_CONNMAP_ENTRY@2@EB@@YAXXZ+41
	DD	imagerel $unwind$??__E?pConnMap@?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@0PEBU_ATL_CONNMAP_ENTRY@2@EB@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+119
	DD	imagerel $unwind$??0?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$??1?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Next@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJKPEAUtagCONNECTDATA@@PEAK@Z DD imagerel $LN18
	DD	imagerel $LN18+445
	DD	imagerel $unwind$?Next@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJKPEAUtagCONNECTDATA@@PEAK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Skip@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJK@Z DD imagerel $LN7
	DD	imagerel $LN7+160
	DD	imagerel $unwind$?Skip@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Reset@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?Reset@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z DD imagerel $LN13
	DD	imagerel $LN13+482
	DD	imagerel $unwind$?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Init@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QEAAJPEAUtagCONNECTDATA@@0PEAUIUnknown@@W4CComEnumFlags@2@@Z DD imagerel $LN16
	DD	imagerel $LN16+747
	DD	imagerel $unwind$?Init@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QEAAJPEAUtagCONNECTDATA@@0PEAUIUnknown@@W4CComEnumFlags@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAAJAEBU_GUID@@PEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAAJAEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SAPEBU_ATL_INTMAP_ENTRY@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SAPEBU_ATL_INTMAP_ENTRY@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??0?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??1?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QEAA@PEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??0?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QEAA@PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??1?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddRef@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?AddRef@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ DD imagerel $LN6
	DD	imagerel $LN6+162
	DD	imagerel $unwind$?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAJAEBU_GUID@@PEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAJAEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SAJPEAPEAV12@@Z DD imagerel $LN13
	DD	imagerel $LN13+447
	DD	imagerel $unwind$?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SAJPEAPEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_G?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceGeneral$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceGeneral@ATL@@YAXXZ ; ATL::atlTraceGeneral$initializer$
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ?_entries@?1??_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SAPEBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT
?_entries@?1??_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SAPEBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B DQ 0000000000000000H ; `ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_GetEntries'::`2'::_entries
	DQ	FLAT:??_C@_1BE@ENNDGLJC@?$AA_?$AAC?$AAC?$AAo?$AAm?$AAE?$AAn?$AAu?$AAm@
	DQ	0000000000000000H
	DQ	FLAT:_GUID_b196b287_bab4_101a_b69c_00aa00341d07
	DQ	0000000000000000H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
CONST	ENDS
;	COMDAT ??_7?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@
CONST	SEGMENT
??_7?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@ DQ FLAT:?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAJAEBU_GUID@@PEAPEAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::`vftable'
	DQ	FLAT:?AddRef@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ
	DQ	FLAT:?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ
	DQ	FLAT:?Next@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJKPEAUtagCONNECTDATA@@PEAK@Z
	DQ	FLAT:?Skip@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJK@Z
	DQ	FLAT:?Reset@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJXZ
	DQ	FLAT:?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z
	DQ	FLAT:??_E?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_C@_1BE@ENNDGLJC@?$AA_?$AAC?$AAC?$AAo?$AAm?$AAE?$AAn?$AAu?$AAm@
CONST	SEGMENT
??_C@_1BE@ENNDGLJC@?$AA_?$AAC?$AAC?$AAo?$AAm?$AAE?$AAn?$AAu?$AAm@ DB '_', 00H
	DB	'C', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'E', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'm'
	DB	00H, '_', 00H, 'p', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GI@CMBOLMBG@?$AA?$CK?$AAF?$AAi?$AAr?$AAe?$AAT?$AAh?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5@
CONST	SEGMENT
??_C@_1GI@CMBOLMBG@?$AA?$CK?$AAF?$AAi?$AAr?$AAe?$AAT?$AAh?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5@ DB '*'
	DB	00H, 'F', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'T', 00H, 'h', 00H
	DB	'e', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, ':'
	DB	00H, ' ', 00H, 'D', 00H, 'e', 00H, 'l', 00H, 'i', 00H, 'v', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, '%'
	DB	00H, 'l', 00H, 's', 00H, ';', 00H, ' ', 00H, 'S', 00H, 'i', 00H
	DB	'n', 00H, 'k', 00H, ' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'X'
	DB	00H, ';', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'p', 00H
	DB	'I', 00H, 'D', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OK@FGCLCILL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OK@FGCLCILL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 's', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'c', 00H
	DB	'o', 00H, 'l', 00H, 'l', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GI@EDPGCMOP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5@
CONST	SEGMENT
??_C@_1GI@EDPGCMOP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, '-', 00H
	DB	' ', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 'd', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 'b', 00H, 'e', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, 'e', 00H, ' ', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H, 'w', 00H, 'a', 00H, 's'
	DB	00H, ' ', 00H, 'd', 00H, 'e', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'o', 00H, 'y', 00H, 'e', 00H, 'd', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HA@JEDONBAF@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HA@JEDONBAF@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.28.29333\atlmfc\include\atlwin.h', 00H ; `string'
CONST	ENDS
;	COMDAT _GUID_b196b286_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT
_GUID_b196b286_bab4_101a_b69c_00aa00341d07 DD 0b196b286H
	DW	0bab4H
	DW	0101aH
	DB	0b6H
	DB	09cH
	DB	00H
	DB	0aaH
	DB	00H
	DB	034H
	DB	01dH
	DB	07H
CONST	ENDS
;	COMDAT ??_C@_1BM@CBGEBBBJ@?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt@
CONST	SEGMENT
??_C@_1BM@CBGEBBBJ@?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt@ DB 'D'
	DB	00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'I', 00H
	DB	'O', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@LODEBHDD@?$AAE?$AAr?$AAr?$AAo?$AAr?$AAE?$AAv?$AAe?$AAn?$AAt@
CONST	SEGMENT
??_C@_1BG@LODEBHDD@?$AAE?$AAr?$AAr?$AAo?$AAr?$AAE?$AAv?$AAe?$AAn?$AAt@ DB 'E'
	DB	00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 'E', 00H, 'v', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@PGFMOFKI@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe@
CONST	SEGMENT
??_C@_1CE@PGFMOFKI@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe@ DB 'S'
	DB	00H, 't', 00H, 'a', 00H, 't', 00H, 'u', 00H, 's', 00H, 'U', 00H
	DB	'p', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'E', 00H, 'v'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@IMKHEMDJ@?$AA?$CK?$AAA?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?3?$AA?5?$AAS?$AAi?$AAn?$AAk?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1EA@IMKHEMDJ@?$AA?$CK?$AAA?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?3?$AA?5?$AAS?$AAi?$AAn?$AAk?$AA?5?$AA0@ DB '*'
	DB	00H, 'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'e', 00H
	DB	':', 00H, ' ', 00H, 'S', 00H, 'i', 00H, 'n', 00H, 'k', 00H, ' '
	DB	00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, ';', 00H, ' ', 00H
	DB	'C', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 'i', 00H, 'e', 00H, ' '
	DB	00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@NKNAIIAP@?$AA?$CK?$AAU?$AAn?$AAa?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?3?$AA?5?$AAC?$AAo?$AAo?$AAk@
CONST	SEGMENT
??_C@_1CO@NKNAIIAP@?$AA?$CK?$AAU?$AAn?$AAa?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?3?$AA?5?$AAC?$AAo?$AAo?$AAk@ DB '*'
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'd', 00H, 'v', 00H, 'i', 00H
	DB	's', 00H, 'e', 00H, ':', 00H, ' ', 00H, 'C', 00H, 'o', 00H, 'o'
	DB	00H, 'k', 00H, 'i', 00H, 'e', 00H, ' ', 00H, '0', 00H, 'x', 00H
	DB	'%', 00H, 'X', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?s_bFirst@?1??WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ@4HA
_DATA	SEGMENT
?s_bFirst@?1??WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ@4HA DD 01H ; `COPOSVideoCapture::WriteTrace'::`2'::s_bFirst
_DATA	ENDS
;	COMDAT ?s_TraceFile@?1??WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ@4PA_WA
_DATA	SEGMENT
?s_TraceFile@?1??WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ@4PA_WA DB 'C', 00H
	DB	':', 00H, '\', 00H, 'O', 00H, 'p', 00H, 'o', 00H, 's', 00H, 'C'
	DB	00H, 'C', 00H, 'O', 00H, '_', 00H, 'V', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, 'C', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'u'
	DB	00H, 'r', 00H, 'e', 00H, '.', 00H, 'l', 00H, 'o', 00H, 'g', 00H
	DB	00H, 00H					; `COPOSVideoCapture::WriteTrace'::`2'::s_TraceFile
_DATA	ENDS
_DATA	SEGMENT
	ORG $+14
?s_SOMethodNames@@3PAPEADA DQ FLAT:$SG192892		; s_SOMethodNames
	DQ	FLAT:$SG192893
	DQ	FLAT:$SG192894
	DQ	FLAT:$SG192895
	DQ	FLAT:$SG192896
	DQ	FLAT:$SG192897
	DQ	FLAT:$SG192898
	DQ	FLAT:$SG192899
	DQ	FLAT:$SG192900
	DQ	FLAT:$SG192901
	DQ	FLAT:$SG192902
	DQ	FLAT:$SG192903
	DQ	FLAT:$SG192904
	DQ	FLAT:$SG192905
	DQ	FLAT:$SG192906
	DQ	FLAT:$SG192907
	DQ	FLAT:$SG192908
	DQ	FLAT:$SG192909
	DQ	FLAT:$SG192910
	DQ	FLAT:$SG192911
	DQ	0000000000000000H
?s_RequiredMethodsPerRelease@@3PAHA DD 014H		; s_RequiredMethodsPerRelease
_DATA	ENDS
;	COMDAT ??_C@_1FG@KGPDBNHF@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAP?$AAr?$AAo@
CONST	SEGMENT
??_C@_1FG@KGPDBNHF@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAP?$AAr?$AAo@ DB '*'
	DB	00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'W', 00H
	DB	'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'P', 00H, 'r'
	DB	00H, 'o', 00H, 'c', 00H, ':', 00H, ' ', 00H, 'F', 00H, 'i', 00H
	DB	'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'S', 00H, 't'
	DB	00H, 'a', 00H, 't', 00H, 'u', 00H, 's', 00H, 'U', 00H, 'p', 00H
	DB	'd', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'E', 00H, 'v', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@OGEHNNLE@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAP?$AAr?$AAo@
CONST	SEGMENT
??_C@_1EI@OGEHNNLE@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAP?$AAr?$AAo@ DB '*'
	DB	00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'W', 00H
	DB	'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'P', 00H, 'r'
	DB	00H, 'o', 00H, 'c', 00H, ':', 00H, ' ', 00H, 'F', 00H, 'i', 00H
	DB	'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'E', 00H, 'r'
	DB	00H, 'r', 00H, 'o', 00H, 'r', 00H, 'E', 00H, 'v', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@JKFBLFHJ@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAP?$AAr?$AAo@
CONST	SEGMENT
??_C@_1EO@JKFBLFHJ@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAP?$AAr?$AAo@ DB '*'
	DB	00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'W', 00H
	DB	'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'P', 00H, 'r'
	DB	00H, 'o', 00H, 'c', 00H, ':', 00H, ' ', 00H, 'F', 00H, 'i', 00H
	DB	'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'D', 00H, 'i'
	DB	00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'O', 00H
	DB	'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FE@CAEAEALH@?$AA?3?$AA?3?$AAC?$AAl?$AAo?$AAs?$AAe?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AA?$CI?$AA?5@
CONST	SEGMENT
??_C@_1FE@CAEAEALH@?$AA?3?$AA?3?$AAC?$AAl?$AAo?$AAs?$AAe?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AA?$CI?$AA?5@ DB ':'
	DB	00H, ':', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H
	DB	'H', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '('
	DB	00H, ' ', 00H, '_', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, '_', 00H, 'D', 00H, 'o', 00H, 'E', 00H, 'v', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'M', 00H, 'u', 00H, 't', 00H, 'e', 00H
	DB	'x', 00H, ' ', 00H, ')', 00H, ' ', 00H, '!', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@NNNDFBMJ@?$AA?3?$AA?3?$AAC?$AAl?$AAo?$AAs?$AAe?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AA?$CI?$AA?5@
CONST	SEGMENT
??_C@_1FK@NNNDFBMJ@?$AA?3?$AA?3?$AAC?$AAl?$AAo?$AAs?$AAe?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AA?$CI?$AA?5@ DB ':'
	DB	00H, ':', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H
	DB	'H', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '('
	DB	00H, ' ', 00H, '_', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, '_', 00H, 'F', 00H, 'i', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'D', 00H, 'o', 00H, 'n', 00H, 'e', 00H, 'E', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, ')', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IK@JGLBMEDC@?$AA?3?$AA?3?$AAU?$AAn?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAC?$AAl?$AAa@
CONST	SEGMENT
??_C@_1IK@JGLBMEDC@?$AA?3?$AA?3?$AAU?$AAn?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAC?$AAl?$AAa@ DB ':'
	DB	00H, ':', 00H, 'U', 00H, 'n', 00H, 'r', 00H, 'e', 00H, 'g', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'C', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, 'W', 00H, '(', 00H, ' ', 00H
	DB	'g', 00H, '_', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ',', 00H
	DB	' ', 00H, '_', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'u', 00H, 'l'
	DB	00H, 'e', 00H, '.', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'M', 00H
	DB	'o', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H
	DB	'(', 00H, ')', 00H, ' ', 00H, ')', 00H, ' ', 00H, '!', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FC@INBMHOIJ@?$AA?3?$AA?3?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@
CONST	SEGMENT
??_C@_1FC@INBMHOIJ@?$AA?3?$AA?3?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@ DB ':'
	DB	00H, ':', 00H, 'D', 00H, 'e', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'o', 00H, 'y', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, '(', 00H, ' ', 00H, '_', 00H, 'E', 00H, 'v', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, '_', 00H, 'h', 00H, 'E', 00H, 'v'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'W', 00H, 'n', 00H, 'd', 00H
	DB	' ', 00H, ')', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@IOGKIMIM@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAC?$AAl?$AAo?$AAs?$AAe@
CONST	SEGMENT
??_C@_1BI@IOGKIMIM@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAC?$AAl?$AAo?$AAs?$AAe@ DB '*'
	DB	00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'C', 00H
	DB	'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@EPLGDCDL@?$AA?$CB?$AA?5?$AA_?$AAE?$AAv?$AAe?$AAn?$AAt?$AA_?$AAb?$AAE?$AAv?$AAe?$AAn?$AAt@
CONST	SEGMENT
??_C@_1DE@EPLGDCDL@?$AA?$CB?$AA?5?$AA_?$AAE?$AAv?$AAe?$AAn?$AAt?$AA_?$AAb?$AAE?$AAv?$AAe?$AAn?$AAt@ DB '!'
	DB	00H, ' ', 00H, '_', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, '_', 00H, 'b', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, 't', 00H, 'I', 00H, 'n', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'e', 00H, 's', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@EMMHBPEM@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
CONST	SEGMENT
??_C@_1GM@EMMHBPEM@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'e', 00H
	DB	'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P', 00H, 'O'
	DB	00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H, '\', 00H
	DB	'z', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 'C'
	DB	00H, 'a', 00H, 'p', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e', 00H
	DB	'\', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 'C'
	DB	00H, 'a', 00H, 'p', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e', 00H
	DB	'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@JMADAJDC@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAP?$AAr?$AAe?$AAC?$AAl?$AAo?$AAs?$AAe?$AAR@
CONST	SEGMENT
??_C@_1CM@JMADAJDC@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAP?$AAr?$AAe?$AAC?$AAl?$AAo?$AAs?$AAe?$AAR@ DB '*'
	DB	00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'P', 00H
	DB	'r', 00H, 'e', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e'
	DB	00H, 'R', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@PMBJJHKM@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAC?$AAl?$AAa?$AAi?$AAm@
CONST	SEGMENT
??_C@_1BI@PMBJJHKM@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAC?$AAl?$AAa?$AAi?$AAm@ DB '*'
	DB	00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'C', 00H
	DB	'l', 00H, 'a', 00H, 'i', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@FLDBIEFG@?$AA?5?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa@
CONST	SEGMENT
??_C@_1GC@FLDBIEFG@?$AA?5?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa@ DB ' '
	DB	00H, ' ', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, ':', 00H, ' ', 00H, 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'E'
	DB	00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, '/', 00H, 'M', 00H
	DB	'u', 00H, 't', 00H, 'e', 00H, 'x', 00H, ' ', 00H, '%', 00H, 'l'
	DB	00H, 'u', 00H, 0aH, 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	'%', 00H, 's', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FM@GHFMGGAO@?$AA?5?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa@
CONST	SEGMENT
??_C@_1FM@GHFMGGAO@?$AA?5?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa@ DB ' '
	DB	00H, ' ', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, ':', 00H, ' ', 00H, 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'W'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'E', 00H
	DB	'x', 00H, ' ', 00H, '%', 00H, 'l', 00H, 'u', 00H, 0aH, 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@EJDCNMFO@?$AA?5?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa@
CONST	SEGMENT
??_C@_1FK@EJDCNMFO@?$AA?5?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa@ DB ' '
	DB	00H, ' ', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, ':', 00H, ' ', 00H, 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'R', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, '%', 00H, 'l', 00H, 'u', 00H, 0aH, 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@6B@
CONST	SEGMENT
??_7?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@6B@ DQ FLAT:?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CProxy_IOPOSEvents<COPOSVideoCapture>::`vftable'
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAU_GUID@@@Z
	DQ	FLAT:?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAPEAUIConnectionPointContainer@@@Z
	DQ	FLAT:?Advise@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@UEAAJPEAUIUnknown@@PEAK@Z
	DQ	FLAT:?Unadvise@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@UEAAJK@Z
	DQ	FLAT:?EnumConnections@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z
CONST	ENDS
;	COMDAT ??_C@_1CG@KBMKEOOB@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy@
CONST	SEGMENT
??_C@_1CG@KBMKEOOB@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy@ DB 'C'
	DB	00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H
	DB	' ', 00H, 'D', 00H, 'e', 00H, 's', 00H, 't', 00H, 'r', 00H, 'o'
	DB	00H, 'y', 00H, 'e', 00H, 'd', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.28.29333\atlmfc\include\atlctl.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OA@EJAAKNNE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OA@EJAAKNNE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H, 'h', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT _GUID_b196b287_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT
_GUID_b196b287_bab4_101a_b69c_00aa00341d07 DD 0b196b287H
	DW	0bab4H
	DW	0101aH
	DB	0b6H
	DB	09cH
	DB	00H
	DB	0aaH
	DB	00H
	DB	034H
	DB	01dH
	DB	07H
CONST	ENDS
;	COMDAT ??_C@_1EO@PKGIEOJK@?$AAi?$AAd?$AAx?$AA?5?$AA?$DM?$AA?5?$AAd?$AAw?$AAC?$AAo?$AAo?$AAk?$AAi?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1EO@PKGIEOJK@?$AAi?$AAd?$AAx?$AA?5?$AA?$DM?$AA?5?$AAd?$AAw?$AAC?$AAo?$AAo?$AAk?$AAi?$AAe?$AA?5@ DB 'i'
	DB	00H, 'd', 00H, 'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'd', 00H
	DB	'w', 00H, 'C', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 'i', 00H, 'e'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'i', 00H, 'd', 00H
	DB	'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, '(', 00H, 'D', 00H, 'W'
	DB	00H, 'O', 00H, 'R', 00H, 'D', 00H, ')', 00H, 'm', 00H, '_', 00H
	DB	'n', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB 'n'
	DB	00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'n', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'm', 00H, '_', 00H, 'n'
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FI@CDNFCAGD@?$AAd?$AAw?$AAC?$AAo?$AAo?$AAk?$AAi?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@
CONST	SEGMENT
??_C@_1FI@CDNFCAGD@?$AAd?$AAw?$AAC?$AAo?$AAo?$AAk?$AAi?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@ DB 'd'
	DB	00H, 'w', 00H, 'C', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 'i', 00H
	DB	'e', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, 'd', 00H, 'w', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'k', 00H, 'i', 00H, 'e', 00H, ' ', 00H, '<'
	DB	00H, '=', 00H, ' ', 00H, '(', 00H, 'D', 00H, 'W', 00H, 'O', 00H
	DB	'R', 00H, 'D', 00H, ')', 00H, 'm', 00H, '_', 00H, 'n', 00H, 'S'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@GFEBMKPP@?$AAp?$AAp?$AAF?$AAi?$AAn?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CK?$AAp?$AAp?$AAF?$AAi@
CONST	SEGMENT
??_C@_1CE@GFEBMKPP@?$AAp?$AAp?$AAF?$AAi?$AAn?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CK?$AAp?$AAp?$AAF?$AAi@ DB 'p'
	DB	00H, 'p', 00H, 'F', 00H, 'i', 00H, 'n', 00H, 'd', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, '*', 00H, 'p', 00H, 'p', 00H, 'F'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IG@BMPHLDAM@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAL?$AA?$CC?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1IG@BMPHLDAM@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAL?$AA?$CC?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5@ DB '0'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'L', 00H, '"', 00H
	DB	'R', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e'
	DB	00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'a', 00H, ' '
	DB	00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'a', 00H, 't', 00H, ' '
	DB	00H, 'h', 00H, 'a', 00H, 's', 00H, ' ', 00H, 'a', 00H, 'l', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'y', 00H, ' ', 00H, 'b'
	DB	00H, 'e', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'r', 00H, 'e', 00H
	DB	'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'd', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@CFNLNIPO@?$AAm?$AA_?$AAd?$AAw?$AAR?$AAe?$AAf?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1?$AAL@
CONST	SEGMENT
??_C@_1BO@CFNLNIPO@?$AAm?$AA_?$AAd?$AAw?$AAR?$AAe?$AAf?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1?$AAL@ DB 'm'
	DB	00H, '_', 00H, 'd', 00H, 'w', 00H, 'R', 00H, 'e', 00H, 'f', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '-', 00H, '1', 00H, 'L'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@MDGGGAPK@?$AAm?$AA_?$AAd?$AAw?$AAR?$AAe?$AAf?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@MDGGGAPK@?$AAm?$AA_?$AAd?$AAw?$AAR?$AAe?$AAf?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'm'
	DB	00H, '_', 00H, 'd', 00H, 'w', 00H, 'R', 00H, 'e', 00H, 'f', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@IINBGKAE@?$AAp?$AAp?$AAv?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BO@IINBGKAE@?$AAp?$AAp?$AAv?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'p', 00H, 'v', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
CONST	SEGMENT
??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'e', 00H
	DB	'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P', 00H, 'O'
	DB	00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H, '\'
	DB	00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H, 't', 00H
	DB	'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, ' ', 00H, 'A', 00H, 't', 00H, 'l', 00H, 'W'
	DB	00H, 'i', 00H, 'n', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'u', 00H
	DB	'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 0aH
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@JJDNGNLN@?$AA?$CB?$AAb?$AAB?$AAl?$AAi?$AAn?$AAd@
CONST	SEGMENT
??_C@_1BA@JJDNGNLN@?$AA?$CB?$AAb?$AAB?$AAl?$AAi?$AAn?$AAd@ DB '!', 00H, 'b'
	DB	00H, 'B', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@KALDMMBC@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?9?$AA?$DO?$AAp?$AAF?$AAu?$AAn?$AAc@
CONST	SEGMENT
??_C@_1GE@KALDMMBC@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?9?$AA?$DO?$AAp?$AAF?$AAu?$AAn?$AAc@ DB 'p'
	DB	00H, 'E', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'e', 00H
	DB	's', 00H, '-', 00H, '>', 00H, 'p', 00H, 'F', 00H, 'u', 00H, 'n'
	DB	00H, 'c', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '(', 00H
	DB	'(', 00H, 'A', 00H, 'T', 00H, 'L', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'A', 00H, 'T', 00H, 'L', 00H, '_', 00H, 'C', 00H, 'R', 00H
	DB	'E', 00H, 'A', 00H, 'T', 00H, 'O', 00H, 'R', 00H, 'A', 00H, 'R'
	DB	00H, 'G', 00H, 'F', 00H, 'U', 00H, 'N', 00H, 'C', 00H, '*', 00H
	DB	')', 00H, '1', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@ENABKMAI@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@ENABKMAI@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'E', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'e', 00H
	DB	's', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@PEGMCOIG@?$AAp?$AAT?$AAh?$AAi?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BG@PEGMCOIG@?$AAp?$AAT?$AAh?$AAi?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'T', 00H, 'h', 00H, 'i', 00H, 's', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT _GUID_b196b284_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT
_GUID_b196b284_bab4_101a_b69c_00aa00341d07 DD 0b196b284H
	DW	0bab4H
	DW	0101aH
	DB	0b6H
	DB	09cH
	DB	00H
	DB	0aaH
	DB	00H
	DB	034H
	DB	01dH
	DB	07H
CONST	ENDS
;	COMDAT ??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, ' ', 00H, 'C', 00H, 'A', 00H, 't', 00H, 'l'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'M', 00H, 'o', 00H, 'd', 00H
	DB	'u', 00H, 'l', 00H, 'e', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.28.29333\atlmfc\include\atlbase.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
CONST	SEGMENT
??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@ DB '_'
	DB	00H, '_', 00H, 'a', 00H, 't', 00H, 'l', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1OG@DEDHKNLM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OG@DEDHKNLM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'e', 00H, 'x', 00H, 'c', 00H, 'e', 00H, 'p', 00H
	DB	't', 00H, '.', 00H, 'h', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe@
CONST	SEGMENT
??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe@ DB 'f', 00H, 'a', 00H, 'l', 00H
	DB	's', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5@
CONST	SEGMENT
??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5@ DB 'A'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'h', 00H, 'r', 00H, 'o', 00H
	DB	'w', 00H, ':', 00H, ' ', 00H, 'h', 00H, 'r', 00H, ' ', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'x', 00H, 0aH, 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0HD@ECNMIKGK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HD@ECNMIKGK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.28.29333\atlmfc\include\atlexcept.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OE@DGDFBHKA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@DGDFBHKA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H
	DB	's', 00H, '%', 00H, 'l', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'u', 00H, ' '
	DB	00H, '-', 00H, ' ', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'l', 00H
	DB	's', 00H, ' ', 00H, '-', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?m_nCategory@CTrace@ATL@@1IA
_DATA	SEGMENT
?m_nCategory@CTrace@ATL@@1IA DD 0ffffffffH		; ATL::CTrace::m_nCategory
_DATA	ENDS
;	COMDAT ??_C@_1OE@EFJOHFCD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@EFJOHFCD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_13COJANIEC@?$AA0@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0@ DB '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SAJPEAPEAV12@@Z DD 021e01H
	DD	07006b20aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAJAEBU_GUID@@PEAPEAX@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ DD 021e01H
	DD	07006b20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ$rtcName$0 DB 06cH ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::Release
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+11
?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ$rtcVarDesc DD 034H ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::Release
	DD	01H
	DQ	FLAT:?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ$rtcName$0
	ORG $+48
?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ$rtcFrameData DD 01H ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::Release
	DD	00H
	DQ	FLAT:?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddRef@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QEAA@PEAX@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@UEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SAPEBU_ATL_INTMAP_ENTRY@2@XZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAAJAEBU_GUID@@PEAPEAX@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Init@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QEAAJPEAUtagCONNECTDATA@@0PEAUIUnknown@@W4CComEnumFlags@2@@Z DD 023001H
	DD	07015d219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z DD 032901H
	DD	0120112H
	DD	0700bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z$rtcName$0 DB 070H ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Clone
	DB	00H
	ORG $+14
?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z$rtcVarDesc DD 048H ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Clone
	DD	08H
	DQ	FLAT:?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z$rtcName$0
	ORG $+48
?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z$rtcFrameData DD 01H ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Clone
	DD	00H
	DQ	FLAT:?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Reset@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Skip@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJK@Z DD 022201H
	DD	0700a120eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Next@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJKPEAUtagCONNECTDATA@@PEAK@Z DD 022c01H
	DD	070149218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAA@XZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__E?pConnMap@?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@0PEBU_ATL_CONNMAP_ENTRY@2@EB@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_CWNCC@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B_CWNCC@@QEAAPEA_WXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_CWNCC@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_CW@@QEAA@XZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B_CW@@QEAAPEB_WXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_CW@@QEAA@PEB_W@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_CW@@QEAA@PEBD@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FireEventCleanup@COPOSVideoCapture@@IEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FireEventSetup@COPOSVideoCapture@@IEAA_NXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EventWindowProc@COPOSVideoCapture@@IEAA_JI_K_J@Z DD 022c01H
	DD	070147218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?s_EventWindowProc@COPOSVideoCapture@@KA_JPEAUHWND__@@I_K_J@Z DD 022c01H
	DD	070145218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EventUninit@COPOSVideoCapture@@IEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EventClose@COPOSVideoCapture@@IEAAXXZ DD 022401H
	DD	07006f20dH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?EventClose@COPOSVideoCapture@@IEAAXXZ$rtcName$0 DB 06dH ; COPOSVideoCapture::EventClose
	DB	073H
	DB	067H
	DB	00H
	ORG $+12
?EventClose@COPOSVideoCapture@@IEAAXXZ$rtcVarDesc DD 038H ; COPOSVideoCapture::EventClose
	DD	030H
	DQ	FLAT:?EventClose@COPOSVideoCapture@@IEAAXXZ$rtcName$0
	ORG $+48
?EventClose@COPOSVideoCapture@@IEAAXXZ$rtcFrameData DD 01H ; COPOSVideoCapture::EventClose
	DD	00H
	DQ	FLAT:?EventClose@COPOSVideoCapture@@IEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EventPreCloseRelease@COPOSVideoCapture@@IEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EventClaim@COPOSVideoCapture@@IEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EventOpen@COPOSVideoCapture@@IEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EventInit@COPOSVideoCapture@@IEAAJXZ DD 032401H
	DD	01c010dH
	DD	07006H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?EventInit@COPOSVideoCapture@@IEAAJXZ$rtcName$0 DB 057H	; COPOSVideoCapture::EventInit
	DB	06eH
	DB	064H
	DB	043H
	DB	06cH
	DB	061H
	DB	073H
	DB	073H
	DB	00H
	ORG $+7
?EventInit@COPOSVideoCapture@@IEAAJXZ$rtcVarDesc DD 070H ; COPOSVideoCapture::EventInit
	DD	048H
	DQ	FLAT:?EventInit@COPOSVideoCapture@@IEAAJXZ$rtcName$0
	ORG $+48
?EventInit@COPOSVideoCapture@@IEAAJXZ$rtcFrameData DD 01H ; COPOSVideoCapture::EventInit
	DD	00H
	DQ	FLAT:?EventInit@COPOSVideoCapture@@IEAAJXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetRC@COPOSVideoCapture@@IEAAJJ@Z DD 010a01H
	DD	0700aH
xdata	ENDS
CONST	SEGMENT
	ORG $+2
??1COPOSVideoCapture@@UEAA@XZ$rtcName$0 DB 052H		; COPOSVideoCapture::~COPOSVideoCapture
	DB	043H
	DB	00H
	ORG $+1
??1COPOSVideoCapture@@UEAA@XZ$rtcFrameData DD 01H	; COPOSVideoCapture::~COPOSVideoCapture
	DD	00H
	DQ	FLAT:??1COPOSVideoCapture@@UEAA@XZ$rtcVarDesc
?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ$rtcName$0 DB 06dH ; COPOSVideoCapture::WriteTrace
	DB	061H
	DB	072H
	DB	06bH
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
??1COPOSVideoCapture@@UEAA@XZ$rtcVarDesc DD 024H	; COPOSVideoCapture::~COPOSVideoCapture
	DD	04H
	DQ	FLAT:??1COPOSVideoCapture@@UEAA@XZ$rtcName$0
	ORG $+48
?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ$rtcVarDesc DD 038H ; COPOSVideoCapture::WriteTrace
	DD	08H
	DQ	FLAT:?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ$rtcName$0
	ORG $+48
?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ$rtcFrameData DD 01H ; COPOSVideoCapture::WriteTrace
	DD	00H
	DQ	FLAT:?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ$rtcVarDesc
?WriteTraceString@COPOSVideoCapture@@QEAAXPEAXHHHPEB_WZZ$rtcName$0 DB 073H ; COPOSVideoCapture::WriteTraceString
	DB	07aH
	DB	042H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+3
?WriteTraceString@COPOSVideoCapture@@QEAAXPEAXHHHPEB_WZZ$rtcName$1 DB 076H ; COPOSVideoCapture::WriteTraceString
	DB	061H
	DB	00H
	ORG $+1
?WriteTraceString@COPOSVideoCapture@@QEAAXPEAXHHHPEB_WZZ$rtcVarDesc DD 0138H ; COPOSVideoCapture::WriteTraceString
	DD	08H
	DQ	FLAT:?WriteTraceString@COPOSVideoCapture@@QEAAXPEAXHHHPEB_WZZ$rtcName$1
	DD	040H
	DD	0dcH
	DQ	FLAT:?WriteTraceString@COPOSVideoCapture@@QEAAXPEAXHHHPEB_WZZ$rtcName$0
	ORG $+96
?WriteTraceString@COPOSVideoCapture@@QEAAXPEAXHHHPEB_WZZ$rtcFrameData DD 02H ; COPOSVideoCapture::WriteTraceString
	DD	00H
	DQ	FLAT:?WriteTraceString@COPOSVideoCapture@@QEAAXPEAXHHHPEB_WZZ$rtcVarDesc
?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z$rtcName$0 DB 070H ; COPOSVideoCapture::WriteTraceError
	DB	04dH
	DB	073H
	DB	067H
	DB	042H
	DB	075H
	DB	066H
	DB	00H
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z$rtcName$0 DB 068H ; COPOSVideoCapture::GetOposProp
	DB	052H
	DB	043H
	DB	00H
	ORG $+4
?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z$rtcVarDesc DD 048H ; COPOSVideoCapture::WriteTraceError
	DD	08H
	DQ	FLAT:?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z$rtcName$0
	ORG $+48
?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z$rtcFrameData DD 01H ; COPOSVideoCapture::WriteTraceError
	DD	00H
	DQ	FLAT:?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z$rtcVarDesc
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z$rtcName$1 DB 056H ; COPOSVideoCapture::GetOposProp
	DB	061H
	DB	072H
	DB	00H
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z$rtcName$0 DB 068H ; COPOSVideoCapture::GetOposProp
	DB	052H
	DB	043H
	DB	00H
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z$rtcName$2 DB 056H ; COPOSVideoCapture::GetOposProp
	DB	061H
	DB	072H
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+2
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z$rtcName$3 DB 044H ; COPOSVideoCapture::GetOposProp
	DB	069H
	DB	073H
	DB	070H
	DB	00H
	ORG $+3
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z$rtcName$4 DB 073H ; COPOSVideoCapture::GetOposProp
	DB	07aH
	DB	048H
	DB	052H
	DB	00H
	ORG $+7
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z$rtcFrameData DD 05H ; COPOSVideoCapture::GetOposProp
	DD	00H
	DQ	FLAT:?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z$rtcVarDesc
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z$rtcName$0 DB 056H ; COPOSVideoCapture::SetOposProp
	DB	061H
	DB	072H
	DB	073H
	DB	00H
	ORG $+3
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z$rtcVarDesc DD 0130H ; COPOSVideoCapture::GetOposProp
	DD	064H
	DQ	FLAT:?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z$rtcName$4
	DD	0f8H
	DD	018H
	DQ	FLAT:?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z$rtcName$3
	DD	0b8H
	DD	020H
	DQ	FLAT:?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z$rtcName$2
	DD	078H
	DD	020H
	DQ	FLAT:?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z$rtcName$1
	DD	054H
	DD	04H
	DQ	FLAT:?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z$rtcName$0
	ORG $+240
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z$rtcName$1 DB 056H ; COPOSVideoCapture::SetOposProp
	DB	061H
	DB	072H
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+2
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z$rtcName$2 DB 044H ; COPOSVideoCapture::SetOposProp
	DB	069H
	DB	073H
	DB	070H
	DB	00H
	ORG $+3
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z$rtcName$3 DB 073H ; COPOSVideoCapture::SetOposProp
	DB	07aH
	DB	048H
	DB	052H
	DB	00H
	ORG $+7
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z$rtcVarDesc DD 0140H ; COPOSVideoCapture::SetOposProp
	DD	064H
	DQ	FLAT:?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z$rtcName$3
	DD	0108H
	DD	018H
	DQ	FLAT:?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z$rtcName$2
	DD	0c8H
	DD	020H
	DQ	FLAT:?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z$rtcName$1
	DD	070H
	DD	040H
	DQ	FLAT:?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z$rtcName$0
	ORG $+192
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z$rtcFrameData DD 04H ; COPOSVideoCapture::SetOposProp
	DD	00H
	DQ	FLAT:?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z$rtcVarDesc
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z$rtcName$0 DB 06eH ; COPOSVideoCapture::GetOposProp
	DB	056H
	DB	061H
	DB	06cH
	DB	075H
	DB	065H
	DB	00H
	ORG $+1
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z$rtcFrameData DD 01H ; COPOSVideoCapture::GetOposProp
	DD	00H
	DQ	FLAT:?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z$rtcVarDesc
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z$rtcName$1 DB 056H ; COPOSVideoCapture::GetOposProp
	DB	061H
	DB	072H
	DB	00H
	ORG $+4
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z$rtcVarDesc DD 034H ; COPOSVideoCapture::GetOposProp
	DD	04H
	DQ	FLAT:?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z$rtcName$0
	ORG $+48
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z$rtcName$2 DB 056H ; COPOSVideoCapture::GetOposProp
	DB	061H
	DB	072H
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+2
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z$rtcName$3 DB 044H ; COPOSVideoCapture::GetOposProp
	DB	069H
	DB	073H
	DB	070H
	DB	00H
	ORG $+3
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z$rtcName$1 DB 068H ; COPOSVideoCapture::SetOposProp
	DB	052H
	DB	043H
	DB	00H
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z$rtcName$4 DB 073H ; COPOSVideoCapture::GetOposProp
	DB	07aH
	DB	050H
	DB	072H
	DB	065H
	DB	066H
	DB	069H
	DB	078H
	DB	00H
	ORG $+7
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z$rtcFrameData DD 05H ; COPOSVideoCapture::GetOposProp
	DD	00H
	DQ	FLAT:?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z$rtcVarDesc
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z$rtcName$2 DB 056H ; COPOSVideoCapture::SetOposProp
	DB	061H
	DB	072H
	DB	073H
	DB	00H
	ORG $+3
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z$rtcVarDesc DD 0130H ; COPOSVideoCapture::GetOposProp
	DD	0c8H
	DQ	FLAT:?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z$rtcName$4
	DD	0f8H
	DD	018H
	DQ	FLAT:?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z$rtcName$3
	DD	0b8H
	DD	020H
	DQ	FLAT:?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z$rtcName$2
	DD	078H
	DD	020H
	DQ	FLAT:?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z$rtcName$1
	DD	054H
	DD	04H
	DQ	FLAT:?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z$rtcName$0
	ORG $+240
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z$rtcName$0 DB 073H ; COPOSVideoCapture::SetOposProp
	DB	07aH
	DB	050H
	DB	072H
	DB	065H
	DB	066H
	DB	069H
	DB	078H
	DB	00H
	ORG $+3
?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z$rtcName$2 DB 068H ; COPOSVideoCapture::DoInvoke
	DB	052H
	DB	043H
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+1
?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z$rtcName$0 DB 056H ; COPOSVideoCapture::SetCOFreezeEvents
	DB	061H
	DB	072H
	DB	00H
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z$rtcName$3 DB 056H ; COPOSVideoCapture::SetOposProp
	DB	061H
	DB	072H
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+2
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z$rtcName$4 DB 044H ; COPOSVideoCapture::SetOposProp
	DB	069H
	DB	073H
	DB	070H
	DB	00H
	ORG $+3
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z$rtcName$5 DB 073H ; COPOSVideoCapture::SetOposProp
	DB	07aH
	DB	048H
	DB	052H
	DB	00H
	ORG $+7
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z$rtcFrameData DD 06H ; COPOSVideoCapture::SetOposProp
	DD	00H
	DQ	FLAT:?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z$rtcVarDesc
?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z$rtcName$4 DB 044H ; COPOSVideoCapture::DoInvoke
	DB	069H
	DB	073H
	DB	070H
	DB	00H
	ORG $+3
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z$rtcVarDesc DD 0240H ; COPOSVideoCapture::SetOposProp
	DD	064H
	DQ	FLAT:?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z$rtcName$5
	DD	0208H
	DD	018H
	DQ	FLAT:?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z$rtcName$4
	DD	01c8H
	DD	020H
	DQ	FLAT:?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z$rtcName$3
	DD	0170H
	DD	040H
	DQ	FLAT:?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z$rtcName$2
	DD	0144H
	DD	04H
	DQ	FLAT:?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z$rtcName$1
	DD	060H
	DD	0c8H
	DQ	FLAT:?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z$rtcName$0
	ORG $+288
?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z$rtcName$0 DB 073H ; COPOSVideoCapture::DoInvoke
	DB	07aH
	DB	050H
	DB	061H
	DB	072H
	DB	06dH
	DB	04eH
	DB	075H
	DB	06dH
	DB	00H
	ORG $+2
?OnDraw@COPOSVideoCapture@@MEAAJAEAUATL_DRAWINFO@@@Z$rtcName$0 DB 062H ; COPOSVideoCapture::OnDraw
	DB	06dH
	DB	070H
	DB	00H
?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z$rtcName$1 DB 073H ; COPOSVideoCapture::DoInvoke
	DB	07aH
	DB	050H
	DB	072H
	DB	065H
	DB	066H
	DB	069H
	DB	078H
	DB	00H
	ORG $+3
?CheckHealth@COPOSVideoCapture@@UEAAJJPEAJ@Z$rtcName$0 DB 056H ; COPOSVideoCapture::CheckHealth
	DB	061H
	DB	072H
	DB	00H
?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z$rtcName$3 DB 056H ; COPOSVideoCapture::DoInvoke
	DB	061H
	DB	072H
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+2
?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z$rtcName$5 DB 073H ; COPOSVideoCapture::DoInvoke
	DB	07aH
	DB	048H
	DB	052H
	DB	00H
	ORG $+7
?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z$rtcFrameData DD 06H ; COPOSVideoCapture::DoInvoke
	DD	00H
	DQ	FLAT:?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z$rtcVarDesc
?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z$rtcName$2 DB 044H ; COPOSVideoCapture::SetCOFreezeEvents
	DB	069H
	DB	073H
	DB	070H
	DB	00H
	ORG $+3
?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z$rtcVarDesc DD 0240H ; COPOSVideoCapture::DoInvoke
	DD	064H
	DQ	FLAT:?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z$rtcName$5
	DD	0208H
	DD	018H
	DQ	FLAT:?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z$rtcName$4
	DD	01c8H
	DD	020H
	DQ	FLAT:?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z$rtcName$3
	DD	01a4H
	DD	04H
	DQ	FLAT:?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z$rtcName$2
	DD	0b0H
	DD	0c8H
	DQ	FLAT:?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z$rtcName$1
	DD	068H
	DD	028H
	DQ	FLAT:?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z$rtcName$0
	ORG $+288
?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z$rtcName$1 DB 056H ; COPOSVideoCapture::SetCOFreezeEvents
	DB	061H
	DB	072H
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+6
?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z$rtcVarDesc DD 0d8H ; COPOSVideoCapture::SetCOFreezeEvents
	DD	018H
	DQ	FLAT:?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z$rtcName$2
	DD	098H
	DD	020H
	DQ	FLAT:?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z$rtcName$1
	DD	058H
	DD	020H
	DQ	FLAT:?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z$rtcName$0
	ORG $+144
?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z$rtcFrameData DD 03H ; COPOSVideoCapture::SetCOFreezeEvents
	DD	00H
	DQ	FLAT:?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z$rtcVarDesc
?OnDraw@COPOSVideoCapture@@MEAAJAEAUATL_DRAWINFO@@@Z$rtcVarDesc DD 068H ; COPOSVideoCapture::OnDraw
	DD	020H
	DQ	FLAT:?OnDraw@COPOSVideoCapture@@MEAAJAEAUATL_DRAWINFO@@@Z$rtcName$0
	ORG $+48
?OnDraw@COPOSVideoCapture@@MEAAJAEAUATL_DRAWINFO@@@Z$rtcFrameData DD 01H ; COPOSVideoCapture::OnDraw
	DD	00H
	DQ	FLAT:?OnDraw@COPOSVideoCapture@@MEAAJAEAUATL_DRAWINFO@@@Z$rtcVarDesc
?CheckHealth@COPOSVideoCapture@@UEAAJJPEAJ@Z$rtcVarDesc DD 048H ; COPOSVideoCapture::CheckHealth
	DD	020H
	DQ	FLAT:?CheckHealth@COPOSVideoCapture@@UEAAJJPEAJ@Z$rtcName$0
	ORG $+48
?CheckHealth@COPOSVideoCapture@@UEAAJJPEAJ@Z$rtcFrameData DD 01H ; COPOSVideoCapture::CheckHealth
	DD	00H
	DQ	FLAT:?CheckHealth@COPOSVideoCapture@@UEAAJJPEAJ@Z$rtcVarDesc
?ClaimDevice@COPOSVideoCapture@@UEAAJJPEAJ@Z$rtcName$0 DB 056H ; COPOSVideoCapture::ClaimDevice
	DB	061H
	DB	072H
	DB	00H
?DirectIO@COPOSVideoCapture@@UEAAJJPEAJPEAPEA_W0@Z$rtcName$0 DB 056H ; COPOSVideoCapture::DirectIO
	DB	061H
	DB	072H
	DB	073H
	DB	00H
	ORG $+7
?ClaimDevice@COPOSVideoCapture@@UEAAJJPEAJ@Z$rtcVarDesc DD 048H ; COPOSVideoCapture::ClaimDevice
	DD	020H
	DQ	FLAT:?ClaimDevice@COPOSVideoCapture@@UEAAJJPEAJ@Z$rtcName$0
	ORG $+48
?ClaimDevice@COPOSVideoCapture@@UEAAJJPEAJ@Z$rtcFrameData DD 01H ; COPOSVideoCapture::ClaimDevice
	DD	00H
	DQ	FLAT:?ClaimDevice@COPOSVideoCapture@@UEAAJJPEAJ@Z$rtcVarDesc
?DirectIO@COPOSVideoCapture@@UEAAJJPEAJPEAPEA_W0@Z$rtcName$1 DB 068H ; COPOSVideoCapture::DirectIO
	DB	052H
	DB	043H
	DB	00H
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$0 DB 068H ; COPOSVideoCapture::Open
	DB	052H
	DB	043H
	DB	00H
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$3 DB 073H ; COPOSVideoCapture::Open
	DB	07aH
	DB	050H
	DB	068H
	DB	079H
	DB	073H
	DB	069H
	DB	063H
	DB	061H
	DB	06cH
	DB	044H
	DB	065H
	DB	076H
	DB	069H
	DB	063H
	DB	065H
	DB	04eH
	DB	061H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+3
?DirectIO@COPOSVideoCapture@@UEAAJJPEAJPEAPEA_W0@Z$rtcVarDesc DD 0c4H ; COPOSVideoCapture::DirectIO
	DD	04H
	DQ	FLAT:?DirectIO@COPOSVideoCapture@@UEAAJJPEAJPEAPEA_W0@Z$rtcName$1
	DD	050H
	DD	060H
	DQ	FLAT:?DirectIO@COPOSVideoCapture@@UEAAJJPEAJPEAPEA_W0@Z$rtcName$0
	ORG $+96
?DirectIO@COPOSVideoCapture@@UEAAJJPEAJPEAPEA_W0@Z$rtcFrameData DD 02H ; COPOSVideoCapture::DirectIO
	DD	00H
	DQ	FLAT:?DirectIO@COPOSVideoCapture@@UEAAJJPEAJPEAPEA_W0@Z$rtcVarDesc
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$1 DB 073H ; COPOSVideoCapture::Open
	DB	07aH
	DB	042H
	DB	061H
	DB	073H
	DB	065H
	DB	04bH
	DB	065H
	DB	079H
	DB	00H
	ORG $+2
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$4 DB 064H ; COPOSVideoCapture::Open
	DB	077H
	DB	054H
	DB	079H
	DB	070H
	DB	065H
	DB	00H
	ORG $+1
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$10 DB 04dH ; COPOSVideoCapture::Open
	DB	04eH
	DB	00H
	ORG $+1
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$2 DB 068H ; COPOSVideoCapture::Open
	DB	042H
	DB	061H
	DB	073H
	DB	065H
	DB	04bH
	DB	065H
	DB	079H
	DB	00H
	ORG $+3
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$5 DB 064H ; COPOSVideoCapture::Open
	DB	077H
	DB	053H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+1
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$11 DB 070H ; COPOSVideoCapture::Open
	DB	04dH
	DB	04eH
	DB	00H
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$6 DB 068H ; COPOSVideoCapture::Open
	DB	053H
	DB	065H
	DB	072H
	DB	076H
	DB	069H
	DB	063H
	DB	065H
	DB	04bH
	DB	065H
	DB	079H
	DB	00H
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$12 DB 04dH ; COPOSVideoCapture::Open
	DB	04eH
	DB	00H
	ORG $+1
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$7 DB 073H ; COPOSVideoCapture::Open
	DB	053H
	DB	04fH
	DB	050H
	DB	072H
	DB	06fH
	DB	067H
	DB	049H
	DB	044H
	DB	00H
	ORG $+2
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$13 DB 070H ; COPOSVideoCapture::Open
	DB	04dH
	DB	04eH
	DB	00H
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$8 DB 053H ; COPOSVideoCapture::Open
	DB	04fH
	DB	043H
	DB	06cH
	DB	061H
	DB	073H
	DB	073H
	DB	049H
	DB	044H
	DB	00H
	ORG $+2
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$16 DB 070H ; COPOSVideoCapture::Open
	DB	04dH
	DB	04eH
	DB	00H
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$9 DB 070H ; COPOSVideoCapture::Open
	DB	055H
	DB	06eH
	DB	06bH
	DB	06eH
	DB	06fH
	DB	077H
	DB	06eH
	DB	00H
	ORG $+3
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$17 DB 044H ; COPOSVideoCapture::Open
	DB	069H
	DB	073H
	DB	070H
	DB	049H
	DB	044H
	DB	00H
	ORG $+1
?ResetStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$0 DB 056H ; COPOSVideoCapture::ResetStatistics
	DB	061H
	DB	072H
	DB	00H
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$14 DB 070H ; COPOSVideoCapture::Open
	DB	044H
	DB	069H
	DB	073H
	DB	070H
	DB	061H
	DB	074H
	DB	063H
	DB	068H
	DB	00H
	ORG $+2
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$15 DB 056H ; COPOSVideoCapture::Open
	DB	061H
	DB	072H
	DB	073H
	DB	00H
	ORG $+3
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$20 DB 068H ; COPOSVideoCapture::Open
	DB	052H
	DB	043H
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+1
?ResetStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$1 DB 068H ; COPOSVideoCapture::ResetStatistics
	DB	052H
	DB	043H
	DB	00H
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$18 DB 056H ; COPOSVideoCapture::Open
	DB	061H
	DB	072H
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+2
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$19 DB 044H ; COPOSVideoCapture::Open
	DB	069H
	DB	073H
	DB	070H
	DB	00H
	ORG $+3
?RetrieveStatistics@COPOSVideoCapture@@UEAAJPEAPEA_WPEAJ@Z$rtcName$0 DB 056H ; COPOSVideoCapture::RetrieveStatistics
	DB	061H
	DB	072H
	DB	00H
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$21 DB 062H ; COPOSVideoCapture::Open
	DB	073H
	DB	074H
	DB	072H
	DB	053H
	DB	04fH
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+1
?RetrieveStatistics@COPOSVideoCapture@@UEAAJPEAPEA_WPEAJ@Z$rtcName$1 DB 068H ; COPOSVideoCapture::RetrieveStatistics
	DB	052H
	DB	043H
	DB	00H
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$22 DB 06eH ; COPOSVideoCapture::Open
	DB	053H
	DB	04fH
	DB	056H
	DB	065H
	DB	072H
	DB	073H
	DB	069H
	DB	06fH
	DB	06eH
	DB	00H
	ORG $+5
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcVarDesc DD 09f4H ; COPOSVideoCapture::Open
	DD	04H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$22
	DD	09d8H
	DD	08H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$21
	DD	09b4H
	DD	04H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$20
	DD	0988H
	DD	018H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$19
	DD	0948H
	DD	020H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$18
	DD	0924H
	DD	04H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$17
	DD	0908H
	DD	08H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$16
	DD	0890H
	DD	060H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$15
	DD	0868H
	DD	08H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$14
	DD	0848H
	DD	08H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$13
	DD	0808H
	DD	020H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$12
	DD	07e8H
	DD	08H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$11
	DD	07a8H
	DD	020H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$10
	DD	0788H
	DD	08H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$9
	DD	0758H
	DD	010H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$8
	DD	0540H
	DD	0200H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$7
	DD	0518H
	DD	08H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$6
	DD	04f4H
	DD	04H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$5
	DD	04d4H
	DD	04H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$4
	DD	02c0H
	DD	0200H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$3
	DD	0298H
	DD	08H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$2
	DD	080H
	DD	0200H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$1
	DD	054H
	DD	04H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$0
	ORG $+1104
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcFrameData DD 017H ; COPOSVideoCapture::Open
	DD	00H
	DQ	FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcVarDesc
?ResetStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcVarDesc DD 084H ; COPOSVideoCapture::ResetStatistics
	DD	04H
	DQ	FLAT:?ResetStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$1
	DD	048H
	DD	020H
	DQ	FLAT:?ResetStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$0
	ORG $+96
?ResetStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcFrameData DD 02H ; COPOSVideoCapture::ResetStatistics
	DD	00H
	DQ	FLAT:?ResetStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcVarDesc
?RetrieveStatistics@COPOSVideoCapture@@UEAAJPEAPEA_WPEAJ@Z$rtcVarDesc DD 084H ; COPOSVideoCapture::RetrieveStatistics
	DD	04H
	DQ	FLAT:?RetrieveStatistics@COPOSVideoCapture@@UEAAJPEAPEA_WPEAJ@Z$rtcName$1
	DD	048H
	DD	020H
	DQ	FLAT:?RetrieveStatistics@COPOSVideoCapture@@UEAAJPEAPEA_WPEAJ@Z$rtcName$0
	ORG $+96
?RetrieveStatistics@COPOSVideoCapture@@UEAAJPEAPEA_WPEAJ@Z$rtcFrameData DD 02H ; COPOSVideoCapture::RetrieveStatistics
	DD	00H
	DQ	FLAT:?RetrieveStatistics@COPOSVideoCapture@@UEAAJPEAPEA_WPEAJ@Z$rtcVarDesc
?UpdateStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$0 DB 056H ; COPOSVideoCapture::UpdateStatistics
	DB	061H
	DB	072H
	DB	00H
?UpdateStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$1 DB 068H ; COPOSVideoCapture::UpdateStatistics
	DB	052H
	DB	043H
	DB	00H
?CompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEA_WPEAJ1@Z$rtcName$0 DB 056H ; COPOSVideoCapture::CompareFirmwareVersion
	DB	061H
	DB	072H
	DB	073H
	DB	00H
	ORG $+3
?UpdateStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcVarDesc DD 084H ; COPOSVideoCapture::UpdateStatistics
	DD	04H
	DQ	FLAT:?UpdateStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$1
	DD	048H
	DD	020H
	DQ	FLAT:?UpdateStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$0
	ORG $+96
?UpdateStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcFrameData DD 02H ; COPOSVideoCapture::UpdateStatistics
	DD	00H
	DQ	FLAT:?UpdateStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcVarDesc
?CompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEA_WPEAJ1@Z$rtcName$1 DB 068H ; COPOSVideoCapture::CompareFirmwareVersion
	DB	052H
	DB	043H
	DB	00H
?UpdateFirmware@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$0 DB 056H ; COPOSVideoCapture::UpdateFirmware
	DB	061H
	DB	072H
	DB	00H
?UpdateFirmware@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$1 DB 068H ; COPOSVideoCapture::UpdateFirmware
	DB	052H
	DB	043H
	DB	00H
	ORG $+4
?CompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEA_WPEAJ1@Z$rtcVarDesc DD 0a4H ; COPOSVideoCapture::CompareFirmwareVersion
	DD	04H
	DQ	FLAT:?CompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEA_WPEAJ1@Z$rtcName$1
	DD	050H
	DD	040H
	DQ	FLAT:?CompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEA_WPEAJ1@Z$rtcName$0
	ORG $+96
?CompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEA_WPEAJ1@Z$rtcFrameData DD 02H ; COPOSVideoCapture::CompareFirmwareVersion
	DD	00H
	DQ	FLAT:?CompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEA_WPEAJ1@Z$rtcVarDesc
?UpdateFirmware@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcVarDesc DD 084H ; COPOSVideoCapture::UpdateFirmware
	DD	04H
	DQ	FLAT:?UpdateFirmware@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$1
	DD	048H
	DD	020H
	DQ	FLAT:?UpdateFirmware@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcName$0
	ORG $+96
?UpdateFirmware@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcFrameData DD 02H ; COPOSVideoCapture::UpdateFirmware
	DD	00H
	DQ	FLAT:?UpdateFirmware@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcVarDesc
?StartVideo@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z$rtcName$0 DB 056H ; COPOSVideoCapture::StartVideo
	DB	061H
	DB	072H
	DB	073H
	DB	00H
	ORG $+3
?StartVideo@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z$rtcName$1 DB 068H ; COPOSVideoCapture::StartVideo
	DB	052H
	DB	043H
	DB	00H
	ORG $+4
?StartVideo@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z$rtcVarDesc DD 0c4H ; COPOSVideoCapture::StartVideo
	DD	04H
	DQ	FLAT:?StartVideo@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z$rtcName$1
	DD	050H
	DD	060H
	DQ	FLAT:?StartVideo@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z$rtcName$0
	ORG $+96
?StartVideo@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z$rtcFrameData DD 02H ; COPOSVideoCapture::StartVideo
	DD	00H
	DQ	FLAT:?StartVideo@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z$rtcVarDesc
?TakePhoto@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z$rtcName$0 DB 056H ; COPOSVideoCapture::TakePhoto
	DB	061H
	DB	072H
	DB	073H
	DB	00H
	ORG $+3
?TakePhoto@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z$rtcName$1 DB 068H ; COPOSVideoCapture::TakePhoto
	DB	052H
	DB	043H
	DB	00H
	ORG $+4
?TakePhoto@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z$rtcVarDesc DD 0c4H ; COPOSVideoCapture::TakePhoto
	DD	04H
	DQ	FLAT:?TakePhoto@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z$rtcName$1
	DD	050H
	DD	060H
	DQ	FLAT:?TakePhoto@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z$rtcName$0
	ORG $+96
?TakePhoto@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z$rtcFrameData DD 02H ; COPOSVideoCapture::TakePhoto
	DD	00H
	DQ	FLAT:?TakePhoto@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z$rtcVarDesc
CONST	ENDS
xdata	SEGMENT
$unwind$??0COPOSVideoCapture@@QEAA@XZ DD 021e01H
	DD	07006320aH
$unwind$?FinalConstruct@COPOSVideoCapture@@QEAAJXZ DD 021e01H
	DD	07006520aH
$unwind$??1COPOSVideoCapture@@UEAA@XZ DD 021e01H
	DD	07006720aH
$unwind$?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ DD 022d01H
	DD	070159219H
$unwind$?WriteTraceString@COPOSVideoCapture@@QEAAXPEB_WPEA_W@Z DD 022e01H
	DD	07010f217H
$unwind$?WriteTraceString@COPOSVideoCapture@@QEAAXPEAXHHHPEB_WZZ DD 034519H
	DD	030011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck
	DD	0170H
$unwind$?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z DD 022801H
	DD	07010b214H
$unwind$?WriteTraceMethods@COPOSVideoCapture@@QEAAXPEAJH@Z DD 022801H
	DD	070105214H
$unwind$?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z DD 034519H
	DD	03a011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck
	DD	01c8H
$unwind$?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z DD 034519H
	DD	03c011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck
	DD	01d8H
$unwind$?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z DD 022d01H
	DD	070159219H
$unwind$?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJFJ@Z DD 022e01H
	DD	07016721aH
$unwind$?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z DD 034519H
	DD	046011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck
	DD	0228H
$unwind$?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z DD 034519H
	DD	05e011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck
	DD	02e0H
$unwind$?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z DD 034519H
	DD	06c011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck
	DD	0358H
$unwind$?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z DD 032901H
	DD	0220112H
	DD	0700bH
$unwind$?FreezeEvents@COPOSVideoCapture@@MEAAJH@Z DD 022201H
	DD	0700a320eH
$unwind$?OnDraw@COPOSVideoCapture@@MEAAJAEAUATL_DRAWINFO@@@Z DD 032901H
	DD	0160112H
	DD	0700bH
$unwind$?SOProcessID@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b320fH
$unwind$?get_OpenResult@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b320fH
$unwind$?get_BinaryConversion@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?put_BinaryConversion@COPOSVideoCapture@@UEAAJJ@Z DD 022201H
	DD	0700a520eH
$unwind$?get_CapPowerReporting@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CheckHealthText@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?get_Claimed@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_DeviceEnabled@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?put_DeviceEnabled@COPOSVideoCapture@@UEAAJF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_FreezeEvents@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?put_FreezeEvents@COPOSVideoCapture@@UEAAJF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_PowerNotify@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?put_PowerNotify@COPOSVideoCapture@@UEAAJJ@Z DD 022201H
	DD	0700a520eH
$unwind$?get_PowerState@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?get_ResultCode@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?get_ResultCodeExtended@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?get_State@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?get_ControlObjectDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b720fH
$unwind$?get_ControlObjectVersion@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b320fH
$unwind$?get_ServiceObjectDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?get_ServiceObjectVersion@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?get_DeviceDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?get_DeviceName@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapStatisticsReporting@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapUpdateStatistics@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapCompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapUpdateFirmware@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?CheckHealth@COPOSVideoCapture@@UEAAJJPEAJ@Z DD 022d01H
	DD	0700ff216H
$unwind$?ClaimDevice@COPOSVideoCapture@@UEAAJJPEAJ@Z DD 022d01H
	DD	0700ff216H
$unwind$?ClearInput@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b720fH
$unwind$?Close@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b920fH
$unwind$?DirectIO@COPOSVideoCapture@@UEAAJJPEAJPEAPEA_W0@Z DD 034419H
	DD	01e011bH
	DD	07014H
	DD	imagerel __GSHandlerCheck
	DD	0e8H
$unwind$?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z DD 034019H
	DD	01620117H
	DD	07010H
	DD	imagerel __GSHandlerCheck
	DD	0b08H
$unwind$?ReleaseDevice@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b720fH
$unwind$?ResetStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z DD 032e01H
	DD	0140117H
	DD	07010H
$unwind$?RetrieveStatistics@COPOSVideoCapture@@UEAAJPEAPEA_WPEAJ@Z DD 032e01H
	DD	0140117H
	DD	07010H
$unwind$?UpdateStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z DD 032e01H
	DD	0140117H
	DD	07010H
$unwind$?CompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEA_WPEAJ1@Z DD 033301H
	DD	018011cH
	DD	07015H
$unwind$?UpdateFirmware@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z DD 032e01H
	DD	0140117H
	DD	07010H
$unwind$?get_AutoExposure@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?put_AutoExposure@COPOSVideoCapture@@UEAAJF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_AutoFocus@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?put_AutoFocus@COPOSVideoCapture@@UEAAJF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_AutoGain@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?put_AutoGain@COPOSVideoCapture@@UEAAJF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_AutoWhiteBalance@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?put_AutoWhiteBalance@COPOSVideoCapture@@UEAAJF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_Brightness@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?put_Brightness@COPOSVideoCapture@@UEAAJJ@Z DD 022201H
	DD	0700a520eH
$unwind$?get_CapAssociatedHardTotalsDevice@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapAutoExposure@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapAutoFocus@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapAutoGain@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapAutoWhiteBalance@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapBrightness@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapContrast@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapExposure@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapGain@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapHorizontalFlip@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapHue@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapPhoto@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapPhotoColorSpace@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapPhotoFrameRate@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapPhotoResolution@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapPhotoType@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapSaturation@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapStorage@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapVerticalFlip@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapVideo@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapVideoColorSpace@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapVideoFrameRate@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapVideoResolution@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_CapVideoType@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_Contrast@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?put_Contrast@COPOSVideoCapture@@UEAAJJ@Z DD 022201H
	DD	0700a520eH
$unwind$?get_Exposure@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?put_Exposure@COPOSVideoCapture@@UEAAJJ@Z DD 022201H
	DD	0700a520eH
$unwind$?get_Gain@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?put_Gain@COPOSVideoCapture@@UEAAJJ@Z DD 022201H
	DD	0700a520eH
$unwind$?get_HorizontalFlip@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?put_HorizontalFlip@COPOSVideoCapture@@UEAAJF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_Hue@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?put_Hue@COPOSVideoCapture@@UEAAJJ@Z DD 022201H
	DD	0700a520eH
$unwind$?get_PhotoColorSpace@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?put_PhotoColorSpace@COPOSVideoCapture@@UEAAJPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?get_PhotoColorSpaceList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?get_PhotoFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?put_PhotoFrameRate@COPOSVideoCapture@@UEAAJJ@Z DD 022201H
	DD	0700a520eH
$unwind$?get_PhotoMaxFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?get_PhotoResolution@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?put_PhotoResolution@COPOSVideoCapture@@UEAAJPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?get_PhotoResolutionList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?get_PhotoType@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?put_PhotoType@COPOSVideoCapture@@UEAAJPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?get_PhotoTypeList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?get_RemainingRecordingTimeInSec@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?get_Saturation@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?put_Saturation@COPOSVideoCapture@@UEAAJJ@Z DD 022201H
	DD	0700a520eH
$unwind$?get_Storage@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?put_Storage@COPOSVideoCapture@@UEAAJJ@Z DD 022201H
	DD	0700a520eH
$unwind$?get_VerticalFlip@COPOSVideoCapture@@UEAAJPEAF@Z DD 022301H
	DD	0700b520fH
$unwind$?put_VerticalFlip@COPOSVideoCapture@@UEAAJF@Z DD 022301H
	DD	0700b520fH
$unwind$?get_VideoCaptureMode@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?put_VideoCaptureMode@COPOSVideoCapture@@UEAAJJ@Z DD 022201H
	DD	0700a520eH
$unwind$?get_VideoColorSpace@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?put_VideoColorSpace@COPOSVideoCapture@@UEAAJPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?get_VideoColorSpaceList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?get_VideoFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?put_VideoFrameRate@COPOSVideoCapture@@UEAAJJ@Z DD 022201H
	DD	0700a520eH
$unwind$?get_VideoMaxFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b520fH
$unwind$?get_VideoResolution@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?put_VideoResolution@COPOSVideoCapture@@UEAAJPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?get_VideoResolutionList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?get_VideoType@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?put_VideoType@COPOSVideoCapture@@UEAAJPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?get_VideoTypeList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z DD 022301H
	DD	0700b520fH
$unwind$?StartVideo@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z DD 034619H
	DD	01e011dH
	DD	07016H
	DD	imagerel __GSHandlerCheck
	DD	0e8H
$unwind$?StopVideo@COPOSVideoCapture@@UEAAJPEAJ@Z DD 022301H
	DD	0700b720fH
$unwind$?TakePhoto@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z DD 034619H
	DD	01e011dH
	DD	07016H
	DD	imagerel __GSHandlerCheck
	DD	0e8H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z DD 033301H
	DD	016011cH
	DD	07015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z$rtcName$0 DB 044H ; CProxy_IOPOSEvents<COPOSVideoCapture>::FireTheEvent
	DB	069H
	DB	073H
	DB	070H
	DB	050H
	DB	061H
	DB	072H
	DB	06dH
	DB	073H
	DB	00H
	ORG $+2
?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z$rtcName$1 DB 044H ; CProxy_IOPOSEvents<COPOSVideoCapture>::FireTheEvent
	DB	069H
	DB	073H
	DB	070H
	DB	049H
	DB	044H
	DB	00H
	ORG $+13
?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z$rtcVarDesc DD 094H ; CProxy_IOPOSEvents<COPOSVideoCapture>::FireTheEvent
	DD	04H
	DQ	FLAT:?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z$rtcName$1
	DD	068H
	DD	018H
	DQ	FLAT:?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z$rtcName$0
	ORG $+96
?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z$rtcFrameData DD 02H ; CProxy_IOPOSEvents<COPOSVideoCapture>::FireTheEvent
	DD	00H
	DQ	FLAT:?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Unadvise@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@UEAAJK@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Advise@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@UEAAJPEAUIUnknown@@PEAK@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAA@PEAVCOPOSVideoCapture@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJ@Z DD 032801H
	DD	0180111H
	DD	0700aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJ@Z$rtcName$0 DB 076H ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_StatusUpdateEvent
	DB	061H
	DB	072H
	DB	00H
?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJ@Z$rtcName$1 DB 073H ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_StatusUpdateEvent
	DB	070H
	DB	00H
	ORG $+9
?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJ@Z$rtcVarDesc DD 098H ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_StatusUpdateEvent
	DD	08H
	DQ	FLAT:?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJ@Z$rtcName$1
	DD	058H
	DD	020H
	DQ	FLAT:?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJ@Z$rtcName$0
	ORG $+96
?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJ@Z$rtcFrameData DD 02H ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_StatusUpdateEvent
	DD	00H
	DQ	FLAT:?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJ@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z DD 034419H
	DD	02a011bH
	DD	07014H
	DD	imagerel __GSHandlerCheck
	DD	0140H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z$rtcName$0 DB 076H ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_ErrorEvent
	DB	061H
	DB	072H
	DB	073H
	DB	00H
	ORG $+3
?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z$rtcName$1 DB 073H ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_ErrorEvent
	DB	070H
	DB	00H
	ORG $+1
?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z$rtcName$2 DB 068H ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_ErrorEvent
	DB	072H
	DB	00H
	ORG $+1
?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z$rtcVarDesc DD 0114H ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_ErrorEvent
	DD	04H
	DQ	FLAT:?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z$rtcName$2
	DD	0f8H
	DD	08H
	DQ	FLAT:?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z$rtcName$1
	DD	060H
	DD	080H
	DQ	FLAT:?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z$rtcName$0
	ORG $+144
?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z$rtcFrameData DD 03H ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_ErrorEvent
	DD	00H
	DQ	FLAT:?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z DD 034419H
	DD	026011bH
	DD	07014H
	DD	imagerel __GSHandlerCheck
	DD	0120H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z$rtcName$0 DB 076H ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_DirectIOEvent
	DB	061H
	DB	072H
	DB	073H
	DB	00H
	ORG $+3
?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z$rtcName$1 DB 073H ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_DirectIOEvent
	DB	070H
	DB	00H
	ORG $+1
?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z$rtcName$2 DB 068H ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_DirectIOEvent
	DB	072H
	DB	00H
	ORG $+1
?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z$rtcVarDesc DD 0f4H ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_DirectIOEvent
	DD	04H
	DQ	FLAT:?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z$rtcName$2
	DD	0d8H
	DD	08H
	DQ	FLAT:?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z$rtcName$1
	DD	060H
	DD	060H
	DQ	FLAT:?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z$rtcName$0
	ORG $+144
?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z$rtcFrameData DD 03H ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_DirectIOEvent
	DD	00H
	DQ	FLAT:?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EnumConnections@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z DD 032901H
	DD	0160112H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Unadvise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJK@Z DD 022201H
	DD	0700a920eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Advise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAUIUnknown@@PEAK@Z DD 034019H
	DD	0140117H
	DD	07010H
	DD	imagerel __GSHandlerCheck
	DD	090H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Advise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAUIUnknown@@PEAK@Z$rtcName$0 DB 070H ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::Advise
	DB	00H
	ORG $+2
?Advise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAUIUnknown@@PEAK@Z$rtcName$1 DB 069H ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::Advise
	DB	069H
	DB	064H
	DB	00H
	ORG $+8
?Advise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAUIUnknown@@PEAK@Z$rtcVarDesc DD 058H ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::Advise
	DD	010H
	DQ	FLAT:?Advise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAUIUnknown@@PEAK@Z$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:?Advise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAUIUnknown@@PEAK@Z$rtcName$0
	ORG $+96
?Advise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAUIUnknown@@PEAK@Z$rtcFrameData DD 02H ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::Advise
	DD	00H
	DQ	FLAT:?Advise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAUIUnknown@@PEAK@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAPEAUIConnectionPointContainer@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAU_GUID@@@Z DD 020c01H
	DD	0600b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJAEBU_GUID@@PEAPEAX@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_ICPLocator@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@B@ATL@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$IPropertyNotifySinkCP@VCOPOSVideoCapture@@VCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$IPropertyNotifySinkCP@VCOPOSVideoCapture@@VCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_ICPLocator@$1?IID_IPropertyNotifySink@@3U_GUID@@B@ATL@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$IObjectSafetyImpl@VCOPOSVideoCapture@@$02@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$IProvideClassInfo2Impl@$1?CLSID_OPOSVideoCapture@@3U_GUID@@B$1?DIID__IOPOSVideoCaptureEvents@@3U2@B$1?LIBID_OposVideoCapture_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$IDataObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$IQuickActivateImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ISpecifyPropertyPagesImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$IPersistStorageImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$IOleInPlaceObjectWindowlessImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$IViewObjectExImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$IOleInPlaceActiveObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$IOleObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$IOleControlImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$IPersistStreamInitImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComControl@VCOPOSVideoCapture@@V?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComControl@VCOPOSVideoCapture@@V?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@UEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$IDispatchImpl@UIOPOSVideoCapture@@$1?IID_IOPOSVideoCapture@@3U_GUID@@B$1?LIBID_OposVideoCapture_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0OposVariantResult@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1OposVariantResult@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_EOposVariant@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clear@OposVariant@@QEAAJXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1OposVariant@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0OposVariant@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IOPOSVideoCapture@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IOPOSVideoCapture_1_16@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComQIPtr@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComQIPtr@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComPtr@UIOleAdviseHolder@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComPtr@UIOleAdviseHolder@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComPtrBase@UIOleAdviseHolder@@@ATL@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComPtr@UIDataAdviseHolder@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComPtr@UIDataAdviseHolder@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComPtrBase@UIDataAdviseHolder@@@ATL@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComPtr@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComPtr@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CComControlBase@ATL@@UEAA@XZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CComControlBase@ATL@@QEAA@AEAPEAUHWND__@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IObjectSafety@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComPtr@UIAdviseSink@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComPtr@UIAdviseSink@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComPtrBase@UIAdviseSink@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComPtrBase@UIAdviseSink@@@ATL@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComPtr@UIOleClientSite@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComPtr@UIOleClientSite@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComPtrBase@UIOleClientSite@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComPtrBase@UIOleClientSite@@@ATL@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UEAA@XZ DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CMessageMap@ATL@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CWndProcThunk@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CWndProcThunk@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CWindow@ATL@@QEAA@PEAUHWND__@@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSize@CComDynamicUnkArray@ATL@@QEBAHXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetAt@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@H@Z DD 022201H
	DD	0700a520eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetUnknown@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@K@Z DD 022201H
	DD	0700a520eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCookie@CComDynamicUnkArray@ATL@@QEAAKPEAPEAUIUnknown@@@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Remove@CComDynamicUnkArray@ATL@@QEAAHK@Z DD 022201H
	DD	0700a720eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Add@CComDynamicUnkArray@ATL@@QEAAKPEAUIUnknown@@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Add@CComDynamicUnkArray@ATL@@QEAAKPEAUIUnknown@@@Z$rtcName$0 DB 06eH ; ATL::CComDynamicUnkArray::Add
	DB	041H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	00H
	ORG $+9
?Add@CComDynamicUnkArray@ATL@@QEAAKPEAUIUnknown@@@Z$rtcVarDesc DD 034H ; ATL::CComDynamicUnkArray::Add
	DD	04H
	DQ	FLAT:?Add@CComDynamicUnkArray@ATL@@QEAAKPEAUIUnknown@@@Z$rtcName$0
	ORG $+48
?Add@CComDynamicUnkArray@ATL@@QEAAKPEAUIUnknown@@@Z$rtcFrameData DD 01H ; ATL::CComDynamicUnkArray::Add
	DD	00H
	DQ	FLAT:?Add@CComDynamicUnkArray@ATL@@QEAAKPEAUIUnknown@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CComDynamicUnkArray@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CComDynamicUnkArray@ATL@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?destroy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?init@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAJPEAUtagCONNECTDATA@@PEBU3@@Z DD 032401H
	DD	0700c8210H
	DD	0600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Estringdispid@CComTypeInfoHolder@ATL@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ModuleLockHelper@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ModuleLockHelper@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_AtlInitialConstruct@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAJXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAKXZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAKXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetVoid@CComObjectRootBase@ATL@@QEAAXPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalQueryInterface@CComObjectRootBase@ATL@@SAJPEAXPEBU_ATL_INTMAP_ENTRY@2@AEBU_GUID@@PEAPEAX@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FinalRelease@CComObjectRootBase@ATL@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_AtlFinalConstruct@CComObjectRootBase@ATL@@QEAAJXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FinalConstruct@CComObjectRootBase@ATL@@QEAAJXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CComObjectRootBase@ATL@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CComObjectRootBase@ATL@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CDynamicStdCallThunk2@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CDynamicStdCallThunk2@ATL@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetModuleInstance@CComModule@ATL@@QEAAPEAUHINSTANCE__@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__F_AtlWinModule@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__E_AtlWinModule@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Term@CAtlWinModule@ATL@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CAtlWinModule@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CAtlWinModule@ATL@@QEAA@XZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__F_AtlComModule@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__E_AtlComModule@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Term@CAtlComModule@ATL@@QEAAXXZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CAtlComModule@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CAtlComModule@ATL@@QEAA@XZ DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InlineIsEqualUnknown@ATL@@YAHAEBU_GUID@@@Z DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AtlInternalQueryInterface@ATL@@YAJPEAXPEBU_ATL_INTMAP_ENTRY@1@AEBU_GUID@@PEAPEAX@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z DD 022201H
	DD	0700a520eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Decrement@CComSingleThreadModel@ATL@@SAKPEAJ@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Increment@CComSingleThreadModel@ATL@@SAKPEAJ@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CComBSTR@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$CComPtr@UIUnknown@@@ATL@@QEAAPEAUIUnknown@@PEAU2@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComPtr@UIUnknown@@@ATL@@QEAA@AEBV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComPtr@UIUnknown@@@ATL@@QEAA@PEAUIUnknown@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$CComPtrBase@UIUnknown@@@ATL@@QEBAPEAUIUnknown@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComPtrBase@UIUnknown@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Swap@?$CComPtrBase@UIUnknown@@@ATL@@IEAAXAEAV12@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComPtrBase@UIUnknown@@@ATL@@IEAA@PEAUIUnknown@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComPtrBase@UIUnknown@@@ATL@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComPtr@UIDispatch@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComPtr@UIDispatch@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CComPtrBase@UIDispatch@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CComPtrBase@UIDispatch@@@ATL@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IQuickActivate@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IViewObjectEx@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IOleInPlaceObjectWindowless@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IPersistStreamInit@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ISpecifyPropertyPages@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IOleControl@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IProvideClassInfo2@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IProvideClassInfo@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IConnectionPointContainer@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IEnumConnections@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Term@CComCriticalSection@ATL@@QEAAJXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Init@CComCriticalSection@ATL@@QEAAJXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CComCriticalSection@ATL@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CComCriticalSection@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_AtlRaiseException@ATL@@YAXKK@Z DD 022001H
	DD	07009320dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ DD 022f01H
	DD	07014d218H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcName$0 DB 070H ; ATL::CTraceFileAndLineInfo::operator()
	DB	06cH
	DB	065H
	DB	00H
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcName$1 DB 070H ; ATL::CTraceFileAndLineInfo::operator()
	DB	074H
	DB	072H
	DB	00H
	ORG $+8
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcVarDesc DD 058H ; ATL::CTraceFileAndLineInfo::operator()
	DD	08H
	DQ	FLAT:??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcName$0
	ORG $+96
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcFrameData DD 02H ; ATL::CTraceFileAndLineInfo::operator()
	DD	00H
	DQ	FLAT:??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CPreserveLastError@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CPreserveLastError@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcName$0 DB 06eH ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
	DB	042H
	DB	079H
	DB	074H
	DB	065H
	DB	073H
	DB	00H
	ORG $+9
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcVarDesc DD 028H ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
	DD	08H
	DQ	FLAT:?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcName$0
	ORG $+48
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcFrameData DD 01H ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
	DD	00H
	DQ	FLAT:?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z DD 022201H
	DD	0700a520eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z DD 023201H
	DD	07014f21bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcName$0 DB 077H ; ATL::CTrace::TraceV
	DB	073H
	DB	07aH
	DB	042H
	DB	075H
	DB	066H
	DB	00H
	ORG $+9
?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcVarDesc DD 058H ; ATL::CTrace::TraceV
	DD	08H
	DQ	FLAT:?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcName$0
	ORG $+48
?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcFrameData DD 01H ; ATL::CTrace::TraceV
	DD	00H
	DQ	FLAT:?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z DD 034419H
	DD	0158011bH
	DD	07014H
	DD	imagerel __GSHandlerCheck
	DD	0ab8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$0 DB 077H	; ATL::CTrace::TraceV
	DB	073H
	DB	07aH
	DB	043H
	DB	061H
	DB	074H
	DB	065H
	DB	067H
	DB	06fH
	DB	072H
	DB	079H
	DB	00H
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$1 DB 077H	; ATL::CTrace::TraceV
	DB	073H
	DB	07aH
	DB	042H
	DB	075H
	DB	066H
	DB	00H
	ORG $+5
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$2 DB 066H	; ATL::CTrace::TraceV
	DB	069H
	DB	06cH
	DB	065H
	DB	04eH
	DB	061H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+15
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcVarDesc DD 0890H ; ATL::CTrace::TraceV
	DD	0208H
	DQ	FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$2
	DD	0868H
	DD	08H
	DQ	FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$1
	DD	040H
	DD	0800H
	DQ	FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$0
	ORG $+144
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcFrameData DD 03H ; ATL::CTrace::TraceV
	DD	00H
	DQ	FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z DD 021c01H
	DD	070051209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceISAPI@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceSync@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceSecurity@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceUtil@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceMap@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceString@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceStencil@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceCache@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceTime@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceException@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAAIXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceAllocation@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceNotImpl@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceSnapin@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceDBProvider@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceDBClient@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceHosting@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceControls@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAAIXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceWindowing@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceRefcount@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceRegistrar@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceQI@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceCOM@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceGeneral@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Free@CCRTAllocator@ATL@@SAXPEAX@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$AtlMultiply@H@ATL@@YAJPEAHHH@Z DD 022701H
	DD	0700f5213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$swprintf_s DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
swprintf_s$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
swprintf_s$rtcVarDesc DD 048H
	DD	08H
	DQ	FLAT:swprintf_s$rtcName$0
	ORG $+48
swprintf_s$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:swprintf_s$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vswprintf_s_l DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsnwprintf DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_snwprintf DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
_snwprintf$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
_snwprintf$rtcVarDesc DD 048H
	DD	08H
	DQ	FLAT:_snwprintf$rtcName$0
	ORG $+48
_snwprintf$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:_snwprintf$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsnwprintf_l DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$vfwprintf DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfwprintf_l DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AtlThrowImpl@ATL@@YAXJ@Z DD 021c01H
	DD	070059209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IViewObject2@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IViewObject@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IOleInPlaceObject@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IOleInPlaceActiveObject@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IOleWindow@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IOleObject@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IDispatch@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IDataObject@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IPersistStorage@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IPersist@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IUnknown@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$HRESULT_FROM_WIN32 DD 021c01H
	DD	070051209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$InlineIsEqualGUID DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_I@YAXPEAX_K1P6AX0@Z@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCOM$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceCOM@ATL@@YAXXZ ; ATL::atlTraceCOM$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceQI$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceQI@ATL@@YAXXZ ; ATL::atlTraceQI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRegistrar$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceRegistrar@ATL@@YAXXZ ; ATL::atlTraceRegistrar$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRefcount$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceRefcount@ATL@@YAXXZ ; ATL::atlTraceRefcount$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceWindowing$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceWindowing@ATL@@YAXXZ ; ATL::atlTraceWindowing$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceControls$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceControls@ATL@@YAXXZ ; ATL::atlTraceControls$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceHosting$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceHosting@ATL@@YAXXZ ; ATL::atlTraceHosting$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBClient$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceDBClient@ATL@@YAXXZ ; ATL::atlTraceDBClient$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBProvider$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceDBProvider@ATL@@YAXXZ ; ATL::atlTraceDBProvider$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSnapin$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceSnapin@ATL@@YAXXZ ; ATL::atlTraceSnapin$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceNotImpl$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceNotImpl@ATL@@YAXXZ ; ATL::atlTraceNotImpl$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceAllocation$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceAllocation@ATL@@YAXXZ ; ATL::atlTraceAllocation$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceTime$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceTime@ATL@@YAXXZ ; ATL::atlTraceTime$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCache$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceCache@ATL@@YAXXZ ; ATL::atlTraceCache$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceStencil$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceStencil@ATL@@YAXXZ ; ATL::atlTraceStencil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceString$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceString@ATL@@YAXXZ ; ATL::atlTraceString$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceMap$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceMap@ATL@@YAXXZ ; ATL::atlTraceMap$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceUtil$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceUtil@ATL@@YAXXZ ; ATL::atlTraceUtil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSecurity$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceSecurity@ATL@@YAXXZ ; ATL::atlTraceSecurity$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSync$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceSync@ATL@@YAXXZ ; ATL::atlTraceSync$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceISAPI$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceISAPI@ATL@@YAXXZ ; ATL::atlTraceISAPI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlComModule$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__E_AtlComModule@ATL@@YAXXZ ; ATL::_AtlComModule$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlWinModule$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__E_AtlWinModule@ATL@@YAXXZ ; ATL::_AtlWinModule$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??pConnMap$initializer$@?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@0P6AXXZEA@@3P6AXXZEA DQ FLAT:??__E?pConnMap@?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@0PEBU_ATL_CONNMAP_ENTRY@2@EB@@YAXXZ ; ??pConnMap$initializer$@?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@0P6AXXZEA@@3P6AXXZEA
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAPEAXI@Z PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAA@XZ ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::~CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 38 00 00 00	 mov	 edx, 56			; 00000038H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_G?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAPEAXI@Z ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SAJPEAPEAV12@@Z
_TEXT	SEGMENT
hRes$ = 48
p$ = 56
$T1 = 64
$T2 = 72
tv85 = 80
tv166 = 88
pp$ = 112
?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SAJPEAPEAV12@@Z PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CreateInstance, COMDAT

; 2963 : {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 18 00 00 00	 mov	 ecx, 24
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 2964 : 	ATLASSERT(pp != NULL);

  0001e	48 83 7c 24 70
	00		 cmp	 QWORD PTR pp$[rsp], 0
  00024	75 3a		 jne	 SHORT $LN8@CreateInst
  00026	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG199556
  0002d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00032	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG199557
  00039	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0003e	45 33 c9	 xor	 r9d, r9d
  00041	41 b8 94 0b 00
	00		 mov	 r8d, 2964		; 00000b94H
  00047	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG199558
  0004e	b9 02 00 00 00	 mov	 ecx, 2
  00053	e8 00 00 00 00	 call	 _CrtDbgReportW
  00058	83 f8 01	 cmp	 eax, 1
  0005b	75 03		 jne	 SHORT $LN8@CreateInst
  0005d	cc		 int	 3
  0005e	33 c0		 xor	 eax, eax
$LN8@CreateInst:

; 2965 : 	if (pp == NULL)

  00060	48 83 7c 24 70
	00		 cmp	 QWORD PTR pp$[rsp], 0
  00066	75 0a		 jne	 SHORT $LN2@CreateInst

; 2966 : 		return E_POINTER;

  00068	b8 03 40 00 80	 mov	 eax, -2147467261	; ffffffff80004003H
  0006d	e9 47 01 00 00	 jmp	 $LN1@CreateInst
$LN2@CreateInst:

; 2967 : 	*pp = NULL;

  00072	48 8b 44 24 70	 mov	 rax, QWORD PTR pp$[rsp]
  00077	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2968 : 
; 2969 : 	HRESULT hRes = E_OUTOFMEMORY;

  0007e	c7 44 24 30 0e
	00 07 80	 mov	 DWORD PTR hRes$[rsp], -2147024882 ; ffffffff8007000eH

; 2970 : 	CComObject<Base>* p = NULL;

  00086	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR p$[rsp], 0

; 2971 : 	ATLTRY(p = _ATL_NEW CComObject<Base>())

  0008f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00096	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0009b	e8 00 00 00 00	 call	 ??2@YAPEAX_KAEBUnothrow_t@std@@@Z ; operator new
  000a0	48 89 44 24 40	 mov	 QWORD PTR $T1[rsp], rax
  000a5	48 83 7c 24 40
	00		 cmp	 QWORD PTR $T1[rsp], 0
  000ab	74 13		 je	 SHORT $LN9@CreateInst
  000ad	33 d2		 xor	 edx, edx
  000af	48 8b 4c 24 40	 mov	 rcx, QWORD PTR $T1[rsp]
  000b4	e8 00 00 00 00	 call	 ??0?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QEAA@PEAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >
  000b9	48 89 44 24 50	 mov	 QWORD PTR tv85[rsp], rax
  000be	eb 09		 jmp	 SHORT $LN10@CreateInst
$LN9@CreateInst:
  000c0	48 c7 44 24 50
	00 00 00 00	 mov	 QWORD PTR tv85[rsp], 0
$LN10@CreateInst:
  000c9	48 8b 44 24 50	 mov	 rax, QWORD PTR tv85[rsp]
  000ce	48 89 44 24 38	 mov	 QWORD PTR p$[rsp], rax

; 2972 : 	if (p != NULL)

  000d3	48 83 7c 24 38
	00		 cmp	 QWORD PTR p$[rsp], 0
  000d9	0f 84 c9 00 00
	00		 je	 $LN3@CreateInst

; 2973 : 	{
; 2974 : 		p->SetVoid(NULL);

  000df	48 8b 44 24 38	 mov	 rax, QWORD PTR p$[rsp]
  000e4	48 83 c0 30	 add	 rax, 48			; 00000030H
  000e8	33 d2		 xor	 edx, edx
  000ea	48 8b c8	 mov	 rcx, rax
  000ed	e8 00 00 00 00	 call	 ?SetVoid@CComObjectRootBase@ATL@@QEAAXPEAX@Z ; ATL::CComObjectRootBase::SetVoid

; 2975 : 		p->InternalFinalConstructAddRef();

  000f2	48 8b 44 24 38	 mov	 rax, QWORD PTR p$[rsp]
  000f7	48 83 c0 30	 add	 rax, 48			; 00000030H
  000fb	48 8b c8	 mov	 rcx, rax
  000fe	e8 00 00 00 00	 call	 ?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QEAAXXZ ; ATL::CComObjectRootBase::InternalFinalConstructAddRef

; 2976 : 		hRes = p->_AtlInitialConstruct();

  00103	48 8b 44 24 38	 mov	 rax, QWORD PTR p$[rsp]
  00108	48 83 c0 30	 add	 rax, 48			; 00000030H
  0010c	48 8b c8	 mov	 rcx, rax
  0010f	e8 00 00 00 00	 call	 ?_AtlInitialConstruct@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAJXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::_AtlInitialConstruct
  00114	89 44 24 30	 mov	 DWORD PTR hRes$[rsp], eax

; 2977 : 		if (SUCCEEDED(hRes))

  00118	83 7c 24 30 00	 cmp	 DWORD PTR hRes$[rsp], 0
  0011d	7c 15		 jl	 SHORT $LN4@CreateInst

; 2978 : 			hRes = p->FinalConstruct();

  0011f	48 8b 44 24 38	 mov	 rax, QWORD PTR p$[rsp]
  00124	48 83 c0 30	 add	 rax, 48			; 00000030H
  00128	48 8b c8	 mov	 rcx, rax
  0012b	e8 00 00 00 00	 call	 ?FinalConstruct@CComObjectRootBase@ATL@@QEAAJXZ ; ATL::CComObjectRootBase::FinalConstruct
  00130	89 44 24 30	 mov	 DWORD PTR hRes$[rsp], eax
$LN4@CreateInst:

; 2979 : 		if (SUCCEEDED(hRes))

  00134	83 7c 24 30 00	 cmp	 DWORD PTR hRes$[rsp], 0
  00139	7c 15		 jl	 SHORT $LN5@CreateInst

; 2980 : 			hRes = p->_AtlFinalConstruct();

  0013b	48 8b 44 24 38	 mov	 rax, QWORD PTR p$[rsp]
  00140	48 83 c0 30	 add	 rax, 48			; 00000030H
  00144	48 8b c8	 mov	 rcx, rax
  00147	e8 00 00 00 00	 call	 ?_AtlFinalConstruct@CComObjectRootBase@ATL@@QEAAJXZ ; ATL::CComObjectRootBase::_AtlFinalConstruct
  0014c	89 44 24 30	 mov	 DWORD PTR hRes$[rsp], eax
$LN5@CreateInst:

; 2981 : 		p->InternalFinalConstructRelease();

  00150	48 8b 44 24 38	 mov	 rax, QWORD PTR p$[rsp]
  00155	48 83 c0 30	 add	 rax, 48			; 00000030H
  00159	48 8b c8	 mov	 rcx, rax
  0015c	e8 00 00 00 00	 call	 ?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QEAAXXZ ; ATL::CComObjectRootBase::InternalFinalConstructRelease

; 2982 : 		if (hRes != S_OK)

  00161	83 7c 24 30 00	 cmp	 DWORD PTR hRes$[rsp], 0
  00166	74 40		 je	 SHORT $LN6@CreateInst

; 2983 : 		{
; 2984 : 			delete p;

  00168	48 8b 44 24 38	 mov	 rax, QWORD PTR p$[rsp]
  0016d	48 89 44 24 48	 mov	 QWORD PTR $T2[rsp], rax
  00172	48 83 7c 24 48
	00		 cmp	 QWORD PTR $T2[rsp], 0
  00178	74 1c		 je	 SHORT $LN11@CreateInst
  0017a	48 8b 44 24 48	 mov	 rax, QWORD PTR $T2[rsp]
  0017f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00182	ba 01 00 00 00	 mov	 edx, 1
  00187	48 8b 4c 24 48	 mov	 rcx, QWORD PTR $T2[rsp]
  0018c	ff 50 38	 call	 QWORD PTR [rax+56]
  0018f	48 89 44 24 58	 mov	 QWORD PTR tv166[rsp], rax
  00194	eb 09		 jmp	 SHORT $LN12@CreateInst
$LN11@CreateInst:
  00196	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR tv166[rsp], 0
$LN12@CreateInst:

; 2985 : 			p = NULL;

  0019f	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR p$[rsp], 0
$LN6@CreateInst:
$LN3@CreateInst:

; 2986 : 		}
; 2987 : 	}
; 2988 : 	*pp = p;

  001a8	48 8b 44 24 70	 mov	 rax, QWORD PTR pp$[rsp]
  001ad	48 8b 4c 24 38	 mov	 rcx, QWORD PTR p$[rsp]
  001b2	48 89 08	 mov	 QWORD PTR [rax], rcx

; 2989 : 	return hRes;

  001b5	8b 44 24 30	 mov	 eax, DWORD PTR hRes$[rsp]
$LN1@CreateInst:

; 2990 : }

  001b9	48 83 c4 60	 add	 rsp, 96			; 00000060H
  001bd	5f		 pop	 rdi
  001be	c3		 ret	 0
?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SAJPEAPEAV12@@Z ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CreateInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
iid$ = 56
ppvObject$ = 64
?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAJAEBU_GUID@@PEAPEAX@Z PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::QueryInterface, COMDAT

; 2947 : 	{

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2948 : 		return this->_InternalQueryInterface(iid, ppvObject);

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR ppvObject$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR iid$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAAJAEBU_GUID@@PEAPEAX@Z ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_InternalQueryInterface

; 2949 : 	}

  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAJAEBU_GUID@@PEAPEAX@Z ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ
_TEXT	SEGMENT
l$ = 32
lock$4 = 52
$T5 = 72
tv84 = 80
this$ = 112
?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::Release, COMDAT

; 2933 : 	{

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 18 00 00 00	 mov	 ecx, 24
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 2934 : 		ULONG l = this->InternalRelease();

  0001e	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 30	 add	 rax, 48			; 00000030H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease
  0002f	89 44 24 20	 mov	 DWORD PTR l$[rsp], eax

; 2935 : 		if (l == 0)

  00033	83 7c 24 20 00	 cmp	 DWORD PTR l$[rsp], 0
  00038	75 4b		 jne	 SHORT $LN2@Release

; 2936 : 		{
; 2937 : 			// Lock the module to avoid DLL unload when destruction of member variables take a long time
; 2938 : 			ModuleLockHelper lock;

  0003a	48 8d 4c 24 34	 lea	 rcx, QWORD PTR lock$4[rsp]
  0003f	e8 00 00 00 00	 call	 ??0ModuleLockHelper@ATL@@QEAA@XZ ; ATL::ModuleLockHelper::ModuleLockHelper

; 2939 : 			delete this;

  00044	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00049	48 89 44 24 48	 mov	 QWORD PTR $T5[rsp], rax
  0004e	48 83 7c 24 48
	00		 cmp	 QWORD PTR $T5[rsp], 0
  00054	74 1c		 je	 SHORT $LN4@Release
  00056	48 8b 44 24 48	 mov	 rax, QWORD PTR $T5[rsp]
  0005b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005e	ba 01 00 00 00	 mov	 edx, 1
  00063	48 8b 4c 24 48	 mov	 rcx, QWORD PTR $T5[rsp]
  00068	ff 50 38	 call	 QWORD PTR [rax+56]
  0006b	48 89 44 24 50	 mov	 QWORD PTR tv84[rsp], rax
  00070	eb 09		 jmp	 SHORT $LN5@Release
$LN4@Release:
  00072	48 c7 44 24 50
	00 00 00 00	 mov	 QWORD PTR tv84[rsp], 0
$LN5@Release:

; 2940 : 		}

  0007b	48 8d 4c 24 34	 lea	 rcx, QWORD PTR lock$4[rsp]
  00080	e8 00 00 00 00	 call	 ??1ModuleLockHelper@ATL@@QEAA@XZ ; ATL::ModuleLockHelper::~ModuleLockHelper
$LN2@Release:

; 2941 : 		return l;

  00085	8b 44 24 20	 mov	 eax, DWORD PTR l$[rsp]

; 2942 : 	}

  00089	8b f8		 mov	 edi, eax
  0008b	48 8b cc	 mov	 rcx, rsp
  0008e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ$rtcFrameData
  00095	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0009a	8b c7		 mov	 eax, edi
  0009c	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000a0	5f		 pop	 rdi
  000a1	c3		 ret	 0
?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?AddRef@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ
_TEXT	SEGMENT
this$ = 48
?AddRef@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::AddRef, COMDAT

; 2929 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2930 : 		return this->InternalAddRef();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 30	 add	 rax, 48			; 00000030H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef

; 2931 : 	}

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
?AddRef@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAAKXZ ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAA@XZ PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::~CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >, COMDAT

; 2918 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 2919 : 		this->m_dwRef = -(LONG_MAX/2);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	c7 40 30 01 00
	00 c0		 mov	 DWORD PTR [rax+48], -1073741823 ; ffffffffc0000001H

; 2920 : 		this->FinalRelease();

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c0 30	 add	 rax, 48			; 00000030H
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ?FinalRelease@CComObjectRootBase@ATL@@QEAAXXZ ; ATL::CComObjectRootBase::FinalRelease

; 2921 : #if defined(_ATL_DEBUG_INTERFACES) && !defined(_ATL_STATIC_LIB_IMPL)
; 2922 : 		_AtlDebugInterfacesModule.DeleteNonAddRefThunk(_GetRawUnknown());
; 2923 : #endif
; 2924 : 		_pAtlModule->Unlock();

  0004a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA ; ATL::_pAtlModule
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA ; ATL::_pAtlModule
  0005b	ff 50 10	 call	 QWORD PTR [rax+16]

; 2925 : 	}

  0005e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00063	e8 00 00 00 00	 call	 ??1?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@UEAA@XZ
  00068	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006c	5f		 pop	 rdi
  0006d	c3		 ret	 0
??1?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UEAA@XZ ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::~CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??0?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QEAA@PEAX@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??0?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QEAA@PEAX@Z PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >, COMDAT

; 2911 : 	CComObject(_In_opt_ void* = NULL)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2912 : 	{

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAA@XZ
  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@
  00039	48 89 08	 mov	 QWORD PTR [rax], rcx

; 2913 : 		_pAtlModule->Lock();

  0003c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA ; ATL::_pAtlModule
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA ; ATL::_pAtlModule
  0004d	ff 50 08	 call	 QWORD PTR [rax+8]

; 2914 : 	}

  00050	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00055	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
??0?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QEAA@PEAX@Z ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@UEAA@XZ PROC ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::~CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 30	 add	 rax, 48			; 00000030H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::~CComObjectRootEx<ATL::CComSingleThreadModel>
  0002f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00034	e8 00 00 00 00	 call	 ??1?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAA@XZ ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::~CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >
  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??1?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@UEAA@XZ ENDP ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::~CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAA@XZ PROC ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QEAA@XZ ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c0 30	 add	 rax, 48			; 00000030H
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??0?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAA@XZ ENDP ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SAPEBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT
?_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SAPEBU_ATL_INTMAP_ENTRY@2@XZ PROC ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_GetEntries, COMDAT

; 5671 : 	BEGIN_COM_MAP(_CComEnum)

$LN3:
  00000	40 57		 push	 rdi

; 5672 : 		COM_INTERFACE_ENTRY_IID(*piid, _CComEnumBase)
; 5673 : 	END_COM_MAP()

  00002	b8 18 00 00 00	 mov	 eax, 24
  00007	48 6b c0 01	 imul	 rax, rax, 1
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_entries@?1??_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SAPEBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B ; `ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_GetEntries'::`2'::_entries
  00012	48 03 c8	 add	 rcx, rax
  00015	48 8b c1	 mov	 rax, rcx
  00018	5f		 pop	 rdi
  00019	c3		 ret	 0
?_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SAPEBU_ATL_INTMAP_ENTRY@2@XZ ENDP ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_GetEntries
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
iid$ = 56
ppvObject$ = 64
?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAAJAEBU_GUID@@PEAPEAX@Z PROC ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_InternalQueryInterface, COMDAT

; 5671 : 	BEGIN_COM_MAP(_CComEnum)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	e8 00 00 00 00	 call	 ?_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SAPEBU_ATL_INTMAP_ENTRY@2@XZ ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_GetEntries
  0002d	4c 8b 4c 24 40	 mov	 r9, QWORD PTR ppvObject$[rsp]
  00032	4c 8b 44 24 38	 mov	 r8, QWORD PTR iid$[rsp]
  00037	48 8b d0	 mov	 rdx, rax
  0003a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003f	e8 00 00 00 00	 call	 ?InternalQueryInterface@CComObjectRootBase@ATL@@SAJPEAXPEBU_ATL_INTMAP_ENTRY@2@AEBU_GUID@@PEAPEAX@Z ; ATL::CComObjectRootBase::InternalQueryInterface
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAAJAEBU_GUID@@PEAPEAX@Z ENDP ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_InternalQueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Init@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QEAAJPEAUtagCONNECTDATA@@0PEAUIUnknown@@W4CComEnumFlags@2@@Z
_TEXT	SEGMENT
i$1 = 48
hr$2 = 56
p$3 = 64
$T4 = 72
$T5 = 80
tv83 = 88
tv140 = 96
this$ = 128
begin$ = 136
end$ = 144
pUnk$ = 152
flags$ = 160
?Init@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QEAAJPEAUtagCONNECTDATA@@0PEAUIUnknown@@W4CComEnumFlags@2@@Z PROC ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Init, COMDAT

; 5627 : {

$LN16:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 1c 00 00 00	 mov	 ecx, 28
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]

; 5628 : 	if (flags == AtlFlagCopy)

  00030	83 bc 24 a0 00
	00 00 03	 cmp	 DWORD PTR flags$[rsp], 3
  00038	0f 85 37 02 00
	00		 jne	 $LN10@Init
$LN4@Init:

; 5629 : 	{
; 5630 : 		ATLASSUME(m_begin == NULL); //Init called twice?

  0003e	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  0004b	74 3a		 je	 SHORT $LN15@Init
  0004d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG199532
  00054	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00059	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG199533
  00060	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00065	45 33 c9	 xor	 r9d, r9d
  00068	41 b8 fe 15 00
	00		 mov	 r8d, 5630		; 000015feH
  0006e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG199534
  00075	b9 02 00 00 00	 mov	 ecx, 2
  0007a	e8 00 00 00 00	 call	 _CrtDbgReportW
  0007f	83 f8 01	 cmp	 eax, 1
  00082	75 03		 jne	 SHORT $LN15@Init
  00084	cc		 int	 3
  00085	33 c0		 xor	 eax, eax
$LN15@Init:
  00087	33 c0		 xor	 eax, eax
  00089	85 c0		 test	 eax, eax
  0008b	75 b1		 jne	 SHORT $LN4@Init

; 5631 : 		ATLTRY(m_begin = _ATL_NEW T[end-begin])

  0008d	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR begin$[rsp]
  00095	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR end$[rsp]
  0009d	48 2b c8	 sub	 rcx, rax
  000a0	48 8b c1	 mov	 rax, rcx
  000a3	48 c1 f8 04	 sar	 rax, 4
  000a7	48 89 44 24 58	 mov	 QWORD PTR tv83[rsp], rax
  000ac	b8 10 00 00 00	 mov	 eax, 16
  000b1	48 8b 4c 24 58	 mov	 rcx, QWORD PTR tv83[rsp]
  000b6	48 f7 e1	 mul	 rcx
  000b9	48 c7 c1 ff ff
	ff ff		 mov	 rcx, -1
  000c0	48 0f 40 c1	 cmovo	 rax, rcx
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  000cb	48 8b c8	 mov	 rcx, rax
  000ce	e8 00 00 00 00	 call	 ??_U@YAPEAX_KAEBUnothrow_t@std@@@Z ; operator new[]
  000d3	48 89 44 24 48	 mov	 QWORD PTR $T4[rsp], rax
  000d8	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e0	48 8b 4c 24 48	 mov	 rcx, QWORD PTR $T4[rsp]
  000e5	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 5632 : 		m_iter = m_begin;

  000e9	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000f1	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000f9	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000fd	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 5633 : 		if (m_begin == NULL)

  00101	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00109	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  0010e	75 0a		 jne	 SHORT $LN12@Init

; 5634 : 			return E_OUTOFMEMORY;

  00110	b8 0e 00 07 80	 mov	 eax, -2147024882	; ffffffff8007000eH
  00115	e9 cb 01 00 00	 jmp	 $LN1@Init
$LN12@Init:

; 5635 : 		for (T* i=begin; i != end; i++)

  0011a	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR begin$[rsp]
  00122	48 89 44 24 30	 mov	 QWORD PTR i$1[rsp], rax
  00127	eb 0e		 jmp	 SHORT $LN7@Init
$LN5@Init:
  00129	48 8b 44 24 30	 mov	 rax, QWORD PTR i$1[rsp]
  0012e	48 83 c0 10	 add	 rax, 16
  00132	48 89 44 24 30	 mov	 QWORD PTR i$1[rsp], rax
$LN7@Init:
  00137	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR end$[rsp]
  0013f	48 39 44 24 30	 cmp	 QWORD PTR i$1[rsp], rax
  00144	0f 84 f3 00 00
	00		 je	 $LN6@Init

; 5636 : 		{
; 5637 : 			Copy::init(m_iter);

  0014a	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00152	48 8b 48 20	 mov	 rcx, QWORD PTR [rax+32]
  00156	e8 00 00 00 00	 call	 ?init@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z ; ATL::_Copy<tagCONNECTDATA>::init

; 5638 : 			HRESULT hr = Copy::copy(m_iter, i);

  0015b	48 8b 54 24 30	 mov	 rdx, QWORD PTR i$1[rsp]
  00160	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00168	48 8b 48 20	 mov	 rcx, QWORD PTR [rax+32]
  0016c	e8 00 00 00 00	 call	 ?copy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAJPEAUtagCONNECTDATA@@PEBU3@@Z ; ATL::_Copy<tagCONNECTDATA>::copy
  00171	89 44 24 38	 mov	 DWORD PTR hr$2[rsp], eax

; 5639 : 			if (FAILED(hr))

  00175	83 7c 24 38 00	 cmp	 DWORD PTR hr$2[rsp], 0
  0017a	0f 8d 9c 00 00
	00		 jge	 $LN13@Init

; 5640 : 			{
; 5641 : 				T* p = m_begin;

  00180	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00188	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0018c	48 89 44 24 40	 mov	 QWORD PTR p$3[rsp], rax
$LN8@Init:

; 5642 : 				while (p < m_iter)

  00191	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00199	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0019d	48 39 44 24 40	 cmp	 QWORD PTR p$3[rsp], rax
  001a2	73 24		 jae	 SHORT $LN9@Init

; 5643 : 					Copy::destroy(p++);

  001a4	48 8b 44 24 40	 mov	 rax, QWORD PTR p$3[rsp]
  001a9	48 89 44 24 60	 mov	 QWORD PTR tv140[rsp], rax
  001ae	48 8b 44 24 40	 mov	 rax, QWORD PTR p$3[rsp]
  001b3	48 83 c0 10	 add	 rax, 16
  001b7	48 89 44 24 40	 mov	 QWORD PTR p$3[rsp], rax
  001bc	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv140[rsp]
  001c1	e8 00 00 00 00	 call	 ?destroy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z ; ATL::_Copy<tagCONNECTDATA>::destroy
  001c6	eb c9		 jmp	 SHORT $LN8@Init
$LN9@Init:

; 5644 : 				delete [] m_begin;

  001c8	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001d0	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  001d4	48 89 44 24 50	 mov	 QWORD PTR $T5[rsp], rax
  001d9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR $T5[rsp]
  001de	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]

; 5645 : 				m_begin = m_end = m_iter = NULL;

  001e3	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001eb	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0
  001f3	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001fb	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00203	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0020b	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0

; 5646 : 				return hr;

  00213	8b 44 24 38	 mov	 eax, DWORD PTR hr$2[rsp]
  00217	e9 c9 00 00 00	 jmp	 $LN1@Init
$LN13@Init:

; 5647 : 			}
; 5648 : 			m_iter++;

  0021c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00224	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00228	48 83 c0 10	 add	 rax, 16
  0022c	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00234	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 5649 : 		}

  00238	e9 ec fe ff ff	 jmp	 $LN5@Init
$LN6@Init:

; 5650 : 		m_end = m_begin + (end-begin);

  0023d	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR begin$[rsp]
  00245	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR end$[rsp]
  0024d	48 2b c8	 sub	 rcx, rax
  00250	48 8b c1	 mov	 rax, rcx
  00253	48 c1 f8 04	 sar	 rax, 4
  00257	48 6b c0 10	 imul	 rax, rax, 16
  0025b	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00263	48 03 41 10	 add	 rax, QWORD PTR [rcx+16]
  00267	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0026f	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 5651 : 	}

  00273	eb 28		 jmp	 SHORT $LN11@Init
$LN10@Init:

; 5652 : 	else
; 5653 : 	{
; 5654 : 		m_begin = begin;

  00275	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0027d	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR begin$[rsp]
  00285	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 5655 : 		m_end = end;

  00289	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00291	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR end$[rsp]
  00299	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
$LN11@Init:

; 5656 : 	}
; 5657 : 	m_spUnk = pUnk;

  0029d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002a5	48 83 c0 08	 add	 rax, 8
  002a9	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR pUnk$[rsp]
  002b1	48 8b c8	 mov	 rcx, rax
  002b4	e8 00 00 00 00	 call	 ??4?$CComPtr@UIUnknown@@@ATL@@QEAAPEAUIUnknown@@PEAU2@@Z ; ATL::CComPtr<IUnknown>::operator=

; 5658 : 	m_iter = m_begin;

  002b9	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002c1	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  002c9	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  002cd	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 5659 : 	m_dwFlags = flags;

  002d1	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002d9	8b 8c 24 a0 00
	00 00		 mov	 ecx, DWORD PTR flags$[rsp]
  002e0	89 48 28	 mov	 DWORD PTR [rax+40], ecx

; 5660 : 	return S_OK;

  002e3	33 c0		 xor	 eax, eax
$LN1@Init:

; 5661 : }

  002e5	48 83 c4 70	 add	 rsp, 112		; 00000070H
  002e9	5f		 pop	 rdi
  002ea	c3		 ret	 0
?Init@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QEAAJPEAUtagCONNECTDATA@@0PEAUIUnknown@@W4CComEnumFlags@2@@Z ENDP ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z
_TEXT	SEGMENT
hRes$ = 48
p$4 = 72
$T5 = 88
$T6 = 96
$T7 = 104
$T8 = 112
$T9 = 120
tv128 = 128
tv163 = 136
this$ = 160
ppEnum$ = 168
?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z PROC ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Clone, COMDAT

; 5596 : {

$LN13:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]
  00029	c7 44 24 78 00
	00 00 00	 mov	 DWORD PTR $T9[rsp], 0

; 5597 : 	typedef CComObject<CComEnum<Base, piid, T, Copy> > _class;
; 5598 : 	HRESULT hRes = E_POINTER;

  00031	c7 44 24 30 03
	40 00 80	 mov	 DWORD PTR hRes$[rsp], -2147467261 ; ffffffff80004003H

; 5599 : 	if (ppEnum != NULL)

  00039	48 83 bc 24 a8
	00 00 00 00	 cmp	 QWORD PTR ppEnum$[rsp], 0
  00042	0f 84 7a 01 00
	00		 je	 $LN2@Clone

; 5600 : 	{
; 5601 : 		*ppEnum = NULL;

  00048	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR ppEnum$[rsp]
  00050	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 5602 : 		_class* p;
; 5603 : 		hRes = _class::CreateInstance(&p);

  00057	48 8d 4c 24 48	 lea	 rcx, QWORD PTR p$4[rsp]
  0005c	e8 00 00 00 00	 call	 ?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SAJPEAPEAV12@@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CreateInstance
  00061	89 44 24 30	 mov	 DWORD PTR hRes$[rsp], eax

; 5604 : 		if (SUCCEEDED(hRes))

  00065	83 7c 24 30 00	 cmp	 DWORD PTR hRes$[rsp], 0
  0006a	0f 8c 52 01 00
	00		 jl	 $LN2@Clone

; 5605 : 		{
; 5606 : 			// If this object has ownership of the data then we need to keep it around
; 5607 : 			hRes = p->Init(m_begin, m_end, (m_dwFlags & BitOwn) ? this : m_spUnk);

  00070	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00078	8b 40 28	 mov	 eax, DWORD PTR [rax+40]
  0007b	83 e0 02	 and	 eax, 2
  0007e	85 c0		 test	 eax, eax
  00080	74 21		 je	 SHORT $LN7@Clone
  00082	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  0008a	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T6[rsp]
  0008f	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QEAA@PEAUIUnknown@@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
  00094	83 4c 24 78 01	 or	 DWORD PTR $T9[rsp], 1
  00099	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv128[rsp], rax
  000a1	eb 26		 jmp	 SHORT $LN8@Clone
$LN7@Clone:
  000a3	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000ab	48 83 c0 08	 add	 rax, 8
  000af	48 8b d0	 mov	 rdx, rax
  000b2	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T7[rsp]
  000b7	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QEAA@AEBV01@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
  000bc	83 4c 24 78 02	 or	 DWORD PTR $T9[rsp], 2
  000c1	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv128[rsp], rax
$LN8@Clone:
  000c9	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR tv128[rsp]
  000d1	48 89 44 24 58	 mov	 QWORD PTR $T5[rsp], rax
  000d6	48 8b 4c 24 58	 mov	 rcx, QWORD PTR $T5[rsp]
  000db	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIUnknown@@@ATL@@QEBAPEAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
  000e0	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  000e8	4c 8b c8	 mov	 r9, rax
  000eb	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000f3	4c 8b 40 18	 mov	 r8, QWORD PTR [rax+24]
  000f7	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000ff	48 8b 50 10	 mov	 rdx, QWORD PTR [rax+16]
  00103	48 8b 4c 24 48	 mov	 rcx, QWORD PTR p$4[rsp]
  00108	e8 00 00 00 00	 call	 ?Init@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QEAAJPEAUtagCONNECTDATA@@0PEAUIUnknown@@W4CComEnumFlags@2@@Z ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Init
  0010d	89 44 24 30	 mov	 DWORD PTR hRes$[rsp], eax
  00111	8b 44 24 78	 mov	 eax, DWORD PTR $T9[rsp]
  00115	83 e0 02	 and	 eax, 2
  00118	85 c0		 test	 eax, eax
  0011a	74 0f		 je	 SHORT $LN11@Clone
  0011c	83 64 24 78 fd	 and	 DWORD PTR $T9[rsp], -3
  00121	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T7[rsp]
  00126	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ
$LN11@Clone:
  0012b	8b 44 24 78	 mov	 eax, DWORD PTR $T9[rsp]
  0012f	83 e0 01	 and	 eax, 1
  00132	85 c0		 test	 eax, eax
  00134	74 0f		 je	 SHORT $LN12@Clone
  00136	83 64 24 78 fe	 and	 DWORD PTR $T9[rsp], -2
  0013b	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T6[rsp]
  00140	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ
$LN12@Clone:

; 5608 : 			if (SUCCEEDED(hRes))

  00145	83 7c 24 30 00	 cmp	 DWORD PTR hRes$[rsp], 0
  0014a	7c 32		 jl	 SHORT $LN4@Clone

; 5609 : 			{
; 5610 : 				p->m_iter = m_iter;

  0014c	48 8b 44 24 48	 mov	 rax, QWORD PTR p$4[rsp]
  00151	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00159	48 8b 49 20	 mov	 rcx, QWORD PTR [rcx+32]
  0015d	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 5611 : 				hRes = p->_InternalQueryInterface(*piid, (void**)ppEnum);

  00161	4c 8b 84 24 a8
	00 00 00	 mov	 r8, QWORD PTR ppEnum$[rsp]
  00169	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_GUID_b196b287_bab4_101a_b69c_00aa00341d07
  00170	48 8b 4c 24 48	 mov	 rcx, QWORD PTR p$4[rsp]
  00175	e8 00 00 00 00	 call	 ?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAAJAEBU_GUID@@PEAPEAX@Z ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_InternalQueryInterface
  0017a	89 44 24 30	 mov	 DWORD PTR hRes$[rsp], eax
$LN4@Clone:

; 5612 : 			}
; 5613 : 			if (FAILED(hRes))

  0017e	83 7c 24 30 00	 cmp	 DWORD PTR hRes$[rsp], 0
  00183	7d 3d		 jge	 SHORT $LN2@Clone

; 5614 : 				delete p;

  00185	48 8b 44 24 48	 mov	 rax, QWORD PTR p$4[rsp]
  0018a	48 89 44 24 70	 mov	 QWORD PTR $T8[rsp], rax
  0018f	48 83 7c 24 70
	00		 cmp	 QWORD PTR $T8[rsp], 0
  00195	74 1f		 je	 SHORT $LN9@Clone
  00197	48 8b 44 24 70	 mov	 rax, QWORD PTR $T8[rsp]
  0019c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0019f	ba 01 00 00 00	 mov	 edx, 1
  001a4	48 8b 4c 24 70	 mov	 rcx, QWORD PTR $T8[rsp]
  001a9	ff 50 38	 call	 QWORD PTR [rax+56]
  001ac	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR tv163[rsp], rax
  001b4	eb 0c		 jmp	 SHORT $LN2@Clone
$LN9@Clone:
  001b6	48 c7 84 24 88
	00 00 00 00 00
	00 00		 mov	 QWORD PTR tv163[rsp], 0
$LN2@Clone:

; 5615 : 		}
; 5616 : 	}
; 5617 : 
; 5618 : 	return hRes;

  001c2	8b 44 24 30	 mov	 eax, DWORD PTR hRes$[rsp]

; 5619 : }

  001c6	8b f8		 mov	 edi, eax
  001c8	48 8b cc	 mov	 rcx, rsp
  001cb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z$rtcFrameData
  001d2	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001d7	8b c7		 mov	 eax, edi
  001d9	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  001e0	5f		 pop	 rdi
  001e1	c3		 ret	 0
?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z ENDP ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Clone
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Reset@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJXZ
_TEXT	SEGMENT
this$ = 16
?Reset@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJXZ PROC ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Reset, COMDAT

; 5512 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 5513 : 		m_iter = m_begin;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00010	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00014	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 5514 : 		return S_OK;

  00018	33 c0		 xor	 eax, eax

; 5515 : 	}

  0001a	5f		 pop	 rdi
  0001b	c3		 ret	 0
?Reset@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJXZ ENDP ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Skip@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJK@Z
_TEXT	SEGMENT
nRem$ = 0
nSkip$ = 4
tv70 = 8
tv77 = 12
this$ = 32
celt$ = 40
?Skip@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJK@Z PROC ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Skip, COMDAT

; 5586 : {

$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 10	 sub	 rsp, 16
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 04 00 00 00	 mov	 ecx, 4
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 5587 : 	ULONG nRem = ULONG(m_end - m_iter);

  00022	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00027	48 8b 4c 24 20	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	48 8b 49 20	 mov	 rcx, QWORD PTR [rcx+32]
  00030	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00034	48 2b c1	 sub	 rax, rcx
  00037	48 c1 f8 04	 sar	 rax, 4
  0003b	89 04 24	 mov	 DWORD PTR nRem$[rsp], eax

; 5588 : 	ULONG nSkip = (celt > nRem) ? nRem : celt;

  0003e	8b 04 24	 mov	 eax, DWORD PTR nRem$[rsp]
  00041	39 44 24 28	 cmp	 DWORD PTR celt$[rsp], eax
  00045	76 09		 jbe	 SHORT $LN3@Skip
  00047	8b 04 24	 mov	 eax, DWORD PTR nRem$[rsp]
  0004a	89 44 24 08	 mov	 DWORD PTR tv70[rsp], eax
  0004e	eb 08		 jmp	 SHORT $LN4@Skip
$LN3@Skip:
  00050	8b 44 24 28	 mov	 eax, DWORD PTR celt$[rsp]
  00054	89 44 24 08	 mov	 DWORD PTR tv70[rsp], eax
$LN4@Skip:
  00058	8b 44 24 08	 mov	 eax, DWORD PTR tv70[rsp]
  0005c	89 44 24 04	 mov	 DWORD PTR nSkip$[rsp], eax

; 5589 : 	m_iter += nSkip;

  00060	8b 44 24 04	 mov	 eax, DWORD PTR nSkip$[rsp]
  00064	48 6b c0 10	 imul	 rax, rax, 16
  00068	48 8b 4c 24 20	 mov	 rcx, QWORD PTR this$[rsp]
  0006d	48 03 41 20	 add	 rax, QWORD PTR [rcx+32]
  00071	48 8b 4c 24 20	 mov	 rcx, QWORD PTR this$[rsp]
  00076	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 5590 : 	return (celt == nSkip) ? S_OK : S_FALSE;

  0007a	8b 44 24 04	 mov	 eax, DWORD PTR nSkip$[rsp]
  0007e	39 44 24 28	 cmp	 DWORD PTR celt$[rsp], eax
  00082	75 0a		 jne	 SHORT $LN5@Skip
  00084	c7 44 24 0c 00
	00 00 00	 mov	 DWORD PTR tv77[rsp], 0
  0008c	eb 08		 jmp	 SHORT $LN6@Skip
$LN5@Skip:
  0008e	c7 44 24 0c 01
	00 00 00	 mov	 DWORD PTR tv77[rsp], 1
$LN6@Skip:
  00096	8b 44 24 0c	 mov	 eax, DWORD PTR tv77[rsp]

; 5591 : }

  0009a	48 83 c4 10	 add	 rsp, 16
  0009e	5f		 pop	 rdi
  0009f	c3		 ret	 0
?Skip@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJK@Z ENDP ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Skip
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Next@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJKPEAUtagCONNECTDATA@@PEAK@Z
_TEXT	SEGMENT
nRem$ = 32
hRes$ = 36
nMin$ = 40
pelt$ = 48
hr$1 = 56
tv81 = 60
tv84 = 64
tv93 = 72
this$ = 96
celt$ = 104
rgelt$ = 112
pceltFetched$ = 120
?Next@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJKPEAUtagCONNECTDATA@@PEAK@Z PROC ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Next, COMDAT

; 5552 : {

$LN18:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 14 00 00 00	 mov	 ecx, 20
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 5553 : 	if (pceltFetched != NULL)

  0002c	48 83 7c 24 78
	00		 cmp	 QWORD PTR pceltFetched$[rsp], 0
  00032	74 0b		 je	 SHORT $LN6@Next

; 5554 : 		*pceltFetched = 0;

  00034	48 8b 44 24 78	 mov	 rax, QWORD PTR pceltFetched$[rsp]
  00039	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN6@Next:

; 5555 : 	if (rgelt == NULL || (celt > 1 && pceltFetched == NULL))

  0003f	48 83 7c 24 70
	00		 cmp	 QWORD PTR rgelt$[rsp], 0
  00045	74 0f		 je	 SHORT $LN8@Next
  00047	83 7c 24 68 01	 cmp	 DWORD PTR celt$[rsp], 1
  0004c	76 12		 jbe	 SHORT $LN7@Next
  0004e	48 83 7c 24 78
	00		 cmp	 QWORD PTR pceltFetched$[rsp], 0
  00054	75 0a		 jne	 SHORT $LN7@Next
$LN8@Next:

; 5556 : 		return E_POINTER;

  00056	b8 03 40 00 80	 mov	 eax, -2147467261	; ffffffff80004003H
  0005b	e9 57 01 00 00	 jmp	 $LN1@Next
$LN7@Next:

; 5557 : 	if (m_begin == NULL || m_end == NULL || m_iter == NULL)

  00060	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00065	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  0006a	74 18		 je	 SHORT $LN10@Next
  0006c	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00071	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  00076	74 0c		 je	 SHORT $LN10@Next
  00078	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0007d	48 83 78 20 00	 cmp	 QWORD PTR [rax+32], 0
  00082	75 0a		 jne	 SHORT $LN9@Next
$LN10@Next:

; 5558 : 		return E_FAIL;

  00084	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  00089	e9 29 01 00 00	 jmp	 $LN1@Next
$LN9@Next:

; 5559 : 	ULONG nRem = (ULONG)(m_end - m_iter);

  0008e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00093	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00098	48 8b 49 20	 mov	 rcx, QWORD PTR [rcx+32]
  0009c	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 c1 f8 04	 sar	 rax, 4
  000a7	89 44 24 20	 mov	 DWORD PTR nRem$[rsp], eax

; 5560 : 	HRESULT hRes = S_OK;

  000ab	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR hRes$[rsp], 0

; 5561 : 	if (nRem < celt)

  000b3	8b 44 24 68	 mov	 eax, DWORD PTR celt$[rsp]
  000b7	39 44 24 20	 cmp	 DWORD PTR nRem$[rsp], eax
  000bb	73 08		 jae	 SHORT $LN11@Next

; 5562 : 		hRes = S_FALSE;

  000bd	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR hRes$[rsp], 1
$LN11@Next:

; 5563 : 	ULONG nMin = celt < nRem ? celt : nRem ;

  000c5	8b 44 24 20	 mov	 eax, DWORD PTR nRem$[rsp]
  000c9	39 44 24 68	 cmp	 DWORD PTR celt$[rsp], eax
  000cd	73 0a		 jae	 SHORT $LN16@Next
  000cf	8b 44 24 68	 mov	 eax, DWORD PTR celt$[rsp]
  000d3	89 44 24 3c	 mov	 DWORD PTR tv81[rsp], eax
  000d7	eb 08		 jmp	 SHORT $LN17@Next
$LN16@Next:
  000d9	8b 44 24 20	 mov	 eax, DWORD PTR nRem$[rsp]
  000dd	89 44 24 3c	 mov	 DWORD PTR tv81[rsp], eax
$LN17@Next:
  000e1	8b 44 24 3c	 mov	 eax, DWORD PTR tv81[rsp]
  000e5	89 44 24 28	 mov	 DWORD PTR nMin$[rsp], eax

; 5564 : 	if (pceltFetched != NULL)

  000e9	48 83 7c 24 78
	00		 cmp	 QWORD PTR pceltFetched$[rsp], 0
  000ef	74 0b		 je	 SHORT $LN12@Next

; 5565 : 		*pceltFetched = nMin;

  000f1	48 8b 44 24 78	 mov	 rax, QWORD PTR pceltFetched$[rsp]
  000f6	8b 4c 24 28	 mov	 ecx, DWORD PTR nMin$[rsp]
  000fa	89 08		 mov	 DWORD PTR [rax], ecx
$LN12@Next:

; 5566 : 	T* pelt = rgelt;

  000fc	48 8b 44 24 70	 mov	 rax, QWORD PTR rgelt$[rsp]
  00101	48 89 44 24 30	 mov	 QWORD PTR pelt$[rsp], rax
$LN2@Next:

; 5567 : 	while(nMin--)

  00106	8b 44 24 28	 mov	 eax, DWORD PTR nMin$[rsp]
  0010a	89 44 24 40	 mov	 DWORD PTR tv84[rsp], eax
  0010e	8b 44 24 28	 mov	 eax, DWORD PTR nMin$[rsp]
  00112	ff c8		 dec	 eax
  00114	89 44 24 28	 mov	 DWORD PTR nMin$[rsp], eax
  00118	83 7c 24 40 00	 cmp	 DWORD PTR tv84[rsp], 0
  0011d	0f 84 90 00 00
	00		 je	 $LN3@Next

; 5568 : 	{
; 5569 : 		HRESULT hr = Copy::copy(pelt, m_iter);

  00123	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00128	48 8b 50 20	 mov	 rdx, QWORD PTR [rax+32]
  0012c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pelt$[rsp]
  00131	e8 00 00 00 00	 call	 ?copy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAJPEAUtagCONNECTDATA@@PEBU3@@Z ; ATL::_Copy<tagCONNECTDATA>::copy
  00136	89 44 24 38	 mov	 DWORD PTR hr$1[rsp], eax

; 5570 : 		if (FAILED(hr))

  0013a	83 7c 24 38 00	 cmp	 DWORD PTR hr$1[rsp], 0
  0013f	7d 49		 jge	 SHORT $LN13@Next
$LN4@Next:

; 5571 : 		{
; 5572 : 			while (rgelt < pelt)

  00141	48 8b 44 24 30	 mov	 rax, QWORD PTR pelt$[rsp]
  00146	48 39 44 24 70	 cmp	 QWORD PTR rgelt$[rsp], rax
  0014b	73 24		 jae	 SHORT $LN5@Next

; 5573 : 				Copy::destroy(rgelt++);

  0014d	48 8b 44 24 70	 mov	 rax, QWORD PTR rgelt$[rsp]
  00152	48 89 44 24 48	 mov	 QWORD PTR tv93[rsp], rax
  00157	48 8b 44 24 70	 mov	 rax, QWORD PTR rgelt$[rsp]
  0015c	48 83 c0 10	 add	 rax, 16
  00160	48 89 44 24 70	 mov	 QWORD PTR rgelt$[rsp], rax
  00165	48 8b 4c 24 48	 mov	 rcx, QWORD PTR tv93[rsp]
  0016a	e8 00 00 00 00	 call	 ?destroy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z ; ATL::_Copy<tagCONNECTDATA>::destroy
  0016f	eb d0		 jmp	 SHORT $LN4@Next
$LN5@Next:

; 5574 : 			if (pceltFetched != NULL)

  00171	48 83 7c 24 78
	00		 cmp	 QWORD PTR pceltFetched$[rsp], 0
  00177	74 0b		 je	 SHORT $LN14@Next

; 5575 : 				*pceltFetched = 0;

  00179	48 8b 44 24 78	 mov	 rax, QWORD PTR pceltFetched$[rsp]
  0017e	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN14@Next:

; 5576 : 			return hr;

  00184	8b 44 24 38	 mov	 eax, DWORD PTR hr$1[rsp]
  00188	eb 2d		 jmp	 SHORT $LN1@Next
$LN13@Next:

; 5577 : 		}
; 5578 : 		pelt++;

  0018a	48 8b 44 24 30	 mov	 rax, QWORD PTR pelt$[rsp]
  0018f	48 83 c0 10	 add	 rax, 16
  00193	48 89 44 24 30	 mov	 QWORD PTR pelt$[rsp], rax

; 5579 : 		m_iter++;

  00198	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0019d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  001a1	48 83 c0 10	 add	 rax, 16
  001a5	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  001aa	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 5580 : 	}

  001ae	e9 53 ff ff ff	 jmp	 $LN2@Next
$LN3@Next:

; 5581 : 	return hRes;

  001b3	8b 44 24 24	 mov	 eax, DWORD PTR hRes$[rsp]
$LN1@Next:

; 5582 : }

  001b7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  001bb	5f		 pop	 rdi
  001bc	c3		 ret	 0
?Next@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAAJKPEAUtagCONNECTDATA@@PEAK@Z ENDP ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Next
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAA@XZ
_TEXT	SEGMENT
p$1 = 32
$T2 = 40
this$ = 64
??1?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAA@XZ PROC ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::~CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >, COMDAT

; 5538 : {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 5539 : 	if (m_dwFlags & BitOwn)

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	8b 40 28	 mov	 eax, DWORD PTR [rax+40]
  00026	83 e0 02	 and	 eax, 2
  00029	85 c0		 test	 eax, eax
  0002b	74 52		 je	 SHORT $LN5@CComEnumIm

; 5540 : 	{
; 5541 : 		for (T* p = m_begin; p != m_end; p++)

  0002d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00036	48 89 44 24 20	 mov	 QWORD PTR p$1[rsp], rax
  0003b	eb 0e		 jmp	 SHORT $LN4@CComEnumIm
$LN2@CComEnumIm:
  0003d	48 8b 44 24 20	 mov	 rax, QWORD PTR p$1[rsp]
  00042	48 83 c0 10	 add	 rax, 16
  00046	48 89 44 24 20	 mov	 QWORD PTR p$1[rsp], rax
$LN4@CComEnumIm:
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00054	48 39 44 24 20	 cmp	 QWORD PTR p$1[rsp], rax
  00059	74 0c		 je	 SHORT $LN3@CComEnumIm

; 5542 : 			Copy::destroy(p);

  0005b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR p$1[rsp]
  00060	e8 00 00 00 00	 call	 ?destroy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z ; ATL::_Copy<tagCONNECTDATA>::destroy
  00065	eb d6		 jmp	 SHORT $LN2@CComEnumIm
$LN3@CComEnumIm:

; 5543 : 		delete [] m_begin;

  00067	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006c	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00070	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  00075	48 8b 4c 24 28	 mov	 rcx, QWORD PTR $T2[rsp]
  0007a	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]
$LN5@CComEnumIm:

; 5544 : 	}
; 5545 : }

  0007f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00084	48 83 c0 08	 add	 rax, 8
  00088	48 8b c8	 mov	 rcx, rax
  0008b	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ
  00090	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00094	5f		 pop	 rdi
  00095	c3		 ret	 0
??1?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UEAA@XZ ENDP ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::~CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??0?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QEAA@XZ PROC ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >, COMDAT

; 5499 : 	CComEnumImpl()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 5500 : 	{

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IEnumConnections@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 5501 : 		m_begin = m_end = m_iter = NULL;

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00053	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00058	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0

; 5502 : 		m_dwFlags = 0;

  00060	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00065	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [rax+40], 0

; 5503 : 	}

  0006c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00071	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00075	5f		 pop	 rdi
  00076	c3		 ret	 0
??0?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??__E?pConnMap@?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@0PEBU_ATL_CONNMAP_ENTRY@2@EB@@YAXXZ
text$di	SEGMENT
??__E?pConnMap@?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@0PEBU_ATL_CONNMAP_ENTRY@2@EB@@YAXXZ PROC ; `dynamic initializer for 'ATL::IConnectionPointContainerImpl<COPOSVideoCapture>::pConnMap'', COMDAT

; 6573 : __declspec(selectany) const ATL::_ATL_CONNMAP_ENTRY* IConnectionPointContainerImpl<T>::pConnMap = T::GetConnMap(NULL);

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	33 c9		 xor	 ecx, ecx
  00017	e8 00 00 00 00	 call	 ?GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z ; COPOSVideoCapture::GetConnMap
  0001c	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?pConnMap@?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@0PEBU_ATL_CONNMAP_ENTRY@2@EB, rax ; ATL::IConnectionPointContainerImpl<COPOSVideoCapture>::pConnMap
  00023	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00027	5f		 pop	 rdi
  00028	c3		 ret	 0
??__E?pConnMap@?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@0PEBU_ATL_CONNMAP_ENTRY@2@EB@@YAXXZ ENDP ; `dynamic initializer for 'ATL::IConnectionPointContainerImpl<COPOSVideoCapture>::pConnMap''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_CWNCC@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_CWNCC@@QEAA@XZ PROC					; _CWNCC::~_CWNCC, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1_CW@@QEAA@XZ		; _CW::~_CW
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1_CWNCC@@QEAA@XZ ENDP					; _CWNCC::~_CWNCC
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\CWString.h
;	COMDAT ??B_CWNCC@@QEAAPEA_WXZ
_TEXT	SEGMENT
this$ = 48
??B_CWNCC@@QEAAPEA_WXZ PROC				; _CWNCC::operator wchar_t *, COMDAT

; 260  :         { return (wchar_t*) operator const wchar_t*(); }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??B_CW@@QEAAPEB_WXZ	; _CW::operator wchar_t const *
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??B_CWNCC@@QEAAPEA_WXZ ENDP				; _CWNCC::operator wchar_t *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\CWString.h
;	COMDAT ??0_CWNCC@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pChar$ = 56
??0_CWNCC@@QEAA@PEBD@Z PROC				; _CWNCC::_CWNCC, COMDAT

; 240  :     _CWNCC(const char* pChar)               // Construct from char string.

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 241  :       : _CW(pChar)          {}

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR pChar$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_CW@@QEAA@PEBD@Z	; _CW::_CW
  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0_CWNCC@@QEAA@PEBD@Z ENDP				; _CWNCC::_CWNCC
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\CWString.h
;	COMDAT ??1_CW@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
??1_CW@@QEAA@XZ PROC					; _CW::~_CW, COMDAT

; 227  :         {   if (m_nDupFlag == 'c')      delete [] m_pChar;

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f be 40 18	 movsx	 eax, BYTE PTR [rax+24]
  00027	83 f8 63	 cmp	 eax, 99			; 00000063H
  0002a	75 19		 jne	 SHORT $LN2@CW
  0002c	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00034	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00039	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0003e	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]
  00043	eb 26		 jmp	 SHORT $LN3@CW
$LN2@CW:

; 228  :             else if (m_nDupFlag == 'w') delete [] m_pWide;

  00045	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004a	0f be 40 18	 movsx	 eax, BYTE PTR [rax+24]
  0004e	83 f8 77	 cmp	 eax, 119		; 00000077H
  00051	75 18		 jne	 SHORT $LN4@CW
  00053	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00058	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005c	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  00061	48 8b 4c 24 28	 mov	 rcx, QWORD PTR $T2[rsp]
  00066	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]
$LN4@CW:
$LN3@CW:

; 229  :         }

  0006b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006f	5f		 pop	 rdi
  00070	c3		 ret	 0
??1_CW@@QEAA@XZ ENDP					; _CW::~_CW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\CWString.h
;	COMDAT ??B_CW@@QEAAPEB_WXZ
_TEXT	SEGMENT
this$ = 48
??B_CW@@QEAAPEB_WXZ PROC				; _CW::operator wchar_t const *, COMDAT

; 213  :         {   // If pointer not init, then duplicate.

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 214  :             if (m_pWide == (wchar_t*)-1) DupWide();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 ff	 cmp	 QWORD PTR [rax+8], -1
  00028	75 0a		 jne	 SHORT $LN2@operator
  0002a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002f	e8 00 00 00 00	 call	 ?DupWide@_CW@@AEAAXXZ	; _CW::DupWide
$LN2@operator:

; 215  :             return m_pWide;

  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 216  :         }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??B_CW@@QEAAPEB_WXZ ENDP				; _CW::operator wchar_t const *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\CWString.h
;	COMDAT ??0_CW@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 16
pWide$ = 24
??0_CW@@QEAA@PEB_W@Z PROC				; _CW::_CW, COMDAT

; 197  :         m_pWide((wchar_t*)pWide), m_nCharsWide(-1)      {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 196  :       : m_pChar((char*)-1),       m_nDupFlag(0),

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 c7 00 ff ff
	ff ff		 mov	 QWORD PTR [rax], -1

; 197  :         m_pWide((wchar_t*)pWide), m_nCharsWide(-1)      {}

  00017	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 4c 24 18	 mov	 rcx, QWORD PTR pWide$[rsp]
  00021	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	c7 40 14 ff ff
	ff ff		 mov	 DWORD PTR [rax+20], -1

; 196  :       : m_pChar((char*)-1),       m_nDupFlag(0),

  00031	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00036	c6 40 18 00	 mov	 BYTE PTR [rax+24], 0

; 197  :         m_pWide((wchar_t*)pWide), m_nCharsWide(-1)      {}

  0003a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
??0_CW@@QEAA@PEB_W@Z ENDP				; _CW::_CW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\CWString.h
;	COMDAT ??0_CW@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 16
pChar$ = 24
??0_CW@@QEAA@PEBD@Z PROC				; _CW::_CW, COMDAT

; 183  :           m_pWide((wchar_t*)-1), m_nDupFlag(0)          {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 182  :         : m_pChar((char*)pChar), m_nChars(-1),

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR pChar$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx

; 183  :           m_pWide((wchar_t*)-1), m_nDupFlag(0)          {}

  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 c7 40 08 ff
	ff ff ff	 mov	 QWORD PTR [rax+8], -1

; 182  :         : m_pChar((char*)pChar), m_nChars(-1),

  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	c7 40 10 ff ff
	ff ff		 mov	 DWORD PTR [rax+16], -1

; 183  :           m_pWide((wchar_t*)-1), m_nDupFlag(0)          {}

  00031	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00036	c6 40 18 00	 mov	 BYTE PTR [rax+24], 0
  0003a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
??0_CW@@QEAA@PEBD@Z ENDP				; _CW::_CW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
Vars$ = 80
hRC$ = 196
$T5 = 224
__$ArrayPad$ = 232
this$ = 256
FileName$ = 264
OverWrite$ = 272
Timeout$ = 280
pRC$ = 288
?TakePhoto@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z PROC	; COPOSVideoCapture::TakePhoto

; 1293 : {

$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	66 44 89 44 24
	18		 mov	 WORD PTR [rsp+24], r8w
  0000b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00010	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00015	57		 push	 rdi
  00016	48 81 ec f0 00
	00 00		 sub	 rsp, 240		; 000000f0H
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR [rsp+256]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c4	 xor	 rax, rsp
  0003e	48 89 84 24 e8
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1294 :     OposVariant Vars[3];

  00046	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??0OposVariant@@QEAA@XZ ; OposVariant::OposVariant
  0004d	41 b8 03 00 00
	00		 mov	 r8d, 3
  00053	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00058	48 8d 4c 24 50	 lea	 rcx, QWORD PTR Vars$[rsp]
  0005d	e8 00 00 00 00	 call	 ??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 1295 :     HRESULT hRC = S_OK;

  00062	c7 84 24 c4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR hRC$[rsp], 0

; 1296 :     Vars[2].SetBSTR( FileName, hRC );

  0006d	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00072	48 6b c0 02	 imul	 rax, rax, 2
  00076	48 8d 44 04 50	 lea	 rax, QWORD PTR Vars$[rsp+rax]
  0007b	4c 8d 84 24 c4
	00 00 00	 lea	 r8, QWORD PTR hRC$[rsp]
  00083	48 8b 94 24 08
	01 00 00	 mov	 rdx, QWORD PTR FileName$[rsp]
  0008b	48 8b c8	 mov	 rcx, rax
  0008e	e8 00 00 00 00	 call	 ?SetBSTR@OposVariant@@QEAAXPEA_WAEAJ@Z ; OposVariant::SetBSTR

; 1297 :     Vars[1].SetVARIANT_BOOL( OverWrite );

  00093	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00098	48 6b c0 01	 imul	 rax, rax, 1
  0009c	48 8d 44 04 50	 lea	 rax, QWORD PTR Vars$[rsp+rax]
  000a1	0f b7 94 24 10
	01 00 00	 movzx	 edx, WORD PTR OverWrite$[rsp]
  000a9	48 8b c8	 mov	 rcx, rax
  000ac	e8 00 00 00 00	 call	 ?SetVARIANT_BOOL@OposVariant@@QEAAXF@Z ; OposVariant::SetVARIANT_BOOL

; 1298 :     Vars[0].SetLONG( Timeout );

  000b1	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  000b6	48 6b c0 00	 imul	 rax, rax, 0
  000ba	48 8d 44 04 50	 lea	 rax, QWORD PTR Vars$[rsp+rax]
  000bf	8b 94 24 18 01
	00 00		 mov	 edx, DWORD PTR Timeout$[rsp]
  000c6	48 8b c8	 mov	 rcx, rax
  000c9	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QEAAXJ@Z ; OposVariant::SetLONG

; 1299 :     return DoInvoke( DEBUGPARAM("TakePhoto") hRC, Vars, 2, nDITakePhoto, pRC );

  000ce	c6 44 24 38 01	 mov	 BYTE PTR [rsp+56], 1
  000d3	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  000db	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  000e0	c7 44 24 28 13
	00 00 00	 mov	 DWORD PTR [rsp+40], 19
  000e8	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  000f0	4c 8d 4c 24 50	 lea	 r9, QWORD PTR Vars$[rsp]
  000f5	44 8b 84 24 c4
	00 00 00	 mov	 r8d, DWORD PTR hRC$[rsp]
  000fd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193746
  00104	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0010c	e8 00 00 00 00	 call	 ?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z ; COPOSVideoCapture::DoInvoke
  00111	89 84 24 e0 00
	00 00		 mov	 DWORD PTR $T5[rsp], eax
  00118	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1OposVariant@@QEAA@XZ ; OposVariant::~OposVariant
  0011f	41 b8 03 00 00
	00		 mov	 r8d, 3
  00125	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0012a	48 8d 4c 24 50	 lea	 rcx, QWORD PTR Vars$[rsp]
  0012f	e8 00 00 00 00	 call	 ??_I@YAXPEAX_K1P6AX0@Z@Z
  00134	8b 84 24 e0 00
	00 00		 mov	 eax, DWORD PTR $T5[rsp]

; 1300 : }

  0013b	8b f8		 mov	 edi, eax
  0013d	48 8b cc	 mov	 rcx, rsp
  00140	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?TakePhoto@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z$rtcFrameData
  00147	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0014c	8b c7		 mov	 eax, edi
  0014e	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00156	48 33 cc	 xor	 rcx, rsp
  00159	e8 00 00 00 00	 call	 __security_check_cookie
  0015e	48 81 c4 f0 00
	00 00		 add	 rsp, 240		; 000000f0H
  00165	5f		 pop	 rdi
  00166	c3		 ret	 0
?TakePhoto@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z ENDP	; COPOSVideoCapture::TakePhoto
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 80
pRC$ = 88
?StopVideo@COPOSVideoCapture@@UEAAJPEAJ@Z PROC		; COPOSVideoCapture::StopVideo

; 1282 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1283 :     return DoInvoke( DEBUGPARAM("StopVideo") S_OK, NULL, 0, nDIStopVideo, pRC );

  00023	c6 44 24 38 01	 mov	 BYTE PTR [rsp+56], 1
  00028	48 8b 44 24 58	 mov	 rax, QWORD PTR pRC$[rsp]
  0002d	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00032	c7 44 24 28 12
	00 00 00	 mov	 DWORD PTR [rsp+40], 18
  0003a	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00042	45 33 c9	 xor	 r9d, r9d
  00045	45 33 c0	 xor	 r8d, r8d
  00048	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193732
  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00054	e8 00 00 00 00	 call	 ?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z ; COPOSVideoCapture::DoInvoke

; 1284 : }

  00059	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
?StopVideo@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP		; COPOSVideoCapture::StopVideo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
Vars$ = 80
hRC$ = 196
$T5 = 224
__$ArrayPad$ = 232
this$ = 256
FileName$ = 264
OverWrite$ = 272
RecordingTime$ = 280
pRC$ = 288
?StartVideo@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z PROC	; COPOSVideoCapture::StartVideo

; 1269 : {

$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	66 44 89 44 24
	18		 mov	 WORD PTR [rsp+24], r8w
  0000b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00010	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00015	57		 push	 rdi
  00016	48 81 ec f0 00
	00 00		 sub	 rsp, 240		; 000000f0H
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR [rsp+256]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c4	 xor	 rax, rsp
  0003e	48 89 84 24 e8
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1270 :     OposVariant Vars[3];

  00046	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??0OposVariant@@QEAA@XZ ; OposVariant::OposVariant
  0004d	41 b8 03 00 00
	00		 mov	 r8d, 3
  00053	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00058	48 8d 4c 24 50	 lea	 rcx, QWORD PTR Vars$[rsp]
  0005d	e8 00 00 00 00	 call	 ??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 1271 :     HRESULT hRC = S_OK;

  00062	c7 84 24 c4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR hRC$[rsp], 0

; 1272 :     Vars[2].SetBSTR( FileName, hRC );

  0006d	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00072	48 6b c0 02	 imul	 rax, rax, 2
  00076	48 8d 44 04 50	 lea	 rax, QWORD PTR Vars$[rsp+rax]
  0007b	4c 8d 84 24 c4
	00 00 00	 lea	 r8, QWORD PTR hRC$[rsp]
  00083	48 8b 94 24 08
	01 00 00	 mov	 rdx, QWORD PTR FileName$[rsp]
  0008b	48 8b c8	 mov	 rcx, rax
  0008e	e8 00 00 00 00	 call	 ?SetBSTR@OposVariant@@QEAAXPEA_WAEAJ@Z ; OposVariant::SetBSTR

; 1273 :     Vars[1].SetVARIANT_BOOL( OverWrite );

  00093	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00098	48 6b c0 01	 imul	 rax, rax, 1
  0009c	48 8d 44 04 50	 lea	 rax, QWORD PTR Vars$[rsp+rax]
  000a1	0f b7 94 24 10
	01 00 00	 movzx	 edx, WORD PTR OverWrite$[rsp]
  000a9	48 8b c8	 mov	 rcx, rax
  000ac	e8 00 00 00 00	 call	 ?SetVARIANT_BOOL@OposVariant@@QEAAXF@Z ; OposVariant::SetVARIANT_BOOL

; 1274 :     Vars[0].SetLONG( RecordingTime );

  000b1	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  000b6	48 6b c0 00	 imul	 rax, rax, 0
  000ba	48 8d 44 04 50	 lea	 rax, QWORD PTR Vars$[rsp+rax]
  000bf	8b 94 24 18 01
	00 00		 mov	 edx, DWORD PTR RecordingTime$[rsp]
  000c6	48 8b c8	 mov	 rcx, rax
  000c9	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QEAAXJ@Z ; OposVariant::SetLONG

; 1275 :     return DoInvoke( DEBUGPARAM("StartVideo") hRC, Vars, 3, nDIStartVideo, pRC );

  000ce	c6 44 24 38 01	 mov	 BYTE PTR [rsp+56], 1
  000d3	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  000db	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  000e0	c7 44 24 28 11
	00 00 00	 mov	 DWORD PTR [rsp+40], 17
  000e8	c7 44 24 20 03
	00 00 00	 mov	 DWORD PTR [rsp+32], 3
  000f0	4c 8d 4c 24 50	 lea	 r9, QWORD PTR Vars$[rsp]
  000f5	44 8b 84 24 c4
	00 00 00	 mov	 r8d, DWORD PTR hRC$[rsp]
  000fd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193726
  00104	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0010c	e8 00 00 00 00	 call	 ?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z ; COPOSVideoCapture::DoInvoke
  00111	89 84 24 e0 00
	00 00		 mov	 DWORD PTR $T5[rsp], eax
  00118	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1OposVariant@@QEAA@XZ ; OposVariant::~OposVariant
  0011f	41 b8 03 00 00
	00		 mov	 r8d, 3
  00125	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0012a	48 8d 4c 24 50	 lea	 rcx, QWORD PTR Vars$[rsp]
  0012f	e8 00 00 00 00	 call	 ??_I@YAXPEAX_K1P6AX0@Z@Z
  00134	8b 84 24 e0 00
	00 00		 mov	 eax, DWORD PTR $T5[rsp]

; 1276 : }

  0013b	8b f8		 mov	 edi, eax
  0013d	48 8b cc	 mov	 rcx, rsp
  00140	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?StartVideo@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z$rtcFrameData
  00147	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0014c	8b c7		 mov	 eax, edi
  0014e	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00156	48 33 cc	 xor	 rcx, rsp
  00159	e8 00 00 00 00	 call	 __security_check_cookie
  0015e	48 81 c4 f0 00
	00 00		 add	 rsp, 240		; 000000f0H
  00165	5f		 pop	 rdi
  00166	c3		 ret	 0
?StartVideo@COPOSVideoCapture@@UEAAJPEA_WFJPEAJ@Z ENDP	; COPOSVideoCapture::StartVideo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pVideoTypeList$ = 72
?get_VideoTypeList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC ; COPOSVideoCapture::get_VideoTypeList

; 2096 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2097 :     return GetOposProp( DEBUGPARAM("VideoTypeList") PIDXVcap_VideoTypeList, pVideoTypeList, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pVideoTypeList$[rsp]
  00030	41 b8 2c ee 0f
	00		 mov	 r8d, 1044012		; 000fee2cH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194283
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 2098 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_VideoTypeList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP ; COPOSVideoCapture::get_VideoTypeList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
VideoType$ = 72
?put_VideoType@COPOSVideoCapture@@UEAAJPEA_W@Z PROC	; COPOSVideoCapture::put_VideoType

; 2089 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2090 :     return SetOposProp( DEBUGPARAM("VideoType") PIDXVcap_VideoType, VideoType, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR VideoType$[rsp]
  00030	41 b8 2b ee 0f
	00		 mov	 r8d, 1044011		; 000fee2bH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194278
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z ; COPOSVideoCapture::SetOposProp

; 2091 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?put_VideoType@COPOSVideoCapture@@UEAAJPEA_W@Z ENDP	; COPOSVideoCapture::put_VideoType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pVideoType$ = 72
?get_VideoType@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC	; COPOSVideoCapture::get_VideoType

; 2082 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2083 :     return GetOposProp( DEBUGPARAM("VideoType") PIDXVcap_VideoType, pVideoType, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pVideoType$[rsp]
  00030	41 b8 2b ee 0f
	00		 mov	 r8d, 1044011		; 000fee2bH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194273
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 2084 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_VideoType@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP	; COPOSVideoCapture::get_VideoType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pVideoResolutionList$ = 72
?get_VideoResolutionList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC ; COPOSVideoCapture::get_VideoResolutionList

; 2075 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2076 :     return GetOposProp( DEBUGPARAM("VideoResolutionList") PIDXVcap_VideoResolutionList, pVideoResolutionList, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pVideoResolutionList$[rsp]
  00030	41 b8 2a ee 0f
	00		 mov	 r8d, 1044010		; 000fee2aH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194268
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 2077 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_VideoResolutionList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP ; COPOSVideoCapture::get_VideoResolutionList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
VideoResolution$ = 72
?put_VideoResolution@COPOSVideoCapture@@UEAAJPEA_W@Z PROC ; COPOSVideoCapture::put_VideoResolution

; 2068 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2069 :     return SetOposProp( DEBUGPARAM("VideoResolution") PIDXVcap_VideoResolution, VideoResolution, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR VideoResolution$[rsp]
  00030	41 b8 29 ee 0f
	00		 mov	 r8d, 1044009		; 000fee29H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194263
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z ; COPOSVideoCapture::SetOposProp

; 2070 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?put_VideoResolution@COPOSVideoCapture@@UEAAJPEA_W@Z ENDP ; COPOSVideoCapture::put_VideoResolution
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pVideoResolution$ = 72
?get_VideoResolution@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC ; COPOSVideoCapture::get_VideoResolution

; 2061 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2062 :     return GetOposProp( DEBUGPARAM("VideoResolution") PIDXVcap_VideoResolution, pVideoResolution, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pVideoResolution$[rsp]
  00030	41 b8 29 ee 0f
	00		 mov	 r8d, 1044009		; 000fee29H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194258
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 2063 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_VideoResolution@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP ; COPOSVideoCapture::get_VideoResolution
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pVideoMaxFrameRate$ = 72
?get_VideoMaxFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z PROC ; COPOSVideoCapture::get_VideoMaxFrameRate

; 2054 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2055 :     return GetOposProp( DEBUGPARAM("VideoMaxFrameRate") PIDXVcap_VideoMaxFrameRate, pVideoMaxFrameRate, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pVideoMaxFrameRate$[rsp]
  00030	41 b8 f3 ab 00
	00		 mov	 r8d, 44019		; 0000abf3H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194253
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 2056 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_VideoMaxFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP ; COPOSVideoCapture::get_VideoMaxFrameRate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
VideoFrameRate$ = 72
?put_VideoFrameRate@COPOSVideoCapture@@UEAAJJ@Z PROC	; COPOSVideoCapture::put_VideoFrameRate

; 2047 : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2048 :     return SetOposProp( DEBUGPARAM("VideoFrameRate") PIDXVcap_VideoFrameRate, VideoFrameRate, 16 /*MinorVersion*/ );

  00022	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002a	44 8b 4c 24 48	 mov	 r9d, DWORD PTR VideoFrameRate$[rsp]
  0002f	41 b8 f2 ab 00
	00		 mov	 r8d, 44018		; 0000abf2H
  00035	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194248
  0003c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z ; COPOSVideoCapture::SetOposProp

; 2049 : }

  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?put_VideoFrameRate@COPOSVideoCapture@@UEAAJJ@Z ENDP	; COPOSVideoCapture::put_VideoFrameRate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pVideoFrameRate$ = 72
?get_VideoFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z PROC	; COPOSVideoCapture::get_VideoFrameRate

; 2040 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2041 :     return GetOposProp( DEBUGPARAM("VideoFrameRate") PIDXVcap_VideoFrameRate, pVideoFrameRate, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pVideoFrameRate$[rsp]
  00030	41 b8 f2 ab 00
	00		 mov	 r8d, 44018		; 0000abf2H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194243
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 2042 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_VideoFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP	; COPOSVideoCapture::get_VideoFrameRate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pVideoColorSpaceList$ = 72
?get_VideoColorSpaceList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC ; COPOSVideoCapture::get_VideoColorSpaceList

; 2033 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2034 :     return GetOposProp( DEBUGPARAM("VideoColorSpaceList") PIDXVcap_VideoColorSpaceList, pVideoColorSpaceList, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pVideoColorSpaceList$[rsp]
  00030	41 b8 28 ee 0f
	00		 mov	 r8d, 1044008		; 000fee28H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194238
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 2035 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_VideoColorSpaceList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP ; COPOSVideoCapture::get_VideoColorSpaceList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
VideoColorSpace$ = 72
?put_VideoColorSpace@COPOSVideoCapture@@UEAAJPEA_W@Z PROC ; COPOSVideoCapture::put_VideoColorSpace

; 2026 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2027 :     return SetOposProp( DEBUGPARAM("VideoColorSpace") PIDXVcap_VideoColorSpace, VideoColorSpace, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR VideoColorSpace$[rsp]
  00030	41 b8 27 ee 0f
	00		 mov	 r8d, 1044007		; 000fee27H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194233
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z ; COPOSVideoCapture::SetOposProp

; 2028 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?put_VideoColorSpace@COPOSVideoCapture@@UEAAJPEA_W@Z ENDP ; COPOSVideoCapture::put_VideoColorSpace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pVideoColorSpace$ = 72
?get_VideoColorSpace@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC ; COPOSVideoCapture::get_VideoColorSpace

; 2019 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2020 :     return GetOposProp( DEBUGPARAM("VideoColorSpace") PIDXVcap_VideoColorSpace, pVideoColorSpace, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pVideoColorSpace$[rsp]
  00030	41 b8 27 ee 0f
	00		 mov	 r8d, 1044007		; 000fee27H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194228
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 2021 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_VideoColorSpace@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP ; COPOSVideoCapture::get_VideoColorSpace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
VideoCaptureMode$ = 72
?put_VideoCaptureMode@COPOSVideoCapture@@UEAAJJ@Z PROC	; COPOSVideoCapture::put_VideoCaptureMode

; 2012 : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2013 :     return SetOposProp( DEBUGPARAM("VideoCaptureMode") PIDXVcap_VideoCaptureMode, VideoCaptureMode, 16 /*MinorVersion*/ );

  00022	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002a	44 8b 4c 24 48	 mov	 r9d, DWORD PTR VideoCaptureMode$[rsp]
  0002f	41 b8 f1 ab 00
	00		 mov	 r8d, 44017		; 0000abf1H
  00035	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194223
  0003c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z ; COPOSVideoCapture::SetOposProp

; 2014 : }

  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?put_VideoCaptureMode@COPOSVideoCapture@@UEAAJJ@Z ENDP	; COPOSVideoCapture::put_VideoCaptureMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pVideoCaptureMode$ = 72
?get_VideoCaptureMode@COPOSVideoCapture@@UEAAJPEAJ@Z PROC ; COPOSVideoCapture::get_VideoCaptureMode

; 2005 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2006 :     return GetOposProp( DEBUGPARAM("VideoCaptureMode") PIDXVcap_VideoCaptureMode, pVideoCaptureMode, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pVideoCaptureMode$[rsp]
  00030	41 b8 f1 ab 00
	00		 mov	 r8d, 44017		; 0000abf1H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194218
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 2007 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_VideoCaptureMode@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP ; COPOSVideoCapture::get_VideoCaptureMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
VerticalFlip$ = 72
?put_VerticalFlip@COPOSVideoCapture@@UEAAJF@Z PROC	; COPOSVideoCapture::put_VerticalFlip

; 1998 : {

$LN3:
  00000	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1999 :     return SetOposProp( DEBUGPARAM("VerticalFlip") PIDXVcap_VerticalFlip, VerticalFlip, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	44 0f b7 4c 24
	48		 movzx	 r9d, WORD PTR VerticalFlip$[rsp]
  00031	41 b8 f0 ab 00
	00		 mov	 r8d, 44016		; 0000abf0H
  00037	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194213
  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJFJ@Z ; COPOSVideoCapture::SetOposProp

; 2000 : }

  00048	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?put_VerticalFlip@COPOSVideoCapture@@UEAAJF@Z ENDP	; COPOSVideoCapture::put_VerticalFlip
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pVerticalFlip$ = 72
?get_VerticalFlip@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_VerticalFlip

; 1991 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1992 :     return GetOposProp( DEBUGPARAM("VerticalFlip") PIDXVcap_VerticalFlip, pVerticalFlip, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pVerticalFlip$[rsp]
  00030	41 b8 f0 ab 00
	00		 mov	 r8d, 44016		; 0000abf0H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194208
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1993 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_VerticalFlip@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_VerticalFlip
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
Storage$ = 72
?put_Storage@COPOSVideoCapture@@UEAAJJ@Z PROC		; COPOSVideoCapture::put_Storage

; 1984 : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1985 :     return SetOposProp( DEBUGPARAM("Storage") PIDXVcap_Storage, Storage, 16 /*MinorVersion*/ );

  00022	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002a	44 8b 4c 24 48	 mov	 r9d, DWORD PTR Storage$[rsp]
  0002f	41 b8 ef ab 00
	00		 mov	 r8d, 44015		; 0000abefH
  00035	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194203
  0003c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z ; COPOSVideoCapture::SetOposProp

; 1986 : }

  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?put_Storage@COPOSVideoCapture@@UEAAJJ@Z ENDP		; COPOSVideoCapture::put_Storage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pStorage$ = 72
?get_Storage@COPOSVideoCapture@@UEAAJPEAJ@Z PROC	; COPOSVideoCapture::get_Storage

; 1977 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1978 :     return GetOposProp( DEBUGPARAM("Storage") PIDXVcap_Storage, pStorage, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pStorage$[rsp]
  00030	41 b8 ef ab 00
	00		 mov	 r8d, 44015		; 0000abefH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194198
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1979 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_Storage@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP	; COPOSVideoCapture::get_Storage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
Saturation$ = 72
?put_Saturation@COPOSVideoCapture@@UEAAJJ@Z PROC	; COPOSVideoCapture::put_Saturation

; 1970 : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1971 :     return SetOposProp( DEBUGPARAM("Saturation") PIDXVcap_Saturation, Saturation, 16 /*MinorVersion*/ );

  00022	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002a	44 8b 4c 24 48	 mov	 r9d, DWORD PTR Saturation$[rsp]
  0002f	41 b8 ee ab 00
	00		 mov	 r8d, 44014		; 0000abeeH
  00035	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194193
  0003c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z ; COPOSVideoCapture::SetOposProp

; 1972 : }

  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?put_Saturation@COPOSVideoCapture@@UEAAJJ@Z ENDP	; COPOSVideoCapture::put_Saturation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pSaturation$ = 72
?get_Saturation@COPOSVideoCapture@@UEAAJPEAJ@Z PROC	; COPOSVideoCapture::get_Saturation

; 1963 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1964 :     return GetOposProp( DEBUGPARAM("Saturation") PIDXVcap_Saturation, pSaturation, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pSaturation$[rsp]
  00030	41 b8 ee ab 00
	00		 mov	 r8d, 44014		; 0000abeeH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194188
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1965 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_Saturation@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP	; COPOSVideoCapture::get_Saturation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pRemainingRecordingTimeInSec$ = 72
?get_RemainingRecordingTimeInSec@COPOSVideoCapture@@UEAAJPEAJ@Z PROC ; COPOSVideoCapture::get_RemainingRecordingTimeInSec

; 1956 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1957 :     return GetOposProp(DEBUGPARAM("RemainingRecordingTimeInSec") PIDXVcap_RemainingRecordingTimeInSec, pRemainingRecordingTimeInSec, 16 /*MinorVersion*/);

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pRemainingRecordingTimeInSec$[rsp]
  00030	41 b8 ed ab 00
	00		 mov	 r8d, 44013		; 0000abedH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194183
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1958 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_RemainingRecordingTimeInSec@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP ; COPOSVideoCapture::get_RemainingRecordingTimeInSec
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pPhotoTypeList$ = 72
?get_PhotoTypeList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC ; COPOSVideoCapture::get_PhotoTypeList

; 1949 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1950 :     return GetOposProp( DEBUGPARAM("PhotoTypeList") PIDXVcap_PhotoTypeList, pPhotoTypeList, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pPhotoTypeList$[rsp]
  00030	41 b8 26 ee 0f
	00		 mov	 r8d, 1044006		; 000fee26H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194178
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 1951 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_PhotoTypeList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP ; COPOSVideoCapture::get_PhotoTypeList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
PhotoType$ = 72
?put_PhotoType@COPOSVideoCapture@@UEAAJPEA_W@Z PROC	; COPOSVideoCapture::put_PhotoType

; 1942 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1943 :     return SetOposProp( DEBUGPARAM("PhotoType") PIDXVcap_PhotoType, PhotoType, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR PhotoType$[rsp]
  00030	41 b8 25 ee 0f
	00		 mov	 r8d, 1044005		; 000fee25H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194173
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z ; COPOSVideoCapture::SetOposProp

; 1944 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?put_PhotoType@COPOSVideoCapture@@UEAAJPEA_W@Z ENDP	; COPOSVideoCapture::put_PhotoType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pPhotoType$ = 72
?get_PhotoType@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC	; COPOSVideoCapture::get_PhotoType

; 1935 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1936 :     return GetOposProp( DEBUGPARAM("PhotoType") PIDXVcap_PhotoType, pPhotoType, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pPhotoType$[rsp]
  00030	41 b8 25 ee 0f
	00		 mov	 r8d, 1044005		; 000fee25H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194168
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 1937 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_PhotoType@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP	; COPOSVideoCapture::get_PhotoType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pPhotoResolutionList$ = 72
?get_PhotoResolutionList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC ; COPOSVideoCapture::get_PhotoResolutionList

; 1928 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1929 :     return GetOposProp( DEBUGPARAM("PhotoResolutionList") PIDXVcap_PhotoResolutionList, pPhotoResolutionList, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pPhotoResolutionList$[rsp]
  00030	41 b8 24 ee 0f
	00		 mov	 r8d, 1044004		; 000fee24H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194163
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 1930 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_PhotoResolutionList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP ; COPOSVideoCapture::get_PhotoResolutionList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
PhotoResolution$ = 72
?put_PhotoResolution@COPOSVideoCapture@@UEAAJPEA_W@Z PROC ; COPOSVideoCapture::put_PhotoResolution

; 1921 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1922 :     return SetOposProp( DEBUGPARAM("PhotoResolution") PIDXVcap_PhotoResolution, PhotoResolution, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR PhotoResolution$[rsp]
  00030	41 b8 23 ee 0f
	00		 mov	 r8d, 1044003		; 000fee23H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194158
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z ; COPOSVideoCapture::SetOposProp

; 1923 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?put_PhotoResolution@COPOSVideoCapture@@UEAAJPEA_W@Z ENDP ; COPOSVideoCapture::put_PhotoResolution
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pPhotoResolution$ = 72
?get_PhotoResolution@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC ; COPOSVideoCapture::get_PhotoResolution

; 1914 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1915 :     return GetOposProp( DEBUGPARAM("PhotoResolution") PIDXVcap_PhotoResolution, pPhotoResolution, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pPhotoResolution$[rsp]
  00030	41 b8 23 ee 0f
	00		 mov	 r8d, 1044003		; 000fee23H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194153
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 1916 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_PhotoResolution@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP ; COPOSVideoCapture::get_PhotoResolution
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pPhotoMaxFrameRate$ = 72
?get_PhotoMaxFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z PROC ; COPOSVideoCapture::get_PhotoMaxFrameRate

; 1907 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1908 :     return GetOposProp( DEBUGPARAM("PhotoMaxFrameRate") PIDXVcap_PhotoMaxFrameRate, pPhotoMaxFrameRate, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pPhotoMaxFrameRate$[rsp]
  00030	41 b8 ec ab 00
	00		 mov	 r8d, 44012		; 0000abecH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194148
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1909 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_PhotoMaxFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP ; COPOSVideoCapture::get_PhotoMaxFrameRate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
PhotoFrameRate$ = 72
?put_PhotoFrameRate@COPOSVideoCapture@@UEAAJJ@Z PROC	; COPOSVideoCapture::put_PhotoFrameRate

; 1900 : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1901 :     return SetOposProp( DEBUGPARAM("PhotoFrameRate") PIDXVcap_PhotoFrameRate, PhotoFrameRate, 16 /*MinorVersion*/ );

  00022	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002a	44 8b 4c 24 48	 mov	 r9d, DWORD PTR PhotoFrameRate$[rsp]
  0002f	41 b8 eb ab 00
	00		 mov	 r8d, 44011		; 0000abebH
  00035	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194143
  0003c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z ; COPOSVideoCapture::SetOposProp

; 1902 : }

  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?put_PhotoFrameRate@COPOSVideoCapture@@UEAAJJ@Z ENDP	; COPOSVideoCapture::put_PhotoFrameRate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pPhotoFrameRate$ = 72
?get_PhotoFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z PROC	; COPOSVideoCapture::get_PhotoFrameRate

; 1893 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1894 :     return GetOposProp( DEBUGPARAM("PhotoFrameRate") PIDXVcap_PhotoFrameRate, pPhotoFrameRate, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pPhotoFrameRate$[rsp]
  00030	41 b8 eb ab 00
	00		 mov	 r8d, 44011		; 0000abebH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194138
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1895 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_PhotoFrameRate@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP	; COPOSVideoCapture::get_PhotoFrameRate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pPhotoColorSpaceList$ = 72
?get_PhotoColorSpaceList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC ; COPOSVideoCapture::get_PhotoColorSpaceList

; 1886 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1887 :     return GetOposProp( DEBUGPARAM("PhotoColorSpaceList") PIDXVcap_PhotoColorSpaceList, pPhotoColorSpaceList, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pPhotoColorSpaceList$[rsp]
  00030	41 b8 22 ee 0f
	00		 mov	 r8d, 1044002		; 000fee22H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194133
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 1888 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_PhotoColorSpaceList@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP ; COPOSVideoCapture::get_PhotoColorSpaceList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
PhotoColorSpace$ = 72
?put_PhotoColorSpace@COPOSVideoCapture@@UEAAJPEA_W@Z PROC ; COPOSVideoCapture::put_PhotoColorSpace

; 1879 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1880 :     return SetOposProp( DEBUGPARAM("PhotoColorSpace") PIDXVcap_PhotoColorSpace, PhotoColorSpace, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR PhotoColorSpace$[rsp]
  00030	41 b8 21 ee 0f
	00		 mov	 r8d, 1044001		; 000fee21H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194128
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z ; COPOSVideoCapture::SetOposProp

; 1881 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?put_PhotoColorSpace@COPOSVideoCapture@@UEAAJPEA_W@Z ENDP ; COPOSVideoCapture::put_PhotoColorSpace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pPhotoColorSpace$ = 72
?get_PhotoColorSpace@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC ; COPOSVideoCapture::get_PhotoColorSpace

; 1872 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1873 :     return GetOposProp( DEBUGPARAM("PhotoColorSpace") PIDXVcap_PhotoColorSpace, pPhotoColorSpace, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pPhotoColorSpace$[rsp]
  00030	41 b8 21 ee 0f
	00		 mov	 r8d, 1044001		; 000fee21H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194123
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 1874 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_PhotoColorSpace@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP ; COPOSVideoCapture::get_PhotoColorSpace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
Hue$ = 72
?put_Hue@COPOSVideoCapture@@UEAAJJ@Z PROC		; COPOSVideoCapture::put_Hue

; 1865 : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1866 :     return SetOposProp( DEBUGPARAM("Hue") PIDXVcap_Hue, Hue, 16 /*MinorVersion*/ );

  00022	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002a	44 8b 4c 24 48	 mov	 r9d, DWORD PTR Hue$[rsp]
  0002f	41 b8 ea ab 00
	00		 mov	 r8d, 44010		; 0000abeaH
  00035	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194118
  0003c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z ; COPOSVideoCapture::SetOposProp

; 1867 : }

  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?put_Hue@COPOSVideoCapture@@UEAAJJ@Z ENDP		; COPOSVideoCapture::put_Hue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pHue$ = 72
?get_Hue@COPOSVideoCapture@@UEAAJPEAJ@Z PROC		; COPOSVideoCapture::get_Hue

; 1858 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1859 :     return GetOposProp( DEBUGPARAM("Hue") PIDXVcap_Hue, pHue, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pHue$[rsp]
  00030	41 b8 ea ab 00
	00		 mov	 r8d, 44010		; 0000abeaH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194113
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1860 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_Hue@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP		; COPOSVideoCapture::get_Hue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
HorizontalFlip$ = 72
?put_HorizontalFlip@COPOSVideoCapture@@UEAAJF@Z PROC	; COPOSVideoCapture::put_HorizontalFlip

; 1851 : {

$LN3:
  00000	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1852 :     return SetOposProp( DEBUGPARAM("HorizontalFlip") PIDXVcap_HorizontalFlip, HorizontalFlip, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	44 0f b7 4c 24
	48		 movzx	 r9d, WORD PTR HorizontalFlip$[rsp]
  00031	41 b8 e9 ab 00
	00		 mov	 r8d, 44009		; 0000abe9H
  00037	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194108
  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJFJ@Z ; COPOSVideoCapture::SetOposProp

; 1853 : }

  00048	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?put_HorizontalFlip@COPOSVideoCapture@@UEAAJF@Z ENDP	; COPOSVideoCapture::put_HorizontalFlip
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pHorizontalFlip$ = 72
?get_HorizontalFlip@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_HorizontalFlip

; 1844 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1845 :     return GetOposProp( DEBUGPARAM("HorizontalFlip") PIDXVcap_HorizontalFlip, pHorizontalFlip, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pHorizontalFlip$[rsp]
  00030	41 b8 e9 ab 00
	00		 mov	 r8d, 44009		; 0000abe9H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194103
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1846 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_HorizontalFlip@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_HorizontalFlip
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
Gain$ = 72
?put_Gain@COPOSVideoCapture@@UEAAJJ@Z PROC		; COPOSVideoCapture::put_Gain

; 1837 : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1838 :     return SetOposProp( DEBUGPARAM("Gain") PIDXVcap_Gain, Gain, 16 /*MinorVersion*/ );

  00022	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002a	44 8b 4c 24 48	 mov	 r9d, DWORD PTR Gain$[rsp]
  0002f	41 b8 e8 ab 00
	00		 mov	 r8d, 44008		; 0000abe8H
  00035	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194098
  0003c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z ; COPOSVideoCapture::SetOposProp

; 1839 : }

  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?put_Gain@COPOSVideoCapture@@UEAAJJ@Z ENDP		; COPOSVideoCapture::put_Gain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pGain$ = 72
?get_Gain@COPOSVideoCapture@@UEAAJPEAJ@Z PROC		; COPOSVideoCapture::get_Gain

; 1830 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1831 :     return GetOposProp( DEBUGPARAM("Gain") PIDXVcap_Gain, pGain, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pGain$[rsp]
  00030	41 b8 e8 ab 00
	00		 mov	 r8d, 44008		; 0000abe8H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194093
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1832 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_Gain@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP		; COPOSVideoCapture::get_Gain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
Exposure$ = 72
?put_Exposure@COPOSVideoCapture@@UEAAJJ@Z PROC		; COPOSVideoCapture::put_Exposure

; 1823 : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1824 :     return SetOposProp( DEBUGPARAM("Exposure") PIDXVcap_Exposure, Exposure, 16 /*MinorVersion*/ );

  00022	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002a	44 8b 4c 24 48	 mov	 r9d, DWORD PTR Exposure$[rsp]
  0002f	41 b8 e7 ab 00
	00		 mov	 r8d, 44007		; 0000abe7H
  00035	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194088
  0003c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z ; COPOSVideoCapture::SetOposProp

; 1825 : }

  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?put_Exposure@COPOSVideoCapture@@UEAAJJ@Z ENDP		; COPOSVideoCapture::put_Exposure
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pExposure$ = 72
?get_Exposure@COPOSVideoCapture@@UEAAJPEAJ@Z PROC	; COPOSVideoCapture::get_Exposure

; 1816 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1817 :     return GetOposProp( DEBUGPARAM("Exposure") PIDXVcap_Exposure, pExposure, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pExposure$[rsp]
  00030	41 b8 e7 ab 00
	00		 mov	 r8d, 44007		; 0000abe7H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194083
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1818 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_Exposure@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP	; COPOSVideoCapture::get_Exposure
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
Contrast$ = 72
?put_Contrast@COPOSVideoCapture@@UEAAJJ@Z PROC		; COPOSVideoCapture::put_Contrast

; 1809 : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1810 :     return SetOposProp( DEBUGPARAM("Contrast") PIDXVcap_Contrast, Contrast, 16 /*MinorVersion*/ );

  00022	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002a	44 8b 4c 24 48	 mov	 r9d, DWORD PTR Contrast$[rsp]
  0002f	41 b8 e6 ab 00
	00		 mov	 r8d, 44006		; 0000abe6H
  00035	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194078
  0003c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z ; COPOSVideoCapture::SetOposProp

; 1811 : }

  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?put_Contrast@COPOSVideoCapture@@UEAAJJ@Z ENDP		; COPOSVideoCapture::put_Contrast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pContrast$ = 72
?get_Contrast@COPOSVideoCapture@@UEAAJPEAJ@Z PROC	; COPOSVideoCapture::get_Contrast

; 1802 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1803 :     return GetOposProp( DEBUGPARAM("Contrast") PIDXVcap_Contrast, pContrast, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pContrast$[rsp]
  00030	41 b8 e6 ab 00
	00		 mov	 r8d, 44006		; 0000abe6H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194073
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1804 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_Contrast@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP	; COPOSVideoCapture::get_Contrast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapVideoType$ = 72
?get_CapVideoType@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_CapVideoType

; 1795 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1796 :     return GetOposProp( DEBUGPARAM("CapVideoType") PIDXVcap_CapVideoType, pCapVideoType, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapVideoType$[rsp]
  00030	41 b8 eb ad 00
	00		 mov	 r8d, 44523		; 0000adebH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194068
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1797 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapVideoType@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_CapVideoType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapVideoResolution$ = 72
?get_CapVideoResolution@COPOSVideoCapture@@UEAAJPEAF@Z PROC ; COPOSVideoCapture::get_CapVideoResolution

; 1788 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1789 :     return GetOposProp( DEBUGPARAM("CapVideoResolution") PIDXVcap_CapVideoResolution, pCapVideoResolution, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapVideoResolution$[rsp]
  00030	41 b8 ea ad 00
	00		 mov	 r8d, 44522		; 0000adeaH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194063
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1790 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapVideoResolution@COPOSVideoCapture@@UEAAJPEAF@Z ENDP ; COPOSVideoCapture::get_CapVideoResolution
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapVideoFrameRate$ = 72
?get_CapVideoFrameRate@COPOSVideoCapture@@UEAAJPEAF@Z PROC ; COPOSVideoCapture::get_CapVideoFrameRate

; 1781 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1782 :     return GetOposProp( DEBUGPARAM("CapVideoFrameRate") PIDXVcap_CapVideoFrameRate, pCapVideoFrameRate, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapVideoFrameRate$[rsp]
  00030	41 b8 e9 ad 00
	00		 mov	 r8d, 44521		; 0000ade9H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194058
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1783 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapVideoFrameRate@COPOSVideoCapture@@UEAAJPEAF@Z ENDP ; COPOSVideoCapture::get_CapVideoFrameRate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapVideoColorSpace$ = 72
?get_CapVideoColorSpace@COPOSVideoCapture@@UEAAJPEAF@Z PROC ; COPOSVideoCapture::get_CapVideoColorSpace

; 1774 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1775 :     return GetOposProp( DEBUGPARAM("CapVideoColorSpace") PIDXVcap_CapVideoColorSpace, pCapVideoColorSpace, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapVideoColorSpace$[rsp]
  00030	41 b8 e8 ad 00
	00		 mov	 r8d, 44520		; 0000ade8H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194053
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1776 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapVideoColorSpace@COPOSVideoCapture@@UEAAJPEAF@Z ENDP ; COPOSVideoCapture::get_CapVideoColorSpace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapVideo$ = 72
?get_CapVideo@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_CapVideo

; 1767 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1768 :     return GetOposProp( DEBUGPARAM("CapVideo") PIDXVcap_CapVideo, pCapVideo, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapVideo$[rsp]
  00030	41 b8 e7 ad 00
	00		 mov	 r8d, 44519		; 0000ade7H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194048
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1769 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapVideo@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_CapVideo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapVerticalFlip$ = 72
?get_CapVerticalFlip@COPOSVideoCapture@@UEAAJPEAF@Z PROC ; COPOSVideoCapture::get_CapVerticalFlip

; 1760 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1761 :     return GetOposProp( DEBUGPARAM("CapVerticalFlip") PIDXVcap_CapVerticalFlip, pCapVerticalFlip, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapVerticalFlip$[rsp]
  00030	41 b8 e6 ad 00
	00		 mov	 r8d, 44518		; 0000ade6H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194043
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1762 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapVerticalFlip@COPOSVideoCapture@@UEAAJPEAF@Z ENDP ; COPOSVideoCapture::get_CapVerticalFlip
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapStorage$ = 72
?get_CapStorage@COPOSVideoCapture@@UEAAJPEAJ@Z PROC	; COPOSVideoCapture::get_CapStorage

; 1753 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1754 :     return GetOposProp( DEBUGPARAM("CapStorage") PIDXVcap_CapStorage, pCapStorage, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapStorage$[rsp]
  00030	41 b8 e5 ad 00
	00		 mov	 r8d, 44517		; 0000ade5H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194038
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1755 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapStorage@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP	; COPOSVideoCapture::get_CapStorage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapSaturation$ = 72
?get_CapSaturation@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_CapSaturation

; 1746 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1747 :     return GetOposProp( DEBUGPARAM("CapSaturation") PIDXVcap_CapSaturation, pCapSaturation, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapSaturation$[rsp]
  00030	41 b8 e4 ad 00
	00		 mov	 r8d, 44516		; 0000ade4H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194033
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1748 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapSaturation@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_CapSaturation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapPhotoType$ = 72
?get_CapPhotoType@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_CapPhotoType

; 1739 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1740 :     return GetOposProp( DEBUGPARAM("CapPhotoType") PIDXVcap_CapPhotoType, pCapPhotoType, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapPhotoType$[rsp]
  00030	41 b8 e3 ad 00
	00		 mov	 r8d, 44515		; 0000ade3H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194028
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1741 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapPhotoType@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_CapPhotoType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapPhotoResolution$ = 72
?get_CapPhotoResolution@COPOSVideoCapture@@UEAAJPEAF@Z PROC ; COPOSVideoCapture::get_CapPhotoResolution

; 1732 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1733 :     return GetOposProp( DEBUGPARAM("CapPhotoResolution") PIDXVcap_CapPhotoResolution, pCapPhotoResolution, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapPhotoResolution$[rsp]
  00030	41 b8 e2 ad 00
	00		 mov	 r8d, 44514		; 0000ade2H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194023
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1734 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapPhotoResolution@COPOSVideoCapture@@UEAAJPEAF@Z ENDP ; COPOSVideoCapture::get_CapPhotoResolution
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapPhotoFrameRate$ = 72
?get_CapPhotoFrameRate@COPOSVideoCapture@@UEAAJPEAF@Z PROC ; COPOSVideoCapture::get_CapPhotoFrameRate

; 1725 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1726 :     return GetOposProp( DEBUGPARAM("CapPhotoFrameRate") PIDXVcap_CapPhotoFrameRate, pCapPhotoFrameRate, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapPhotoFrameRate$[rsp]
  00030	41 b8 e1 ad 00
	00		 mov	 r8d, 44513		; 0000ade1H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194018
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1727 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapPhotoFrameRate@COPOSVideoCapture@@UEAAJPEAF@Z ENDP ; COPOSVideoCapture::get_CapPhotoFrameRate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapPhotoColorSpace$ = 72
?get_CapPhotoColorSpace@COPOSVideoCapture@@UEAAJPEAF@Z PROC ; COPOSVideoCapture::get_CapPhotoColorSpace

; 1718 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1719 :     return GetOposProp( DEBUGPARAM("CapPhotoColorSpace") PIDXVcap_CapPhotoColorSpace, pCapPhotoColorSpace, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapPhotoColorSpace$[rsp]
  00030	41 b8 e0 ad 00
	00		 mov	 r8d, 44512		; 0000ade0H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194013
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1720 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapPhotoColorSpace@COPOSVideoCapture@@UEAAJPEAF@Z ENDP ; COPOSVideoCapture::get_CapPhotoColorSpace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapPhoto$ = 72
?get_CapPhoto@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_CapPhoto

; 1711 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1712 :     return GetOposProp( DEBUGPARAM("CapPhoto") PIDXVcap_CapPhoto, pCapPhoto, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapPhoto$[rsp]
  00030	41 b8 df ad 00
	00		 mov	 r8d, 44511		; 0000addfH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194008
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1713 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapPhoto@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_CapPhoto
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapHue$ = 72
?get_CapHue@COPOSVideoCapture@@UEAAJPEAF@Z PROC		; COPOSVideoCapture::get_CapHue

; 1704 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1705 :     return GetOposProp( DEBUGPARAM("CapHue") PIDXVcap_CapHue, pCapHue, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapHue$[rsp]
  00030	41 b8 de ad 00
	00		 mov	 r8d, 44510		; 0000addeH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194003
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1706 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapHue@COPOSVideoCapture@@UEAAJPEAF@Z ENDP		; COPOSVideoCapture::get_CapHue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapHorizontalFlip$ = 72
?get_CapHorizontalFlip@COPOSVideoCapture@@UEAAJPEAF@Z PROC ; COPOSVideoCapture::get_CapHorizontalFlip

; 1697 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1698 :     return GetOposProp( DEBUGPARAM("CapHorizontalFlip") PIDXVcap_CapHorizontalFlip, pCapHorizontalFlip, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapHorizontalFlip$[rsp]
  00030	41 b8 dd ad 00
	00		 mov	 r8d, 44509		; 0000adddH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193998
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1699 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapHorizontalFlip@COPOSVideoCapture@@UEAAJPEAF@Z ENDP ; COPOSVideoCapture::get_CapHorizontalFlip
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapGain$ = 72
?get_CapGain@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_CapGain

; 1690 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1691 :     return GetOposProp( DEBUGPARAM("CapGain") PIDXVcap_CapGain, pCapGain, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapGain$[rsp]
  00030	41 b8 dc ad 00
	00		 mov	 r8d, 44508		; 0000addcH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193993
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1692 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapGain@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_CapGain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapExposure$ = 72
?get_CapExposure@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_CapExposure

; 1683 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1684 :     return GetOposProp( DEBUGPARAM("CapExposure") PIDXVcap_CapExposure, pCapExposure, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapExposure$[rsp]
  00030	41 b8 db ad 00
	00		 mov	 r8d, 44507		; 0000addbH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193988
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1685 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapExposure@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_CapExposure
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapContrast$ = 72
?get_CapContrast@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_CapContrast

; 1676 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1677 :     return GetOposProp( DEBUGPARAM("CapContrast") PIDXVcap_CapContrast, pCapContrast, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapContrast$[rsp]
  00030	41 b8 da ad 00
	00		 mov	 r8d, 44506		; 0000addaH
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193983
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1678 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapContrast@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_CapContrast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapBrightness$ = 72
?get_CapBrightness@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_CapBrightness

; 1669 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1670 :     return GetOposProp( DEBUGPARAM("CapBrightness") PIDXVcap_CapBrightness, pCapBrightness, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapBrightness$[rsp]
  00030	41 b8 d9 ad 00
	00		 mov	 r8d, 44505		; 0000add9H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193978
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1671 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapBrightness@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_CapBrightness
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapAutoWhiteBalance$ = 72
?get_CapAutoWhiteBalance@COPOSVideoCapture@@UEAAJPEAF@Z PROC ; COPOSVideoCapture::get_CapAutoWhiteBalance

; 1662 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1663 :     return GetOposProp( DEBUGPARAM("CapAutoWhiteBalance") PIDXVcap_CapAutoWhiteBalance, pCapAutoWhiteBalance, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapAutoWhiteBalance$[rsp]
  00030	41 b8 d8 ad 00
	00		 mov	 r8d, 44504		; 0000add8H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193973
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1664 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapAutoWhiteBalance@COPOSVideoCapture@@UEAAJPEAF@Z ENDP ; COPOSVideoCapture::get_CapAutoWhiteBalance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapAutoGain$ = 72
?get_CapAutoGain@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_CapAutoGain

; 1655 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1656 :     return GetOposProp( DEBUGPARAM("CapAutoGain") PIDXVcap_CapAutoGain, pCapAutoGain, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapAutoGain$[rsp]
  00030	41 b8 d7 ad 00
	00		 mov	 r8d, 44503		; 0000add7H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193968
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1657 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapAutoGain@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_CapAutoGain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapAutoFocus$ = 72
?get_CapAutoFocus@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_CapAutoFocus

; 1648 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1649 :     return GetOposProp( DEBUGPARAM("CapAutoFocus") PIDXVcap_CapAutoFocus, pCapAutoFocus, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapAutoFocus$[rsp]
  00030	41 b8 d6 ad 00
	00		 mov	 r8d, 44502		; 0000add6H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193963
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1650 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapAutoFocus@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_CapAutoFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapAutoExposure$ = 72
?get_CapAutoExposure@COPOSVideoCapture@@UEAAJPEAF@Z PROC ; COPOSVideoCapture::get_CapAutoExposure

; 1641 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1642 :     return GetOposProp( DEBUGPARAM("CapAutoExposure") PIDXVcap_CapAutoExposure, pCapAutoExposure, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapAutoExposure$[rsp]
  00030	41 b8 d5 ad 00
	00		 mov	 r8d, 44501		; 0000add5H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193958
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1643 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapAutoExposure@COPOSVideoCapture@@UEAAJPEAF@Z ENDP ; COPOSVideoCapture::get_CapAutoExposure
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapAssociatedHardTotalsDevice$ = 72
?get_CapAssociatedHardTotalsDevice@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC ; COPOSVideoCapture::get_CapAssociatedHardTotalsDevice

; 1634 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1635 :     return GetOposProp( DEBUGPARAM("CapAssociatedHardTotalsDevice") PIDXVcap_CapAssociatedHardTotalsDevice, pCapAssociatedHardTotalsDevice, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapAssociatedHardTotalsDevice$[rsp]
  00030	41 b8 15 f0 0f
	00		 mov	 r8d, 1044501		; 000ff015H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193953
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 1636 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapAssociatedHardTotalsDevice@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP ; COPOSVideoCapture::get_CapAssociatedHardTotalsDevice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
Brightness$ = 72
?put_Brightness@COPOSVideoCapture@@UEAAJJ@Z PROC	; COPOSVideoCapture::put_Brightness

; 1627 : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1628 :     return SetOposProp( DEBUGPARAM("Brightness") PIDXVcap_Brightness, Brightness, 16 /*MinorVersion*/ );

  00022	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002a	44 8b 4c 24 48	 mov	 r9d, DWORD PTR Brightness$[rsp]
  0002f	41 b8 e5 ab 00
	00		 mov	 r8d, 44005		; 0000abe5H
  00035	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193948
  0003c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z ; COPOSVideoCapture::SetOposProp

; 1629 : }

  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?put_Brightness@COPOSVideoCapture@@UEAAJJ@Z ENDP	; COPOSVideoCapture::put_Brightness
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pBrightness$ = 72
?get_Brightness@COPOSVideoCapture@@UEAAJPEAJ@Z PROC	; COPOSVideoCapture::get_Brightness

; 1620 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1621 :     return GetOposProp( DEBUGPARAM("Brightness") PIDXVcap_Brightness, pBrightness, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pBrightness$[rsp]
  00030	41 b8 e5 ab 00
	00		 mov	 r8d, 44005		; 0000abe5H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193943
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1622 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_Brightness@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP	; COPOSVideoCapture::get_Brightness
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
AutoWhiteBalance$ = 72
?put_AutoWhiteBalance@COPOSVideoCapture@@UEAAJF@Z PROC	; COPOSVideoCapture::put_AutoWhiteBalance

; 1613 : {

$LN3:
  00000	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1614 :     return SetOposProp( DEBUGPARAM("AutoWhiteBalance") PIDXVcap_AutoWhiteBalance, AutoWhiteBalance, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	44 0f b7 4c 24
	48		 movzx	 r9d, WORD PTR AutoWhiteBalance$[rsp]
  00031	41 b8 e4 ab 00
	00		 mov	 r8d, 44004		; 0000abe4H
  00037	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193938
  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJFJ@Z ; COPOSVideoCapture::SetOposProp

; 1615 : }

  00048	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?put_AutoWhiteBalance@COPOSVideoCapture@@UEAAJF@Z ENDP	; COPOSVideoCapture::put_AutoWhiteBalance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pAutoWhiteBalance$ = 72
?get_AutoWhiteBalance@COPOSVideoCapture@@UEAAJPEAF@Z PROC ; COPOSVideoCapture::get_AutoWhiteBalance

; 1606 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1607 :     return GetOposProp( DEBUGPARAM("AutoWhiteBalance") PIDXVcap_AutoWhiteBalance, pAutoWhiteBalance, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pAutoWhiteBalance$[rsp]
  00030	41 b8 e4 ab 00
	00		 mov	 r8d, 44004		; 0000abe4H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193933
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1608 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_AutoWhiteBalance@COPOSVideoCapture@@UEAAJPEAF@Z ENDP ; COPOSVideoCapture::get_AutoWhiteBalance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
AutoGain$ = 72
?put_AutoGain@COPOSVideoCapture@@UEAAJF@Z PROC		; COPOSVideoCapture::put_AutoGain

; 1599 : {

$LN3:
  00000	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1600 :     return SetOposProp( DEBUGPARAM("AutoGain") PIDXVcap_AutoGain, AutoGain, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	44 0f b7 4c 24
	48		 movzx	 r9d, WORD PTR AutoGain$[rsp]
  00031	41 b8 e3 ab 00
	00		 mov	 r8d, 44003		; 0000abe3H
  00037	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193928
  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJFJ@Z ; COPOSVideoCapture::SetOposProp

; 1601 : }

  00048	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?put_AutoGain@COPOSVideoCapture@@UEAAJF@Z ENDP		; COPOSVideoCapture::put_AutoGain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pAutoGain$ = 72
?get_AutoGain@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_AutoGain

; 1592 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1593 :     return GetOposProp( DEBUGPARAM("AutoGain") PIDXVcap_AutoGain, pAutoGain, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pAutoGain$[rsp]
  00030	41 b8 e3 ab 00
	00		 mov	 r8d, 44003		; 0000abe3H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193923
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1594 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_AutoGain@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_AutoGain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
AutoFocus$ = 72
?put_AutoFocus@COPOSVideoCapture@@UEAAJF@Z PROC		; COPOSVideoCapture::put_AutoFocus

; 1585 : {

$LN3:
  00000	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1586 :     return SetOposProp( DEBUGPARAM("AutoFocus") PIDXVcap_AutoFocus, AutoFocus, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	44 0f b7 4c 24
	48		 movzx	 r9d, WORD PTR AutoFocus$[rsp]
  00031	41 b8 e2 ab 00
	00		 mov	 r8d, 44002		; 0000abe2H
  00037	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193918
  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJFJ@Z ; COPOSVideoCapture::SetOposProp

; 1587 : }

  00048	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?put_AutoFocus@COPOSVideoCapture@@UEAAJF@Z ENDP		; COPOSVideoCapture::put_AutoFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pAutoFocus$ = 72
?get_AutoFocus@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_AutoFocus

; 1578 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1579 :     return GetOposProp( DEBUGPARAM("AutoFocus") PIDXVcap_AutoFocus, pAutoFocus, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pAutoFocus$[rsp]
  00030	41 b8 e2 ab 00
	00		 mov	 r8d, 44002		; 0000abe2H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193913
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1580 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_AutoFocus@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_AutoFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
AutoExposure$ = 72
?put_AutoExposure@COPOSVideoCapture@@UEAAJF@Z PROC	; COPOSVideoCapture::put_AutoExposure

; 1571 : {

$LN3:
  00000	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1572 :     return SetOposProp( DEBUGPARAM("AutoExposure") PIDXVcap_AutoExposure, AutoExposure, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	44 0f b7 4c 24
	48		 movzx	 r9d, WORD PTR AutoExposure$[rsp]
  00031	41 b8 e1 ab 00
	00		 mov	 r8d, 44001		; 0000abe1H
  00037	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193908
  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJFJ@Z ; COPOSVideoCapture::SetOposProp

; 1573 : }

  00048	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?put_AutoExposure@COPOSVideoCapture@@UEAAJF@Z ENDP	; COPOSVideoCapture::put_AutoExposure
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pAutoExposure$ = 72
?get_AutoExposure@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_AutoExposure

; 1564 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1565 :     return GetOposProp( DEBUGPARAM("AutoExposure") PIDXVcap_AutoExposure, pAutoExposure, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pAutoExposure$[rsp]
  00030	41 b8 e1 ab 00
	00		 mov	 r8d, 44001		; 0000abe1H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193903
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1566 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_AutoExposure@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_AutoExposure
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
Var$ = 72
hRC$ = 132
$T5 = 148
this$ = 176
FirmwareFileName$ = 184
pRC$ = 192
?UpdateFirmware@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z PROC ; COPOSVideoCapture::UpdateFirmware

; 1255 : {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]

; 1256 :     OposVariant Var;

  0002e	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  00033	e8 00 00 00 00	 call	 ??0OposVariant@@QEAA@XZ	; OposVariant::OposVariant

; 1257 :     HRESULT hRC = S_OK;

  00038	c7 84 24 84 00
	00 00 00 00 00
	00		 mov	 DWORD PTR hRC$[rsp], 0

; 1258 :     Var.SetBSTR( FirmwareFileName, hRC );

  00043	4c 8d 84 24 84
	00 00 00	 lea	 r8, QWORD PTR hRC$[rsp]
  0004b	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR FirmwareFileName$[rsp]
  00053	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  00058	e8 00 00 00 00	 call	 ?SetBSTR@OposVariant@@QEAAXPEA_WAEAJ@Z ; OposVariant::SetBSTR

; 1259 :     return DoInvoke( DEBUGPARAM("UpdateFirmware") hRC, &Var, 1, nDIUpdateFirmware, pRC );

  0005d	c6 44 24 38 01	 mov	 BYTE PTR [rsp+56], 1
  00062	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  0006a	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0006f	c7 44 24 28 10
	00 00 00	 mov	 DWORD PTR [rsp+40], 16
  00077	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR [rsp+32], 1
  0007f	4c 8d 4c 24 48	 lea	 r9, QWORD PTR Var$[rsp]
  00084	44 8b 84 24 84
	00 00 00	 mov	 r8d, DWORD PTR hRC$[rsp]
  0008c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193712
  00093	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009b	e8 00 00 00 00	 call	 ?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z ; COPOSVideoCapture::DoInvoke
  000a0	89 84 24 94 00
	00 00		 mov	 DWORD PTR $T5[rsp], eax
  000a7	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  000ac	e8 00 00 00 00	 call	 ??1OposVariant@@QEAA@XZ	; OposVariant::~OposVariant
  000b1	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR $T5[rsp]

; 1260 : }

  000b8	8b f8		 mov	 edi, eax
  000ba	48 8b cc	 mov	 rcx, rsp
  000bd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?UpdateFirmware@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcFrameData
  000c4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000c9	8b c7		 mov	 eax, edi
  000cb	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
?UpdateFirmware@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z ENDP ; COPOSVideoCapture::UpdateFirmware
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
Vars$ = 80
hRC$ = 164
$T5 = 180
this$ = 208
FirmwareFileName$ = 216
pResult$ = 224
pRC$ = 232
?CompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEA_WPEAJ1@Z PROC ; COPOSVideoCapture::CompareFirmwareVersion

; 1242 : {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+208]

; 1243 :     OposVariant Vars[2];

  00033	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??0OposVariant@@QEAA@XZ ; OposVariant::OposVariant
  0003a	41 b8 02 00 00
	00		 mov	 r8d, 2
  00040	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00045	48 8d 4c 24 50	 lea	 rcx, QWORD PTR Vars$[rsp]
  0004a	e8 00 00 00 00	 call	 ??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 1244 :     HRESULT hRC = S_OK;

  0004f	c7 84 24 a4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR hRC$[rsp], 0

; 1245 :     Vars[1].SetBSTR( FirmwareFileName, hRC );

  0005a	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0005f	48 6b c0 01	 imul	 rax, rax, 1
  00063	48 8d 44 04 50	 lea	 rax, QWORD PTR Vars$[rsp+rax]
  00068	4c 8d 84 24 a4
	00 00 00	 lea	 r8, QWORD PTR hRC$[rsp]
  00070	48 8b 94 24 d8
	00 00 00	 mov	 rdx, QWORD PTR FirmwareFileName$[rsp]
  00078	48 8b c8	 mov	 rcx, rax
  0007b	e8 00 00 00 00	 call	 ?SetBSTR@OposVariant@@QEAAXPEA_WAEAJ@Z ; OposVariant::SetBSTR

; 1246 :     Vars[0].SetLONG_Ptr( pResult, hRC );

  00080	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00085	48 6b c0 00	 imul	 rax, rax, 0
  00089	48 8d 44 04 50	 lea	 rax, QWORD PTR Vars$[rsp+rax]
  0008e	4c 8d 84 24 a4
	00 00 00	 lea	 r8, QWORD PTR hRC$[rsp]
  00096	48 8b 94 24 e0
	00 00 00	 mov	 rdx, QWORD PTR pResult$[rsp]
  0009e	48 8b c8	 mov	 rcx, rax
  000a1	e8 00 00 00 00	 call	 ?SetLONG_Ptr@OposVariant@@QEAAXPEAJAEAJ@Z ; OposVariant::SetLONG_Ptr

; 1247 :     return DoInvoke( DEBUGPARAM("CompareFirmwareVersion") hRC, Vars, 2, nDICompareFirmwareVersion, pRC );

  000a6	c6 44 24 38 01	 mov	 BYTE PTR [rsp+56], 1
  000ab	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  000b3	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  000b8	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR [rsp+40], 15
  000c0	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  000c8	4c 8d 4c 24 50	 lea	 r9, QWORD PTR Vars$[rsp]
  000cd	44 8b 84 24 a4
	00 00 00	 mov	 r8d, DWORD PTR hRC$[rsp]
  000d5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193702
  000dc	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000e4	e8 00 00 00 00	 call	 ?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z ; COPOSVideoCapture::DoInvoke
  000e9	89 84 24 b4 00
	00 00		 mov	 DWORD PTR $T5[rsp], eax
  000f0	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1OposVariant@@QEAA@XZ ; OposVariant::~OposVariant
  000f7	41 b8 02 00 00
	00		 mov	 r8d, 2
  000fd	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00102	48 8d 4c 24 50	 lea	 rcx, QWORD PTR Vars$[rsp]
  00107	e8 00 00 00 00	 call	 ??_I@YAXPEAX_K1P6AX0@Z@Z
  0010c	8b 84 24 b4 00
	00 00		 mov	 eax, DWORD PTR $T5[rsp]

; 1248 : }

  00113	8b f8		 mov	 edi, eax
  00115	48 8b cc	 mov	 rcx, rsp
  00118	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?CompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEA_WPEAJ1@Z$rtcFrameData
  0011f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00124	8b c7		 mov	 eax, edi
  00126	48 81 c4 c0 00
	00 00		 add	 rsp, 192		; 000000c0H
  0012d	5f		 pop	 rdi
  0012e	c3		 ret	 0
?CompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEA_WPEAJ1@Z ENDP ; COPOSVideoCapture::CompareFirmwareVersion
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
Var$ = 72
hRC$ = 132
$T5 = 148
this$ = 176
StatisticsBuffer$ = 184
pRC$ = 192
?UpdateStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z PROC ; COPOSVideoCapture::UpdateStatistics

; 1229 : {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]

; 1230 :     OposVariant Var;

  0002e	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  00033	e8 00 00 00 00	 call	 ??0OposVariant@@QEAA@XZ	; OposVariant::OposVariant

; 1231 :     HRESULT hRC = S_OK;

  00038	c7 84 24 84 00
	00 00 00 00 00
	00		 mov	 DWORD PTR hRC$[rsp], 0

; 1232 :     Var.SetBSTR( StatisticsBuffer, hRC );

  00043	4c 8d 84 24 84
	00 00 00	 lea	 r8, QWORD PTR hRC$[rsp]
  0004b	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR StatisticsBuffer$[rsp]
  00053	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  00058	e8 00 00 00 00	 call	 ?SetBSTR@OposVariant@@QEAAXPEA_WAEAJ@Z ; OposVariant::SetBSTR

; 1233 :     return DoInvoke( DEBUGPARAM("UpdateStatistics") hRC, &Var, 1, nDIUpdateStatistics, pRC );

  0005d	c6 44 24 38 01	 mov	 BYTE PTR [rsp+56], 1
  00062	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  0006a	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0006f	c7 44 24 28 0e
	00 00 00	 mov	 DWORD PTR [rsp+40], 14
  00077	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR [rsp+32], 1
  0007f	4c 8d 4c 24 48	 lea	 r9, QWORD PTR Var$[rsp]
  00084	44 8b 84 24 84
	00 00 00	 mov	 r8d, DWORD PTR hRC$[rsp]
  0008c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193689
  00093	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009b	e8 00 00 00 00	 call	 ?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z ; COPOSVideoCapture::DoInvoke
  000a0	89 84 24 94 00
	00 00		 mov	 DWORD PTR $T5[rsp], eax
  000a7	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  000ac	e8 00 00 00 00	 call	 ??1OposVariant@@QEAA@XZ	; OposVariant::~OposVariant
  000b1	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR $T5[rsp]

; 1234 : }

  000b8	8b f8		 mov	 edi, eax
  000ba	48 8b cc	 mov	 rcx, rsp
  000bd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?UpdateStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcFrameData
  000c4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000c9	8b c7		 mov	 eax, edi
  000cb	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
?UpdateStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z ENDP ; COPOSVideoCapture::UpdateStatistics
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
Var$ = 72
hRC$ = 132
$T5 = 148
this$ = 176
pStatisticsBuffer$ = 184
pRC$ = 192
?RetrieveStatistics@COPOSVideoCapture@@UEAAJPEAPEA_WPEAJ@Z PROC ; COPOSVideoCapture::RetrieveStatistics

; 1217 : {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]

; 1218 :     OposVariant Var;

  0002e	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  00033	e8 00 00 00 00	 call	 ??0OposVariant@@QEAA@XZ	; OposVariant::OposVariant

; 1219 :     HRESULT hRC = S_OK;

  00038	c7 84 24 84 00
	00 00 00 00 00
	00		 mov	 DWORD PTR hRC$[rsp], 0

; 1220 :     Var.SetBSTR_InOutPtr( pStatisticsBuffer, hRC );

  00043	4c 8d 84 24 84
	00 00 00	 lea	 r8, QWORD PTR hRC$[rsp]
  0004b	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR pStatisticsBuffer$[rsp]
  00053	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  00058	e8 00 00 00 00	 call	 ?SetBSTR_InOutPtr@OposVariant@@QEAA_NPEAPEA_WAEAJ@Z ; OposVariant::SetBSTR_InOutPtr

; 1221 :     return DoInvoke( DEBUGPARAM("RetrieveStatistics") hRC, &Var, 1, nDIRetrieveStatistics, pRC );

  0005d	c6 44 24 38 01	 mov	 BYTE PTR [rsp+56], 1
  00062	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  0006a	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0006f	c7 44 24 28 0d
	00 00 00	 mov	 DWORD PTR [rsp+40], 13
  00077	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR [rsp+32], 1
  0007f	4c 8d 4c 24 48	 lea	 r9, QWORD PTR Var$[rsp]
  00084	44 8b 84 24 84
	00 00 00	 mov	 r8d, DWORD PTR hRC$[rsp]
  0008c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193679
  00093	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009b	e8 00 00 00 00	 call	 ?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z ; COPOSVideoCapture::DoInvoke
  000a0	89 84 24 94 00
	00 00		 mov	 DWORD PTR $T5[rsp], eax
  000a7	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  000ac	e8 00 00 00 00	 call	 ??1OposVariant@@QEAA@XZ	; OposVariant::~OposVariant
  000b1	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR $T5[rsp]

; 1222 : }

  000b8	8b f8		 mov	 edi, eax
  000ba	48 8b cc	 mov	 rcx, rsp
  000bd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?RetrieveStatistics@COPOSVideoCapture@@UEAAJPEAPEA_WPEAJ@Z$rtcFrameData
  000c4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000c9	8b c7		 mov	 eax, edi
  000cb	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
?RetrieveStatistics@COPOSVideoCapture@@UEAAJPEAPEA_WPEAJ@Z ENDP ; COPOSVideoCapture::RetrieveStatistics
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
Var$ = 72
hRC$ = 132
$T5 = 148
this$ = 176
StatisticsBuffer$ = 184
pRC$ = 192
?ResetStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z PROC ; COPOSVideoCapture::ResetStatistics

; 1205 : {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]

; 1206 :     OposVariant Var;

  0002e	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  00033	e8 00 00 00 00	 call	 ??0OposVariant@@QEAA@XZ	; OposVariant::OposVariant

; 1207 :     HRESULT hRC = S_OK;

  00038	c7 84 24 84 00
	00 00 00 00 00
	00		 mov	 DWORD PTR hRC$[rsp], 0

; 1208 :     Var.SetBSTR( StatisticsBuffer, hRC );

  00043	4c 8d 84 24 84
	00 00 00	 lea	 r8, QWORD PTR hRC$[rsp]
  0004b	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR StatisticsBuffer$[rsp]
  00053	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  00058	e8 00 00 00 00	 call	 ?SetBSTR@OposVariant@@QEAAXPEA_WAEAJ@Z ; OposVariant::SetBSTR

; 1209 :     return DoInvoke( DEBUGPARAM("ResetStatistics") hRC, &Var, 1, nDIResetStatistics, pRC );

  0005d	c6 44 24 38 01	 mov	 BYTE PTR [rsp+56], 1
  00062	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  0006a	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0006f	c7 44 24 28 0c
	00 00 00	 mov	 DWORD PTR [rsp+40], 12
  00077	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR [rsp+32], 1
  0007f	4c 8d 4c 24 48	 lea	 r9, QWORD PTR Var$[rsp]
  00084	44 8b 84 24 84
	00 00 00	 mov	 r8d, DWORD PTR hRC$[rsp]
  0008c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193669
  00093	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009b	e8 00 00 00 00	 call	 ?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z ; COPOSVideoCapture::DoInvoke
  000a0	89 84 24 94 00
	00 00		 mov	 DWORD PTR $T5[rsp], eax
  000a7	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  000ac	e8 00 00 00 00	 call	 ??1OposVariant@@QEAA@XZ	; OposVariant::~OposVariant
  000b1	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR $T5[rsp]

; 1210 : }

  000b8	8b f8		 mov	 edi, eax
  000ba	48 8b cc	 mov	 rcx, rsp
  000bd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ResetStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcFrameData
  000c4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000c9	8b c7		 mov	 eax, edi
  000cb	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
?ResetStatistics@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z ENDP ; COPOSVideoCapture::ResetStatistics
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 80
pRC$ = 88
?ReleaseDevice@COPOSVideoCapture@@UEAAJPEAJ@Z PROC	; COPOSVideoCapture::ReleaseDevice

; 1130 : {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1131 :     SetRC();

  00023	ba ff ff ff ff	 mov	 edx, -1
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?SetRC@COPOSVideoCapture@@IEAAJJ@Z ; COPOSVideoCapture::SetRC

; 1132 : 
; 1133 :     // If not opened, set return code.
; 1134 :     if ( ! _bOpened )

  00032	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00037	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  0003e	85 c0		 test	 eax, eax
  00040	75 20		 jne	 SHORT $LN2@ReleaseDev

; 1135 :     {
; 1136 :         *pRC = OPOS_E_CLOSED;

  00042	48 8b 44 24 58	 mov	 rax, QWORD PTR pRC$[rsp]
  00047	c7 00 65 00 00
	00		 mov	 DWORD PTR [rax], 101	; 00000065H

; 1137 :         DOTRACEV( ( _T("*ReleaseDevice [Function] -- Closed") ) );

  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193623
  00054	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00059	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 1138 :         return S_OK;

  0005e	33 c0		 xor	 eax, eax
  00060	eb 40		 jmp	 SHORT $LN1@ReleaseDev
$LN2@ReleaseDev:

; 1139 :     }
; 1140 : 
; 1141 :     // Events are no longer legal.
; 1142 :     EventPreCloseRelease();

  00062	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00067	e8 00 00 00 00	 call	 ?EventPreCloseRelease@COPOSVideoCapture@@IEAAXXZ ; COPOSVideoCapture::EventPreCloseRelease

; 1143 : 
; 1144 :     // Call down into the Service Object to execute this method.
; 1145 :     return DoInvoke( DEBUGPARAM("ReleaseDevice") S_OK, NULL, 0, nDIReleaseDevice, pRC, false );

  0006c	c6 44 24 38 00	 mov	 BYTE PTR [rsp+56], 0
  00071	48 8b 44 24 58	 mov	 rax, QWORD PTR pRC$[rsp]
  00076	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0007b	c7 44 24 28 0b
	00 00 00	 mov	 DWORD PTR [rsp+40], 11
  00083	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  0008b	45 33 c9	 xor	 r9d, r9d
  0008e	45 33 c0	 xor	 r8d, r8d
  00091	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193624
  00098	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0009d	e8 00 00 00 00	 call	 ?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z ; COPOSVideoCapture::DoInvoke
$LN1@ReleaseDev:

; 1146 : }

  000a2	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a6	5f		 pop	 rdi
  000a7	c3		 ret	 0
?ReleaseDevice@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP	; COPOSVideoCapture::ReleaseDevice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
hRC$ = 84
nError$ = 100
nDeviceNameLen$ = 104
szBaseKey$ = 128
hBaseKey$ = 664
szPhysicalDeviceName$ = 704
dwType$ = 1236
dwSize$ = 1268
hServiceKey$ = 1304
nRegStat$ = 1316
sSOProgID$ = 1344
SOClassID$ = 1880
pUnknown$ = 1928
nMethodCount$ = 1940
MN$26 = 1960
pMN$27 = 2024
nAllMethods$ = 2036
MN$28 = 2056
pMN$29 = 2120
pDispatch$ = 2152
Vars$ = 2192
pMN$30 = 2312
DispID$31 = 2340
VarResult$32 = 2376
Disp$33 = 2440
hRCTmp$34 = 2484
bstrSOInfo$ = 2520
bBadSO$ = 2532
nSOVersion$ = 2548
nReqMethodIndex$35 = 2564
$T36 = 2576
$T37 = 2584
$T38 = 2616
$T39 = 2624
$T40 = 2632
$T41 = 2664
$T42 = 2696
$T43 = 2728
$T44 = 2732
$T45 = 2736
$T46 = 2740
$T47 = 2744
tv166 = 2748
tv266 = 2752
tv304 = 2760
tv771 = 2768
tv325 = 2776
tv770 = 2784
tv357 = 2792
tv769 = 2800
tv383 = 2808
tv768 = 2816
__$ArrayPad$ = 2824
this$ = 2848
DeviceName$ = 2856
pRC$ = 2864
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z PROC		; COPOSVideoCapture::Open

; 682  : {

$LN59:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 10 0b
	00 00		 sub	 rsp, 2832		; 00000b10H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 c4 02 00 00	 mov	 ecx, 708		; 000002c4H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR [rsp+2848]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 84 24 08
	0b 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00040	c7 84 24 b8 0a
	00 00 00 00 00
	00		 mov	 DWORD PTR $T47[rsp], 0

; 683  :     HRESULT hRC;
; 684  :     LONG nError;
; 685  : 
; 686  :     DOTRACE( ( _T("*Open [Function]: DeviceName <%ls>"), DeviceName ) );

  0004b	4c 8b 84 24 28
	0b 00 00	 mov	 r8, QWORD PTR DeviceName$[rsp]
  00053	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193492
  0005a	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00062	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 687  : 
; 688  :     // If already open, return error.
; 689  :     if ( _bOpened )

  00067	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0006f	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  00076	85 c0		 test	 eax, eax
  00078	74 63		 je	 SHORT $LN6@Open

; 690  :     {
; 691  :         *pRC = SetRC( OPOS_E_ILLEGAL );

  0007a	ba 6a 00 00 00	 mov	 edx, 106		; 0000006aH
  0007f	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00087	e8 00 00 00 00	 call	 ?SetRC@COPOSVideoCapture@@IEAAJJ@Z ; COPOSVideoCapture::SetRC
  0008c	48 8b 8c 24 30
	0b 00 00	 mov	 rcx, QWORD PTR pRC$[rsp]
  00094	89 01		 mov	 DWORD PTR [rcx], eax

; 692  :         _nOpenResult = OPOS_OR_ALREADYOPEN;

  00096	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0009e	c7 80 8c 01 00
	00 2d 01 00 00	 mov	 DWORD PTR [rax+396], 301 ; 0000012dH

; 693  :         DOTRACE( ( _T("-  Failed: CCO already open (%d/%d)"), *pRC, _nOpenResult ) );

  000a8	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000b0	44 8b 88 8c 01
	00 00		 mov	 r9d, DWORD PTR [rax+396]
  000b7	48 8b 84 24 30
	0b 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  000bf	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  000c2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193494
  000c9	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d1	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 694  :         return S_OK;

  000d6	33 c0		 xor	 eax, eax
  000d8	e9 c2 13 00 00	 jmp	 $LN50@Open
$LN6@Open:

; 695  :     }
; 696  : 
; 697  :     // Initialize ResultCode and OpenResult for possible returns below.
; 698  :     *pRC = SetRC( OPOS_E_NOEXIST );

  000dd	ba 6d 00 00 00	 mov	 edx, 109		; 0000006dH
  000e2	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ea	e8 00 00 00 00	 call	 ?SetRC@COPOSVideoCapture@@IEAAJJ@Z ; COPOSVideoCapture::SetRC
  000ef	48 8b 8c 24 30
	0b 00 00	 mov	 rcx, QWORD PTR pRC$[rsp]
  000f7	89 01		 mov	 DWORD PTR [rcx], eax

; 699  :     _nOpenResult = OPOS_OR_REGBADNAME;

  000f9	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00101	c7 80 8c 01 00
	00 2e 01 00 00	 mov	 DWORD PTR [rax+396], 302 ; 0000012eH

; 700  : 
; 701  :     // Check the DeviceName length...
; 702  :     UINT nDeviceNameLen = ::SysStringLen( DeviceName );

  0010b	48 8b 8c 24 28
	0b 00 00	 mov	 rcx, QWORD PTR DeviceName$[rsp]
  00113	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SysStringLen
  00119	89 44 24 68	 mov	 DWORD PTR nDeviceNameLen$[rsp], eax

; 703  : 
; 704  :     //  - Ensure that the DeviceName is not an empty string.
; 705  :     if ( nDeviceNameLen == 0 )

  0011d	83 7c 24 68 00	 cmp	 DWORD PTR nDeviceNameLen$[rsp], 0
  00122	75 35		 jne	 SHORT $LN7@Open

; 706  :     {
; 707  :         DOTRACE( ( _T("-  Failed: Empty device name (%d/%d)"), *pRC, _nOpenResult ) );

  00124	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0012c	44 8b 88 8c 01
	00 00		 mov	 r9d, DWORD PTR [rax+396]
  00133	48 8b 84 24 30
	0b 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  0013b	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  0013e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193496
  00145	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0014d	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 708  :         return S_OK;

  00152	33 c0		 xor	 eax, eax
  00154	e9 46 13 00 00	 jmp	 $LN50@Open
$LN7@Open:

; 709  :     }
; 710  : 
; 711  :     //  - Ensure that the DeviceName is not unreasonably long.
; 712  :     //     Otherwise it may overrun this line below: wcscpy( szPhysicalDeviceName, DeviceName )
; 713  :     if ( nDeviceNameLen >= MAX_REGBUFFER_SIZE )

  00159	81 7c 24 68 00
	01 00 00	 cmp	 DWORD PTR nDeviceNameLen$[rsp], 256 ; 00000100H
  00161	72 35		 jb	 SHORT $LN8@Open

; 714  :     {
; 715  :         DOTRACE( ( _T("-  Failed: Device name too big (%d/%d)"), *pRC, _nOpenResult ) );

  00163	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0016b	44 8b 88 8c 01
	00 00		 mov	 r9d, DWORD PTR [rax+396]
  00172	48 8b 84 24 30
	0b 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  0017a	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  0017d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193498
  00184	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0018c	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 716  :         return S_OK;

  00191	33 c0		 xor	 eax, eax
  00193	e9 07 13 00 00	 jmp	 $LN50@Open
$LN8@Open:

; 717  :     }
; 718  : 
; 719  :     // Form and open the base key.
; 720  :     TCHAR szBaseKey[ MAX_REGBUFFER_SIZE ];
; 721  :     HKEY hBaseKey;
; 722  :     cw_strcpy( szBaseKey, OPOS_ROOTKEY "\\" OPOS_CLASSKEY_VCAP );

  00198	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193499
  0019f	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR szBaseKey$[rsp]
  001a7	e8 00 00 00 00	 call	 ?cw_strcpy@@YAHPEA_WPEBD@Z ; cw_strcpy

; 723  :     nError = RegOpenKeyEx(

  001ac	48 8d 84 24 98
	02 00 00	 lea	 rax, QWORD PTR hBaseKey$[rsp]
  001b4	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  001b9	41 b9 19 00 02
	00		 mov	 r9d, 131097		; 00020019H
  001bf	45 33 c0	 xor	 r8d, r8d
  001c2	48 8d 94 24 80
	00 00 00	 lea	 rdx, QWORD PTR szBaseKey$[rsp]
  001ca	48 c7 c1 02 00
	00 80		 mov	 rcx, -2147483646	; ffffffff80000002H
  001d1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegOpenKeyExW
  001d7	89 44 24 64	 mov	 DWORD PTR nError$[rsp], eax

; 724  :             HKEY_LOCAL_MACHINE,         // Handle to open key
; 725  :             szBaseKey,                  // Address of name of subkey to open
; 726  :             0,                          // Reserved
; 727  :             KEY_READ,                   // Security access mask
; 728  :             &hBaseKey );                // Address of handle to open key
; 729  :     if ( ERROR_SUCCESS != nError )

  001db	83 7c 24 64 00	 cmp	 DWORD PTR nError$[rsp], 0
  001e0	74 59		 je	 SHORT $LN9@Open

; 730  :     {
; 731  :         DOTRACE( ( _T("-  Failed: Cannot open registry key <%s> (%d/%d)"), szBaseKey, *pRC, _nOpenResult ) );

  001e2	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001ea	8b 80 8c 01 00
	00		 mov	 eax, DWORD PTR [rax+396]
  001f0	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  001f4	48 8b 84 24 30
	0b 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  001fc	44 8b 08	 mov	 r9d, DWORD PTR [rax]
  001ff	4c 8d 84 24 80
	00 00 00	 lea	 r8, QWORD PTR szBaseKey$[rsp]
  00207	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193501
  0020e	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00216	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 732  :         DOTRACEERR( _T("    RegOpenKeyEx error %d\n    %s"), nError );

  0021b	44 8b 44 24 64	 mov	 r8d, DWORD PTR nError$[rsp]
  00220	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193502
  00227	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0022f	e8 00 00 00 00	 call	 ?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z ; COPOSVideoCapture::WriteTraceError

; 733  :         return S_OK;

  00234	33 c0		 xor	 eax, eax
  00236	e9 64 12 00 00	 jmp	 $LN50@Open
$LN9@Open:

; 734  :     }
; 735  :     DOTRACE( ( _T("    Opened registry key HKLM\\%s"), szBaseKey ) );

  0023b	4c 8d 84 24 80
	00 00 00	 lea	 r8, QWORD PTR szBaseKey$[rsp]
  00243	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193503
  0024a	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00252	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 736  : 
; 737  :     // If the DeviceName parameter is a string value in the base key,
; 738  :     //   then a logical name was specified:
; 739  :     //   Use the value's data as the physical device name.
; 740  :     // Else the name is the physical device name.
; 741  :     TCHAR szPhysicalDeviceName[ MAX_REGBUFFER_SIZE ];
; 742  :     DWORD dwType;
; 743  :     DWORD dwSize = sizeof( szPhysicalDeviceName );

  00257	c7 84 24 f4 04
	00 00 00 02 00
	00		 mov	 DWORD PTR dwSize$[rsp], 512 ; 00000200H

; 744  :     if ( ERROR_SUCCESS !=
; 745  :          RegQueryValueEx(
; 746  :             hBaseKey,                   // Handle to key to query
; 747  :             _CW(DeviceName),            // Address of name of value to query
; 748  :             0,                          // Reserved
; 749  :             &dwType,                    // Address of buffer for value type
; 750  :             (LPBYTE) szPhysicalDeviceName, // Address of data buffer
; 751  :             &dwSize ) ||                // Address of data buffer size

  00262	48 8b 94 24 28
	0b 00 00	 mov	 rdx, QWORD PTR DeviceName$[rsp]
  0026a	48 8d 8c 24 18
	0a 00 00	 lea	 rcx, QWORD PTR $T37[rsp]
  00272	e8 00 00 00 00	 call	 ??0_CW@@QEAA@PEB_W@Z	; _CW::_CW
  00277	83 8c 24 b8 0a
	00 00 01	 or	 DWORD PTR $T47[rsp], 1
  0027f	48 8b c8	 mov	 rcx, rax
  00282	e8 00 00 00 00	 call	 ??B_CW@@QEAAPEB_WXZ	; _CW::operator wchar_t const *
  00287	48 8d 8c 24 f4
	04 00 00	 lea	 rcx, QWORD PTR dwSize$[rsp]
  0028f	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00294	48 8d 8c 24 c0
	02 00 00	 lea	 rcx, QWORD PTR szPhysicalDeviceName$[rsp]
  0029c	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  002a1	4c 8d 8c 24 d4
	04 00 00	 lea	 r9, QWORD PTR dwType$[rsp]
  002a9	45 33 c0	 xor	 r8d, r8d
  002ac	48 8b d0	 mov	 rdx, rax
  002af	48 8b 8c 24 98
	02 00 00	 mov	 rcx, QWORD PTR hBaseKey$[rsp]
  002b7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegQueryValueExW
  002bd	85 c0		 test	 eax, eax
  002bf	75 17		 jne	 SHORT $LN51@Open
  002c1	83 bc 24 d4 04
	00 00 01	 cmp	 DWORD PTR dwType$[rsp], 1
  002c9	75 0d		 jne	 SHORT $LN51@Open
  002cb	c7 84 24 bc 0a
	00 00 00 00 00
	00		 mov	 DWORD PTR tv166[rsp], 0
  002d6	eb 0b		 jmp	 SHORT $LN52@Open
$LN51@Open:
  002d8	c7 84 24 bc 0a
	00 00 01 00 00
	00		 mov	 DWORD PTR tv166[rsp], 1
$LN52@Open:
  002e3	0f b6 84 24 bc
	0a 00 00	 movzx	 eax, BYTE PTR tv166[rsp]
  002eb	88 84 24 10 0a
	00 00		 mov	 BYTE PTR $T36[rsp], al
  002f2	8b 84 24 b8 0a
	00 00		 mov	 eax, DWORD PTR $T47[rsp]
  002f9	83 e0 01	 and	 eax, 1
  002fc	85 c0		 test	 eax, eax
  002fe	74 15		 je	 SHORT $LN58@Open
  00300	83 a4 24 b8 0a
	00 00 fe	 and	 DWORD PTR $T47[rsp], -2
  00308	48 8d 8c 24 18
	0a 00 00	 lea	 rcx, QWORD PTR $T37[rsp]
  00310	e8 00 00 00 00	 call	 ??1_CW@@QEAA@XZ		; _CW::~_CW
$LN58@Open:
  00315	0f b6 84 24 10
	0a 00 00	 movzx	 eax, BYTE PTR $T36[rsp]
  0031d	85 c0		 test	 eax, eax
  0031f	74 2b		 je	 SHORT $LN10@Open

; 752  :          dwType != REG_SZ
; 753  :        )
; 754  :     {
; 755  :         wcscpy( szPhysicalDeviceName, DeviceName );

  00321	48 8b 94 24 28
	0b 00 00	 mov	 rdx, QWORD PTR DeviceName$[rsp]
  00329	48 8d 8c 24 c0
	02 00 00	 lea	 rcx, QWORD PTR szPhysicalDeviceName$[rsp]
  00331	e8 00 00 00 00	 call	 wcscpy

; 756  :         DOTRACE( ( _T("    DeviceName is not a LogicalName; treating as PhysicalName") ) );

  00336	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193507
  0033d	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00345	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 757  :     }

  0034a	eb 57		 jmp	 SHORT $LN11@Open
$LN10@Open:

; 758  :     else
; 759  :     {
; 760  :         NULTERMINATE(szPhysicalDeviceName);

  0034c	b8 02 00 00 00	 mov	 eax, 2
  00351	48 69 c0 ff 00
	00 00		 imul	 rax, rax, 255		; 000000ffH
  00358	48 89 84 24 38
	0a 00 00	 mov	 QWORD PTR $T38[rsp], rax
  00360	48 81 bc 24 38
	0a 00 00 00 02
	00 00		 cmp	 QWORD PTR $T38[rsp], 512 ; 00000200H
  0036c	73 02		 jae	 SHORT $LN53@Open
  0036e	eb 05		 jmp	 SHORT $LN54@Open
$LN53@Open:
  00370	e8 00 00 00 00	 call	 __report_rangecheckfailure
$LN54@Open:
  00375	33 c0		 xor	 eax, eax
  00377	48 8b 8c 24 38
	0a 00 00	 mov	 rcx, QWORD PTR $T38[rsp]
  0037f	66 89 84 0c c0
	02 00 00	 mov	 WORD PTR szPhysicalDeviceName$[rsp+rcx], ax

; 761  :         DOTRACE( ( _T("    DeviceName is a LogicalName; converted to PhysicalName <%s>"), szPhysicalDeviceName ) );

  00387	4c 8d 84 24 c0
	02 00 00	 lea	 r8, QWORD PTR szPhysicalDeviceName$[rsp]
  0038f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193508
  00396	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0039e	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace
$LN11@Open:

; 762  :     }
; 763  : 
; 764  :     // Open the physical registry entry. Close the base key.
; 765  :     //   If fails, then return error.
; 766  :     HKEY hServiceKey;
; 767  :     LONG nRegStat = RegOpenKeyEx(

  003a3	48 8d 84 24 18
	05 00 00	 lea	 rax, QWORD PTR hServiceKey$[rsp]
  003ab	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  003b0	41 b9 19 00 02
	00		 mov	 r9d, 131097		; 00020019H
  003b6	45 33 c0	 xor	 r8d, r8d
  003b9	48 8d 94 24 c0
	02 00 00	 lea	 rdx, QWORD PTR szPhysicalDeviceName$[rsp]
  003c1	48 8b 8c 24 98
	02 00 00	 mov	 rcx, QWORD PTR hBaseKey$[rsp]
  003c9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegOpenKeyExW
  003cf	89 84 24 24 05
	00 00		 mov	 DWORD PTR nRegStat$[rsp], eax

; 768  :             hBaseKey,                   // handle to open key
; 769  :             szPhysicalDeviceName,       // address of name of subkey to open
; 770  :             0,                          // reserved
; 771  :             KEY_READ,                   // security access mask
; 772  :             &hServiceKey );             // address of handle to open key
; 773  :     RegCloseKey( hBaseKey );

  003d6	48 8b 8c 24 98
	02 00 00	 mov	 rcx, QWORD PTR hBaseKey$[rsp]
  003de	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegCloseKey

; 774  :     if ( ERROR_SUCCESS != nRegStat )

  003e4	83 bc 24 24 05
	00 00 00	 cmp	 DWORD PTR nRegStat$[rsp], 0
  003ec	74 51		 je	 SHORT $LN12@Open

; 775  :     {
; 776  :         DOTRACE( ( _T("-  Failed: Cannot open DeviceName subkey (%d/%d)"), *pRC, _nOpenResult ) );

  003ee	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  003f6	44 8b 88 8c 01
	00 00		 mov	 r9d, DWORD PTR [rax+396]
  003fd	48 8b 84 24 30
	0b 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  00405	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  00408	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193510
  0040f	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00417	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 777  :         DOTRACEERR( _T("    RegOpenKeyEx error %d\n    %s"), nRegStat );

  0041c	44 8b 84 24 24
	05 00 00	 mov	 r8d, DWORD PTR nRegStat$[rsp]
  00424	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193511
  0042b	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00433	e8 00 00 00 00	 call	 ?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z ; COPOSVideoCapture::WriteTraceError

; 778  :         return S_OK;

  00438	33 c0		 xor	 eax, eax
  0043a	e9 60 10 00 00	 jmp	 $LN50@Open
$LN12@Open:

; 779  :     }
; 780  :     DOTRACE( ( _T("    Opened DeviceName subkey") ) );

  0043f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193512
  00446	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0044e	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 781  : 
; 782  :     // Initialize ResultCode and OpenResult for possible returns below.
; 783  :     *pRC = SetRC( OPOS_E_NOSERVICE );

  00453	ba 68 00 00 00	 mov	 edx, 104		; 00000068H
  00458	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00460	e8 00 00 00 00	 call	 ?SetRC@COPOSVideoCapture@@IEAAJJ@Z ; COPOSVideoCapture::SetRC
  00465	48 8b 8c 24 30
	0b 00 00	 mov	 rcx, QWORD PTR pRC$[rsp]
  0046d	89 01		 mov	 DWORD PTR [rcx], eax

; 784  :     _nOpenResult = OPOS_OR_REGPROGID;

  0046f	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00477	c7 80 8c 01 00
	00 2f 01 00 00	 mov	 DWORD PTR [rax+396], 303 ; 0000012fH

; 785  : 
; 786  :     // Now get the Service Object's ProgID, which is the default value's data for the device's key.
; 787  :     //   If fails, then return error.
; 788  :     TCHAR sSOProgID[ MAX_REGBUFFER_SIZE ];
; 789  :     dwSize = sizeof( sSOProgID );

  00481	c7 84 24 f4 04
	00 00 00 02 00
	00		 mov	 DWORD PTR dwSize$[rsp], 512 ; 00000200H

; 790  :     nRegStat = RegQueryValueEx(

  0048c	48 8d 84 24 f4
	04 00 00	 lea	 rax, QWORD PTR dwSize$[rsp]
  00494	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00499	48 8d 84 24 40
	05 00 00	 lea	 rax, QWORD PTR sSOProgID$[rsp]
  004a1	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  004a6	4c 8d 8c 24 d4
	04 00 00	 lea	 r9, QWORD PTR dwType$[rsp]
  004ae	45 33 c0	 xor	 r8d, r8d
  004b1	33 d2		 xor	 edx, edx
  004b3	48 8b 8c 24 18
	05 00 00	 mov	 rcx, QWORD PTR hServiceKey$[rsp]
  004bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegQueryValueExW
  004c1	89 84 24 24 05
	00 00		 mov	 DWORD PTR nRegStat$[rsp], eax

; 791  :             hServiceKey,                // Handle to key to query
; 792  :             0,                          // Address of name of value to query
; 793  :             0,                          // Reserved
; 794  :             &dwType,                    // Address of buffer for value type
; 795  :             (LPBYTE) sSOProgID,         // Address of data buffer
; 796  :             &dwSize );                  // Address of data buffer size
; 797  :     RegCloseKey( hServiceKey );

  004c8	48 8b 8c 24 18
	05 00 00	 mov	 rcx, QWORD PTR hServiceKey$[rsp]
  004d0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegCloseKey

; 798  :     if ( ERROR_SUCCESS != nRegStat || dwType != REG_SZ )

  004d6	83 bc 24 24 05
	00 00 00	 cmp	 DWORD PTR nRegStat$[rsp], 0
  004de	75 0a		 jne	 SHORT $LN14@Open
  004e0	83 bc 24 d4 04
	00 00 01	 cmp	 DWORD PTR dwType$[rsp], 1
  004e8	74 51		 je	 SHORT $LN13@Open
$LN14@Open:

; 799  :     {
; 800  :         DOTRACE( ( _T("-  Failed: Cannot get ProgID from registry (%d/%d)"), *pRC, _nOpenResult ) );

  004ea	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  004f2	44 8b 88 8c 01
	00 00		 mov	 r9d, DWORD PTR [rax+396]
  004f9	48 8b 84 24 30
	0b 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  00501	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  00504	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193515
  0050b	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00513	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 801  :         DOTRACEERR( _T("    RegOpenKeyEx error %d\n    %s"), nRegStat );

  00518	44 8b 84 24 24
	05 00 00	 mov	 r8d, DWORD PTR nRegStat$[rsp]
  00520	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193516
  00527	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0052f	e8 00 00 00 00	 call	 ?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z ; COPOSVideoCapture::WriteTraceError

; 802  :         return S_OK;

  00534	33 c0		 xor	 eax, eax
  00536	e9 64 0f 00 00	 jmp	 $LN50@Open
$LN13@Open:

; 803  :     }
; 804  :     NULTERMINATE(sSOProgID);

  0053b	b8 02 00 00 00	 mov	 eax, 2
  00540	48 69 c0 ff 00
	00 00		 imul	 rax, rax, 255		; 000000ffH
  00547	48 89 84 24 40
	0a 00 00	 mov	 QWORD PTR $T39[rsp], rax
  0054f	48 81 bc 24 40
	0a 00 00 00 02
	00 00		 cmp	 QWORD PTR $T39[rsp], 512 ; 00000200H
  0055b	73 02		 jae	 SHORT $LN55@Open
  0055d	eb 05		 jmp	 SHORT $LN56@Open
$LN55@Open:
  0055f	e8 00 00 00 00	 call	 __report_rangecheckfailure
$LN56@Open:
  00564	33 c0		 xor	 eax, eax
  00566	48 8b 8c 24 40
	0a 00 00	 mov	 rcx, QWORD PTR $T39[rsp]
  0056e	66 89 84 0c 40
	05 00 00	 mov	 WORD PTR sSOProgID$[rsp+rcx], ax

; 805  :     DOTRACE( ( _T("    DeviceName mapped to ProgID <%s>"), sSOProgID ) );

  00576	4c 8d 84 24 40
	05 00 00	 lea	 r8, QWORD PTR sSOProgID$[rsp]
  0057e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193517
  00585	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0058d	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 806  : 
; 807  :     // Convert the ProgID to a CLSID.
; 808  :     CLSID SOClassID;
; 809  :     hRC = CLSIDFromProgID(

  00592	48 8d 94 24 40
	05 00 00	 lea	 rdx, QWORD PTR sSOProgID$[rsp]
  0059a	48 8d 8c 24 48
	0a 00 00	 lea	 rcx, QWORD PTR $T40[rsp]
  005a2	e8 00 00 00 00	 call	 ??0_CW@@QEAA@PEB_W@Z	; _CW::_CW
  005a7	48 8b c8	 mov	 rcx, rax
  005aa	e8 00 00 00 00	 call	 ??B_CW@@QEAAPEB_WXZ	; _CW::operator wchar_t const *
  005af	48 8d 94 24 58
	07 00 00	 lea	 rdx, QWORD PTR SOClassID$[rsp]
  005b7	48 8b c8	 mov	 rcx, rax
  005ba	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CLSIDFromProgID
  005c0	89 44 24 54	 mov	 DWORD PTR hRC$[rsp], eax
  005c4	48 8d 8c 24 48
	0a 00 00	 lea	 rcx, QWORD PTR $T40[rsp]
  005cc	e8 00 00 00 00	 call	 ??1_CW@@QEAA@XZ		; _CW::~_CW

; 810  :             _CW(sSOProgID),             // Pointer to the ProgID
; 811  :             &SOClassID );               // Pointer to the CLSID
; 812  :     if ( S_OK != hRC )

  005d1	83 7c 24 54 00	 cmp	 DWORD PTR hRC$[rsp], 0
  005d6	74 4e		 je	 SHORT $LN15@Open

; 813  :     {
; 814  :         DOTRACE( ( _T("-  Failed: Cannot convert ProgID to ClassID (%d/%d)"), *pRC, _nOpenResult ) );

  005d8	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  005e0	44 8b 88 8c 01
	00 00		 mov	 r9d, DWORD PTR [rax+396]
  005e7	48 8b 84 24 30
	0b 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  005ef	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  005f2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193519
  005f9	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00601	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 815  :         DOTRACEERR( _T("    CLSIDFromProgID error 0x%X\n    %s"), hRC );

  00606	44 8b 44 24 54	 mov	 r8d, DWORD PTR hRC$[rsp]
  0060b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193520
  00612	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0061a	e8 00 00 00 00	 call	 ?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z ; COPOSVideoCapture::WriteTraceError

; 816  :         return S_OK;

  0061f	33 c0		 xor	 eax, eax
  00621	e9 79 0e 00 00	 jmp	 $LN50@Open
$LN15@Open:

; 817  :     }
; 818  :     DOTRACE( ( _T("    ProgID mapped to ClassID") ) );

  00626	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193521
  0062d	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00635	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 819  : 
; 820  :     // Make the connection to the Service Object.
; 821  :     //   We create an instance, get the IDispatch pointer, then release the IUnknown pointer.
; 822  :     IUnknown* pUnknown;
; 823  :     hRC = CoCreateInstance(

  0063a	48 8d 84 24 88
	07 00 00	 lea	 rax, QWORD PTR pUnknown$[rsp]
  00642	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00647	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:IID_IUnknown
  0064e	41 b8 17 00 00
	00		 mov	 r8d, 23
  00654	33 d2		 xor	 edx, edx
  00656	48 8d 8c 24 58
	07 00 00	 lea	 rcx, QWORD PTR SOClassID$[rsp]
  0065e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CoCreateInstance
  00664	89 44 24 54	 mov	 DWORD PTR hRC$[rsp], eax

; 824  :             SOClassID,                  // Class identifier (CLSID) of the object
; 825  :             0,                          // Pointer to whether object is or isn't part of an aggregate
; 826  :             CLSCTX_ALL,                 // Context for running executable code
; 827  :             IID_IUnknown,               // Reference to the identifier of the interface
; 828  :             (void**) &pUnknown);        // Address of output variable that receives the interface pointer requested in riid
; 829  :     if ( S_OK != hRC )

  00668	83 7c 24 54 00	 cmp	 DWORD PTR hRC$[rsp], 0
  0066d	74 60		 je	 SHORT $LN16@Open

; 830  :     {
; 831  :         _nOpenResult = OPOS_OR_CREATE;

  0066f	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00677	c7 80 8c 01 00
	00 30 01 00 00	 mov	 DWORD PTR [rax+396], 304 ; 00000130H

; 832  :         DOTRACE( ( _T("-  Failed: Cannot create Service Object (%d/%d)"), *pRC, _nOpenResult ) );

  00681	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00689	44 8b 88 8c 01
	00 00		 mov	 r9d, DWORD PTR [rax+396]
  00690	48 8b 84 24 30
	0b 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  00698	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  0069b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193523
  006a2	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  006aa	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 833  :         DOTRACEERR( _T("    CoCreateInstance error 0x%X\n    %s"), hRC );

  006af	44 8b 44 24 54	 mov	 r8d, DWORD PTR hRC$[rsp]
  006b4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193524
  006bb	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  006c3	e8 00 00 00 00	 call	 ?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z ; COPOSVideoCapture::WriteTraceError

; 834  :         return S_OK;

  006c8	33 c0		 xor	 eax, eax
  006ca	e9 d0 0d 00 00	 jmp	 $LN50@Open
$LN16@Open:

; 835  :     }
; 836  :     DOTRACE( ( _T("    Created Service Object") ) );

  006cf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193525
  006d6	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  006de	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 837  : 
; 838  :     hRC = pUnknown->QueryInterface(

  006e3	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  006eb	48 05 a0 01 00
	00		 add	 rax, 416		; 000001a0H
  006f1	48 8b 8c 24 88
	07 00 00	 mov	 rcx, QWORD PTR pUnknown$[rsp]
  006f9	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  006fc	48 89 8c 24 c0
	0a 00 00	 mov	 QWORD PTR tv266[rsp], rcx
  00704	4c 8b c0	 mov	 r8, rax
  00707	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:IID_IDispatch
  0070e	48 8b 8c 24 88
	07 00 00	 mov	 rcx, QWORD PTR pUnknown$[rsp]
  00716	48 8b 84 24 c0
	0a 00 00	 mov	 rax, QWORD PTR tv266[rsp]
  0071e	ff 10		 call	 QWORD PTR [rax]
  00720	89 44 24 54	 mov	 DWORD PTR hRC$[rsp], eax

; 839  :             IID_IDispatch,              // Identifier of the requested interface
; 840  :             (void**) &_pService );      // Address of output variable that receives the interface pointer requested in iid
; 841  :     pUnknown->Release();                // Done with original pointer.

  00724	48 8b 84 24 88
	07 00 00	 mov	 rax, QWORD PTR pUnknown$[rsp]
  0072c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0072f	48 8b 8c 24 88
	07 00 00	 mov	 rcx, QWORD PTR pUnknown$[rsp]
  00737	ff 50 10	 call	 QWORD PTR [rax+16]

; 842  :     if ( S_OK != hRC )

  0073a	83 7c 24 54 00	 cmp	 DWORD PTR hRC$[rsp], 0
  0073f	74 60		 je	 SHORT $LN17@Open

; 843  :     {
; 844  :         _nOpenResult = OPOS_OR_CREATE;

  00741	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00749	c7 80 8c 01 00
	00 30 01 00 00	 mov	 DWORD PTR [rax+396], 304 ; 00000130H

; 845  :         DOTRACE( ( _T("-  Failed: Cannot get Service Object's Dispatch pointer (%d/%d)"), *pRC, _nOpenResult ) );

  00753	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0075b	44 8b 88 8c 01
	00 00		 mov	 r9d, DWORD PTR [rax+396]
  00762	48 8b 84 24 30
	0b 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  0076a	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  0076d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193527
  00774	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0077c	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 846  :         DOTRACEERR( _T("    QueryInterface error 0x%X\n    %s"), hRC );

  00781	44 8b 44 24 54	 mov	 r8d, DWORD PTR hRC$[rsp]
  00786	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193528
  0078d	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00795	e8 00 00 00 00	 call	 ?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z ; COPOSVideoCapture::WriteTraceError

; 847  :         return S_OK;

  0079a	33 c0		 xor	 eax, eax
  0079c	e9 fe 0c 00 00	 jmp	 $LN50@Open
$LN17@Open:

; 848  :     }
; 849  :     DOTRACE( ( _T("    Acquired Service Object's dispatch pointer") ) );

  007a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193529
  007a8	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  007b0	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 850  : 
; 851  :     // Get the dispatch IDs for the methods supported by the Service Object.
; 852  :     //   Stop when we can't get one or when all are acquired.
; 853  :     int nMethodCount = 0;

  007b5	c7 84 24 94 07
	00 00 00 00 00
	00		 mov	 DWORD PTR nMethodCount$[rsp], 0
$LN2@Open:

; 854  :     while ( s_SOMethodNames[nMethodCount] != 0 )

  007c0	48 63 84 24 94
	07 00 00	 movsxd	 rax, DWORD PTR nMethodCount$[rsp]
  007c8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?s_SOMethodNames@@3PAPEADA
  007cf	48 83 3c c1 00	 cmp	 QWORD PTR [rcx+rax*8], 0
  007d4	0f 84 d7 01 00
	00		 je	 $LN3@Open

; 855  :     {
; 856  :         _CWNCC MN( s_SOMethodNames[nMethodCount] ); // Init for conversion.

  007da	48 63 84 24 94
	07 00 00	 movsxd	 rax, DWORD PTR nMethodCount$[rsp]
  007e2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?s_SOMethodNames@@3PAPEADA
  007e9	48 8b 14 c1	 mov	 rdx, QWORD PTR [rcx+rax*8]
  007ed	48 8d 8c 24 a8
	07 00 00	 lea	 rcx, QWORD PTR MN$26[rsp]
  007f5	e8 00 00 00 00	 call	 ??0_CWNCC@@QEAA@PEBD@Z	; _CWNCC::_CWNCC

; 857  :         OLECHAR* pMN = MN;                          // Assign pointer, converting to wide if needed.

  007fa	48 8d 8c 24 a8
	07 00 00	 lea	 rcx, QWORD PTR MN$26[rsp]
  00802	e8 00 00 00 00	 call	 ??B_CWNCC@@QEAAPEA_WXZ	; _CWNCC::operator wchar_t *
  00807	48 89 84 24 e8
	07 00 00	 mov	 QWORD PTR pMN$27[rsp], rax

; 858  :         if ( S_OK !=

  0080f	48 63 84 24 94
	07 00 00	 movsxd	 rax, DWORD PTR nMethodCount$[rsp]
  00817	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0081f	48 8d 84 81 b4
	01 00 00	 lea	 rax, QWORD PTR [rcx+rax*4+436]
  00827	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0082f	48 8b 89 a0 01
	00 00		 mov	 rcx, QWORD PTR [rcx+416]
  00836	48 8b 94 24 20
	0b 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  0083e	48 8b 92 a0 01
	00 00		 mov	 rdx, QWORD PTR [rdx+416]
  00845	48 89 94 24 c8
	0a 00 00	 mov	 QWORD PTR tv304[rsp], rdx
  0084d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00850	48 89 8c 24 d0
	0a 00 00	 mov	 QWORD PTR tv771[rsp], rcx
  00858	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0085d	c7 44 24 20 00
	08 00 00	 mov	 DWORD PTR [rsp+32], 2048 ; 00000800H
  00865	41 b9 01 00 00
	00		 mov	 r9d, 1
  0086b	4c 8d 84 24 e8
	07 00 00	 lea	 r8, QWORD PTR pMN$27[rsp]
  00873	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:GUID_NULL
  0087a	48 8b 84 24 c8
	0a 00 00	 mov	 rax, QWORD PTR tv304[rsp]
  00882	48 8b c8	 mov	 rcx, rax
  00885	48 8b 84 24 d0
	0a 00 00	 mov	 rax, QWORD PTR tv771[rsp]
  0088d	ff 50 28	 call	 QWORD PTR [rax+40]
  00890	85 c0		 test	 eax, eax
  00892	0f 84 f7 00 00
	00		 je	 $LN18@Open

; 859  :              _pService->GetIDsOfNames(
; 860  :                 IID_NULL, &pMN, 1, LOCALE_SYSTEM_DEFAULT, &_DispIDs[nMethodCount] )
; 861  :            )
; 862  :         {
; 863  :             // If failed, do special cases:
; 864  :             //  - If we failed the newer CloseService, then try Close before failing.
; 865  :             if ( nMethodCount == nDICloseService )

  00898	83 bc 24 94 07
	00 00 09	 cmp	 DWORD PTR nMethodCount$[rsp], 9
  008a0	75 11		 jne	 SHORT $LN19@Open

; 866  :                 pMN = L"Close";

  008a2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193533
  008a9	48 89 84 24 e8
	07 00 00	 mov	 QWORD PTR pMN$27[rsp], rax
  008b1	eb 48		 jmp	 SHORT $LN20@Open
$LN19@Open:

; 867  :             //  - If we failed the newer COM-friendly name ClaimDevice or ReleaseDevice,
; 868  :             //    then try the original name Claim or Release before failing.
; 869  :             else if ( nMethodCount == nDIClaimDevice )

  008b3	83 bc 24 94 07
	00 00 07	 cmp	 DWORD PTR nMethodCount$[rsp], 7
  008bb	75 11		 jne	 SHORT $LN21@Open

; 870  :                 pMN = L"Claim";

  008bd	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193536
  008c4	48 89 84 24 e8
	07 00 00	 mov	 QWORD PTR pMN$27[rsp], rax
  008cc	eb 2d		 jmp	 SHORT $LN20@Open
$LN21@Open:

; 871  :             else if ( nMethodCount == nDIReleaseDevice )

  008ce	83 bc 24 94 07
	00 00 0b	 cmp	 DWORD PTR nMethodCount$[rsp], 11
  008d6	75 11		 jne	 SHORT $LN23@Open

; 872  :                 pMN = L"Release";

  008d8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193539
  008df	48 89 84 24 e8
	07 00 00	 mov	 QWORD PTR pMN$27[rsp], rax
  008e7	eb 12		 jmp	 SHORT $LN20@Open
$LN23@Open:

; 873  :             else                        // If not special case,
; 874  :                 break;                  //   stop.

  008e9	48 8d 8c 24 a8
	07 00 00	 lea	 rcx, QWORD PTR MN$26[rsp]
  008f1	e8 00 00 00 00	 call	 ??1_CWNCC@@QEAA@XZ
  008f6	e9 b6 00 00 00	 jmp	 $LN3@Open
$LN20@Open:

; 875  :             if ( S_OK !=

  008fb	48 63 84 24 94
	07 00 00	 movsxd	 rax, DWORD PTR nMethodCount$[rsp]
  00903	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0090b	48 8d 84 81 b4
	01 00 00	 lea	 rax, QWORD PTR [rcx+rax*4+436]
  00913	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0091b	48 8b 89 a0 01
	00 00		 mov	 rcx, QWORD PTR [rcx+416]
  00922	48 8b 94 24 20
	0b 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  0092a	48 8b 92 a0 01
	00 00		 mov	 rdx, QWORD PTR [rdx+416]
  00931	48 89 94 24 d8
	0a 00 00	 mov	 QWORD PTR tv325[rsp], rdx
  00939	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0093c	48 89 8c 24 e0
	0a 00 00	 mov	 QWORD PTR tv770[rsp], rcx
  00944	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00949	c7 44 24 20 00
	08 00 00	 mov	 DWORD PTR [rsp+32], 2048 ; 00000800H
  00951	41 b9 01 00 00
	00		 mov	 r9d, 1
  00957	4c 8d 84 24 e8
	07 00 00	 lea	 r8, QWORD PTR pMN$27[rsp]
  0095f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:GUID_NULL
  00966	48 8b 84 24 d8
	0a 00 00	 mov	 rax, QWORD PTR tv325[rsp]
  0096e	48 8b c8	 mov	 rcx, rax
  00971	48 8b 84 24 e0
	0a 00 00	 mov	 rax, QWORD PTR tv770[rsp]
  00979	ff 50 28	 call	 QWORD PTR [rax+40]
  0097c	85 c0		 test	 eax, eax
  0097e	74 0f		 je	 SHORT $LN18@Open

; 876  :                  _pService->GetIDsOfNames(
; 877  :                     IID_NULL, &pMN, 1, LOCALE_SYSTEM_DEFAULT, &_DispIDs[nMethodCount] )
; 878  :                )
; 879  :                 break;                  // If special case but still not found, stop.

  00980	48 8d 8c 24 a8
	07 00 00	 lea	 rcx, QWORD PTR MN$26[rsp]
  00988	e8 00 00 00 00	 call	 ??1_CWNCC@@QEAA@XZ
  0098d	eb 22		 jmp	 SHORT $LN3@Open
$LN18@Open:

; 880  :         }
; 881  :         nMethodCount++;

  0098f	8b 84 24 94 07
	00 00		 mov	 eax, DWORD PTR nMethodCount$[rsp]
  00996	ff c0		 inc	 eax
  00998	89 84 24 94 07
	00 00		 mov	 DWORD PTR nMethodCount$[rsp], eax

; 882  :     }

  0099f	48 8d 8c 24 a8
	07 00 00	 lea	 rcx, QWORD PTR MN$26[rsp]
  009a7	e8 00 00 00 00	 call	 ??1_CWNCC@@QEAA@XZ
  009ac	e9 0f fe ff ff	 jmp	 $LN2@Open
$LN3@Open:

; 883  : 
; 884  :     // When debug mode, repeat above trying to get all methods, for later tracing.
; 885  :     #ifdef _DEBUG
; 886  :     int nAllMethods = nMethodCount;

  009b1	8b 84 24 94 07
	00 00		 mov	 eax, DWORD PTR nMethodCount$[rsp]
  009b8	89 84 24 f4 07
	00 00		 mov	 DWORD PTR nAllMethods$[rsp], eax
$LN4@Open:

; 887  :     while ( s_SOMethodNames[nAllMethods] != 0 )

  009bf	48 63 84 24 f4
	07 00 00	 movsxd	 rax, DWORD PTR nAllMethods$[rsp]
  009c7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?s_SOMethodNames@@3PAPEADA
  009ce	48 83 3c c1 00	 cmp	 QWORD PTR [rcx+rax*8], 0
  009d3	0f 84 07 02 00
	00		 je	 $LN5@Open

; 888  :     {
; 889  :         _CWNCC MN( s_SOMethodNames[nAllMethods] );  // Init for conversion.

  009d9	48 63 84 24 f4
	07 00 00	 movsxd	 rax, DWORD PTR nAllMethods$[rsp]
  009e1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?s_SOMethodNames@@3PAPEADA
  009e8	48 8b 14 c1	 mov	 rdx, QWORD PTR [rcx+rax*8]
  009ec	48 8d 8c 24 08
	08 00 00	 lea	 rcx, QWORD PTR MN$28[rsp]
  009f4	e8 00 00 00 00	 call	 ??0_CWNCC@@QEAA@PEBD@Z	; _CWNCC::_CWNCC

; 890  :         OLECHAR* pMN = MN;                          // Assign pointer, converting to wide if needed.

  009f9	48 8d 8c 24 08
	08 00 00	 lea	 rcx, QWORD PTR MN$28[rsp]
  00a01	e8 00 00 00 00	 call	 ??B_CWNCC@@QEAAPEA_WXZ	; _CWNCC::operator wchar_t *
  00a06	48 89 84 24 48
	08 00 00	 mov	 QWORD PTR pMN$29[rsp], rax

; 891  :         if ( S_OK !=

  00a0e	48 63 84 24 f4
	07 00 00	 movsxd	 rax, DWORD PTR nAllMethods$[rsp]
  00a16	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00a1e	48 8d 84 81 b4
	01 00 00	 lea	 rax, QWORD PTR [rcx+rax*4+436]
  00a26	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00a2e	48 8b 89 a0 01
	00 00		 mov	 rcx, QWORD PTR [rcx+416]
  00a35	48 8b 94 24 20
	0b 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  00a3d	48 8b 92 a0 01
	00 00		 mov	 rdx, QWORD PTR [rdx+416]
  00a44	48 89 94 24 e8
	0a 00 00	 mov	 QWORD PTR tv357[rsp], rdx
  00a4c	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00a4f	48 89 8c 24 f0
	0a 00 00	 mov	 QWORD PTR tv769[rsp], rcx
  00a57	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00a5c	c7 44 24 20 00
	08 00 00	 mov	 DWORD PTR [rsp+32], 2048 ; 00000800H
  00a64	41 b9 01 00 00
	00		 mov	 r9d, 1
  00a6a	4c 8d 84 24 48
	08 00 00	 lea	 r8, QWORD PTR pMN$29[rsp]
  00a72	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:GUID_NULL
  00a79	48 8b 84 24 e8
	0a 00 00	 mov	 rax, QWORD PTR tv357[rsp]
  00a81	48 8b c8	 mov	 rcx, rax
  00a84	48 8b 84 24 f0
	0a 00 00	 mov	 rax, QWORD PTR tv769[rsp]
  00a8c	ff 50 28	 call	 QWORD PTR [rax+40]
  00a8f	85 c0		 test	 eax, eax
  00a91	0f 84 27 01 00
	00		 je	 $LN26@Open

; 892  :              _pService->GetIDsOfNames(
; 893  :                 IID_NULL, &pMN, 1, LOCALE_SYSTEM_DEFAULT, &_DispIDs[nAllMethods] )
; 894  :            )
; 895  :         {
; 896  :             pMN = 0;

  00a97	48 c7 84 24 48
	08 00 00 00 00
	00 00		 mov	 QWORD PTR pMN$29[rsp], 0

; 897  :             // If failed, do special cases:
; 898  :             //  - If we failed the newer CloseService, then try Close before failing.
; 899  :             if ( nAllMethods == nDICloseService )

  00aa3	83 bc 24 f4 07
	00 00 09	 cmp	 DWORD PTR nAllMethods$[rsp], 9
  00aab	75 11		 jne	 SHORT $LN27@Open

; 900  :                 pMN = L"Close";

  00aad	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193544
  00ab4	48 89 84 24 48
	08 00 00	 mov	 QWORD PTR pMN$29[rsp], rax
  00abc	eb 51		 jmp	 SHORT $LN28@Open
$LN27@Open:

; 901  :             //  - If we failed the newer COM-friendly name ClaimDevice or ReleaseDevice,
; 902  :             //    then try the original name Claim or Release before failing.
; 903  :             else if ( nAllMethods == nDIClaimDevice )

  00abe	83 bc 24 f4 07
	00 00 07	 cmp	 DWORD PTR nAllMethods$[rsp], 7
  00ac6	75 11		 jne	 SHORT $LN29@Open

; 904  :                 pMN = L"Claim";

  00ac8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193547
  00acf	48 89 84 24 48
	08 00 00	 mov	 QWORD PTR pMN$29[rsp], rax
  00ad7	eb 36		 jmp	 SHORT $LN28@Open
$LN29@Open:

; 905  :             else if ( nAllMethods == nDIReleaseDevice )

  00ad9	83 bc 24 f4 07
	00 00 0b	 cmp	 DWORD PTR nAllMethods$[rsp], 11
  00ae1	75 11		 jne	 SHORT $LN31@Open

; 906  :                 pMN = L"Release";

  00ae3	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193550
  00aea	48 89 84 24 48
	08 00 00	 mov	 QWORD PTR pMN$29[rsp], rax
  00af2	eb 1b		 jmp	 SHORT $LN28@Open
$LN31@Open:

; 907  :             else                                // If not special case,
; 908  :                 _DispIDs[nAllMethods] = -123;   //   mark.

  00af4	48 63 84 24 f4
	07 00 00	 movsxd	 rax, DWORD PTR nAllMethods$[rsp]
  00afc	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00b04	c7 84 81 b4 01
	00 00 85 ff ff
	ff		 mov	 DWORD PTR [rcx+rax*4+436], -123 ; ffffffffffffff85H
$LN28@Open:

; 909  :             if ( pMN != 0 && S_OK !=

  00b0f	48 83 bc 24 48
	08 00 00 00	 cmp	 QWORD PTR pMN$29[rsp], 0
  00b18	0f 84 a0 00 00
	00		 je	 $LN26@Open
  00b1e	48 63 84 24 f4
	07 00 00	 movsxd	 rax, DWORD PTR nAllMethods$[rsp]
  00b26	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00b2e	48 8d 84 81 b4
	01 00 00	 lea	 rax, QWORD PTR [rcx+rax*4+436]
  00b36	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00b3e	48 8b 89 a0 01
	00 00		 mov	 rcx, QWORD PTR [rcx+416]
  00b45	48 8b 94 24 20
	0b 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  00b4d	48 8b 92 a0 01
	00 00		 mov	 rdx, QWORD PTR [rdx+416]
  00b54	48 89 94 24 f8
	0a 00 00	 mov	 QWORD PTR tv383[rsp], rdx
  00b5c	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00b5f	48 89 8c 24 00
	0b 00 00	 mov	 QWORD PTR tv768[rsp], rcx
  00b67	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00b6c	c7 44 24 20 00
	08 00 00	 mov	 DWORD PTR [rsp+32], 2048 ; 00000800H
  00b74	41 b9 01 00 00
	00		 mov	 r9d, 1
  00b7a	4c 8d 84 24 48
	08 00 00	 lea	 r8, QWORD PTR pMN$29[rsp]
  00b82	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:GUID_NULL
  00b89	48 8b 84 24 f8
	0a 00 00	 mov	 rax, QWORD PTR tv383[rsp]
  00b91	48 8b c8	 mov	 rcx, rax
  00b94	48 8b 84 24 00
	0b 00 00	 mov	 rax, QWORD PTR tv768[rsp]
  00b9c	ff 50 28	 call	 QWORD PTR [rax+40]
  00b9f	85 c0		 test	 eax, eax
  00ba1	74 1b		 je	 SHORT $LN26@Open

; 910  :                  _pService->GetIDsOfNames(
; 911  :                     IID_NULL, &pMN, 1, LOCALE_SYSTEM_DEFAULT, &_DispIDs[nAllMethods] )
; 912  :                )
; 913  :                 _DispIDs[nAllMethods] = -123;   // If special case but still not found, mark.

  00ba3	48 63 84 24 f4
	07 00 00	 movsxd	 rax, DWORD PTR nAllMethods$[rsp]
  00bab	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00bb3	c7 84 81 b4 01
	00 00 85 ff ff
	ff		 mov	 DWORD PTR [rcx+rax*4+436], -123 ; ffffffffffffff85H
$LN26@Open:

; 914  :         }
; 915  :         nAllMethods++;

  00bbe	8b 84 24 f4 07
	00 00		 mov	 eax, DWORD PTR nAllMethods$[rsp]
  00bc5	ff c0		 inc	 eax
  00bc7	89 84 24 f4 07
	00 00		 mov	 DWORD PTR nAllMethods$[rsp], eax

; 916  :     }

  00bce	48 8d 8c 24 08
	08 00 00	 lea	 rcx, QWORD PTR MN$28[rsp]
  00bd6	e8 00 00 00 00	 call	 ??1_CWNCC@@QEAA@XZ
  00bdb	e9 df fd ff ff	 jmp	 $LN4@Open
$LN5@Open:

; 917  :     #endif
; 918  : 
; 919  :     // The SO must at least support all of the initial release's methods,
; 920  :     //   or we won't continue.
; 921  :     if ( nMethodCount < s_RequiredMethodsPerRelease[0] )

  00be0	b8 04 00 00 00	 mov	 eax, 4
  00be5	48 6b c0 00	 imul	 rax, rax, 0
  00be9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?s_RequiredMethodsPerRelease@@3PAHA
  00bf0	8b 04 01	 mov	 eax, DWORD PTR [rcx+rax]
  00bf3	39 84 24 94 07
	00 00		 cmp	 DWORD PTR nMethodCount$[rsp], eax
  00bfa	0f 8d 9b 00 00
	00		 jge	 $LN34@Open

; 922  :     {
; 923  :         _nOpenResult = OPOS_OR_BADIF;

  00c00	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00c08	c7 80 8c 01 00
	00 31 01 00 00	 mov	 DWORD PTR [rax+396], 305 ; 00000131H

; 924  :         _pService->Release();

  00c12	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00c1a	48 8b 80 a0 01
	00 00		 mov	 rax, QWORD PTR [rax+416]
  00c21	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00c29	48 8b 89 a0 01
	00 00		 mov	 rcx, QWORD PTR [rcx+416]
  00c30	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00c33	ff 50 10	 call	 QWORD PTR [rax+16]

; 925  :         DOTRACE( ( _T("-  Failed: Doesn't support all of initial release's methods (%d/%d)"), *pRC, _nOpenResult ) );

  00c36	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00c3e	44 8b 88 8c 01
	00 00		 mov	 r9d, DWORD PTR [rax+396]
  00c45	48 8b 84 24 30
	0b 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  00c4d	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  00c50	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193553
  00c57	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00c5f	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 926  :         DOTRACEMETHODS( _DispIDs, s_RequiredMethodsPerRelease[0] );

  00c64	b8 04 00 00 00	 mov	 eax, 4
  00c69	48 6b c0 00	 imul	 rax, rax, 0
  00c6d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?s_RequiredMethodsPerRelease@@3PAHA
  00c74	48 8b 94 24 20
	0b 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  00c7c	48 81 c2 b4 01
	00 00		 add	 rdx, 436		; 000001b4H
  00c83	44 8b 04 01	 mov	 r8d, DWORD PTR [rcx+rax]
  00c87	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00c8f	e8 00 00 00 00	 call	 ?WriteTraceMethods@COPOSVideoCapture@@QEAAXPEAJH@Z ; COPOSVideoCapture::WriteTraceMethods

; 927  :         return S_OK;

  00c94	33 c0		 xor	 eax, eax
  00c96	e9 04 08 00 00	 jmp	 $LN50@Open
$LN34@Open:

; 928  :     }
; 929  : 
; 930  :     // Get our own dispatch pointer.
; 931  :     //   Immediately release it -- saves releasing later,
; 932  :     //   since it is just another reference to us.
; 933  :     IDispatch* pDispatch = 0;

  00c9b	48 c7 84 24 68
	08 00 00 00 00
	00 00		 mov	 QWORD PTR pDispatch$[rsp], 0

; 934  :     CMVERIFY( S_OK == QueryInterface( IID_IDispatch, (void**) &pDispatch ) );

  00ca7	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00caf	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00cb2	4c 8d 84 24 68
	08 00 00	 lea	 r8, QWORD PTR pDispatch$[rsp]
  00cba	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:IID_IDispatch
  00cc1	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00cc9	ff 10		 call	 QWORD PTR [rax]
  00ccb	85 c0		 test	 eax, eax
  00ccd	74 1b		 je	 SHORT $LN57@Open
  00ccf	41 b8 a6 03 00
	00		 mov	 r8d, 934		; 000003a6H
  00cd5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193554
  00cdc	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG193555
  00ce3	e8 00 00 00 00	 call	 ?_assert@@YAXPEB_W0I@Z	; _assert
  00ce8	33 c0		 xor	 eax, eax
$LN57@Open:

; 935  :     if ( pDispatch != 0 )

  00cea	48 83 bc 24 68
	08 00 00 00	 cmp	 QWORD PTR pDispatch$[rsp], 0
  00cf3	74 16		 je	 SHORT $LN35@Open

; 936  :         pDispatch->Release();

  00cf5	48 8b 84 24 68
	08 00 00	 mov	 rax, QWORD PTR pDispatch$[rsp]
  00cfd	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00d00	48 8b 8c 24 68
	08 00 00	 mov	 rcx, QWORD PTR pDispatch$[rsp]
  00d08	ff 50 10	 call	 QWORD PTR [rax+16]
$LN35@Open:

; 937  : 
; 938  :     // Now call the Service Object's OpenService method.
; 939  :     OposVariant Vars[3];

  00d0b	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??0OposVariant@@QEAA@XZ ; OposVariant::OposVariant
  00d12	41 b8 03 00 00
	00		 mov	 r8d, 3
  00d18	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00d1d	48 8d 8c 24 90
	08 00 00	 lea	 rcx, QWORD PTR Vars$[rsp]
  00d25	e8 00 00 00 00	 call	 ??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 940  :     Vars[2].SetString( _CW(OPOS_CLASSKEY_VCAP), hRC );

  00d2a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193557
  00d31	48 8d 8c 24 68
	0a 00 00	 lea	 rcx, QWORD PTR $T41[rsp]
  00d39	e8 00 00 00 00	 call	 ??0_CW@@QEAA@PEBD@Z	; _CW::_CW
  00d3e	48 8b c8	 mov	 rcx, rax
  00d41	e8 00 00 00 00	 call	 ??B_CW@@QEAAPEB_WXZ	; _CW::operator wchar_t const *
  00d46	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00d4b	48 6b c9 02	 imul	 rcx, rcx, 2
  00d4f	48 8d 8c 0c 90
	08 00 00	 lea	 rcx, QWORD PTR Vars$[rsp+rcx]
  00d57	4c 8d 44 24 54	 lea	 r8, QWORD PTR hRC$[rsp]
  00d5c	48 8b d0	 mov	 rdx, rax
  00d5f	e8 00 00 00 00	 call	 ?SetString@OposVariant@@QEAAXPEB_WAEAJ@Z ; OposVariant::SetString
  00d64	48 8d 8c 24 68
	0a 00 00	 lea	 rcx, QWORD PTR $T41[rsp]
  00d6c	e8 00 00 00 00	 call	 ??1_CW@@QEAA@XZ		; _CW::~_CW

; 941  :     Vars[1].SetString( _CW(szPhysicalDeviceName), hRC );

  00d71	48 8d 94 24 c0
	02 00 00	 lea	 rdx, QWORD PTR szPhysicalDeviceName$[rsp]
  00d79	48 8d 8c 24 88
	0a 00 00	 lea	 rcx, QWORD PTR $T42[rsp]
  00d81	e8 00 00 00 00	 call	 ??0_CW@@QEAA@PEB_W@Z	; _CW::_CW
  00d86	48 8b c8	 mov	 rcx, rax
  00d89	e8 00 00 00 00	 call	 ??B_CW@@QEAAPEB_WXZ	; _CW::operator wchar_t const *
  00d8e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00d93	48 6b c9 01	 imul	 rcx, rcx, 1
  00d97	48 8d 8c 0c 90
	08 00 00	 lea	 rcx, QWORD PTR Vars$[rsp+rcx]
  00d9f	4c 8d 44 24 54	 lea	 r8, QWORD PTR hRC$[rsp]
  00da4	48 8b d0	 mov	 rdx, rax
  00da7	e8 00 00 00 00	 call	 ?SetString@OposVariant@@QEAAXPEB_WAEAJ@Z ; OposVariant::SetString
  00dac	48 8d 8c 24 88
	0a 00 00	 lea	 rcx, QWORD PTR $T42[rsp]
  00db4	e8 00 00 00 00	 call	 ??1_CW@@QEAA@XZ		; _CW::~_CW

; 942  :     Vars[0].SetDispatch_Ptr( pDispatch, hRC );

  00db9	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00dbe	48 6b c0 00	 imul	 rax, rax, 0
  00dc2	48 8d 84 04 90
	08 00 00	 lea	 rax, QWORD PTR Vars$[rsp+rax]
  00dca	4c 8d 44 24 54	 lea	 r8, QWORD PTR hRC$[rsp]
  00dcf	48 8b 94 24 68
	08 00 00	 mov	 rdx, QWORD PTR pDispatch$[rsp]
  00dd7	48 8b c8	 mov	 rcx, rax
  00dda	e8 00 00 00 00	 call	 ?SetDispatch_Ptr@OposVariant@@QEAAXPEAUIDispatch@@AEAJ@Z ; OposVariant::SetDispatch_Ptr

; 943  :     if ( FAILED(hRC) )

  00ddf	83 7c 24 54 00	 cmp	 DWORD PTR hRC$[rsp], 0
  00de4	7d 73		 jge	 SHORT $LN36@Open

; 944  :     {
; 945  :         _pService->Release();

  00de6	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00dee	48 8b 80 a0 01
	00 00		 mov	 rax, QWORD PTR [rax+416]
  00df5	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00dfd	48 8b 89 a0 01
	00 00		 mov	 rcx, QWORD PTR [rcx+416]
  00e04	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00e07	ff 50 10	 call	 QWORD PTR [rax+16]

; 946  :         DOTRACEERR( _T("-  Failed: Setup for OpenService call 0x%X\n    %s"), hRC );

  00e0a	44 8b 44 24 54	 mov	 r8d, DWORD PTR hRC$[rsp]
  00e0f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193559
  00e16	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00e1e	e8 00 00 00 00	 call	 ?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z ; COPOSVideoCapture::WriteTraceError

; 947  :         return hRC;

  00e23	8b 44 24 54	 mov	 eax, DWORD PTR hRC$[rsp]
  00e27	89 84 24 a8 0a
	00 00		 mov	 DWORD PTR $T43[rsp], eax
  00e2e	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1OposVariant@@QEAA@XZ ; OposVariant::~OposVariant
  00e35	41 b8 03 00 00
	00		 mov	 r8d, 3
  00e3b	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00e40	48 8d 8c 24 90
	08 00 00	 lea	 rcx, QWORD PTR Vars$[rsp]
  00e48	e8 00 00 00 00	 call	 ??_I@YAXPEAX_K1P6AX0@Z@Z
  00e4d	8b 84 24 a8 0a
	00 00		 mov	 eax, DWORD PTR $T43[rsp]
  00e54	e9 46 06 00 00	 jmp	 $LN50@Open
$LN36@Open:

; 948  :     }
; 949  :     hRC = DoInvoke( DEBUGPARAM("Open-OpenService") S_OK, Vars, 3, nDIOpenService, pRC, false );

  00e59	c6 44 24 38 00	 mov	 BYTE PTR [rsp+56], 0
  00e5e	48 8b 84 24 30
	0b 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  00e66	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00e6b	c7 44 24 28 05
	00 00 00	 mov	 DWORD PTR [rsp+40], 5
  00e73	c7 44 24 20 03
	00 00 00	 mov	 DWORD PTR [rsp+32], 3
  00e7b	4c 8d 8c 24 90
	08 00 00	 lea	 r9, QWORD PTR Vars$[rsp]
  00e83	45 33 c0	 xor	 r8d, r8d
  00e86	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193561
  00e8d	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00e95	e8 00 00 00 00	 call	 ?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z ; COPOSVideoCapture::DoInvoke
  00e9a	89 44 24 54	 mov	 DWORD PTR hRC$[rsp], eax

; 950  : 
; 951  :     // If the OpenService fails, then set result code and return.
; 952  :     if ( hRC != S_OK || *pRC != OPOS_SUCCESS )

  00e9e	83 7c 24 54 00	 cmp	 DWORD PTR hRC$[rsp], 0
  00ea3	75 11		 jne	 SHORT $LN38@Open
  00ea5	48 8b 84 24 30
	0b 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  00ead	83 38 00	 cmp	 DWORD PTR [rax], 0
  00eb0	0f 84 00 02 00
	00		 je	 $LN37@Open
$LN38@Open:

; 953  :     {
; 954  :         // Set the default open result code.
; 955  :         _nOpenResult = OPOS_OR_FAILEDOPEN;

  00eb6	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00ebe	c7 80 8c 01 00
	00 32 01 00 00	 mov	 DWORD PTR [rax+396], 306 ; 00000132H

; 956  :         // If not a COM error, and the SO supports the GetOpenResult method,
; 957  :         //   then call it to get the open result code.
; 958  :         if ( hRC == S_OK )

  00ec8	83 7c 24 54 00	 cmp	 DWORD PTR hRC$[rsp], 0
  00ecd	0f 85 42 01 00
	00		 jne	 $LN39@Open

; 959  :         {
; 960  :             // Try to get DispID of the method.
; 961  :             OLECHAR* pMN = L"GetOpenResult";

  00ed3	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193565
  00eda	48 89 84 24 08
	09 00 00	 mov	 QWORD PTR pMN$30[rsp], rax

; 962  :             DISPID DispID;
; 963  :             if ( S_OK ==

  00ee2	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00eea	48 8b 80 a0 01
	00 00		 mov	 rax, QWORD PTR [rax+416]
  00ef1	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00ef9	48 8b 89 a0 01
	00 00		 mov	 rcx, QWORD PTR [rcx+416]
  00f00	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00f03	48 8d 94 24 24
	09 00 00	 lea	 rdx, QWORD PTR DispID$31[rsp]
  00f0b	48 89 54 24 28	 mov	 QWORD PTR [rsp+40], rdx
  00f10	c7 44 24 20 00
	08 00 00	 mov	 DWORD PTR [rsp+32], 2048 ; 00000800H
  00f18	41 b9 01 00 00
	00		 mov	 r9d, 1
  00f1e	4c 8d 84 24 08
	09 00 00	 lea	 r8, QWORD PTR pMN$30[rsp]
  00f26	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:GUID_NULL
  00f2d	ff 50 28	 call	 QWORD PTR [rax+40]
  00f30	85 c0		 test	 eax, eax
  00f32	0f 85 dd 00 00
	00		 jne	 $LN39@Open

; 964  :                  _pService->GetIDsOfNames(
; 965  :                     IID_NULL, &pMN, 1, LOCALE_SYSTEM_DEFAULT, &DispID )
; 966  :                )
; 967  :             {
; 968  :                 // If method exists, set up and call the SO's get property open result method.
; 969  :                 OposVariantResult VarResult;

  00f38	48 8d 8c 24 48
	09 00 00	 lea	 rcx, QWORD PTR VarResult$32[rsp]
  00f40	e8 00 00 00 00	 call	 ??0OposVariantResult@@QEAA@XZ

; 970  :                 DISPPARAMS Disp = { NULL, NULL, 0, 0 };

  00f45	48 c7 84 24 88
	09 00 00 00 00
	00 00		 mov	 QWORD PTR Disp$33[rsp], 0
  00f51	48 c7 84 24 90
	09 00 00 00 00
	00 00		 mov	 QWORD PTR Disp$33[rsp+8], 0
  00f5d	c7 84 24 98 09
	00 00 00 00 00
	00		 mov	 DWORD PTR Disp$33[rsp+16], 0
  00f68	c7 84 24 9c 09
	00 00 00 00 00
	00		 mov	 DWORD PTR Disp$33[rsp+20], 0

; 971  :                 if ( S_OK == _pService->Invoke(

  00f73	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00f7b	48 8b 80 a0 01
	00 00		 mov	 rax, QWORD PTR [rax+416]
  00f82	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00f8a	48 8b 89 a0 01
	00 00		 mov	 rcx, QWORD PTR [rcx+416]
  00f91	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00f94	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR [rsp+64], 0
  00f9d	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR [rsp+56], 0
  00fa6	48 8d 94 24 48
	09 00 00	 lea	 rdx, QWORD PTR VarResult$32[rsp]
  00fae	48 89 54 24 30	 mov	 QWORD PTR [rsp+48], rdx
  00fb3	48 8d 94 24 88
	09 00 00	 lea	 rdx, QWORD PTR Disp$33[rsp]
  00fbb	48 89 54 24 28	 mov	 QWORD PTR [rsp+40], rdx
  00fc0	66 c7 44 24 20
	01 00		 mov	 WORD PTR [rsp+32], 1
  00fc7	41 b9 00 04 00
	00		 mov	 r9d, 1024		; 00000400H
  00fcd	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:GUID_NULL
  00fd4	8b 94 24 24 09
	00 00		 mov	 edx, DWORD PTR DispID$31[rsp]
  00fdb	ff 50 30	 call	 QWORD PTR [rax+48]
  00fde	85 c0		 test	 eax, eax
  00fe0	75 26		 jne	 SHORT $LN41@Open

; 972  :                         DispID, IID_NULL, LOCALE_USER_DEFAULT,
; 973  :                         DISPATCH_METHOD, &Disp, &VarResult, NULL, NULL )
; 974  :                    )
; 975  :                 {
; 976  :                     // If method succeeds, convert (if needed) to long and set open result code.
; 977  :                     HRESULT hRCTmp;
; 978  :                     VarResult.ChangeLONG( &_nOpenResult, hRCTmp );

  00fe2	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00fea	48 05 8c 01 00
	00		 add	 rax, 396		; 0000018cH
  00ff0	4c 8d 84 24 b4
	09 00 00	 lea	 r8, QWORD PTR hRCTmp$34[rsp]
  00ff8	48 8b d0	 mov	 rdx, rax
  00ffb	48 8d 8c 24 48
	09 00 00	 lea	 rcx, QWORD PTR VarResult$32[rsp]
  01003	e8 00 00 00 00	 call	 ?ChangeLONG@OposVariant@@QEAAXPEAJAEAJ@Z ; OposVariant::ChangeLONG
$LN41@Open:

; 979  :                 }
; 980  :             }

  01008	48 8d 8c 24 48
	09 00 00	 lea	 rcx, QWORD PTR VarResult$32[rsp]
  01010	e8 00 00 00 00	 call	 ??1OposVariantResult@@QEAA@XZ ; OposVariantResult::~OposVariantResult
$LN39@Open:

; 981  :         }
; 982  :         // Release the SO and return its OpenService HRESULT.
; 983  :         _pService->Release();

  01015	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0101d	48 8b 80 a0 01
	00 00		 mov	 rax, QWORD PTR [rax+416]
  01024	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0102c	48 8b 89 a0 01
	00 00		 mov	 rcx, QWORD PTR [rcx+416]
  01033	48 8b 00	 mov	 rax, QWORD PTR [rax]
  01036	ff 50 10	 call	 QWORD PTR [rax+16]

; 984  :         DOTRACE( ( _T("-  Failed: Service Object's OpenService reported failure (%d/%d)"), *pRC, _nOpenResult ) );

  01039	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  01041	44 8b 88 8c 01
	00 00		 mov	 r9d, DWORD PTR [rax+396]
  01048	48 8b 84 24 30
	0b 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  01050	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  01053	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193568
  0105a	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  01062	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 985  :         DOTRACEERR( _T("    Invoke error 0x%X\n    %s"), hRC );

  01067	44 8b 44 24 54	 mov	 r8d, DWORD PTR hRC$[rsp]
  0106c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193569
  01073	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0107b	e8 00 00 00 00	 call	 ?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z ; COPOSVideoCapture::WriteTraceError

; 986  :         return hRC;

  01080	8b 44 24 54	 mov	 eax, DWORD PTR hRC$[rsp]
  01084	89 84 24 ac 0a
	00 00		 mov	 DWORD PTR $T44[rsp], eax
  0108b	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1OposVariant@@QEAA@XZ ; OposVariant::~OposVariant
  01092	41 b8 03 00 00
	00		 mov	 r8d, 3
  01098	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0109d	48 8d 8c 24 90
	08 00 00	 lea	 rcx, QWORD PTR Vars$[rsp]
  010a5	e8 00 00 00 00	 call	 ??_I@YAXPEAX_K1P6AX0@Z@Z
  010aa	8b 84 24 ac 0a
	00 00		 mov	 eax, DWORD PTR $T44[rsp]
  010b1	e9 e9 03 00 00	 jmp	 $LN50@Open
$LN37@Open:

; 987  :     }
; 988  :     DOTRACE( ( _T("    Service Object's OpenService succeeded") ) );

  010b6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193571
  010bd	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  010c5	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 989  : 
; 990  :     // Prepare for events.
; 991  :     EventOpen();

  010ca	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  010d2	e8 00 00 00 00	 call	 ?EventOpen@COPOSVideoCapture@@IEAAXXZ ; COPOSVideoCapture::EventOpen

; 992  : 
; 993  :     // The CO and SO are now open.
; 994  :     _bOpened = true;

  010d7	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  010df	c6 80 88 01 00
	00 01		 mov	 BYTE PTR [rax+392], 1

; 995  : 
; 996  :     // Trace some service object information, and initialize debug data.
; 997  :     #ifdef _DEBUG
; 998  :     DOTRACE( ( _T("    <Start> Service Object Properties.") ) );

  010e6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193572
  010ed	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  010f5	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 999  :     BSTR bstrSOInfo;
; 1000 :     GetOposProp( DEBUGPARAM("Open-ServiceObjectDescription") PIDX_ServiceObjectDescription, &bstrSOInfo, 0 );

  010fa	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  01102	4c 8d 8c 24 d8
	09 00 00	 lea	 r9, QWORD PTR bstrSOInfo$[rsp]
  0110a	41 b8 44 42 0f
	00		 mov	 r8d, 1000004		; 000f4244H
  01110	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193573
  01117	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0111f	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 1001 :     SysFreeString(bstrSOInfo);

  01124	48 8b 8c 24 d8
	09 00 00	 mov	 rcx, QWORD PTR bstrSOInfo$[rsp]
  0112c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SysFreeString

; 1002 :     GetOposProp( DEBUGPARAM("Open-DeviceDescription") PIDX_DeviceDescription, &bstrSOInfo, 0 );

  01132	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  0113a	4c 8d 8c 24 d8
	09 00 00	 lea	 r9, QWORD PTR bstrSOInfo$[rsp]
  01142	41 b8 42 42 0f
	00		 mov	 r8d, 1000002		; 000f4242H
  01148	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193574
  0114f	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  01157	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 1003 :     SysFreeString(bstrSOInfo);

  0115c	48 8b 8c 24 d8
	09 00 00	 mov	 rcx, QWORD PTR bstrSOInfo$[rsp]
  01164	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SysFreeString

; 1004 :     GetOposProp( DEBUGPARAM("Open-DeviceName") PIDX_DeviceName, &bstrSOInfo, 0 );

  0116a	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  01172	4c 8d 8c 24 d8
	09 00 00	 lea	 r9, QWORD PTR bstrSOInfo$[rsp]
  0117a	41 b8 43 42 0f
	00		 mov	 r8d, 1000003		; 000f4243H
  01180	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193575
  01187	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0118f	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 1005 :     SysFreeString(bstrSOInfo);

  01194	48 8b 8c 24 d8
	09 00 00	 mov	 rcx, QWORD PTR bstrSOInfo$[rsp]
  0119c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SysFreeString

; 1006 :     DOTRACE( ( _T("    <End> Service Object Properties.") ) );

  011a2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193576
  011a9	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  011b1	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 1007 :     #endif
; 1008 : 
; 1009 :     // Now do some versioning support checks...
; 1010 :     bool bBadSO = false;

  011b6	c6 84 24 e4 09
	00 00 00	 mov	 BYTE PTR bBadSO$[rsp], 0

; 1011 : 
; 1012 :     //  - Get the SO's version, and determine the major and minor version.
; 1013 :     long nSOVersion;
; 1014 :     GetOposProp( DEBUGPARAM("Open-ServiceObjectVersion") PIDX_ServiceObjectVersion, &nSOVersion, 0 );

  011be	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  011c6	4c 8d 8c 24 f4
	09 00 00	 lea	 r9, QWORD PTR nSOVersion$[rsp]
  011ce	41 b8 08 00 00
	00		 mov	 r8d, 8
  011d4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193577
  011db	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  011e3	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1015 :     _nSOMajor = nSOVersion / 1000000;

  011e8	8b 84 24 f4 09
	00 00		 mov	 eax, DWORD PTR nSOVersion$[rsp]
  011ef	99		 cdq
  011f0	b9 40 42 0f 00	 mov	 ecx, 1000000		; 000f4240H
  011f5	f7 f9		 idiv	 ecx
  011f7	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  011ff	89 81 90 01 00
	00		 mov	 DWORD PTR [rcx+400], eax

; 1016 :     _nSOMinor = ( nSOVersion / 1000 ) % 1000;

  01205	8b 84 24 f4 09
	00 00		 mov	 eax, DWORD PTR nSOVersion$[rsp]
  0120c	99		 cdq
  0120d	b9 e8 03 00 00	 mov	 ecx, 1000		; 000003e8H
  01212	f7 f9		 idiv	 ecx
  01214	99		 cdq
  01215	b9 e8 03 00 00	 mov	 ecx, 1000		; 000003e8H
  0121a	f7 f9		 idiv	 ecx
  0121c	8b c2		 mov	 eax, edx
  0121e	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  01226	89 81 94 01 00
	00		 mov	 DWORD PTR [rcx+404], eax

; 1017 : 
; 1018 :     //  - If major version is not 1, then bad SO.
; 1019 :     if ( _nSOMajor != 1 )

  0122c	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  01234	83 b8 90 01 00
	00 01		 cmp	 DWORD PTR [rax+400], 1
  0123b	74 48		 je	 SHORT $LN42@Open

; 1020 :     {
; 1021 :         _nOpenResult = OPOS_OR_BADVERSION;

  0123d	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  01245	c7 80 8c 01 00
	00 33 01 00 00	 mov	 DWORD PTR [rax+396], 307 ; 00000133H

; 1022 :         bBadSO = true;

  0124f	c6 84 24 e4 09
	00 00 01	 mov	 BYTE PTR bBadSO$[rsp], 1

; 1023 :         DOTRACE( ( _T("-  Failed: Service Object's major version is not 1 (%d/%d)"), OPOS_E_NOSERVICE, _nOpenResult ) );

  01257	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0125f	44 8b 88 8c 01
	00 00		 mov	 r9d, DWORD PTR [rax+396]
  01266	41 b8 68 00 00
	00		 mov	 r8d, 104		; 00000068H
  0126c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193580
  01273	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0127b	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 1024 :     }

  01280	e9 02 01 00 00	 jmp	 $LN43@Open
$LN42@Open:

; 1025 : 
; 1026 :     //  - If SO doesn't support enough methods, then bad SO.
; 1027 :     else
; 1028 :     {
; 1029 :         long nReqMethodIndex = sizeof(s_RequiredMethodsPerRelease)/sizeof(int) - 1;

  01285	c7 84 24 04 0a
	00 00 00 00 00
	00		 mov	 DWORD PTR nReqMethodIndex$35[rsp], 0

; 1030 :         // Shouldn't have SO with release below control's first release, but check anyway.
; 1031 :         if ( _nSOMinor < MinorReleaseInitial )

  01290	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  01298	83 b8 94 01 00
	00 10		 cmp	 DWORD PTR [rax+404], 16
  0129f	7d 0d		 jge	 SHORT $LN44@Open

; 1032 :             nReqMethodIndex = 0;

  012a1	c7 84 24 04 0a
	00 00 00 00 00
	00		 mov	 DWORD PTR nReqMethodIndex$35[rsp], 0
  012ac	eb 32		 jmp	 SHORT $LN45@Open
$LN44@Open:

; 1033 :         // If SO release is below that supported by this control, use its release's methods.
; 1034 :         else if ( nReqMethodIndex > _nSOMinor - MinorReleaseInitial )

  012ae	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  012b6	8b 80 94 01 00
	00		 mov	 eax, DWORD PTR [rax+404]
  012bc	83 e8 10	 sub	 eax, 16
  012bf	39 84 24 04 0a
	00 00		 cmp	 DWORD PTR nReqMethodIndex$35[rsp], eax
  012c6	7e 18		 jle	 SHORT $LN45@Open

; 1035 :             nReqMethodIndex = _nSOMinor - MinorReleaseInitial;

  012c8	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  012d0	8b 80 94 01 00
	00		 mov	 eax, DWORD PTR [rax+404]
  012d6	83 e8 10	 sub	 eax, 16
  012d9	89 84 24 04 0a
	00 00		 mov	 DWORD PTR nReqMethodIndex$35[rsp], eax
$LN45@Open:

; 1036 :         // Set the maximum method index.
; 1037 :         _nMaxMethod = s_RequiredMethodsPerRelease[ nReqMethodIndex ];

  012e0	48 63 84 24 04
	0a 00 00	 movsxd	 rax, DWORD PTR nReqMethodIndex$35[rsp]
  012e8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?s_RequiredMethodsPerRelease@@3PAHA
  012ef	48 8b 94 24 20
	0b 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  012f7	8b 04 81	 mov	 eax, DWORD PTR [rcx+rax*4]
  012fa	89 82 b0 01 00
	00		 mov	 DWORD PTR [rdx+432], eax

; 1038 :         // Ensure that the SO supports the methods that it claims to support.
; 1039 :         if ( nMethodCount < _nMaxMethod )

  01300	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  01308	8b 80 b0 01 00
	00		 mov	 eax, DWORD PTR [rax+432]
  0130e	39 84 24 94 07
	00 00		 cmp	 DWORD PTR nMethodCount$[rsp], eax
  01315	7d 70		 jge	 SHORT $LN43@Open

; 1040 :         {
; 1041 :             _nOpenResult = OPOS_OR_BADIF;

  01317	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0131f	c7 80 8c 01 00
	00 31 01 00 00	 mov	 DWORD PTR [rax+396], 305 ; 00000131H

; 1042 :             bBadSO = true;

  01329	c6 84 24 e4 09
	00 00 01	 mov	 BYTE PTR bBadSO$[rsp], 1

; 1043 :             DOTRACE( ( _T("-  Failed: Doesn't support all of its release's methods (%d/%d)"), OPOS_E_NOSERVICE, _nOpenResult ) );

  01331	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  01339	44 8b 88 8c 01
	00 00		 mov	 r9d, DWORD PTR [rax+396]
  01340	41 b8 68 00 00
	00		 mov	 r8d, 104		; 00000068H
  01346	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193585
  0134d	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  01355	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 1044 :             DOTRACEMETHODS( _DispIDs, _nMaxMethod );

  0135a	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  01362	48 05 b4 01 00
	00		 add	 rax, 436		; 000001b4H
  01368	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  01370	44 8b 81 b0 01
	00 00		 mov	 r8d, DWORD PTR [rcx+432]
  01377	48 8b d0	 mov	 rdx, rax
  0137a	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  01382	e8 00 00 00 00	 call	 ?WriteTraceMethods@COPOSVideoCapture@@QEAAXPEAJH@Z ; COPOSVideoCapture::WriteTraceMethods
$LN43@Open:

; 1045 :         }
; 1046 :     }
; 1047 : 
; 1048 :     // If bad SO, then fail the open.
; 1049 :     if ( bBadSO )

  01387	0f b6 84 24 e4
	09 00 00	 movzx	 eax, BYTE PTR bBadSO$[rsp]
  0138f	85 c0		 test	 eax, eax
  01391	74 73		 je	 SHORT $LN48@Open

; 1050 :     {
; 1051 :         Close( pRC );

  01393	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0139b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0139e	48 8b 94 24 30
	0b 00 00	 mov	 rdx, QWORD PTR pRC$[rsp]
  013a6	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  013ae	ff 90 50 01 00
	00		 call	 QWORD PTR [rax+336]

; 1052 :         *pRC = SetRC( OPOS_E_NOSERVICE );

  013b4	ba 68 00 00 00	 mov	 edx, 104		; 00000068H
  013b9	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  013c1	e8 00 00 00 00	 call	 ?SetRC@COPOSVideoCapture@@IEAAJJ@Z ; COPOSVideoCapture::SetRC
  013c6	48 8b 8c 24 30
	0b 00 00	 mov	 rcx, QWORD PTR pRC$[rsp]
  013ce	89 01		 mov	 DWORD PTR [rcx], eax

; 1053 :         return S_OK;

  013d0	c7 84 24 b0 0a
	00 00 00 00 00
	00		 mov	 DWORD PTR $T45[rsp], 0
  013db	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1OposVariant@@QEAA@XZ ; OposVariant::~OposVariant
  013e2	41 b8 03 00 00
	00		 mov	 r8d, 3
  013e8	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  013ed	48 8d 8c 24 90
	08 00 00	 lea	 rcx, QWORD PTR Vars$[rsp]
  013f5	e8 00 00 00 00	 call	 ??_I@YAXPEAX_K1P6AX0@Z@Z
  013fa	8b 84 24 b0 0a
	00 00		 mov	 eax, DWORD PTR $T45[rsp]
  01401	e9 99 00 00 00	 jmp	 $LN50@Open
$LN48@Open:

; 1054 :     }
; 1055 : 
; 1056 :     // If CO OnFreezeEvents(TRUE) method has been called before open then freeze
; 1057 :     //   events in the SO at this time.
; 1058 :     if ( _nCOFreezeEventCount )

  01406	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0140e	83 b8 a8 01 00
	00 00		 cmp	 DWORD PTR [rax+424], 0
  01415	74 11		 je	 SHORT $LN49@Open

; 1059 :         SetCOFreezeEvents( TRUE );

  01417	66 ba 01 00	 mov	 dx, 1
  0141b	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  01423	e8 00 00 00 00	 call	 ?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z ; COPOSVideoCapture::SetCOFreezeEvents
$LN49@Open:

; 1060 : 
; 1061 :     // Everything went okay, so return success.
; 1062 :     SetRC();

  01428	ba ff ff ff ff	 mov	 edx, -1
  0142d	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  01435	e8 00 00 00 00	 call	 ?SetRC@COPOSVideoCapture@@IEAAJJ@Z ; COPOSVideoCapture::SetRC

; 1063 :     *pRC = OPOS_SUCCESS;

  0143a	48 8b 84 24 30
	0b 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  01442	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 1064 :     _nOpenResult = OPOS_SUCCESS;

  01448	48 8b 84 24 20
	0b 00 00	 mov	 rax, QWORD PTR this$[rsp]
  01450	c7 80 8c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+396], 0

; 1065 :     DOTRACE( ( _T("-  Success (0/0)") ) );

  0145a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193589
  01461	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  01469	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 1066 :     return S_OK;

  0146e	c7 84 24 b4 0a
	00 00 00 00 00
	00		 mov	 DWORD PTR $T46[rsp], 0
  01479	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1OposVariant@@QEAA@XZ ; OposVariant::~OposVariant
  01480	41 b8 03 00 00
	00		 mov	 r8d, 3
  01486	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0148b	48 8d 8c 24 90
	08 00 00	 lea	 rcx, QWORD PTR Vars$[rsp]
  01493	e8 00 00 00 00	 call	 ??_I@YAXPEAX_K1P6AX0@Z@Z
  01498	8b 84 24 b4 0a
	00 00		 mov	 eax, DWORD PTR $T46[rsp]
$LN50@Open:

; 1067 : }

  0149f	48 8b f8	 mov	 rdi, rax
  014a2	48 8b cc	 mov	 rcx, rsp
  014a5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z$rtcFrameData
  014ac	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  014b1	48 8b c7	 mov	 rax, rdi
  014b4	48 8b 8c 24 08
	0b 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  014bc	48 33 cc	 xor	 rcx, rsp
  014bf	e8 00 00 00 00	 call	 __security_check_cookie
  014c4	48 81 c4 10 0b
	00 00		 add	 rsp, 2832		; 00000b10H
  014cb	5f		 pop	 rdi
  014cc	c3		 ret	 0
?Open@COPOSVideoCapture@@UEAAJPEA_WPEAJ@Z ENDP		; COPOSVideoCapture::Open
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
Vars$ = 80
hRC$ = 196
$T5 = 224
__$ArrayPad$ = 232
this$ = 256
Command$ = 264
pData$ = 272
pString$ = 280
pRC$ = 288
?DirectIO@COPOSVideoCapture@@UEAAJJPEAJPEAPEA_W0@Z PROC	; COPOSVideoCapture::DirectIO

; 1191 : {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 81 ec f0 00
	00 00		 sub	 rsp, 240		; 000000f0H
  0001b	48 8b fc	 mov	 rdi, rsp
  0001e	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR [rsp+256]
  00032	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00039	48 33 c4	 xor	 rax, rsp
  0003c	48 89 84 24 e8
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1192 :     OposVariant Vars[3];

  00044	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??0OposVariant@@QEAA@XZ ; OposVariant::OposVariant
  0004b	41 b8 03 00 00
	00		 mov	 r8d, 3
  00051	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00056	48 8d 4c 24 50	 lea	 rcx, QWORD PTR Vars$[rsp]
  0005b	e8 00 00 00 00	 call	 ??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 1193 :     HRESULT hRC = S_OK;

  00060	c7 84 24 c4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR hRC$[rsp], 0

; 1194 :     Vars[2].SetLONG( Command );

  0006b	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00070	48 6b c0 02	 imul	 rax, rax, 2
  00074	48 8d 44 04 50	 lea	 rax, QWORD PTR Vars$[rsp+rax]
  00079	8b 94 24 08 01
	00 00		 mov	 edx, DWORD PTR Command$[rsp]
  00080	48 8b c8	 mov	 rcx, rax
  00083	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QEAAXJ@Z ; OposVariant::SetLONG

; 1195 :     Vars[1].SetLONG_Ptr( pData, hRC );

  00088	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0008d	48 6b c0 01	 imul	 rax, rax, 1
  00091	48 8d 44 04 50	 lea	 rax, QWORD PTR Vars$[rsp+rax]
  00096	4c 8d 84 24 c4
	00 00 00	 lea	 r8, QWORD PTR hRC$[rsp]
  0009e	48 8b 94 24 10
	01 00 00	 mov	 rdx, QWORD PTR pData$[rsp]
  000a6	48 8b c8	 mov	 rcx, rax
  000a9	e8 00 00 00 00	 call	 ?SetLONG_Ptr@OposVariant@@QEAAXPEAJAEAJ@Z ; OposVariant::SetLONG_Ptr

; 1196 :     Vars[0].SetBSTR_InOutPtr( pString, hRC );

  000ae	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  000b3	48 6b c0 00	 imul	 rax, rax, 0
  000b7	48 8d 44 04 50	 lea	 rax, QWORD PTR Vars$[rsp+rax]
  000bc	4c 8d 84 24 c4
	00 00 00	 lea	 r8, QWORD PTR hRC$[rsp]
  000c4	48 8b 94 24 18
	01 00 00	 mov	 rdx, QWORD PTR pString$[rsp]
  000cc	48 8b c8	 mov	 rcx, rax
  000cf	e8 00 00 00 00	 call	 ?SetBSTR_InOutPtr@OposVariant@@QEAA_NPEAPEA_WAEAJ@Z ; OposVariant::SetBSTR_InOutPtr

; 1197 :     return DoInvoke( DEBUGPARAM("DirectIO") hRC, Vars, 3, nDIDirectIO, pRC );

  000d4	c6 44 24 38 01	 mov	 BYTE PTR [rsp+56], 1
  000d9	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  000e1	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  000e6	c7 44 24 28 0a
	00 00 00	 mov	 DWORD PTR [rsp+40], 10
  000ee	c7 44 24 20 03
	00 00 00	 mov	 DWORD PTR [rsp+32], 3
  000f6	4c 8d 4c 24 50	 lea	 r9, QWORD PTR Vars$[rsp]
  000fb	44 8b 84 24 c4
	00 00 00	 mov	 r8d, DWORD PTR hRC$[rsp]
  00103	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193659
  0010a	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00112	e8 00 00 00 00	 call	 ?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z ; COPOSVideoCapture::DoInvoke
  00117	89 84 24 e0 00
	00 00		 mov	 DWORD PTR $T5[rsp], eax
  0011e	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1OposVariant@@QEAA@XZ ; OposVariant::~OposVariant
  00125	41 b8 03 00 00
	00		 mov	 r8d, 3
  0012b	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00130	48 8d 4c 24 50	 lea	 rcx, QWORD PTR Vars$[rsp]
  00135	e8 00 00 00 00	 call	 ??_I@YAXPEAX_K1P6AX0@Z@Z
  0013a	8b 84 24 e0 00
	00 00		 mov	 eax, DWORD PTR $T5[rsp]

; 1198 : }

  00141	8b f8		 mov	 edi, eax
  00143	48 8b cc	 mov	 rcx, rsp
  00146	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?DirectIO@COPOSVideoCapture@@UEAAJJPEAJPEAPEA_W0@Z$rtcFrameData
  0014d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00152	8b c7		 mov	 eax, edi
  00154	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0015c	48 33 cc	 xor	 rcx, rsp
  0015f	e8 00 00 00 00	 call	 __security_check_cookie
  00164	48 81 c4 f0 00
	00 00		 add	 rsp, 240		; 000000f0H
  0016b	5f		 pop	 rdi
  0016c	c3		 ret	 0
?DirectIO@COPOSVideoCapture@@UEAAJJPEAJPEAPEA_W0@Z ENDP	; COPOSVideoCapture::DirectIO
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
hRC$ = 64
this$ = 96
pRC$ = 104
?Close@COPOSVideoCapture@@UEAAJPEAJ@Z PROC		; COPOSVideoCapture::Close

; 1072 : {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1073 :     SetRC();

  00023	ba ff ff ff ff	 mov	 edx, -1
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?SetRC@COPOSVideoCapture@@IEAAJJ@Z ; COPOSVideoCapture::SetRC

; 1074 : 
; 1075 :     // If not opened, set return code.
; 1076 :     if ( ! _bOpened )

  00032	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00037	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  0003e	85 c0		 test	 eax, eax
  00040	75 2b		 jne	 SHORT $LN2@Close

; 1077 :     {
; 1078 :         *pRC = OPOS_E_CLOSED;

  00042	48 8b 44 24 68	 mov	 rax, QWORD PTR pRC$[rsp]
  00047	c7 00 65 00 00
	00		 mov	 DWORD PTR [rax], 101	; 00000065H

; 1079 :         DOTRACE( ( _T("*Close [Function]  RC=%d"), *pRC ) );

  0004d	48 8b 44 24 68	 mov	 rax, QWORD PTR pRC$[rsp]
  00052	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  00055	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193601
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 1080 :         return S_OK;

  00066	33 c0		 xor	 eax, eax
  00068	e9 95 00 00 00	 jmp	 $LN1@Close
$LN2@Close:

; 1081 :     }
; 1082 : 
; 1083 :     // Events are no longer legal.
; 1084 :     EventPreCloseRelease();

  0006d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00072	e8 00 00 00 00	 call	 ?EventPreCloseRelease@COPOSVideoCapture@@IEAAXXZ ; COPOSVideoCapture::EventPreCloseRelease

; 1085 : 
; 1086 :     // Call down into Service Object to close the control.
; 1087 :     HRESULT hRC = DoInvoke( DEBUGPARAM("Close-CloseService") S_OK, NULL, 0, nDICloseService, pRC, false );

  00077	c6 44 24 38 00	 mov	 BYTE PTR [rsp+56], 0
  0007c	48 8b 44 24 68	 mov	 rax, QWORD PTR pRC$[rsp]
  00081	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00086	c7 44 24 28 09
	00 00 00	 mov	 DWORD PTR [rsp+40], 9
  0008e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00096	45 33 c9	 xor	 r9d, r9d
  00099	45 33 c0	 xor	 r8d, r8d
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193602
  000a3	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a8	e8 00 00 00 00	 call	 ?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z ; COPOSVideoCapture::DoInvoke
  000ad	89 44 24 40	 mov	 DWORD PTR hRC$[rsp], eax

; 1088 : 
; 1089 :     // Release the connection to the Service Object.
; 1090 :     _pService->Release();

  000b1	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000b6	48 8b 80 a0 01
	00 00		 mov	 rax, QWORD PTR [rax+416]
  000bd	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000c2	48 8b 89 a0 01
	00 00		 mov	 rcx, QWORD PTR [rcx+416]
  000c9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000cc	ff 50 10	 call	 QWORD PTR [rax+16]

; 1091 : 
; 1092 :     // Close down events.
; 1093 :     EventClose();

  000cf	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000d4	e8 00 00 00 00	 call	 ?EventClose@COPOSVideoCapture@@IEAAXXZ ; COPOSVideoCapture::EventClose

; 1094 : 
; 1095 :     // We are now closed.
; 1096 :     _bOpened = false;

  000d9	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000de	c6 80 88 01 00
	00 00		 mov	 BYTE PTR [rax+392], 0

; 1097 : 
; 1098 :     DOTRACE( ( _T("*Close [Function]  RC=%d"), *pRC ) );

  000e5	48 8b 44 24 68	 mov	 rax, QWORD PTR pRC$[rsp]
  000ea	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  000ed	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193603
  000f4	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000f9	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 1099 :     return hRC;

  000fe	8b 44 24 40	 mov	 eax, DWORD PTR hRC$[rsp]
$LN1@Close:

; 1100 : }

  00102	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00106	5f		 pop	 rdi
  00107	c3		 ret	 0
?Close@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP		; COPOSVideoCapture::Close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 80
pRC$ = 88
?ClearInput@COPOSVideoCapture@@UEAAJPEAJ@Z PROC		; COPOSVideoCapture::ClearInput

; 1180 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1181 :     return DoInvoke( DEBUGPARAM("ClearInput") S_OK, NULL, 0, nDIClearInput, pRC );

  00023	c6 44 24 38 01	 mov	 BYTE PTR [rsp+56], 1
  00028	48 8b 44 24 58	 mov	 rax, QWORD PTR pRC$[rsp]
  0002d	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00032	c7 44 24 28 08
	00 00 00	 mov	 DWORD PTR [rsp+40], 8
  0003a	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00042	45 33 c9	 xor	 r9d, r9d
  00045	45 33 c0	 xor	 r8d, r8d
  00048	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193645
  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00054	e8 00 00 00 00	 call	 ?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z ; COPOSVideoCapture::DoInvoke

; 1182 : }

  00059	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
?ClearInput@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP		; COPOSVideoCapture::ClearInput
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
Var$ = 72
$T4 = 116
this$ = 144
Timeout$ = 152
pRC$ = 160
?ClaimDevice@COPOSVideoCapture@@UEAAJJPEAJ@Z PROC	; COPOSVideoCapture::ClaimDevice

; 1107 : {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 1108 :     SetRC();

  0002d	ba ff ff ff ff	 mov	 edx, -1
  00032	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0003a	e8 00 00 00 00	 call	 ?SetRC@COPOSVideoCapture@@IEAAJJ@Z ; COPOSVideoCapture::SetRC

; 1109 : 
; 1110 :     // If not opened, set return code.
; 1111 :     if ( ! _bOpened )

  0003f	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00047	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  0004e	85 c0		 test	 eax, eax
  00050	75 26		 jne	 SHORT $LN2@ClaimDevic

; 1112 :     {
; 1113 :         *pRC = OPOS_E_CLOSED;

  00052	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  0005a	c7 00 65 00 00
	00		 mov	 DWORD PTR [rax], 101	; 00000065H

; 1114 :         DOTRACEV( ( _T("*ClaimDevice [Function] -- Closed") ) );

  00060	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193613
  00067	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0006f	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 1115 :         return S_OK;

  00074	33 c0		 xor	 eax, eax
  00076	eb 78		 jmp	 SHORT $LN1@ClaimDevic
$LN2@ClaimDevic:

; 1116 :     }
; 1117 : 
; 1118 :     // Initialize so that events are allowed.
; 1119 :     EventClaim();

  00078	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00080	e8 00 00 00 00	 call	 ?EventClaim@COPOSVideoCapture@@IEAAXXZ ; COPOSVideoCapture::EventClaim

; 1120 : 
; 1121 :     // Call down into the Service Object to execute this method.
; 1122 :     OposVariant Var;

  00085	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  0008a	e8 00 00 00 00	 call	 ??0OposVariant@@QEAA@XZ	; OposVariant::OposVariant

; 1123 :     Var.SetLONG( Timeout );

  0008f	8b 94 24 98 00
	00 00		 mov	 edx, DWORD PTR Timeout$[rsp]
  00096	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  0009b	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QEAAXJ@Z ; OposVariant::SetLONG

; 1124 :     return DoInvoke( DEBUGPARAM("ClaimDevice") S_OK, &Var, 1, nDIClaimDevice, pRC, false );

  000a0	c6 44 24 38 00	 mov	 BYTE PTR [rsp+56], 0
  000a5	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  000ad	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  000b2	c7 44 24 28 07
	00 00 00	 mov	 DWORD PTR [rsp+40], 7
  000ba	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR [rsp+32], 1
  000c2	4c 8d 4c 24 48	 lea	 r9, QWORD PTR Var$[rsp]
  000c7	45 33 c0	 xor	 r8d, r8d
  000ca	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193615
  000d1	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d9	e8 00 00 00 00	 call	 ?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z ; COPOSVideoCapture::DoInvoke
  000de	89 44 24 74	 mov	 DWORD PTR $T4[rsp], eax
  000e2	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  000e7	e8 00 00 00 00	 call	 ??1OposVariant@@QEAA@XZ	; OposVariant::~OposVariant
  000ec	8b 44 24 74	 mov	 eax, DWORD PTR $T4[rsp]
$LN1@ClaimDevic:

; 1125 : }

  000f0	48 8b f8	 mov	 rdi, rax
  000f3	48 8b cc	 mov	 rcx, rsp
  000f6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ClaimDevice@COPOSVideoCapture@@UEAAJJPEAJ@Z$rtcFrameData
  000fd	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00102	48 8b c7	 mov	 rax, rdi
  00105	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0010c	5f		 pop	 rdi
  0010d	c3		 ret	 0
?ClaimDevice@COPOSVideoCapture@@UEAAJJPEAJ@Z ENDP	; COPOSVideoCapture::ClaimDevice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
Var$ = 72
$T4 = 116
this$ = 144
Level$ = 152
pRC$ = 160
?CheckHealth@COPOSVideoCapture@@UEAAJJPEAJ@Z PROC	; COPOSVideoCapture::CheckHealth

; 1170 : {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 1171 :     OposVariant Var;

  0002d	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  00032	e8 00 00 00 00	 call	 ??0OposVariant@@QEAA@XZ	; OposVariant::OposVariant

; 1172 :     Var.SetLONG( Level );

  00037	8b 94 24 98 00
	00 00		 mov	 edx, DWORD PTR Level$[rsp]
  0003e	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  00043	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QEAAXJ@Z ; OposVariant::SetLONG

; 1173 :     return DoInvoke( DEBUGPARAM("CheckHealth") S_OK, &Var, 1, nDICheckHealth, pRC );

  00048	c6 44 24 38 01	 mov	 BYTE PTR [rsp+56], 1
  0004d	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  00055	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0005a	c7 44 24 28 06
	00 00 00	 mov	 DWORD PTR [rsp+40], 6
  00062	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR [rsp+32], 1
  0006a	4c 8d 4c 24 48	 lea	 r9, QWORD PTR Var$[rsp]
  0006f	45 33 c0	 xor	 r8d, r8d
  00072	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193639
  00079	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z ; COPOSVideoCapture::DoInvoke
  00086	89 44 24 74	 mov	 DWORD PTR $T4[rsp], eax
  0008a	48 8d 4c 24 48	 lea	 rcx, QWORD PTR Var$[rsp]
  0008f	e8 00 00 00 00	 call	 ??1OposVariant@@QEAA@XZ	; OposVariant::~OposVariant
  00094	8b 44 24 74	 mov	 eax, DWORD PTR $T4[rsp]

; 1174 : }

  00098	8b f8		 mov	 edi, eax
  0009a	48 8b cc	 mov	 rcx, rsp
  0009d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?CheckHealth@COPOSVideoCapture@@UEAAJJPEAJ@Z$rtcFrameData
  000a4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a9	8b c7		 mov	 eax, edi
  000ab	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000b2	5f		 pop	 rdi
  000b3	c3		 ret	 0
?CheckHealth@COPOSVideoCapture@@UEAAJJPEAJ@Z ENDP	; COPOSVideoCapture::CheckHealth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapUpdateFirmware$ = 72
?get_CapUpdateFirmware@COPOSVideoCapture@@UEAAJPEAF@Z PROC ; COPOSVideoCapture::get_CapUpdateFirmware

; 1557 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1558 :     return GetOposProp( DEBUGPARAM("CapUpdateFirmware") PIDX_CapUpdateFirmware, pCapUpdateFirmware, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapUpdateFirmware$[rsp]
  00030	41 b8 f9 01 00
	00		 mov	 r8d, 505		; 000001f9H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193898
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1559 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapUpdateFirmware@COPOSVideoCapture@@UEAAJPEAF@Z ENDP ; COPOSVideoCapture::get_CapUpdateFirmware
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapCompareFirmwareVersion$ = 72
?get_CapCompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEAF@Z PROC ; COPOSVideoCapture::get_CapCompareFirmwareVersion

; 1550 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1551 :     return GetOposProp( DEBUGPARAM("CapCompareFirmwareVersion") PIDX_CapCompareFirmwareVersion, pCapCompareFirmwareVersion, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapCompareFirmwareVersion$[rsp]
  00030	41 b8 f8 01 00
	00		 mov	 r8d, 504		; 000001f8H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193893
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1552 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapCompareFirmwareVersion@COPOSVideoCapture@@UEAAJPEAF@Z ENDP ; COPOSVideoCapture::get_CapCompareFirmwareVersion
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapUpdateStatistics$ = 72
?get_CapUpdateStatistics@COPOSVideoCapture@@UEAAJPEAF@Z PROC ; COPOSVideoCapture::get_CapUpdateStatistics

; 1543 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1544 :     return GetOposProp( DEBUGPARAM("CapUpdateStatistics") PIDX_CapUpdateStatistics, pCapUpdateStatistics, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapUpdateStatistics$[rsp]
  00030	41 b8 f7 01 00
	00		 mov	 r8d, 503		; 000001f7H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193888
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1545 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapUpdateStatistics@COPOSVideoCapture@@UEAAJPEAF@Z ENDP ; COPOSVideoCapture::get_CapUpdateStatistics
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapStatisticsReporting$ = 72
?get_CapStatisticsReporting@COPOSVideoCapture@@UEAAJPEAF@Z PROC ; COPOSVideoCapture::get_CapStatisticsReporting

; 1536 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1537 :     return GetOposProp( DEBUGPARAM("CapStatisticsReporting") PIDX_CapStatisticsReporting, pCapStatisticsReporting, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapStatisticsReporting$[rsp]
  00030	41 b8 f6 01 00
	00		 mov	 r8d, 502		; 000001f6H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193883
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1538 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapStatisticsReporting@COPOSVideoCapture@@UEAAJPEAF@Z ENDP ; COPOSVideoCapture::get_CapStatisticsReporting
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pDeviceName$ = 72
?get_DeviceName@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC	; COPOSVideoCapture::get_DeviceName

; 1529 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1530 :     return GetOposProp( DEBUGPARAM("DeviceName") PIDX_DeviceName, pDeviceName, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pDeviceName$[rsp]
  00030	41 b8 43 42 0f
	00		 mov	 r8d, 1000003		; 000f4243H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193878
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 1531 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_DeviceName@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP	; COPOSVideoCapture::get_DeviceName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pDeviceDescription$ = 72
?get_DeviceDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC ; COPOSVideoCapture::get_DeviceDescription

; 1522 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1523 :     return GetOposProp( DEBUGPARAM("DeviceDescription") PIDX_DeviceDescription, pDeviceDescription, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pDeviceDescription$[rsp]
  00030	41 b8 42 42 0f
	00		 mov	 r8d, 1000002		; 000f4242H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193873
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 1524 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_DeviceDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP ; COPOSVideoCapture::get_DeviceDescription
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pServiceObjectVersion$ = 72
?get_ServiceObjectVersion@COPOSVideoCapture@@UEAAJPEAJ@Z PROC ; COPOSVideoCapture::get_ServiceObjectVersion

; 1515 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1516 :     return GetOposProp( DEBUGPARAM("ServiceObjectVersion") PIDX_ServiceObjectVersion, pServiceObjectVersion, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pServiceObjectVersion$[rsp]
  00030	41 b8 08 00 00
	00		 mov	 r8d, 8
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193868
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1517 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_ServiceObjectVersion@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP ; COPOSVideoCapture::get_ServiceObjectVersion
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pServiceObjectDescription$ = 72
?get_ServiceObjectDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC ; COPOSVideoCapture::get_ServiceObjectDescription

; 1508 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1509 :     return GetOposProp( DEBUGPARAM("ServiceObjectDescription") PIDX_ServiceObjectDescription, pServiceObjectDescription, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pServiceObjectDescription$[rsp]
  00030	41 b8 44 42 0f
	00		 mov	 r8d, 1000004		; 000f4244H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193863
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 1510 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_ServiceObjectDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP ; COPOSVideoCapture::get_ServiceObjectDescription
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 48
pControlObjectVersion$ = 56
?get_ControlObjectVersion@COPOSVideoCapture@@UEAAJPEAJ@Z PROC ; COPOSVideoCapture::get_ControlObjectVersion

; 1405 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1406 :     *pControlObjectVersion = g_ControlVersion;

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR pControlObjectVersion$[rsp]
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_ControlVersion@@3JA ; g_ControlVersion
  0002e	89 08		 mov	 DWORD PTR [rax], ecx

; 1407 :     DOTRACEV( ( _T("*ControlObjectVersion [Get]: %d"), g_ControlVersion ) );

  00030	44 8b 05 00 00
	00 00		 mov	 r8d, DWORD PTR ?g_ControlVersion@@3JA ; g_ControlVersion
  00037	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193797
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 1408 :     return S_OK;

  00048	33 c0		 xor	 eax, eax

; 1409 : }

  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
?get_ControlObjectVersion@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP ; COPOSVideoCapture::get_ControlObjectVersion
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
$T1 = 32
this$ = 80
pControlObjectDescription$ = 88
?get_ControlObjectDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC ; COPOSVideoCapture::get_ControlObjectDescription

; 1396 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1397 :     *pControlObjectDescription = ::SysAllocString( _CW(g_ControlDescription) );

  00023	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?g_ControlDescription@@3PADA ; g_ControlDescription
  0002a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002f	e8 00 00 00 00	 call	 ??0_CW@@QEAA@PEBD@Z	; _CW::_CW
  00034	48 8b c8	 mov	 rcx, rax
  00037	e8 00 00 00 00	 call	 ??B_CW@@QEAAPEB_WXZ	; _CW::operator wchar_t const *
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SysAllocString
  00045	48 8b 4c 24 58	 mov	 rcx, QWORD PTR pControlObjectDescription$[rsp]
  0004a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0004d	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00052	e8 00 00 00 00	 call	 ??1_CW@@QEAA@XZ		; _CW::~_CW

; 1398 :     DOTRACEV( ( _T("*ControlObjectDescription [Get]: <%hs>"), g_ControlDescription ) );

  00057	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:?g_ControlDescription@@3PADA ; g_ControlDescription
  0005e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193791
  00065	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0006a	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 1399 :     return S_OK;

  0006f	33 c0		 xor	 eax, eax

; 1400 : }

  00071	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00075	5f		 pop	 rdi
  00076	c3		 ret	 0
?get_ControlObjectDescription@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP ; COPOSVideoCapture::get_ControlObjectDescription
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pState$ = 72
?get_State@COPOSVideoCapture@@UEAAJPEAJ@Z PROC		; COPOSVideoCapture::get_State

; 1381 : {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1382 :     if ( ! _bOpened )                           // If not open,

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  0002f	85 c0		 test	 eax, eax
  00031	75 1e		 jne	 SHORT $LN2@get_State

; 1383 :     {
; 1384 :         *pState = OPOS_S_CLOSED;                //   then return "closed".

  00033	48 8b 44 24 48	 mov	 rax, QWORD PTR pState$[rsp]
  00038	c7 00 01 00 00
	00		 mov	 DWORD PTR [rax], 1

; 1385 :         DOTRACEV( ( _T("*State [Get] -- Closed") ) );

  0003e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193783
  00045	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 1386 :     }

  0004f	eb 24		 jmp	 SHORT $LN3@get_State
$LN2@get_State:

; 1387 :     else
; 1388 :         GetOposProp( DEBUGPARAM("State") PIDX_State, pState ); // Otherwise go to SO.

  00051	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00059	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pState$[rsp]
  0005e	41 b8 09 00 00
	00		 mov	 r8d, 9
  00064	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193784
  0006b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00070	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp
$LN3@get_State:

; 1389 : 
; 1390 :     return S_OK;

  00075	33 c0		 xor	 eax, eax

; 1391 : }

  00077	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0007b	5f		 pop	 rdi
  0007c	c3		 ret	 0
?get_State@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP		; COPOSVideoCapture::get_State
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pResultCodeExtended$ = 72
?get_ResultCodeExtended@COPOSVideoCapture@@UEAAJPEAJ@Z PROC ; COPOSVideoCapture::get_ResultCodeExtended

; 1501 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1502 :     return GetOposProp( DEBUGPARAM("ResultCodeExtended") PIDX_ResultCodeExtended, pResultCodeExtended, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pResultCodeExtended$[rsp]
  00030	41 b8 07 00 00
	00		 mov	 r8d, 7
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193858
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1503 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_ResultCodeExtended@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP ; COPOSVideoCapture::get_ResultCodeExtended
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pResultCode$ = 72
?get_ResultCode@COPOSVideoCapture@@UEAAJPEAJ@Z PROC	; COPOSVideoCapture::get_ResultCode

; 1361 : {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1362 :     if ( ! _bOpened )                               // If not open,

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  0002f	85 c0		 test	 eax, eax
  00031	75 1e		 jne	 SHORT $LN2@get_Result

; 1363 :     {
; 1364 :         *pResultCode = OPOS_E_CLOSED;               //   then return "closed".

  00033	48 8b 44 24 48	 mov	 rax, QWORD PTR pResultCode$[rsp]
  00038	c7 00 65 00 00
	00		 mov	 DWORD PTR [rax], 101	; 00000065H

; 1365 :         DOTRACEV( ( _T("*ResultCode [Get] -- Closed") ) );

  0003e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193771
  00045	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 1366 :     }

  0004f	eb 63		 jmp	 SHORT $LN3@get_Result
$LN2@get_Result:

; 1367 :     else if ( _nCOResultCode != -1 )                // If the control object has to report a status,

  00051	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00056	83 b8 98 01 00
	00 ff		 cmp	 DWORD PTR [rax+408], -1
  0005d	74 31		 je	 SHORT $LN4@get_Result

; 1368 :     {
; 1369 :         *pResultCode = _nCOResultCode;              //   then return it.

  0005f	48 8b 44 24 48	 mov	 rax, QWORD PTR pResultCode$[rsp]
  00064	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00069	8b 89 98 01 00
	00		 mov	 ecx, DWORD PTR [rcx+408]
  0006f	89 08		 mov	 DWORD PTR [rax], ecx

; 1370 :         DOTRACEV( ( _T("*ResultCode [Get]: %d -- from CO"), _nCOResultCode ) );

  00071	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00076	44 8b 80 98 01
	00 00		 mov	 r8d, DWORD PTR [rax+408]
  0007d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193774
  00084	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00089	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 1371 :     }

  0008e	eb 24		 jmp	 SHORT $LN5@get_Result
$LN4@get_Result:

; 1372 :     else
; 1373 :         GetOposProp( DEBUGPARAM("ResultCode") PIDX_ResultCode, pResultCode );// Otherwise go to SO.

  00090	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00098	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pResultCode$[rsp]
  0009d	41 b8 06 00 00
	00		 mov	 r8d, 6
  000a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193775
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000af	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp
$LN5@get_Result:
$LN3@get_Result:

; 1374 : 
; 1375 :     return S_OK;

  000b4	33 c0		 xor	 eax, eax

; 1376 : }

  000b6	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ba	5f		 pop	 rdi
  000bb	c3		 ret	 0
?get_ResultCode@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP	; COPOSVideoCapture::get_ResultCode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pPowerState$ = 72
?get_PowerState@COPOSVideoCapture@@UEAAJPEAJ@Z PROC	; COPOSVideoCapture::get_PowerState

; 1494 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1495 :     return GetOposProp( DEBUGPARAM("PowerState") PIDX_PowerState, pPowerState, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pPowerState$[rsp]
  00030	41 b8 0e 00 00
	00		 mov	 r8d, 14
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193853
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1496 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_PowerState@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP	; COPOSVideoCapture::get_PowerState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
PowerNotify$ = 72
?put_PowerNotify@COPOSVideoCapture@@UEAAJJ@Z PROC	; COPOSVideoCapture::put_PowerNotify

; 1487 : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1488 :     return SetOposProp( DEBUGPARAM("PowerNotify") PIDX_PowerNotify, PowerNotify, 16 /*MinorVersion*/ );

  00022	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002a	44 8b 4c 24 48	 mov	 r9d, DWORD PTR PowerNotify$[rsp]
  0002f	41 b8 0d 00 00
	00		 mov	 r8d, 13
  00035	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193848
  0003c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z ; COPOSVideoCapture::SetOposProp

; 1489 : }

  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?put_PowerNotify@COPOSVideoCapture@@UEAAJJ@Z ENDP	; COPOSVideoCapture::put_PowerNotify
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pPowerNotify$ = 72
?get_PowerNotify@COPOSVideoCapture@@UEAAJPEAJ@Z PROC	; COPOSVideoCapture::get_PowerNotify

; 1480 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1481 :     return GetOposProp( DEBUGPARAM("PowerNotify") PIDX_PowerNotify, pPowerNotify, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pPowerNotify$[rsp]
  00030	41 b8 0d 00 00
	00		 mov	 r8d, 13
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193843
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1482 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_PowerNotify@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP	; COPOSVideoCapture::get_PowerNotify
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
FreezeEvents$ = 72
?put_FreezeEvents@COPOSVideoCapture@@UEAAJF@Z PROC	; COPOSVideoCapture::put_FreezeEvents

; 1330 : {

$LN6:
  00000	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1331 :     SetRC();

  00023	ba ff ff ff ff	 mov	 edx, -1
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?SetRC@COPOSVideoCapture@@IEAAJJ@Z ; COPOSVideoCapture::SetRC

; 1332 : 
; 1333 :     // If not opened, do nothing.
; 1334 :     if ( ! _bOpened )

  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00037	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  0003e	85 c0		 test	 eax, eax
  00040	75 15		 jne	 SHORT $LN2@put_Freeze

; 1335 :     {
; 1336 :         DOTRACEV( ( _T("*FreezeEvents [Set] -- Closed") ) );

  00042	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193759
  00049	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004e	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 1337 :         return S_OK;

  00053	33 c0		 xor	 eax, eax
  00055	eb 6f		 jmp	 SHORT $LN1@put_Freeze
$LN2@put_Freeze:

; 1338 :     }
; 1339 : 
; 1340 :     if ( FreezeEvents )

  00057	0f bf 44 24 48	 movsx	 eax, WORD PTR FreezeEvents$[rsp]
  0005c	85 c0		 test	 eax, eax
  0005e	74 33		 je	 SHORT $LN3@put_Freeze

; 1341 :     {
; 1342 :         // Call down into the Service Object first to set the property value.
; 1343 :         SetOposProp( DEBUGPARAM("FreezeEvents") PIDX_FreezeEvents, FreezeEvents ); // First tell the SO the new state.

  00060	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00068	44 0f b7 4c 24
	48		 movzx	 r9d, WORD PTR FreezeEvents$[rsp]
  0006e	41 b8 04 00 00
	00		 mov	 r8d, 4
  00074	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193762
  0007b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00080	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJFJ@Z ; COPOSVideoCapture::SetOposProp

; 1344 :         _bFreezeState = true;                           // Then update ours.

  00085	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008a	c6 80 ac 01 00
	00 01		 mov	 BYTE PTR [rax+428], 1

; 1345 :     }

  00091	eb 31		 jmp	 SHORT $LN4@put_Freeze
$LN3@put_Freeze:

; 1346 :     else
; 1347 :     {
; 1348 :         // Update our state first, then tell the SO.
; 1349 :         // This avoids a lockup in the event firing object's DoEvent() routine
; 1350 :         //   that would occur if the SO calls an event from its property update method.
; 1351 :         _bFreezeState = false;

  00093	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00098	c6 80 ac 01 00
	00 00		 mov	 BYTE PTR [rax+428], 0

; 1352 :         SetOposProp( DEBUGPARAM("FreezeEvents") PIDX_FreezeEvents, FreezeEvents );

  0009f	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  000a7	44 0f b7 4c 24
	48		 movzx	 r9d, WORD PTR FreezeEvents$[rsp]
  000ad	41 b8 04 00 00
	00		 mov	 r8d, 4
  000b3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193763
  000ba	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000bf	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJFJ@Z ; COPOSVideoCapture::SetOposProp
$LN4@put_Freeze:

; 1353 :     }
; 1354 : 
; 1355 :     return S_OK;

  000c4	33 c0		 xor	 eax, eax
$LN1@put_Freeze:

; 1356 : }

  000c6	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ca	5f		 pop	 rdi
  000cb	c3		 ret	 0
?put_FreezeEvents@COPOSVideoCapture@@UEAAJF@Z ENDP	; COPOSVideoCapture::put_FreezeEvents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pFreezeEvents$ = 72
?get_FreezeEvents@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_FreezeEvents

; 1323 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1324 :     return GetOposProp( DEBUGPARAM("FreezeEvents") PIDX_FreezeEvents, pFreezeEvents );

  00023	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pFreezeEvents$[rsp]
  00030	41 b8 04 00 00
	00		 mov	 r8d, 4
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193751
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1325 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_FreezeEvents@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_FreezeEvents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
DeviceEnabled$ = 72
?put_DeviceEnabled@COPOSVideoCapture@@UEAAJF@Z PROC	; COPOSVideoCapture::put_DeviceEnabled

; 1473 : {

$LN3:
  00000	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1474 :     return SetOposProp( DEBUGPARAM("DeviceEnabled") PIDX_DeviceEnabled, DeviceEnabled, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	44 0f b7 4c 24
	48		 movzx	 r9d, WORD PTR DeviceEnabled$[rsp]
  00031	41 b8 03 00 00
	00		 mov	 r8d, 3
  00037	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193838
  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJFJ@Z ; COPOSVideoCapture::SetOposProp

; 1475 : }

  00048	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?put_DeviceEnabled@COPOSVideoCapture@@UEAAJF@Z ENDP	; COPOSVideoCapture::put_DeviceEnabled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pDeviceEnabled$ = 72
?get_DeviceEnabled@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_DeviceEnabled

; 1466 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1467 :     return GetOposProp( DEBUGPARAM("DeviceEnabled") PIDX_DeviceEnabled, pDeviceEnabled, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pDeviceEnabled$[rsp]
  00030	41 b8 03 00 00
	00		 mov	 r8d, 3
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193833
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1468 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_DeviceEnabled@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_DeviceEnabled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pClaimed$ = 72
?get_Claimed@COPOSVideoCapture@@UEAAJPEAF@Z PROC	; COPOSVideoCapture::get_Claimed

; 1459 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1460 :     return GetOposProp( DEBUGPARAM("Claimed") PIDX_Claimed, pClaimed, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pClaimed$[rsp]
  00030	41 b8 01 00 00
	00		 mov	 r8d, 1
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193828
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ; COPOSVideoCapture::GetOposProp

; 1461 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_Claimed@COPOSVideoCapture@@UEAAJPEAF@Z ENDP	; COPOSVideoCapture::get_Claimed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCheckHealthText$ = 72
?get_CheckHealthText@COPOSVideoCapture@@UEAAJPEAPEA_W@Z PROC ; COPOSVideoCapture::get_CheckHealthText

; 1452 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1453 :     return GetOposProp( DEBUGPARAM("CheckHealthText") PIDX_CheckHealthText, pCheckHealthText, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCheckHealthText$[rsp]
  00030	41 b8 41 42 0f
	00		 mov	 r8d, 1000001		; 000f4241H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193823
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ; COPOSVideoCapture::GetOposProp

; 1454 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CheckHealthText@COPOSVideoCapture@@UEAAJPEAPEA_W@Z ENDP ; COPOSVideoCapture::get_CheckHealthText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pCapPowerReporting$ = 72
?get_CapPowerReporting@COPOSVideoCapture@@UEAAJPEAJ@Z PROC ; COPOSVideoCapture::get_CapPowerReporting

; 1445 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1446 :     return GetOposProp( DEBUGPARAM("CapPowerReporting") PIDX_CapPowerReporting, pCapPowerReporting, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pCapPowerReporting$[rsp]
  00030	41 b8 f5 01 00
	00		 mov	 r8d, 501		; 000001f5H
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193818
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1447 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_CapPowerReporting@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP ; COPOSVideoCapture::get_CapPowerReporting
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
BinaryConversion$ = 72
?put_BinaryConversion@COPOSVideoCapture@@UEAAJJ@Z PROC	; COPOSVideoCapture::put_BinaryConversion

; 1437 : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1438 :     IFDEBUG( _nBinaryConversion = BinaryConversion);

  00022	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00027	8b 4c 24 48	 mov	 ecx, DWORD PTR BinaryConversion$[rsp]
  0002b	89 88 10 02 00
	00		 mov	 DWORD PTR [rax+528], ecx

; 1439 :     return SetOposProp( DEBUGPARAM("BinaryConversion") PIDX_BinaryConversion, BinaryConversion, 16 /*MinorVersion*/ );

  00031	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00039	44 8b 4c 24 48	 mov	 r9d, DWORD PTR BinaryConversion$[rsp]
  0003e	41 b8 0b 00 00
	00		 mov	 r8d, 11
  00044	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193813
  0004b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00050	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z ; COPOSVideoCapture::SetOposProp

; 1440 : }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?put_BinaryConversion@COPOSVideoCapture@@UEAAJJ@Z ENDP	; COPOSVideoCapture::put_BinaryConversion
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 64
pBinaryConversion$ = 72
?get_BinaryConversion@COPOSVideoCapture@@UEAAJPEAJ@Z PROC ; COPOSVideoCapture::get_BinaryConversion

; 1430 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1431 :     return GetOposProp( DEBUGPARAM("BinaryConversion") PIDX_BinaryConversion, pBinaryConversion, 16 /*MinorVersion*/ );

  00023	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0002b	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pBinaryConversion$[rsp]
  00030	41 b8 0b 00 00
	00		 mov	 r8d, 11
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193808
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp

; 1432 : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?get_BinaryConversion@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP ; COPOSVideoCapture::get_BinaryConversion
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 48
pOpenResult$ = 56
?get_OpenResult@COPOSVideoCapture@@UEAAJPEAJ@Z PROC	; COPOSVideoCapture::get_OpenResult

; 1414 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1415 :     *pOpenResult = _nOpenResult;

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR pOpenResult$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	8b 89 8c 01 00
	00		 mov	 ecx, DWORD PTR [rcx+396]
  00033	89 08		 mov	 DWORD PTR [rax], ecx

; 1416 :     DOTRACEV( ( _T("*OpenResult [Get]: %d"), _nOpenResult ) );

  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	44 8b 80 8c 01
	00 00		 mov	 r8d, DWORD PTR [rax+396]
  00041	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193803
  00048	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004d	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 1417 :     return S_OK;

  00052	33 c0		 xor	 eax, eax

; 1418 : }

  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
?get_OpenResult@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP	; COPOSVideoCapture::get_OpenResult
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 48
pProcessID$ = 56
?SOProcessID@COPOSVideoCapture@@UEAAJPEAJ@Z PROC	; COPOSVideoCapture::SOProcessID

; 1153 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1154 :     *pProcessID = GetCurrentProcessId();

  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetCurrentProcessId
  00029	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pProcessID$[rsp]
  0002e	89 01		 mov	 DWORD PTR [rcx], eax

; 1155 :     DOTRACEV( ( _T("*SOProcessID: 0x%X"), *pProcessID ) );

  00030	48 8b 44 24 38	 mov	 rax, QWORD PTR pProcessID$[rsp]
  00035	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  00038	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193630
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00044	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 1156 :     return S_OK;

  00049	33 c0		 xor	 eax, eax

; 1157 : }

  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
?SOProcessID@COPOSVideoCapture@@UEAAJPEAJ@Z ENDP	; COPOSVideoCapture::SOProcessID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureEvent.h
;	COMDAT ?FireEventCleanup@COPOSVideoCapture@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?FireEventCleanup@COPOSVideoCapture@@IEAAXXZ PROC	; COPOSVideoCapture::FireEventCleanup, COMDAT

; 610  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 611  :         // Clear event in progress flag, set delivered flag, and set completion event.
; 612  :         _Event_bEventInProgress = false;

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	c6 80 1a 02 00
	00 00		 mov	 BYTE PTR [rax+538], 0

; 613  :         _Event_bEventDelivered = true;

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	c6 80 1b 02 00
	00 01		 mov	 BYTE PTR [rax+539], 1

; 614  :         ::SetEvent( _Event_FiringDoneEvent );

  00036	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b 88 20 02
	00 00		 mov	 rcx, QWORD PTR [rax+544]
  00042	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetEvent

; 615  :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?FireEventCleanup@COPOSVideoCapture@@IEAAXXZ ENDP	; COPOSVideoCapture::FireEventCleanup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureEvent.h
;	COMDAT ?FireEventSetup@COPOSVideoCapture@@IEAA_NXZ
_TEXT	SEGMENT
this$ = 48
?FireEventSetup@COPOSVideoCapture@@IEAA_NXZ PROC	; COPOSVideoCapture::FireEventSetup, COMDAT

; 586  :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 587  :         // If events are not legal (open/claim not done for exclusive, or open
; 588  :         //   not done for shared device), then return without firing.
; 589  :         if ( ! _Event_bEventsLegal ||
; 590  :         // If events are frozen, then return without firing.
; 591  :              _bFreezeState || _nCOFreezeEventCount != 0 )

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 80 19 02
	00 00		 movzx	 eax, BYTE PTR [rax+537]
  0002a	85 c0		 test	 eax, eax
  0002c	74 1e		 je	 SHORT $LN3@FireEventS
  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00033	0f b6 80 ac 01
	00 00		 movzx	 eax, BYTE PTR [rax+428]
  0003a	85 c0		 test	 eax, eax
  0003c	75 0e		 jne	 SHORT $LN3@FireEventS
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	83 b8 a8 01 00
	00 00		 cmp	 DWORD PTR [rax+424], 0
  0004a	74 16		 je	 SHORT $LN2@FireEventS
$LN3@FireEventS:

; 592  :         {
; 593  :             ::SetEvent( _Event_FiringDoneEvent );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 8b 88 20 02
	00 00		 mov	 rcx, QWORD PTR [rax+544]
  00058	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetEvent

; 594  :             return false;

  0005e	32 c0		 xor	 al, al
  00060	eb 0e		 jmp	 SHORT $LN1@FireEventS
$LN2@FireEventS:

; 595  :         }
; 596  : 
; 597  :         // If events are legal and not frozen,
; 598  :         //   set event in progress flag, and return true.
; 599  :         _Event_bEventInProgress = true;

  00062	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00067	c6 80 1a 02 00
	00 01		 mov	 BYTE PTR [rax+538], 1

; 600  :         return true;

  0006e	b0 01		 mov	 al, 1
$LN1@FireEventS:

; 601  :     }

  00070	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00074	5f		 pop	 rdi
  00075	c3		 ret	 0
?FireEventSetup@COPOSVideoCapture@@IEAA_NXZ ENDP	; COPOSVideoCapture::FireEventSetup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureEvent.h
;	COMDAT ?EventWindowProc@COPOSVideoCapture@@IEAA_JI_K_J@Z
_TEXT	SEGMENT
bProcessed$ = 48
tv64 = 52
this$ = 80
uMsg$ = 88
wParam$ = 96
lParam$ = 104
?EventWindowProc@COPOSVideoCapture@@IEAA_JI_K_J@Z PROC	; COPOSVideoCapture::EventWindowProc, COMDAT

; 528  :     {

$LN12:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 10 00 00 00	 mov	 ecx, 16
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 529  :         bool bProcessed = true;

  0002c	c6 44 24 30 01	 mov	 BYTE PTR bProcessed$[rsp], 1

; 530  : 
; 531  :         switch ( uMsg )

  00031	8b 44 24 58	 mov	 eax, DWORD PTR uMsg$[rsp]
  00035	89 44 24 34	 mov	 DWORD PTR tv64[rsp], eax
  00039	81 7c 24 34 65
	04 00 00	 cmp	 DWORD PTR tv64[rsp], 1125 ; 00000465H
  00041	74 1d		 je	 SHORT $LN4@EventWindo
  00043	81 7c 24 34 66
	04 00 00	 cmp	 DWORD PTR tv64[rsp], 1126 ; 00000466H
  0004b	74 6c		 je	 SHORT $LN6@EventWindo
  0004d	81 7c 24 34 68
	04 00 00	 cmp	 DWORD PTR tv64[rsp], 1128 ; 00000468H
  00055	0f 84 c5 00 00
	00		 je	 $LN8@EventWindo
  0005b	e9 05 01 00 00	 jmp	 $LN10@EventWindo
$LN4@EventWindo:

; 532  :         {
; 533  :         case WMU_DIRECT_IO_EVENT:
; 534  :             {
; 535  :                 if ( FireEventSetup() )

  00060	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00065	e8 00 00 00 00	 call	 ?FireEventSetup@COPOSVideoCapture@@IEAA_NXZ ; COPOSVideoCapture::FireEventSetup
  0006a	0f b6 c0	 movzx	 eax, al
  0006d	85 c0		 test	 eax, eax
  0006f	74 43		 je	 SHORT $LN5@EventWindo

; 536  :                 {
; 537  :                     DOTRACEV( ( _T("*EventWindowProc: Firing DirectIOEvent") ) );

  00071	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EO@JKFBLFHJ@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAP?$AAr?$AAo@
  00078	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 538  :                     CProxy_IOPOSEvents< COPOSVideoCapture >::Fire_DirectIOEvent(

  00082	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00087	48 05 40 01 00
	00		 add	 rax, 320		; 00000140H
  0008d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00092	4c 8b 89 38 02
	00 00		 mov	 r9, QWORD PTR [rcx+568]
  00099	4c 8b 44 24 68	 mov	 r8, QWORD PTR lParam$[rsp]
  0009e	8b 54 24 60	 mov	 edx, DWORD PTR wParam$[rsp]
  000a2	48 8b c8	 mov	 rcx, rax
  000a5	e8 00 00 00 00	 call	 ?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_DirectIOEvent

; 539  :                         (long) wParam, (long*) lParam, _Event_DIO_pString );
; 540  :                     FireEventCleanup();

  000aa	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000af	e8 00 00 00 00	 call	 ?FireEventCleanup@COPOSVideoCapture@@IEAAXXZ ; COPOSVideoCapture::FireEventCleanup
$LN5@EventWindo:

; 541  :                 }
; 542  :                 break;

  000b4	e9 b1 00 00 00	 jmp	 $LN2@EventWindo
$LN6@EventWindo:

; 543  :             }
; 544  : 
; 545  :         case WMU_ERROR_EVENT:
; 546  :             {
; 547  :                 if ( FireEventSetup() )

  000b9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000be	e8 00 00 00 00	 call	 ?FireEventSetup@COPOSVideoCapture@@IEAA_NXZ ; COPOSVideoCapture::FireEventSetup
  000c3	0f b6 c0	 movzx	 eax, al
  000c6	85 c0		 test	 eax, eax
  000c8	74 54		 je	 SHORT $LN7@EventWindo

; 548  :                 {
; 549  :                     DOTRACEV( ( _T("*EventWindowProc: Firing ErrorEvent") ) );

  000ca	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EI@OGEHNNLE@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAP?$AAr?$AAo@
  000d1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000d6	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 550  :                     CProxy_IOPOSEvents< COPOSVideoCapture >::Fire_ErrorEvent (

  000db	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000e0	48 05 40 01 00
	00		 add	 rax, 320		; 00000140H
  000e6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000eb	48 8b 89 48 02
	00 00		 mov	 rcx, QWORD PTR [rcx+584]
  000f2	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  000f7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000fc	44 8b 89 40 02
	00 00		 mov	 r9d, DWORD PTR [rcx+576]
  00103	44 8b 44 24 68	 mov	 r8d, DWORD PTR lParam$[rsp]
  00108	8b 54 24 60	 mov	 edx, DWORD PTR wParam$[rsp]
  0010c	48 8b c8	 mov	 rcx, rax
  0010f	e8 00 00 00 00	 call	 ?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_ErrorEvent

; 551  :                         (long) wParam, (long) lParam, _Event_Err_ErrorLocus, _Event_Err_pErrorResponse );
; 552  :                     FireEventCleanup();

  00114	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00119	e8 00 00 00 00	 call	 ?FireEventCleanup@COPOSVideoCapture@@IEAAXXZ ; COPOSVideoCapture::FireEventCleanup
$LN7@EventWindo:

; 553  :                 }
; 554  :                 break;

  0011e	eb 4a		 jmp	 SHORT $LN2@EventWindo
$LN8@EventWindo:

; 555  :             }
; 556  : 
; 557  :         case WMU_STATUS_UPDATE_EVENT:
; 558  :             {
; 559  :                 if ( FireEventSetup() )

  00120	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00125	e8 00 00 00 00	 call	 ?FireEventSetup@COPOSVideoCapture@@IEAA_NXZ ; COPOSVideoCapture::FireEventSetup
  0012a	0f b6 c0	 movzx	 eax, al
  0012d	85 c0		 test	 eax, eax
  0012f	74 32		 je	 SHORT $LN9@EventWindo

; 560  :                 {
; 561  :                     DOTRACEV( ( _T("*EventWindowProc: Firing StatusUpdateEvent") ) );

  00131	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1FG@KGPDBNHF@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAP?$AAr?$AAo@
  00138	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0013d	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 562  :                     CProxy_IOPOSEvents< COPOSVideoCapture >::Fire_StatusUpdateEvent(

  00142	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00147	48 05 40 01 00
	00		 add	 rax, 320		; 00000140H
  0014d	8b 54 24 60	 mov	 edx, DWORD PTR wParam$[rsp]
  00151	48 8b c8	 mov	 rcx, rax
  00154	e8 00 00 00 00	 call	 ?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJ@Z ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_StatusUpdateEvent

; 563  :                         (long) wParam );
; 564  :                     FireEventCleanup();

  00159	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0015e	e8 00 00 00 00	 call	 ?FireEventCleanup@COPOSVideoCapture@@IEAAXXZ ; COPOSVideoCapture::FireEventCleanup
$LN9@EventWindo:

; 565  :                 }
; 566  :                 break;

  00163	eb 05		 jmp	 SHORT $LN2@EventWindo
$LN10@EventWindo:

; 567  :             }
; 568  : 
; 569  :         default:
; 570  :             {
; 571  :                 bProcessed = false;

  00165	c6 44 24 30 00	 mov	 BYTE PTR bProcessed$[rsp], 0
$LN2@EventWindo:

; 572  :                 break;
; 573  :             }
; 574  :         }
; 575  : 
; 576  :         return bProcessed;

  0016a	0f b6 44 24 30	 movzx	 eax, BYTE PTR bProcessed$[rsp]

; 577  :     }

  0016f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00173	5f		 pop	 rdi
  00174	c3		 ret	 0
?EventWindowProc@COPOSVideoCapture@@IEAA_JI_K_J@Z ENDP	; COPOSVideoCapture::EventWindowProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureEvent.h
;	COMDAT ?s_EventWindowProc@COPOSVideoCapture@@KA_JPEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
pThis$ = 32
hwnd$ = 64
uMsg$ = 72
wParam$ = 80
lParam$ = 88
?s_EventWindowProc@COPOSVideoCapture@@KA_JPEAUHWND__@@I_K_J@Z PROC ; COPOSVideoCapture::s_EventWindowProc, COMDAT

; 489  :     {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 0c 00 00 00	 mov	 ecx, 12
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 490  :         COPOSVideoCapture* pThis;
; 491  : 
; 492  :         // On window creation, save our window instance into user window space.
; 493  :         if ( uMsg == WM_CREATE )

  0002c	83 7c 24 48 01	 cmp	 DWORD PTR uMsg$[rsp], 1
  00031	75 21		 jne	 SHORT $LN2@s_EventWin

; 494  :         {
; 495  :             pThis = (COPOSVideoCapture*) ((LPCREATESTRUCT) lParam)->lpCreateParams;

  00033	48 8b 44 24 58	 mov	 rax, QWORD PTR lParam$[rsp]
  00038	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003b	48 89 44 24 20	 mov	 QWORD PTR pThis$[rsp], rax

; 496  :             ::SetWindowLongPtr( hwnd, 0, (LONG_PTR) pThis );

  00040	4c 8b 44 24 20	 mov	 r8, QWORD PTR pThis$[rsp]
  00045	33 d2		 xor	 edx, edx
  00047	48 8b 4c 24 40	 mov	 rcx, QWORD PTR hwnd$[rsp]
  0004c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetWindowLongPtrW

; 497  :         }

  00052	eb 3b		 jmp	 SHORT $LN3@s_EventWin
$LN2@s_EventWin:

; 498  : 
; 499  :         // If other message, give our class a chance to handle.
; 500  :         else
; 501  :         {
; 502  :             pThis = (COPOSVideoCapture*) ::GetWindowLongPtr( hwnd, 0 );

  00054	33 d2		 xor	 edx, edx
  00056	48 8b 4c 24 40	 mov	 rcx, QWORD PTR hwnd$[rsp]
  0005b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetWindowLongPtrW
  00061	48 89 44 24 20	 mov	 QWORD PTR pThis$[rsp], rax

; 503  :             if ( pThis != 0 &&

  00066	48 83 7c 24 20
	00		 cmp	 QWORD PTR pThis$[rsp], 0
  0006c	74 21		 je	 SHORT $LN4@s_EventWin
  0006e	4c 8b 4c 24 58	 mov	 r9, QWORD PTR lParam$[rsp]
  00073	4c 8b 44 24 50	 mov	 r8, QWORD PTR wParam$[rsp]
  00078	8b 54 24 48	 mov	 edx, DWORD PTR uMsg$[rsp]
  0007c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pThis$[rsp]
  00081	e8 00 00 00 00	 call	 ?EventWindowProc@COPOSVideoCapture@@IEAA_JI_K_J@Z ; COPOSVideoCapture::EventWindowProc
  00086	48 85 c0	 test	 rax, rax
  00089	74 04		 je	 SHORT $LN4@s_EventWin

; 504  :                  pThis->EventWindowProc( uMsg, wParam, lParam ) )
; 505  :                     return 0;

  0008b	33 c0		 xor	 eax, eax
  0008d	eb 19		 jmp	 SHORT $LN1@s_EventWin
$LN4@s_EventWin:
$LN3@s_EventWin:

; 506  :         }
; 507  : 
; 508  :         // Unless handled by our class method, pass on to default processing.
; 509  :         return ::DefWindowProc( hwnd, uMsg, wParam, lParam );

  0008f	4c 8b 4c 24 58	 mov	 r9, QWORD PTR lParam$[rsp]
  00094	4c 8b 44 24 50	 mov	 r8, QWORD PTR wParam$[rsp]
  00099	8b 54 24 48	 mov	 edx, DWORD PTR uMsg$[rsp]
  0009d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR hwnd$[rsp]
  000a2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DefWindowProcW
$LN1@s_EventWin:

; 510  :     }

  000a8	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ac	5f		 pop	 rdi
  000ad	c3		 ret	 0
?s_EventWindowProc@COPOSVideoCapture@@KA_JPEAUHWND__@@I_K_J@Z ENDP ; COPOSVideoCapture::s_EventWindowProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureEvent.h
;	COMDAT ?EventUninit@COPOSVideoCapture@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?EventUninit@COPOSVideoCapture@@IEAAXXZ PROC		; COPOSVideoCapture::EventUninit, COMDAT

; 268  :     {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 269  :         if ( _Event_hEventWnd != 0 )

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 b8 30 02
	00 00 00	 cmp	 QWORD PTR [rax+560], 0
  0002b	74 31		 je	 SHORT $LN2@EventUnini

; 270  :             CMVERIFY( ::DestroyWindow( _Event_hEventWnd ) != 0 );

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 88 30 02
	00 00		 mov	 rcx, QWORD PTR [rax+560]
  00039	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DestroyWindow
  0003f	85 c0		 test	 eax, eax
  00041	75 1b		 jne	 SHORT $LN7@EventUnini
  00043	41 b8 0e 01 00
	00		 mov	 r8d, 270		; 0000010eH
  00049	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1GM@EMMHBPEM@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00050	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1FC@INBMHOIJ@?$AA?3?$AA?3?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@
  00057	e8 00 00 00 00	 call	 ?_assert@@YAXPEB_W0I@Z	; _assert
  0005c	33 c0		 xor	 eax, eax
$LN7@EventUnini:
$LN2@EventUnini:

; 271  : 
; 272  :         // If last instance of this CO being destroyed, then
; 273  :         //   unregister the hidden window class.
; 274  :         if ( s_nInstances == 0 )

  0005e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_nInstances@COPOSVideoCapture@@1HA, 0 ; COPOSVideoCapture::s_nInstances
  00065	75 3b		 jne	 SHORT $LN3@EventUnini

; 275  :             CMVERIFY( ::UnregisterClass( g_WindowName, _Module.GetModuleInstance() ) != 0 );

  00067	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_Module@@3VCComModule@ATL@@A ; _Module
  0006e	e8 00 00 00 00	 call	 ?GetModuleInstance@CComModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ; ATL::CComModule::GetModuleInstance
  00073	48 8b d0	 mov	 rdx, rax
  00076	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?g_WindowName@@3PA_WA ; g_WindowName
  0007d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_UnregisterClassW
  00083	85 c0		 test	 eax, eax
  00085	75 1b		 jne	 SHORT $LN8@EventUnini
  00087	41 b8 13 01 00
	00		 mov	 r8d, 275		; 00000113H
  0008d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1GM@EMMHBPEM@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00094	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1IK@JGLBMEDC@?$AA?3?$AA?3?$AAU?$AAn?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAC?$AAl?$AAa@
  0009b	e8 00 00 00 00	 call	 ?_assert@@YAXPEB_W0I@Z	; _assert
  000a0	33 c0		 xor	 eax, eax
$LN8@EventUnini:
$LN3@EventUnini:

; 276  : 
; 277  :         if ( _Event_FiringDoneEvent != 0 )

  000a2	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000a7	48 83 b8 20 02
	00 00 00	 cmp	 QWORD PTR [rax+544], 0
  000af	74 31		 je	 SHORT $LN4@EventUnini

; 278  :             CMVERIFY( ::CloseHandle( _Event_FiringDoneEvent ) != 0 );

  000b1	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000b6	48 8b 88 20 02
	00 00		 mov	 rcx, QWORD PTR [rax+544]
  000bd	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CloseHandle
  000c3	85 c0		 test	 eax, eax
  000c5	75 1b		 jne	 SHORT $LN9@EventUnini
  000c7	41 b8 16 01 00
	00		 mov	 r8d, 278		; 00000116H
  000cd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1GM@EMMHBPEM@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  000d4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1FK@NNNDFBMJ@?$AA?3?$AA?3?$AAC?$AAl?$AAo?$AAs?$AAe?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AA?$CI?$AA?5@
  000db	e8 00 00 00 00	 call	 ?_assert@@YAXPEB_W0I@Z	; _assert
  000e0	33 c0		 xor	 eax, eax
$LN9@EventUnini:
$LN4@EventUnini:

; 279  :         if ( _Event_DoEventMutex != 0 )

  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000e7	48 83 b8 28 02
	00 00 00	 cmp	 QWORD PTR [rax+552], 0
  000ef	74 31		 je	 SHORT $LN5@EventUnini

; 280  :             CMVERIFY( ::CloseHandle( _Event_DoEventMutex ) != 0 );

  000f1	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000f6	48 8b 88 28 02
	00 00		 mov	 rcx, QWORD PTR [rax+552]
  000fd	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CloseHandle
  00103	85 c0		 test	 eax, eax
  00105	75 1b		 jne	 SHORT $LN10@EventUnini
  00107	41 b8 18 01 00
	00		 mov	 r8d, 280		; 00000118H
  0010d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1GM@EMMHBPEM@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00114	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1FE@CAEAEALH@?$AA?3?$AA?3?$AAC?$AAl?$AAo?$AAs?$AAe?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AA?$CI?$AA?5@
  0011b	e8 00 00 00 00	 call	 ?_assert@@YAXPEB_W0I@Z	; _assert
  00120	33 c0		 xor	 eax, eax
$LN10@EventUnini:
$LN5@EventUnini:

; 281  :     }

  00122	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00126	5f		 pop	 rdi
  00127	c3		 ret	 0
?EventUninit@COPOSVideoCapture@@IEAAXXZ ENDP		; COPOSVideoCapture::EventUninit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureEvent.h
;	COMDAT ?EventClose@COPOSVideoCapture@@IEAAXXZ
_TEXT	SEGMENT
msg$ = 56
this$ = 144
?EventClose@COPOSVideoCapture@@IEAAXXZ PROC		; COPOSVideoCapture::EventClose, COMDAT

; 246  :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 247  :         DOTRACEV( ( _T("*EventClose") ) );

  00024	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BI@IOGKIMIM@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAC?$AAl?$AAo?$AAs?$AAe@
  0002b	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 248  : 
; 249  :         _Event_bOpen = false;

  00038	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00040	c6 80 18 02 00
	00 00		 mov	 BYTE PTR [rax+536], 0
$LN2@EventClose:

; 250  :         // Just in case any undelivered event messages are queued for our window, toss them.
; 251  :         MSG msg;
; 252  :         while ( 0 != ::PeekMessage(

  00047	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR [rsp+32], 1
  0004f	41 b9 ff 7f 00
	00		 mov	 r9d, 32767		; 00007fffH
  00055	41 b8 00 04 00
	00		 mov	 r8d, 1024		; 00000400H
  0005b	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00063	48 8b 90 30 02
	00 00		 mov	 rdx, QWORD PTR [rax+560]
  0006a	48 8d 4c 24 38	 lea	 rcx, QWORD PTR msg$[rsp]
  0006f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PeekMessageW
  00075	85 c0		 test	 eax, eax
  00077	74 02		 je	 SHORT $LN3@EventClose

; 253  :                   &msg,                     // pointer to structure for message
; 254  :                   _Event_hEventWnd,         // handle to window
; 255  :                   WM_USER, 0x7FFF,          // message filtering: retrieve user messages
; 256  :                   PM_REMOVE )               // removal flags
; 257  :               )
; 258  :             ;

  00079	eb cc		 jmp	 SHORT $LN2@EventClose
$LN3@EventClose:

; 259  :     }

  0007b	48 8b cc	 mov	 rcx, rsp
  0007e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?EventClose@COPOSVideoCapture@@IEAAXXZ$rtcFrameData
  00085	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0008a	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00091	5f		 pop	 rdi
  00092	c3		 ret	 0
?EventClose@COPOSVideoCapture@@IEAAXXZ ENDP		; COPOSVideoCapture::EventClose
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureEvent.h
;	COMDAT ?EventPreCloseRelease@COPOSVideoCapture@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?EventPreCloseRelease@COPOSVideoCapture@@IEAAXXZ PROC	; COPOSVideoCapture::EventPreCloseRelease, COMDAT

; 221  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 222  :         DOTRACEV( ( _T("*EventPreCloseRelease") ) );

  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CM@JMADAJDC@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAP?$AAr?$AAe?$AAC?$AAl?$AAo?$AAs?$AAe?$AAR@
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 223  : 
; 224  :         // The following two items must be in this order to avoid race
; 225  :         //   condition for breaking out of "DoEvent":
; 226  :         //  - Events are no longer legal.
; 227  :         _Event_bEventsLegal = false;

  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	c6 80 19 02 00
	00 00		 mov	 BYTE PTR [rax+537], 0

; 228  :         //  - In case an OPOS event is being fired, set Win32 event to cause
; 229  :         //    "DoEvent" to break out of its wait.
; 230  :         ::SetEvent( _Event_FiringDoneEvent );

  0003b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 8b 88 20 02
	00 00		 mov	 rcx, QWORD PTR [rax+544]
  00047	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetEvent

; 231  : 
; 232  :         // If an event is in progress when this is called, flag an app bug.
; 233  :         //   (This can only occur if the Close or Release is called from a thread
; 234  :         //    other than the main app thread, or if it is called from the
; 235  :         //    event handler.)
; 236  :         CMASSERT( ! _Event_bEventInProgress );

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00052	0f b6 80 1a 02
	00 00		 movzx	 eax, BYTE PTR [rax+538]
  00059	85 c0		 test	 eax, eax
  0005b	74 1b		 je	 SHORT $LN3@EventPreCl
  0005d	41 b8 ec 00 00
	00		 mov	 r8d, 236		; 000000ecH
  00063	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1GM@EMMHBPEM@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0006a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DE@EPLGDCDL@?$AA?$CB?$AA?5?$AA_?$AAE?$AAv?$AAe?$AAn?$AAt?$AA_?$AAb?$AAE?$AAv?$AAe?$AAn?$AAt@
  00071	e8 00 00 00 00	 call	 ?_assert@@YAXPEB_W0I@Z	; _assert
  00076	33 c0		 xor	 eax, eax
$LN3@EventPreCl:

; 237  :     }

  00078	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007c	5f		 pop	 rdi
  0007d	c3		 ret	 0
?EventPreCloseRelease@COPOSVideoCapture@@IEAAXXZ ENDP	; COPOSVideoCapture::EventPreCloseRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureEvent.h
;	COMDAT ?EventClaim@COPOSVideoCapture@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?EventClaim@COPOSVideoCapture@@IEAAXXZ PROC		; COPOSVideoCapture::EventClaim, COMDAT

; 205  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 206  :         DOTRACEV( ( _T("*EventClaim") ) );

  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BI@PMBJJHKM@?$AA?$CK?$AAE?$AAv?$AAe?$AAn?$AAt?$AAC?$AAl?$AAa?$AAi?$AAm@
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 207  : 
; 208  :         // Initialize so that events are allowed.
; 209  :         //   (Do in "Claim" in case a call to "Release" disabled events.
; 210  :         //    We now need to reenable.)
; 211  :         _Event_bEventsLegal = true;

  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	c6 80 19 02 00
	00 01		 mov	 BYTE PTR [rax+537], 1

; 212  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?EventClaim@COPOSVideoCapture@@IEAAXXZ ENDP		; COPOSVideoCapture::EventClaim
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureEvent.h
;	COMDAT ?EventOpen@COPOSVideoCapture@@IEAAXXZ
_TEXT	SEGMENT
this$ = 16
?EventOpen@COPOSVideoCapture@@IEAAXXZ PROC		; COPOSVideoCapture::EventOpen, COMDAT

; 189  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 190  :         // Initialize so that events are allowed.
; 191  :         _Event_bEventsLegal = true;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	c6 80 19 02 00
	00 01		 mov	 BYTE PTR [rax+537], 1

; 192  :         _Event_bEventInProgress = false;

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	c6 80 1a 02 00
	00 00		 mov	 BYTE PTR [rax+538], 0

; 193  :         _bFreezeState = false;

  0001e	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00023	c6 80 ac 01 00
	00 00		 mov	 BYTE PTR [rax+428], 0

; 194  :         _Event_bOpen = true;

  0002a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002f	c6 80 18 02 00
	00 01		 mov	 BYTE PTR [rax+536], 1

; 195  :     }

  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?EventOpen@COPOSVideoCapture@@IEAAXXZ ENDP		; COPOSVideoCapture::EventOpen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureEvent.h
;	COMDAT ?EventInit@COPOSVideoCapture@@IEAAJXZ
_TEXT	SEGMENT
WndClass$4 = 112
tv136 = 200
tv143 = 208
this$ = 240
?EventInit@COPOSVideoCapture@@IEAAJXZ PROC		; COPOSVideoCapture::EventInit, COMDAT

; 106  :     {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec e0 00
	00 00		 sub	 rsp, 224		; 000000e0H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+240]

; 107  :         _Event_bOpen = false;

  00024	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0002c	c6 80 18 02 00
	00 00		 mov	 BYTE PTR [rax+536], 0

; 108  : 
; 109  :         // This function must be called by the thread that creates the OCX.
; 110  :         // Then these functions will ensure that events from the SO are fired
; 111  :         //   on the thread that creates the OCX.
; 112  :         _Event_ControlThreadID = ::GetCurrentThreadId();

  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetCurrentThreadId
  00039	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00041	89 81 14 02 00
	00		 mov	 DWORD PTR [rcx+532], eax

; 113  : 
; 114  :         // Perform some initialization in case of a failure below,
; 115  :         //   so that EventUninit will not fail.
; 116  :         _Event_hEventWnd = 0;

  00047	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0004f	48 c7 80 30 02
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+560], 0

; 117  :         _Event_FiringDoneEvent = 0;

  0005a	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00062	48 c7 80 20 02
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+544], 0

; 118  :         _Event_DoEventMutex = 0;

  0006d	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00075	48 c7 80 28 02
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+552], 0

; 119  : 
; 120  :         // If first instance of this CO being created, then
; 121  :         //   register a class for our hidden window.
; 122  :         if ( s_nInstances == 0 )

  00080	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_nInstances@COPOSVideoCapture@@1HA, 0 ; COPOSVideoCapture::s_nInstances
  00087	0f 85 b6 00 00
	00		 jne	 $LN2@EventInit

; 123  :         {
; 124  :             WNDCLASS WndClass =
; 125  :             {
; 126  :                 0,                              // style

  0008d	c7 44 24 70 00
	00 00 00	 mov	 DWORD PTR WndClass$4[rsp], 0

; 127  :                 s_EventWindowProc,              // lpfnWndProc

  00095	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?s_EventWindowProc@COPOSVideoCapture@@KA_JPEAUHWND__@@I_K_J@Z ; COPOSVideoCapture::s_EventWindowProc
  0009c	48 89 44 24 78	 mov	 QWORD PTR WndClass$4[rsp+8], rax

; 128  :                 0,                              // cbClsExtra

  000a1	c7 84 24 80 00
	00 00 00 00 00
	00		 mov	 DWORD PTR WndClass$4[rsp+16], 0

; 129  :                 sizeof( void* ),                // cbWndExtra

  000ac	c7 84 24 84 00
	00 00 08 00 00
	00		 mov	 DWORD PTR WndClass$4[rsp+20], 8

; 130  :                 _Module.GetModuleInstance(),    // hInstance

  000b7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_Module@@3VCComModule@ATL@@A ; _Module
  000be	e8 00 00 00 00	 call	 ?GetModuleInstance@CComModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ; ATL::CComModule::GetModuleInstance
  000c3	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR WndClass$4[rsp+24], rax

; 131  :                 NULL,                           // hIcon

  000cb	48 c7 84 24 90
	00 00 00 00 00
	00 00		 mov	 QWORD PTR WndClass$4[rsp+32], 0

; 132  :                 NULL,                           // hCursor

  000d7	48 c7 84 24 98
	00 00 00 00 00
	00 00		 mov	 QWORD PTR WndClass$4[rsp+40], 0

; 133  :                 NULL,                           // hbrBackground

  000e3	48 c7 84 24 a0
	00 00 00 00 00
	00 00		 mov	 QWORD PTR WndClass$4[rsp+48], 0

; 134  :                 NULL,                           // lpszMenuName

  000ef	48 c7 84 24 a8
	00 00 00 00 00
	00 00		 mov	 QWORD PTR WndClass$4[rsp+56], 0

; 135  :                 g_WindowName                    // lpszClassName

  000fb	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?g_WindowName@@3PA_WA ; g_WindowName
  00102	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR WndClass$4[rsp+64], rax

; 136  :             };
; 137  :             if ( 0 == ::RegisterClass( &WndClass ) )

  0010a	48 8d 4c 24 70	 lea	 rcx, QWORD PTR WndClass$4[rsp]
  0010f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegisterClassW
  00115	0f b7 c0	 movzx	 eax, ax
  00118	85 c0		 test	 eax, eax
  0011a	75 27		 jne	 SHORT $LN3@EventInit

; 138  :             {
; 139  :                 DOTRACEERR( _T("  EventInit: Failed RegisterClass %lu\n    %s"), ::GetLastError() );

  0011c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError
  00122	44 8b c0	 mov	 r8d, eax
  00125	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1FK@EJDCNMFO@?$AA?5?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa@
  0012c	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00134	e8 00 00 00 00	 call	 ?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z ; COPOSVideoCapture::WriteTraceError

; 140  :                 return E_UNEXPECTED;

  00139	b8 ff ff 00 80	 mov	 eax, -2147418113	; ffffffff8000ffffH
  0013e	e9 4b 01 00 00	 jmp	 $LN1@EventInit
$LN3@EventInit:
$LN2@EventInit:

; 141  :             }
; 142  :         }
; 143  : 
; 144  :         // Create the hidden window for event handling.
; 145  :         _Event_hEventWnd = CreateWindowEx(

  00143	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_Module@@3VCComModule@ATL@@A ; _Module
  0014a	e8 00 00 00 00	 call	 ?GetModuleInstance@CComModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ; ATL::CComModule::GetModuleInstance
  0014f	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00157	48 89 4c 24 58	 mov	 QWORD PTR [rsp+88], rcx
  0015c	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  00161	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR [rsp+72], 0
  0016a	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR [rsp+64], 0
  00173	c7 44 24 38 00
	00 00 00	 mov	 DWORD PTR [rsp+56], 0
  0017b	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR [rsp+48], 0
  00183	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR [rsp+40], 0
  0018b	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00193	45 33 c9	 xor	 r9d, r9d
  00196	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:?g_WindowName@@3PA_WA ; g_WindowName
  0019d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?g_WindowName@@3PA_WA ; g_WindowName
  001a4	33 c9		 xor	 ecx, ecx
  001a6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateWindowExW
  001ac	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001b4	48 89 81 30 02
	00 00		 mov	 QWORD PTR [rcx+560], rax

; 146  :             0,                              // extended window style
; 147  :             g_WindowName,                   // pointer to registered class name
; 148  :             g_WindowName,                   // pointer to window name
; 149  :             0,                              // window style
; 150  :             0,                              // horizontal position of window
; 151  :             0,                              // vertical position of window
; 152  :             0,                              // window width
; 153  :             0,                              // window height
; 154  :             NULL,                           // handle to parent or owner window
; 155  :             0,                              // handle to menu, or child-window identifier
; 156  :             _Module.GetModuleInstance(),    // handle to application instance
; 157  :             this );                         // pointer to window-creation data
; 158  :         if ( 0 == _Event_hEventWnd )

  001bb	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001c3	48 83 b8 30 02
	00 00 00	 cmp	 QWORD PTR [rax+560], 0
  001cb	75 27		 jne	 SHORT $LN4@EventInit

; 159  :         {
; 160  :             DOTRACEERR( _T("  EventInit: Failed CreateWindowEx %lu\n    %s"), ::GetLastError() );

  001cd	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError
  001d3	44 8b c0	 mov	 r8d, eax
  001d6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1FM@GHFMGGAO@?$AA?5?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa@
  001dd	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001e5	e8 00 00 00 00	 call	 ?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z ; COPOSVideoCapture::WriteTraceError

; 161  :             return E_UNEXPECTED;

  001ea	b8 ff ff 00 80	 mov	 eax, -2147418113	; ffffffff8000ffffH
  001ef	e9 9a 00 00 00	 jmp	 $LN1@EventInit
$LN4@EventInit:

; 162  :         }
; 163  : 
; 164  :         // Create synchronization objects.
; 165  :         if ( 0 == ( _Event_FiringDoneEvent = CreateEvent(
; 166  :                         0,                  // pointer to security attributes
; 167  :                         TRUE,               // flag for manual-reset event
; 168  :                         FALSE,              // flag for initial state
; 169  :                         0 ) ) ||            // pointer to event-object name

  001f4	45 33 c9	 xor	 r9d, r9d
  001f7	45 33 c0	 xor	 r8d, r8d
  001fa	ba 01 00 00 00	 mov	 edx, 1
  001ff	33 c9		 xor	 ecx, ecx
  00201	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateEventW
  00207	48 89 84 24 c8
	00 00 00	 mov	 QWORD PTR tv136[rsp], rax
  0020f	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00217	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR tv136[rsp]
  0021f	48 89 88 20 02
	00 00		 mov	 QWORD PTR [rax+544], rcx
  00226	48 83 bc 24 c8
	00 00 00 00	 cmp	 QWORD PTR tv136[rsp], 0
  0022f	74 37		 je	 SHORT $LN6@EventInit
  00231	45 33 c0	 xor	 r8d, r8d
  00234	33 d2		 xor	 edx, edx
  00236	33 c9		 xor	 ecx, ecx
  00238	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateMutexW
  0023e	48 89 84 24 d0
	00 00 00	 mov	 QWORD PTR tv143[rsp], rax
  00246	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0024e	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR tv143[rsp]
  00256	48 89 88 28 02
	00 00		 mov	 QWORD PTR [rax+552], rcx
  0025d	48 83 bc 24 d0
	00 00 00 00	 cmp	 QWORD PTR tv143[rsp], 0
  00266	75 24		 jne	 SHORT $LN5@EventInit
$LN6@EventInit:

; 170  :              0 == ( _Event_DoEventMutex = CreateMutex(
; 171  :                         0,                  // pointer to security attributes
; 172  :                         FALSE,              // flag for initial ownership
; 173  :                         0 ) ) )             // pointer to mutex-object name
; 174  :         {
; 175  :             DOTRACEERR( _T("  EventInit: Failed CreateEvent/Mutex %lu\n    %s"), ::GetLastError() );

  00268	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError
  0026e	44 8b c0	 mov	 r8d, eax
  00271	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1GC@FLDBIEFG@?$AA?5?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa@
  00278	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00280	e8 00 00 00 00	 call	 ?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z ; COPOSVideoCapture::WriteTraceError

; 176  :             return E_UNEXPECTED;

  00285	b8 ff ff 00 80	 mov	 eax, -2147418113	; ffffffff8000ffffH
  0028a	eb 02		 jmp	 SHORT $LN1@EventInit
$LN5@EventInit:

; 177  :         }
; 178  : 
; 179  :         return S_OK;

  0028c	33 c0		 xor	 eax, eax
$LN1@EventInit:

; 180  :     }

  0028e	48 8b f8	 mov	 rdi, rax
  00291	48 8b cc	 mov	 rcx, rsp
  00294	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?EventInit@COPOSVideoCapture@@IEAAJXZ$rtcFrameData
  0029b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  002a0	48 8b c7	 mov	 rax, rdi
  002a3	48 81 c4 e0 00
	00 00		 add	 rsp, 224		; 000000e0H
  002aa	5f		 pop	 rdi
  002ab	c3		 ret	 0
?EventInit@COPOSVideoCapture@@IEAAJXZ ENDP		; COPOSVideoCapture::EventInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.h
;	COMDAT ?GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z
_TEXT	SEGMENT
tv77 = 32
tv84 = 40
tv92 = 48
tv131 = 56
pnEntries$ = 80
?GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z PROC ; COPOSVideoCapture::GetConnMap, COMDAT

; 267  : BEGIN_CONNECTION_POINT_MAP(COPOSVideoCapture)

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  0001e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:_Init_thread_epoch
  00023	8b c0		 mov	 eax, eax
  00025	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _tls_index
  0002b	65 48 8b 14 25
	58 00 00 00	 mov	 rdx, QWORD PTR gs:88
  00034	48 8b 0c ca	 mov	 rcx, QWORD PTR [rdx+rcx*8]
  00038	8b 04 08	 mov	 eax, DWORD PTR [rax+rcx]
  0003b	39 05 00 00 00
	00		 cmp	 DWORD PTR ?$TSS0@?1??GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z@4HA, eax ; `COPOSVideoCapture::GetConnMap'::`2'::$TSS0
  00041	0f 8e f4 00 00
	00		 jle	 $LN2@GetConnMap
  00047	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z@4HA ; `COPOSVideoCapture::GetConnMap'::`2'::$TSS0
  0004e	e8 00 00 00 00	 call	 _Init_thread_header
  00053	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z@4HA, -1 ; `COPOSVideoCapture::GetConnMap'::`2'::$TSS0
  0005a	0f 85 db 00 00
	00		 jne	 $LN2@GetConnMap

; 268  :     CONNECTION_POINT_ENTRY(IID_IPropertyNotifySink)

  00060	33 c0		 xor	 eax, eax
  00062	48 83 f8 08	 cmp	 rax, 8
  00066	74 12		 je	 SHORT $LN5@GetConnMap
  00068	b8 08 00 00 00	 mov	 eax, 8
  0006d	48 05 28 01 00
	00		 add	 rax, 296		; 00000128H
  00073	48 89 44 24 20	 mov	 QWORD PTR tv77[rsp], rax
  00078	eb 09		 jmp	 SHORT $LN6@GetConnMap
$LN5@GetConnMap:
  0007a	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR tv77[rsp], 0
$LN6@GetConnMap:
  00083	33 c0		 xor	 eax, eax
  00085	48 83 f8 08	 cmp	 rax, 8
  00089	74 12		 je	 SHORT $LN7@GetConnMap
  0008b	b8 08 00 00 00	 mov	 eax, 8
  00090	48 05 e8 00 00
	00		 add	 rax, 232		; 000000e8H
  00096	48 89 44 24 28	 mov	 QWORD PTR tv84[rsp], rax
  0009b	eb 09		 jmp	 SHORT $LN8@GetConnMap
$LN7@GetConnMap:
  0009d	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR tv84[rsp], 0
$LN8@GetConnMap:
  000a6	48 8b 44 24 20	 mov	 rax, QWORD PTR tv77[rsp]
  000ab	48 83 e8 08	 sub	 rax, 8
  000af	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv84[rsp]
  000b4	48 83 e9 08	 sub	 rcx, 8
  000b8	48 2b c1	 sub	 rax, rcx
  000bb	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?_entries@?1??GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z@4QBU34@B, rax

; 269  :     CONNECTION_POINT_ENTRY(DIID__IOPOSVideoCaptureEvents)

  000c2	33 c0		 xor	 eax, eax
  000c4	48 83 f8 08	 cmp	 rax, 8
  000c8	74 12		 je	 SHORT $LN9@GetConnMap
  000ca	b8 08 00 00 00	 mov	 eax, 8
  000cf	48 05 40 01 00
	00		 add	 rax, 320		; 00000140H
  000d5	48 89 44 24 30	 mov	 QWORD PTR tv92[rsp], rax
  000da	eb 09		 jmp	 SHORT $LN10@GetConnMap
$LN9@GetConnMap:
  000dc	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR tv92[rsp], 0
$LN10@GetConnMap:
  000e5	33 c0		 xor	 eax, eax
  000e7	48 83 f8 08	 cmp	 rax, 8
  000eb	74 12		 je	 SHORT $LN11@GetConnMap
  000ed	b8 08 00 00 00	 mov	 eax, 8
  000f2	48 05 e8 00 00
	00		 add	 rax, 232		; 000000e8H
  000f8	48 89 44 24 38	 mov	 QWORD PTR tv131[rsp], rax
  000fd	eb 09		 jmp	 SHORT $LN12@GetConnMap
$LN11@GetConnMap:
  000ff	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR tv131[rsp], 0
$LN12@GetConnMap:
  00108	48 8b 44 24 30	 mov	 rax, QWORD PTR tv92[rsp]
  0010d	48 83 e8 08	 sub	 rax, 8
  00111	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv131[rsp]
  00116	48 83 e9 08	 sub	 rcx, 8
  0011a	48 2b c1	 sub	 rax, rcx
  0011d	48 89 05 08 00
	00 00		 mov	 QWORD PTR ?_entries@?1??GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z@4QBU34@B+8, rax

; 270  : END_CONNECTION_POINT_MAP()

  00124	48 c7 05 10 00
	00 00 ff ff ff
	ff		 mov	 QWORD PTR ?_entries@?1??GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z@4QBU34@B+16, -1
  0012f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z@4HA ; `COPOSVideoCapture::GetConnMap'::`2'::$TSS0
  00136	e8 00 00 00 00	 call	 _Init_thread_footer
$LN2@GetConnMap:
  0013b	48 83 7c 24 50
	00		 cmp	 QWORD PTR pnEntries$[rsp], 0
  00141	74 0b		 je	 SHORT $LN3@GetConnMap
  00143	48 8b 44 24 50	 mov	 rax, QWORD PTR pnEntries$[rsp]
  00148	c7 00 02 00 00
	00		 mov	 DWORD PTR [rax], 2
$LN3@GetConnMap:
  0014e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_entries@?1??GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z@4QBU34@B ; `COPOSVideoCapture::GetConnMap'::`2'::_entries
  00155	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00159	5f		 pop	 rdi
  0015a	c3		 ret	 0
?GetConnMap@COPOSVideoCapture@@SAPEBU_ATL_CONNMAP_ENTRY@ATL@@PEAH@Z ENDP ; COPOSVideoCapture::GetConnMap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
rc$ = 80
hBitmap$ = 88
bmp$ = 104
hMemDC$ = 152
hOldBitmap$ = 160
tv91 = 168
tv132 = 172
this$ = 192
di$ = 200
?OnDraw@COPOSVideoCapture@@MEAAJAEAUATL_DRAWINFO@@@Z PROC ; COPOSVideoCapture::OnDraw

; 232  : {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+192]

; 233  :     RECT& rc = *(RECT*)di.prcBounds;

  00029	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR di$[rsp]
  00031	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  00035	48 89 44 24 50	 mov	 QWORD PTR rc$[rsp], rax

; 234  : 
; 235  :     // Draw our bitmap...
; 236  :     //  - Load bitmap and get info
; 237  :     HBITMAP hBitmap = LoadBitmap(

  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_Module@@3VCComModule@ATL@@A ; _Module
  00041	e8 00 00 00 00	 call	 ?GetModuleInstance@CComModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ; ATL::CComModule::GetModuleInstance
  00046	ba c9 00 00 00	 mov	 edx, 201		; 000000c9H
  0004b	48 8b c8	 mov	 rcx, rax
  0004e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LoadBitmapW
  00054	48 89 44 24 58	 mov	 QWORD PTR hBitmap$[rsp], rax

; 238  :         _Module.GetModuleInstance(),            // handle of the instance containing the image
; 239  :         MAKEINTRESOURCE(IDB_OPOSVIDEOCAPTURE2) ); // bitmap resource name
; 240  :     BITMAP bmp;
; 241  :     GetObject(

  00059	4c 8d 44 24 68	 lea	 r8, QWORD PTR bmp$[rsp]
  0005e	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00063	48 8b 4c 24 58	 mov	 rcx, QWORD PTR hBitmap$[rsp]
  00068	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetObjectW

; 242  :         hBitmap,                                // handle to graphics object of interest
; 243  :         sizeof(BITMAP),                         // size of buffer for object information
; 244  :         &bmp );                                 // pointer to buffer for object information
; 245  :     //  - Create a compatible memory DC and select bitmap into it
; 246  :     HDC hMemDC = CreateCompatibleDC(

  0006e	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR di$[rsp]
  00076	48 8b 48 20	 mov	 rcx, QWORD PTR [rax+32]
  0007a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateCompatibleDC
  00080	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR hMemDC$[rsp], rax

; 247  :         di.hdcDraw );                           // handle to the device context
; 248  :     HBITMAP hOldBitmap =

  00088	48 8b 54 24 58	 mov	 rdx, QWORD PTR hBitmap$[rsp]
  0008d	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR hMemDC$[rsp]
  00095	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SelectObject
  0009b	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR hOldBitmap$[rsp], rax

; 249  :         (HBITMAP) SelectObject(
; 250  :             hMemDC,                             // handle to device context
; 251  :             hBitmap );                          // handle to object
; 252  :     //  - Copy bitmap from memory DC to screen DC
; 253  :     BitBlt(

  000a3	48 8b 44 24 50	 mov	 rax, QWORD PTR rc$[rsp]
  000a8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR rc$[rsp]
  000ad	8b 49 04	 mov	 ecx, DWORD PTR [rcx+4]
  000b0	8b 40 0c	 mov	 eax, DWORD PTR [rax+12]
  000b3	2b c1		 sub	 eax, ecx
  000b5	39 44 24 70	 cmp	 DWORD PTR bmp$[rsp+8], eax
  000b9	7d 0d		 jge	 SHORT $LN3@OnDraw
  000bb	8b 44 24 70	 mov	 eax, DWORD PTR bmp$[rsp+8]
  000bf	89 84 24 a8 00
	00 00		 mov	 DWORD PTR tv91[rsp], eax
  000c6	eb 19		 jmp	 SHORT $LN4@OnDraw
$LN3@OnDraw:
  000c8	48 8b 44 24 50	 mov	 rax, QWORD PTR rc$[rsp]
  000cd	48 8b 4c 24 50	 mov	 rcx, QWORD PTR rc$[rsp]
  000d2	8b 49 04	 mov	 ecx, DWORD PTR [rcx+4]
  000d5	8b 40 0c	 mov	 eax, DWORD PTR [rax+12]
  000d8	2b c1		 sub	 eax, ecx
  000da	89 84 24 a8 00
	00 00		 mov	 DWORD PTR tv91[rsp], eax
$LN4@OnDraw:
  000e1	48 8b 44 24 50	 mov	 rax, QWORD PTR rc$[rsp]
  000e6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR rc$[rsp]
  000eb	8b 09		 mov	 ecx, DWORD PTR [rcx]
  000ed	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  000f0	2b c1		 sub	 eax, ecx
  000f2	39 44 24 6c	 cmp	 DWORD PTR bmp$[rsp+4], eax
  000f6	7d 0d		 jge	 SHORT $LN5@OnDraw
  000f8	8b 44 24 6c	 mov	 eax, DWORD PTR bmp$[rsp+4]
  000fc	89 84 24 ac 00
	00 00		 mov	 DWORD PTR tv132[rsp], eax
  00103	eb 18		 jmp	 SHORT $LN6@OnDraw
$LN5@OnDraw:
  00105	48 8b 44 24 50	 mov	 rax, QWORD PTR rc$[rsp]
  0010a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR rc$[rsp]
  0010f	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00111	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00114	2b c1		 sub	 eax, ecx
  00116	89 84 24 ac 00
	00 00		 mov	 DWORD PTR tv132[rsp], eax
$LN6@OnDraw:
  0011d	c7 44 24 40 20
	00 cc 00	 mov	 DWORD PTR [rsp+64], 13369376 ; 00cc0020H
  00125	c7 44 24 38 00
	00 00 00	 mov	 DWORD PTR [rsp+56], 0
  0012d	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR [rsp+48], 0
  00135	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR hMemDC$[rsp]
  0013d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00142	8b 84 24 a8 00
	00 00		 mov	 eax, DWORD PTR tv91[rsp]
  00149	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  0014d	44 8b 8c 24 ac
	00 00 00	 mov	 r9d, DWORD PTR tv132[rsp]
  00155	48 8b 44 24 50	 mov	 rax, QWORD PTR rc$[rsp]
  0015a	44 8b 40 04	 mov	 r8d, DWORD PTR [rax+4]
  0015e	48 8b 44 24 50	 mov	 rax, QWORD PTR rc$[rsp]
  00163	8b 10		 mov	 edx, DWORD PTR [rax]
  00165	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR di$[rsp]
  0016d	48 8b 48 20	 mov	 rcx, QWORD PTR [rax+32]
  00171	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_BitBlt

; 254  :       di.hdcDraw,                               // handle to destination device context
; 255  :       rc.left,                                  // x-coordinate of destination rectangle's upper-left corner
; 256  :       rc.top,                                   // y-coordinate of destination rectangle's upper-left corner
; 257  :       min( bmp.bmWidth, rc.right - rc.left ),   // width of destination rectangle
; 258  :       min( bmp.bmHeight, rc.bottom - rc.top ),  // height of destination rectangle
; 259  :       hMemDC,                                   // handle to source device context
; 260  :       0,                                        // x-coordinate of source rectangle's upper-left corner
; 261  :       0,                                        // y-coordinate of source rectangle's upper-left corner
; 262  :       SRCCOPY );                                // raster operation code
; 263  : 
; 264  :     // Cleanup
; 265  :     SelectObject( hMemDC, hOldBitmap );

  00177	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR hOldBitmap$[rsp]
  0017f	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR hMemDC$[rsp]
  00187	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SelectObject

; 266  :     DeleteObject( hMemDC );

  0018d	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR hMemDC$[rsp]
  00195	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DeleteObject

; 267  :     DeleteObject( hBitmap );

  0019b	48 8b 4c 24 58	 mov	 rcx, QWORD PTR hBitmap$[rsp]
  001a0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DeleteObject

; 268  : 
; 269  :     return S_OK;

  001a6	33 c0		 xor	 eax, eax

; 270  : }

  001a8	8b f8		 mov	 edi, eax
  001aa	48 8b cc	 mov	 rcx, rsp
  001ad	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?OnDraw@COPOSVideoCapture@@MEAAJAEAUATL_DRAWINFO@@@Z$rtcFrameData
  001b4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001b9	8b c7		 mov	 eax, edi
  001bb	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  001c2	5f		 pop	 rdi
  001c3	c3		 ret	 0
?OnDraw@COPOSVideoCapture@@MEAAJAEAUATL_DRAWINFO@@@Z ENDP ; COPOSVideoCapture::OnDraw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 48
bFreeze$ = 56
?FreezeEvents@COPOSVideoCapture@@MEAAJH@Z PROC		; COPOSVideoCapture::FreezeEvents

; 203  : {

$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 204  :     // If requesting events to be frozen...
; 205  :     if ( bFreeze )

  00022	83 7c 24 38 00	 cmp	 DWORD PTR bFreeze$[rsp], 0
  00027	74 75		 je	 SHORT $LN2@FreezeEven

; 206  :     {
; 207  :         DOTRACEV( ( _T("*FreezeEvents: Freezing %d"), _nCOFreezeEventCount ) );

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 2d c0 00 00
	00		 sub	 rax, 192		; 000000c0H
  00034	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00039	44 8b 81 e8 00
	00 00		 mov	 r8d, DWORD PTR [rcx+232]
  00040	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193019
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 208  :         if ( _nCOFreezeEventCount == 0 &&   // If events are not currently frozen and

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	83 b8 e8 00 00
	00 00		 cmp	 DWORD PTR [rax+232], 0
  0005b	75 27		 jne	 SHORT $LN4@FreezeEven
  0005d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00062	0f b6 80 c8 00
	00 00		 movzx	 eax, BYTE PTR [rax+200]
  00069	85 c0		 test	 eax, eax
  0006b	74 17		 je	 SHORT $LN4@FreezeEven

; 209  :              _bOpened )                     //   SO is opened,
; 210  :             SetCOFreezeEvents( TRUE );      //   then freeze events in the SO.

  0006d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00072	48 2d c0 00 00
	00		 sub	 rax, 192		; 000000c0H
  00078	66 ba 01 00	 mov	 dx, 1
  0007c	48 8b c8	 mov	 rcx, rax
  0007f	e8 00 00 00 00	 call	 ?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z ; COPOSVideoCapture::SetCOFreezeEvents
$LN4@FreezeEven:

; 211  :         _nCOFreezeEventCount++;             // Increment freeze count. Must do after informing SO.

  00084	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00089	8b 80 e8 00 00
	00		 mov	 eax, DWORD PTR [rax+232]
  0008f	ff c0		 inc	 eax
  00091	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00096	89 81 e8 00 00
	00		 mov	 DWORD PTR [rcx+232], eax

; 212  :     }

  0009c	eb 71		 jmp	 SHORT $LN3@FreezeEven
$LN2@FreezeEven:

; 213  :     // Else requesting events to be unfrozen...
; 214  :     else
; 215  :     {
; 216  :         _nCOFreezeEventCount--;             // Decrement freeze count. Must do before informing SO.

  0009e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000a3	8b 80 e8 00 00
	00		 mov	 eax, DWORD PTR [rax+232]
  000a9	ff c8		 dec	 eax
  000ab	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  000b0	89 81 e8 00 00
	00		 mov	 DWORD PTR [rcx+232], eax

; 217  :         DOTRACEV( ( _T("*FreezeEvents: Unfreezing %d"), _nCOFreezeEventCount ) );

  000b6	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000bb	48 2d c0 00 00
	00		 sub	 rax, 192		; 000000c0H
  000c1	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  000c6	44 8b 81 e8 00
	00 00		 mov	 r8d, DWORD PTR [rcx+232]
  000cd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193021
  000d4	48 8b c8	 mov	 rcx, rax
  000d7	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 218  :         if ( _nCOFreezeEventCount == 0 &&   // If events have become unfrozen and

  000dc	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000e1	83 b8 e8 00 00
	00 00		 cmp	 DWORD PTR [rax+232], 0
  000e8	75 25		 jne	 SHORT $LN5@FreezeEven
  000ea	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000ef	0f b6 80 c8 00
	00 00		 movzx	 eax, BYTE PTR [rax+200]
  000f6	85 c0		 test	 eax, eax
  000f8	74 15		 je	 SHORT $LN5@FreezeEven

; 219  :              _bOpened )                     //   SO is opened,
; 220  :             SetCOFreezeEvents( FALSE );     //   then unfreeze events in the SO.

  000fa	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000ff	48 2d c0 00 00
	00		 sub	 rax, 192		; 000000c0H
  00105	33 d2		 xor	 edx, edx
  00107	48 8b c8	 mov	 rcx, rax
  0010a	e8 00 00 00 00	 call	 ?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z ; COPOSVideoCapture::SetCOFreezeEvents
$LN5@FreezeEven:
$LN3@FreezeEven:

; 221  :     }
; 222  : 
; 223  :     // Just in case anyone cares ... keep the CComControlBase one in sync.
; 224  :     m_nFreezeEvents = _nCOFreezeEventCount;

  0010f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00114	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00119	8b 89 e8 00 00
	00		 mov	 ecx, DWORD PTR [rcx+232]
  0011f	89 48 a8	 mov	 DWORD PTR [rax-88], ecx

; 225  :     return S_OK;

  00122	33 c0		 xor	 eax, eax

; 226  : }

  00124	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00128	5f		 pop	 rdi
  00129	c3		 ret	 0
?FreezeEvents@COPOSVideoCapture@@MEAAJH@Z ENDP		; COPOSVideoCapture::FreezeEvents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
Var$6 = 88
VarResult$7 = 152
Disp$8 = 216
tv87 = 248
tv75 = 256
this$ = 288
bFreeze$ = 296
?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z PROC	; COPOSVideoCapture::SetCOFreezeEvents

; 651  : {

$LN4:
  00000	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 10 01
	00 00		 sub	 rsp, 272		; 00000110H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 44 00 00 00	 mov	 ecx, 68			; 00000044H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR [rsp+288]

; 652  :     // If open...
; 653  :     if ( _bOpened )

  00029	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00031	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  00038	85 c0		 test	 eax, eax
  0003a	0f 84 2e 01 00
	00		 je	 $LN2@SetCOFreez

; 654  :     {
; 655  :         DOTRACEV( ( _T("*SetCOFreezeEvents: 0x%X"), bFreeze ) );

  00040	0f bf 84 24 28
	01 00 00	 movsx	 eax, WORD PTR bFreeze$[rsp]
  00048	44 8b c0	 mov	 r8d, eax
  0004b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193364
  00052	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0005a	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 656  : 
; 657  :         // Set up and call the method to inform the SO of container freeze/unfreeze.
; 658  :         OposVariant Var;

  0005f	48 8d 4c 24 58	 lea	 rcx, QWORD PTR Var$6[rsp]
  00064	e8 00 00 00 00	 call	 ??0OposVariant@@QEAA@XZ	; OposVariant::OposVariant

; 659  :         OposVariantResult VarResult;

  00069	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR VarResult$7[rsp]
  00071	e8 00 00 00 00	 call	 ??0OposVariantResult@@QEAA@XZ

; 660  :         Var.SetVARIANT_BOOL( bFreeze );

  00076	0f b7 94 24 28
	01 00 00	 movzx	 edx, WORD PTR bFreeze$[rsp]
  0007e	48 8d 4c 24 58	 lea	 rcx, QWORD PTR Var$6[rsp]
  00083	e8 00 00 00 00	 call	 ?SetVARIANT_BOOL@OposVariant@@QEAAXF@Z ; OposVariant::SetVARIANT_BOOL

; 661  :         DISPPARAMS Disp = { &Var, NULL, 1, 0 };

  00088	48 8d 44 24 58	 lea	 rax, QWORD PTR Var$6[rsp]
  0008d	48 89 84 24 d8
	00 00 00	 mov	 QWORD PTR Disp$8[rsp], rax
  00095	48 c7 84 24 e0
	00 00 00 00 00
	00 00		 mov	 QWORD PTR Disp$8[rsp+8], 0
  000a1	c7 84 24 e8 00
	00 00 01 00 00
	00		 mov	 DWORD PTR Disp$8[rsp+16], 1
  000ac	c7 84 24 ec 00
	00 00 00 00 00
	00		 mov	 DWORD PTR Disp$8[rsp+20], 0

; 662  :         _pService->Invoke(

  000b7	b8 04 00 00 00	 mov	 eax, 4
  000bc	48 6b c0 00	 imul	 rax, rax, 0
  000c0	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c8	48 8b 89 a0 01
	00 00		 mov	 rcx, QWORD PTR [rcx+416]
  000cf	48 8b 94 24 20
	01 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  000d7	48 8b 92 a0 01
	00 00		 mov	 rdx, QWORD PTR [rdx+416]
  000de	48 89 94 24 f8
	00 00 00	 mov	 QWORD PTR tv87[rsp], rdx
  000e6	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000e9	48 89 8c 24 00
	01 00 00	 mov	 QWORD PTR tv75[rsp], rcx
  000f1	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR [rsp+64], 0
  000fa	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR [rsp+56], 0
  00103	4c 8d 84 24 98
	00 00 00	 lea	 r8, QWORD PTR VarResult$7[rsp]
  0010b	4c 89 44 24 30	 mov	 QWORD PTR [rsp+48], r8
  00110	4c 8d 84 24 d8
	00 00 00	 lea	 r8, QWORD PTR Disp$8[rsp]
  00118	4c 89 44 24 28	 mov	 QWORD PTR [rsp+40], r8
  0011d	66 c7 44 24 20
	01 00		 mov	 WORD PTR [rsp+32], 1
  00124	41 b9 00 04 00
	00		 mov	 r9d, 1024		; 00000400H
  0012a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:GUID_NULL
  00131	4c 8b 94 24 20
	01 00 00	 mov	 r10, QWORD PTR this$[rsp]
  00139	41 8b 94 02 b4
	01 00 00	 mov	 edx, DWORD PTR [r10+rax+436]
  00141	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR tv87[rsp]
  00149	48 8b c8	 mov	 rcx, rax
  0014c	48 8b 84 24 00
	01 00 00	 mov	 rax, QWORD PTR tv75[rsp]
  00154	ff 50 30	 call	 QWORD PTR [rax+48]

; 663  :                 _DispIDs[nDICOFreezeEvents], IID_NULL, LOCALE_USER_DEFAULT,
; 664  :                 DISPATCH_METHOD, &Disp, &VarResult, NULL, NULL );
; 665  :     }

  00157	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR VarResult$7[rsp]
  0015f	e8 00 00 00 00	 call	 ??1OposVariantResult@@QEAA@XZ ; OposVariantResult::~OposVariantResult
  00164	48 8d 4c 24 58	 lea	 rcx, QWORD PTR Var$6[rsp]
  00169	e8 00 00 00 00	 call	 ??1OposVariant@@QEAA@XZ	; OposVariant::~OposVariant
$LN2@SetCOFreez:

; 666  : }

  0016e	48 8b cc	 mov	 rcx, rsp
  00171	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z$rtcFrameData
  00178	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0017d	48 81 c4 10 01
	00 00		 add	 rsp, 272		; 00000110H
  00184	5f		 pop	 rdi
  00185	c3		 ret	 0
?SetCOFreezeEvents@COPOSVideoCapture@@IEAAXF@Z ENDP	; COPOSVideoCapture::SetCOFreezeEvents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
pVar$ = 80
szParmNum$ = 104
szPrefix$ = 176
pStrRefs$ = 392
u$ = 400
hRCTmp$9 = 420
VarResult$10 = 456
Disp$11 = 520
pszInfo$ = 552
szHR$ = 576
nStrRefLen$12 = 692
pStrRef$13 = 696
$T14 = 712
$T15 = 720
$T16 = 728
$T17 = 736
$T18 = 744
$T19 = 752
$T20 = 760
$T21 = 768
$T22 = 776
$T23 = 784
tv87 = 792
tv90 = 800
tv146 = 808
tv284 = 816
tv310 = 824
tv302 = 832
tv344 = 840
tv382 = 844
tv481 = 848
__$ArrayPad$ = 856
this$ = 880
pFuncName$ = 888
hRC$ = 896
pParms$ = 904
nParms$ = 912
nDispIDIndex$ = 920
pRC$ = 928
bOpenCheck$ = 936
?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z PROC ; COPOSVideoCapture::DoInvoke

; 510  : {

$LN62:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 60 03
	00 00		 sub	 rsp, 864		; 00000360H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 d8 00 00 00	 mov	 ecx, 216		; 000000d8H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR [rsp+880]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 58
	03 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 511  :     // Trace incoming function and parameters.
; 512  : #ifdef _DEBUG
; 513  :     OposVariant* pVar;
; 514  :     TCHAR szParmNum[20];
; 515  :     TCHAR szPrefix[100];
; 516  :     OposVariant* pStrRefs = new OposVariant[nParms];

  00045	8b 84 24 90 03
	00 00		 mov	 eax, DWORD PTR nParms$[rsp]
  0004c	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR $T14[rsp], rax
  00054	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00059	48 f7 a4 24 c8
	02 00 00	 mul	 QWORD PTR $T14[rsp]
  00061	48 c7 c1 ff ff
	ff ff		 mov	 rcx, -1
  00068	48 0f 40 c1	 cmovo	 rax, rcx
  0006c	48 83 c0 08	 add	 rax, 8
  00070	48 c7 c1 ff ff
	ff ff		 mov	 rcx, -1
  00077	48 0f 42 c1	 cmovb	 rax, rcx
  0007b	48 8b c8	 mov	 rcx, rax
  0007e	e8 00 00 00 00	 call	 ??_U@YAPEAX_K@Z		; operator new[]
  00083	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR $T15[rsp], rax
  0008b	48 83 bc 24 d0
	02 00 00 00	 cmp	 QWORD PTR $T15[rsp], 0
  00094	74 51		 je	 SHORT $LN39@DoInvoke
  00096	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR $T15[rsp]
  0009e	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR $T14[rsp]
  000a6	48 89 08	 mov	 QWORD PTR [rax], rcx
  000a9	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR $T15[rsp]
  000b1	48 83 c0 08	 add	 rax, 8
  000b5	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??0OposVariant@@QEAA@XZ ; OposVariant::OposVariant
  000bc	4c 8b 84 24 c8
	02 00 00	 mov	 r8, QWORD PTR $T14[rsp]
  000c4	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  000c9	48 8b c8	 mov	 rcx, rax
  000cc	e8 00 00 00 00	 call	 ??_H@YAXPEAX_K1P6APEAX0@Z@Z
  000d1	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR $T15[rsp]
  000d9	48 83 c0 08	 add	 rax, 8
  000dd	48 89 84 24 18
	03 00 00	 mov	 QWORD PTR tv87[rsp], rax
  000e5	eb 0c		 jmp	 SHORT $LN40@DoInvoke
$LN39@DoInvoke:
  000e7	48 c7 84 24 18
	03 00 00 00 00
	00 00		 mov	 QWORD PTR tv87[rsp], 0
$LN40@DoInvoke:
  000f3	48 8b 84 24 18
	03 00 00	 mov	 rax, QWORD PTR tv87[rsp]
  000fb	48 89 84 24 88
	01 00 00	 mov	 QWORD PTR pStrRefs$[rsp], rax

; 517  : 
; 518  :     DOTRACEV( ( _T("+%hs [Function]  %u parameter%s"), pFuncName, nParms, nParms == 1 ? _T("") : _T("s") ) );

  00103	83 bc 24 90 03
	00 00 01	 cmp	 DWORD PTR nParms$[rsp], 1
  0010b	75 11		 jne	 SHORT $LN41@DoInvoke
  0010d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193292
  00114	48 89 84 24 20
	03 00 00	 mov	 QWORD PTR tv90[rsp], rax
  0011c	eb 0f		 jmp	 SHORT $LN42@DoInvoke
$LN41@DoInvoke:
  0011e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193293
  00125	48 89 84 24 20
	03 00 00	 mov	 QWORD PTR tv90[rsp], rax
$LN42@DoInvoke:
  0012d	48 8b 84 24 20
	03 00 00	 mov	 rax, QWORD PTR tv90[rsp]
  00135	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0013a	44 8b 8c 24 90
	03 00 00	 mov	 r9d, DWORD PTR nParms$[rsp]
  00142	4c 8b 84 24 78
	03 00 00	 mov	 r8, QWORD PTR pFuncName$[rsp]
  0014a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193294
  00151	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00159	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 519  :     unsigned u;
; 520  :     for ( u = 0; ++u <= nParms; )

  0015e	c7 84 24 90 01
	00 00 00 00 00
	00		 mov	 DWORD PTR u$[rsp], 0
$LN2@DoInvoke:
  00169	8b 84 24 90 01
	00 00		 mov	 eax, DWORD PTR u$[rsp]
  00170	ff c0		 inc	 eax
  00172	89 84 24 90 01
	00 00		 mov	 DWORD PTR u$[rsp], eax
  00179	8b 84 24 90 03
	00 00		 mov	 eax, DWORD PTR nParms$[rsp]
  00180	39 84 24 90 01
	00 00		 cmp	 DWORD PTR u$[rsp], eax
  00187	0f 87 68 03 00
	00		 ja	 $LN3@DoInvoke

; 521  :     {
; 522  :         HRESULT hRCTmp;
; 523  :         pVar = &pParms[ nParms - u ];

  0018d	8b 84 24 90 01
	00 00		 mov	 eax, DWORD PTR u$[rsp]
  00194	8b 8c 24 90 03
	00 00		 mov	 ecx, DWORD PTR nParms$[rsp]
  0019b	2b c8		 sub	 ecx, eax
  0019d	8b c1		 mov	 eax, ecx
  0019f	8b c0		 mov	 eax, eax
  001a1	48 6b c0 20	 imul	 rax, rax, 32		; 00000020H
  001a5	48 8b 8c 24 88
	03 00 00	 mov	 rcx, QWORD PTR pParms$[rsp]
  001ad	48 03 c8	 add	 rcx, rax
  001b0	48 8b c1	 mov	 rax, rcx
  001b3	48 89 44 24 50	 mov	 QWORD PTR pVar$[rsp], rax

; 524  :         _sntprintf( szParmNum, TSIZEOF(szParmNum), _T("    #%u: "), u );

  001b8	44 8b 8c 24 90
	01 00 00	 mov	 r9d, DWORD PTR u$[rsp]
  001c0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG193295
  001c7	ba 14 00 00 00	 mov	 edx, 20
  001cc	48 8d 4c 24 68	 lea	 rcx, QWORD PTR szParmNum$[rsp]
  001d1	e8 00 00 00 00	 call	 _snwprintf

; 525  :         NULTERMINATE(szParmNum);

  001d6	b8 02 00 00 00	 mov	 eax, 2
  001db	48 6b c0 13	 imul	 rax, rax, 19
  001df	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR $T16[rsp], rax
  001e7	48 83 bc 24 d8
	02 00 00 28	 cmp	 QWORD PTR $T16[rsp], 40	; 00000028H
  001f0	73 02		 jae	 SHORT $LN43@DoInvoke
  001f2	eb 05		 jmp	 SHORT $LN44@DoInvoke
$LN43@DoInvoke:
  001f4	e8 00 00 00 00	 call	 __report_rangecheckfailure
$LN44@DoInvoke:
  001f9	33 c0		 xor	 eax, eax
  001fb	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR $T16[rsp]
  00203	66 89 44 0c 68	 mov	 WORD PTR szParmNum$[rsp+rcx], ax

; 526  :         switch ( pVar->vt )

  00208	48 8b 44 24 50	 mov	 rax, QWORD PTR pVar$[rsp]
  0020d	0f b7 00	 movzx	 eax, WORD PTR [rax]
  00210	89 84 24 28 03
	00 00		 mov	 DWORD PTR tv146[rsp], eax
  00217	83 bc 24 28 03
	00 00 0b	 cmp	 DWORD PTR tv146[rsp], 11
  0021f	7f 47		 jg	 SHORT $LN49@DoInvoke
  00221	83 bc 24 28 03
	00 00 0b	 cmp	 DWORD PTR tv146[rsp], 11
  00229	0f 84 8b 00 00
	00		 je	 $LN13@DoInvoke
  0022f	83 bc 24 28 03
	00 00 00	 cmp	 DWORD PTR tv146[rsp], 0
  00237	74 63		 je	 SHORT $LN12@DoInvoke
  00239	83 bc 24 28 03
	00 00 03	 cmp	 DWORD PTR tv146[rsp], 3
  00241	0f 84 ca 00 00
	00		 je	 $LN15@DoInvoke
  00247	83 bc 24 28 03
	00 00 08	 cmp	 DWORD PTR tv146[rsp], 8
  0024f	0f 84 4f 01 00
	00		 je	 $LN18@DoInvoke
  00255	83 bc 24 28 03
	00 00 09	 cmp	 DWORD PTR tv146[rsp], 9
  0025d	0f 84 1a 01 00
	00		 je	 $LN17@DoInvoke
  00263	e9 64 02 00 00	 jmp	 $LN20@DoInvoke
$LN49@DoInvoke:
  00268	81 bc 24 28 03
	00 00 03 40 00
	00		 cmp	 DWORD PTR tv146[rsp], 16387 ; 00004003H
  00273	0f 84 cb 00 00
	00		 je	 $LN16@DoInvoke
  00279	81 bc 24 28 03
	00 00 08 40 00
	00		 cmp	 DWORD PTR tv146[rsp], 16392 ; 00004008H
  00284	0f 84 93 01 00
	00		 je	 $LN19@DoInvoke
  0028a	81 bc 24 28 03
	00 00 0b 40 00
	00		 cmp	 DWORD PTR tv146[rsp], 16395 ; 0000400bH
  00295	74 4d		 je	 SHORT $LN14@DoInvoke
  00297	e9 30 02 00 00	 jmp	 $LN20@DoInvoke
$LN12@DoInvoke:

; 527  :         {
; 528  :         case VT_EMPTY: DOTRACEV( ( _T("%sEMPTY"), szParmNum ) ); break;

  0029c	4c 8d 44 24 68	 lea	 r8, QWORD PTR szParmNum$[rsp]
  002a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193297
  002a8	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  002b0	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace
  002b5	e9 36 02 00 00	 jmp	 $LN5@DoInvoke
$LN13@DoInvoke:

; 529  :         case VT_BOOL: DOTRACEV( ( _T("%sBOOL 0x%X"), szParmNum, pVar->boolVal ) ); break;

  002ba	48 8b 44 24 50	 mov	 rax, QWORD PTR pVar$[rsp]
  002bf	0f bf 40 08	 movsx	 eax, WORD PTR [rax+8]
  002c3	44 8b c8	 mov	 r9d, eax
  002c6	4c 8d 44 24 68	 lea	 r8, QWORD PTR szParmNum$[rsp]
  002cb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193299
  002d2	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  002da	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace
  002df	e9 0c 02 00 00	 jmp	 $LN5@DoInvoke
$LN14@DoInvoke:

; 530  :         case VT_BYREF|VT_BOOL: DOTRACEV( ( _T("%sBOOL* 0x%X"), szParmNum, *pVar->pboolVal ) ); break;

  002e4	48 8b 44 24 50	 mov	 rax, QWORD PTR pVar$[rsp]
  002e9	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  002ed	0f bf 00	 movsx	 eax, WORD PTR [rax]
  002f0	44 8b c8	 mov	 r9d, eax
  002f3	4c 8d 44 24 68	 lea	 r8, QWORD PTR szParmNum$[rsp]
  002f8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193301
  002ff	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00307	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace
  0030c	e9 df 01 00 00	 jmp	 $LN5@DoInvoke
$LN15@DoInvoke:

; 531  :         case VT_I4: DOTRACEV( ( _T("%sLONG %d (0x%X)"), szParmNum, pVar->lVal, pVar->lVal ) ); break;

  00311	48 8b 44 24 50	 mov	 rax, QWORD PTR pVar$[rsp]
  00316	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00319	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  0031d	48 8b 44 24 50	 mov	 rax, QWORD PTR pVar$[rsp]
  00322	44 8b 48 08	 mov	 r9d, DWORD PTR [rax+8]
  00326	4c 8d 44 24 68	 lea	 r8, QWORD PTR szParmNum$[rsp]
  0032b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193303
  00332	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0033a	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace
  0033f	e9 ac 01 00 00	 jmp	 $LN5@DoInvoke
$LN16@DoInvoke:

; 532  :         case VT_BYREF|VT_I4: DOTRACEV( ( _T("%sLONG* %d (0x%X)"), szParmNum, *pVar->plVal, *pVar->plVal ) ); break;

  00344	48 8b 44 24 50	 mov	 rax, QWORD PTR pVar$[rsp]
  00349	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0034d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pVar$[rsp]
  00352	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00356	8b 00		 mov	 eax, DWORD PTR [rax]
  00358	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  0035c	44 8b 09	 mov	 r9d, DWORD PTR [rcx]
  0035f	4c 8d 44 24 68	 lea	 r8, QWORD PTR szParmNum$[rsp]
  00364	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193305
  0036b	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00373	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace
  00378	e9 73 01 00 00	 jmp	 $LN5@DoInvoke
$LN17@DoInvoke:

; 533  :         case VT_DISPATCH: DOTRACEV( ( _T("%sDISPATCH 0x%X"), szParmNum, pVar->pdispVal ) ); break;

  0037d	48 8b 44 24 50	 mov	 rax, QWORD PTR pVar$[rsp]
  00382	4c 8b 48 08	 mov	 r9, QWORD PTR [rax+8]
  00386	4c 8d 44 24 68	 lea	 r8, QWORD PTR szParmNum$[rsp]
  0038b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193307
  00392	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0039a	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace
  0039f	e9 4c 01 00 00	 jmp	 $LN5@DoInvoke
$LN18@DoInvoke:

; 534  :         case VT_BSTR:
; 535  :             _sntprintf( szPrefix, TSIZEOF(szPrefix), _T("%sSTRING;"), szParmNum );

  003a4	4c 8d 4c 24 68	 lea	 r9, QWORD PTR szParmNum$[rsp]
  003a9	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG193309
  003b0	ba 64 00 00 00	 mov	 edx, 100		; 00000064H
  003b5	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR szPrefix$[rsp]
  003bd	e8 00 00 00 00	 call	 _snwprintf

; 536  :             NULTERMINATE(szPrefix);

  003c2	b8 02 00 00 00	 mov	 eax, 2
  003c7	48 6b c0 63	 imul	 rax, rax, 99		; 00000063H
  003cb	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR $T17[rsp], rax
  003d3	48 81 bc 24 e0
	02 00 00 c8 00
	00 00		 cmp	 QWORD PTR $T17[rsp], 200 ; 000000c8H
  003df	73 02		 jae	 SHORT $LN45@DoInvoke
  003e1	eb 05		 jmp	 SHORT $LN46@DoInvoke
$LN45@DoInvoke:
  003e3	e8 00 00 00 00	 call	 __report_rangecheckfailure
$LN46@DoInvoke:
  003e8	33 c0		 xor	 eax, eax
  003ea	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR $T17[rsp]
  003f2	66 89 84 0c b0
	00 00 00	 mov	 WORD PTR szPrefix$[rsp+rcx], ax

; 537  :             DOTRACESTRINGV( szPrefix, pVar->bstrVal );

  003fa	48 8b 44 24 50	 mov	 rax, QWORD PTR pVar$[rsp]
  003ff	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  00403	48 8d 94 24 b0
	00 00 00	 lea	 rdx, QWORD PTR szPrefix$[rsp]
  0040b	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00413	e8 00 00 00 00	 call	 ?WriteTraceString@COPOSVideoCapture@@QEAAXPEB_WPEA_W@Z ; COPOSVideoCapture::WriteTraceString

; 538  :             break;

  00418	e9 d3 00 00 00	 jmp	 $LN5@DoInvoke
$LN19@DoInvoke:

; 539  :         case VT_BYREF|VT_BSTR:
; 540  :             pStrRefs[u-1].SetBSTR_Copy( *pVar->pbstrVal, hRCTmp );

  0041d	48 8b 44 24 50	 mov	 rax, QWORD PTR pVar$[rsp]
  00422	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00426	8b 8c 24 90 01
	00 00		 mov	 ecx, DWORD PTR u$[rsp]
  0042d	ff c9		 dec	 ecx
  0042f	8b c9		 mov	 ecx, ecx
  00431	48 6b c9 20	 imul	 rcx, rcx, 32		; 00000020H
  00435	48 8b 94 24 88
	01 00 00	 mov	 rdx, QWORD PTR pStrRefs$[rsp]
  0043d	48 03 d1	 add	 rdx, rcx
  00440	48 8b ca	 mov	 rcx, rdx
  00443	4c 8d 84 24 a4
	01 00 00	 lea	 r8, QWORD PTR hRCTmp$9[rsp]
  0044b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0044e	e8 00 00 00 00	 call	 ?SetBSTR_Copy@OposVariant@@QEAAXPEA_WAEAJ@Z ; OposVariant::SetBSTR_Copy

; 541  :             _sntprintf( szPrefix, TSIZEOF(szPrefix), _T("%sSTRING*;"), szParmNum );

  00453	4c 8d 4c 24 68	 lea	 r9, QWORD PTR szParmNum$[rsp]
  00458	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG193311
  0045f	ba 64 00 00 00	 mov	 edx, 100		; 00000064H
  00464	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR szPrefix$[rsp]
  0046c	e8 00 00 00 00	 call	 _snwprintf

; 542  :             NULTERMINATE(szPrefix);

  00471	b8 02 00 00 00	 mov	 eax, 2
  00476	48 6b c0 63	 imul	 rax, rax, 99		; 00000063H
  0047a	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR $T18[rsp], rax
  00482	48 81 bc 24 e8
	02 00 00 c8 00
	00 00		 cmp	 QWORD PTR $T18[rsp], 200 ; 000000c8H
  0048e	73 02		 jae	 SHORT $LN47@DoInvoke
  00490	eb 05		 jmp	 SHORT $LN48@DoInvoke
$LN47@DoInvoke:
  00492	e8 00 00 00 00	 call	 __report_rangecheckfailure
$LN48@DoInvoke:
  00497	33 c0		 xor	 eax, eax
  00499	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR $T18[rsp]
  004a1	66 89 84 0c b0
	00 00 00	 mov	 WORD PTR szPrefix$[rsp+rcx], ax

; 543  :             DOTRACESTRINGV( szPrefix, *pVar->pbstrVal );

  004a9	48 8b 44 24 50	 mov	 rax, QWORD PTR pVar$[rsp]
  004ae	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  004b2	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  004b5	48 8d 94 24 b0
	00 00 00	 lea	 rdx, QWORD PTR szPrefix$[rsp]
  004bd	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  004c5	e8 00 00 00 00	 call	 ?WriteTraceString@COPOSVideoCapture@@QEAAXPEB_WPEA_W@Z ; COPOSVideoCapture::WriteTraceString

; 544  :             break;

  004ca	eb 24		 jmp	 SHORT $LN5@DoInvoke
$LN20@DoInvoke:

; 545  :         default: DOTRACEV( ( _T("%sUnknown (VarType=0x%X)"), szParmNum, pVar->vt ) ); break;

  004cc	48 8b 44 24 50	 mov	 rax, QWORD PTR pVar$[rsp]
  004d1	0f b7 00	 movzx	 eax, WORD PTR [rax]
  004d4	44 8b c8	 mov	 r9d, eax
  004d7	4c 8d 44 24 68	 lea	 r8, QWORD PTR szParmNum$[rsp]
  004dc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193313
  004e3	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  004eb	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace
$LN5@DoInvoke:

; 546  :         }
; 547  :     }

  004f0	e9 74 fc ff ff	 jmp	 $LN2@DoInvoke
$LN3@DoInvoke:

; 548  : 
; 549  :     // If bad ResultCode pointer, then HRESULT.
; 550  :     if ( pRC == 0 )

  004f5	48 83 bc 24 a0
	03 00 00 00	 cmp	 QWORD PTR pRC$[rsp], 0
  004fe	75 0b		 jne	 SHORT $LN21@DoInvoke

; 551  :         hRC = E_POINTER;

  00500	c7 84 24 80 03
	00 00 03 40 00
	80		 mov	 DWORD PTR hRC$[rsp], -2147467261 ; ffffffff80004003H
$LN21@DoInvoke:

; 552  : 
; 553  :     // If bad HRESULT (either due to incoming value or bad ResultCode pointer), then return now.
; 554  :     if ( FAILED(hRC) )

  0050b	83 bc 24 80 03
	00 00 00	 cmp	 DWORD PTR hRC$[rsp], 0
  00513	7d 6b		 jge	 SHORT $LN22@DoInvoke

; 555  :     {
; 556  :         DOTRACEERR( _T("-  Failed: Parameter error 0x%X\n    %s"), hRC );

  00515	44 8b 84 24 80
	03 00 00	 mov	 r8d, DWORD PTR hRC$[rsp]
  0051d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193316
  00524	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0052c	e8 00 00 00 00	 call	 ?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z ; COPOSVideoCapture::WriteTraceError

; 557  :         delete [] pStrRefs;

  00531	48 8b 84 24 88
	01 00 00	 mov	 rax, QWORD PTR pStrRefs$[rsp]
  00539	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR $T19[rsp], rax
  00541	48 83 bc 24 f0
	02 00 00 00	 cmp	 QWORD PTR $T19[rsp], 0
  0054a	74 1c		 je	 SHORT $LN50@DoInvoke
  0054c	ba 03 00 00 00	 mov	 edx, 3
  00551	48 8b 8c 24 f0
	02 00 00	 mov	 rcx, QWORD PTR $T19[rsp]
  00559	e8 00 00 00 00	 call	 ??_EOposVariant@@QEAAPEAXI@Z
  0055e	48 89 84 24 30
	03 00 00	 mov	 QWORD PTR tv284[rsp], rax
  00566	eb 0c		 jmp	 SHORT $LN51@DoInvoke
$LN50@DoInvoke:
  00568	48 c7 84 24 30
	03 00 00 00 00
	00 00		 mov	 QWORD PTR tv284[rsp], 0
$LN51@DoInvoke:

; 558  :         return hRC;

  00574	8b 84 24 80 03
	00 00		 mov	 eax, DWORD PTR hRC$[rsp]
  0057b	e9 9c 05 00 00	 jmp	 $LN38@DoInvoke
$LN22@DoInvoke:

; 559  :     }
; 560  : #endif
; 561  : 
; 562  :     hRC = -1;

  00580	c7 84 24 80 03
	00 00 ff ff ff
	ff		 mov	 DWORD PTR hRC$[rsp], -1

; 563  : 
; 564  :     // Clear the CO result code.
; 565  :     SetRC();

  0058b	ba ff ff ff ff	 mov	 edx, -1
  00590	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00598	e8 00 00 00 00	 call	 ?SetRC@COPOSVideoCapture@@IEAAJJ@Z ; COPOSVideoCapture::SetRC

; 566  : 
; 567  :     // If the SO must be open...
; 568  :     if ( bOpenCheck )

  0059d	0f b6 84 24 a8
	03 00 00	 movzx	 eax, BYTE PTR bOpenCheck$[rsp]
  005a5	85 c0		 test	 eax, eax
  005a7	74 6c		 je	 SHORT $LN23@DoInvoke

; 569  :     {
; 570  :         // If not opened, set error code and return....
; 571  :         if ( ! _bOpened )

  005a9	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  005b1	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  005b8	85 c0		 test	 eax, eax
  005ba	75 1b		 jne	 SHORT $LN24@DoInvoke

; 572  :         {
; 573  :             *pRC = OPOS_E_CLOSED;

  005bc	48 8b 84 24 a0
	03 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  005c4	c7 00 65 00 00
	00		 mov	 DWORD PTR [rax], 101	; 00000065H

; 574  :             hRC = S_OK;

  005ca	c7 84 24 80 03
	00 00 00 00 00
	00		 mov	 DWORD PTR hRC$[rsp], 0

; 575  :         }

  005d5	eb 3e		 jmp	 SHORT $LN23@DoInvoke
$LN24@DoInvoke:

; 576  :         // If the SO's release level doesn't support this method, then return error.
; 577  :         else if ( nDispIDIndex >= _nMaxMethod )

  005d7	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  005df	8b 80 b0 01 00
	00		 mov	 eax, DWORD PTR [rax+432]
  005e5	39 84 24 98 03
	00 00		 cmp	 DWORD PTR nDispIDIndex$[rsp], eax
  005ec	7c 27		 jl	 SHORT $LN23@DoInvoke

; 578  :         {
; 579  :             *pRC = SetRC( OPOS_E_NOSERVICE );

  005ee	ba 68 00 00 00	 mov	 edx, 104		; 00000068H
  005f3	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  005fb	e8 00 00 00 00	 call	 ?SetRC@COPOSVideoCapture@@IEAAJJ@Z ; COPOSVideoCapture::SetRC
  00600	48 8b 8c 24 a0
	03 00 00	 mov	 rcx, QWORD PTR pRC$[rsp]
  00608	89 01		 mov	 DWORD PTR [rcx], eax

; 580  :             hRC = S_OK;

  0060a	c7 84 24 80 03
	00 00 00 00 00
	00		 mov	 DWORD PTR hRC$[rsp], 0
$LN23@DoInvoke:

; 581  :         }
; 582  :     }
; 583  : 
; 584  :     // Complete setup for Invoke call.
; 585  :     if ( hRC == -1 )

  00615	83 bc 24 80 03
	00 00 ff	 cmp	 DWORD PTR hRC$[rsp], -1
  0061d	0f 85 34 01 00
	00		 jne	 $LN27@DoInvoke

; 586  :     {
; 587  :         OposVariantResult VarResult;

  00623	48 8d 8c 24 c8
	01 00 00	 lea	 rcx, QWORD PTR VarResult$10[rsp]
  0062b	e8 00 00 00 00	 call	 ??0OposVariantResult@@QEAA@XZ

; 588  :         OposDispParms Disp( pParms, nParms );

  00630	44 8b 84 24 90
	03 00 00	 mov	 r8d, DWORD PTR nParms$[rsp]
  00638	48 8b 94 24 88
	03 00 00	 mov	 rdx, QWORD PTR pParms$[rsp]
  00640	48 8d 8c 24 08
	02 00 00	 lea	 rcx, QWORD PTR Disp$11[rsp]
  00648	e8 00 00 00 00	 call	 ??0OposDispParms@@QEAA@PEAVOposVariant@@H@Z ; OposDispParms::OposDispParms

; 589  : 
; 590  :         // Invoke the SO method.
; 591  :         hRC = _pService->Invoke(

  0064d	48 63 84 24 98
	03 00 00	 movsxd	 rax, DWORD PTR nDispIDIndex$[rsp]
  00655	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0065d	48 8b 89 a0 01
	00 00		 mov	 rcx, QWORD PTR [rcx+416]
  00664	48 8b 94 24 70
	03 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  0066c	48 8b 92 a0 01
	00 00		 mov	 rdx, QWORD PTR [rdx+416]
  00673	48 89 94 24 38
	03 00 00	 mov	 QWORD PTR tv310[rsp], rdx
  0067b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0067e	48 89 8c 24 40
	03 00 00	 mov	 QWORD PTR tv302[rsp], rcx
  00686	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR [rsp+64], 0
  0068f	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR [rsp+56], 0
  00698	4c 8d 84 24 c8
	01 00 00	 lea	 r8, QWORD PTR VarResult$10[rsp]
  006a0	4c 89 44 24 30	 mov	 QWORD PTR [rsp+48], r8
  006a5	4c 8d 84 24 08
	02 00 00	 lea	 r8, QWORD PTR Disp$11[rsp]
  006ad	4c 89 44 24 28	 mov	 QWORD PTR [rsp+40], r8
  006b2	66 c7 44 24 20
	01 00		 mov	 WORD PTR [rsp+32], 1
  006b9	41 b9 00 04 00
	00		 mov	 r9d, 1024		; 00000400H
  006bf	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:GUID_NULL
  006c6	4c 8b 94 24 70
	03 00 00	 mov	 r10, QWORD PTR this$[rsp]
  006ce	41 8b 94 82 b4
	01 00 00	 mov	 edx, DWORD PTR [r10+rax*4+436]
  006d6	48 8b 84 24 38
	03 00 00	 mov	 rax, QWORD PTR tv310[rsp]
  006de	48 8b c8	 mov	 rcx, rax
  006e1	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR tv302[rsp]
  006e9	ff 50 30	 call	 QWORD PTR [rax+48]
  006ec	89 84 24 80 03
	00 00		 mov	 DWORD PTR hRC$[rsp], eax

; 592  :                 _DispIDs[nDispIDIndex], IID_NULL, LOCALE_USER_DEFAULT,
; 593  :                 DISPATCH_METHOD, &Disp, &VarResult, NULL, NULL );
; 594  : 
; 595  :         // Set OPOS result code to SO method value if Invoke succeeded,
; 596  :         //   else flag that we failed to get to the SO.
; 597  :         *pRC = (hRC == S_OK) ? VarResult.GetLONG() : SetRC( OPOS_E_NOSERVICE );

  006f3	83 bc 24 80 03
	00 00 00	 cmp	 DWORD PTR hRC$[rsp], 0
  006fb	75 16		 jne	 SHORT $LN52@DoInvoke
  006fd	48 8d 8c 24 c8
	01 00 00	 lea	 rcx, QWORD PTR VarResult$10[rsp]
  00705	e8 00 00 00 00	 call	 ?GetLONG@OposVariant@@QEAAJXZ ; OposVariant::GetLONG
  0070a	89 84 24 48 03
	00 00		 mov	 DWORD PTR tv344[rsp], eax
  00711	eb 19		 jmp	 SHORT $LN53@DoInvoke
$LN52@DoInvoke:
  00713	ba 68 00 00 00	 mov	 edx, 104		; 00000068H
  00718	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00720	e8 00 00 00 00	 call	 ?SetRC@COPOSVideoCapture@@IEAAJJ@Z ; COPOSVideoCapture::SetRC
  00725	89 84 24 48 03
	00 00		 mov	 DWORD PTR tv344[rsp], eax
$LN53@DoInvoke:
  0072c	48 8b 84 24 a0
	03 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  00734	8b 8c 24 48 03
	00 00		 mov	 ecx, DWORD PTR tv344[rsp]
  0073b	89 08		 mov	 DWORD PTR [rax], ecx

; 598  :     }

  0073d	48 8d 8c 24 08
	02 00 00	 lea	 rcx, QWORD PTR Disp$11[rsp]
  00745	e8 00 00 00 00	 call	 ??1OposDispParms@@QEAA@XZ ; OposDispParms::~OposDispParms
  0074a	48 8d 8c 24 c8
	01 00 00	 lea	 rcx, QWORD PTR VarResult$10[rsp]
  00752	e8 00 00 00 00	 call	 ??1OposVariantResult@@QEAA@XZ ; OposVariantResult::~OposVariantResult
$LN27@DoInvoke:

; 599  : 
; 600  :     // Trace result and outgoing parameters.
; 601  : #ifdef _DEBUG
; 602  :     LPCTSTR pszInfo = _T("");

  00757	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193322
  0075e	48 89 84 24 28
	02 00 00	 mov	 QWORD PTR pszInfo$[rsp], rax

; 603  :     TCHAR szHR[50];
; 604  :     if ( !_bOpened )

  00766	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0076e	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  00775	85 c0		 test	 eax, eax
  00777	75 14		 jne	 SHORT $LN28@DoInvoke

; 605  :         pszInfo = _T(" -- Closed");

  00779	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193325
  00780	48 89 84 24 28
	02 00 00	 mov	 QWORD PTR pszInfo$[rsp], rax
  00788	e9 98 00 00 00	 jmp	 $LN29@DoInvoke
$LN28@DoInvoke:

; 606  :     else if ( nDispIDIndex >= _nMaxMethod )

  0078d	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00795	8b 80 b0 01 00
	00		 mov	 eax, DWORD PTR [rax+432]
  0079b	39 84 24 98 03
	00 00		 cmp	 DWORD PTR nDispIDIndex$[rsp], eax
  007a2	7c 11		 jl	 SHORT $LN30@DoInvoke

; 607  :         pszInfo = _T(" -- Not supported by SO");

  007a4	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193328
  007ab	48 89 84 24 28
	02 00 00	 mov	 QWORD PTR pszInfo$[rsp], rax
  007b3	eb 70		 jmp	 SHORT $LN29@DoInvoke
$LN30@DoInvoke:

; 608  :     else if ( hRC != 0 )

  007b5	83 bc 24 80 03
	00 00 00	 cmp	 DWORD PTR hRC$[rsp], 0
  007bd	74 66		 je	 SHORT $LN29@DoInvoke

; 609  :     {
; 610  :         _sntprintf( szHR, TSIZEOF(szHR), _T(" -- COM error: HR = 0x%X"), hRC );

  007bf	44 8b 8c 24 80
	03 00 00	 mov	 r9d, DWORD PTR hRC$[rsp]
  007c7	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG193330
  007ce	ba 32 00 00 00	 mov	 edx, 50			; 00000032H
  007d3	48 8d 8c 24 40
	02 00 00	 lea	 rcx, QWORD PTR szHR$[rsp]
  007db	e8 00 00 00 00	 call	 _snwprintf

; 611  :         NULTERMINATE(szHR);

  007e0	b8 02 00 00 00	 mov	 eax, 2
  007e5	48 6b c0 31	 imul	 rax, rax, 49		; 00000031H
  007e9	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR $T20[rsp], rax
  007f1	48 83 bc 24 f8
	02 00 00 64	 cmp	 QWORD PTR $T20[rsp], 100 ; 00000064H
  007fa	73 02		 jae	 SHORT $LN54@DoInvoke
  007fc	eb 05		 jmp	 SHORT $LN55@DoInvoke
$LN54@DoInvoke:
  007fe	e8 00 00 00 00	 call	 __report_rangecheckfailure
$LN55@DoInvoke:
  00803	33 c0		 xor	 eax, eax
  00805	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR $T20[rsp]
  0080d	66 89 84 0c 40
	02 00 00	 mov	 WORD PTR szHR$[rsp+rcx], ax

; 612  :         pszInfo = szHR;

  00815	48 8d 84 24 40
	02 00 00	 lea	 rax, QWORD PTR szHR$[rsp]
  0081d	48 89 84 24 28
	02 00 00	 mov	 QWORD PTR pszInfo$[rsp], rax
$LN29@DoInvoke:

; 613  :     }
; 614  : 
; 615  :     DOTRACEV( ( _T("-%hs [Function]  RC=%d%s"), pFuncName, *pRC, pszInfo ) );

  00825	48 8b 84 24 28
	02 00 00	 mov	 rax, QWORD PTR pszInfo$[rsp]
  0082d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00832	48 8b 84 24 a0
	03 00 00	 mov	 rax, QWORD PTR pRC$[rsp]
  0083a	44 8b 08	 mov	 r9d, DWORD PTR [rax]
  0083d	4c 8b 84 24 78
	03 00 00	 mov	 r8, QWORD PTR pFuncName$[rsp]
  00845	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193331
  0084c	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00854	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 616  :     for ( u = 0; ++u <= nParms; )

  00859	c7 84 24 90 01
	00 00 00 00 00
	00		 mov	 DWORD PTR u$[rsp], 0
$LN7@DoInvoke:
  00864	8b 84 24 90 01
	00 00		 mov	 eax, DWORD PTR u$[rsp]
  0086b	ff c0		 inc	 eax
  0086d	89 84 24 90 01
	00 00		 mov	 DWORD PTR u$[rsp], eax
  00874	8b 84 24 90 03
	00 00		 mov	 eax, DWORD PTR nParms$[rsp]
  0087b	39 84 24 90 01
	00 00		 cmp	 DWORD PTR u$[rsp], eax
  00882	0f 87 4a 02 00
	00		 ja	 $LN8@DoInvoke

; 617  :     {
; 618  :         pVar = &pParms[ nParms - u ];

  00888	8b 84 24 90 01
	00 00		 mov	 eax, DWORD PTR u$[rsp]
  0088f	8b 8c 24 90 03
	00 00		 mov	 ecx, DWORD PTR nParms$[rsp]
  00896	2b c8		 sub	 ecx, eax
  00898	8b c1		 mov	 eax, ecx
  0089a	8b c0		 mov	 eax, eax
  0089c	48 6b c0 20	 imul	 rax, rax, 32		; 00000020H
  008a0	48 8b 8c 24 88
	03 00 00	 mov	 rcx, QWORD PTR pParms$[rsp]
  008a8	48 03 c8	 add	 rcx, rax
  008ab	48 8b c1	 mov	 rax, rcx
  008ae	48 89 44 24 50	 mov	 QWORD PTR pVar$[rsp], rax

; 619  :         _sntprintf( szParmNum, TSIZEOF(szParmNum), _T("    #%u: "), u );

  008b3	44 8b 8c 24 90
	01 00 00	 mov	 r9d, DWORD PTR u$[rsp]
  008bb	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG193332
  008c2	ba 14 00 00 00	 mov	 edx, 20
  008c7	48 8d 4c 24 68	 lea	 rcx, QWORD PTR szParmNum$[rsp]
  008cc	e8 00 00 00 00	 call	 _snwprintf

; 620  :         NULTERMINATE(szParmNum);

  008d1	b8 02 00 00 00	 mov	 eax, 2
  008d6	48 6b c0 13	 imul	 rax, rax, 19
  008da	48 89 84 24 00
	03 00 00	 mov	 QWORD PTR $T21[rsp], rax
  008e2	48 83 bc 24 00
	03 00 00 28	 cmp	 QWORD PTR $T21[rsp], 40	; 00000028H
  008eb	73 02		 jae	 SHORT $LN56@DoInvoke
  008ed	eb 05		 jmp	 SHORT $LN57@DoInvoke
$LN56@DoInvoke:
  008ef	e8 00 00 00 00	 call	 __report_rangecheckfailure
$LN57@DoInvoke:
  008f4	33 c0		 xor	 eax, eax
  008f6	48 8b 8c 24 00
	03 00 00	 mov	 rcx, QWORD PTR $T21[rsp]
  008fe	66 89 44 0c 68	 mov	 WORD PTR szParmNum$[rsp+rcx], ax

; 621  :         switch ( pVar->vt )

  00903	48 8b 44 24 50	 mov	 rax, QWORD PTR pVar$[rsp]
  00908	0f b7 00	 movzx	 eax, WORD PTR [rax]
  0090b	89 84 24 4c 03
	00 00		 mov	 DWORD PTR tv382[rsp], eax
  00912	81 bc 24 4c 03
	00 00 03 40 00
	00		 cmp	 DWORD PTR tv382[rsp], 16387 ; 00004003H
  0091d	74 4c		 je	 SHORT $LN34@DoInvoke
  0091f	81 bc 24 4c 03
	00 00 08 40 00
	00		 cmp	 DWORD PTR tv382[rsp], 16392 ; 00004008H
  0092a	74 78		 je	 SHORT $LN35@DoInvoke
  0092c	81 bc 24 4c 03
	00 00 0b 40 00
	00		 cmp	 DWORD PTR tv382[rsp], 16395 ; 0000400bH
  00937	74 05		 je	 SHORT $LN33@DoInvoke
  00939	e9 8f 01 00 00	 jmp	 $LN10@DoInvoke
$LN33@DoInvoke:

; 622  :         {
; 623  :         case VT_BYREF|VT_BOOL: DOTRACEV( ( _T("%sBOOL* 0x%X"), szParmNum, *pVar->pboolVal ) ); break;

  0093e	48 8b 44 24 50	 mov	 rax, QWORD PTR pVar$[rsp]
  00943	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00947	0f bf 00	 movsx	 eax, WORD PTR [rax]
  0094a	44 8b c8	 mov	 r9d, eax
  0094d	4c 8d 44 24 68	 lea	 r8, QWORD PTR szParmNum$[rsp]
  00952	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193334
  00959	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00961	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace
  00966	e9 62 01 00 00	 jmp	 $LN10@DoInvoke
$LN34@DoInvoke:

; 624  :         case VT_BYREF|VT_I4: DOTRACEV( ( _T("%sLONG* %d (0x%X)"), szParmNum, *pVar->plVal, *pVar->plVal ) ); break;

  0096b	48 8b 44 24 50	 mov	 rax, QWORD PTR pVar$[rsp]
  00970	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00974	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pVar$[rsp]
  00979	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0097d	8b 00		 mov	 eax, DWORD PTR [rax]
  0097f	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00983	44 8b 09	 mov	 r9d, DWORD PTR [rcx]
  00986	4c 8d 44 24 68	 lea	 r8, QWORD PTR szParmNum$[rsp]
  0098b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193336
  00992	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0099a	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace
  0099f	e9 29 01 00 00	 jmp	 $LN10@DoInvoke
$LN35@DoInvoke:

; 625  :         case VT_BYREF|VT_BSTR:
; 626  :             {
; 627  :                 _sntprintf( szPrefix, TSIZEOF(szPrefix), _T("%sSTRING*;"), szParmNum );

  009a4	4c 8d 4c 24 68	 lea	 r9, QWORD PTR szParmNum$[rsp]
  009a9	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG193338
  009b0	ba 64 00 00 00	 mov	 edx, 100		; 00000064H
  009b5	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR szPrefix$[rsp]
  009bd	e8 00 00 00 00	 call	 _snwprintf

; 628  :                 NULTERMINATE(szPrefix);

  009c2	b8 02 00 00 00	 mov	 eax, 2
  009c7	48 6b c0 63	 imul	 rax, rax, 99		; 00000063H
  009cb	48 89 84 24 08
	03 00 00	 mov	 QWORD PTR $T22[rsp], rax
  009d3	48 81 bc 24 08
	03 00 00 c8 00
	00 00		 cmp	 QWORD PTR $T22[rsp], 200 ; 000000c8H
  009df	73 02		 jae	 SHORT $LN58@DoInvoke
  009e1	eb 05		 jmp	 SHORT $LN59@DoInvoke
$LN58@DoInvoke:
  009e3	e8 00 00 00 00	 call	 __report_rangecheckfailure
$LN59@DoInvoke:
  009e8	33 c0		 xor	 eax, eax
  009ea	48 8b 8c 24 08
	03 00 00	 mov	 rcx, QWORD PTR $T22[rsp]
  009f2	66 89 84 0c b0
	00 00 00	 mov	 WORD PTR szPrefix$[rsp+rcx], ax

; 629  :                 UINT nStrRefLen;
; 630  :                 OposVariant* pStrRef = &pStrRefs[u-1];

  009fa	8b 84 24 90 01
	00 00		 mov	 eax, DWORD PTR u$[rsp]
  00a01	ff c8		 dec	 eax
  00a03	8b c0		 mov	 eax, eax
  00a05	48 6b c0 20	 imul	 rax, rax, 32		; 00000020H
  00a09	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR pStrRefs$[rsp]
  00a11	48 03 c8	 add	 rcx, rax
  00a14	48 8b c1	 mov	 rax, rcx
  00a17	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR pStrRef$13[rsp], rax

; 631  :                 if ( pStrRef->vt == VT_BSTR &&
; 632  :                      ( nStrRefLen = ::SysStringByteLen( pStrRef->bstrVal ) ) == ::SysStringByteLen( *pVar->pbstrVal ) &&

  00a1f	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR pStrRef$13[rsp]
  00a27	0f b7 00	 movzx	 eax, WORD PTR [rax]
  00a2a	83 f8 08	 cmp	 eax, 8
  00a2d	75 7d		 jne	 SHORT $LN36@DoInvoke
  00a2f	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR pStrRef$13[rsp]
  00a37	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00a3b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SysStringByteLen
  00a41	89 84 24 b4 02
	00 00		 mov	 DWORD PTR nStrRefLen$12[rsp], eax
  00a48	48 8b 44 24 50	 mov	 rax, QWORD PTR pVar$[rsp]
  00a4d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00a51	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00a54	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SysStringByteLen
  00a5a	39 84 24 b4 02
	00 00		 cmp	 DWORD PTR nStrRefLen$12[rsp], eax
  00a61	75 49		 jne	 SHORT $LN36@DoInvoke
  00a63	8b 84 24 b4 02
	00 00		 mov	 eax, DWORD PTR nStrRefLen$12[rsp]
  00a6a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pVar$[rsp]
  00a6f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00a73	44 8b c0	 mov	 r8d, eax
  00a76	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00a79	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR pStrRef$13[rsp]
  00a81	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00a85	e8 00 00 00 00	 call	 memcmp
  00a8a	85 c0		 test	 eax, eax
  00a8c	75 1e		 jne	 SHORT $LN36@DoInvoke

; 633  :                       0 == ::memcmp( pStrRef->bstrVal, *pVar->pbstrVal, nStrRefLen ) )
; 634  :                     DOTRACEV( ( _T("%s Unchanged"), szPrefix ) );

  00a8e	4c 8d 84 24 b0
	00 00 00	 lea	 r8, QWORD PTR szPrefix$[rsp]
  00a96	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193341
  00a9d	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00aa5	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace
  00aaa	eb 21		 jmp	 SHORT $LN10@DoInvoke
$LN36@DoInvoke:

; 635  :                 else
; 636  :                     DOTRACESTRINGV( szPrefix, *pVar->pbstrVal );

  00aac	48 8b 44 24 50	 mov	 rax, QWORD PTR pVar$[rsp]
  00ab1	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00ab5	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00ab8	48 8d 94 24 b0
	00 00 00	 lea	 rdx, QWORD PTR szPrefix$[rsp]
  00ac0	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00ac8	e8 00 00 00 00	 call	 ?WriteTraceString@COPOSVideoCapture@@QEAAXPEB_WPEA_W@Z ; COPOSVideoCapture::WriteTraceString
$LN10@DoInvoke:

; 637  :                 break;
; 638  :             }
; 639  :         }
; 640  :     }

  00acd	e9 92 fd ff ff	 jmp	 $LN7@DoInvoke
$LN8@DoInvoke:

; 641  : 
; 642  :     delete [] pStrRefs;

  00ad2	48 8b 84 24 88
	01 00 00	 mov	 rax, QWORD PTR pStrRefs$[rsp]
  00ada	48 89 84 24 10
	03 00 00	 mov	 QWORD PTR $T23[rsp], rax
  00ae2	48 83 bc 24 10
	03 00 00 00	 cmp	 QWORD PTR $T23[rsp], 0
  00aeb	74 1c		 je	 SHORT $LN60@DoInvoke
  00aed	ba 03 00 00 00	 mov	 edx, 3
  00af2	48 8b 8c 24 10
	03 00 00	 mov	 rcx, QWORD PTR $T23[rsp]
  00afa	e8 00 00 00 00	 call	 ??_EOposVariant@@QEAAPEAXI@Z
  00aff	48 89 84 24 50
	03 00 00	 mov	 QWORD PTR tv481[rsp], rax
  00b07	eb 0c		 jmp	 SHORT $LN61@DoInvoke
$LN60@DoInvoke:
  00b09	48 c7 84 24 50
	03 00 00 00 00
	00 00		 mov	 QWORD PTR tv481[rsp], 0
$LN61@DoInvoke:

; 643  : #endif
; 644  : 
; 645  :     return hRC;

  00b15	8b 84 24 80 03
	00 00		 mov	 eax, DWORD PTR hRC$[rsp]
$LN38@DoInvoke:

; 646  : }

  00b1c	48 8b f8	 mov	 rdi, rax
  00b1f	48 8b cc	 mov	 rcx, rsp
  00b22	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z$rtcFrameData
  00b29	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00b2e	48 8b c7	 mov	 rax, rdi
  00b31	48 8b 8c 24 58
	03 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00b39	48 33 cc	 xor	 rcx, rsp
  00b3c	e8 00 00 00 00	 call	 __security_check_cookie
  00b41	48 81 c4 60 03
	00 00		 add	 rsp, 864		; 00000360H
  00b48	5f		 pop	 rdi
  00b49	c3		 ret	 0
?DoInvoke@COPOSVideoCapture@@IEAAJPEBDJPEAVOposVariant@@IHPEAJ_N@Z ENDP ; COPOSVideoCapture::DoInvoke
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
szPrefix$ = 96
hRC$ = 324
Vars$9 = 368
VarResult$10 = 456
Disp$11 = 520
pszInfo$ = 552
szHR$ = 576
$T12 = 704
$T13 = 712
tv143 = 720
tv134 = 728
__$ArrayPad$ = 736
this$ = 768
pPropName$ = 776
nIndex$ = 784
sValue$ = 792
nMinor$ = 800
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z PROC	; COPOSVideoCapture::SetOposProp

; 455  : {

$LN16:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec f0 02
	00 00		 sub	 rsp, 752		; 000002f0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 bc 00 00 00	 mov	 ecx, 188		; 000000bcH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 00
	03 00 00	 mov	 rcx, QWORD PTR [rsp+768]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 456  : #ifdef _DEBUG
; 457  :     TCHAR szPrefix[100];
; 458  :     _sntprintf( szPrefix, TSIZEOF(szPrefix), _T("+%hs [Set]."), pPropName );

  00045	4c 8b 8c 24 08
	03 00 00	 mov	 r9, QWORD PTR pPropName$[rsp]
  0004d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG193209
  00054	ba 64 00 00 00	 mov	 edx, 100		; 00000064H
  00059	48 8d 4c 24 60	 lea	 rcx, QWORD PTR szPrefix$[rsp]
  0005e	e8 00 00 00 00	 call	 _snwprintf

; 459  :     NULTERMINATE(szPrefix);

  00063	b8 02 00 00 00	 mov	 eax, 2
  00068	48 6b c0 63	 imul	 rax, rax, 99		; 00000063H
  0006c	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR $T12[rsp], rax
  00074	48 81 bc 24 c0
	02 00 00 c8 00
	00 00		 cmp	 QWORD PTR $T12[rsp], 200 ; 000000c8H
  00080	73 02		 jae	 SHORT $LN12@SetOposPro
  00082	eb 05		 jmp	 SHORT $LN13@SetOposPro
$LN12@SetOposPro:
  00084	e8 00 00 00 00	 call	 __report_rangecheckfailure
$LN13@SetOposPro:
  00089	33 c0		 xor	 eax, eax
  0008b	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR $T12[rsp]
  00093	66 89 44 0c 60	 mov	 WORD PTR szPrefix$[rsp+rcx], ax

; 460  :     DOTRACESTRINGV( szPrefix, sValue );

  00098	4c 8b 84 24 18
	03 00 00	 mov	 r8, QWORD PTR sValue$[rsp]
  000a0	48 8d 54 24 60	 lea	 rdx, QWORD PTR szPrefix$[rsp]
  000a5	48 8b 8c 24 00
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ad	e8 00 00 00 00	 call	 ?WriteTraceString@COPOSVideoCapture@@QEAAXPEB_WPEA_W@Z ; COPOSVideoCapture::WriteTraceString

; 461  : #endif
; 462  :     HRESULT hRC = S_OK;

  000b2	c7 84 24 44 01
	00 00 00 00 00
	00		 mov	 DWORD PTR hRC$[rsp], 0

; 463  : 
; 464  :     SetRC();                            // Clear COResultCode.

  000bd	ba ff ff ff ff	 mov	 edx, -1
  000c2	48 8b 8c 24 00
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ca	e8 00 00 00 00	 call	 ?SetRC@COPOSVideoCapture@@IEAAJJ@Z ; COPOSVideoCapture::SetRC

; 465  : 
; 466  :     // If open and SO version support's property...
; 467  :     if ( _bOpened && _nSOMinor >= nMinor )

  000cf	48 8b 84 24 00
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000d7	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  000de	85 c0		 test	 eax, eax
  000e0	0f 84 9b 01 00
	00		 je	 $LN2@SetOposPro
  000e6	48 8b 84 24 00
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000ee	8b 8c 24 20 03
	00 00		 mov	 ecx, DWORD PTR nMinor$[rsp]
  000f5	39 88 94 01 00
	00		 cmp	 DWORD PTR [rax+404], ecx
  000fb	0f 8c 80 01 00
	00		 jl	 $LN2@SetOposPro

; 468  :     {
; 469  :         // Set up and call the SO's set property number method.
; 470  :         OposVariant Vars[2];

  00101	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??0OposVariant@@QEAA@XZ ; OposVariant::OposVariant
  00108	41 b8 02 00 00
	00		 mov	 r8d, 2
  0010e	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00113	48 8d 8c 24 70
	01 00 00	 lea	 rcx, QWORD PTR Vars$9[rsp]
  0011b	e8 00 00 00 00	 call	 ??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 471  :         OposVariantResult VarResult;

  00120	48 8d 8c 24 c8
	01 00 00	 lea	 rcx, QWORD PTR VarResult$10[rsp]
  00128	e8 00 00 00 00	 call	 ??0OposVariantResult@@QEAA@XZ

; 472  :         Vars[1].SetLONG( nIndex );

  0012d	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00132	48 6b c0 01	 imul	 rax, rax, 1
  00136	48 8d 84 04 70
	01 00 00	 lea	 rax, QWORD PTR Vars$9[rsp+rax]
  0013e	8b 94 24 10 03
	00 00		 mov	 edx, DWORD PTR nIndex$[rsp]
  00145	48 8b c8	 mov	 rcx, rax
  00148	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QEAAXJ@Z ; OposVariant::SetLONG

; 473  :         Vars[0].SetBSTR( sValue, hRC );

  0014d	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00152	48 6b c0 00	 imul	 rax, rax, 0
  00156	48 8d 84 04 70
	01 00 00	 lea	 rax, QWORD PTR Vars$9[rsp+rax]
  0015e	4c 8d 84 24 44
	01 00 00	 lea	 r8, QWORD PTR hRC$[rsp]
  00166	48 8b 94 24 18
	03 00 00	 mov	 rdx, QWORD PTR sValue$[rsp]
  0016e	48 8b c8	 mov	 rcx, rax
  00171	e8 00 00 00 00	 call	 ?SetBSTR@OposVariant@@QEAAXPEA_WAEAJ@Z ; OposVariant::SetBSTR

; 474  :         OposDispParms Disp( Vars, 2 );

  00176	41 b8 02 00 00
	00		 mov	 r8d, 2
  0017c	48 8d 94 24 70
	01 00 00	 lea	 rdx, QWORD PTR Vars$9[rsp]
  00184	48 8d 8c 24 08
	02 00 00	 lea	 rcx, QWORD PTR Disp$11[rsp]
  0018c	e8 00 00 00 00	 call	 ??0OposDispParms@@QEAA@PEAVOposVariant@@H@Z ; OposDispParms::OposDispParms

; 475  :         if ( hRC == S_OK )

  00191	83 bc 24 44 01
	00 00 00	 cmp	 DWORD PTR hRC$[rsp], 0
  00199	0f 85 a7 00 00
	00		 jne	 $LN4@SetOposPro

; 476  :             hRC = _pService->Invoke(

  0019f	b8 04 00 00 00	 mov	 eax, 4
  001a4	48 6b c0 04	 imul	 rax, rax, 4
  001a8	48 8b 8c 24 00
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001b0	48 8b 89 a0 01
	00 00		 mov	 rcx, QWORD PTR [rcx+416]
  001b7	48 8b 94 24 00
	03 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  001bf	48 8b 92 a0 01
	00 00		 mov	 rdx, QWORD PTR [rdx+416]
  001c6	48 89 94 24 d0
	02 00 00	 mov	 QWORD PTR tv143[rsp], rdx
  001ce	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  001d1	48 89 8c 24 d8
	02 00 00	 mov	 QWORD PTR tv134[rsp], rcx
  001d9	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR [rsp+64], 0
  001e2	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR [rsp+56], 0
  001eb	4c 8d 84 24 c8
	01 00 00	 lea	 r8, QWORD PTR VarResult$10[rsp]
  001f3	4c 89 44 24 30	 mov	 QWORD PTR [rsp+48], r8
  001f8	4c 8d 84 24 08
	02 00 00	 lea	 r8, QWORD PTR Disp$11[rsp]
  00200	4c 89 44 24 28	 mov	 QWORD PTR [rsp+40], r8
  00205	66 c7 44 24 20
	01 00		 mov	 WORD PTR [rsp+32], 1
  0020c	41 b9 00 04 00
	00		 mov	 r9d, 1024		; 00000400H
  00212	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:GUID_NULL
  00219	4c 8b 94 24 00
	03 00 00	 mov	 r10, QWORD PTR this$[rsp]
  00221	41 8b 94 02 b4
	01 00 00	 mov	 edx, DWORD PTR [r10+rax+436]
  00229	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR tv143[rsp]
  00231	48 8b c8	 mov	 rcx, rax
  00234	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR tv134[rsp]
  0023c	ff 50 30	 call	 QWORD PTR [rax+48]
  0023f	89 84 24 44 01
	00 00		 mov	 DWORD PTR hRC$[rsp], eax
$LN4@SetOposPro:

; 477  :                 _DispIDs[nDISetPropertyString], IID_NULL, LOCALE_USER_DEFAULT,
; 478  :                 DISPATCH_METHOD, &Disp, &VarResult, NULL, NULL );
; 479  :     }

  00246	48 8d 8c 24 08
	02 00 00	 lea	 rcx, QWORD PTR Disp$11[rsp]
  0024e	e8 00 00 00 00	 call	 ??1OposDispParms@@QEAA@XZ ; OposDispParms::~OposDispParms
  00253	48 8d 8c 24 c8
	01 00 00	 lea	 rcx, QWORD PTR VarResult$10[rsp]
  0025b	e8 00 00 00 00	 call	 ??1OposVariantResult@@QEAA@XZ ; OposVariantResult::~OposVariantResult
  00260	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1OposVariant@@QEAA@XZ ; OposVariant::~OposVariant
  00267	41 b8 02 00 00
	00		 mov	 r8d, 2
  0026d	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00272	48 8d 8c 24 70
	01 00 00	 lea	 rcx, QWORD PTR Vars$9[rsp]
  0027a	e8 00 00 00 00	 call	 ??_I@YAXPEAX_K1P6AX0@Z@Z
  0027f	eb 25		 jmp	 SHORT $LN3@SetOposPro
$LN2@SetOposPro:

; 480  : 
; 481  :     // Handle error.
; 482  :     else if ( _bOpened )                // If open but not supported,

  00281	48 8b 84 24 00
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00289	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  00290	85 c0		 test	 eax, eax
  00292	74 12		 je	 SHORT $LN3@SetOposPro

; 483  :         SetRC( OPOS_E_NOSERVICE );      //   set COResultCode.

  00294	ba 68 00 00 00	 mov	 edx, 104		; 00000068H
  00299	48 8b 8c 24 00
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  002a1	e8 00 00 00 00	 call	 ?SetRC@COPOSVideoCapture@@IEAAJJ@Z ; COPOSVideoCapture::SetRC
$LN3@SetOposPro:

; 484  : 
; 485  :     // Trace result.
; 486  : #ifdef _DEBUG
; 487  :     LPCTSTR pszInfo = _T("");

  002a6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193214
  002ad	48 89 84 24 28
	02 00 00	 mov	 QWORD PTR pszInfo$[rsp], rax

; 488  :     TCHAR szHR[50];
; 489  :     if ( !_bOpened )

  002b5	48 8b 84 24 00
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002bd	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  002c4	85 c0		 test	 eax, eax
  002c6	75 14		 jne	 SHORT $LN6@SetOposPro

; 490  :         pszInfo = _T(" -- Closed");

  002c8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193217
  002cf	48 89 84 24 28
	02 00 00	 mov	 QWORD PTR pszInfo$[rsp], rax
  002d7	e9 98 00 00 00	 jmp	 $LN7@SetOposPro
$LN6@SetOposPro:

; 491  :     else if ( _nSOMinor < nMinor )

  002dc	48 8b 84 24 00
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002e4	8b 8c 24 20 03
	00 00		 mov	 ecx, DWORD PTR nMinor$[rsp]
  002eb	39 88 94 01 00
	00		 cmp	 DWORD PTR [rax+404], ecx
  002f1	7d 11		 jge	 SHORT $LN8@SetOposPro

; 492  :         pszInfo = _T(" -- Not supported by SO");

  002f3	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193220
  002fa	48 89 84 24 28
	02 00 00	 mov	 QWORD PTR pszInfo$[rsp], rax
  00302	eb 70		 jmp	 SHORT $LN7@SetOposPro
$LN8@SetOposPro:

; 493  :     else if ( hRC != 0 )

  00304	83 bc 24 44 01
	00 00 00	 cmp	 DWORD PTR hRC$[rsp], 0
  0030c	74 66		 je	 SHORT $LN7@SetOposPro

; 494  :     {
; 495  :         _sntprintf( szHR, TSIZEOF(szHR), _T(" -- COM error: HR = 0x%X"), hRC );

  0030e	44 8b 8c 24 44
	01 00 00	 mov	 r9d, DWORD PTR hRC$[rsp]
  00316	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG193222
  0031d	ba 32 00 00 00	 mov	 edx, 50			; 00000032H
  00322	48 8d 8c 24 40
	02 00 00	 lea	 rcx, QWORD PTR szHR$[rsp]
  0032a	e8 00 00 00 00	 call	 _snwprintf

; 496  :         NULTERMINATE(szHR);

  0032f	b8 02 00 00 00	 mov	 eax, 2
  00334	48 6b c0 31	 imul	 rax, rax, 49		; 00000031H
  00338	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR $T13[rsp], rax
  00340	48 83 bc 24 c8
	02 00 00 64	 cmp	 QWORD PTR $T13[rsp], 100 ; 00000064H
  00349	73 02		 jae	 SHORT $LN14@SetOposPro
  0034b	eb 05		 jmp	 SHORT $LN15@SetOposPro
$LN14@SetOposPro:
  0034d	e8 00 00 00 00	 call	 __report_rangecheckfailure
$LN15@SetOposPro:
  00352	33 c0		 xor	 eax, eax
  00354	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR $T13[rsp]
  0035c	66 89 84 0c 40
	02 00 00	 mov	 WORD PTR szHR$[rsp+rcx], ax

; 497  :         pszInfo = szHR;

  00364	48 8d 84 24 40
	02 00 00	 lea	 rax, QWORD PTR szHR$[rsp]
  0036c	48 89 84 24 28
	02 00 00	 mov	 QWORD PTR pszInfo$[rsp], rax
$LN7@SetOposPro:

; 498  :     }
; 499  : 
; 500  :     DOTRACEV( ( _T("-%hs [Set]%s"), pPropName, pszInfo ) );

  00374	4c 8b 8c 24 28
	02 00 00	 mov	 r9, QWORD PTR pszInfo$[rsp]
  0037c	4c 8b 84 24 08
	03 00 00	 mov	 r8, QWORD PTR pPropName$[rsp]
  00384	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193223
  0038b	48 8b 8c 24 00
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00393	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 501  : #endif
; 502  : 
; 503  :     return hRC;

  00398	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR hRC$[rsp]

; 504  : }

  0039f	48 8b f8	 mov	 rdi, rax
  003a2	48 8b cc	 mov	 rcx, rsp
  003a5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z$rtcFrameData
  003ac	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  003b1	48 8b c7	 mov	 rax, rdi
  003b4	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  003bc	48 33 cc	 xor	 rcx, rsp
  003bf	e8 00 00 00 00	 call	 __security_check_cookie
  003c4	48 81 c4 f0 02
	00 00		 add	 rsp, 752		; 000002f0H
  003cb	5f		 pop	 rdi
  003cc	c3		 ret	 0
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEA_WJ@Z ENDP	; COPOSVideoCapture::SetOposProp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
hRC$ = 84
Var$8 = 120
VarResult$9 = 184
Disp$10 = 248
pszFormat$ = 280
szPrefix$ = 304
$T11 = 528
tv88 = 536
tv76 = 544
__$ArrayPad$ = 552
this$ = 576
pPropName$ = 584
nIndex$ = 592
psValue$ = 600
nMinor$ = 608
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z PROC ; COPOSVideoCapture::GetOposProp

; 406  : {

$LN13:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 30 02
	00 00		 sub	 rsp, 560		; 00000230H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 8c 00 00 00	 mov	 ecx, 140		; 0000008cH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 40
	02 00 00	 mov	 rcx, QWORD PTR [rsp+576]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 28
	02 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 407  :     DOTRACEV( ( _T("+%hs [Get]"), pPropName ) );

  00045	4c 8b 84 24 48
	02 00 00	 mov	 r8, QWORD PTR pPropName$[rsp]
  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193164
  00054	48 8b 8c 24 40
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 408  : 
; 409  :     // Initialize return value.
; 410  :     HRESULT hRC = S_OK;

  00061	c7 44 24 54 00
	00 00 00	 mov	 DWORD PTR hRC$[rsp], 0

; 411  : 
; 412  :     // If open and SO version support's property...
; 413  :     if ( _bOpened && _nSOMinor >= nMinor )

  00069	48 8b 84 24 40
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00071	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  00078	85 c0		 test	 eax, eax
  0007a	0f 84 50 01 00
	00		 je	 $LN2@GetOposPro
  00080	48 8b 84 24 40
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00088	8b 8c 24 60 02
	00 00		 mov	 ecx, DWORD PTR nMinor$[rsp]
  0008f	39 88 94 01 00
	00		 cmp	 DWORD PTR [rax+404], ecx
  00095	0f 8c 35 01 00
	00		 jl	 $LN2@GetOposPro

; 414  :     {
; 415  :         // Set up and call the SO's get property number method.
; 416  :         OposVariant Var;

  0009b	48 8d 4c 24 78	 lea	 rcx, QWORD PTR Var$8[rsp]
  000a0	e8 00 00 00 00	 call	 ??0OposVariant@@QEAA@XZ	; OposVariant::OposVariant

; 417  :         OposVariantResult VarResult;

  000a5	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR VarResult$9[rsp]
  000ad	e8 00 00 00 00	 call	 ??0OposVariantResult@@QEAA@XZ

; 418  :         Var.SetLONG( nIndex );

  000b2	8b 94 24 50 02
	00 00		 mov	 edx, DWORD PTR nIndex$[rsp]
  000b9	48 8d 4c 24 78	 lea	 rcx, QWORD PTR Var$8[rsp]
  000be	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QEAAXJ@Z ; OposVariant::SetLONG

; 419  :         DISPPARAMS Disp = { &Var, NULL, 1, 0 };

  000c3	48 8d 44 24 78	 lea	 rax, QWORD PTR Var$8[rsp]
  000c8	48 89 84 24 f8
	00 00 00	 mov	 QWORD PTR Disp$10[rsp], rax
  000d0	48 c7 84 24 00
	01 00 00 00 00
	00 00		 mov	 QWORD PTR Disp$10[rsp+8], 0
  000dc	c7 84 24 08 01
	00 00 01 00 00
	00		 mov	 DWORD PTR Disp$10[rsp+16], 1
  000e7	c7 84 24 0c 01
	00 00 00 00 00
	00		 mov	 DWORD PTR Disp$10[rsp+20], 0

; 420  :         hRC = _pService->Invoke(

  000f2	b8 04 00 00 00	 mov	 eax, 4
  000f7	48 6b c0 03	 imul	 rax, rax, 3
  000fb	48 8b 8c 24 40
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00103	48 8b 89 a0 01
	00 00		 mov	 rcx, QWORD PTR [rcx+416]
  0010a	48 8b 94 24 40
	02 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  00112	48 8b 92 a0 01
	00 00		 mov	 rdx, QWORD PTR [rdx+416]
  00119	48 89 94 24 18
	02 00 00	 mov	 QWORD PTR tv88[rsp], rdx
  00121	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00124	48 89 8c 24 20
	02 00 00	 mov	 QWORD PTR tv76[rsp], rcx
  0012c	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR [rsp+64], 0
  00135	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR [rsp+56], 0
  0013e	4c 8d 84 24 b8
	00 00 00	 lea	 r8, QWORD PTR VarResult$9[rsp]
  00146	4c 89 44 24 30	 mov	 QWORD PTR [rsp+48], r8
  0014b	4c 8d 84 24 f8
	00 00 00	 lea	 r8, QWORD PTR Disp$10[rsp]
  00153	4c 89 44 24 28	 mov	 QWORD PTR [rsp+40], r8
  00158	66 c7 44 24 20
	01 00		 mov	 WORD PTR [rsp+32], 1
  0015f	41 b9 00 04 00
	00		 mov	 r9d, 1024		; 00000400H
  00165	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:GUID_NULL
  0016c	4c 8b 94 24 40
	02 00 00	 mov	 r10, QWORD PTR this$[rsp]
  00174	41 8b 94 02 b4
	01 00 00	 mov	 edx, DWORD PTR [r10+rax+436]
  0017c	48 8b 84 24 18
	02 00 00	 mov	 rax, QWORD PTR tv88[rsp]
  00184	48 8b c8	 mov	 rcx, rax
  00187	48 8b 84 24 20
	02 00 00	 mov	 rax, QWORD PTR tv76[rsp]
  0018f	ff 50 30	 call	 QWORD PTR [rax+48]
  00192	89 44 24 54	 mov	 DWORD PTR hRC$[rsp], eax

; 421  :                 _DispIDs[nDIGetPropertyString], IID_NULL, LOCALE_USER_DEFAULT,
; 422  :                 DISPATCH_METHOD, &Disp, &VarResult, NULL, NULL );
; 423  : 
; 424  :         // If succeeds, then return result.
; 425  :         if ( hRC == S_OK )

  00196	83 7c 24 54 00	 cmp	 DWORD PTR hRC$[rsp], 0
  0019b	75 1a		 jne	 SHORT $LN4@GetOposPro

; 426  :             VarResult.ChangeBSTR( psValue, hRC );

  0019d	4c 8d 44 24 54	 lea	 r8, QWORD PTR hRC$[rsp]
  001a2	48 8b 94 24 58
	02 00 00	 mov	 rdx, QWORD PTR psValue$[rsp]
  001aa	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR VarResult$9[rsp]
  001b2	e8 00 00 00 00	 call	 ?ChangeBSTR@OposVariant@@QEAAXPEAPEA_WAEAJ@Z ; OposVariant::ChangeBSTR
$LN4@GetOposPro:

; 427  :     }

  001b7	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR VarResult$9[rsp]
  001bf	e8 00 00 00 00	 call	 ??1OposVariantResult@@QEAA@XZ ; OposVariantResult::~OposVariantResult
  001c4	48 8d 4c 24 78	 lea	 rcx, QWORD PTR Var$8[rsp]
  001c9	e8 00 00 00 00	 call	 ??1OposVariant@@QEAA@XZ	; OposVariant::~OposVariant
  001ce	eb 18		 jmp	 SHORT $LN3@GetOposPro
$LN2@GetOposPro:

; 428  :     // Else return default string.
; 429  :     else
; 430  :         *psValue = ::SysAllocString( L"[Error]" );

  001d0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG193168
  001d7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SysAllocString
  001dd	48 8b 8c 24 58
	02 00 00	 mov	 rcx, QWORD PTR psValue$[rsp]
  001e5	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN3@GetOposPro:

; 431  : 
; 432  :     // Trace result.
; 433  : #ifdef _DEBUG
; 434  :     LPCTSTR pszFormat = _T("-%hs [Get].");

  001e8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193169
  001ef	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR pszFormat$[rsp], rax

; 435  :     if ( !_bOpened )

  001f7	48 8b 84 24 40
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001ff	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  00206	85 c0		 test	 eax, eax
  00208	75 11		 jne	 SHORT $LN5@GetOposPro

; 436  :         pszFormat = _T("-%hs [Get] -- Closed.");

  0020a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193172
  00211	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR pszFormat$[rsp], rax
  00219	eb 3e		 jmp	 SHORT $LN6@GetOposPro
$LN5@GetOposPro:

; 437  :     else if ( _nSOMinor < nMinor )

  0021b	48 8b 84 24 40
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00223	8b 8c 24 60 02
	00 00		 mov	 ecx, DWORD PTR nMinor$[rsp]
  0022a	39 88 94 01 00
	00		 cmp	 DWORD PTR [rax+404], ecx
  00230	7d 11		 jge	 SHORT $LN7@GetOposPro

; 438  :         pszFormat = _T("-%hs [Get] -- Not supported by SO.");

  00232	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193175
  00239	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR pszFormat$[rsp], rax
  00241	eb 16		 jmp	 SHORT $LN6@GetOposPro
$LN7@GetOposPro:

; 439  :     else if ( hRC != 0 )

  00243	83 7c 24 54 00	 cmp	 DWORD PTR hRC$[rsp], 0
  00248	74 0f		 je	 SHORT $LN6@GetOposPro

; 440  :         pszFormat = _T("-%hs [Get] -- COM error: HR = 0x%X");

  0024a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193177
  00251	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR pszFormat$[rsp], rax
$LN6@GetOposPro:

; 441  : 
; 442  :     TCHAR szPrefix[100];
; 443  :     _sntprintf( szPrefix, TSIZEOF(szPrefix), pszFormat, pPropName, hRC );

  00259	8b 44 24 54	 mov	 eax, DWORD PTR hRC$[rsp]
  0025d	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00261	4c 8b 8c 24 48
	02 00 00	 mov	 r9, QWORD PTR pPropName$[rsp]
  00269	4c 8b 84 24 18
	01 00 00	 mov	 r8, QWORD PTR pszFormat$[rsp]
  00271	ba 64 00 00 00	 mov	 edx, 100		; 00000064H
  00276	48 8d 8c 24 30
	01 00 00	 lea	 rcx, QWORD PTR szPrefix$[rsp]
  0027e	e8 00 00 00 00	 call	 _snwprintf

; 444  :     NULTERMINATE(szPrefix);

  00283	b8 02 00 00 00	 mov	 eax, 2
  00288	48 6b c0 63	 imul	 rax, rax, 99		; 00000063H
  0028c	48 89 84 24 10
	02 00 00	 mov	 QWORD PTR $T11[rsp], rax
  00294	48 81 bc 24 10
	02 00 00 c8 00
	00 00		 cmp	 QWORD PTR $T11[rsp], 200 ; 000000c8H
  002a0	73 02		 jae	 SHORT $LN11@GetOposPro
  002a2	eb 05		 jmp	 SHORT $LN12@GetOposPro
$LN11@GetOposPro:
  002a4	e8 00 00 00 00	 call	 __report_rangecheckfailure
$LN12@GetOposPro:
  002a9	33 c0		 xor	 eax, eax
  002ab	48 8b 8c 24 10
	02 00 00	 mov	 rcx, QWORD PTR $T11[rsp]
  002b3	66 89 84 0c 30
	01 00 00	 mov	 WORD PTR szPrefix$[rsp+rcx], ax

; 445  :     DOTRACESTRINGV( szPrefix, *psValue );

  002bb	48 8b 84 24 58
	02 00 00	 mov	 rax, QWORD PTR psValue$[rsp]
  002c3	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  002c6	48 8d 94 24 30
	01 00 00	 lea	 rdx, QWORD PTR szPrefix$[rsp]
  002ce	48 8b 8c 24 40
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  002d6	e8 00 00 00 00	 call	 ?WriteTraceString@COPOSVideoCapture@@QEAAXPEB_WPEA_W@Z ; COPOSVideoCapture::WriteTraceString

; 446  : #endif
; 447  : 
; 448  :     return hRC;

  002db	8b 44 24 54	 mov	 eax, DWORD PTR hRC$[rsp]

; 449  : }

  002df	48 8b f8	 mov	 rdi, rax
  002e2	48 8b cc	 mov	 rcx, rsp
  002e5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z$rtcFrameData
  002ec	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  002f1	48 8b c7	 mov	 rax, rdi
  002f4	48 8b 8c 24 28
	02 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  002fc	48 33 cc	 xor	 rcx, rsp
  002ff	e8 00 00 00 00	 call	 __security_check_cookie
  00304	48 81 c4 30 02
	00 00		 add	 rsp, 560		; 00000230H
  0030b	5f		 pop	 rdi
  0030c	c3		 ret	 0
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAPEA_WJ@Z ENDP ; COPOSVideoCapture::GetOposProp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
tv69 = 48
this$ = 80
pPropName$ = 88
nIndex$ = 96
nValue$ = 104
nMinor$ = 112
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJFJ@Z PROC	; COPOSVideoCapture::SetOposProp

; 394  : {

$LN5:
  00000	66 44 89 4c 24
	20		 mov	 WORD PTR [rsp+32], r9w
  00006	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00010	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00015	57		 push	 rdi
  00016	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 10 00 00 00	 mov	 ecx, 16
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 395  :     // If setting a boolean, then force to use VC++ TRUE or FALSE,
; 396  :     //   since several vendors test specifically against TRUE (1)
; 397  :     //   rather than non-zero.
; 398  :     return SetOposProp( DEBUGPARAM(pPropName)

  0002e	0f bf 44 24 68	 movsx	 eax, WORD PTR nValue$[rsp]
  00033	85 c0		 test	 eax, eax
  00035	74 0a		 je	 SHORT $LN3@SetOposPro
  00037	c7 44 24 30 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  0003f	eb 08		 jmp	 SHORT $LN4@SetOposPro
$LN3@SetOposPro:
  00041	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@SetOposPro:
  00049	8b 44 24 70	 mov	 eax, DWORD PTR nMinor$[rsp]
  0004d	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00051	44 8b 4c 24 30	 mov	 r9d, DWORD PTR tv69[rsp]
  00056	44 8b 44 24 60	 mov	 r8d, DWORD PTR nIndex$[rsp]
  0005b	48 8b 54 24 58	 mov	 rdx, QWORD PTR pPropName$[rsp]
  00060	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00065	e8 00 00 00 00	 call	 ?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z ; COPOSVideoCapture::SetOposProp

; 399  :         nIndex, static_cast<long>(nValue ? TRUE : FALSE), nMinor );
; 400  : }

  0006a	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0006e	5f		 pop	 rdi
  0006f	c3		 ret	 0
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJFJ@Z ENDP	; COPOSVideoCapture::SetOposProp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
nValue$ = 52
hRC$ = 68
tv71 = 72
this$ = 96
pPropName$ = 104
nIndex$ = 112
pnValue$ = 120
nMinor$ = 128
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z PROC	; COPOSVideoCapture::GetOposProp

; 381  : {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 382  :     // If getting a boolean, then force return value to proper VARIANT_BOOL value.
; 383  :     long nValue;
; 384  :     HRESULT hRC = GetOposProp( DEBUGPARAM(pPropName)

  0002d	8b 84 24 80 00
	00 00		 mov	 eax, DWORD PTR nMinor$[rsp]
  00034	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00038	4c 8d 4c 24 34	 lea	 r9, QWORD PTR nValue$[rsp]
  0003d	44 8b 44 24 70	 mov	 r8d, DWORD PTR nIndex$[rsp]
  00042	48 8b 54 24 68	 mov	 rdx, QWORD PTR pPropName$[rsp]
  00047	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	e8 00 00 00 00	 call	 ?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ; COPOSVideoCapture::GetOposProp
  00051	89 44 24 44	 mov	 DWORD PTR hRC$[rsp], eax

; 385  :         nIndex, &nValue, nMinor );
; 386  :     *pnValue = nValue ? VARIANT_TRUE : VARIANT_FALSE;

  00055	83 7c 24 34 00	 cmp	 DWORD PTR nValue$[rsp], 0
  0005a	74 0c		 je	 SHORT $LN3@GetOposPro
  0005c	b8 ff ff ff ff	 mov	 eax, -1
  00061	66 89 44 24 48	 mov	 WORD PTR tv71[rsp], ax
  00066	eb 07		 jmp	 SHORT $LN4@GetOposPro
$LN3@GetOposPro:
  00068	33 c0		 xor	 eax, eax
  0006a	66 89 44 24 48	 mov	 WORD PTR tv71[rsp], ax
$LN4@GetOposPro:
  0006f	48 8b 44 24 78	 mov	 rax, QWORD PTR pnValue$[rsp]
  00074	0f b7 4c 24 48	 movzx	 ecx, WORD PTR tv71[rsp]
  00079	66 89 08	 mov	 WORD PTR [rax], cx

; 387  :     return hRC;

  0007c	8b 44 24 44	 mov	 eax, DWORD PTR hRC$[rsp]

; 388  : }

  00080	8b f8		 mov	 edi, eax
  00082	48 8b cc	 mov	 rcx, rsp
  00085	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z$rtcFrameData
  0008c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00091	8b c7		 mov	 eax, edi
  00093	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAFJ@Z ENDP	; COPOSVideoCapture::GetOposProp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
hRC$ = 80
Vars$7 = 112
VarResult$8 = 200
Disp$9 = 264
pszInfo$ = 296
szHR$ = 320
$T10 = 448
tv136 = 456
tv128 = 464
__$ArrayPad$ = 472
this$ = 496
pPropName$ = 504
nIndex$ = 512
nValue$ = 520
nMinor$ = 528
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z PROC	; COPOSVideoCapture::SetOposProp

; 332  : {

$LN13:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec e0 01
	00 00		 sub	 rsp, 480		; 000001e0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 78 00 00 00	 mov	 ecx, 120		; 00000078H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 f0
	01 00 00	 mov	 rcx, QWORD PTR [rsp+496]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 d8
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 333  :     DOTRACEV( ( _T("+%hs [Set]: %d (0x%X)"), pPropName, nValue, nValue ) );

  00045	8b 84 24 08 02
	00 00		 mov	 eax, DWORD PTR nValue$[rsp]
  0004c	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00050	44 8b 8c 24 08
	02 00 00	 mov	 r9d, DWORD PTR nValue$[rsp]
  00058	4c 8b 84 24 f8
	01 00 00	 mov	 r8, QWORD PTR pPropName$[rsp]
  00060	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193106
  00067	48 8b 8c 24 f0
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0006f	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 334  :     HRESULT hRC = S_OK;

  00074	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR hRC$[rsp], 0

; 335  : 
; 336  :     SetRC();                            // Clear COResultCode.

  0007c	ba ff ff ff ff	 mov	 edx, -1
  00081	48 8b 8c 24 f0
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00089	e8 00 00 00 00	 call	 ?SetRC@COPOSVideoCapture@@IEAAJJ@Z ; COPOSVideoCapture::SetRC

; 337  : 
; 338  :     // If open and SO version support's property...
; 339  :     if ( _bOpened && _nSOMinor >= nMinor )

  0008e	48 8b 84 24 f0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00096	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  0009d	85 c0		 test	 eax, eax
  0009f	0f 84 72 01 00
	00		 je	 $LN2@SetOposPro
  000a5	48 8b 84 24 f0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000ad	8b 8c 24 10 02
	00 00		 mov	 ecx, DWORD PTR nMinor$[rsp]
  000b4	39 88 94 01 00
	00		 cmp	 DWORD PTR [rax+404], ecx
  000ba	0f 8c 57 01 00
	00		 jl	 $LN2@SetOposPro

; 340  :     {
; 341  :         // Set up and call the SO's set property number method.
; 342  :         OposVariant Vars[2];

  000c0	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??0OposVariant@@QEAA@XZ ; OposVariant::OposVariant
  000c7	41 b8 02 00 00
	00		 mov	 r8d, 2
  000cd	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  000d2	48 8d 4c 24 70	 lea	 rcx, QWORD PTR Vars$7[rsp]
  000d7	e8 00 00 00 00	 call	 ??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 343  :         OposVariantResult VarResult;

  000dc	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR VarResult$8[rsp]
  000e4	e8 00 00 00 00	 call	 ??0OposVariantResult@@QEAA@XZ

; 344  :         Vars[1].SetLONG( nIndex );

  000e9	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  000ee	48 6b c0 01	 imul	 rax, rax, 1
  000f2	48 8d 44 04 70	 lea	 rax, QWORD PTR Vars$7[rsp+rax]
  000f7	8b 94 24 00 02
	00 00		 mov	 edx, DWORD PTR nIndex$[rsp]
  000fe	48 8b c8	 mov	 rcx, rax
  00101	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QEAAXJ@Z ; OposVariant::SetLONG

; 345  :         Vars[0].SetLONG( nValue );

  00106	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0010b	48 6b c0 00	 imul	 rax, rax, 0
  0010f	48 8d 44 04 70	 lea	 rax, QWORD PTR Vars$7[rsp+rax]
  00114	8b 94 24 08 02
	00 00		 mov	 edx, DWORD PTR nValue$[rsp]
  0011b	48 8b c8	 mov	 rcx, rax
  0011e	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QEAAXJ@Z ; OposVariant::SetLONG

; 346  :         OposDispParms Disp( Vars, 2 );

  00123	41 b8 02 00 00
	00		 mov	 r8d, 2
  00129	48 8d 54 24 70	 lea	 rdx, QWORD PTR Vars$7[rsp]
  0012e	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR Disp$9[rsp]
  00136	e8 00 00 00 00	 call	 ??0OposDispParms@@QEAA@PEAVOposVariant@@H@Z ; OposDispParms::OposDispParms

; 347  :         hRC = _pService->Invoke(

  0013b	b8 04 00 00 00	 mov	 eax, 4
  00140	48 6b c0 02	 imul	 rax, rax, 2
  00144	48 8b 8c 24 f0
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0014c	48 8b 89 a0 01
	00 00		 mov	 rcx, QWORD PTR [rcx+416]
  00153	48 8b 94 24 f0
	01 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  0015b	48 8b 92 a0 01
	00 00		 mov	 rdx, QWORD PTR [rdx+416]
  00162	48 89 94 24 c8
	01 00 00	 mov	 QWORD PTR tv136[rsp], rdx
  0016a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0016d	48 89 8c 24 d0
	01 00 00	 mov	 QWORD PTR tv128[rsp], rcx
  00175	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR [rsp+64], 0
  0017e	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR [rsp+56], 0
  00187	4c 8d 84 24 c8
	00 00 00	 lea	 r8, QWORD PTR VarResult$8[rsp]
  0018f	4c 89 44 24 30	 mov	 QWORD PTR [rsp+48], r8
  00194	4c 8d 84 24 08
	01 00 00	 lea	 r8, QWORD PTR Disp$9[rsp]
  0019c	4c 89 44 24 28	 mov	 QWORD PTR [rsp+40], r8
  001a1	66 c7 44 24 20
	01 00		 mov	 WORD PTR [rsp+32], 1
  001a8	41 b9 00 04 00
	00		 mov	 r9d, 1024		; 00000400H
  001ae	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:GUID_NULL
  001b5	4c 8b 94 24 f0
	01 00 00	 mov	 r10, QWORD PTR this$[rsp]
  001bd	41 8b 94 02 b4
	01 00 00	 mov	 edx, DWORD PTR [r10+rax+436]
  001c5	48 8b 84 24 c8
	01 00 00	 mov	 rax, QWORD PTR tv136[rsp]
  001cd	48 8b c8	 mov	 rcx, rax
  001d0	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR tv128[rsp]
  001d8	ff 50 30	 call	 QWORD PTR [rax+48]
  001db	89 44 24 50	 mov	 DWORD PTR hRC$[rsp], eax

; 348  :                 _DispIDs[nDISetPropertyNumber], IID_NULL, LOCALE_USER_DEFAULT,
; 349  :                 DISPATCH_METHOD, &Disp, &VarResult, NULL, NULL );
; 350  :     }

  001df	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR Disp$9[rsp]
  001e7	e8 00 00 00 00	 call	 ??1OposDispParms@@QEAA@XZ ; OposDispParms::~OposDispParms
  001ec	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR VarResult$8[rsp]
  001f4	e8 00 00 00 00	 call	 ??1OposVariantResult@@QEAA@XZ ; OposVariantResult::~OposVariantResult
  001f9	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1OposVariant@@QEAA@XZ ; OposVariant::~OposVariant
  00200	41 b8 02 00 00
	00		 mov	 r8d, 2
  00206	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0020b	48 8d 4c 24 70	 lea	 rcx, QWORD PTR Vars$7[rsp]
  00210	e8 00 00 00 00	 call	 ??_I@YAXPEAX_K1P6AX0@Z@Z
  00215	eb 25		 jmp	 SHORT $LN3@SetOposPro
$LN2@SetOposPro:

; 351  : 
; 352  :     // Handle error.
; 353  :     else if ( _bOpened )                // If open but not supported,

  00217	48 8b 84 24 f0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0021f	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  00226	85 c0		 test	 eax, eax
  00228	74 12		 je	 SHORT $LN3@SetOposPro

; 354  :         SetRC( OPOS_E_NOSERVICE );      //   set COResultCode.

  0022a	ba 68 00 00 00	 mov	 edx, 104		; 00000068H
  0022f	48 8b 8c 24 f0
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00237	e8 00 00 00 00	 call	 ?SetRC@COPOSVideoCapture@@IEAAJJ@Z ; COPOSVideoCapture::SetRC
$LN3@SetOposPro:

; 355  : 
; 356  :     // Trace result.
; 357  : #ifdef _DEBUG
; 358  :     LPCTSTR pszInfo = _T("");

  0023c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193110
  00243	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR pszInfo$[rsp], rax

; 359  :     TCHAR szHR[50];
; 360  :     if ( !_bOpened )

  0024b	48 8b 84 24 f0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00253	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  0025a	85 c0		 test	 eax, eax
  0025c	75 14		 jne	 SHORT $LN5@SetOposPro

; 361  :         pszInfo = _T(" -- Closed");

  0025e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193113
  00265	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR pszInfo$[rsp], rax
  0026d	e9 92 00 00 00	 jmp	 $LN6@SetOposPro
$LN5@SetOposPro:

; 362  :     else if ( _nSOMinor < nMinor )

  00272	48 8b 84 24 f0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0027a	8b 8c 24 10 02
	00 00		 mov	 ecx, DWORD PTR nMinor$[rsp]
  00281	39 88 94 01 00
	00		 cmp	 DWORD PTR [rax+404], ecx
  00287	7d 11		 jge	 SHORT $LN7@SetOposPro

; 363  :         pszInfo = _T(" -- Not supported by SO");

  00289	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193116
  00290	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR pszInfo$[rsp], rax
  00298	eb 6a		 jmp	 SHORT $LN6@SetOposPro
$LN7@SetOposPro:

; 364  :     else if ( hRC != 0 )

  0029a	83 7c 24 50 00	 cmp	 DWORD PTR hRC$[rsp], 0
  0029f	74 63		 je	 SHORT $LN6@SetOposPro

; 365  :     {
; 366  :         _sntprintf( szHR, TSIZEOF(szHR), _T(" -- COM error: HR = 0x%X"), hRC );

  002a1	44 8b 4c 24 50	 mov	 r9d, DWORD PTR hRC$[rsp]
  002a6	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG193118
  002ad	ba 32 00 00 00	 mov	 edx, 50			; 00000032H
  002b2	48 8d 8c 24 40
	01 00 00	 lea	 rcx, QWORD PTR szHR$[rsp]
  002ba	e8 00 00 00 00	 call	 _snwprintf

; 367  :         NULTERMINATE(szHR);

  002bf	b8 02 00 00 00	 mov	 eax, 2
  002c4	48 6b c0 31	 imul	 rax, rax, 49		; 00000031H
  002c8	48 89 84 24 c0
	01 00 00	 mov	 QWORD PTR $T10[rsp], rax
  002d0	48 83 bc 24 c0
	01 00 00 64	 cmp	 QWORD PTR $T10[rsp], 100 ; 00000064H
  002d9	73 02		 jae	 SHORT $LN11@SetOposPro
  002db	eb 05		 jmp	 SHORT $LN12@SetOposPro
$LN11@SetOposPro:
  002dd	e8 00 00 00 00	 call	 __report_rangecheckfailure
$LN12@SetOposPro:
  002e2	33 c0		 xor	 eax, eax
  002e4	48 8b 8c 24 c0
	01 00 00	 mov	 rcx, QWORD PTR $T10[rsp]
  002ec	66 89 84 0c 40
	01 00 00	 mov	 WORD PTR szHR$[rsp+rcx], ax

; 368  :         pszInfo = szHR;

  002f4	48 8d 84 24 40
	01 00 00	 lea	 rax, QWORD PTR szHR$[rsp]
  002fc	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR pszInfo$[rsp], rax
$LN6@SetOposPro:

; 369  :     }
; 370  : 
; 371  :     DOTRACEV( ( _T("-%hs [Set]%s"), pPropName, pszInfo ) );

  00304	4c 8b 8c 24 28
	01 00 00	 mov	 r9, QWORD PTR pszInfo$[rsp]
  0030c	4c 8b 84 24 f8
	01 00 00	 mov	 r8, QWORD PTR pPropName$[rsp]
  00314	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193119
  0031b	48 8b 8c 24 f0
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00323	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 372  : #endif
; 373  : 
; 374  :     return hRC;

  00328	8b 44 24 50	 mov	 eax, DWORD PTR hRC$[rsp]

; 375  : }

  0032c	48 8b f8	 mov	 rdi, rax
  0032f	48 8b cc	 mov	 rcx, rsp
  00332	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z$rtcFrameData
  00339	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0033e	48 8b c7	 mov	 rax, rdi
  00341	48 8b 8c 24 d8
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00349	48 33 cc	 xor	 rcx, rsp
  0034c	e8 00 00 00 00	 call	 __security_check_cookie
  00351	48 81 c4 e0 01
	00 00		 add	 rsp, 480		; 000001e0H
  00358	5f		 pop	 rdi
  00359	c3		 ret	 0
?SetOposProp@COPOSVideoCapture@@IEAAJPEBDJJJ@Z ENDP	; COPOSVideoCapture::SetOposProp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
hRC$ = 84
Var$8 = 120
VarResult$9 = 184
Disp$10 = 248
pszInfo$ = 280
szHR$ = 304
$T11 = 432
tv88 = 440
tv76 = 448
__$ArrayPad$ = 456
this$ = 480
pPropName$ = 488
nIndex$ = 496
pnValue$ = 504
nMinor$ = 512
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z PROC	; COPOSVideoCapture::GetOposProp

; 283  : {

$LN12:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec d0 01
	00 00		 sub	 rsp, 464		; 000001d0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 74 00 00 00	 mov	 ecx, 116		; 00000074H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 e0
	01 00 00	 mov	 rcx, QWORD PTR [rsp+480]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 c8
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 284  :     DOTRACEV( ( _T("+%hs [Get]"), pPropName ) );

  00045	4c 8b 84 24 e8
	01 00 00	 mov	 r8, QWORD PTR pPropName$[rsp]
  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193065
  00054	48 8b 8c 24 e0
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 285  : 
; 286  :     // Initialize return value.
; 287  :     HRESULT hRC = S_OK;

  00061	c7 44 24 54 00
	00 00 00	 mov	 DWORD PTR hRC$[rsp], 0

; 288  :     *pnValue = 0;

  00069	48 8b 84 24 f8
	01 00 00	 mov	 rax, QWORD PTR pnValue$[rsp]
  00071	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 289  : 
; 290  :     // If open and SO version support's property...
; 291  :     if ( _bOpened && _nSOMinor >= nMinor )

  00077	48 8b 84 24 e0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0007f	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  00086	85 c0		 test	 eax, eax
  00088	0f 84 4e 01 00
	00		 je	 $LN2@GetOposPro
  0008e	48 8b 84 24 e0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00096	8b 8c 24 00 02
	00 00		 mov	 ecx, DWORD PTR nMinor$[rsp]
  0009d	39 88 94 01 00
	00		 cmp	 DWORD PTR [rax+404], ecx
  000a3	0f 8c 33 01 00
	00		 jl	 $LN2@GetOposPro

; 292  :     {
; 293  :         // Set up and call the SO's get property number method.
; 294  :         OposVariant Var;

  000a9	48 8d 4c 24 78	 lea	 rcx, QWORD PTR Var$8[rsp]
  000ae	e8 00 00 00 00	 call	 ??0OposVariant@@QEAA@XZ	; OposVariant::OposVariant

; 295  :         OposVariantResult VarResult;

  000b3	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR VarResult$9[rsp]
  000bb	e8 00 00 00 00	 call	 ??0OposVariantResult@@QEAA@XZ

; 296  :         Var.SetLONG( nIndex );

  000c0	8b 94 24 f0 01
	00 00		 mov	 edx, DWORD PTR nIndex$[rsp]
  000c7	48 8d 4c 24 78	 lea	 rcx, QWORD PTR Var$8[rsp]
  000cc	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QEAAXJ@Z ; OposVariant::SetLONG

; 297  :         DISPPARAMS Disp = { &Var, NULL, 1, 0 };

  000d1	48 8d 44 24 78	 lea	 rax, QWORD PTR Var$8[rsp]
  000d6	48 89 84 24 f8
	00 00 00	 mov	 QWORD PTR Disp$10[rsp], rax
  000de	48 c7 84 24 00
	01 00 00 00 00
	00 00		 mov	 QWORD PTR Disp$10[rsp+8], 0
  000ea	c7 84 24 08 01
	00 00 01 00 00
	00		 mov	 DWORD PTR Disp$10[rsp+16], 1
  000f5	c7 84 24 0c 01
	00 00 00 00 00
	00		 mov	 DWORD PTR Disp$10[rsp+20], 0

; 298  :         hRC = _pService->Invoke(

  00100	b8 04 00 00 00	 mov	 eax, 4
  00105	48 6b c0 01	 imul	 rax, rax, 1
  00109	48 8b 8c 24 e0
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00111	48 8b 89 a0 01
	00 00		 mov	 rcx, QWORD PTR [rcx+416]
  00118	48 8b 94 24 e0
	01 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  00120	48 8b 92 a0 01
	00 00		 mov	 rdx, QWORD PTR [rdx+416]
  00127	48 89 94 24 b8
	01 00 00	 mov	 QWORD PTR tv88[rsp], rdx
  0012f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00132	48 89 8c 24 c0
	01 00 00	 mov	 QWORD PTR tv76[rsp], rcx
  0013a	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR [rsp+64], 0
  00143	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR [rsp+56], 0
  0014c	4c 8d 84 24 b8
	00 00 00	 lea	 r8, QWORD PTR VarResult$9[rsp]
  00154	4c 89 44 24 30	 mov	 QWORD PTR [rsp+48], r8
  00159	4c 8d 84 24 f8
	00 00 00	 lea	 r8, QWORD PTR Disp$10[rsp]
  00161	4c 89 44 24 28	 mov	 QWORD PTR [rsp+40], r8
  00166	66 c7 44 24 20
	01 00		 mov	 WORD PTR [rsp+32], 1
  0016d	41 b9 00 04 00
	00		 mov	 r9d, 1024		; 00000400H
  00173	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:GUID_NULL
  0017a	4c 8b 94 24 e0
	01 00 00	 mov	 r10, QWORD PTR this$[rsp]
  00182	41 8b 94 02 b4
	01 00 00	 mov	 edx, DWORD PTR [r10+rax+436]
  0018a	48 8b 84 24 b8
	01 00 00	 mov	 rax, QWORD PTR tv88[rsp]
  00192	48 8b c8	 mov	 rcx, rax
  00195	48 8b 84 24 c0
	01 00 00	 mov	 rax, QWORD PTR tv76[rsp]
  0019d	ff 50 30	 call	 QWORD PTR [rax+48]
  001a0	89 44 24 54	 mov	 DWORD PTR hRC$[rsp], eax

; 299  :                 _DispIDs[nDIGetPropertyNumber], IID_NULL, LOCALE_USER_DEFAULT,
; 300  :                 DISPATCH_METHOD, &Disp, &VarResult, NULL, NULL );
; 301  : 
; 302  :         // If success, then set return result.
; 303  :         if ( hRC == S_OK )

  001a4	83 7c 24 54 00	 cmp	 DWORD PTR hRC$[rsp], 0
  001a9	75 1a		 jne	 SHORT $LN3@GetOposPro

; 304  :             VarResult.ChangeLONG( pnValue, hRC );

  001ab	4c 8d 44 24 54	 lea	 r8, QWORD PTR hRC$[rsp]
  001b0	48 8b 94 24 f8
	01 00 00	 mov	 rdx, QWORD PTR pnValue$[rsp]
  001b8	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR VarResult$9[rsp]
  001c0	e8 00 00 00 00	 call	 ?ChangeLONG@OposVariant@@QEAAXPEAJAEAJ@Z ; OposVariant::ChangeLONG
$LN3@GetOposPro:

; 305  :     }

  001c5	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR VarResult$9[rsp]
  001cd	e8 00 00 00 00	 call	 ??1OposVariantResult@@QEAA@XZ ; OposVariantResult::~OposVariantResult
  001d2	48 8d 4c 24 78	 lea	 rcx, QWORD PTR Var$8[rsp]
  001d7	e8 00 00 00 00	 call	 ??1OposVariant@@QEAA@XZ	; OposVariant::~OposVariant
$LN2@GetOposPro:

; 306  : 
; 307  :     // Trace result.
; 308  : #ifdef _DEBUG
; 309  :     LPCTSTR pszInfo = _T("");

  001dc	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193068
  001e3	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR pszInfo$[rsp], rax

; 310  :     TCHAR szHR[50];
; 311  :     if ( !_bOpened )

  001eb	48 8b 84 24 e0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001f3	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  001fa	85 c0		 test	 eax, eax
  001fc	75 14		 jne	 SHORT $LN4@GetOposPro

; 312  :         pszInfo = _T(" -- Closed");

  001fe	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193071
  00205	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR pszInfo$[rsp], rax
  0020d	e9 92 00 00 00	 jmp	 $LN5@GetOposPro
$LN4@GetOposPro:

; 313  :     else if ( _nSOMinor < nMinor )

  00212	48 8b 84 24 e0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0021a	8b 8c 24 00 02
	00 00		 mov	 ecx, DWORD PTR nMinor$[rsp]
  00221	39 88 94 01 00
	00		 cmp	 DWORD PTR [rax+404], ecx
  00227	7d 11		 jge	 SHORT $LN6@GetOposPro

; 314  :         pszInfo = _T(" -- Not supported by SO");

  00229	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG193074
  00230	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR pszInfo$[rsp], rax
  00238	eb 6a		 jmp	 SHORT $LN5@GetOposPro
$LN6@GetOposPro:

; 315  :     else if ( hRC != 0 )

  0023a	83 7c 24 54 00	 cmp	 DWORD PTR hRC$[rsp], 0
  0023f	74 63		 je	 SHORT $LN5@GetOposPro

; 316  :     {
; 317  :         _sntprintf( szHR, TSIZEOF(szHR), _T(" -- COM error: HR = 0x%X"), hRC );

  00241	44 8b 4c 24 54	 mov	 r9d, DWORD PTR hRC$[rsp]
  00246	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG193076
  0024d	ba 32 00 00 00	 mov	 edx, 50			; 00000032H
  00252	48 8d 8c 24 30
	01 00 00	 lea	 rcx, QWORD PTR szHR$[rsp]
  0025a	e8 00 00 00 00	 call	 _snwprintf

; 318  :         NULTERMINATE(szHR);

  0025f	b8 02 00 00 00	 mov	 eax, 2
  00264	48 6b c0 31	 imul	 rax, rax, 49		; 00000031H
  00268	48 89 84 24 b0
	01 00 00	 mov	 QWORD PTR $T11[rsp], rax
  00270	48 83 bc 24 b0
	01 00 00 64	 cmp	 QWORD PTR $T11[rsp], 100 ; 00000064H
  00279	73 02		 jae	 SHORT $LN10@GetOposPro
  0027b	eb 05		 jmp	 SHORT $LN11@GetOposPro
$LN10@GetOposPro:
  0027d	e8 00 00 00 00	 call	 __report_rangecheckfailure
$LN11@GetOposPro:
  00282	33 c0		 xor	 eax, eax
  00284	48 8b 8c 24 b0
	01 00 00	 mov	 rcx, QWORD PTR $T11[rsp]
  0028c	66 89 84 0c 30
	01 00 00	 mov	 WORD PTR szHR$[rsp+rcx], ax

; 319  :         pszInfo = szHR;

  00294	48 8d 84 24 30
	01 00 00	 lea	 rax, QWORD PTR szHR$[rsp]
  0029c	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR pszInfo$[rsp], rax
$LN5@GetOposPro:

; 320  :     }
; 321  : 
; 322  :     DOTRACEV( ( _T("-%hs [Get]: %d (0x%X)%s"), pPropName, *pnValue, *pnValue, pszInfo ) );

  002a4	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR pszInfo$[rsp]
  002ac	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  002b1	48 8b 84 24 f8
	01 00 00	 mov	 rax, QWORD PTR pnValue$[rsp]
  002b9	8b 00		 mov	 eax, DWORD PTR [rax]
  002bb	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  002bf	48 8b 84 24 f8
	01 00 00	 mov	 rax, QWORD PTR pnValue$[rsp]
  002c7	44 8b 08	 mov	 r9d, DWORD PTR [rax]
  002ca	4c 8b 84 24 e8
	01 00 00	 mov	 r8, QWORD PTR pPropName$[rsp]
  002d2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193077
  002d9	48 8b 8c 24 e0
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  002e1	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 323  : #endif
; 324  : 
; 325  :     return hRC;

  002e6	8b 44 24 54	 mov	 eax, DWORD PTR hRC$[rsp]

; 326  : }

  002ea	48 8b f8	 mov	 rdi, rax
  002ed	48 8b cc	 mov	 rcx, rsp
  002f0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z$rtcFrameData
  002f7	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  002fc	48 8b c7	 mov	 rax, rdi
  002ff	48 8b 8c 24 c8
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00307	48 33 cc	 xor	 rcx, rsp
  0030a	e8 00 00 00 00	 call	 __security_check_cookie
  0030f	48 81 c4 d0 01
	00 00		 add	 rsp, 464		; 000001d0H
  00316	5f		 pop	 rdi
  00317	c3		 ret	 0
?GetOposProp@COPOSVideoCapture@@IEAAJPEBDJPEAJJ@Z ENDP	; COPOSVideoCapture::GetOposProp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
i$1 = 32
this$ = 64
pDispID$ = 72
nMethods$ = 80
?WriteTraceMethods@COPOSVideoCapture@@QEAAXPEAJH@Z PROC	; COPOSVideoCapture::WriteTraceMethods

; 2182 : {

$LN7:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2183 :     for ( int i = 0; i < nMethods; i++, pDispID++ )

  00028	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  00030	eb 18		 jmp	 SHORT $LN4@WriteTrace
$LN2@WriteTrace:
  00032	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  00036	ff c0		 inc	 eax
  00038	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
  0003c	48 8b 44 24 48	 mov	 rax, QWORD PTR pDispID$[rsp]
  00041	48 83 c0 04	 add	 rax, 4
  00045	48 89 44 24 48	 mov	 QWORD PTR pDispID$[rsp], rax
$LN4@WriteTrace:
  0004a	8b 44 24 50	 mov	 eax, DWORD PTR nMethods$[rsp]
  0004e	39 44 24 20	 cmp	 DWORD PTR i$1[rsp], eax
  00052	7d 2d		 jge	 SHORT $LN3@WriteTrace

; 2184 :         if ( *pDispID == -123 )

  00054	48 8b 44 24 48	 mov	 rax, QWORD PTR pDispID$[rsp]
  00059	83 38 85	 cmp	 DWORD PTR [rax], -123	; ffffffffffffff85H
  0005c	75 21		 jne	 SHORT $LN5@WriteTrace

; 2185 :             WriteTrace( _T("    %hs"), s_SOMethodNames[i] );

  0005e	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$1[rsp]
  00063	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?s_SOMethodNames@@3PAPEADA
  0006a	4c 8b 04 c1	 mov	 r8, QWORD PTR [rcx+rax*8]
  0006e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194326
  00075	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0007a	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace
$LN5@WriteTrace:
  0007f	eb b1		 jmp	 SHORT $LN2@WriteTrace
$LN3@WriteTrace:

; 2186 : }

  00081	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00085	5f		 pop	 rdi
  00086	c3		 ret	 0
?WriteTraceMethods@COPOSVideoCapture@@QEAAXPEAJH@Z ENDP	; COPOSVideoCapture::WriteTraceMethods
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
pMsgBuf$4 = 72
dwChars$5 = 84
this$ = 112
pFormat$ = 120
dwError$ = 128
?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z PROC	; COPOSVideoCapture::WriteTraceError

; 2155 : {

$LN8:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 18 00 00 00	 mov	 ecx, 24
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 2156 :     if ( dwError != 0 )

  00028	83 bc 24 80 00
	00 00 00	 cmp	 DWORD PTR dwError$[rsp], 0
  00030	0f 84 a6 00 00
	00		 je	 $LN2@WriteTrace

; 2157 :     {
; 2158 :         // Convert HRESULT to message and display.
; 2159 :         LPTSTR pMsgBuf;
; 2160 :         DWORD dwChars = ::FormatMessage(

  00036	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR [rsp+48], 0
  0003f	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR [rsp+40], 0
  00047	48 8d 44 24 48	 lea	 rax, QWORD PTR pMsgBuf$4[rsp]
  0004c	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00051	41 b9 00 04 00
	00		 mov	 r9d, 1024		; 00000400H
  00057	44 8b 84 24 80
	00 00 00	 mov	 r8d, DWORD PTR dwError$[rsp]
  0005f	33 d2		 xor	 edx, edx
  00061	b9 00 13 00 00	 mov	 ecx, 4864		; 00001300H
  00066	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_FormatMessageW
  0006c	89 44 24 54	 mov	 DWORD PTR dwChars$5[rsp], eax

; 2161 :                 FORMAT_MESSAGE_ALLOCATE_BUFFER |
; 2162 :                 FORMAT_MESSAGE_FROM_SYSTEM |
; 2163 :                 FORMAT_MESSAGE_IGNORE_INSERTS,
; 2164 :                 NULL,
; 2165 :                 dwError,
; 2166 :                 MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), // Default language
; 2167 :                 (LPTSTR) &pMsgBuf,
; 2168 :                 0,
; 2169 :                 NULL );
; 2170 :         if ( dwChars == 0 )

  00070	83 7c 24 54 00	 cmp	 DWORD PTR dwChars$5[rsp], 0
  00075	75 0e		 jne	 SHORT $LN3@WriteTrace

; 2171 :             pMsgBuf = _T("[Unknown]");

  00077	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG194313
  0007e	48 89 44 24 48	 mov	 QWORD PTR pMsgBuf$4[rsp], rax
  00083	eb 29		 jmp	 SHORT $LN4@WriteTrace
$LN3@WriteTrace:

; 2172 :         else if ( pMsgBuf[dwChars-1] == '\n' )

  00085	8b 44 24 54	 mov	 eax, DWORD PTR dwChars$5[rsp]
  00089	ff c8		 dec	 eax
  0008b	8b c0		 mov	 eax, eax
  0008d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR pMsgBuf$4[rsp]
  00092	0f b7 04 41	 movzx	 eax, WORD PTR [rcx+rax*2]
  00096	83 f8 0a	 cmp	 eax, 10
  00099	75 13		 jne	 SHORT $LN5@WriteTrace

; 2173 :             pMsgBuf[dwChars-1] = '\0';

  0009b	8b 44 24 54	 mov	 eax, DWORD PTR dwChars$5[rsp]
  0009f	ff c8		 dec	 eax
  000a1	8b c0		 mov	 eax, eax
  000a3	33 c9		 xor	 ecx, ecx
  000a5	48 8b 54 24 48	 mov	 rdx, QWORD PTR pMsgBuf$4[rsp]
  000aa	66 89 0c 42	 mov	 WORD PTR [rdx+rax*2], cx
$LN5@WriteTrace:
$LN4@WriteTrace:

; 2174 :         WriteTrace( pFormat, dwError, pMsgBuf );

  000ae	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pMsgBuf$4[rsp]
  000b3	44 8b 84 24 80
	00 00 00	 mov	 r8d, DWORD PTR dwError$[rsp]
  000bb	48 8b 54 24 78	 mov	 rdx, QWORD PTR pFormat$[rsp]
  000c0	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000c5	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 2175 :         if ( dwChars > 0 )

  000ca	83 7c 24 54 00	 cmp	 DWORD PTR dwChars$5[rsp], 0
  000cf	76 0b		 jbe	 SHORT $LN6@WriteTrace

; 2176 :             ::LocalFree(pMsgBuf);

  000d1	48 8b 4c 24 48	 mov	 rcx, QWORD PTR pMsgBuf$4[rsp]
  000d6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LocalFree
$LN6@WriteTrace:
$LN2@WriteTrace:

; 2177 :     }
; 2178 : }

  000dc	48 8b cc	 mov	 rcx, rsp
  000df	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z$rtcFrameData
  000e6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000eb	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000ef	5f		 pop	 rdi
  000f0	c3		 ret	 0
?WriteTraceError@COPOSVideoCapture@@QEAAXPEB_WK@Z ENDP	; COPOSVideoCapture::WriteTraceError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
szBuffer$ = 64
pszPrintfString$ = 296
va$ = 312
i$5 = 324
$T6 = 344
$T7 = 352
tv65 = 360
__$ArrayPad$ = 368
this$ = 400
pString$ = 408
nLen$ = 416
bAscii$ = 424
nCharSize$ = 432
pszFormat$ = 440
?WriteTraceString@COPOSVideoCapture@@QEAAXPEAXHHHPEB_WZZ PROC ; COPOSVideoCapture::WriteTraceString

; 2274 : {

$LN16:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 80 01
	00 00		 sub	 rsp, 384		; 00000180H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 60 00 00 00	 mov	 ecx, 96			; 00000060H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR [rsp+400]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 70
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 2275 :     TCHAR szBuffer[100+10];
; 2276 :     LPCTSTR pszPrintfString = ( nCharSize == 1 ? _T("hs") : _T("ls") );

  00045	83 bc 24 b0 01
	00 00 01	 cmp	 DWORD PTR nCharSize$[rsp], 1
  0004d	75 11		 jne	 SHORT $LN10@WriteTrace
  0004f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG194398
  00056	48 89 84 24 68
	01 00 00	 mov	 QWORD PTR tv65[rsp], rax
  0005e	eb 0f		 jmp	 SHORT $LN11@WriteTrace
$LN10@WriteTrace:
  00060	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG194399
  00067	48 89 84 24 68
	01 00 00	 mov	 QWORD PTR tv65[rsp], rax
$LN11@WriteTrace:
  0006f	48 8b 84 24 68
	01 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  00077	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR pszPrintfString$[rsp], rax

; 2277 : 
; 2278 :     // Use the "list of arguments" version of printf.
; 2279 :     va_list va;
; 2280 :     va_start( va, pszFormat );

  0007f	48 8d 84 24 c0
	01 00 00	 lea	 rax, QWORD PTR pszFormat$[rsp+8]
  00087	48 89 84 24 38
	01 00 00	 mov	 QWORD PTR va$[rsp], rax

; 2281 :     _vsntprintf( szBuffer, 100, pszFormat, va );

  0008f	4c 8b 8c 24 38
	01 00 00	 mov	 r9, QWORD PTR va$[rsp]
  00097	4c 8b 84 24 b8
	01 00 00	 mov	 r8, QWORD PTR pszFormat$[rsp]
  0009f	ba 64 00 00 00	 mov	 edx, 100		; 00000064H
  000a4	48 8d 4c 24 40	 lea	 rcx, QWORD PTR szBuffer$[rsp]
  000a9	e8 00 00 00 00	 call	 _vsnwprintf

; 2282 :     va_end(va);

  000ae	48 c7 84 24 38
	01 00 00 00 00
	00 00		 mov	 QWORD PTR va$[rsp], 0

; 2283 :     NULTERMINATE(szBuffer);

  000ba	b8 02 00 00 00	 mov	 eax, 2
  000bf	48 6b c0 6d	 imul	 rax, rax, 109		; 0000006dH
  000c3	48 89 84 24 58
	01 00 00	 mov	 QWORD PTR $T6[rsp], rax
  000cb	48 81 bc 24 58
	01 00 00 dc 00
	00 00		 cmp	 QWORD PTR $T6[rsp], 220	; 000000dcH
  000d7	73 02		 jae	 SHORT $LN12@WriteTrace
  000d9	eb 05		 jmp	 SHORT $LN13@WriteTrace
$LN12@WriteTrace:
  000db	e8 00 00 00 00	 call	 __report_rangecheckfailure
$LN13@WriteTrace:
  000e0	33 c0		 xor	 eax, eax
  000e2	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR $T6[rsp]
  000ea	66 89 44 0c 40	 mov	 WORD PTR szBuffer$[rsp+rcx], ax

; 2284 : 
; 2285 :     // If all ascii, then output.
; 2286 :     if (bAscii)

  000ef	83 bc 24 a8 01
	00 00 00	 cmp	 DWORD PTR bAscii$[rsp], 0
  000f7	0f 84 42 01 00
	00		 je	 $LN5@WriteTrace

; 2287 :     {
; 2288 :         // If less or equal to the maximum length we put out per line, then output on single line.
; 2289 :         if ( nLen <= WTS_LINELEN_MAX * nCharSize )

  000fd	6b 84 24 b0 01
	00 00 32	 imul	 eax, DWORD PTR nCharSize$[rsp], 50 ; 00000032H
  00105	39 84 24 a0 01
	00 00		 cmp	 DWORD PTR nLen$[rsp], eax
  0010c	7f 53		 jg	 SHORT $LN7@WriteTrace

; 2290 :         {
; 2291 :             _tcscat( szBuffer, _T(" <%") );

  0010e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194404
  00115	48 8d 4c 24 40	 lea	 rcx, QWORD PTR szBuffer$[rsp]
  0011a	e8 00 00 00 00	 call	 wcscat

; 2292 :             _tcscat( szBuffer, pszPrintfString );

  0011f	48 8b 94 24 28
	01 00 00	 mov	 rdx, QWORD PTR pszPrintfString$[rsp]
  00127	48 8d 4c 24 40	 lea	 rcx, QWORD PTR szBuffer$[rsp]
  0012c	e8 00 00 00 00	 call	 wcscat

; 2293 :             _tcscat( szBuffer, _T(">") );

  00131	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194405
  00138	48 8d 4c 24 40	 lea	 rcx, QWORD PTR szBuffer$[rsp]
  0013d	e8 00 00 00 00	 call	 wcscat

; 2294 :             DOTRACEV( ( szBuffer, pString ) );

  00142	4c 8b 84 24 98
	01 00 00	 mov	 r8, QWORD PTR pString$[rsp]
  0014a	48 8d 54 24 40	 lea	 rdx, QWORD PTR szBuffer$[rsp]
  0014f	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00157	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 2295 :         }

  0015c	e9 dc 00 00 00	 jmp	 $LN8@WriteTrace
$LN7@WriteTrace:

; 2296 :         // If greater than maximum line length, then break into multiple lines.
; 2297 :         else
; 2298 :         {
; 2299 :             DOTRACEV( ( szBuffer, pString ) );

  00161	4c 8b 84 24 98
	01 00 00	 mov	 r8, QWORD PTR pString$[rsp]
  00169	48 8d 54 24 40	 lea	 rdx, QWORD PTR szBuffer$[rsp]
  0016e	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00176	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 2300 :             _sntprintf( szBuffer, TSIZEOF(szBuffer), _T("  <%%.%u%s>"), WTS_LINELEN_MAX, pszPrintfString );

  0017b	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR pszPrintfString$[rsp]
  00183	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00188	41 b9 32 00 00
	00		 mov	 r9d, 50			; 00000032H
  0018e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG194406
  00195	ba 6e 00 00 00	 mov	 edx, 110		; 0000006eH
  0019a	48 8d 4c 24 40	 lea	 rcx, QWORD PTR szBuffer$[rsp]
  0019f	e8 00 00 00 00	 call	 _snwprintf

; 2301 :             NULTERMINATE(szBuffer);

  001a4	b8 02 00 00 00	 mov	 eax, 2
  001a9	48 6b c0 6d	 imul	 rax, rax, 109		; 0000006dH
  001ad	48 89 84 24 60
	01 00 00	 mov	 QWORD PTR $T7[rsp], rax
  001b5	48 81 bc 24 60
	01 00 00 dc 00
	00 00		 cmp	 QWORD PTR $T7[rsp], 220	; 000000dcH
  001c1	73 02		 jae	 SHORT $LN14@WriteTrace
  001c3	eb 05		 jmp	 SHORT $LN15@WriteTrace
$LN14@WriteTrace:
  001c5	e8 00 00 00 00	 call	 __report_rangecheckfailure
$LN15@WriteTrace:
  001ca	33 c0		 xor	 eax, eax
  001cc	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR $T7[rsp]
  001d4	66 89 44 0c 40	 mov	 WORD PTR szBuffer$[rsp+rcx], ax

; 2302 :             for ( int i = 0; i < nLen; i += WTS_LINELEN_MAX * nCharSize )

  001d9	c7 84 24 44 01
	00 00 00 00 00
	00		 mov	 DWORD PTR i$5[rsp], 0
  001e4	eb 1a		 jmp	 SHORT $LN4@WriteTrace
$LN2@WriteTrace:
  001e6	6b 84 24 b0 01
	00 00 32	 imul	 eax, DWORD PTR nCharSize$[rsp], 50 ; 00000032H
  001ee	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR i$5[rsp]
  001f5	03 c8		 add	 ecx, eax
  001f7	8b c1		 mov	 eax, ecx
  001f9	89 84 24 44 01
	00 00		 mov	 DWORD PTR i$5[rsp], eax
$LN4@WriteTrace:
  00200	8b 84 24 a0 01
	00 00		 mov	 eax, DWORD PTR nLen$[rsp]
  00207	39 84 24 44 01
	00 00		 cmp	 DWORD PTR i$5[rsp], eax
  0020e	7d 2d		 jge	 SHORT $LN3@WriteTrace

; 2303 :                 DOTRACEV( ( szBuffer, (LPBYTE) pString + i ) );

  00210	48 63 84 24 44
	01 00 00	 movsxd	 rax, DWORD PTR i$5[rsp]
  00218	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR pString$[rsp]
  00220	48 03 c8	 add	 rcx, rax
  00223	48 8b c1	 mov	 rax, rcx
  00226	4c 8b c0	 mov	 r8, rax
  00229	48 8d 54 24 40	 lea	 rdx, QWORD PTR szBuffer$[rsp]
  0022e	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00236	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace
  0023b	eb a9		 jmp	 SHORT $LN2@WriteTrace
$LN3@WriteTrace:
$LN8@WriteTrace:

; 2304 :         }
; 2305 :     }

  0023d	eb 19		 jmp	 SHORT $LN6@WriteTrace
$LN5@WriteTrace:

; 2306 : 
; 2307 :     // If non-ascii data, then output.
; 2308 :     else
; 2309 :     {
; 2310 :         DOTRACEV( ( _T("%s [Contains non-ASCII]"), szBuffer ) );

  0023f	4c 8d 44 24 40	 lea	 r8, QWORD PTR szBuffer$[rsp]
  00244	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194407
  0024b	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00253	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace
$LN6@WriteTrace:
$LN9@WriteTrace:

; 2311 :         DODUMPV( pString, nLen );
; 2312 :     }
; 2313 : }

  00258	48 8b cc	 mov	 rcx, rsp
  0025b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?WriteTraceString@COPOSVideoCapture@@QEAAXPEAXHHHPEB_WZZ$rtcFrameData
  00262	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00267	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0026f	48 33 cc	 xor	 rcx, rsp
  00272	e8 00 00 00 00	 call	 __security_check_cookie
  00277	48 81 c4 80 01
	00 00		 add	 rsp, 384		; 00000180H
  0027e	5f		 pop	 rdi
  0027f	c3		 ret	 0
?WriteTraceString@COPOSVideoCapture@@QEAAXPEAXHHHPEB_WZZ ENDP ; COPOSVideoCapture::WriteTraceString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
nLen$ = 64
i$1 = 68
pSource$2 = 72
pDest$3 = 80
nDestLen$4 = 88
$T5 = 96
$T6 = 104
tv88 = 112
tv234 = 116
this$ = 144
pszPrefix$ = 152
bstr$ = 160
?WriteTraceString@COPOSVideoCapture@@QEAAXPEB_WPEA_W@Z PROC ; COPOSVideoCapture::WriteTraceString

; 2190 : {

$LN34:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 2191 :     // Get string length.
; 2192 :     int nLen = ::SysStringLen(bstr);

  0002e	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR bstr$[rsp]
  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SysStringLen
  0003c	89 44 24 40	 mov	 DWORD PTR nLen$[rsp], eax

; 2193 : 
; 2194 :     // If empty...
; 2195 :     if ( nLen == 0 )

  00040	83 7c 24 40 00	 cmp	 DWORD PTR nLen$[rsp], 0
  00045	75 21		 jne	 SHORT $LN14@WriteTrace

; 2196 :         DOTRACEV( ( _T("%s Length 0 <>"), pszPrefix ) );

  00047	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR pszPrefix$[rsp]
  0004f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194356
  00056	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0005e	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace
  00063	e9 c7 03 00 00	 jmp	 $LN15@WriteTrace
$LN14@WriteTrace:

; 2197 : 
; 2198 :     // If not empty...
; 2199 :     else
; 2200 :     {
; 2201 :         // Check the BString for non-ascii characters, and output the string.
; 2202 :         int i;
; 2203 :         for ( i = 0; i < nLen; i++ )

  00068	c7 44 24 44 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  00070	eb 0a		 jmp	 SHORT $LN4@WriteTrace
$LN2@WriteTrace:
  00072	8b 44 24 44	 mov	 eax, DWORD PTR i$1[rsp]
  00076	ff c0		 inc	 eax
  00078	89 44 24 44	 mov	 DWORD PTR i$1[rsp], eax
$LN4@WriteTrace:
  0007c	8b 44 24 40	 mov	 eax, DWORD PTR nLen$[rsp]
  00080	39 44 24 44	 cmp	 DWORD PTR i$1[rsp], eax
  00084	7d 30		 jge	 SHORT $LN3@WriteTrace

; 2204 :             if ( bstr[i] < 0x20 || 0x7F < bstr[i] )

  00086	48 63 44 24 44	 movsxd	 rax, DWORD PTR i$1[rsp]
  0008b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR bstr$[rsp]
  00093	0f b7 04 41	 movzx	 eax, WORD PTR [rcx+rax*2]
  00097	83 f8 20	 cmp	 eax, 32			; 00000020H
  0009a	7c 16		 jl	 SHORT $LN17@WriteTrace
  0009c	48 63 44 24 44	 movsxd	 rax, DWORD PTR i$1[rsp]
  000a1	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR bstr$[rsp]
  000a9	0f b7 04 41	 movzx	 eax, WORD PTR [rcx+rax*2]
  000ad	83 f8 7f	 cmp	 eax, 127		; 0000007fH
  000b0	7e 02		 jle	 SHORT $LN16@WriteTrace
$LN17@WriteTrace:

; 2205 :                 break;

  000b2	eb 02		 jmp	 SHORT $LN3@WriteTrace
$LN16@WriteTrace:
  000b4	eb bc		 jmp	 SHORT $LN2@WriteTrace
$LN3@WriteTrace:

; 2206 :         WriteTraceString( bstr, nLen * 2, i == nLen, 2 /*wide string*/,

  000b6	8b 44 24 40	 mov	 eax, DWORD PTR nLen$[rsp]
  000ba	39 44 24 44	 cmp	 DWORD PTR i$1[rsp], eax
  000be	75 0a		 jne	 SHORT $LN30@WriteTrace
  000c0	c7 44 24 70 01
	00 00 00	 mov	 DWORD PTR tv88[rsp], 1
  000c8	eb 08		 jmp	 SHORT $LN31@WriteTrace
$LN30@WriteTrace:
  000ca	c7 44 24 70 00
	00 00 00	 mov	 DWORD PTR tv88[rsp], 0
$LN31@WriteTrace:
  000d2	8b 44 24 40	 mov	 eax, DWORD PTR nLen$[rsp]
  000d6	d1 e0		 shl	 eax, 1
  000d8	8b 4c 24 40	 mov	 ecx, DWORD PTR nLen$[rsp]
  000dc	89 4c 24 38	 mov	 DWORD PTR [rsp+56], ecx
  000e0	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR pszPrefix$[rsp]
  000e8	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  000ed	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG194359
  000f4	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  000f9	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00101	44 8b 4c 24 70	 mov	 r9d, DWORD PTR tv88[rsp]
  00106	44 8b c0	 mov	 r8d, eax
  00109	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR bstr$[rsp]
  00111	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00119	e8 00 00 00 00	 call	 ?WriteTraceString@COPOSVideoCapture@@QEAAXPEAXHHHPEB_WZZ ; COPOSVideoCapture::WriteTraceString

; 2207 :             _T("%s Length %u"), pszPrefix, nLen );
; 2208 : 
; 2209 :         // If binary conversion in effect...
; 2210 :         if ( _nBinaryConversion != OPOS_BC_NONE )

  0011e	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00126	83 b8 10 02 00
	00 00		 cmp	 DWORD PTR [rax+528], 0
  0012d	0f 84 fc 02 00
	00		 je	 $LN18@WriteTrace

; 2211 :         {
; 2212 :             #define LONIBBLE(x) ((x) & 0x0F)
; 2213 :             #define HINIBBLE(x) ((x) & 0xF0)
; 2214 : 
; 2215 :             OLECHAR* pSource = bstr;                        // Get source pointer.

  00133	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR bstr$[rsp]
  0013b	48 89 44 24 48	 mov	 QWORD PTR pSource$2[rsp], rax

; 2216 :             LPBYTE pDest = new BYTE[ ( nLen + 1 ) / 2 + 1 ];// Create destination buffer.

  00140	8b 44 24 40	 mov	 eax, DWORD PTR nLen$[rsp]
  00144	ff c0		 inc	 eax
  00146	99		 cdq
  00147	2b c2		 sub	 eax, edx
  00149	d1 f8		 sar	 eax, 1
  0014b	ff c0		 inc	 eax
  0014d	48 98		 cdqe
  0014f	48 8b c8	 mov	 rcx, rax
  00152	e8 00 00 00 00	 call	 ??_U@YAPEAX_K@Z		; operator new[]
  00157	48 89 44 24 60	 mov	 QWORD PTR $T5[rsp], rax
  0015c	48 8b 44 24 60	 mov	 rax, QWORD PTR $T5[rsp]
  00161	48 89 44 24 50	 mov	 QWORD PTR pDest$3[rsp], rax

; 2217 :             int nDestLen = nLen;

  00166	8b 44 24 40	 mov	 eax, DWORD PTR nLen$[rsp]
  0016a	89 44 24 58	 mov	 DWORD PTR nDestLen$4[rsp], eax

; 2218 :             i = 0;

  0016e	c7 44 24 44 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0

; 2219 : 
; 2220 :             // If decimal binary conversion...
; 2221 :             if ( _nBinaryConversion == OPOS_BC_DECIMAL && nDestLen % 3 == 0 )

  00176	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0017e	83 b8 10 02 00
	00 02		 cmp	 DWORD PTR [rax+528], 2
  00185	0f 85 07 01 00
	00		 jne	 $LN19@WriteTrace
  0018b	8b 44 24 58	 mov	 eax, DWORD PTR nDestLen$4[rsp]
  0018f	99		 cdq
  00190	b9 03 00 00 00	 mov	 ecx, 3
  00195	f7 f9		 idiv	 ecx
  00197	8b c2		 mov	 eax, edx
  00199	85 c0		 test	 eax, eax
  0019b	0f 85 f1 00 00
	00		 jne	 $LN19@WriteTrace

; 2222 :             {
; 2223 :                 nDestLen /= 3;                              // Bytes to create.

  001a1	8b 44 24 58	 mov	 eax, DWORD PTR nDestLen$4[rsp]
  001a5	99		 cdq
  001a6	b9 03 00 00 00	 mov	 ecx, 3
  001ab	f7 f9		 idiv	 ecx
  001ad	89 44 24 58	 mov	 DWORD PTR nDestLen$4[rsp], eax

; 2224 :                 for ( ; i < nDestLen; i++ )                 // Loop through all data.

  001b1	eb 0a		 jmp	 SHORT $LN7@WriteTrace
$LN5@WriteTrace:
  001b3	8b 44 24 44	 mov	 eax, DWORD PTR i$1[rsp]
  001b7	ff c0		 inc	 eax
  001b9	89 44 24 44	 mov	 DWORD PTR i$1[rsp], eax
$LN7@WriteTrace:
  001bd	8b 44 24 58	 mov	 eax, DWORD PTR nDestLen$4[rsp]
  001c1	39 44 24 44	 cmp	 DWORD PTR i$1[rsp], eax
  001c5	0f 8d c2 00 00
	00		 jge	 $LN6@WriteTrace

; 2225 :                 {                                           //
; 2226 :                     if ( !isdigit(pSource[0]) || !isdigit(pSource[1]) || !isdigit(pSource[2]) )

  001cb	b8 02 00 00 00	 mov	 eax, 2
  001d0	48 6b c0 00	 imul	 rax, rax, 0
  001d4	48 8b 4c 24 48	 mov	 rcx, QWORD PTR pSource$2[rsp]
  001d9	0f b7 04 01	 movzx	 eax, WORD PTR [rcx+rax]
  001dd	8b c8		 mov	 ecx, eax
  001df	e8 00 00 00 00	 call	 isdigit
  001e4	85 c0		 test	 eax, eax
  001e6	74 3a		 je	 SHORT $LN22@WriteTrace
  001e8	b8 02 00 00 00	 mov	 eax, 2
  001ed	48 6b c0 01	 imul	 rax, rax, 1
  001f1	48 8b 4c 24 48	 mov	 rcx, QWORD PTR pSource$2[rsp]
  001f6	0f b7 04 01	 movzx	 eax, WORD PTR [rcx+rax]
  001fa	8b c8		 mov	 ecx, eax
  001fc	e8 00 00 00 00	 call	 isdigit
  00201	85 c0		 test	 eax, eax
  00203	74 1d		 je	 SHORT $LN22@WriteTrace
  00205	b8 02 00 00 00	 mov	 eax, 2
  0020a	48 6b c0 02	 imul	 rax, rax, 2
  0020e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR pSource$2[rsp]
  00213	0f b7 04 01	 movzx	 eax, WORD PTR [rcx+rax]
  00217	8b c8		 mov	 ecx, eax
  00219	e8 00 00 00 00	 call	 isdigit
  0021e	85 c0		 test	 eax, eax
  00220	75 02		 jne	 SHORT $LN21@WriteTrace
$LN22@WriteTrace:

; 2227 :                         break;

  00222	eb 69		 jmp	 SHORT $LN6@WriteTrace
$LN21@WriteTrace:

; 2228 :                     pDest[i] = (BYTE)                       //  - Set destination character to

  00224	b8 02 00 00 00	 mov	 eax, 2
  00229	48 6b c0 00	 imul	 rax, rax, 0
  0022d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR pSource$2[rsp]
  00232	0f b7 04 01	 movzx	 eax, WORD PTR [rcx+rax]
  00236	83 e0 0f	 and	 eax, 15
  00239	6b c0 0a	 imul	 eax, eax, 10
  0023c	b9 02 00 00 00	 mov	 ecx, 2
  00241	48 6b c9 01	 imul	 rcx, rcx, 1
  00245	48 8b 54 24 48	 mov	 rdx, QWORD PTR pSource$2[rsp]
  0024a	0f b7 0c 0a	 movzx	 ecx, WORD PTR [rdx+rcx]
  0024e	83 e1 0f	 and	 ecx, 15
  00251	03 c1		 add	 eax, ecx
  00253	6b c0 0a	 imul	 eax, eax, 10
  00256	b9 02 00 00 00	 mov	 ecx, 2
  0025b	48 6b c9 02	 imul	 rcx, rcx, 2
  0025f	48 8b 54 24 48	 mov	 rdx, QWORD PTR pSource$2[rsp]
  00264	0f b7 0c 0a	 movzx	 ecx, WORD PTR [rdx+rcx]
  00268	83 e1 0f	 and	 ecx, 15
  0026b	03 c1		 add	 eax, ecx
  0026d	48 63 4c 24 44	 movsxd	 rcx, DWORD PTR i$1[rsp]
  00272	48 8b 54 24 50	 mov	 rdx, QWORD PTR pDest$3[rsp]
  00277	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 2229 :                         ( ( LONIBBLE(pSource[0]) * 10 +     //      Hundreds digit * 100 +
; 2230 :                               LONIBBLE(pSource[1])          //      Tens     digit *  10 +
; 2231 :                             ) * 10 +                        //
; 2232 :                             LONIBBLE(pSource[2]) );         //      Units    digit.
; 2233 :                     pSource += 3;                           //  - Move on to next source pair.

  0027a	48 8b 44 24 48	 mov	 rax, QWORD PTR pSource$2[rsp]
  0027f	48 83 c0 06	 add	 rax, 6
  00283	48 89 44 24 48	 mov	 QWORD PTR pSource$2[rsp], rax

; 2234 :                 }

  00288	e9 26 ff ff ff	 jmp	 $LN5@WriteTrace
$LN6@WriteTrace:

; 2235 :             }

  0028d	e9 c4 00 00 00	 jmp	 $LN20@WriteTrace
$LN19@WriteTrace:

; 2236 : 
; 2237 :             // If nibble binary conversion...
; 2238 :             else if ( nDestLen % 2 == 0 )

  00292	8b 44 24 58	 mov	 eax, DWORD PTR nDestLen$4[rsp]
  00296	99		 cdq
  00297	83 e0 01	 and	 eax, 1
  0029a	33 c2		 xor	 eax, edx
  0029c	2b c2		 sub	 eax, edx
  0029e	85 c0		 test	 eax, eax
  002a0	0f 85 b0 00 00
	00		 jne	 $LN23@WriteTrace

; 2239 :             {
; 2240 :                 nDestLen /= 2;                              // Bytes to create.

  002a6	8b 44 24 58	 mov	 eax, DWORD PTR nDestLen$4[rsp]
  002aa	99		 cdq
  002ab	2b c2		 sub	 eax, edx
  002ad	d1 f8		 sar	 eax, 1
  002af	89 44 24 58	 mov	 DWORD PTR nDestLen$4[rsp], eax

; 2241 :                 for ( ; i < nDestLen; i++ )                 // Loop through all data.

  002b3	eb 0a		 jmp	 SHORT $LN10@WriteTrace
$LN8@WriteTrace:
  002b5	8b 44 24 44	 mov	 eax, DWORD PTR i$1[rsp]
  002b9	ff c0		 inc	 eax
  002bb	89 44 24 44	 mov	 DWORD PTR i$1[rsp], eax
$LN10@WriteTrace:
  002bf	8b 44 24 58	 mov	 eax, DWORD PTR nDestLen$4[rsp]
  002c3	39 44 24 44	 cmp	 DWORD PTR i$1[rsp], eax
  002c7	0f 8d 89 00 00
	00		 jge	 $LN9@WriteTrace

; 2242 :                 {                                           //
; 2243 :                     if ( HINIBBLE(pSource[0]) != 0x30 || HINIBBLE(pSource[1]) != 0x30 )

  002cd	b8 02 00 00 00	 mov	 eax, 2
  002d2	48 6b c0 00	 imul	 rax, rax, 0
  002d6	48 8b 4c 24 48	 mov	 rcx, QWORD PTR pSource$2[rsp]
  002db	0f b7 04 01	 movzx	 eax, WORD PTR [rcx+rax]
  002df	25 f0 00 00 00	 and	 eax, 240		; 000000f0H
  002e4	83 f8 30	 cmp	 eax, 48			; 00000030H
  002e7	75 1c		 jne	 SHORT $LN25@WriteTrace
  002e9	b8 02 00 00 00	 mov	 eax, 2
  002ee	48 6b c0 01	 imul	 rax, rax, 1
  002f2	48 8b 4c 24 48	 mov	 rcx, QWORD PTR pSource$2[rsp]
  002f7	0f b7 04 01	 movzx	 eax, WORD PTR [rcx+rax]
  002fb	25 f0 00 00 00	 and	 eax, 240		; 000000f0H
  00300	83 f8 30	 cmp	 eax, 48			; 00000030H
  00303	74 02		 je	 SHORT $LN24@WriteTrace
$LN25@WriteTrace:

; 2244 :                         break;

  00305	eb 4f		 jmp	 SHORT $LN9@WriteTrace
$LN24@WriteTrace:

; 2245 :                     pDest[i] = (BYTE)                       //  - Set destination character to

  00307	b8 02 00 00 00	 mov	 eax, 2
  0030c	48 6b c0 00	 imul	 rax, rax, 0
  00310	48 8b 4c 24 48	 mov	 rcx, QWORD PTR pSource$2[rsp]
  00315	0f b7 04 01	 movzx	 eax, WORD PTR [rcx+rax]
  00319	83 e0 0f	 and	 eax, 15
  0031c	c1 e0 04	 shl	 eax, 4
  0031f	b9 02 00 00 00	 mov	 ecx, 2
  00324	48 6b c9 01	 imul	 rcx, rcx, 1
  00328	48 8b 54 24 48	 mov	 rdx, QWORD PTR pSource$2[rsp]
  0032d	0f b7 0c 0a	 movzx	 ecx, WORD PTR [rdx+rcx]
  00331	83 e1 0f	 and	 ecx, 15
  00334	0b c1		 or	 eax, ecx
  00336	48 63 4c 24 44	 movsxd	 rcx, DWORD PTR i$1[rsp]
  0033b	48 8b 54 24 50	 mov	 rdx, QWORD PTR pDest$3[rsp]
  00340	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 2246 :                         ( ( LONIBBLE(pSource[0]) << 4 ) |   //      first char's bits 3-0 as bits 7-4 ORed with
; 2247 :                             LONIBBLE(pSource[1]) );         //      second char's bits 3-0 as bits 3-0.
; 2248 :                     pSource += 2;                           //  - Move on to next source pair.

  00343	48 8b 44 24 48	 mov	 rax, QWORD PTR pSource$2[rsp]
  00348	48 83 c0 04	 add	 rax, 4
  0034c	48 89 44 24 48	 mov	 QWORD PTR pSource$2[rsp], rax

; 2249 :                 }

  00351	e9 5f ff ff ff	 jmp	 $LN8@WriteTrace
$LN9@WriteTrace:
$LN23@WriteTrace:
$LN20@WriteTrace:

; 2250 :             }
; 2251 : 
; 2252 :             // If was a valid binary converted string...
; 2253 :             if ( i == nDestLen )

  00356	8b 44 24 58	 mov	 eax, DWORD PTR nDestLen$4[rsp]
  0035a	39 44 24 44	 cmp	 DWORD PTR i$1[rsp], eax
  0035e	0f 85 b7 00 00
	00		 jne	 $LN26@WriteTrace

; 2254 :             {
; 2255 :                 pDest[i] = '\0';                            // End the string with a NUL.

  00364	48 63 44 24 44	 movsxd	 rax, DWORD PTR i$1[rsp]
  00369	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pDest$3[rsp]
  0036e	c6 04 01 00	 mov	 BYTE PTR [rcx+rax], 0

; 2256 : 
; 2257 :                 // Check the converted buffer for non-ascii characters, and output the string.
; 2258 :                 for ( i = 0; i < nDestLen; i++ )

  00372	c7 44 24 44 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  0037a	eb 0a		 jmp	 SHORT $LN13@WriteTrace
$LN11@WriteTrace:
  0037c	8b 44 24 44	 mov	 eax, DWORD PTR i$1[rsp]
  00380	ff c0		 inc	 eax
  00382	89 44 24 44	 mov	 DWORD PTR i$1[rsp], eax
$LN13@WriteTrace:
  00386	8b 44 24 58	 mov	 eax, DWORD PTR nDestLen$4[rsp]
  0038a	39 44 24 44	 cmp	 DWORD PTR i$1[rsp], eax
  0038e	7d 2a		 jge	 SHORT $LN12@WriteTrace

; 2259 :                     if ( pDest[i] < 0x20 || 0x7F < pDest[i] )

  00390	48 63 44 24 44	 movsxd	 rax, DWORD PTR i$1[rsp]
  00395	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pDest$3[rsp]
  0039a	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  0039e	83 f8 20	 cmp	 eax, 32			; 00000020H
  003a1	7c 13		 jl	 SHORT $LN28@WriteTrace
  003a3	48 63 44 24 44	 movsxd	 rax, DWORD PTR i$1[rsp]
  003a8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pDest$3[rsp]
  003ad	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  003b1	83 f8 7f	 cmp	 eax, 127		; 0000007fH
  003b4	7e 02		 jle	 SHORT $LN27@WriteTrace
$LN28@WriteTrace:

; 2260 :                         break;

  003b6	eb 02		 jmp	 SHORT $LN12@WriteTrace
$LN27@WriteTrace:
  003b8	eb c2		 jmp	 SHORT $LN11@WriteTrace
$LN12@WriteTrace:

; 2261 :                 WriteTraceString( pDest, nDestLen, i == nDestLen, 1 /*narrow string*/,

  003ba	8b 44 24 58	 mov	 eax, DWORD PTR nDestLen$4[rsp]
  003be	39 44 24 44	 cmp	 DWORD PTR i$1[rsp], eax
  003c2	75 0a		 jne	 SHORT $LN32@WriteTrace
  003c4	c7 44 24 74 01
	00 00 00	 mov	 DWORD PTR tv234[rsp], 1
  003cc	eb 08		 jmp	 SHORT $LN33@WriteTrace
$LN32@WriteTrace:
  003ce	c7 44 24 74 00
	00 00 00	 mov	 DWORD PTR tv234[rsp], 0
$LN33@WriteTrace:
  003d6	8b 44 24 40	 mov	 eax, DWORD PTR nLen$[rsp]
  003da	89 44 24 38	 mov	 DWORD PTR [rsp+56], eax
  003de	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR pszPrefix$[rsp]
  003e6	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  003eb	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG194371
  003f2	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  003f7	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR [rsp+32], 1
  003ff	44 8b 4c 24 74	 mov	 r9d, DWORD PTR tv234[rsp]
  00404	44 8b 44 24 58	 mov	 r8d, DWORD PTR nDestLen$4[rsp]
  00409	48 8b 54 24 50	 mov	 rdx, QWORD PTR pDest$3[rsp]
  0040e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00416	e8 00 00 00 00	 call	 ?WriteTraceString@COPOSVideoCapture@@QEAAXPEAXHHHPEB_WZZ ; COPOSVideoCapture::WriteTraceString
$LN26@WriteTrace:

; 2262 :                     _T("%s Length %u [BinConv]"), pszPrefix, nLen );
; 2263 :             }
; 2264 : 
; 2265 :             delete [] pDest;                                // Delete the destination buffer.

  0041b	48 8b 44 24 50	 mov	 rax, QWORD PTR pDest$3[rsp]
  00420	48 89 44 24 68	 mov	 QWORD PTR $T6[rsp], rax
  00425	48 8b 4c 24 68	 mov	 rcx, QWORD PTR $T6[rsp]
  0042a	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]
$LN18@WriteTrace:
$LN15@WriteTrace:

; 2266 :         }
; 2267 :     }
; 2268 : }

  0042f	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00436	5f		 pop	 rdi
  00437	c3		 ret	 0
?WriteTraceString@COPOSVideoCapture@@QEAAXPEB_WPEA_W@Z ENDP ; COPOSVideoCapture::WriteTraceString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
fTrace$ = 32
marker$4 = 56
this$ = 96
pFormat$ = 104
?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ PROC	; COPOSVideoCapture::WriteTrace

; 2120 : {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2121 :     static TCHAR s_TraceFile[] = _T("C:\\OposCCO_VideoCapture.log");
; 2122 :     static BOOL s_bFirst = TRUE;
; 2123 :     if (s_bFirst)

  0002d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_bFirst@?1??WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ@4HA, 0
  00034	74 17		 je	 SHORT $LN2@WriteTrace

; 2124 :     {
; 2125 :         ::DeleteFile(s_TraceFile);

  00036	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?s_TraceFile@?1??WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ@4PA_WA
  0003d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DeleteFileW

; 2126 :         s_bFirst = FALSE;

  00043	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_bFirst@?1??WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ@4HA, 0
$LN2@WriteTrace:

; 2127 :     }
; 2128 :     FILE* fTrace = _tfopen( s_TraceFile, _T("a") );

  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG194298
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?s_TraceFile@?1??WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ@4PA_WA
  0005b	e8 00 00 00 00	 call	 _wfopen
  00060	48 89 44 24 20	 mov	 QWORD PTR fTrace$[rsp], rax

; 2129 :     if (fTrace)

  00065	48 83 7c 24 20
	00		 cmp	 QWORD PTR fTrace$[rsp], 0
  0006b	74 37		 je	 SHORT $LN3@WriteTrace

; 2130 :     {
; 2131 :         va_list marker;
; 2132 :         va_start(marker, pFormat);

  0006d	48 8d 44 24 70	 lea	 rax, QWORD PTR pFormat$[rsp+8]
  00072	48 89 44 24 38	 mov	 QWORD PTR marker$4[rsp], rax

; 2133 :         _vftprintf( fTrace, pFormat, marker );

  00077	4c 8b 44 24 38	 mov	 r8, QWORD PTR marker$4[rsp]
  0007c	48 8b 54 24 68	 mov	 rdx, QWORD PTR pFormat$[rsp]
  00081	48 8b 4c 24 20	 mov	 rcx, QWORD PTR fTrace$[rsp]
  00086	e8 00 00 00 00	 call	 vfwprintf

; 2134 :         putc( '\n', fTrace );

  0008b	48 8b 54 24 20	 mov	 rdx, QWORD PTR fTrace$[rsp]
  00090	b9 0a 00 00 00	 mov	 ecx, 10
  00095	e8 00 00 00 00	 call	 putc

; 2135 :         fclose(fTrace);

  0009a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR fTrace$[rsp]
  0009f	e8 00 00 00 00	 call	 fclose
$LN3@WriteTrace:

; 2136 :     }
; 2137 : }

  000a4	48 8b cc	 mov	 rcx, rsp
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ$rtcFrameData
  000ae	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b3	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000b7	5f		 pop	 rdi
  000b8	c3		 ret	 0
?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ENDP	; COPOSVideoCapture::WriteTrace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.h
;	COMDAT ?SetRC@COPOSVideoCapture@@IEAAJJ@Z
_TEXT	SEGMENT
this$ = 16
nRC$ = 24
?SetRC@COPOSVideoCapture@@IEAAJJ@Z PROC			; COPOSVideoCapture::SetRC, COMDAT

; 156  :         { return _nCOResultCode = nRC; }

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000f	8b 4c 24 18	 mov	 ecx, DWORD PTR nRC$[rsp]
  00013	89 88 98 01 00
	00		 mov	 DWORD PTR [rax+408], ecx
  00019	8b 44 24 18	 mov	 eax, DWORD PTR nRC$[rsp]
  0001d	5f		 pop	 rdi
  0001e	c3		 ret	 0
?SetRC@COPOSVideoCapture@@IEAAJJ@Z ENDP			; COPOSVideoCapture::SetRC
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
RC$ = 36
this$ = 80
??1COPOSVideoCapture@@UEAA@XZ PROC			; COPOSVideoCapture::~COPOSVideoCapture

; 179  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 180  :     DOTRACE( ( _T("*Destructing") ) );

  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193009
  00025	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 181  : 
; 182  :     s_nInstances--; // Decrement instance count at start of destructor.

  0002f	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?s_nInstances@COPOSVideoCapture@@1HA ; COPOSVideoCapture::s_nInstances
  00035	ff c8		 dec	 eax
  00037	89 05 00 00 00
	00		 mov	 DWORD PTR ?s_nInstances@COPOSVideoCapture@@1HA, eax ; COPOSVideoCapture::s_nInstances

; 183  :     long RC;
; 184  :     if ( _bOpened )

  0003d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00042	0f b6 80 88 01
	00 00		 movzx	 eax, BYTE PTR [rax+392]
  00049	85 c0		 test	 eax, eax
  0004b	74 0f		 je	 SHORT $LN2@COPOSVideo

; 185  :         Close( &RC );

  0004d	48 8d 54 24 24	 lea	 rdx, QWORD PTR RC$[rsp]
  00052	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00057	e8 00 00 00 00	 call	 ?Close@COPOSVideoCapture@@UEAAJPEAJ@Z ; COPOSVideoCapture::Close
$LN2@COPOSVideo:

; 186  :     EventUninit();

  0005c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?EventUninit@COPOSVideoCapture@@IEAAXXZ ; COPOSVideoCapture::EventUninit

; 187  : 
; 188  :     DOTRACE( ( _T("") ) );

  00066	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193011
  0006d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00072	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 189  :     TRACEEXIT;
; 190  : }

  00077	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0007c	48 05 40 01 00
	00		 add	 rax, 320		; 00000140H
  00082	48 8b c8	 mov	 rcx, rax
  00085	e8 00 00 00 00	 call	 ??1?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAA@XZ
  0008a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0008f	48 05 28 01 00
	00		 add	 rax, 296		; 00000128H
  00095	48 8b c8	 mov	 rcx, rax
  00098	e8 00 00 00 00	 call	 ??1?$IPropertyNotifySinkCP@VCOPOSVideoCapture@@VCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ
  0009d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a2	48 83 c0 08	 add	 rax, 8
  000a6	48 8b c8	 mov	 rcx, rax
  000a9	e8 00 00 00 00	 call	 ??1?$CComControl@VCOPOSVideoCapture@@V?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UEAA@XZ
  000ae	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000b3	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  000b9	48 8b c8	 mov	 rcx, rax
  000bc	e8 00 00 00 00	 call	 ??1?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::~CComObjectRootEx<ATL::CComSingleThreadModel>
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1COPOSVideoCapture@@UEAA@XZ$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
??1COPOSVideoCapture@@UEAA@XZ ENDP			; COPOSVideoCapture::~COPOSVideoCapture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
hRC$ = 32
this$ = 64
?FinalConstruct@COPOSVideoCapture@@QEAAJXZ PROC		; COPOSVideoCapture::FinalConstruct

; 155  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 156  :     TRACEINIT;
; 157  :     DOTRACE( ( _T("") ) );

  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193003
  00025	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 158  :     DOTRACE( ( _T("*Constructing: %hs"), g_ControlDescription ) );

  0002f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:?g_ControlDescription@@3PADA ; g_ControlDescription
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG193004
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 159  : 
; 160  :     _bOpened = false;

  00047	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004c	c6 80 88 01 00
	00 00		 mov	 BYTE PTR [rax+392], 0

; 161  :     _nOpenResult = 0;

  00053	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00058	c7 80 8c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+396], 0

; 162  :     _nSOMajor = 0;

  00062	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00067	c7 80 90 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+400], 0

; 163  :     _nSOMinor = 0;

  00071	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00076	c7 80 94 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+404], 0

; 164  :     _nCOResultCode = -1;

  00080	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00085	c7 80 98 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [rax+408], -1

; 165  :     _nCOFreezeEventCount = 0;

  0008f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00094	c7 80 a8 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+424], 0

; 166  :     _bFreezeState = false;

  0009e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000a3	c6 80 ac 01 00
	00 00		 mov	 BYTE PTR [rax+428], 0

; 167  :     IFDEBUG( _nBinaryConversion = OPOS_BC_NONE );

  000aa	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000af	c7 80 10 02 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+528], 0

; 168  : 
; 169  :     HRESULT hRC = EventInit();

  000b9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000be	e8 00 00 00 00	 call	 ?EventInit@COPOSVideoCapture@@IEAAJXZ ; COPOSVideoCapture::EventInit
  000c3	89 44 24 20	 mov	 DWORD PTR hRC$[rsp], eax

; 170  : 
; 171  :     s_nInstances++; // Increment instance count at end of FinalConstruct.

  000c7	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?s_nInstances@COPOSVideoCapture@@1HA ; COPOSVideoCapture::s_nInstances
  000cd	ff c0		 inc	 eax
  000cf	89 05 00 00 00
	00		 mov	 DWORD PTR ?s_nInstances@COPOSVideoCapture@@1HA, eax ; COPOSVideoCapture::s_nInstances

; 172  : 
; 173  :     return hRC;

  000d5	8b 44 24 20	 mov	 eax, DWORD PTR hRC$[rsp]

; 174  : }

  000d9	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000dd	5f		 pop	 rdi
  000de	c3		 ret	 0
?FinalConstruct@COPOSVideoCapture@@QEAAJXZ ENDP		; COPOSVideoCapture::FinalConstruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureImpl.cpp
_TEXT	SEGMENT
this$ = 48
??0COPOSVideoCapture@@QEAA@XZ PROC			; COPOSVideoCapture::COPOSVideoCapture

; 149  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ??0?$IDispatchImpl@UIOPOSVideoCapture@@$1?IID_IOPOSVideoCapture@@3U_GUID@@B$1?LIBID_OposVideoCapture_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@QEAA@XZ
  0003b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 83 c0 08	 add	 rax, 8
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ??0?$CComControl@VCOPOSVideoCapture@@V?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@QEAA@XZ ; ATL::CComControl<COPOSVideoCapture,ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >::CComControl<COPOSVideoCapture,ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >
  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  00057	48 8b c8	 mov	 rcx, rax
  0005a	e8 00 00 00 00	 call	 ??0?$IPersistStreamInitImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
  0005f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00064	48 05 c0 00 00
	00		 add	 rax, 192		; 000000c0H
  0006a	48 8b c8	 mov	 rcx, rax
  0006d	e8 00 00 00 00	 call	 ??0?$IOleControlImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
  00072	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00077	48 05 c8 00 00
	00		 add	 rax, 200		; 000000c8H
  0007d	48 8b c8	 mov	 rcx, rax
  00080	e8 00 00 00 00	 call	 ??0?$IOleObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
  00085	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0008a	48 05 d0 00 00
	00		 add	 rax, 208		; 000000d0H
  00090	48 8b c8	 mov	 rcx, rax
  00093	e8 00 00 00 00	 call	 ??0?$IOleInPlaceActiveObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
  00098	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 05 d8 00 00
	00		 add	 rax, 216		; 000000d8H
  000a3	48 8b c8	 mov	 rcx, rax
  000a6	e8 00 00 00 00	 call	 ??0?$IViewObjectExImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
  000ab	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000b0	48 05 e0 00 00
	00		 add	 rax, 224		; 000000e0H
  000b6	48 8b c8	 mov	 rcx, rax
  000b9	e8 00 00 00 00	 call	 ??0?$IOleInPlaceObjectWindowlessImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
  000be	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000c3	48 05 e8 00 00
	00		 add	 rax, 232		; 000000e8H
  000c9	48 8b c8	 mov	 rcx, rax
  000cc	e8 00 00 00 00	 call	 ??0?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
  000d1	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000d6	48 05 f0 00 00
	00		 add	 rax, 240		; 000000f0H
  000dc	48 8b c8	 mov	 rcx, rax
  000df	e8 00 00 00 00	 call	 ??0?$IPersistStorageImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
  000e4	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000e9	48 05 f8 00 00
	00		 add	 rax, 248		; 000000f8H
  000ef	48 8b c8	 mov	 rcx, rax
  000f2	e8 00 00 00 00	 call	 ??0?$ISpecifyPropertyPagesImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
  000f7	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000fc	48 05 00 01 00
	00		 add	 rax, 256		; 00000100H
  00102	48 8b c8	 mov	 rcx, rax
  00105	e8 00 00 00 00	 call	 ??0?$IQuickActivateImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
  0010a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0010f	48 05 08 01 00
	00		 add	 rax, 264		; 00000108H
  00115	48 8b c8	 mov	 rcx, rax
  00118	e8 00 00 00 00	 call	 ??0?$IDataObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
  0011d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00122	48 05 10 01 00
	00		 add	 rax, 272		; 00000110H
  00128	48 8b c8	 mov	 rcx, rax
  0012b	e8 00 00 00 00	 call	 ??0?$IProvideClassInfo2Impl@$1?CLSID_OPOSVideoCapture@@3U_GUID@@B$1?DIID__IOPOSVideoCaptureEvents@@3U2@B$1?LIBID_OposVideoCapture_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@QEAA@XZ
  00130	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00135	48 05 18 01 00
	00		 add	 rax, 280		; 00000118H
  0013b	48 8b c8	 mov	 rcx, rax
  0013e	e8 00 00 00 00	 call	 ??0?$IObjectSafetyImpl@VCOPOSVideoCapture@@$02@ATL@@QEAA@XZ ; ATL::IObjectSafetyImpl<COPOSVideoCapture,3>::IObjectSafetyImpl<COPOSVideoCapture,3>
  00143	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00148	48 05 28 01 00
	00		 add	 rax, 296		; 00000128H
  0014e	48 8b c8	 mov	 rcx, rax
  00151	e8 00 00 00 00	 call	 ??0?$IPropertyNotifySinkCP@VCOPOSVideoCapture@@VCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ

; 148  :     IFDEBUG( : CProxy_IOPOSEvents< COPOSVideoCapture >(this) )

  00156	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0015b	48 05 40 01 00
	00		 add	 rax, 320		; 00000140H
  00161	48 8b 54 24 30	 mov	 rdx, QWORD PTR this$[rsp]
  00166	48 8b c8	 mov	 rcx, rax
  00169	e8 00 00 00 00	 call	 ??0?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAA@PEAVCOPOSVideoCapture@@@Z ; CProxy_IOPOSEvents<COPOSVideoCapture>::CProxy_IOPOSEvents<COPOSVideoCapture>

; 150  : }

  0016e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00173	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00177	5f		 pop	 rdi
  00178	c3		 ret	 0
??0COPOSVideoCapture@@QEAA@XZ ENDP			; COPOSVideoCapture::COPOSVideoCapture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAA@XZ PROC ; CProxy_IOPOSEvents<COPOSVideoCapture>::~CProxy_IOPOSEvents<COPOSVideoCapture>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::~IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAA@XZ ENDP ; CProxy_IOPOSEvents<COPOSVideoCapture>::~CProxy_IOPOSEvents<COPOSVideoCapture>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureCP.h
;	COMDAT ?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z
_TEXT	SEGMENT
pNameOrig$ = 80
DispParms$ = 104
DispID$ = 148
hRC$5 = 164
this$ = 192
pUnkSink$ = 200
rgvarg$ = 208
cArgs$ = 216
FirstDispID$ = 224
pName$ = 232
MyDispID$ = 240
?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z PROC ; CProxy_IOPOSEvents<COPOSVideoCapture>::FireTheEvent, COMDAT

; 161  :     {

$LN9:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+192]

; 162  :         IFDEBUG( const OLECHAR* pNameOrig = pName );

  00033	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR pName$[rsp]
  0003b	48 89 44 24 50	 mov	 QWORD PTR pNameOrig$[rsp], rax

; 163  : 
; 164  :         // Declare and initialize the dispatch parameters and dispatch ID.
; 165  :         OposDispParms DispParms( rgvarg, cArgs );

  00040	44 8b 84 24 d8
	00 00 00	 mov	 r8d, DWORD PTR cArgs$[rsp]
  00048	48 8b 94 24 d0
	00 00 00	 mov	 rdx, QWORD PTR rgvarg$[rsp]
  00050	48 8d 4c 24 68	 lea	 rcx, QWORD PTR DispParms$[rsp]
  00055	e8 00 00 00 00	 call	 ??0OposDispParms@@QEAA@PEAVOposVariant@@H@Z ; OposDispParms::OposDispParms

; 166  :         DISPID DispID = FirstDispID;

  0005a	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR FirstDispID$[rsp]
  00062	8b 00		 mov	 eax, DWORD PTR [rax]
  00064	89 84 24 94 00
	00 00		 mov	 DWORD PTR DispID$[rsp], eax

; 167  :         // If not first connection (not likely for our controls!) or first dispatch ID not yet looked up...
; 168  :         if ( _nCOConnectionIndex != 0 || FirstDispID < 0 )

  0006b	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00073	83 78 2c 00	 cmp	 DWORD PTR [rax+44], 0
  00077	75 11		 jne	 SHORT $LN3@FireTheEve
  00079	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR FirstDispID$[rsp]
  00081	83 38 00	 cmp	 DWORD PTR [rax], 0
  00084	0f 8d a4 00 00
	00		 jge	 $LN2@FireTheEve
$LN3@FireTheEve:

; 169  :         {
; 170  :             // Get the dispatch ID of the event we want to call.
; 171  :             //   If not implemented, then assume that client used typelib to use our default DispIDs.
; 172  :             //   If other failure, the can't fire.
; 173  :             HRESULT hRC = _pCPDispatch->GetIDsOfNames( IID_NULL, const_cast<OLECHAR**>(&pName), 1, LOCALE_USER_DEFAULT, &DispID );

  0008a	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00092	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  00096	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009e	48 8b 49 30	 mov	 rcx, QWORD PTR [rcx+48]
  000a2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a5	48 8d 94 24 94
	00 00 00	 lea	 rdx, QWORD PTR DispID$[rsp]
  000ad	48 89 54 24 28	 mov	 QWORD PTR [rsp+40], rdx
  000b2	c7 44 24 20 00
	04 00 00	 mov	 DWORD PTR [rsp+32], 1024 ; 00000400H
  000ba	41 b9 01 00 00
	00		 mov	 r9d, 1
  000c0	4c 8d 84 24 e8
	00 00 00	 lea	 r8, QWORD PTR pName$[rsp]
  000c8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:GUID_NULL
  000cf	ff 50 28	 call	 QWORD PTR [rax+40]
  000d2	89 84 24 a4 00
	00 00		 mov	 DWORD PTR hRC$5[rsp], eax

; 174  :             if ( hRC == E_NOTIMPL )

  000d9	81 bc 24 a4 00
	00 00 01 40 00
	80		 cmp	 DWORD PTR hRC$5[rsp], -2147467263 ; ffffffff80004001H
  000e4	75 10		 jne	 SHORT $LN4@FireTheEve

; 175  :                 DispID = MyDispID;

  000e6	8b 84 24 f0 00
	00 00		 mov	 eax, DWORD PTR MyDispID$[rsp]
  000ed	89 84 24 94 00
	00 00		 mov	 DWORD PTR DispID$[rsp], eax
  000f4	eb 19		 jmp	 SHORT $LN5@FireTheEve
$LN4@FireTheEve:

; 176  :             else if ( hRC != S_OK )

  000f6	83 bc 24 a4 00
	00 00 00	 cmp	 DWORD PTR hRC$5[rsp], 0
  000fe	74 0f		 je	 SHORT $LN5@FireTheEve

; 177  :                 return;

  00100	48 8d 4c 24 68	 lea	 rcx, QWORD PTR DispParms$[rsp]
  00105	e8 00 00 00 00	 call	 ??1OposDispParms@@QEAA@XZ ; OposDispParms::~OposDispParms
  0010a	e9 b7 00 00 00	 jmp	 $LN1@FireTheEve
$LN5@FireTheEve:

; 178  :             // If first connection, then save in cache for next time.
; 179  :             if ( _nCOConnectionIndex == 0 )

  0010f	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00117	83 78 2c 00	 cmp	 DWORD PTR [rax+44], 0
  0011b	75 11		 jne	 SHORT $LN2@FireTheEve

; 180  :                 FirstDispID = DispID;

  0011d	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR FirstDispID$[rsp]
  00125	8b 8c 24 94 00
	00 00		 mov	 ecx, DWORD PTR DispID$[rsp]
  0012c	89 08		 mov	 DWORD PTR [rax], ecx
$LN2@FireTheEve:

; 181  :         }
; 182  :         // Call the event.
; 183  :         IFDEBUG( _pOposControl->DOTRACEV( ( _T("*FireTheEvent: Delivering %ls; Sink 0x%X; DispID %d"), pNameOrig, pUnkSink, DispID ) ) );

  0012e	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR DispID$[rsp]
  00135	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00139	4c 8b 8c 24 c8
	00 00 00	 mov	 r9, QWORD PTR pUnkSink$[rsp]
  00141	4c 8b 44 24 50	 mov	 r8, QWORD PTR pNameOrig$[rsp]
  00146	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1GI@CMBOLMBG@?$AA?$CK?$AAF?$AAi?$AAr?$AAe?$AAT?$AAh?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5@
  0014d	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00155	48 8b 48 38	 mov	 rcx, QWORD PTR [rax+56]
  00159	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 184  :         _pCPDispatch->Invoke( DispID, IID_NULL, LOCALE_USER_DEFAULT, DISPATCH_METHOD, &DispParms, NULL, NULL, NULL );

  0015e	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00166	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  0016a	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00172	48 8b 49 30	 mov	 rcx, QWORD PTR [rcx+48]
  00176	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00179	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR [rsp+64], 0
  00182	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR [rsp+56], 0
  0018b	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR [rsp+48], 0
  00194	48 8d 54 24 68	 lea	 rdx, QWORD PTR DispParms$[rsp]
  00199	48 89 54 24 28	 mov	 QWORD PTR [rsp+40], rdx
  0019e	66 c7 44 24 20
	01 00		 mov	 WORD PTR [rsp+32], 1
  001a5	41 b9 00 04 00
	00		 mov	 r9d, 1024		; 00000400H
  001ab	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:GUID_NULL
  001b2	8b 94 24 94 00
	00 00		 mov	 edx, DWORD PTR DispID$[rsp]
  001b9	ff 50 30	 call	 QWORD PTR [rax+48]

; 185  :     }

  001bc	48 8d 4c 24 68	 lea	 rcx, QWORD PTR DispParms$[rsp]
  001c1	e8 00 00 00 00	 call	 ??1OposDispParms@@QEAA@XZ ; OposDispParms::~OposDispParms
$LN1@FireTheEve:
  001c6	48 8b cc	 mov	 rcx, rsp
  001c9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z$rtcFrameData
  001d0	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001d5	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  001dc	5f		 pop	 rdi
  001dd	c3		 ret	 0
?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z ENDP ; CProxy_IOPOSEvents<COPOSVideoCapture>::FireTheEvent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureCP.h
;	COMDAT ?Unadvise@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@UEAAJK@Z
_TEXT	SEGMENT
this$ = 48
dwCookie$ = 56
?Unadvise@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@UEAAJK@Z PROC ; CProxy_IOPOSEvents<COPOSVideoCapture>::Unadvise, COMDAT

; 141  :     {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 142  :         _pOposControl->DOTRACEV( ( _T("*Unadvise: Cookie 0x%X"), dwCookie ) );

  00022	44 8b 44 24 38	 mov	 r8d, DWORD PTR dwCookie$[rsp]
  00027	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CO@NKNAIIAP@?$AA?$CK?$AAU?$AAn?$AAa?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?3?$AA?5?$AAC?$AAo?$AAo?$AAk@
  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00033	48 8b 48 38	 mov	 rcx, QWORD PTR [rax+56]
  00037	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 143  :         return IConnectionPointImpl<T, &DIID__IOPOSVideoCaptureEvents, CComDynamicUnkArray>::Unadvise(dwCookie);

  0003c	8b 54 24 38	 mov	 edx, DWORD PTR dwCookie$[rsp]
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	e8 00 00 00 00	 call	 ?Unadvise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJK@Z ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::Unadvise

; 144  :     }

  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
?Unadvise@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@UEAAJK@Z ENDP ; CProxy_IOPOSEvents<COPOSVideoCapture>::Unadvise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureCP.h
;	COMDAT ?Advise@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@UEAAJPEAUIUnknown@@PEAK@Z
_TEXT	SEGMENT
hr$ = 32
this$ = 64
pUnkSink$ = 72
pdwCookie$ = 80
?Advise@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@UEAAJPEAUIUnknown@@PEAK@Z PROC ; CProxy_IOPOSEvents<COPOSVideoCapture>::Advise, COMDAT

; 134  :     {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 135  :         HRESULT hr = IConnectionPointImpl<T, &DIID__IOPOSVideoCaptureEvents, CComDynamicUnkArray>::Advise( pUnkSink, pdwCookie );

  00028	4c 8b 44 24 50	 mov	 r8, QWORD PTR pdwCookie$[rsp]
  0002d	48 8b 54 24 48	 mov	 rdx, QWORD PTR pUnkSink$[rsp]
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?Advise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAUIUnknown@@PEAK@Z ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::Advise
  0003c	89 44 24 20	 mov	 DWORD PTR hr$[rsp], eax

; 136  :         _pOposControl->DOTRACEV( ( _T("*Advise: Sink 0x%X; Cookie 0x%X"), pUnkSink, *pdwCookie ) );

  00040	48 8b 44 24 50	 mov	 rax, QWORD PTR pdwCookie$[rsp]
  00045	44 8b 08	 mov	 r9d, DWORD PTR [rax]
  00048	4c 8b 44 24 48	 mov	 r8, QWORD PTR pUnkSink$[rsp]
  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EA@IMKHEMDJ@?$AA?$CK?$AAA?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?3?$AA?5?$AAS?$AAi?$AAn?$AAk?$AA?5?$AA0@
  00054	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 8b 48 38	 mov	 rcx, QWORD PTR [rax+56]
  0005d	e8 00 00 00 00	 call	 ?WriteTrace@COPOSVideoCapture@@QEAAXPEB_WZZ ; COPOSVideoCapture::WriteTrace

; 137  :         return hr;

  00062	8b 44 24 20	 mov	 eax, DWORD PTR hr$[rsp]

; 138  :     }

  00066	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006a	5f		 pop	 rdi
  0006b	c3		 ret	 0
?Advise@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@UEAAJPEAUIUnknown@@PEAK@Z ENDP ; CProxy_IOPOSEvents<COPOSVideoCapture>::Advise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureCP.h
;	COMDAT ??0?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAA@PEAVCOPOSVideoCapture@@@Z
_TEXT	SEGMENT
this$ = 48
pOposControl$ = 56
??0?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAA@PEAVCOPOSVideoCapture@@@Z PROC ; CProxy_IOPOSEvents<COPOSVideoCapture>::CProxy_IOPOSEvents<COPOSVideoCapture>, COMDAT

; 122  :     CProxy_IOPOSEvents( IFDEBUG( COPOSVideoCapture* pOposControl ) )

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 123  :     {

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ
  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@6B@
  00039	48 89 08	 mov	 QWORD PTR [rax], rcx

; 124  :         _DIDData = -1;

  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00041	c7 40 18 ff ff
	ff ff		 mov	 DWORD PTR [rax+24], -1

; 125  :         _DIDDirectIO = -1;

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004d	c7 40 1c ff ff
	ff ff		 mov	 DWORD PTR [rax+28], -1

; 126  :         _DIDError = -1;

  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	c7 40 20 ff ff
	ff ff		 mov	 DWORD PTR [rax+32], -1

; 127  :         _DIDOutput = -1;

  00060	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00065	c7 40 24 ff ff
	ff ff		 mov	 DWORD PTR [rax+36], -1

; 128  :         _DIDStatus = -1;

  0006c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00071	c7 40 28 ff ff
	ff ff		 mov	 DWORD PTR [rax+40], -1

; 129  :         IFDEBUG( _pOposControl = pOposControl );

  00078	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0007d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pOposControl$[rsp]
  00082	48 89 48 38	 mov	 QWORD PTR [rax+56], rcx

; 130  :     }

  00086	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0008b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??0?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAA@PEAVCOPOSVideoCapture@@@Z ENDP ; CProxy_IOPOSEvents<COPOSVideoCapture>::CProxy_IOPOSEvents<COPOSVideoCapture>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureCP.h
;	COMDAT ?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJ@Z
_TEXT	SEGMENT
pT$ = 64
var$ = 88
nConnections$ = 132
sp$5 = 152
tv68 = 168
tv155 = 176
this$ = 208
Data$ = 216
?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJ@Z PROC ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_StatusUpdateEvent, COMDAT

; 101  :     {

$LN9:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+208]

; 102  :         T* pT = static_cast<T*>(this);

  00028	48 83 bc 24 d0
	00 00 00 00	 cmp	 QWORD PTR this$[rsp], 0
  00031	74 18		 je	 SHORT $LN7@Fire_Statu
  00033	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 2d 40 01 00
	00		 sub	 rax, 320		; 00000140H
  00041	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR tv68[rsp], rax
  00049	eb 0c		 jmp	 SHORT $LN8@Fire_Statu
$LN7@Fire_Statu:
  0004b	48 c7 84 24 a8
	00 00 00 00 00
	00 00		 mov	 QWORD PTR tv68[rsp], 0
$LN8@Fire_Statu:
  00057	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR tv68[rsp]
  0005f	48 89 44 24 40	 mov	 QWORD PTR pT$[rsp], rax

; 103  :         OposVariant var;

  00064	48 8d 4c 24 58	 lea	 rcx, QWORD PTR var$[rsp]
  00069	e8 00 00 00 00	 call	 ??0OposVariant@@QEAA@XZ	; OposVariant::OposVariant

; 104  :         int nConnections = m_vec.GetSize();

  0006e	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00076	48 83 c0 08	 add	 rax, 8
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ?GetSize@CComDynamicUnkArray@ATL@@QEBAHXZ ; ATL::CComDynamicUnkArray::GetSize
  00082	89 84 24 84 00
	00 00		 mov	 DWORD PTR nConnections$[rsp], eax

; 105  : 
; 106  :         for (_nCOConnectionIndex = 0; _nCOConnectionIndex < nConnections; _nCOConnectionIndex++)

  00089	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00091	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [rax+44], 0
  00098	eb 18		 jmp	 SHORT $LN4@Fire_Statu
$LN2@Fire_Statu:
  0009a	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000a2	8b 40 2c	 mov	 eax, DWORD PTR [rax+44]
  000a5	ff c0		 inc	 eax
  000a7	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000af	89 41 2c	 mov	 DWORD PTR [rcx+44], eax
$LN4@Fire_Statu:
  000b2	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000ba	8b 8c 24 84 00
	00 00		 mov	 ecx, DWORD PTR nConnections$[rsp]
  000c1	39 48 2c	 cmp	 DWORD PTR [rax+44], ecx
  000c4	0f 8d f8 00 00
	00		 jge	 $LN3@Fire_Statu

; 107  :         {
; 108  :             pT->Lock();

  000ca	48 8b 44 24 40	 mov	 rax, QWORD PTR pT$[rsp]
  000cf	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  000d5	48 8b c8	 mov	 rcx, rax
  000d8	e8 00 00 00 00	 call	 ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock

; 109  :             CComPtr<IUnknown> sp = m_vec.GetAt(_nCOConnectionIndex);

  000dd	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e5	48 83 c0 08	 add	 rax, 8
  000e9	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000f1	8b 51 2c	 mov	 edx, DWORD PTR [rcx+44]
  000f4	48 8b c8	 mov	 rcx, rax
  000f7	e8 00 00 00 00	 call	 ?GetAt@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@H@Z ; ATL::CComDynamicUnkArray::GetAt
  000fc	48 8b d0	 mov	 rdx, rax
  000ff	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR sp$5[rsp]
  00107	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QEAA@PEAUIUnknown@@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 110  :             pT->Unlock();

  0010c	48 8b 44 24 40	 mov	 rax, QWORD PTR pT$[rsp]
  00111	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  00117	48 8b c8	 mov	 rcx, rax
  0011a	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 111  :             _pCPDispatch = reinterpret_cast<IDispatch*>(sp.p);

  0011f	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00127	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR sp$5[rsp]
  0012f	48 89 48 30	 mov	 QWORD PTR [rax+48], rcx

; 112  :             if (_pCPDispatch != NULL)

  00133	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0013b	48 83 78 30 00	 cmp	 QWORD PTR [rax+48], 0
  00140	74 6e		 je	 SHORT $LN5@Fire_Statu

; 113  :             {
; 114  :                 var.SetLONG( Data );

  00142	8b 94 24 d8 00
	00 00		 mov	 edx, DWORD PTR Data$[rsp]
  00149	48 8d 4c 24 58	 lea	 rcx, QWORD PTR var$[rsp]
  0014e	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QEAAXJ@Z ; OposVariant::SetLONG

; 115  :                 FireTheEvent( FEUNKNOWN &var, 1, _DIDStatus, L"StatusUpdateEvent", 5 );

  00153	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0015b	48 83 c0 28	 add	 rax, 40			; 00000028H
  0015f	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR tv155[rsp], rax
  00167	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR sp$5[rsp]
  0016f	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIUnknown@@@ATL@@QEBAPEAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
  00174	c7 44 24 30 05
	00 00 00	 mov	 DWORD PTR [rsp+48], 5
  0017c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CE@PGFMOFKI@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe@
  00183	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00188	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR tv155[rsp]
  00190	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00195	41 b9 01 00 00
	00		 mov	 r9d, 1
  0019b	4c 8d 44 24 58	 lea	 r8, QWORD PTR var$[rsp]
  001a0	48 8b d0	 mov	 rdx, rax
  001a3	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001ab	e8 00 00 00 00	 call	 ?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z ; CProxy_IOPOSEvents<COPOSVideoCapture>::FireTheEvent
$LN5@Fire_Statu:

; 116  :             }
; 117  :         }

  001b0	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR sp$5[rsp]
  001b8	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ
  001bd	e9 d8 fe ff ff	 jmp	 $LN2@Fire_Statu
$LN3@Fire_Statu:

; 118  :     }

  001c2	48 8d 4c 24 58	 lea	 rcx, QWORD PTR var$[rsp]
  001c7	e8 00 00 00 00	 call	 ??1OposVariant@@QEAA@XZ	; OposVariant::~OposVariant
  001cc	48 8b cc	 mov	 rcx, rsp
  001cf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJ@Z$rtcFrameData
  001d6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001db	48 81 c4 c0 00
	00 00		 add	 rsp, 192		; 000000c0H
  001e2	5f		 pop	 rdi
  001e3	c3		 ret	 0
?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJ@Z ENDP ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_StatusUpdateEvent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureCP.h
;	COMDAT ?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z
_TEXT	SEGMENT
pT$ = 64
vars$ = 96
nConnections$ = 228
sp$6 = 248
hr$7 = 276
tv68 = 304
tv175 = 312
__$ArrayPad$ = 320
this$ = 352
ResultCode$ = 360
ResultCodeExtended$ = 368
ErrorLocus$ = 376
pErrorResponse$ = 384
?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z PROC ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_ErrorEvent, COMDAT

; 75   :     {

$LN9:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 81 ec 50 01
	00 00		 sub	 rsp, 336		; 00000150H
  0001b	48 8b fc	 mov	 rdi, rsp
  0001e	b9 54 00 00 00	 mov	 ecx, 84			; 00000054H
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR [rsp+352]
  00032	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00039	48 33 c4	 xor	 rax, rsp
  0003c	48 89 84 24 40
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 76   :         T* pT = static_cast<T*>(this);

  00044	48 83 bc 24 60
	01 00 00 00	 cmp	 QWORD PTR this$[rsp], 0
  0004d	74 18		 je	 SHORT $LN7@Fire_Error
  0004f	48 8b 84 24 60
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00057	48 2d 40 01 00
	00		 sub	 rax, 320		; 00000140H
  0005d	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR tv68[rsp], rax
  00065	eb 0c		 jmp	 SHORT $LN8@Fire_Error
$LN7@Fire_Error:
  00067	48 c7 84 24 30
	01 00 00 00 00
	00 00		 mov	 QWORD PTR tv68[rsp], 0
$LN8@Fire_Error:
  00073	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR tv68[rsp]
  0007b	48 89 44 24 40	 mov	 QWORD PTR pT$[rsp], rax

; 77   :         OposVariant vars[4];

  00080	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??0OposVariant@@QEAA@XZ ; OposVariant::OposVariant
  00087	41 b8 04 00 00
	00		 mov	 r8d, 4
  0008d	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00092	48 8d 4c 24 60	 lea	 rcx, QWORD PTR vars$[rsp]
  00097	e8 00 00 00 00	 call	 ??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 78   :         int nConnections = m_vec.GetSize();

  0009c	48 8b 84 24 60
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000a4	48 83 c0 08	 add	 rax, 8
  000a8	48 8b c8	 mov	 rcx, rax
  000ab	e8 00 00 00 00	 call	 ?GetSize@CComDynamicUnkArray@ATL@@QEBAHXZ ; ATL::CComDynamicUnkArray::GetSize
  000b0	89 84 24 e4 00
	00 00		 mov	 DWORD PTR nConnections$[rsp], eax

; 79   : 
; 80   :         for (_nCOConnectionIndex = 0; _nCOConnectionIndex < nConnections; _nCOConnectionIndex++)

  000b7	48 8b 84 24 60
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000bf	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [rax+44], 0
  000c6	eb 18		 jmp	 SHORT $LN4@Fire_Error
$LN2@Fire_Error:
  000c8	48 8b 84 24 60
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000d0	8b 40 2c	 mov	 eax, DWORD PTR [rax+44]
  000d3	ff c0		 inc	 eax
  000d5	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000dd	89 41 2c	 mov	 DWORD PTR [rcx+44], eax
$LN4@Fire_Error:
  000e0	48 8b 84 24 60
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e8	8b 8c 24 e4 00
	00 00		 mov	 ecx, DWORD PTR nConnections$[rsp]
  000ef	39 48 2c	 cmp	 DWORD PTR [rax+44], ecx
  000f2	0f 8d 68 01 00
	00		 jge	 $LN3@Fire_Error

; 81   :         {
; 82   :             pT->Lock();

  000f8	48 8b 44 24 40	 mov	 rax, QWORD PTR pT$[rsp]
  000fd	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  00103	48 8b c8	 mov	 rcx, rax
  00106	e8 00 00 00 00	 call	 ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock

; 83   :             CComPtr<IUnknown> sp = m_vec.GetAt(_nCOConnectionIndex);

  0010b	48 8b 84 24 60
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00113	48 83 c0 08	 add	 rax, 8
  00117	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0011f	8b 51 2c	 mov	 edx, DWORD PTR [rcx+44]
  00122	48 8b c8	 mov	 rcx, rax
  00125	e8 00 00 00 00	 call	 ?GetAt@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@H@Z ; ATL::CComDynamicUnkArray::GetAt
  0012a	48 8b d0	 mov	 rdx, rax
  0012d	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR sp$6[rsp]
  00135	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QEAA@PEAUIUnknown@@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 84   :             pT->Unlock();

  0013a	48 8b 44 24 40	 mov	 rax, QWORD PTR pT$[rsp]
  0013f	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  00145	48 8b c8	 mov	 rcx, rax
  00148	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 85   :             _pCPDispatch = reinterpret_cast<IDispatch*>(sp.p);

  0014d	48 8b 84 24 60
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00155	48 8b 8c 24 f8
	00 00 00	 mov	 rcx, QWORD PTR sp$6[rsp]
  0015d	48 89 48 30	 mov	 QWORD PTR [rax+48], rcx

; 86   :             if (_pCPDispatch != NULL)

  00161	48 8b 84 24 60
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00169	48 83 78 30 00	 cmp	 QWORD PTR [rax+48], 0
  0016e	0f 84 da 00 00
	00		 je	 $LN5@Fire_Error

; 87   :             {
; 88   :                 HRESULT hr;
; 89   :                 vars[3].SetLONG( ResultCode );

  00174	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00179	48 6b c0 03	 imul	 rax, rax, 3
  0017d	48 8d 44 04 60	 lea	 rax, QWORD PTR vars$[rsp+rax]
  00182	8b 94 24 68 01
	00 00		 mov	 edx, DWORD PTR ResultCode$[rsp]
  00189	48 8b c8	 mov	 rcx, rax
  0018c	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QEAAXJ@Z ; OposVariant::SetLONG

; 90   :                 vars[2].SetLONG( ResultCodeExtended );

  00191	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00196	48 6b c0 02	 imul	 rax, rax, 2
  0019a	48 8d 44 04 60	 lea	 rax, QWORD PTR vars$[rsp+rax]
  0019f	8b 94 24 70 01
	00 00		 mov	 edx, DWORD PTR ResultCodeExtended$[rsp]
  001a6	48 8b c8	 mov	 rcx, rax
  001a9	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QEAAXJ@Z ; OposVariant::SetLONG

; 91   :                 vars[1].SetLONG( ErrorLocus );

  001ae	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  001b3	48 6b c0 01	 imul	 rax, rax, 1
  001b7	48 8d 44 04 60	 lea	 rax, QWORD PTR vars$[rsp+rax]
  001bc	8b 94 24 78 01
	00 00		 mov	 edx, DWORD PTR ErrorLocus$[rsp]
  001c3	48 8b c8	 mov	 rcx, rax
  001c6	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QEAAXJ@Z ; OposVariant::SetLONG

; 92   :                 vars[0].SetLONG_Ptr( pErrorResponse, hr );

  001cb	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  001d0	48 6b c0 00	 imul	 rax, rax, 0
  001d4	48 8d 44 04 60	 lea	 rax, QWORD PTR vars$[rsp+rax]
  001d9	4c 8d 84 24 14
	01 00 00	 lea	 r8, QWORD PTR hr$7[rsp]
  001e1	48 8b 94 24 80
	01 00 00	 mov	 rdx, QWORD PTR pErrorResponse$[rsp]
  001e9	48 8b c8	 mov	 rcx, rax
  001ec	e8 00 00 00 00	 call	 ?SetLONG_Ptr@OposVariant@@QEAAXPEAJAEAJ@Z ; OposVariant::SetLONG_Ptr

; 93   :                 FireTheEvent( FEUNKNOWN vars, 4, _DIDError, L"ErrorEvent", 3 );

  001f1	48 8b 84 24 60
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001f9	48 83 c0 20	 add	 rax, 32			; 00000020H
  001fd	48 89 84 24 38
	01 00 00	 mov	 QWORD PTR tv175[rsp], rax
  00205	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR sp$6[rsp]
  0020d	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIUnknown@@@ATL@@QEBAPEAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
  00212	c7 44 24 30 03
	00 00 00	 mov	 DWORD PTR [rsp+48], 3
  0021a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1BG@LODEBHDD@?$AAE?$AAr?$AAr?$AAo?$AAr?$AAE?$AAv?$AAe?$AAn?$AAt@
  00221	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00226	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR tv175[rsp]
  0022e	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00233	41 b9 04 00 00
	00		 mov	 r9d, 4
  00239	4c 8d 44 24 60	 lea	 r8, QWORD PTR vars$[rsp]
  0023e	48 8b d0	 mov	 rdx, rax
  00241	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00249	e8 00 00 00 00	 call	 ?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z ; CProxy_IOPOSEvents<COPOSVideoCapture>::FireTheEvent
$LN5@Fire_Error:

; 94   :             }
; 95   :         }

  0024e	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR sp$6[rsp]
  00256	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ
  0025b	e9 68 fe ff ff	 jmp	 $LN2@Fire_Error
$LN3@Fire_Error:

; 96   :     }

  00260	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1OposVariant@@QEAA@XZ ; OposVariant::~OposVariant
  00267	41 b8 04 00 00
	00		 mov	 r8d, 4
  0026d	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00272	48 8d 4c 24 60	 lea	 rcx, QWORD PTR vars$[rsp]
  00277	e8 00 00 00 00	 call	 ??_I@YAXPEAX_K1P6AX0@Z@Z
  0027c	48 8b cc	 mov	 rcx, rsp
  0027f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z$rtcFrameData
  00286	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0028b	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00293	48 33 cc	 xor	 rcx, rsp
  00296	e8 00 00 00 00	 call	 __security_check_cookie
  0029b	48 81 c4 50 01
	00 00		 add	 rsp, 336		; 00000150H
  002a2	5f		 pop	 rdi
  002a3	c3		 ret	 0
?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJJJPEAJ@Z ENDP ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_ErrorEvent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zVideoCapture\VideoCaptureCP.h
;	COMDAT ?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z
_TEXT	SEGMENT
pT$ = 64
vars$ = 96
nConnections$ = 196
sp$6 = 216
hr$7 = 244
tv68 = 272
tv172 = 280
__$ArrayPad$ = 288
this$ = 320
EventNumber$ = 328
pData$ = 336
pString$ = 344
?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z PROC ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_DirectIOEvent, COMDAT

; 50   :     {

$LN9:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 81 ec 30 01
	00 00		 sub	 rsp, 304		; 00000130H
  0001b	48 8b fc	 mov	 rdi, rsp
  0001e	b9 4c 00 00 00	 mov	 ecx, 76			; 0000004cH
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR [rsp+320]
  00032	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00039	48 33 c4	 xor	 rax, rsp
  0003c	48 89 84 24 20
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 51   :         T* pT = static_cast<T*>(this);

  00044	48 83 bc 24 40
	01 00 00 00	 cmp	 QWORD PTR this$[rsp], 0
  0004d	74 18		 je	 SHORT $LN7@Fire_Direc
  0004f	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00057	48 2d 40 01 00
	00		 sub	 rax, 320		; 00000140H
  0005d	48 89 84 24 10
	01 00 00	 mov	 QWORD PTR tv68[rsp], rax
  00065	eb 0c		 jmp	 SHORT $LN8@Fire_Direc
$LN7@Fire_Direc:
  00067	48 c7 84 24 10
	01 00 00 00 00
	00 00		 mov	 QWORD PTR tv68[rsp], 0
$LN8@Fire_Direc:
  00073	48 8b 84 24 10
	01 00 00	 mov	 rax, QWORD PTR tv68[rsp]
  0007b	48 89 44 24 40	 mov	 QWORD PTR pT$[rsp], rax

; 52   :         OposVariant vars[3];

  00080	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??0OposVariant@@QEAA@XZ ; OposVariant::OposVariant
  00087	41 b8 03 00 00
	00		 mov	 r8d, 3
  0008d	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00092	48 8d 4c 24 60	 lea	 rcx, QWORD PTR vars$[rsp]
  00097	e8 00 00 00 00	 call	 ??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 53   :         int nConnections = m_vec.GetSize();

  0009c	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000a4	48 83 c0 08	 add	 rax, 8
  000a8	48 8b c8	 mov	 rcx, rax
  000ab	e8 00 00 00 00	 call	 ?GetSize@CComDynamicUnkArray@ATL@@QEBAHXZ ; ATL::CComDynamicUnkArray::GetSize
  000b0	89 84 24 c4 00
	00 00		 mov	 DWORD PTR nConnections$[rsp], eax

; 54   : 
; 55   :         for (_nCOConnectionIndex = 0; _nCOConnectionIndex < nConnections; _nCOConnectionIndex++)

  000b7	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000bf	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [rax+44], 0
  000c6	eb 18		 jmp	 SHORT $LN4@Fire_Direc
$LN2@Fire_Direc:
  000c8	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000d0	8b 40 2c	 mov	 eax, DWORD PTR [rax+44]
  000d3	ff c0		 inc	 eax
  000d5	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000dd	89 41 2c	 mov	 DWORD PTR [rcx+44], eax
$LN4@Fire_Direc:
  000e0	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e8	8b 8c 24 c4 00
	00 00		 mov	 ecx, DWORD PTR nConnections$[rsp]
  000ef	39 48 2c	 cmp	 DWORD PTR [rax+44], ecx
  000f2	0f 8d 54 01 00
	00		 jge	 $LN3@Fire_Direc

; 56   :         {
; 57   :             pT->Lock();

  000f8	48 8b 44 24 40	 mov	 rax, QWORD PTR pT$[rsp]
  000fd	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  00103	48 8b c8	 mov	 rcx, rax
  00106	e8 00 00 00 00	 call	 ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock

; 58   :             CComPtr<IUnknown> sp = m_vec.GetAt(_nCOConnectionIndex);

  0010b	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00113	48 83 c0 08	 add	 rax, 8
  00117	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0011f	8b 51 2c	 mov	 edx, DWORD PTR [rcx+44]
  00122	48 8b c8	 mov	 rcx, rax
  00125	e8 00 00 00 00	 call	 ?GetAt@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@H@Z ; ATL::CComDynamicUnkArray::GetAt
  0012a	48 8b d0	 mov	 rdx, rax
  0012d	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR sp$6[rsp]
  00135	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QEAA@PEAUIUnknown@@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 59   :             pT->Unlock();

  0013a	48 8b 44 24 40	 mov	 rax, QWORD PTR pT$[rsp]
  0013f	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  00145	48 8b c8	 mov	 rcx, rax
  00148	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 60   :             _pCPDispatch = reinterpret_cast<IDispatch*>(sp.p);

  0014d	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00155	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR sp$6[rsp]
  0015d	48 89 48 30	 mov	 QWORD PTR [rax+48], rcx

; 61   :             if (_pCPDispatch != NULL)

  00161	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00169	48 83 78 30 00	 cmp	 QWORD PTR [rax+48], 0
  0016e	0f 84 c6 00 00
	00		 je	 $LN5@Fire_Direc

; 62   :             {
; 63   :                 HRESULT hr;
; 64   :                 vars[2].SetLONG( EventNumber );

  00174	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00179	48 6b c0 02	 imul	 rax, rax, 2
  0017d	48 8d 44 04 60	 lea	 rax, QWORD PTR vars$[rsp+rax]
  00182	8b 94 24 48 01
	00 00		 mov	 edx, DWORD PTR EventNumber$[rsp]
  00189	48 8b c8	 mov	 rcx, rax
  0018c	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QEAAXJ@Z ; OposVariant::SetLONG

; 65   :                 vars[1].SetLONG_Ptr( pData, hr );

  00191	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00196	48 6b c0 01	 imul	 rax, rax, 1
  0019a	48 8d 44 04 60	 lea	 rax, QWORD PTR vars$[rsp+rax]
  0019f	4c 8d 84 24 f4
	00 00 00	 lea	 r8, QWORD PTR hr$7[rsp]
  001a7	48 8b 94 24 50
	01 00 00	 mov	 rdx, QWORD PTR pData$[rsp]
  001af	48 8b c8	 mov	 rcx, rax
  001b2	e8 00 00 00 00	 call	 ?SetLONG_Ptr@OposVariant@@QEAAXPEAJAEAJ@Z ; OposVariant::SetLONG_Ptr

; 66   :                 vars[0].SetBSTR_InOutPtr( pString, hr );

  001b7	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  001bc	48 6b c0 00	 imul	 rax, rax, 0
  001c0	48 8d 44 04 60	 lea	 rax, QWORD PTR vars$[rsp+rax]
  001c5	4c 8d 84 24 f4
	00 00 00	 lea	 r8, QWORD PTR hr$7[rsp]
  001cd	48 8b 94 24 58
	01 00 00	 mov	 rdx, QWORD PTR pString$[rsp]
  001d5	48 8b c8	 mov	 rcx, rax
  001d8	e8 00 00 00 00	 call	 ?SetBSTR_InOutPtr@OposVariant@@QEAA_NPEAPEA_WAEAJ@Z ; OposVariant::SetBSTR_InOutPtr

; 67   :                 FireTheEvent( FEUNKNOWN vars, 3, _DIDDirectIO, L"DirectIOEvent", 2 );

  001dd	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001e5	48 83 c0 1c	 add	 rax, 28
  001e9	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR tv172[rsp], rax
  001f1	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR sp$6[rsp]
  001f9	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIUnknown@@@ATL@@QEBAPEAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
  001fe	c7 44 24 30 02
	00 00 00	 mov	 DWORD PTR [rsp+48], 2
  00206	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1BM@CBGEBBBJ@?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt@
  0020d	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00212	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR tv172[rsp]
  0021a	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0021f	41 b9 03 00 00
	00		 mov	 r9d, 3
  00225	4c 8d 44 24 60	 lea	 r8, QWORD PTR vars$[rsp]
  0022a	48 8b d0	 mov	 rdx, rax
  0022d	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00235	e8 00 00 00 00	 call	 ?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@IEAAXPEAUIUnknown@@PEAVOposVariant@@IAEAJPEB_WJ@Z ; CProxy_IOPOSEvents<COPOSVideoCapture>::FireTheEvent
$LN5@Fire_Direc:

; 68   :             }
; 69   :         }

  0023a	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR sp$6[rsp]
  00242	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ
  00247	e9 7c fe ff ff	 jmp	 $LN2@Fire_Direc
$LN3@Fire_Direc:

; 70   :     }

  0024c	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1OposVariant@@QEAA@XZ ; OposVariant::~OposVariant
  00253	41 b8 03 00 00
	00		 mov	 r8d, 3
  00259	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0025e	48 8d 4c 24 60	 lea	 rcx, QWORD PTR vars$[rsp]
  00263	e8 00 00 00 00	 call	 ??_I@YAXPEAX_K1P6AX0@Z@Z
  00268	48 8b cc	 mov	 rcx, rsp
  0026b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z$rtcFrameData
  00272	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00277	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0027f	48 33 cc	 xor	 rcx, rsp
  00282	e8 00 00 00 00	 call	 __security_check_cookie
  00287	48 81 c4 30 01
	00 00		 add	 rsp, 304		; 00000130H
  0028e	5f		 pop	 rdi
  0028f	c3		 ret	 0
?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSVideoCapture@@@@QEAAXJPEAJPEAPEA_W@Z ENDP ; CProxy_IOPOSEvents<COPOSVideoCapture>::Fire_DirectIOEvent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ PROC ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$_ICPLocator@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@B@ATL@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0CComDynamicUnkArray@ATL@@QEAA@XZ ; ATL::CComDynamicUnkArray::CComDynamicUnkArray
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??0?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?EnumConnections@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z
_TEXT	SEGMENT
pEnum$ = 48
pT$ = 56
pcd$ = 64
pend$ = 72
pp$1 = 80
hRes$ = 88
$T2 = 96
$T3 = 104
$T4 = 112
$T5 = 120
tv75 = 128
tv81 = 136
tv94 = 144
tv131 = 152
tv150 = 160
tv210 = 168
this$ = 192
ppEnum$ = 200
?EnumConnections@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z PROC ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::EnumConnections, COMDAT

; 6412 : {

$LN19:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+192]

; 6413 : 	if (ppEnum == NULL)

  00029	48 83 bc 24 c8
	00 00 00 00	 cmp	 QWORD PTR ppEnum$[rsp], 0
  00032	75 0a		 jne	 SHORT $LN5@EnumConnec

; 6414 : 		return E_POINTER;

  00034	b8 03 40 00 80	 mov	 eax, -2147467261	; ffffffff80004003H
  00039	e9 fb 02 00 00	 jmp	 $LN1@EnumConnec
$LN5@EnumConnec:

; 6415 : 	*ppEnum = NULL;

  0003e	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR ppEnum$[rsp]
  00046	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 6416 : 	CComObject<CComEnumConnections>* pEnum = NULL;

  0004d	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR pEnum$[rsp], 0

; 6417 : 	pEnum = _ATL_NEW CComObject<CComEnumConnections>;

  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0005d	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  00062	e8 00 00 00 00	 call	 ??2@YAPEAX_KAEBUnothrow_t@std@@@Z ; operator new
  00067	48 89 44 24 60	 mov	 QWORD PTR $T2[rsp], rax
  0006c	48 83 7c 24 60
	00		 cmp	 QWORD PTR $T2[rsp], 0
  00072	74 16		 je	 SHORT $LN11@EnumConnec
  00074	33 d2		 xor	 edx, edx
  00076	48 8b 4c 24 60	 mov	 rcx, QWORD PTR $T2[rsp]
  0007b	e8 00 00 00 00	 call	 ??0?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QEAA@PEAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >
  00080	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv75[rsp], rax
  00088	eb 0c		 jmp	 SHORT $LN12@EnumConnec
$LN11@EnumConnec:
  0008a	48 c7 84 24 80
	00 00 00 00 00
	00 00		 mov	 QWORD PTR tv75[rsp], 0
$LN12@EnumConnec:
  00096	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR tv75[rsp]
  0009e	48 89 44 24 30	 mov	 QWORD PTR pEnum$[rsp], rax

; 6418 : 	if (pEnum == NULL)

  000a3	48 83 7c 24 30
	00		 cmp	 QWORD PTR pEnum$[rsp], 0
  000a9	75 0a		 jne	 SHORT $LN6@EnumConnec

; 6419 : 		return E_OUTOFMEMORY;

  000ab	b8 0e 00 07 80	 mov	 eax, -2147024882	; ffffffff8007000eH
  000b0	e9 84 02 00 00	 jmp	 $LN1@EnumConnec
$LN6@EnumConnec:

; 6420 : 	T* pT = static_cast<T*>(this);

  000b5	48 83 bc 24 c0
	00 00 00 00	 cmp	 QWORD PTR this$[rsp], 0
  000be	74 18		 je	 SHORT $LN13@EnumConnec
  000c0	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000c8	48 2d 40 01 00
	00		 sub	 rax, 320		; 00000140H
  000ce	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR tv81[rsp], rax
  000d6	eb 0c		 jmp	 SHORT $LN14@EnumConnec
$LN13@EnumConnec:
  000d8	48 c7 84 24 88
	00 00 00 00 00
	00 00		 mov	 QWORD PTR tv81[rsp], 0
$LN14@EnumConnec:
  000e4	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR tv81[rsp]
  000ec	48 89 44 24 38	 mov	 QWORD PTR pT$[rsp], rax

; 6421 : 	pT->Lock();

  000f1	48 8b 44 24 38	 mov	 rax, QWORD PTR pT$[rsp]
  000f6	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  000fc	48 8b c8	 mov	 rcx, rax
  000ff	e8 00 00 00 00	 call	 ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock

; 6422 : 	CONNECTDATA* pcd = NULL;

  00104	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR pcd$[rsp], 0

; 6423 : 	pcd = _ATL_NEW CONNECTDATA[m_vec.end()-m_vec.begin()];

  0010d	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00115	48 83 c0 08	 add	 rax, 8
  00119	48 8b c8	 mov	 rcx, rax
  0011c	e8 00 00 00 00	 call	 ?end@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::end
  00121	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR tv94[rsp], rax
  00129	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00131	48 83 c1 08	 add	 rcx, 8
  00135	e8 00 00 00 00	 call	 ?begin@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::begin
  0013a	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR tv94[rsp]
  00142	48 2b c8	 sub	 rcx, rax
  00145	48 8b c1	 mov	 rax, rcx
  00148	48 c1 f8 03	 sar	 rax, 3
  0014c	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR tv131[rsp], rax
  00154	b8 10 00 00 00	 mov	 eax, 16
  00159	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR tv131[rsp]
  00161	48 f7 e1	 mul	 rcx
  00164	48 c7 c1 ff ff
	ff ff		 mov	 rcx, -1
  0016b	48 0f 40 c1	 cmovo	 rax, rcx
  0016f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00176	48 8b c8	 mov	 rcx, rax
  00179	e8 00 00 00 00	 call	 ??_U@YAPEAX_KAEBUnothrow_t@std@@@Z ; operator new[]
  0017e	48 89 44 24 68	 mov	 QWORD PTR $T3[rsp], rax
  00183	48 8b 44 24 68	 mov	 rax, QWORD PTR $T3[rsp]
  00188	48 89 44 24 40	 mov	 QWORD PTR pcd$[rsp], rax

; 6424 : 	if (pcd == NULL)

  0018d	48 83 7c 24 40
	00		 cmp	 QWORD PTR pcd$[rsp], 0
  00193	75 5a		 jne	 SHORT $LN7@EnumConnec

; 6425 : 	{
; 6426 : 		delete pEnum;

  00195	48 8b 44 24 30	 mov	 rax, QWORD PTR pEnum$[rsp]
  0019a	48 89 44 24 70	 mov	 QWORD PTR $T4[rsp], rax
  0019f	48 83 7c 24 70
	00		 cmp	 QWORD PTR $T4[rsp], 0
  001a5	74 1f		 je	 SHORT $LN15@EnumConnec
  001a7	48 8b 44 24 70	 mov	 rax, QWORD PTR $T4[rsp]
  001ac	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001af	ba 01 00 00 00	 mov	 edx, 1
  001b4	48 8b 4c 24 70	 mov	 rcx, QWORD PTR $T4[rsp]
  001b9	ff 50 38	 call	 QWORD PTR [rax+56]
  001bc	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR tv150[rsp], rax
  001c4	eb 0c		 jmp	 SHORT $LN16@EnumConnec
$LN15@EnumConnec:
  001c6	48 c7 84 24 a0
	00 00 00 00 00
	00 00		 mov	 QWORD PTR tv150[rsp], 0
$LN16@EnumConnec:

; 6427 : 		pT->Unlock();

  001d2	48 8b 44 24 38	 mov	 rax, QWORD PTR pT$[rsp]
  001d7	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  001dd	48 8b c8	 mov	 rcx, rax
  001e0	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 6428 : 		return E_OUTOFMEMORY;

  001e5	b8 0e 00 07 80	 mov	 eax, -2147024882	; ffffffff8007000eH
  001ea	e9 4a 01 00 00	 jmp	 $LN1@EnumConnec
$LN7@EnumConnec:

; 6429 : 	}
; 6430 : 	CONNECTDATA* pend = pcd;

  001ef	48 8b 44 24 40	 mov	 rax, QWORD PTR pcd$[rsp]
  001f4	48 89 44 24 48	 mov	 QWORD PTR pend$[rsp], rax

; 6431 : 	// Copy the valid CONNECTDATA's
; 6432 : 	for (IUnknown** pp = m_vec.begin();pp<m_vec.end();pp++)

  001f9	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00201	48 83 c0 08	 add	 rax, 8
  00205	48 8b c8	 mov	 rcx, rax
  00208	e8 00 00 00 00	 call	 ?begin@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::begin
  0020d	48 89 44 24 50	 mov	 QWORD PTR pp$1[rsp], rax
  00212	eb 0e		 jmp	 SHORT $LN4@EnumConnec
$LN2@EnumConnec:
  00214	48 8b 44 24 50	 mov	 rax, QWORD PTR pp$1[rsp]
  00219	48 83 c0 08	 add	 rax, 8
  0021d	48 89 44 24 50	 mov	 QWORD PTR pp$1[rsp], rax
$LN4@EnumConnec:
  00222	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0022a	48 83 c0 08	 add	 rax, 8
  0022e	48 8b c8	 mov	 rcx, rax
  00231	e8 00 00 00 00	 call	 ?end@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::end
  00236	48 39 44 24 50	 cmp	 QWORD PTR pp$1[rsp], rax
  0023b	73 65		 jae	 SHORT $LN3@EnumConnec

; 6433 : 	{
; 6434 : 		if (*pp != NULL)

  0023d	48 8b 44 24 50	 mov	 rax, QWORD PTR pp$1[rsp]
  00242	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00246	74 55		 je	 SHORT $LN8@EnumConnec

; 6435 : 		{
; 6436 : 			(*pp)->AddRef();

  00248	48 8b 44 24 50	 mov	 rax, QWORD PTR pp$1[rsp]
  0024d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00250	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pp$1[rsp]
  00255	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00258	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0025b	ff 50 08	 call	 QWORD PTR [rax+8]

; 6437 : 			pend->pUnk = *pp;

  0025e	48 8b 44 24 48	 mov	 rax, QWORD PTR pend$[rsp]
  00263	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pp$1[rsp]
  00268	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0026b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 6438 : 			pend->dwCookie = m_vec.GetCookie(pp);

  0026e	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00276	48 83 c0 08	 add	 rax, 8
  0027a	48 8b 54 24 50	 mov	 rdx, QWORD PTR pp$1[rsp]
  0027f	48 8b c8	 mov	 rcx, rax
  00282	e8 00 00 00 00	 call	 ?GetCookie@CComDynamicUnkArray@ATL@@QEAAKPEAPEAUIUnknown@@@Z ; ATL::CComDynamicUnkArray::GetCookie
  00287	48 8b 4c 24 48	 mov	 rcx, QWORD PTR pend$[rsp]
  0028c	89 41 08	 mov	 DWORD PTR [rcx+8], eax

; 6439 : 			pend++;

  0028f	48 8b 44 24 48	 mov	 rax, QWORD PTR pend$[rsp]
  00294	48 83 c0 10	 add	 rax, 16
  00298	48 89 44 24 48	 mov	 QWORD PTR pend$[rsp], rax
$LN8@EnumConnec:

; 6440 : 		}
; 6441 : 	}

  0029d	e9 72 ff ff ff	 jmp	 $LN2@EnumConnec
$LN3@EnumConnec:

; 6442 : 	// don't copy the data, but transfer ownership to it
; 6443 : 	pEnum->Init(pcd, pend, NULL, AtlFlagTakeOwnership);

  002a2	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  002aa	45 33 c9	 xor	 r9d, r9d
  002ad	4c 8b 44 24 48	 mov	 r8, QWORD PTR pend$[rsp]
  002b2	48 8b 54 24 40	 mov	 rdx, QWORD PTR pcd$[rsp]
  002b7	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pEnum$[rsp]
  002bc	e8 00 00 00 00	 call	 ?Init@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QEAAJPEAUtagCONNECTDATA@@0PEAUIUnknown@@W4CComEnumFlags@2@@Z ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Init

; 6444 : 	pT->Unlock();

  002c1	48 8b 44 24 38	 mov	 rax, QWORD PTR pT$[rsp]
  002c6	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  002cc	48 8b c8	 mov	 rcx, rax
  002cf	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 6445 : 	HRESULT hRes = pEnum->_InternalQueryInterface(__uuidof(IEnumConnections), (void**)ppEnum);

  002d4	4c 8b 84 24 c8
	00 00 00	 mov	 r8, QWORD PTR ppEnum$[rsp]
  002dc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_GUID_b196b287_bab4_101a_b69c_00aa00341d07
  002e3	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pEnum$[rsp]
  002e8	e8 00 00 00 00	 call	 ?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QEAAJAEBU_GUID@@PEAPEAX@Z ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_InternalQueryInterface
  002ed	89 44 24 58	 mov	 DWORD PTR hRes$[rsp], eax

; 6446 : 	if (FAILED(hRes))

  002f1	83 7c 24 58 00	 cmp	 DWORD PTR hRes$[rsp], 0
  002f6	7d 3d		 jge	 SHORT $LN9@EnumConnec

; 6447 : 		delete pEnum;

  002f8	48 8b 44 24 30	 mov	 rax, QWORD PTR pEnum$[rsp]
  002fd	48 89 44 24 78	 mov	 QWORD PTR $T5[rsp], rax
  00302	48 83 7c 24 78
	00		 cmp	 QWORD PTR $T5[rsp], 0
  00308	74 1f		 je	 SHORT $LN17@EnumConnec
  0030a	48 8b 44 24 78	 mov	 rax, QWORD PTR $T5[rsp]
  0030f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00312	ba 01 00 00 00	 mov	 edx, 1
  00317	48 8b 4c 24 78	 mov	 rcx, QWORD PTR $T5[rsp]
  0031c	ff 50 38	 call	 QWORD PTR [rax+56]
  0031f	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR tv210[rsp], rax
  00327	eb 0c		 jmp	 SHORT $LN18@EnumConnec
$LN17@EnumConnec:
  00329	48 c7 84 24 a8
	00 00 00 00 00
	00 00		 mov	 QWORD PTR tv210[rsp], 0
$LN18@EnumConnec:
$LN9@EnumConnec:

; 6448 : 	return hRes;

  00335	8b 44 24 58	 mov	 eax, DWORD PTR hRes$[rsp]
$LN1@EnumConnec:

; 6449 : }

  00339	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  00340	5f		 pop	 rdi
  00341	c3		 ret	 0
?EnumConnections@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAPEAUIEnumConnections@@@Z ENDP ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::EnumConnections
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Unadvise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJK@Z
_TEXT	SEGMENT
pT$ = 32
p$ = 40
hRes$ = 48
tv68 = 56
tv84 = 64
this$ = 96
dwCookie$ = 104
?Unadvise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJK@Z PROC ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::Unadvise, COMDAT

; 6397 : {

$LN8:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 14 00 00 00	 mov	 ecx, 20
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 6398 : 	T* pT = static_cast<T*>(this);

  00022	48 83 7c 24 60
	00		 cmp	 QWORD PTR this$[rsp], 0
  00028	74 12		 je	 SHORT $LN4@Unadvise
  0002a	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 2d 40 01 00
	00		 sub	 rax, 320		; 00000140H
  00035	48 89 44 24 38	 mov	 QWORD PTR tv68[rsp], rax
  0003a	eb 09		 jmp	 SHORT $LN5@Unadvise
$LN4@Unadvise:
  0003c	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR tv68[rsp], 0
$LN5@Unadvise:
  00045	48 8b 44 24 38	 mov	 rax, QWORD PTR tv68[rsp]
  0004a	48 89 44 24 20	 mov	 QWORD PTR pT$[rsp], rax

; 6399 : 	pT->Lock();

  0004f	48 8b 44 24 20	 mov	 rax, QWORD PTR pT$[rsp]
  00054	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  0005a	48 8b c8	 mov	 rcx, rax
  0005d	e8 00 00 00 00	 call	 ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock

; 6400 : 	IUnknown* p = m_vec.GetUnknown(dwCookie);

  00062	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00067	48 83 c0 08	 add	 rax, 8
  0006b	8b 54 24 68	 mov	 edx, DWORD PTR dwCookie$[rsp]
  0006f	48 8b c8	 mov	 rcx, rax
  00072	e8 00 00 00 00	 call	 ?GetUnknown@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@K@Z ; ATL::CComDynamicUnkArray::GetUnknown
  00077	48 89 44 24 28	 mov	 QWORD PTR p$[rsp], rax

; 6401 : 	HRESULT hRes = m_vec.Remove(dwCookie) ? S_OK : CONNECT_E_NOCONNECTION;

  0007c	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00081	48 83 c0 08	 add	 rax, 8
  00085	8b 54 24 68	 mov	 edx, DWORD PTR dwCookie$[rsp]
  00089	48 8b c8	 mov	 rcx, rax
  0008c	e8 00 00 00 00	 call	 ?Remove@CComDynamicUnkArray@ATL@@QEAAHK@Z ; ATL::CComDynamicUnkArray::Remove
  00091	85 c0		 test	 eax, eax
  00093	74 0a		 je	 SHORT $LN6@Unadvise
  00095	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR tv84[rsp], 0
  0009d	eb 08		 jmp	 SHORT $LN7@Unadvise
$LN6@Unadvise:
  0009f	c7 44 24 40 00
	02 04 80	 mov	 DWORD PTR tv84[rsp], -2147220992 ; ffffffff80040200H
$LN7@Unadvise:
  000a7	8b 44 24 40	 mov	 eax, DWORD PTR tv84[rsp]
  000ab	89 44 24 30	 mov	 DWORD PTR hRes$[rsp], eax

; 6402 : 	pT->Unlock();

  000af	48 8b 44 24 20	 mov	 rax, QWORD PTR pT$[rsp]
  000b4	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 6403 : 	if (hRes == S_OK && p != NULL)

  000c2	83 7c 24 30 00	 cmp	 DWORD PTR hRes$[rsp], 0
  000c7	75 18		 jne	 SHORT $LN2@Unadvise
  000c9	48 83 7c 24 28
	00		 cmp	 QWORD PTR p$[rsp], 0
  000cf	74 10		 je	 SHORT $LN2@Unadvise

; 6404 : 		p->Release();

  000d1	48 8b 44 24 28	 mov	 rax, QWORD PTR p$[rsp]
  000d6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d9	48 8b 4c 24 28	 mov	 rcx, QWORD PTR p$[rsp]
  000de	ff 50 10	 call	 QWORD PTR [rax+16]
$LN2@Unadvise:

; 6405 : 	return hRes;

  000e1	8b 44 24 30	 mov	 eax, DWORD PTR hRes$[rsp]

; 6406 : }

  000e5	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000e9	5f		 pop	 rdi
  000ea	c3		 ret	 0
?Unadvise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJK@Z ENDP ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::Unadvise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Advise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAUIUnknown@@PEAK@Z
_TEXT	SEGMENT
pT$ = 32
p$ = 56
hRes$ = 68
iid$ = 88
tv68 = 128
tv94 = 136
__$ArrayPad$ = 144
this$ = 176
pUnkSink$ = 184
pdwCookie$ = 192
?Advise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAUIUnknown@@PEAK@Z PROC ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::Advise, COMDAT

; 6368 : {

$LN15:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 6369 : 	T* pT = static_cast<T*>(this);

  00040	48 83 bc 24 b0
	00 00 00 00	 cmp	 QWORD PTR this$[rsp], 0
  00049	74 18		 je	 SHORT $LN11@Advise
  0004b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00053	48 2d 40 01 00
	00		 sub	 rax, 320		; 00000140H
  00059	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv68[rsp], rax
  00061	eb 0c		 jmp	 SHORT $LN12@Advise
$LN11@Advise:
  00063	48 c7 84 24 80
	00 00 00 00 00
	00 00		 mov	 QWORD PTR tv68[rsp], 0
$LN12@Advise:
  0006f	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR tv68[rsp]
  00077	48 89 44 24 20	 mov	 QWORD PTR pT$[rsp], rax

; 6370 : 	IUnknown* p = NULL;

  0007c	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR p$[rsp], 0

; 6371 : 	HRESULT hRes = S_OK;

  00085	c7 44 24 44 00
	00 00 00	 mov	 DWORD PTR hRes$[rsp], 0

; 6372 : 	if (pdwCookie != NULL)

  0008d	48 83 bc 24 c0
	00 00 00 00	 cmp	 QWORD PTR pdwCookie$[rsp], 0
  00096	74 0e		 je	 SHORT $LN2@Advise

; 6373 : 		*pdwCookie = 0;

  00098	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR pdwCookie$[rsp]
  000a0	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN2@Advise:

; 6374 : 	if (pUnkSink == NULL || pdwCookie == NULL)

  000a6	48 83 bc 24 b8
	00 00 00 00	 cmp	 QWORD PTR pUnkSink$[rsp], 0
  000af	74 0b		 je	 SHORT $LN4@Advise
  000b1	48 83 bc 24 c0
	00 00 00 00	 cmp	 QWORD PTR pdwCookie$[rsp], 0
  000ba	75 0a		 jne	 SHORT $LN3@Advise
$LN4@Advise:

; 6375 : 		return E_POINTER;

  000bc	b8 03 40 00 80	 mov	 eax, -2147467261	; ffffffff80004003H
  000c1	e9 06 01 00 00	 jmp	 $LN1@Advise
$LN3@Advise:

; 6376 : 	IID iid;
; 6377 : 	GetConnectionInterface(&iid);

  000c6	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000ce	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d1	48 8d 54 24 58	 lea	 rdx, QWORD PTR iid$[rsp]
  000d6	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000de	ff 50 18	 call	 QWORD PTR [rax+24]

; 6378 : 	hRes = pUnkSink->QueryInterface(iid, (void**)&p);

  000e1	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR pUnkSink$[rsp]
  000e9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ec	4c 8d 44 24 38	 lea	 r8, QWORD PTR p$[rsp]
  000f1	48 8d 54 24 58	 lea	 rdx, QWORD PTR iid$[rsp]
  000f6	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR pUnkSink$[rsp]
  000fe	ff 10		 call	 QWORD PTR [rax]
  00100	89 44 24 44	 mov	 DWORD PTR hRes$[rsp], eax

; 6379 : 	if (SUCCEEDED(hRes))

  00104	83 7c 24 44 00	 cmp	 DWORD PTR hRes$[rsp], 0
  00109	0f 8c 92 00 00
	00		 jl	 $LN5@Advise

; 6380 : 	{
; 6381 : 		pT->Lock();

  0010f	48 8b 44 24 20	 mov	 rax, QWORD PTR pT$[rsp]
  00114	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  0011a	48 8b c8	 mov	 rcx, rax
  0011d	e8 00 00 00 00	 call	 ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock

; 6382 : 		*pdwCookie = m_vec.Add(p);

  00122	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0012a	48 83 c0 08	 add	 rax, 8
  0012e	48 8b 54 24 38	 mov	 rdx, QWORD PTR p$[rsp]
  00133	48 8b c8	 mov	 rcx, rax
  00136	e8 00 00 00 00	 call	 ?Add@CComDynamicUnkArray@ATL@@QEAAKPEAUIUnknown@@@Z ; ATL::CComDynamicUnkArray::Add
  0013b	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR pdwCookie$[rsp]
  00143	89 01		 mov	 DWORD PTR [rcx], eax

; 6383 : 		hRes = (*pdwCookie != NULL) ? S_OK : CONNECT_E_ADVISELIMIT;

  00145	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR pdwCookie$[rsp]
  0014d	83 38 00	 cmp	 DWORD PTR [rax], 0
  00150	74 0d		 je	 SHORT $LN13@Advise
  00152	c7 84 24 88 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv94[rsp], 0
  0015d	eb 0b		 jmp	 SHORT $LN14@Advise
$LN13@Advise:
  0015f	c7 84 24 88 00
	00 00 01 02 04
	80		 mov	 DWORD PTR tv94[rsp], -2147220991 ; ffffffff80040201H
$LN14@Advise:
  0016a	8b 84 24 88 00
	00 00		 mov	 eax, DWORD PTR tv94[rsp]
  00171	89 44 24 44	 mov	 DWORD PTR hRes$[rsp], eax

; 6384 : 		pT->Unlock();

  00175	48 8b 44 24 20	 mov	 rax, QWORD PTR pT$[rsp]
  0017a	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  00180	48 8b c8	 mov	 rcx, rax
  00183	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 6385 : 		if (hRes != S_OK)

  00188	83 7c 24 44 00	 cmp	 DWORD PTR hRes$[rsp], 0
  0018d	74 10		 je	 SHORT $LN7@Advise

; 6386 : 			p->Release();

  0018f	48 8b 44 24 38	 mov	 rax, QWORD PTR p$[rsp]
  00194	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00197	48 8b 4c 24 38	 mov	 rcx, QWORD PTR p$[rsp]
  0019c	ff 50 10	 call	 QWORD PTR [rax+16]
$LN7@Advise:

; 6387 : 	}

  0019f	eb 12		 jmp	 SHORT $LN6@Advise
$LN5@Advise:

; 6388 : 	else if (hRes == E_NOINTERFACE)

  001a1	81 7c 24 44 02
	40 00 80	 cmp	 DWORD PTR hRes$[rsp], -2147467262 ; ffffffff80004002H
  001a9	75 08		 jne	 SHORT $LN8@Advise

; 6389 : 		hRes = CONNECT_E_CANNOTCONNECT;

  001ab	c7 44 24 44 02
	02 04 80	 mov	 DWORD PTR hRes$[rsp], -2147220990 ; ffffffff80040202H
$LN8@Advise:
$LN6@Advise:

; 6390 : 	if (FAILED(hRes))

  001b3	83 7c 24 44 00	 cmp	 DWORD PTR hRes$[rsp], 0
  001b8	7d 0e		 jge	 SHORT $LN9@Advise

; 6391 : 		*pdwCookie = 0;

  001ba	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR pdwCookie$[rsp]
  001c2	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN9@Advise:

; 6392 : 	return hRes;

  001c8	8b 44 24 44	 mov	 eax, DWORD PTR hRes$[rsp]
$LN1@Advise:

; 6393 : }

  001cc	48 8b f8	 mov	 rdi, rax
  001cf	48 8b cc	 mov	 rcx, rsp
  001d2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Advise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAUIUnknown@@PEAK@Z$rtcFrameData
  001d9	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001de	48 8b c7	 mov	 rax, rdi
  001e1	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001e9	48 33 cc	 xor	 rcx, rsp
  001ec	e8 00 00 00 00	 call	 __security_check_cookie
  001f1	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  001f8	5f		 pop	 rdi
  001f9	c3		 ret	 0
?Advise@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAUIUnknown@@PEAK@Z ENDP ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::Advise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAPEAUIConnectionPointContainer@@@Z
_TEXT	SEGMENT
pT$ = 32
tv68 = 40
this$ = 64
ppCPC$ = 72
?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAPEAUIConnectionPointContainer@@@Z PROC ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::GetConnectionPointContainer, COMDAT

; 6338 : 	{

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 6339 : 		T* pT = static_cast<T*>(this);

  00023	48 83 7c 24 40
	00		 cmp	 QWORD PTR this$[rsp], 0
  00029	74 12		 je	 SHORT $LN3@GetConnect
  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 2d 40 01 00
	00		 sub	 rax, 320		; 00000140H
  00036	48 89 44 24 28	 mov	 QWORD PTR tv68[rsp], rax
  0003b	eb 09		 jmp	 SHORT $LN4@GetConnect
$LN3@GetConnect:
  0003d	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR tv68[rsp], 0
$LN4@GetConnect:
  00046	48 8b 44 24 28	 mov	 rax, QWORD PTR tv68[rsp]
  0004b	48 89 44 24 20	 mov	 QWORD PTR pT$[rsp], rax

; 6340 : 		// No need to check ppCPC for NULL since QI will do that for us
; 6341 : 		return pT->QueryInterface(__uuidof(IConnectionPointContainer), (void**)ppCPC);

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR pT$[rsp]
  00055	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00058	4c 8b 44 24 48	 mov	 r8, QWORD PTR ppCPC$[rsp]
  0005d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_GUID_b196b284_bab4_101a_b69c_00aa00341d07
  00064	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pT$[rsp]
  00069	ff 10		 call	 QWORD PTR [rax]

; 6342 : 	}

  0006b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006f	5f		 pop	 rdi
  00070	c3		 ret	 0
?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAPEAUIConnectionPointContainer@@@Z ENDP ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::GetConnectionPointContainer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAU_GUID@@@Z
_TEXT	SEGMENT
this$ = 24
piid2$ = 32
?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAU_GUID@@@Z PROC ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::GetConnectionInterface, COMDAT

; 6330 : 	{

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi

; 6331 : 		if (piid2 == NULL)

  0000c	48 83 7c 24 20
	00		 cmp	 QWORD PTR piid2$[rsp], 0
  00012	75 07		 jne	 SHORT $LN2@GetConnect

; 6332 : 			return E_POINTER;

  00014	b8 03 40 00 80	 mov	 eax, -2147467261	; ffffffff80004003H
  00019	eb 18		 jmp	 SHORT $LN1@GetConnect
$LN2@GetConnect:

; 6333 : 		*piid2 = *piid;

  0001b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:DIID__IOPOSVideoCaptureEvents
  00022	48 8b 7c 24 20	 mov	 rdi, QWORD PTR piid2$[rsp]
  00027	48 8b f0	 mov	 rsi, rax
  0002a	b9 10 00 00 00	 mov	 ecx, 16
  0002f	f3 a4		 rep movsb

; 6334 : 		return S_OK;

  00031	33 c0		 xor	 eax, eax
$LN1@GetConnect:

; 6335 : 	}

  00033	5f		 pop	 rdi
  00034	5e		 pop	 rsi
  00035	c3		 ret	 0
?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJPEAU_GUID@@@Z ENDP ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::GetConnectionInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
this$ = 64
riid$ = 72
ppvObject$ = 80
?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJAEBU_GUID@@PEAPEAX@Z PROC ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::_LocCPQueryInterface, COMDAT

; 6308 : 	{

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 6309 : #ifndef _ATL_OLEDB_CONFORMANCE_TESTS
; 6310 : 		ATLASSERT(ppvObject != NULL);

  00028	48 83 7c 24 50
	00		 cmp	 QWORD PTR ppvObject$[rsp], 0
  0002e	75 3a		 jne	 SHORT $LN7@LocCPQuery
  00030	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1BO@IINBGKAE@?$AAp?$AAp?$AAv?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00037	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0003c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00043	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00048	45 33 c9	 xor	 r9d, r9d
  0004b	41 b8 a6 18 00
	00		 mov	 r8d, 6310		; 000018a6H
  00051	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00058	b9 02 00 00 00	 mov	 ecx, 2
  0005d	e8 00 00 00 00	 call	 _CrtDbgReportW
  00062	83 f8 01	 cmp	 eax, 1
  00065	75 03		 jne	 SHORT $LN7@LocCPQuery
  00067	cc		 int	 3
  00068	33 c0		 xor	 eax, eax
$LN7@LocCPQuery:

; 6311 : #endif
; 6312 : 		if (ppvObject == NULL)

  0006a	48 83 7c 24 50
	00		 cmp	 QWORD PTR ppvObject$[rsp], 0
  00070	75 07		 jne	 SHORT $LN2@LocCPQuery

; 6313 : 			return E_POINTER;

  00072	b8 03 40 00 80	 mov	 eax, -2147467261	; ffffffff80004003H
  00077	eb 57		 jmp	 SHORT $LN1@LocCPQuery
$LN2@LocCPQuery:

; 6314 : 		*ppvObject = NULL;

  00079	48 8b 44 24 50	 mov	 rax, QWORD PTR ppvObject$[rsp]
  0007e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 6315 : 
; 6316 : 		if (InlineIsEqualGUID(riid, __uuidof(IConnectionPoint)) || InlineIsEqualUnknown(riid))

  00085	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_GUID_b196b286_bab4_101a_b69c_00aa00341d07
  0008c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR riid$[rsp]
  00091	e8 00 00 00 00	 call	 InlineIsEqualGUID
  00096	85 c0		 test	 eax, eax
  00098	75 0e		 jne	 SHORT $LN5@LocCPQuery
  0009a	48 8b 4c 24 48	 mov	 rcx, QWORD PTR riid$[rsp]
  0009f	e8 00 00 00 00	 call	 ?InlineIsEqualUnknown@ATL@@YAHAEBU_GUID@@@Z ; ATL::InlineIsEqualUnknown
  000a4	85 c0		 test	 eax, eax
  000a6	74 23		 je	 SHORT $LN3@LocCPQuery
$LN5@LocCPQuery:

; 6317 : 		{
; 6318 : 			*ppvObject = this;

  000a8	48 8b 44 24 50	 mov	 rax, QWORD PTR ppvObject$[rsp]
  000ad	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000b2	48 89 08	 mov	 QWORD PTR [rax], rcx

; 6319 : 			this->AddRef();

  000b5	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000ba	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000bd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000c2	ff 50 08	 call	 QWORD PTR [rax+8]

; 6320 : #if defined(_ATL_DEBUG_INTERFACES) && !defined(_ATL_STATIC_LIB_IMPL)
; 6321 : 			_AtlDebugInterfacesModule.AddThunk((IUnknown**)ppvObject, _T("IConnectionPointImpl"), riid);
; 6322 : #endif // _ATL_DEBUG_INTERFACES
; 6323 : 			return S_OK;

  000c5	33 c0		 xor	 eax, eax
  000c7	eb 07		 jmp	 SHORT $LN1@LocCPQuery

; 6324 : 		}

  000c9	eb 05		 jmp	 SHORT $LN4@LocCPQuery
$LN3@LocCPQuery:

; 6325 : 		else
; 6326 : 			return E_NOINTERFACE;

  000cb	b8 02 40 00 80	 mov	 eax, -2147467262	; ffffffff80004002H
$LN4@LocCPQuery:
$LN1@LocCPQuery:

; 6327 : 	}

  000d0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UEAAJAEBU_GUID@@PEAPEAX@Z ENDP ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::_LocCPQueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
pp$ = 32
this$ = 64
??1?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ PROC ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::~IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>, COMDAT

; 6354 : {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 6355 : 	IUnknown** pp = m_vec.begin();

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ?begin@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::begin
  0002f	48 89 44 24 20	 mov	 QWORD PTR pp$[rsp], rax
$LN2@IConnectio:

; 6356 : 	while (pp < m_vec.end())

  00034	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 83 c0 08	 add	 rax, 8
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ?end@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::end
  00045	48 39 44 24 20	 cmp	 QWORD PTR pp$[rsp], rax
  0004a	73 31		 jae	 SHORT $LN3@IConnectio

; 6357 : 	{
; 6358 : 		if (*pp != NULL)

  0004c	48 8b 44 24 20	 mov	 rax, QWORD PTR pp$[rsp]
  00051	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00055	74 16		 je	 SHORT $LN4@IConnectio

; 6359 : 			(*pp)->Release();

  00057	48 8b 44 24 20	 mov	 rax, QWORD PTR pp$[rsp]
  0005c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pp$[rsp]
  00064	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00067	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006a	ff 50 10	 call	 QWORD PTR [rax+16]
$LN4@IConnectio:

; 6360 : 		pp++;

  0006d	48 8b 44 24 20	 mov	 rax, QWORD PTR pp$[rsp]
  00072	48 83 c0 08	 add	 rax, 8
  00076	48 89 44 24 20	 mov	 QWORD PTR pp$[rsp], rax

; 6361 : 	}

  0007b	eb b7		 jmp	 SHORT $LN2@IConnectio
$LN3@IConnectio:

; 6362 : }

  0007d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 83 c0 08	 add	 rax, 8
  00086	48 8b c8	 mov	 rcx, rax
  00089	e8 00 00 00 00	 call	 ??1CComDynamicUnkArray@ATL@@QEAA@XZ ; ATL::CComDynamicUnkArray::~CComDynamicUnkArray
  0008e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00092	5f		 pop	 rdi
  00093	c3		 ret	 0
??1?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>::~IConnectionPointImpl<COPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,ATL::CComDynamicUnkArray>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_ICPLocator@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@B@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$_ICPLocator@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@B@ATL@@QEAA@XZ PROC ; ATL::_ICPLocator<&DIID__IOPOSVideoCaptureEvents>::_ICPLocator<&DIID__IOPOSVideoCaptureEvents>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$_ICPLocator@$1?DIID__IOPOSVideoCaptureEvents@@3U_GUID@@B@ATL@@QEAA@XZ ENDP ; ATL::_ICPLocator<&DIID__IOPOSVideoCaptureEvents>::_ICPLocator<&DIID__IOPOSVideoCaptureEvents>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$IPropertyNotifySinkCP@VCOPOSVideoCapture@@VCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$IPropertyNotifySinkCP@VCOPOSVideoCapture@@VCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ PROC ; ATL::IPropertyNotifySinkCP<COPOSVideoCapture,ATL::CComDynamicUnkArray>::~IPropertyNotifySinkCP<COPOSVideoCapture,ATL::CComDynamicUnkArray>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ ; ATL::IConnectionPointImpl<COPOSVideoCapture,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::~IConnectionPointImpl<COPOSVideoCapture,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$IPropertyNotifySinkCP@VCOPOSVideoCapture@@VCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::IPropertyNotifySinkCP<COPOSVideoCapture,ATL::CComDynamicUnkArray>::~IPropertyNotifySinkCP<COPOSVideoCapture,ATL::CComDynamicUnkArray>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$IPropertyNotifySinkCP@VCOPOSVideoCapture@@VCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$IPropertyNotifySinkCP@VCOPOSVideoCapture@@VCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ PROC ; ATL::IPropertyNotifySinkCP<COPOSVideoCapture,ATL::CComDynamicUnkArray>::IPropertyNotifySinkCP<COPOSVideoCapture,ATL::CComDynamicUnkArray>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$IPropertyNotifySinkCP@VCOPOSVideoCapture@@VCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::IPropertyNotifySinkCP<COPOSVideoCapture,ATL::CComDynamicUnkArray>::IPropertyNotifySinkCP<COPOSVideoCapture,ATL::CComDynamicUnkArray>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ PROC ; ATL::IConnectionPointImpl<COPOSVideoCapture,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::IConnectionPointImpl<COPOSVideoCapture,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$_ICPLocator@$1?IID_IPropertyNotifySink@@3U_GUID@@B@ATL@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0CComDynamicUnkArray@ATL@@QEAA@XZ ; ATL::CComDynamicUnkArray::CComDynamicUnkArray
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??0?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::IConnectionPointImpl<COPOSVideoCapture,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::IConnectionPointImpl<COPOSVideoCapture,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
pp$ = 32
this$ = 64
??1?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ PROC ; ATL::IConnectionPointImpl<COPOSVideoCapture,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::~IConnectionPointImpl<COPOSVideoCapture,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>, COMDAT

; 6354 : {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 6355 : 	IUnknown** pp = m_vec.begin();

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ?begin@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::begin
  0002f	48 89 44 24 20	 mov	 QWORD PTR pp$[rsp], rax
$LN2@IConnectio:

; 6356 : 	while (pp < m_vec.end())

  00034	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 83 c0 08	 add	 rax, 8
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ?end@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::end
  00045	48 39 44 24 20	 cmp	 QWORD PTR pp$[rsp], rax
  0004a	73 31		 jae	 SHORT $LN3@IConnectio

; 6357 : 	{
; 6358 : 		if (*pp != NULL)

  0004c	48 8b 44 24 20	 mov	 rax, QWORD PTR pp$[rsp]
  00051	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00055	74 16		 je	 SHORT $LN4@IConnectio

; 6359 : 			(*pp)->Release();

  00057	48 8b 44 24 20	 mov	 rax, QWORD PTR pp$[rsp]
  0005c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pp$[rsp]
  00064	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00067	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006a	ff 50 10	 call	 QWORD PTR [rax+16]
$LN4@IConnectio:

; 6360 : 		pp++;

  0006d	48 8b 44 24 20	 mov	 rax, QWORD PTR pp$[rsp]
  00072	48 83 c0 08	 add	 rax, 8
  00076	48 89 44 24 20	 mov	 QWORD PTR pp$[rsp], rax

; 6361 : 	}

  0007b	eb b7		 jmp	 SHORT $LN2@IConnectio
$LN3@IConnectio:

; 6362 : }

  0007d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 83 c0 08	 add	 rax, 8
  00086	48 8b c8	 mov	 rcx, rax
  00089	e8 00 00 00 00	 call	 ??1CComDynamicUnkArray@ATL@@QEAA@XZ ; ATL::CComDynamicUnkArray::~CComDynamicUnkArray
  0008e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00092	5f		 pop	 rdi
  00093	c3		 ret	 0
??1?$IConnectionPointImpl@VCOPOSVideoCapture@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::IConnectionPointImpl<COPOSVideoCapture,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::~IConnectionPointImpl<COPOSVideoCapture,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_ICPLocator@$1?IID_IPropertyNotifySink@@3U_GUID@@B@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$_ICPLocator@$1?IID_IPropertyNotifySink@@3U_GUID@@B@ATL@@QEAA@XZ PROC ; ATL::_ICPLocator<&IID_IPropertyNotifySink>::_ICPLocator<&IID_IPropertyNotifySink>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$_ICPLocator@$1?IID_IPropertyNotifySink@@3U_GUID@@B@ATL@@QEAA@XZ ENDP ; ATL::_ICPLocator<&IID_IPropertyNotifySink>::_ICPLocator<&IID_IPropertyNotifySink>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ??0?$IObjectSafetyImpl@VCOPOSVideoCapture@@$02@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$IObjectSafetyImpl@VCOPOSVideoCapture@@$02@ATL@@QEAA@XZ PROC ; ATL::IObjectSafetyImpl<COPOSVideoCapture,3>::IObjectSafetyImpl<COPOSVideoCapture,3>, COMDAT

; 3657 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IObjectSafety@@QEAA@XZ

; 3656 : 	IObjectSafetyImpl() : m_dwCurrentSafety(0)

  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0

; 3658 : 		ATLSTATIC_ASSERT((dwSupportedSafety != 0 &&
; 3659 : 				(~(INTERFACESAFE_FOR_UNTRUSTED_CALLER | INTERFACESAFE_FOR_UNTRUSTED_DATA) & dwSupportedSafety) == 0),
; 3660 : 					"Only INTERFACESAFE_FOR_UNTRUSTED_CALLER and/or INTERFACESAFE_FOR_UNTRUSTED_DATA are supported for dwSupportedSafety parameter.");
; 3661 : 	}

  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??0?$IObjectSafetyImpl@VCOPOSVideoCapture@@$02@ATL@@QEAA@XZ ENDP ; ATL::IObjectSafetyImpl<COPOSVideoCapture,3>::IObjectSafetyImpl<COPOSVideoCapture,3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$IProvideClassInfo2Impl@$1?CLSID_OPOSVideoCapture@@3U_GUID@@B$1?DIID__IOPOSVideoCaptureEvents@@3U2@B$1?LIBID_OposVideoCapture_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$IProvideClassInfo2Impl@$1?CLSID_OPOSVideoCapture@@3U_GUID@@B$1?DIID__IOPOSVideoCaptureEvents@@3U2@B$1?LIBID_OposVideoCapture_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@QEAA@XZ PROC ; ATL::IProvideClassInfo2Impl<&CLSID_OPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,&LIBID_OposVideoCapture_CCO,1,0,ATL::CComTypeInfoHolder>::IProvideClassInfo2Impl<&CLSID_OPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,&LIBID_OposVideoCapture_CCO,1,0,ATL::CComTypeInfoHolder>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IProvideClassInfo2@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$IProvideClassInfo2Impl@$1?CLSID_OPOSVideoCapture@@3U_GUID@@B$1?DIID__IOPOSVideoCaptureEvents@@3U2@B$1?LIBID_OposVideoCapture_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::IProvideClassInfo2Impl<&CLSID_OPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,&LIBID_OposVideoCapture_CCO,1,0,ATL::CComTypeInfoHolder>::IProvideClassInfo2Impl<&CLSID_OPOSVideoCapture,&DIID__IOPOSVideoCaptureEvents,&LIBID_OposVideoCapture_CCO,1,0,ATL::CComTypeInfoHolder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$IDataObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$IDataObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ PROC ; ATL::IDataObjectImpl<COPOSVideoCapture>::IDataObjectImpl<COPOSVideoCapture>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IDataObject@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$IDataObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ENDP ; ATL::IDataObjectImpl<COPOSVideoCapture>::IDataObjectImpl<COPOSVideoCapture>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$IQuickActivateImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$IQuickActivateImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ PROC ; ATL::IQuickActivateImpl<COPOSVideoCapture>::IQuickActivateImpl<COPOSVideoCapture>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IQuickActivate@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$IQuickActivateImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ENDP ; ATL::IQuickActivateImpl<COPOSVideoCapture>::IQuickActivateImpl<COPOSVideoCapture>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ISpecifyPropertyPagesImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$ISpecifyPropertyPagesImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ PROC ; ATL::ISpecifyPropertyPagesImpl<COPOSVideoCapture>::ISpecifyPropertyPagesImpl<COPOSVideoCapture>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0ISpecifyPropertyPages@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$ISpecifyPropertyPagesImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ENDP ; ATL::ISpecifyPropertyPagesImpl<COPOSVideoCapture>::ISpecifyPropertyPagesImpl<COPOSVideoCapture>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$IPersistStorageImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$IPersistStorageImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ PROC ; ATL::IPersistStorageImpl<COPOSVideoCapture>::IPersistStorageImpl<COPOSVideoCapture>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IPersistStorage@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$IPersistStorageImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ENDP ; ATL::IPersistStorageImpl<COPOSVideoCapture>::IPersistStorageImpl<COPOSVideoCapture>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ PROC ; ATL::IConnectionPointContainerImpl<COPOSVideoCapture>::IConnectionPointContainerImpl<COPOSVideoCapture>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IConnectionPointContainer@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$IConnectionPointContainerImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ENDP ; ATL::IConnectionPointContainerImpl<COPOSVideoCapture>::IConnectionPointContainerImpl<COPOSVideoCapture>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$IOleInPlaceObjectWindowlessImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$IOleInPlaceObjectWindowlessImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ PROC ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSVideoCapture>::IOleInPlaceObjectWindowlessImpl<COPOSVideoCapture>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IOleInPlaceObjectWindowless@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$IOleInPlaceObjectWindowlessImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ENDP ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSVideoCapture>::IOleInPlaceObjectWindowlessImpl<COPOSVideoCapture>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$IViewObjectExImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$IViewObjectExImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ PROC ; ATL::IViewObjectExImpl<COPOSVideoCapture>::IViewObjectExImpl<COPOSVideoCapture>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IViewObjectEx@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$IViewObjectExImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ENDP ; ATL::IViewObjectExImpl<COPOSVideoCapture>::IViewObjectExImpl<COPOSVideoCapture>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$IOleInPlaceActiveObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$IOleInPlaceActiveObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ PROC ; ATL::IOleInPlaceActiveObjectImpl<COPOSVideoCapture>::IOleInPlaceActiveObjectImpl<COPOSVideoCapture>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IOleInPlaceActiveObject@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$IOleInPlaceActiveObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ENDP ; ATL::IOleInPlaceActiveObjectImpl<COPOSVideoCapture>::IOleInPlaceActiveObjectImpl<COPOSVideoCapture>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$IOleObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$IOleObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ PROC ; ATL::IOleObjectImpl<COPOSVideoCapture>::IOleObjectImpl<COPOSVideoCapture>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IOleObject@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$IOleObjectImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ENDP ; ATL::IOleObjectImpl<COPOSVideoCapture>::IOleObjectImpl<COPOSVideoCapture>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$IOleControlImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$IOleControlImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ PROC ; ATL::IOleControlImpl<COPOSVideoCapture>::IOleControlImpl<COPOSVideoCapture>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IOleControl@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$IOleControlImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ENDP ; ATL::IOleControlImpl<COPOSVideoCapture>::IOleControlImpl<COPOSVideoCapture>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$IPersistStreamInitImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$IPersistStreamInitImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ PROC ; ATL::IPersistStreamInitImpl<COPOSVideoCapture>::IPersistStreamInitImpl<COPOSVideoCapture>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IPersistStreamInit@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$IPersistStreamInitImpl@VCOPOSVideoCapture@@@ATL@@QEAA@XZ ENDP ; ATL::IPersistStreamInitImpl<COPOSVideoCapture>::IPersistStreamInitImpl<COPOSVideoCapture>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComControl@VCOPOSVideoCapture@@V?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComControl@VCOPOSVideoCapture@@V?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UEAA@XZ PROC ; ATL::CComControl<COPOSVideoCapture,ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >::~CComControl<COPOSVideoCapture,ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 68	 add	 rax, 104		; 00000068H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@UEAA@XZ
  0002f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00034	e8 00 00 00 00	 call	 ??1CComControlBase@ATL@@UEAA@XZ ; ATL::CComControlBase::~CComControlBase
  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??1?$CComControl@VCOPOSVideoCapture@@V?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UEAA@XZ ENDP ; ATL::CComControl<COPOSVideoCapture,ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >::~CComControl<COPOSVideoCapture,ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ??0?$CComControl@VCOPOSVideoCapture@@V?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CComControl@VCOPOSVideoCapture@@V?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@QEAA@XZ PROC ; ATL::CComControl<COPOSVideoCapture,ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >::CComControl<COPOSVideoCapture,ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >, COMDAT

; 1592 : 	CComControl() : CComControlBase(this->m_hWnd) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 70	 add	 rax, 112		; 00000070H
  00027	48 8b d0	 mov	 rdx, rax
  0002a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002f	e8 00 00 00 00	 call	 ??0CComControlBase@ATL@@QEAA@AEAPEAUHWND__@@@Z ; ATL::CComControlBase::CComControlBase
  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 83 c0 68	 add	 rax, 104		; 00000068H
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ??0?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@QEAA@XZ
  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
??0?$CComControl@VCOPOSVideoCapture@@V?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::CComControl<COPOSVideoCapture,ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >::CComControl<COPOSVideoCapture,ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@UEAA@XZ PROC ; ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UEAA@XZ
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@UEAA@XZ ENDP ; ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@QEAA@XZ PROC ; ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QEAA@XZ ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$CWindowImpl@VCOPOSVideoCapture@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@QEAA@XZ ENDP ; ATL::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImpl<COPOSVideoCapture,ATL::CWindow,ATL::CWinTraits<1442840576,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$IDispatchImpl@UIOPOSVideoCapture@@$1?IID_IOPOSVideoCapture@@3U_GUID@@B$1?LIBID_OposVideoCapture_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$IDispatchImpl@UIOPOSVideoCapture@@$1?IID_IOPOSVideoCapture@@3U_GUID@@B$1?LIBID_OposVideoCapture_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@QEAA@XZ PROC ; ATL::IDispatchImpl<IOPOSVideoCapture,&IID_IOPOSVideoCapture,&LIBID_OposVideoCapture_CCO,1,0,ATL::CComTypeInfoHolder>::IDispatchImpl<IOPOSVideoCapture,&IID_IOPOSVideoCapture,&LIBID_OposVideoCapture_CCO,1,0,ATL::CComTypeInfoHolder>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IOPOSVideoCapture@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$IDispatchImpl@UIOPOSVideoCapture@@$1?IID_IOPOSVideoCapture@@3U_GUID@@B$1?LIBID_OposVideoCapture_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::IDispatchImpl<IOPOSVideoCapture,&IID_IOPOSVideoCapture,&LIBID_OposVideoCapture_CCO,1,0,ATL::CComTypeInfoHolder>::IDispatchImpl<IOPOSVideoCapture,&IID_IOPOSVideoCapture,&LIBID_OposVideoCapture_CCO,1,0,ATL::CComTypeInfoHolder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0OposVariantResult@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0OposVariantResult@@QEAA@XZ PROC			; OposVariantResult::OposVariantResult, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0OposVariant@@QEAA@XZ	; OposVariant::OposVariant
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0OposVariantResult@@QEAA@XZ ENDP			; OposVariantResult::OposVariantResult
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.h
;	COMDAT ??1OposVariantResult@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1OposVariantResult@@QEAA@XZ PROC			; OposVariantResult::~OposVariantResult, COMDAT

; 150  :     ~OposVariantResult() { Clear(); }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?Clear@OposVariant@@QEAAJXZ ; OposVariant::Clear
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??1OposVariant@@QEAA@XZ	; OposVariant::~OposVariant
  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??1OposVariantResult@@QEAA@XZ ENDP			; OposVariantResult::~OposVariantResult
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_EOposVariant@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_EOposVariant@@QEAAPEAXI@Z PROC			; OposVariant::`vector deleting destructor', COMDAT
$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00026	83 e0 02	 and	 eax, 2
  00029	85 c0		 test	 eax, eax
  0002b	74 54		 je	 SHORT $LN2@vector
  0002d	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1OposVariant@@QEAA@XZ ; OposVariant::~OposVariant
  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00039	4c 8b 40 f8	 mov	 r8, QWORD PTR [rax-8]
  0003d	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00042	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ??_I@YAXPEAX_K1P6AX0@Z@Z
  0004c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00050	83 e0 01	 and	 eax, 1
  00053	85 c0		 test	 eax, eax
  00055	74 1f		 je	 SHORT $LN3@vector
  00057	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 6b 40 f8 20	 imul	 rax, QWORD PTR [rax-8], 32 ; 00000020H
  00061	48 83 c0 08	 add	 rax, 8
  00065	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0006a	48 83 e9 08	 sub	 rcx, 8
  0006e	48 8b d0	 mov	 rdx, rax
  00071	e8 00 00 00 00	 call	 ??_V@YAXPEAX_K@Z	; operator delete[]
$LN3@vector:
  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0007b	48 83 e8 08	 sub	 rax, 8
  0007f	eb 29		 jmp	 SHORT $LN1@vector
$LN2@vector:
  00081	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00086	e8 00 00 00 00	 call	 ??1OposVariant@@QEAA@XZ	; OposVariant::~OposVariant
  0008b	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0008f	83 e0 01	 and	 eax, 1
  00092	85 c0		 test	 eax, eax
  00094	74 0f		 je	 SHORT $LN4@vector
  00096	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0009b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  000a0	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN4@vector:
  000a5	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
$LN1@vector:
  000aa	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000ae	5f		 pop	 rdi
  000af	c3		 ret	 0
??_EOposVariant@@QEAAPEAXI@Z ENDP			; OposVariant::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.h
;	COMDAT ?Clear@OposVariant@@QEAAJXZ
_TEXT	SEGMENT
this$ = 48
?Clear@OposVariant@@QEAAJXZ PROC			; OposVariant::Clear, COMDAT

; 79   :     HRESULT Clear() { _bNeedClear = false; return VariantClear(this); }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	c6 40 18 00	 mov	 BYTE PTR [rax+24], 0
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_VariantClear
  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?Clear@OposVariant@@QEAAJXZ ENDP			; OposVariant::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.h
;	COMDAT ??1OposVariant@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1OposVariant@@QEAA@XZ PROC				; OposVariant::~OposVariant, COMDAT

; 78   :     ~OposVariant() { if (_bNeedClear) Clear(); }

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 40 18	 movzx	 eax, BYTE PTR [rax+24]
  00027	85 c0		 test	 eax, eax
  00029	74 0a		 je	 SHORT $LN2@OposVarian
  0002b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00030	e8 00 00 00 00	 call	 ?Clear@OposVariant@@QEAAJXZ ; OposVariant::Clear
$LN2@OposVarian:
  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??1OposVariant@@QEAA@XZ ENDP				; OposVariant::~OposVariant
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.h
;	COMDAT ??0OposVariant@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0OposVariant@@QEAA@XZ PROC				; OposVariant::OposVariant, COMDAT

; 77   :     OposVariant() { vt = VT_EMPTY; _bNeedClear = false; }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	33 c0		 xor	 eax, eax
  00008	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  0000d	66 89 01	 mov	 WORD PTR [rcx], ax
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	c6 40 18 00	 mov	 BYTE PTR [rax+24], 0
  00019	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001e	5f		 pop	 rdi
  0001f	c3		 ret	 0
??0OposVariant@@QEAA@XZ ENDP				; OposVariant::OposVariant
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IOPOSVideoCapture@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IOPOSVideoCapture@@QEAA@XZ PROC			; IOPOSVideoCapture::IOPOSVideoCapture, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IOPOSVideoCapture_1_16@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IOPOSVideoCapture@@QEAA@XZ ENDP			; IOPOSVideoCapture::IOPOSVideoCapture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IOPOSVideoCapture_1_16@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IOPOSVideoCapture_1_16@@QEAA@XZ PROC			; IOPOSVideoCapture_1_16::IOPOSVideoCapture_1_16, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IDispatch@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IOPOSVideoCapture_1_16@@QEAA@XZ ENDP			; IOPOSVideoCapture_1_16::IOPOSVideoCapture_1_16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComQIPtr@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComQIPtr@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QEAA@XZ PROC ; ATL::CComQIPtr<IDispatch,&_GUID_00020400_0000_0000_c000_000000000046>::~CComQIPtr<IDispatch,&_GUID_00020400_0000_0000_c000_000000000046>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QEAA@XZ
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CComQIPtr@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QEAA@XZ ENDP ; ATL::CComQIPtr<IDispatch,&_GUID_00020400_0000_0000_c000_000000000046>::~CComQIPtr<IDispatch,&_GUID_00020400_0000_0000_c000_000000000046>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComQIPtr@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CComQIPtr@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QEAA@XZ PROC ; ATL::CComQIPtr<IDispatch,&_GUID_00020400_0000_0000_c000_000000000046>::CComQIPtr<IDispatch,&_GUID_00020400_0000_0000_c000_000000000046>, COMDAT

; 616  :     CComQIPtr() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 617  :     {

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$CComPtr@UIDispatch@@@ATL@@QEAA@XZ ; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>

; 618  :     }

  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$CComQIPtr@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QEAA@XZ ENDP ; ATL::CComQIPtr<IDispatch,&_GUID_00020400_0000_0000_c000_000000000046>::CComQIPtr<IDispatch,&_GUID_00020400_0000_0000_c000_000000000046>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIOleAdviseHolder@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComPtr@UIOleAdviseHolder@@@ATL@@QEAA@XZ PROC	; ATL::CComPtr<IOleAdviseHolder>::~CComPtr<IOleAdviseHolder>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QEAA@XZ ; ATL::CComPtrBase<IOleAdviseHolder>::~CComPtrBase<IOleAdviseHolder>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CComPtr@UIOleAdviseHolder@@@ATL@@QEAA@XZ ENDP	; ATL::CComPtr<IOleAdviseHolder>::~CComPtr<IOleAdviseHolder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIOleAdviseHolder@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CComPtr@UIOleAdviseHolder@@@ATL@@QEAA@XZ PROC	; ATL::CComPtr<IOleAdviseHolder>::CComPtr<IOleAdviseHolder>, COMDAT

; 316  :     CComPtr() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 317  :     {

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIOleAdviseHolder@@@ATL@@IEAA@XZ ; ATL::CComPtrBase<IOleAdviseHolder>::CComPtrBase<IOleAdviseHolder>

; 318  :     }

  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$CComPtr@UIOleAdviseHolder@@@ATL@@QEAA@XZ ENDP	; ATL::CComPtr<IOleAdviseHolder>::CComPtr<IOleAdviseHolder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QEAA@XZ PROC	; ATL::CComPtrBase<IOleAdviseHolder>::~CComPtrBase<IOleAdviseHolder>, COMDAT

; 182  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 183  :         if (p)

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@CComPtrBas

; 184  :             p->Release();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	ff 50 10	 call	 QWORD PTR [rax+16]
$LN2@CComPtrBas:

; 185  :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QEAA@XZ ENDP	; ATL::CComPtrBase<IOleAdviseHolder>::~CComPtrBase<IOleAdviseHolder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIOleAdviseHolder@@@ATL@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$CComPtrBase@UIOleAdviseHolder@@@ATL@@IEAA@XZ PROC	; ATL::CComPtrBase<IOleAdviseHolder>::CComPtrBase<IOleAdviseHolder>, COMDAT

; 163  :     CComPtrBase() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 164  :     {
; 165  :         p = NULL;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 166  :     }

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0?$CComPtrBase@UIOleAdviseHolder@@@ATL@@IEAA@XZ ENDP	; ATL::CComPtrBase<IOleAdviseHolder>::CComPtrBase<IOleAdviseHolder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIDataAdviseHolder@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComPtr@UIDataAdviseHolder@@@ATL@@QEAA@XZ PROC	; ATL::CComPtr<IDataAdviseHolder>::~CComPtr<IDataAdviseHolder>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QEAA@XZ ; ATL::CComPtrBase<IDataAdviseHolder>::~CComPtrBase<IDataAdviseHolder>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CComPtr@UIDataAdviseHolder@@@ATL@@QEAA@XZ ENDP	; ATL::CComPtr<IDataAdviseHolder>::~CComPtr<IDataAdviseHolder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIDataAdviseHolder@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CComPtr@UIDataAdviseHolder@@@ATL@@QEAA@XZ PROC	; ATL::CComPtr<IDataAdviseHolder>::CComPtr<IDataAdviseHolder>, COMDAT

; 316  :     CComPtr() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 317  :     {

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIDataAdviseHolder@@@ATL@@IEAA@XZ ; ATL::CComPtrBase<IDataAdviseHolder>::CComPtrBase<IDataAdviseHolder>

; 318  :     }

  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$CComPtr@UIDataAdviseHolder@@@ATL@@QEAA@XZ ENDP	; ATL::CComPtr<IDataAdviseHolder>::CComPtr<IDataAdviseHolder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QEAA@XZ PROC	; ATL::CComPtrBase<IDataAdviseHolder>::~CComPtrBase<IDataAdviseHolder>, COMDAT

; 182  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 183  :         if (p)

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@CComPtrBas

; 184  :             p->Release();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	ff 50 10	 call	 QWORD PTR [rax+16]
$LN2@CComPtrBas:

; 185  :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QEAA@XZ ENDP	; ATL::CComPtrBase<IDataAdviseHolder>::~CComPtrBase<IDataAdviseHolder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIDataAdviseHolder@@@ATL@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$CComPtrBase@UIDataAdviseHolder@@@ATL@@IEAA@XZ PROC	; ATL::CComPtrBase<IDataAdviseHolder>::CComPtrBase<IDataAdviseHolder>, COMDAT

; 163  :     CComPtrBase() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 164  :     {
; 165  :         p = NULL;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 166  :     }

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0?$CComPtrBase@UIDataAdviseHolder@@@ATL@@IEAA@XZ ENDP	; ATL::CComPtrBase<IDataAdviseHolder>::CComPtrBase<IDataAdviseHolder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComPtr@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ PROC ; ATL::CComPtr<IOleInPlaceSiteWindowless>::~CComPtr<IOleInPlaceSiteWindowless>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::~CComPtrBase<IOleInPlaceSiteWindowless>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CComPtr@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ ENDP ; ATL::CComPtr<IOleInPlaceSiteWindowless>::~CComPtr<IOleInPlaceSiteWindowless>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CComPtr@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ PROC ; ATL::CComPtr<IOleInPlaceSiteWindowless>::CComPtr<IOleInPlaceSiteWindowless>, COMDAT

; 316  :     CComPtr() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 317  :     {

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@IEAA@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::CComPtrBase<IOleInPlaceSiteWindowless>

; 318  :     }

  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$CComPtr@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ ENDP ; ATL::CComPtr<IOleInPlaceSiteWindowless>::CComPtr<IOleInPlaceSiteWindowless>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ PROC ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::~CComPtrBase<IOleInPlaceSiteWindowless>, COMDAT

; 182  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 183  :         if (p)

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@CComPtrBas

; 184  :             p->Release();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	ff 50 10	 call	 QWORD PTR [rax+16]
$LN2@CComPtrBas:

; 185  :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::~CComPtrBase<IOleInPlaceSiteWindowless>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@IEAA@XZ PROC ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::CComPtrBase<IOleInPlaceSiteWindowless>, COMDAT

; 163  :     CComPtrBase() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 164  :     {
; 165  :         p = NULL;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 166  :     }

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@IEAA@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::CComPtrBase<IOleInPlaceSiteWindowless>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ??1CComControlBase@ATL@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
tv90 = 48
this$ = 80
??1CComControlBase@ATL@@UEAA@XZ PROC			; ATL::CComControlBase::~CComControlBase, COMDAT

; 209  : 	{

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 210  : 		if (m_hWndCD != NULL)

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00027	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0002b	74 12		 je	 SHORT $LN2@CComContro

; 211  : 			::DestroyWindow(m_hWndCD);

  0002d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00036	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00039	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DestroyWindow
$LN2@CComContro:

; 212  : 		ATLTRACE(atlTraceControls,2,_T("Control Destroyed\n"));

  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00046	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAAIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  0004b	89 44 24 30	 mov	 DWORD PTR tv90[rsp], eax
  0004f	41 b8 d4 00 00
	00		 mov	 r8d, 212		; 000000d4H
  00055	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0005c	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00061	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00066	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1CG@KBMKEOOB@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy@
  0006d	41 b8 02 00 00
	00		 mov	 r8d, 2
  00073	8b 4c 24 30	 mov	 ecx, DWORD PTR tv90[rsp]
  00077	8b d1		 mov	 edx, ecx
  00079	48 8b c8	 mov	 rcx, rax
  0007c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ ; ATL::CTraceFileAndLineInfo::operator()

; 213  : 	}

  00081	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00086	48 83 c0 30	 add	 rax, 48			; 00000030H
  0008a	48 8b c8	 mov	 rcx, rax
  0008d	e8 00 00 00 00	 call	 ??1?$CComQIPtr@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QEAA@XZ
  00092	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00097	48 83 c0 28	 add	 rax, 40			; 00000028H
  0009b	48 8b c8	 mov	 rcx, rax
  0009e	e8 00 00 00 00	 call	 ??1?$CComPtr@UIAdviseSink@@@ATL@@QEAA@XZ
  000a3	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a8	48 83 c0 20	 add	 rax, 32			; 00000020H
  000ac	48 8b c8	 mov	 rcx, rax
  000af	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleClientSite@@@ATL@@QEAA@XZ
  000b4	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000b9	48 83 c0 18	 add	 rax, 24
  000bd	48 8b c8	 mov	 rcx, rax
  000c0	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleAdviseHolder@@@ATL@@QEAA@XZ
  000c5	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000ca	48 83 c0 10	 add	 rax, 16
  000ce	48 8b c8	 mov	 rcx, rax
  000d1	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDataAdviseHolder@@@ATL@@QEAA@XZ
  000d6	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000db	48 83 c0 08	 add	 rax, 8
  000df	48 8b c8	 mov	 rcx, rax
  000e2	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ
  000e7	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
??1CComControlBase@ATL@@UEAA@XZ ENDP			; ATL::CComControlBase::~CComControlBase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ??0CComControlBase@ATL@@QEAA@AEAPEAUHWND__@@@Z
_TEXT	SEGMENT
this$ = 48
h$ = 56
??0CComControlBase@ATL@@QEAA@AEAPEAUHWND__@@@Z PROC	; ATL::CComControlBase::CComControlBase, COMDAT

; 184  : 	{

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 83 c0 08	 add	 rax, 8
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleInPlaceSiteWindowless@@@ATL@@QEAA@XZ ; ATL::CComPtr<IOleInPlaceSiteWindowless>::CComPtr<IOleInPlaceSiteWindowless>
  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 83 c0 10	 add	 rax, 16
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ??0?$CComPtr@UIDataAdviseHolder@@@ATL@@QEAA@XZ ; ATL::CComPtr<IDataAdviseHolder>::CComPtr<IDataAdviseHolder>
  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004a	48 83 c0 18	 add	 rax, 24
  0004e	48 8b c8	 mov	 rcx, rax
  00051	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleAdviseHolder@@@ATL@@QEAA@XZ ; ATL::CComPtr<IOleAdviseHolder>::CComPtr<IOleAdviseHolder>
  00056	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005b	48 83 c0 20	 add	 rax, 32			; 00000020H
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleClientSite@@@ATL@@QEAA@XZ ; ATL::CComPtr<IOleClientSite>::CComPtr<IOleClientSite>
  00067	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0006c	48 83 c0 28	 add	 rax, 40			; 00000028H
  00070	48 8b c8	 mov	 rcx, rax
  00073	e8 00 00 00 00	 call	 ??0?$CComPtr@UIAdviseSink@@@ATL@@QEAA@XZ ; ATL::CComPtr<IAdviseSink>::CComPtr<IAdviseSink>
  00078	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0007d	48 83 c0 30	 add	 rax, 48			; 00000030H
  00081	48 8b c8	 mov	 rcx, rax
  00084	e8 00 00 00 00	 call	 ??0?$CComQIPtr@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QEAA@XZ ; ATL::CComQIPtr<IDispatch,&_GUID_00020400_0000_0000_c000_000000000046>::CComQIPtr<IDispatch,&_GUID_00020400_0000_0000_c000_000000000046>

; 183  : 	CComControlBase(_Inout_ HWND& h) : m_hWndCD(h)

  00089	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0008e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR h$[rsp]
  00093	48 89 48 58	 mov	 QWORD PTR [rax+88], rcx

; 185  : 		m_sizeExtent.cx = 2*2540;

  00097	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0009c	c7 40 40 d8 13
	00 00		 mov	 DWORD PTR [rax+64], 5080 ; 000013d8H

; 186  : 		m_sizeExtent.cy = 2*2540;

  000a3	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000a8	c7 40 44 d8 13
	00 00		 mov	 DWORD PTR [rax+68], 5080 ; 000013d8H

; 187  : 		m_sizeNatural = m_sizeExtent;

  000af	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000b4	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  000b8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  000bd	48 89 41 38	 mov	 QWORD PTR [rcx+56], rax

; 188  : 		m_rcPos.left = 0;

  000c1	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000c6	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [rax+72], 0

; 189  : 		m_rcPos.right = 0;

  000cd	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000d2	c7 40 50 00 00
	00 00		 mov	 DWORD PTR [rax+80], 0

; 190  : 		m_rcPos.top = 0;

  000d9	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000de	c7 40 4c 00 00
	00 00		 mov	 DWORD PTR [rax+76], 0

; 191  : 		m_rcPos.bottom = 0;

  000e5	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000ea	c7 40 54 00 00
	00 00		 mov	 DWORD PTR [rax+84], 0

; 192  : 		m_nFreezeEvents = 0;

  000f1	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000f6	c7 40 60 00 00
	00 00		 mov	 DWORD PTR [rax+96], 0

; 193  : 		m_bNegotiatedWnd = 0;

  000fd	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00102	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  00105	83 e0 fe	 and	 eax, -2			; fffffffeH
  00108	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0010d	89 41 64	 mov	 DWORD PTR [rcx+100], eax

; 194  : 		m_bWndLess = 0;

  00110	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00115	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  00118	83 e0 fd	 and	 eax, -3			; fffffffdH
  0011b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00120	89 41 64	 mov	 DWORD PTR [rcx+100], eax

; 195  : 		m_bInPlaceActive = 0;

  00123	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00128	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  0012b	83 e0 fb	 and	 eax, -5			; fffffffbH
  0012e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00133	89 41 64	 mov	 DWORD PTR [rcx+100], eax

; 196  : 		m_bUIActive = 0;

  00136	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0013b	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  0013e	83 e0 f7	 and	 eax, -9			; fffffff7H
  00141	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00146	89 41 64	 mov	 DWORD PTR [rcx+100], eax

; 197  : 		m_bUsingWindowRgn = 0;

  00149	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0014e	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  00151	83 e0 ef	 and	 eax, -17		; ffffffefH
  00154	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00159	89 41 64	 mov	 DWORD PTR [rcx+100], eax

; 198  : 		m_bInPlaceSiteEx = 0;

  0015c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00161	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  00164	83 e0 df	 and	 eax, -33		; ffffffdfH
  00167	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0016c	89 41 64	 mov	 DWORD PTR [rcx+100], eax

; 199  : 		m_bWindowOnly = 0;

  0016f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00174	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  00177	83 e0 bf	 and	 eax, -65		; ffffffbfH
  0017a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0017f	89 41 64	 mov	 DWORD PTR [rcx+100], eax

; 200  : 		m_bRequiresSave = 0;

  00182	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00187	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  0018a	0f ba f0 07	 btr	 eax, 7
  0018e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00193	89 41 64	 mov	 DWORD PTR [rcx+100], eax

; 201  : 		m_bWasOnceWindowless = 0;

  00196	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0019b	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  0019e	0f ba f0 08	 btr	 eax, 8
  001a2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  001a7	89 41 64	 mov	 DWORD PTR [rcx+100], eax

; 202  : 		m_bAutoSize = 0;

  001aa	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  001af	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  001b2	0f ba f0 09	 btr	 eax, 9
  001b6	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  001bb	89 41 64	 mov	 DWORD PTR [rcx+100], eax

; 203  : 		m_bRecomposeOnResize = 0;

  001be	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  001c3	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  001c6	0f ba f0 0a	 btr	 eax, 10
  001ca	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  001cf	89 41 64	 mov	 DWORD PTR [rcx+100], eax

; 204  : 		m_bResizeNatural = 0;

  001d2	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  001d7	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  001da	0f ba f0 0b	 btr	 eax, 11
  001de	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  001e3	89 41 64	 mov	 DWORD PTR [rcx+100], eax

; 205  : 		m_bDrawFromNatural = 0;

  001e6	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  001eb	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  001ee	0f ba f0 0c	 btr	 eax, 12
  001f2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  001f7	89 41 64	 mov	 DWORD PTR [rcx+100], eax

; 206  : 		m_bDrawGetDataInHimetric = 0;

  001fa	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  001ff	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  00202	0f ba f0 0d	 btr	 eax, 13
  00206	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0020b	89 41 64	 mov	 DWORD PTR [rcx+100], eax

; 207  : 	}

  0020e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00213	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00217	5f		 pop	 rdi
  00218	c3		 ret	 0
??0CComControlBase@ATL@@QEAA@AEAPEAUHWND__@@@Z ENDP	; ATL::CComControlBase::CComControlBase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IObjectSafety@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IObjectSafety@@QEAA@XZ PROC				; IObjectSafety::IObjectSafety, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IUnknown@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IObjectSafety@@QEAA@XZ ENDP				; IObjectSafety::IObjectSafety
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIAdviseSink@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComPtr@UIAdviseSink@@@ATL@@QEAA@XZ PROC		; ATL::CComPtr<IAdviseSink>::~CComPtr<IAdviseSink>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIAdviseSink@@@ATL@@QEAA@XZ ; ATL::CComPtrBase<IAdviseSink>::~CComPtrBase<IAdviseSink>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CComPtr@UIAdviseSink@@@ATL@@QEAA@XZ ENDP		; ATL::CComPtr<IAdviseSink>::~CComPtr<IAdviseSink>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIAdviseSink@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CComPtr@UIAdviseSink@@@ATL@@QEAA@XZ PROC		; ATL::CComPtr<IAdviseSink>::CComPtr<IAdviseSink>, COMDAT

; 316  :     CComPtr() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 317  :     {

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIAdviseSink@@@ATL@@IEAA@XZ ; ATL::CComPtrBase<IAdviseSink>::CComPtrBase<IAdviseSink>

; 318  :     }

  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$CComPtr@UIAdviseSink@@@ATL@@QEAA@XZ ENDP		; ATL::CComPtr<IAdviseSink>::CComPtr<IAdviseSink>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIAdviseSink@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComPtrBase@UIAdviseSink@@@ATL@@QEAA@XZ PROC	; ATL::CComPtrBase<IAdviseSink>::~CComPtrBase<IAdviseSink>, COMDAT

; 182  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 183  :         if (p)

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@CComPtrBas

; 184  :             p->Release();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	ff 50 10	 call	 QWORD PTR [rax+16]
$LN2@CComPtrBas:

; 185  :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$CComPtrBase@UIAdviseSink@@@ATL@@QEAA@XZ ENDP	; ATL::CComPtrBase<IAdviseSink>::~CComPtrBase<IAdviseSink>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIAdviseSink@@@ATL@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$CComPtrBase@UIAdviseSink@@@ATL@@IEAA@XZ PROC	; ATL::CComPtrBase<IAdviseSink>::CComPtrBase<IAdviseSink>, COMDAT

; 163  :     CComPtrBase() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 164  :     {
; 165  :         p = NULL;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 166  :     }

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0?$CComPtrBase@UIAdviseSink@@@ATL@@IEAA@XZ ENDP	; ATL::CComPtrBase<IAdviseSink>::CComPtrBase<IAdviseSink>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIOleClientSite@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComPtr@UIOleClientSite@@@ATL@@QEAA@XZ PROC	; ATL::CComPtr<IOleClientSite>::~CComPtr<IOleClientSite>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIOleClientSite@@@ATL@@QEAA@XZ ; ATL::CComPtrBase<IOleClientSite>::~CComPtrBase<IOleClientSite>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CComPtr@UIOleClientSite@@@ATL@@QEAA@XZ ENDP	; ATL::CComPtr<IOleClientSite>::~CComPtr<IOleClientSite>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIOleClientSite@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CComPtr@UIOleClientSite@@@ATL@@QEAA@XZ PROC	; ATL::CComPtr<IOleClientSite>::CComPtr<IOleClientSite>, COMDAT

; 316  :     CComPtr() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 317  :     {

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIOleClientSite@@@ATL@@IEAA@XZ ; ATL::CComPtrBase<IOleClientSite>::CComPtrBase<IOleClientSite>

; 318  :     }

  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$CComPtr@UIOleClientSite@@@ATL@@QEAA@XZ ENDP	; ATL::CComPtr<IOleClientSite>::CComPtr<IOleClientSite>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIOleClientSite@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComPtrBase@UIOleClientSite@@@ATL@@QEAA@XZ PROC	; ATL::CComPtrBase<IOleClientSite>::~CComPtrBase<IOleClientSite>, COMDAT

; 182  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 183  :         if (p)

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@CComPtrBas

; 184  :             p->Release();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	ff 50 10	 call	 QWORD PTR [rax+16]
$LN2@CComPtrBas:

; 185  :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$CComPtrBase@UIOleClientSite@@@ATL@@QEAA@XZ ENDP	; ATL::CComPtrBase<IOleClientSite>::~CComPtrBase<IOleClientSite>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIOleClientSite@@@ATL@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$CComPtrBase@UIOleClientSite@@@ATL@@IEAA@XZ PROC	; ATL::CComPtrBase<IOleClientSite>::CComPtrBase<IOleClientSite>, COMDAT

; 163  :     CComPtrBase() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 164  :     {
; 165  :         p = NULL;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 166  :     }

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0?$CComPtrBase@UIOleClientSite@@@ATL@@IEAA@XZ ENDP	; ATL::CComPtrBase<IOleClientSite>::CComPtrBase<IOleClientSite>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UEAA@XZ PROC ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UEAA@XZ ; ATL::CWindowImplRoot<ATL::CWindow>::~CWindowImplRoot<ATL::CWindow>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UEAA@XZ ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QEAA@XZ PROC ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >, COMDAT

; 3439 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QEAA@XZ ; ATL::CWindowImplRoot<ATL::CWindow>::CWindowImplRoot<ATL::CWindow>

; 3438 : 	CWindowImplBaseT() : m_pfnSuperWindowProc(::DefWindowProc)

  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_DefWindowProcW
  00034	48 89 48 40	 mov	 QWORD PTR [rax+64], rcx

; 3440 : 	}

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QEAA@XZ ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 48
tv80 = 64
this$ = 96
??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UEAA@XZ PROC	; ATL::CWindowImplRoot<ATL::CWindow>::~CWindowImplRoot<ATL::CWindow>, COMDAT

; 3227 : 	{

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 3228 : #ifdef _DEBUG
; 3229 : 		if(this->m_hWnd != NULL)	// should be cleared in WindowProc

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 7f		 je	 SHORT $LN2@CWindowImp

; 3230 : 		{
; 3231 : 			ATLTRACE(atlTraceWindowing, 0, _T("ERROR - Object deleted before window was destroyed\n"));

  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  00031	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ ; ATL::CTraceCategoryEx<32,0>::operator unsigned int
  00036	89 44 24 40	 mov	 DWORD PTR tv80[rsp], eax
  0003a	41 b8 9f 0c 00
	00		 mov	 r8d, 3231		; 00000c9fH
  00040	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0HA@JEDONBAF@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00047	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T1[rsp]
  0004c	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00051	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1GI@EDPGCMOP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5@
  00058	45 33 c0	 xor	 r8d, r8d
  0005b	8b 4c 24 40	 mov	 ecx, DWORD PTR tv80[rsp]
  0005f	8b d1		 mov	 edx, ecx
  00061	48 8b c8	 mov	 rcx, rax
  00064	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ ; ATL::CTraceFileAndLineInfo::operator()

; 3232 : 			ATLASSERT(FALSE);

  00069	33 c0		 xor	 eax, eax
  0006b	85 c0		 test	 eax, eax
  0006d	75 3a		 jne	 SHORT $LN2@CWindowImp
  0006f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
  00076	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0007b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00082	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00087	45 33 c9	 xor	 r9d, r9d
  0008a	41 b8 a0 0c 00
	00		 mov	 r8d, 3232		; 00000ca0H
  00090	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OA@EJAAKNNE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00097	b9 02 00 00 00	 mov	 ecx, 2
  0009c	e8 00 00 00 00	 call	 _CrtDbgReportW
  000a1	83 f8 01	 cmp	 eax, 1
  000a4	75 03		 jne	 SHORT $LN2@CWindowImp
  000a6	cc		 int	 3
  000a7	33 c0		 xor	 eax, eax
$LN2@CWindowImp:

; 3233 : 		}
; 3234 : #endif //_DEBUG
; 3235 : 	}

  000a9	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000ae	48 83 c0 10	 add	 rax, 16
  000b2	48 8b c8	 mov	 rcx, rax
  000b5	e8 00 00 00 00	 call	 ??1CWndProcThunk@ATL@@QEAA@XZ
  000ba	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000be	5f		 pop	 rdi
  000bf	c3		 ret	 0
??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UEAA@XZ ENDP	; ATL::CWindowImplRoot<ATL::CWindow>::~CWindowImplRoot<ATL::CWindow>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QEAA@XZ PROC	; ATL::CWindowImplRoot<ATL::CWindow>::CWindowImplRoot<ATL::CWindow>, COMDAT

; 3223 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	33 d2		 xor	 edx, edx
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??0CWindow@ATL@@QEAA@PEAUHWND__@@@Z ; ATL::CWindow::CWindow
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ??0CMessageMap@ATL@@QEAA@XZ
  0003b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 83 c0 10	 add	 rax, 16
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ??0CWndProcThunk@ATL@@QEAA@XZ

; 3222 : 	CWindowImplRoot() : m_pCurrentMsg(NULL), m_dwState(0)

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 c7 40 30 00
	00 00 00	 mov	 QWORD PTR [rax+48], 0
  00059	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005e	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [rax+56], 0

; 3224 : 	}

  00065	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0006a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006e	5f		 pop	 rdi
  0006f	c3		 ret	 0
??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QEAA@XZ ENDP	; ATL::CWindowImplRoot<ATL::CWindow>::CWindowImplRoot<ATL::CWindow>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CMessageMap@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0CMessageMap@ATL@@QEAA@XZ PROC			; ATL::CMessageMap::CMessageMap, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0CMessageMap@ATL@@QEAA@XZ ENDP			; ATL::CMessageMap::CMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CWndProcThunk@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CWndProcThunk@ATL@@QEAA@XZ PROC			; ATL::CWndProcThunk::~CWndProcThunk, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 18	 add	 rax, 24
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1CDynamicStdCallThunk2@ATL@@QEAA@XZ ; ATL::CDynamicStdCallThunk2::~CDynamicStdCallThunk2
  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??1CWndProcThunk@ATL@@QEAA@XZ ENDP			; ATL::CWndProcThunk::~CWndProcThunk
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CWndProcThunk@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0CWndProcThunk@ATL@@QEAA@XZ PROC			; ATL::CWndProcThunk::CWndProcThunk, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 18	 add	 rax, 24
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??0CDynamicStdCallThunk2@ATL@@QEAA@XZ ; ATL::CDynamicStdCallThunk2::CDynamicStdCallThunk2
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??0CWndProcThunk@ATL@@QEAA@XZ ENDP			; ATL::CWndProcThunk::CWndProcThunk
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ??0CWindow@ATL@@QEAA@PEAUHWND__@@@Z
_TEXT	SEGMENT
this$ = 16
hWnd$ = 24
??0CWindow@ATL@@QEAA@PEAUHWND__@@@Z PROC		; ATL::CWindow::CWindow, COMDAT

; 795  : 	{

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 794  : 		m_hWnd(hWnd)

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR hWnd$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx

; 796  : 	}

  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	5f		 pop	 rdi
  0001e	c3		 ret	 0
??0CWindow@ATL@@QEAA@PEAUHWND__@@@Z ENDP		; ATL::CWindow::CWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z
_TEXT	SEGMENT
ptResult$ = 48
tLeft$ = 56
tRight$ = 64
??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z PROC		; ATL::AtlMultiply<unsigned __int64>, COMDAT

; 99   : {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 100  : 	/* avoid divide 0 */
; 101  : 	if(tLeft==0)

  00028	48 83 7c 24 38
	00		 cmp	 QWORD PTR tLeft$[rsp], 0
  0002e	75 10		 jne	 SHORT $LN2@AtlMultipl

; 102  : 	{
; 103  : 		*ptResult=0;

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR ptResult$[rsp]
  00035	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 104  : 		return S_OK;

  0003c	33 c0		 xor	 eax, eax
  0003e	eb 36		 jmp	 SHORT $LN1@AtlMultipl
$LN2@AtlMultipl:

; 105  : 	}
; 106  : 	if(::ATL::AtlLimits<T>::_Max/tLeft < tRight)

  00040	33 d2		 xor	 edx, edx
  00042	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  00049	48 f7 74 24 38	 div	 QWORD PTR tLeft$[rsp]
  0004e	48 3b 44 24 40	 cmp	 rax, QWORD PTR tRight$[rsp]
  00053	73 0c		 jae	 SHORT $LN3@AtlMultipl

; 107  : 	{
; 108  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  00055	b9 16 02 00 00	 mov	 ecx, 534		; 00000216H
  0005a	e8 00 00 00 00	 call	 HRESULT_FROM_WIN32
  0005f	eb 15		 jmp	 SHORT $LN1@AtlMultipl
$LN3@AtlMultipl:

; 109  : 	}
; 110  : 	*ptResult= tLeft * tRight;

  00061	48 8b 44 24 38	 mov	 rax, QWORD PTR tLeft$[rsp]
  00066	48 0f af 44 24
	40		 imul	 rax, QWORD PTR tRight$[rsp]
  0006c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR ptResult$[rsp]
  00071	48 89 01	 mov	 QWORD PTR [rcx], rax

; 111  : 	return S_OK;

  00074	33 c0		 xor	 eax, eax
$LN1@AtlMultipl:

; 112  : }

  00076	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007a	5f		 pop	 rdi
  0007b	c3		 ret	 0
??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z ENDP		; ATL::AtlMultiply<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetSize@CComDynamicUnkArray@ATL@@QEBAHXZ
_TEXT	SEGMENT
this$ = 16
?GetSize@CComDynamicUnkArray@ATL@@QEBAHXZ PROC		; ATL::CComDynamicUnkArray::GetSize, COMDAT

; 6205 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 6206 : 		return m_nSize;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	8b 40 08	 mov	 eax, DWORD PTR [rax+8]

; 6207 : 	}

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?GetSize@CComDynamicUnkArray@ATL@@QEBAHXZ ENDP		; ATL::CComDynamicUnkArray::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetAt@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@H@Z
_TEXT	SEGMENT
this$ = 64
nIndex$ = 72
?GetAt@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@H@Z PROC ; ATL::CComDynamicUnkArray::GetAt, COMDAT

; 6196 : 	{

$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 6197 : 		ATLASSERT(nIndex >= 0 && nIndex < m_nSize);

  00022	83 7c 24 48 00	 cmp	 DWORD PTR nIndex$[rsp], 0
  00027	7c 0e		 jl	 SHORT $LN5@GetAt
  00029	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002e	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00031	39 44 24 48	 cmp	 DWORD PTR nIndex$[rsp], eax
  00035	7c 3a		 jl	 SHORT $LN6@GetAt
$LN5@GetAt:
  00037	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
  0003e	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00043	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0004a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004f	45 33 c9	 xor	 r9d, r9d
  00052	41 b8 35 18 00
	00		 mov	 r8d, 6197		; 00001835H
  00058	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0005f	b9 02 00 00 00	 mov	 ecx, 2
  00064	e8 00 00 00 00	 call	 _CrtDbgReportW
  00069	83 f8 01	 cmp	 eax, 1
  0006c	75 03		 jne	 SHORT $LN6@GetAt
  0006e	cc		 int	 3
  0006f	33 c0		 xor	 eax, eax
$LN6@GetAt:

; 6198 : 		if (nIndex >= 0 && nIndex < m_nSize)

  00071	83 7c 24 48 00	 cmp	 DWORD PTR nIndex$[rsp], 0
  00076	7c 23		 jl	 SHORT $LN2@GetAt
  00078	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0007d	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00080	39 44 24 48	 cmp	 DWORD PTR nIndex$[rsp], eax
  00084	7d 15		 jge	 SHORT $LN2@GetAt

; 6199 : 			return m_ppUnk[nIndex];

  00086	48 63 44 24 48	 movsxd	 rax, DWORD PTR nIndex$[rsp]
  0008b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00090	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00093	48 8b 04 c1	 mov	 rax, QWORD PTR [rcx+rax*8]
  00097	eb 04		 jmp	 SHORT $LN1@GetAt
  00099	eb 02		 jmp	 SHORT $LN3@GetAt
$LN2@GetAt:

; 6200 : 		else
; 6201 : 			return NULL;

  0009b	33 c0		 xor	 eax, eax
$LN3@GetAt:
$LN1@GetAt:

; 6202 : 
; 6203 : 	}

  0009d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
?GetAt@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@H@Z ENDP ; ATL::CComDynamicUnkArray::GetAt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?end@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ
_TEXT	SEGMENT
this$ = 16
?end@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ PROC ; ATL::CComDynamicUnkArray::end, COMDAT

; 6191 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 6192 : 		return &m_ppUnk[m_nSize];

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 63 40 08	 movsxd	 rax, DWORD PTR [rax+8]
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00014	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00017	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]

; 6193 : 	}

  0001b	5f		 pop	 rdi
  0001c	c3		 ret	 0
?end@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ ENDP ; ATL::CComDynamicUnkArray::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?begin@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ
_TEXT	SEGMENT
this$ = 16
?begin@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ PROC ; ATL::CComDynamicUnkArray::begin, COMDAT

; 6187 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 6188 : 		return m_ppUnk;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 6189 : 	}

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?begin@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ ENDP ; ATL::CComDynamicUnkArray::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetUnknown@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@K@Z
_TEXT	SEGMENT
this$ = 64
dwCookie$ = 72
?GetUnknown@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@K@Z PROC ; ATL::CComDynamicUnkArray::GetUnknown, COMDAT

; 6177 : 	{

$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 6178 : #ifndef _ATL_OLEDB_CONFORMANCE_TESTS
; 6179 : 		ATLASSERT(dwCookie != 0 && dwCookie <= (DWORD)m_nSize);

  00022	83 7c 24 48 00	 cmp	 DWORD PTR dwCookie$[rsp], 0
  00027	74 0e		 je	 SHORT $LN5@GetUnknown
  00029	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002e	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00031	39 44 24 48	 cmp	 DWORD PTR dwCookie$[rsp], eax
  00035	76 3a		 jbe	 SHORT $LN6@GetUnknown
$LN5@GetUnknown:
  00037	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1FI@CDNFCAGD@?$AAd?$AAw?$AAC?$AAo?$AAo?$AAk?$AAi?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@
  0003e	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00043	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0004a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004f	45 33 c9	 xor	 r9d, r9d
  00052	41 b8 23 18 00
	00		 mov	 r8d, 6179		; 00001823H
  00058	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0005f	b9 02 00 00 00	 mov	 ecx, 2
  00064	e8 00 00 00 00	 call	 _CrtDbgReportW
  00069	83 f8 01	 cmp	 eax, 1
  0006c	75 03		 jne	 SHORT $LN6@GetUnknown
  0006e	cc		 int	 3
  0006f	33 c0		 xor	 eax, eax
$LN6@GetUnknown:

; 6180 : #endif
; 6181 : 		if (dwCookie != 0 && dwCookie <= (DWORD)m_nSize)

  00071	83 7c 24 48 00	 cmp	 DWORD PTR dwCookie$[rsp], 0
  00076	74 24		 je	 SHORT $LN2@GetUnknown
  00078	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0007d	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00080	39 44 24 48	 cmp	 DWORD PTR dwCookie$[rsp], eax
  00084	77 16		 ja	 SHORT $LN2@GetUnknown

; 6182 : 			return GetAt(dwCookie-1); // cookie minus one is an index into the array

  00086	8b 44 24 48	 mov	 eax, DWORD PTR dwCookie$[rsp]
  0008a	ff c8		 dec	 eax
  0008c	8b d0		 mov	 edx, eax
  0008e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?GetAt@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@H@Z ; ATL::CComDynamicUnkArray::GetAt
  00098	eb 04		 jmp	 SHORT $LN1@GetUnknown
  0009a	eb 02		 jmp	 SHORT $LN3@GetUnknown
$LN2@GetUnknown:

; 6183 : 		else
; 6184 : 			return NULL;

  0009c	33 c0		 xor	 eax, eax
$LN3@GetUnknown:
$LN1@GetUnknown:

; 6185 : 	}

  0009e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a2	5f		 pop	 rdi
  000a3	c3		 ret	 0
?GetUnknown@CComDynamicUnkArray@ATL@@QEAAPEAUIUnknown@@K@Z ENDP ; ATL::CComDynamicUnkArray::GetUnknown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetCookie@CComDynamicUnkArray@ATL@@QEAAKPEAPEAUIUnknown@@@Z
_TEXT	SEGMENT
ppUnk$1 = 48
dwCookie$2 = 56
this$ = 80
ppFind$ = 88
?GetCookie@CComDynamicUnkArray@ATL@@QEAAKPEAPEAUIUnknown@@@Z PROC ; ATL::CComDynamicUnkArray::GetCookie, COMDAT

; 6160 : 	{

$LN10:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 6161 : 		ATLASSERT(ppFind && *ppFind);

  00023	48 83 7c 24 58
	00		 cmp	 QWORD PTR ppFind$[rsp], 0
  00029	74 0b		 je	 SHORT $LN8@GetCookie
  0002b	48 8b 44 24 58	 mov	 rax, QWORD PTR ppFind$[rsp]
  00030	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00034	75 3a		 jne	 SHORT $LN9@GetCookie
$LN8@GetCookie:
  00036	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1CE@GFEBMKPP@?$AAp?$AAp?$AAF?$AAi?$AAn?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CK?$AAp?$AAp?$AAF?$AAi@
  0003d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00042	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00049	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004e	45 33 c9	 xor	 r9d, r9d
  00051	41 b8 11 18 00
	00		 mov	 r8d, 6161		; 00001811H
  00057	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0005e	b9 02 00 00 00	 mov	 ecx, 2
  00063	e8 00 00 00 00	 call	 _CrtDbgReportW
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN9@GetCookie
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN9@GetCookie:

; 6162 : 		if (ppFind && *ppFind)

  00070	48 83 7c 24 58
	00		 cmp	 QWORD PTR ppFind$[rsp], 0
  00076	74 70		 je	 SHORT $LN5@GetCookie
  00078	48 8b 44 24 58	 mov	 rax, QWORD PTR ppFind$[rsp]
  0007d	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00081	74 65		 je	 SHORT $LN5@GetCookie

; 6163 : 		{
; 6164 : 			IUnknown** ppUnk = NULL;

  00083	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR ppUnk$1[rsp], 0

; 6165 : 			DWORD dwCookie = 1;

  0008c	c7 44 24 38 01
	00 00 00	 mov	 DWORD PTR dwCookie$2[rsp], 1

; 6166 : 			// find IUnknown* in array
; 6167 : 			for (ppUnk = begin(); ppUnk < end(); ppUnk++)

  00094	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00099	e8 00 00 00 00	 call	 ?begin@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::begin
  0009e	48 89 44 24 30	 mov	 QWORD PTR ppUnk$1[rsp], rax
  000a3	eb 0e		 jmp	 SHORT $LN4@GetCookie
$LN2@GetCookie:
  000a5	48 8b 44 24 30	 mov	 rax, QWORD PTR ppUnk$1[rsp]
  000aa	48 83 c0 08	 add	 rax, 8
  000ae	48 89 44 24 30	 mov	 QWORD PTR ppUnk$1[rsp], rax
$LN4@GetCookie:
  000b3	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000b8	e8 00 00 00 00	 call	 ?end@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::end
  000bd	48 39 44 24 30	 cmp	 QWORD PTR ppUnk$1[rsp], rax
  000c2	73 24		 jae	 SHORT $LN3@GetCookie

; 6168 : 			{
; 6169 : 				if (*ppUnk == *ppFind)

  000c4	48 8b 44 24 30	 mov	 rax, QWORD PTR ppUnk$1[rsp]
  000c9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR ppFind$[rsp]
  000ce	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000d1	48 39 08	 cmp	 QWORD PTR [rax], rcx
  000d4	75 06		 jne	 SHORT $LN6@GetCookie

; 6170 : 					return dwCookie; // cookie minus one is an index into the array

  000d6	8b 44 24 38	 mov	 eax, DWORD PTR dwCookie$2[rsp]
  000da	eb 0e		 jmp	 SHORT $LN1@GetCookie
$LN6@GetCookie:

; 6171 : 				dwCookie++;

  000dc	8b 44 24 38	 mov	 eax, DWORD PTR dwCookie$2[rsp]
  000e0	ff c0		 inc	 eax
  000e2	89 44 24 38	 mov	 DWORD PTR dwCookie$2[rsp], eax

; 6172 : 			}

  000e6	eb bd		 jmp	 SHORT $LN2@GetCookie
$LN3@GetCookie:
$LN5@GetCookie:

; 6173 : 		}
; 6174 : 		return 0;

  000e8	33 c0		 xor	 eax, eax
$LN1@GetCookie:

; 6175 : 	}

  000ea	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ee	5f		 pop	 rdi
  000ef	c3		 ret	 0
?GetCookie@CComDynamicUnkArray@ATL@@QEAAKPEAPEAUIUnknown@@@Z ENDP ; ATL::CComDynamicUnkArray::GetCookie
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Remove@CComDynamicUnkArray@ATL@@QEAAHK@Z
_TEXT	SEGMENT
idx$ = 48
this$ = 80
dwCookie$ = 88
?Remove@CComDynamicUnkArray@ATL@@QEAAHK@Z PROC		; ATL::CComDynamicUnkArray::Remove, COMDAT

; 6267 : {

$LN8:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 10 00 00 00	 mov	 ecx, 16
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 6268 : 	DWORD idx = dwCookie -1;

  00022	8b 44 24 58	 mov	 eax, DWORD PTR dwCookie$[rsp]
  00026	ff c8		 dec	 eax
  00028	89 44 24 30	 mov	 DWORD PTR idx$[rsp], eax

; 6269 : #ifndef _ATL_OLEDB_CONFORMANCE_TESTS
; 6270 : 	ATLASSERT(idx < dwCookie && idx < (DWORD)m_nSize);

  0002c	8b 44 24 58	 mov	 eax, DWORD PTR dwCookie$[rsp]
  00030	39 44 24 30	 cmp	 DWORD PTR idx$[rsp], eax
  00034	73 0e		 jae	 SHORT $LN6@Remove
  00036	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003b	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  0003e	39 44 24 30	 cmp	 DWORD PTR idx$[rsp], eax
  00042	72 3a		 jb	 SHORT $LN7@Remove
$LN6@Remove:
  00044	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1EO@PKGIEOJK@?$AAi?$AAd?$AAx?$AA?5?$AA?$DM?$AA?5?$AAd?$AAw?$AAC?$AAo?$AAo?$AAk?$AAi?$AAe?$AA?5@
  0004b	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00050	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00057	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0005c	45 33 c9	 xor	 r9d, r9d
  0005f	41 b8 7e 18 00
	00		 mov	 r8d, 6270		; 0000187eH
  00065	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0006c	b9 02 00 00 00	 mov	 ecx, 2
  00071	e8 00 00 00 00	 call	 _CrtDbgReportW
  00076	83 f8 01	 cmp	 eax, 1
  00079	75 03		 jne	 SHORT $LN7@Remove
  0007b	cc		 int	 3
  0007c	33 c0		 xor	 eax, eax
$LN7@Remove:

; 6271 : #endif
; 6272 : 	if (idx < dwCookie && idx < (DWORD)m_nSize)

  0007e	8b 44 24 58	 mov	 eax, DWORD PTR dwCookie$[rsp]
  00082	39 44 24 30	 cmp	 DWORD PTR idx$[rsp], eax
  00086	73 42		 jae	 SHORT $LN2@Remove
  00088	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0008d	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00090	39 44 24 30	 cmp	 DWORD PTR idx$[rsp], eax
  00094	73 34		 jae	 SHORT $LN2@Remove

; 6273 : 	{
; 6274 : 		// cookie minus one is index into array
; 6275 : 		if (m_ppUnk[idx] == NULL)

  00096	8b 44 24 30	 mov	 eax, DWORD PTR idx$[rsp]
  0009a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0009f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000a2	48 83 3c c1 00	 cmp	 QWORD PTR [rcx+rax*8], 0
  000a7	75 04		 jne	 SHORT $LN4@Remove

; 6276 : 			return FALSE;

  000a9	33 c0		 xor	 eax, eax
  000ab	eb 1f		 jmp	 SHORT $LN1@Remove
$LN4@Remove:

; 6277 : 		m_ppUnk[idx] = NULL;

  000ad	8b 44 24 30	 mov	 eax, DWORD PTR idx$[rsp]
  000b1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000b6	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000b9	48 c7 04 c1 00
	00 00 00	 mov	 QWORD PTR [rcx+rax*8], 0

; 6278 : 		return TRUE;

  000c1	b8 01 00 00 00	 mov	 eax, 1
  000c6	eb 04		 jmp	 SHORT $LN1@Remove

; 6279 : 	}

  000c8	eb 02		 jmp	 SHORT $LN3@Remove
$LN2@Remove:

; 6280 : 	else
; 6281 : 		return FALSE;

  000ca	33 c0		 xor	 eax, eax
$LN3@Remove:
$LN1@Remove:

; 6282 : }

  000cc	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d0	5f		 pop	 rdi
  000d1	c3		 ret	 0
?Remove@CComDynamicUnkArray@ATL@@QEAAHK@Z ENDP		; ATL::CComDynamicUnkArray::Remove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Add@CComDynamicUnkArray@ATL@@QEAAKPEAUIUnknown@@@Z
_TEXT	SEGMENT
pp$ = 32
dwCookie$ = 40
nAlloc$ = 52
hr$ = 68
this$ = 96
pUnk$ = 104
?Add@CComDynamicUnkArray@ATL@@QEAAKPEAUIUnknown@@@Z PROC ; ATL::CComDynamicUnkArray::Add, COMDAT

; 6223 : {

$LN11:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 6224 : 	IUnknown** pp = NULL;

  00023	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR pp$[rsp], 0

; 6225 : 	if (m_nSize == 0)

  0002c	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00031	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00035	75 4e		 jne	 SHORT $LN5@Add

; 6226 : 	{
; 6227 : 		// Create array with _DEFAULT_VECTORLENGTH number of items.
; 6228 : 		ATLTRY(pp = (IUnknown**)calloc(sizeof(IUnknown*),_DEFAULT_VECTORLENGTH));

  00037	ba 04 00 00 00	 mov	 edx, 4
  0003c	b9 08 00 00 00	 mov	 ecx, 8
  00041	e8 00 00 00 00	 call	 calloc
  00046	48 89 44 24 20	 mov	 QWORD PTR pp$[rsp], rax

; 6229 : 		if (pp == NULL)

  0004b	48 83 7c 24 20
	00		 cmp	 QWORD PTR pp$[rsp], 0
  00051	75 07		 jne	 SHORT $LN6@Add

; 6230 : 			return 0;

  00053	33 c0		 xor	 eax, eax
  00055	e9 5e 01 00 00	 jmp	 $LN1@Add
$LN6@Add:

; 6231 : 		memset(pp, 0, sizeof(IUnknown*)*_DEFAULT_VECTORLENGTH);

  0005a	41 b8 20 00 00
	00		 mov	 r8d, 32			; 00000020H
  00060	33 d2		 xor	 edx, edx
  00062	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pp$[rsp]
  00067	e8 00 00 00 00	 call	 memset

; 6232 : 		m_ppUnk = pp;

  0006c	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00071	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pp$[rsp]
  00076	48 89 08	 mov	 QWORD PTR [rax], rcx

; 6233 : 		m_nSize = _DEFAULT_VECTORLENGTH;

  00079	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0007e	c7 40 08 04 00
	00 00		 mov	 DWORD PTR [rax+8], 4
$LN5@Add:

; 6234 : 	}
; 6235 : 	// Walk array and use empty slots if any.
; 6236 : 	DWORD dwCookie = 1;

  00085	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR dwCookie$[rsp], 1

; 6237 : 	for (pp = begin(); pp < end(); pp++)

  0008d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00092	e8 00 00 00 00	 call	 ?begin@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::begin
  00097	48 89 44 24 20	 mov	 QWORD PTR pp$[rsp], rax
  0009c	eb 0e		 jmp	 SHORT $LN4@Add
$LN2@Add:
  0009e	48 8b 44 24 20	 mov	 rax, QWORD PTR pp$[rsp]
  000a3	48 83 c0 08	 add	 rax, 8
  000a7	48 89 44 24 20	 mov	 QWORD PTR pp$[rsp], rax
$LN4@Add:
  000ac	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b1	e8 00 00 00 00	 call	 ?end@CComDynamicUnkArray@ATL@@QEAAPEAPEAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::end
  000b6	48 39 44 24 20	 cmp	 QWORD PTR pp$[rsp], rax
  000bb	73 2d		 jae	 SHORT $LN3@Add

; 6238 : 	{
; 6239 : 		if (*pp == NULL)

  000bd	48 8b 44 24 20	 mov	 rax, QWORD PTR pp$[rsp]
  000c2	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000c6	75 16		 jne	 SHORT $LN7@Add

; 6240 : 		{
; 6241 : 			*pp = pUnk;

  000c8	48 8b 44 24 20	 mov	 rax, QWORD PTR pp$[rsp]
  000cd	48 8b 4c 24 68	 mov	 rcx, QWORD PTR pUnk$[rsp]
  000d2	48 89 08	 mov	 QWORD PTR [rax], rcx

; 6242 : 			return dwCookie; // cookie minus one is index into array

  000d5	8b 44 24 28	 mov	 eax, DWORD PTR dwCookie$[rsp]
  000d9	e9 da 00 00 00	 jmp	 $LN1@Add
$LN7@Add:

; 6243 : 		}
; 6244 : 		dwCookie++;

  000de	8b 44 24 28	 mov	 eax, DWORD PTR dwCookie$[rsp]
  000e2	ff c0		 inc	 eax
  000e4	89 44 24 28	 mov	 DWORD PTR dwCookie$[rsp], eax

; 6245 : 	}

  000e8	eb b4		 jmp	 SHORT $LN2@Add
$LN3@Add:

; 6246 : 	// No empty slots so resize array.
; 6247 : 	// # of new slots is double of current size.
; 6248 : 	int nAlloc = 0;

  000ea	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR nAlloc$[rsp], 0

; 6249 : 	HRESULT hr = AtlMultiply(&nAlloc, m_nSize, 2);

  000f2	41 b8 02 00 00
	00		 mov	 r8d, 2
  000f8	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000fd	8b 50 08	 mov	 edx, DWORD PTR [rax+8]
  00100	48 8d 4c 24 34	 lea	 rcx, QWORD PTR nAlloc$[rsp]
  00105	e8 00 00 00 00	 call	 ??$AtlMultiply@H@ATL@@YAJPEAHHH@Z ; ATL::AtlMultiply<int>
  0010a	89 44 24 44	 mov	 DWORD PTR hr$[rsp], eax

; 6250 : 	if (FAILED(hr))

  0010e	83 7c 24 44 00	 cmp	 DWORD PTR hr$[rsp], 0
  00113	7d 07		 jge	 SHORT $LN8@Add

; 6251 : 	{
; 6252 : 		return 0;

  00115	33 c0		 xor	 eax, eax
  00117	e9 9c 00 00 00	 jmp	 $LN1@Add
$LN8@Add:

; 6253 : 	}
; 6254 : 
; 6255 : 	pp = (IUnknown**)_recalloc(m_ppUnk, sizeof(IUnknown*),nAlloc);

  0011c	48 63 44 24 34	 movsxd	 rax, DWORD PTR nAlloc$[rsp]
  00121	4c 8b c0	 mov	 r8, rax
  00124	ba 08 00 00 00	 mov	 edx, 8
  00129	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0012e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00131	e8 00 00 00 00	 call	 _recalloc
  00136	48 89 44 24 20	 mov	 QWORD PTR pp$[rsp], rax

; 6256 : 	if (pp == NULL)

  0013b	48 83 7c 24 20
	00		 cmp	 QWORD PTR pp$[rsp], 0
  00141	75 04		 jne	 SHORT $LN9@Add

; 6257 : 		return 0;

  00143	33 c0		 xor	 eax, eax
  00145	eb 71		 jmp	 SHORT $LN1@Add
$LN9@Add:

; 6258 : 	m_ppUnk = pp;

  00147	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0014c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pp$[rsp]
  00151	48 89 08	 mov	 QWORD PTR [rax], rcx

; 6259 : 	memset(&m_ppUnk[m_nSize], 0, sizeof(IUnknown*)*m_nSize);

  00154	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00159	48 63 40 08	 movsxd	 rax, DWORD PTR [rax+8]
  0015d	48 c1 e0 03	 shl	 rax, 3
  00161	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00166	48 63 49 08	 movsxd	 rcx, DWORD PTR [rcx+8]
  0016a	48 8b 54 24 60	 mov	 rdx, QWORD PTR this$[rsp]
  0016f	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00172	48 8d 0c ca	 lea	 rcx, QWORD PTR [rdx+rcx*8]
  00176	4c 8b c0	 mov	 r8, rax
  00179	33 d2		 xor	 edx, edx
  0017b	e8 00 00 00 00	 call	 memset

; 6260 : 	m_ppUnk[m_nSize] = pUnk;

  00180	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00185	48 63 40 08	 movsxd	 rax, DWORD PTR [rax+8]
  00189	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0018e	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00191	48 8b 54 24 68	 mov	 rdx, QWORD PTR pUnk$[rsp]
  00196	48 89 14 c1	 mov	 QWORD PTR [rcx+rax*8], rdx

; 6261 : 	dwCookie = m_nSize+1;

  0019a	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0019f	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  001a2	ff c0		 inc	 eax
  001a4	89 44 24 28	 mov	 DWORD PTR dwCookie$[rsp], eax

; 6262 : 	m_nSize = nAlloc;

  001a8	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  001ad	8b 4c 24 34	 mov	 ecx, DWORD PTR nAlloc$[rsp]
  001b1	89 48 08	 mov	 DWORD PTR [rax+8], ecx

; 6263 : 	return dwCookie; // cookie minus one is index into array

  001b4	8b 44 24 28	 mov	 eax, DWORD PTR dwCookie$[rsp]
$LN1@Add:

; 6264 : }

  001b8	48 8b f8	 mov	 rdi, rax
  001bb	48 8b cc	 mov	 rcx, rsp
  001be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Add@CComDynamicUnkArray@ATL@@QEAAKPEAUIUnknown@@@Z$rtcFrameData
  001c5	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001ca	48 8b c7	 mov	 rax, rdi
  001cd	48 83 c4 50	 add	 rsp, 80			; 00000050H
  001d1	5f		 pop	 rdi
  001d2	c3		 ret	 0
?Add@CComDynamicUnkArray@ATL@@QEAAKPEAUIUnknown@@@Z ENDP ; ATL::CComDynamicUnkArray::Add
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1CComDynamicUnkArray@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CComDynamicUnkArray@ATL@@QEAA@XZ PROC		; ATL::CComDynamicUnkArray::~CComDynamicUnkArray, COMDAT

; 6151 : 	{

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 6152 : 		if (m_nSize > 0)

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00027	7e 0d		 jle	 SHORT $LN2@CComDynami

; 6153 : 			free(m_ppUnk);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00031	e8 00 00 00 00	 call	 free
$LN2@CComDynami:

; 6154 : 	}

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??1CComDynamicUnkArray@ATL@@QEAA@XZ ENDP		; ATL::CComDynamicUnkArray::~CComDynamicUnkArray
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??0CComDynamicUnkArray@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0CComDynamicUnkArray@ATL@@QEAA@XZ PROC		; ATL::CComDynamicUnkArray::CComDynamicUnkArray, COMDAT

; 6144 : 	CComDynamicUnkArray()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 6145 : 	{
; 6146 : 		m_nSize = 0;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0

; 6147 : 		m_ppUnk = NULL;

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 6148 : 	}

  0001e	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00023	5f		 pop	 rdi
  00024	c3		 ret	 0
??0CComDynamicUnkArray@ATL@@QEAA@XZ ENDP		; ATL::CComDynamicUnkArray::CComDynamicUnkArray
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?destroy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z
_TEXT	SEGMENT
p$ = 48
?destroy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z PROC ; ATL::_Copy<tagCONNECTDATA>::destroy, COMDAT

; 5435 : 	{

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 5436 : 		if (p->pUnk)

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR p$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@destroy

; 5437 : 		{
; 5438 : 			p->pUnk->Release();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR p$[rsp]
  0002e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR p$[rsp]
  00036	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	ff 50 10	 call	 QWORD PTR [rax+16]
$LN2@destroy:

; 5439 : 		}
; 5440 : 	}

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
?destroy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z ENDP ; ATL::_Copy<tagCONNECTDATA>::destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?init@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z
_TEXT	SEGMENT
__formal$ = 16
?init@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z PROC ; ATL::_Copy<tagCONNECTDATA>::init, COMDAT

; 5432 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 5433 : 	}

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
?init@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPEAUtagCONNECTDATA@@@Z ENDP ; ATL::_Copy<tagCONNECTDATA>::init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?copy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAJPEAUtagCONNECTDATA@@PEBU3@@Z
_TEXT	SEGMENT
__atl_condVal$1 = 48
tv66 = 52
p1$ = 96
p2$ = 104
?copy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAJPEAUtagCONNECTDATA@@PEBU3@@Z PROC ; ATL::_Copy<tagCONNECTDATA>::copy, COMDAT

; 5422 : 	{

$LN14:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  00010	48 8b fc	 mov	 rdi, rsp
  00013	b9 12 00 00 00	 mov	 ecx, 18
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
$LN4@copy:

; 5423 : 		ATLENSURE(p1 != NULL && p2 != NULL);

  00024	48 83 7c 24 60
	00		 cmp	 QWORD PTR p1$[rsp], 0
  0002a	74 12		 je	 SHORT $LN11@copy
  0002c	48 83 7c 24 68
	00		 cmp	 QWORD PTR p2$[rsp], 0
  00032	74 0a		 je	 SHORT $LN11@copy
  00034	c7 44 24 34 01
	00 00 00	 mov	 DWORD PTR tv66[rsp], 1
  0003c	eb 08		 jmp	 SHORT $LN12@copy
$LN11@copy:
  0003e	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR tv66[rsp], 0
$LN12@copy:
  00046	8b 44 24 34	 mov	 eax, DWORD PTR tv66[rsp]
  0004a	89 44 24 30	 mov	 DWORD PTR __atl_condVal$1[rsp], eax
$LN7@copy:
  0004e	83 7c 24 30 00	 cmp	 DWORD PTR __atl_condVal$1[rsp], 0
  00053	75 3a		 jne	 SHORT $LN13@copy
  00055	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  0005c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00061	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00068	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006d	45 33 c9	 xor	 r9d, r9d
  00070	41 b8 2f 15 00
	00		 mov	 r8d, 5423		; 0000152fH
  00076	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0007d	b9 02 00 00 00	 mov	 ecx, 2
  00082	e8 00 00 00 00	 call	 _CrtDbgReportW
  00087	83 f8 01	 cmp	 eax, 1
  0008a	75 03		 jne	 SHORT $LN13@copy
  0008c	cc		 int	 3
  0008d	33 c0		 xor	 eax, eax
$LN13@copy:
  0008f	33 c0		 xor	 eax, eax
  00091	85 c0		 test	 eax, eax
  00093	75 b9		 jne	 SHORT $LN7@copy
  00095	83 7c 24 30 00	 cmp	 DWORD PTR __atl_condVal$1[rsp], 0
  0009a	75 0a		 jne	 SHORT $LN8@copy
  0009c	b9 05 40 00 80	 mov	 ecx, -2147467259	; ffffffff80004005H
  000a1	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YAXJ@Z ; ATL::AtlThrowImpl
$LN8@copy:
  000a6	33 c0		 xor	 eax, eax
  000a8	85 c0		 test	 eax, eax
  000aa	0f 85 74 ff ff
	ff		 jne	 $LN4@copy

; 5424 : 		*p1 = *p2;

  000b0	48 8b 7c 24 60	 mov	 rdi, QWORD PTR p1$[rsp]
  000b5	48 8b 74 24 68	 mov	 rsi, QWORD PTR p2$[rsp]
  000ba	b9 10 00 00 00	 mov	 ecx, 16
  000bf	f3 a4		 rep movsb

; 5425 : 		if (p1->pUnk)

  000c1	48 8b 44 24 60	 mov	 rax, QWORD PTR p1$[rsp]
  000c6	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000ca	74 16		 je	 SHORT $LN9@copy

; 5426 : 		{
; 5427 : 			p1->pUnk->AddRef();

  000cc	48 8b 44 24 60	 mov	 rax, QWORD PTR p1$[rsp]
  000d1	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d4	48 8b 4c 24 60	 mov	 rcx, QWORD PTR p1$[rsp]
  000d9	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000dc	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000df	ff 50 08	 call	 QWORD PTR [rax+8]
$LN9@copy:

; 5428 : 		}
; 5429 : 		return S_OK;

  000e2	33 c0		 xor	 eax, eax
$LN10@copy:

; 5430 : 	}

  000e4	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000e8	5f		 pop	 rdi
  000e9	5e		 pop	 rsi
  000ea	c3		 ret	 0
?copy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAJPEAUtagCONNECTDATA@@PEBU3@@Z ENDP ; ATL::_Copy<tagCONNECTDATA>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Estringdispid@CComTypeInfoHolder@ATL@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Estringdispid@CComTypeInfoHolder@ATL@@QEAAPEAXI@Z PROC ; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor', COMDAT
$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00026	83 e0 02	 and	 eax, 2
  00029	85 c0		 test	 eax, eax
  0002b	74 54		 je	 SHORT $LN2@vector
  0002d	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ
  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00039	4c 8b 40 f8	 mov	 r8, QWORD PTR [rax-8]
  0003d	ba 10 00 00 00	 mov	 edx, 16
  00042	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ??_I@YAXPEAX_K1P6AX0@Z@Z
  0004c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00050	83 e0 01	 and	 eax, 1
  00053	85 c0		 test	 eax, eax
  00055	74 1f		 je	 SHORT $LN3@vector
  00057	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 6b 40 f8 10	 imul	 rax, QWORD PTR [rax-8], 16
  00061	48 83 c0 08	 add	 rax, 8
  00065	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0006a	48 83 e9 08	 sub	 rcx, 8
  0006e	48 8b d0	 mov	 rdx, rax
  00071	e8 00 00 00 00	 call	 ??_V@YAXPEAX_K@Z	; operator delete[]
$LN3@vector:
  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0007b	48 83 e8 08	 sub	 rax, 8
  0007f	eb 29		 jmp	 SHORT $LN1@vector
$LN2@vector:
  00081	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00086	e8 00 00 00 00	 call	 ??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ
  0008b	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  0008f	83 e0 01	 and	 eax, 1
  00092	85 c0		 test	 eax, eax
  00094	74 0f		 je	 SHORT $LN4@vector
  00096	ba 10 00 00 00	 mov	 edx, 16
  0009b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  000a0	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN4@vector:
  000a5	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
$LN1@vector:
  000aa	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000ae	5f		 pop	 rdi
  000af	c3		 ret	 0
??_Estringdispid@CComTypeInfoHolder@ATL@@QEAAPEAXI@Z ENDP ; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ PROC	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QEAA@XZ ; ATL::CComBSTR::~CComBSTR
  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
??1stringdispid@CComTypeInfoHolder@ATL@@QEAA@XZ ENDP	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1ModuleLockHelper@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1ModuleLockHelper@ATL@@QEAA@XZ PROC			; ATL::ModuleLockHelper::~ModuleLockHelper, COMDAT

; 2896 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2897 : #ifndef _ATL_STATIC_LIB_IMPL
; 2898 : 		_pAtlModule->Unlock();

  0001e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA ; ATL::_pAtlModule
  00025	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00028	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA ; ATL::_pAtlModule
  0002f	ff 50 10	 call	 QWORD PTR [rax+16]

; 2899 : #endif
; 2900 : 	}

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??1ModuleLockHelper@ATL@@QEAA@XZ ENDP			; ATL::ModuleLockHelper::~ModuleLockHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??0ModuleLockHelper@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0ModuleLockHelper@ATL@@QEAA@XZ PROC			; ATL::ModuleLockHelper::ModuleLockHelper, COMDAT

; 2888 : 	ModuleLockHelper()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2889 : 	{
; 2890 : #ifndef _ATL_STATIC_LIB_IMPL
; 2891 : 		_pAtlModule->Lock();

  0001e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA ; ATL::_pAtlModule
  00025	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00028	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA ; ATL::_pAtlModule
  0002f	ff 50 08	 call	 QWORD PTR [rax+8]

; 2892 : #endif
; 2893 : 	}

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0ModuleLockHelper@ATL@@QEAA@XZ ENDP			; ATL::ModuleLockHelper::ModuleLockHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ PROC ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::CComObjectRootEx<ATL::CComSingleThreadModel>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0CComObjectRootBase@ATL@@QEAA@XZ ; ATL::CComObjectRootBase::CComObjectRootBase
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::CComObjectRootEx<ATL::CComSingleThreadModel>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ PROC ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock, COMDAT

; 2740 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 2741 : 	}

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ ENDP ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ PROC ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock, COMDAT

; 2737 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 2738 : 	}

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAXXZ ENDP ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?_AtlInitialConstruct@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAJXZ
_TEXT	SEGMENT
this$ = 16
?_AtlInitialConstruct@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAJXZ PROC ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::_AtlInitialConstruct, COMDAT

; 2732 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 2733 : 		return S_OK;

  00006	33 c0		 xor	 eax, eax

; 2734 : 	}

  00008	5f		 pop	 rdi
  00009	c3		 ret	 0
?_AtlInitialConstruct@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAJXZ ENDP ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::_AtlInitialConstruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAKXZ
_TEXT	SEGMENT
nRef$ = 48
this$ = 80
?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAKXZ PROC ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease, COMDAT

; 2718 : 	{

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 2719 : #ifdef _DEBUG
; 2720 : 		long nRef = _ThreadModel::Decrement(&m_dwRef);

  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?Decrement@CComSingleThreadModel@ATL@@SAKPEAJ@Z ; ATL::CComSingleThreadModel::Decrement
  00028	89 44 24 30	 mov	 DWORD PTR nRef$[rsp], eax

; 2721 : 		if (nRef < -(LONG_MAX / 2))

  0002c	81 7c 24 30 01
	00 00 c0	 cmp	 DWORD PTR nRef$[rsp], -1073741823 ; ffffffffc0000001H
  00034	7d 40		 jge	 SHORT $LN2@InternalRe

; 2722 : 		{
; 2723 : 			ATLASSERT(0 && _T("Release called on a pointer that has already been released"));

  00036	33 c0		 xor	 eax, eax
  00038	85 c0		 test	 eax, eax
  0003a	75 3a		 jne	 SHORT $LN4@InternalRe
  0003c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1IG@BMPHLDAM@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAL?$AA?$CC?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5@
  00043	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0004f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00054	45 33 c9	 xor	 r9d, r9d
  00057	41 b8 a3 0a 00
	00		 mov	 r8d, 2723		; 00000aa3H
  0005d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00064	b9 02 00 00 00	 mov	 ecx, 2
  00069	e8 00 00 00 00	 call	 _CrtDbgReportW
  0006e	83 f8 01	 cmp	 eax, 1
  00071	75 03		 jne	 SHORT $LN4@InternalRe
  00073	cc		 int	 3
  00074	33 c0		 xor	 eax, eax
$LN4@InternalRe:
$LN2@InternalRe:

; 2724 : 		}
; 2725 : 		return nRef;

  00076	8b 44 24 30	 mov	 eax, DWORD PTR nRef$[rsp]

; 2726 : #else
; 2727 : 		return _ThreadModel::Decrement(&m_dwRef);
; 2728 : #endif
; 2729 : 	}

  0007a	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0007e	5f		 pop	 rdi
  0007f	c3		 ret	 0
?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAKXZ ENDP ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAKXZ
_TEXT	SEGMENT
this$ = 64
?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAKXZ PROC ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef, COMDAT

; 2713 : 	{

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@InternalAd:

; 2714 : 		ATLASSUME(m_dwRef != -1L);

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	83 38 ff	 cmp	 DWORD PTR [rax], -1
  00026	75 3a		 jne	 SHORT $LN6@InternalAd
  00028	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1BO@CFNLNIPO@?$AAm?$AA_?$AAd?$AAw?$AAR?$AAe?$AAf?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1?$AAL@
  0002f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00034	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0003b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00040	45 33 c9	 xor	 r9d, r9d
  00043	41 b8 9a 0a 00
	00		 mov	 r8d, 2714		; 00000a9aH
  00049	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00050	b9 02 00 00 00	 mov	 ecx, 2
  00055	e8 00 00 00 00	 call	 _CrtDbgReportW
  0005a	83 f8 01	 cmp	 eax, 1
  0005d	75 03		 jne	 SHORT $LN6@InternalAd
  0005f	cc		 int	 3
  00060	33 c0		 xor	 eax, eax
$LN6@InternalAd:
  00062	33 c0		 xor	 eax, eax
  00064	85 c0		 test	 eax, eax
  00066	75 b6		 jne	 SHORT $LN4@InternalAd

; 2715 : 		return _ThreadModel::Increment(&m_dwRef);

  00068	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006d	e8 00 00 00 00	 call	 ?Increment@CComSingleThreadModel@ATL@@SAKPEAJ@Z ; ATL::CComSingleThreadModel::Increment

; 2716 : 	}

  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAAKXZ ENDP ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ PROC ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::~CComObjectRootEx<ATL::CComSingleThreadModel>, COMDAT

; 2710 : 	~CComObjectRootEx() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1CComObjectRootBase@ATL@@QEAA@XZ ; ATL::CComObjectRootBase::~CComObjectRootBase
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::~CComObjectRootEx<ATL::CComSingleThreadModel>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QEAAXXZ
_TEXT	SEGMENT
this$ = 64
?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QEAAXXZ PROC ; ATL::CComObjectRootBase::InternalFinalConstructRelease, COMDAT

; 2517 : 	{

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@InternalFi:

; 2518 : 		ATLASSUME(m_dwRef == 0);

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	83 38 00	 cmp	 DWORD PTR [rax], 0
  00026	74 3a		 je	 SHORT $LN6@InternalFi
  00028	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1BK@MDGGGAPK@?$AAm?$AA_?$AAd?$AAw?$AAR?$AAe?$AAf?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  0002f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00034	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0003b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00040	45 33 c9	 xor	 r9d, r9d
  00043	41 b8 d6 09 00
	00		 mov	 r8d, 2518		; 000009d6H
  00049	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00050	b9 02 00 00 00	 mov	 ecx, 2
  00055	e8 00 00 00 00	 call	 _CrtDbgReportW
  0005a	83 f8 01	 cmp	 eax, 1
  0005d	75 03		 jne	 SHORT $LN6@InternalFi
  0005f	cc		 int	 3
  00060	33 c0		 xor	 eax, eax
$LN6@InternalFi:
  00062	33 c0		 xor	 eax, eax
  00064	85 c0		 test	 eax, eax
  00066	75 b6		 jne	 SHORT $LN4@InternalFi

; 2519 : 	}

  00068	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006c	5f		 pop	 rdi
  0006d	c3		 ret	 0
?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QEAAXXZ ENDP ; ATL::CComObjectRootBase::InternalFinalConstructRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QEAAXXZ PROC ; ATL::CComObjectRootBase::InternalFinalConstructAddRef, COMDAT

; 2514 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 2515 : 	}

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QEAAXXZ ENDP ; ATL::CComObjectRootBase::InternalFinalConstructAddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?SetVoid@CComObjectRootBase@ATL@@QEAAXPEAX@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
?SetVoid@CComObjectRootBase@ATL@@QEAAXPEAX@Z PROC	; ATL::CComObjectRootBase::SetVoid, COMDAT

; 2511 : 	{

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 2512 : 	}

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?SetVoid@CComObjectRootBase@ATL@@QEAAXPEAX@Z ENDP	; ATL::CComObjectRootBase::SetVoid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?InternalQueryInterface@CComObjectRootBase@ATL@@SAJPEAXPEBU_ATL_INTMAP_ENTRY@2@AEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
hRes$ = 48
pThis$ = 80
pEntries$ = 88
iid$ = 96
ppvObject$ = 104
?InternalQueryInterface@CComObjectRootBase@ATL@@SAJPEAXPEBU_ATL_INTMAP_ENTRY@2@AEBU_GUID@@PEAPEAX@Z PROC ; ATL::CComObjectRootBase::InternalQueryInterface, COMDAT

; 2475 : 	{

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 2476 : 		// Only Assert here. AtlInternalQueryInterface will return the correct HRESULT if ppvObject == NULL
; 2477 : #ifndef _ATL_OLEDB_CONFORMANCE_TESTS
; 2478 : 		ATLASSERT(ppvObject != NULL);

  0002d	48 83 7c 24 68
	00		 cmp	 QWORD PTR ppvObject$[rsp], 0
  00033	75 3a		 jne	 SHORT $LN3@InternalQu
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1BO@IINBGKAE@?$AAp?$AAp?$AAv?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 ae 09 00
	00		 mov	 r8d, 2478		; 000009aeH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	e8 00 00 00 00	 call	 _CrtDbgReportW
  00067	83 f8 01	 cmp	 eax, 1
  0006a	75 03		 jne	 SHORT $LN3@InternalQu
  0006c	cc		 int	 3
  0006d	33 c0		 xor	 eax, eax
$LN3@InternalQu:

; 2479 : #endif
; 2480 : 		ATLASSERT(pThis != NULL);

  0006f	48 83 7c 24 50
	00		 cmp	 QWORD PTR pThis$[rsp], 0
  00075	75 3a		 jne	 SHORT $LN4@InternalQu
  00077	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1BG@PEGMCOIG@?$AAp?$AAT?$AAh?$AAi?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0007e	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00083	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0008a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0008f	45 33 c9	 xor	 r9d, r9d
  00092	41 b8 b0 09 00
	00		 mov	 r8d, 2480		; 000009b0H
  00098	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0009f	b9 02 00 00 00	 mov	 ecx, 2
  000a4	e8 00 00 00 00	 call	 _CrtDbgReportW
  000a9	83 f8 01	 cmp	 eax, 1
  000ac	75 03		 jne	 SHORT $LN4@InternalQu
  000ae	cc		 int	 3
  000af	33 c0		 xor	 eax, eax
$LN4@InternalQu:

; 2481 : 		// First entry in the com map should be a simple map entry
; 2482 : 		ATLASSERT(pEntries->pFunc == _ATL_SIMPLEMAPENTRY);

  000b1	48 8b 44 24 58	 mov	 rax, QWORD PTR pEntries$[rsp]
  000b6	48 83 78 10 01	 cmp	 QWORD PTR [rax+16], 1
  000bb	74 3a		 je	 SHORT $LN5@InternalQu
  000bd	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1GE@KALDMMBC@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?9?$AA?$DO?$AAp?$AAF?$AAu?$AAn?$AAc@
  000c4	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000c9	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000d0	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000d5	45 33 c9	 xor	 r9d, r9d
  000d8	41 b8 b2 09 00
	00		 mov	 r8d, 2482		; 000009b2H
  000de	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  000e5	b9 02 00 00 00	 mov	 ecx, 2
  000ea	e8 00 00 00 00	 call	 _CrtDbgReportW
  000ef	83 f8 01	 cmp	 eax, 1
  000f2	75 03		 jne	 SHORT $LN5@InternalQu
  000f4	cc		 int	 3
  000f5	33 c0		 xor	 eax, eax
$LN5@InternalQu:

; 2483 : 	#if defined(_ATL_DEBUG_INTERFACES) || defined(_ATL_DEBUG_QI)
; 2484 : 		LPCTSTR pszClassName = (LPCTSTR) pEntries[-1].dw;
; 2485 : 		(pszClassName);
; 2486 : 	#endif // _ATL_DEBUG_INTERFACES
; 2487 : 		HRESULT hRes = AtlInternalQueryInterface(pThis, pEntries, iid, ppvObject);

  000f7	4c 8b 4c 24 68	 mov	 r9, QWORD PTR ppvObject$[rsp]
  000fc	4c 8b 44 24 60	 mov	 r8, QWORD PTR iid$[rsp]
  00101	48 8b 54 24 58	 mov	 rdx, QWORD PTR pEntries$[rsp]
  00106	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pThis$[rsp]
  0010b	e8 00 00 00 00	 call	 ?AtlInternalQueryInterface@ATL@@YAJPEAXPEBU_ATL_INTMAP_ENTRY@1@AEBU_GUID@@PEAPEAX@Z ; ATL::AtlInternalQueryInterface
  00110	89 44 24 30	 mov	 DWORD PTR hRes$[rsp], eax

; 2488 : 	#if defined(_ATL_DEBUG_INTERFACES) && !defined(_ATL_STATIC_LIB_IMPL)
; 2489 : 		_AtlDebugInterfacesModule.AddThunk((IUnknown**)ppvObject, pszClassName, iid);
; 2490 : 	#endif // _ATL_DEBUG_INTERFACES
; 2491 : 		return _ATLDUMPIID(iid, pszClassName, hRes);

  00114	8b 44 24 30	 mov	 eax, DWORD PTR hRes$[rsp]

; 2492 : 	}

  00118	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0011c	5f		 pop	 rdi
  0011d	c3		 ret	 0
?InternalQueryInterface@CComObjectRootBase@ATL@@SAJPEAXPEBU_ATL_INTMAP_ENTRY@2@AEBU_GUID@@PEAPEAX@Z ENDP ; ATL::CComObjectRootBase::InternalQueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?FinalRelease@CComObjectRootBase@ATL@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?FinalRelease@CComObjectRootBase@ATL@@QEAAXXZ PROC	; ATL::CComObjectRootBase::FinalRelease, COMDAT

; 2446 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 2447 : 	}

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
?FinalRelease@CComObjectRootBase@ATL@@QEAAXXZ ENDP	; ATL::CComObjectRootBase::FinalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?_AtlFinalConstruct@CComObjectRootBase@ATL@@QEAAJXZ
_TEXT	SEGMENT
this$ = 16
?_AtlFinalConstruct@CComObjectRootBase@ATL@@QEAAJXZ PROC ; ATL::CComObjectRootBase::_AtlFinalConstruct, COMDAT

; 2442 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 2443 : 		return S_OK;

  00006	33 c0		 xor	 eax, eax

; 2444 : 	}

  00008	5f		 pop	 rdi
  00009	c3		 ret	 0
?_AtlFinalConstruct@CComObjectRootBase@ATL@@QEAAJXZ ENDP ; ATL::CComObjectRootBase::_AtlFinalConstruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?FinalConstruct@CComObjectRootBase@ATL@@QEAAJXZ
_TEXT	SEGMENT
this$ = 16
?FinalConstruct@CComObjectRootBase@ATL@@QEAAJXZ PROC	; ATL::CComObjectRootBase::FinalConstruct, COMDAT

; 2436 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 2437 : 		return S_OK;

  00006	33 c0		 xor	 eax, eax

; 2438 : 	}

  00008	5f		 pop	 rdi
  00009	c3		 ret	 0
?FinalConstruct@CComObjectRootBase@ATL@@QEAAJXZ ENDP	; ATL::CComObjectRootBase::FinalConstruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1CComObjectRootBase@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1CComObjectRootBase@ATL@@QEAA@XZ PROC			; ATL::CComObjectRootBase::~CComObjectRootBase, COMDAT

; 2433 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 2434 : 	}

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??1CComObjectRootBase@ATL@@QEAA@XZ ENDP			; ATL::CComObjectRootBase::~CComObjectRootBase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??0CComObjectRootBase@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0CComObjectRootBase@ATL@@QEAA@XZ PROC			; ATL::CComObjectRootBase::CComObjectRootBase, COMDAT

; 2428 : 	CComObjectRootBase()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 2429 : 	{
; 2430 : 		m_dwRef = 0L;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 2431 : 	}

  00011	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00016	5f		 pop	 rdi
  00017	c3		 ret	 0
??0CComObjectRootBase@ATL@@QEAA@XZ ENDP			; ATL::CComObjectRootBase::CComObjectRootBase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlstdthunk.h
;	COMDAT ??1CDynamicStdCallThunk2@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CDynamicStdCallThunk2@ATL@@QEAA@XZ PROC		; ATL::CDynamicStdCallThunk2::~CDynamicStdCallThunk2, COMDAT

; 249  : 	{

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 250  : 		if (pThunk)

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 0d		 je	 SHORT $LN2@CDynamicSt

; 251  : 		{
; 252  : #ifdef USE_ATL_THUNK2
; 253  : 			AtlThunk_FreeData(pThunk);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00031	e8 00 00 00 00	 call	 AtlThunk_FreeData
$LN2@CDynamicSt:

; 254  : #else
; 255  : 			delete pThunk;
; 256  : #endif
; 257  : 		}
; 258  : 	}

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??1CDynamicStdCallThunk2@ATL@@QEAA@XZ ENDP		; ATL::CDynamicStdCallThunk2::~CDynamicStdCallThunk2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlstdthunk.h
;	COMDAT ??0CDynamicStdCallThunk2@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0CDynamicStdCallThunk2@ATL@@QEAA@XZ PROC		; ATL::CDynamicStdCallThunk2::CDynamicStdCallThunk2, COMDAT

; 236  : 	CDynamicStdCallThunk2()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 237  : #else
; 238  : 	CDynamicStdCallThunk()
; 239  : #endif
; 240  : 	{
; 241  : 		pThunk = NULL;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 242  : 	}

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0CDynamicStdCallThunk2@ATL@@QEAA@XZ ENDP		; ATL::CDynamicStdCallThunk2::CDynamicStdCallThunk2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?GetModuleInstance@CComModule@ATL@@QEAAPEAUHINSTANCE__@@XZ
_TEXT	SEGMENT
this$ = 16
?GetModuleInstance@CComModule@ATL@@QEAAPEAUHINSTANCE__@@XZ PROC ; ATL::CComModule::GetModuleInstance, COMDAT

; 4754 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 4755 : 		return _AtlBaseModule.m_hInst;

  00006	48 8b 05 08 00
	00 00		 mov	 rax, QWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+8

; 4756 : 	}

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?GetModuleInstance@CComModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ENDP ; ATL::CComModule::GetModuleInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F_AtlWinModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlWinModule'', COMDAT
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  0001c	e8 00 00 00 00	 call	 ??1CAtlWinModule@ATL@@QEAA@XZ ; ATL::CAtlWinModule::~CAtlWinModule
  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
??__F_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlWinModule''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlWinModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlWinModule'', COMDAT

; 2972 : __declspec(selectany) CAtlWinModule _AtlWinModule;

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  0001c	e8 00 00 00 00	 call	 ??0CAtlWinModule@ATL@@QEAA@XZ ; ATL::CAtlWinModule::CAtlWinModule
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__F_AtlWinModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlWinModule''
  00028	e8 00 00 00 00	 call	 atexit
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??__E_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlWinModule''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlWinModule@ATL@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Term@CAtlWinModule@ATL@@QEAAXXZ PROC			; ATL::CAtlWinModule::Term, COMDAT

; 2956 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2957 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A ; ATL::_AtlBaseModule
  00025	e8 00 00 00 00	 call	 ?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
  0002a	48 8b d0	 mov	 rdx, rax
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm

; 2958 : 	}

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
?Term@CAtlWinModule@ATL@@QEAAXXZ ENDP			; ATL::CAtlWinModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlWinModule@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CAtlWinModule@ATL@@QEAA@XZ PROC			; ATL::CAtlWinModule::~CAtlWinModule, COMDAT

; 2951 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2952 : 		Term();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?Term@CAtlWinModule@ATL@@QEAAXXZ ; ATL::CAtlWinModule::Term

; 2953 : 	}

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??1CAtlWinModule@ATL@@QEAA@XZ ENDP			; ATL::CAtlWinModule::~CAtlWinModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlWinModule@ATL@@QEAA@XZ
_TEXT	SEGMENT
hr$ = 48
this$ = 80
??0CAtlWinModule@ATL@@QEAA@XZ PROC			; ATL::CAtlWinModule::CAtlWinModule, COMDAT

; 2937 : 	CAtlWinModule()

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ

; 2938 : 	{
; 2939 : 		cbSize = sizeof(_ATL_WIN_MODULE);

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0002d	c7 00 48 00 00
	00		 mov	 DWORD PTR [rax], 72	; 00000048H

; 2940 : 		HRESULT hr = AtlWinModuleInit(this);

  00033	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00038	e8 00 00 00 00	 call	 ?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
  0003d	89 44 24 30	 mov	 DWORD PTR hr$[rsp], eax

; 2941 : 		if (FAILED(hr))

  00041	83 7c 24 30 00	 cmp	 DWORD PTR hr$[rsp], 0
  00046	7d 52		 jge	 SHORT $LN2@CAtlWinMod

; 2942 : 		{
; 2943 : 			ATLASSERT(0);

  00048	33 c0		 xor	 eax, eax
  0004a	85 c0		 test	 eax, eax
  0004c	75 3a		 jne	 SHORT $LN4@CAtlWinMod
  0004e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
  00055	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00061	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00066	45 33 c9	 xor	 r9d, r9d
  00069	41 b8 7f 0b 00
	00		 mov	 r8d, 2943		; 00000b7fH
  0006f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00076	b9 02 00 00 00	 mov	 ecx, 2
  0007b	e8 00 00 00 00	 call	 _CrtDbgReportW
  00080	83 f8 01	 cmp	 eax, 1
  00083	75 03		 jne	 SHORT $LN4@CAtlWinMod
  00085	cc		 int	 3
  00086	33 c0		 xor	 eax, eax
$LN4@CAtlWinMod:

; 2944 : 			CAtlBaseModule::m_bInitFailed = true;

  00088	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2945 : 			cbSize = 0;

  0008f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00094	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN2@CAtlWinMod:

; 2946 : 			return;
; 2947 : 		}
; 2948 : 	}

  0009a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0009f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a3	5f		 pop	 rdi
  000a4	c3		 ret	 0
??0CAtlWinModule@ATL@@QEAA@XZ ENDP			; ATL::CAtlWinModule::CAtlWinModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F_AtlComModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlComModule'', COMDAT
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  0001c	e8 00 00 00 00	 call	 ??1CAtlComModule@ATL@@QEAA@XZ ; ATL::CAtlComModule::~CAtlComModule
  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
??__F_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlComModule''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlComModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlComModule'', COMDAT

; 2716 : __declspec(selectany) CAtlComModule _AtlComModule;

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  0001c	e8 00 00 00 00	 call	 ??0CAtlComModule@ATL@@QEAA@XZ ; ATL::CAtlComModule::CAtlComModule
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__F_AtlComModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlComModule''
  00028	e8 00 00 00 00	 call	 atexit
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??__E_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlComModule''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlComModule@ATL@@QEAAXXZ
_TEXT	SEGMENT
ppEntry$1 = 32
pCache$2 = 40
factory$3 = 48
this$ = 80
?Term@CAtlComModule@ATL@@QEAAXXZ PROC			; ATL::CAtlComModule::Term, COMDAT

; 2613 : 	{

$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 2614 : 		if (cbSize == 0)

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	83 38 00	 cmp	 DWORD PTR [rax], 0
  00026	75 05		 jne	 SHORT $LN5@Term

; 2615 : 			return;

  00028	e9 a2 00 00 00	 jmp	 $LN1@Term
$LN5@Term:

; 2616 : 
; 2617 : 		for (_ATL_OBJMAP_ENTRY_EX** ppEntry = m_ppAutoObjMapFirst; ppEntry < m_ppAutoObjMapLast; ppEntry++)

  0002d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00036	48 89 44 24 20	 mov	 QWORD PTR ppEntry$1[rsp], rax
  0003b	eb 0e		 jmp	 SHORT $LN4@Term
$LN2@Term:
  0003d	48 8b 44 24 20	 mov	 rax, QWORD PTR ppEntry$1[rsp]
  00042	48 83 c0 08	 add	 rax, 8
  00046	48 89 44 24 20	 mov	 QWORD PTR ppEntry$1[rsp], rax
$LN4@Term:
  0004b	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00054	48 39 44 24 20	 cmp	 QWORD PTR ppEntry$1[rsp], rax
  00059	73 58		 jae	 SHORT $LN3@Term

; 2618 : 		{
; 2619 : 			if (*ppEntry != NULL)

  0005b	48 8b 44 24 20	 mov	 rax, QWORD PTR ppEntry$1[rsp]
  00060	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00064	74 4b		 je	 SHORT $LN6@Term

; 2620 : 			{
; 2621 : 				_ATL_OBJMAP_CACHE* pCache = (**ppEntry).pCache;

  00066	48 8b 44 24 20	 mov	 rax, QWORD PTR ppEntry$1[rsp]
  0006b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006e	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00072	48 89 44 24 28	 mov	 QWORD PTR pCache$2[rsp], rax

; 2622 : 
; 2623 : 				if (pCache->pCF != NULL)

  00077	48 8b 44 24 28	 mov	 rax, QWORD PTR pCache$2[rsp]
  0007c	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00080	74 2f		 je	 SHORT $LN7@Term

; 2624 : 				{
; 2625 : 					// Decode factory pointer if it's not null
; 2626 : 					IUnknown *factory = reinterpret_cast<IUnknown*>(::DecodePointer(pCache->pCF));

  00082	48 8b 44 24 28	 mov	 rax, QWORD PTR pCache$2[rsp]
  00087	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0008a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DecodePointer
  00090	48 89 44 24 30	 mov	 QWORD PTR factory$3[rsp], rax

; 2627 : 					_Analysis_assume_(factory != nullptr);
; 2628 : 					factory->Release();

  00095	48 8b 44 24 30	 mov	 rax, QWORD PTR factory$3[rsp]
  0009a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR factory$3[rsp]
  000a2	ff 50 10	 call	 QWORD PTR [rax+16]

; 2629 : 					pCache->pCF = NULL;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR pCache$2[rsp]
  000aa	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN7@Term:
$LN6@Term:

; 2630 : 				}
; 2631 : 			}
; 2632 : 		}

  000b1	eb 8a		 jmp	 SHORT $LN2@Term
$LN3@Term:

; 2633 : 		m_csObjMap.Term();

  000b3	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000b8	48 83 c0 20	 add	 rax, 32			; 00000020H
  000bc	48 8b c8	 mov	 rcx, rax
  000bf	e8 00 00 00 00	 call	 ?Term@CComCriticalSection@ATL@@QEAAJXZ ; ATL::CComCriticalSection::Term

; 2634 : 		// Set to 0 to indicate that this function has been called
; 2635 : 		// At this point no one should be concerned about cbsize
; 2636 : 		// having the correct value
; 2637 : 		cbSize = 0;

  000c4	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000c9	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN1@Term:

; 2638 : 	}

  000cf	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d3	5f		 pop	 rdi
  000d4	c3		 ret	 0
?Term@CAtlComModule@ATL@@QEAAXXZ ENDP			; ATL::CAtlComModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlComModule@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CAtlComModule@ATL@@QEAA@XZ PROC			; ATL::CAtlComModule::~CAtlComModule, COMDAT

; 2607 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2608 : 		Term();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?Term@CAtlComModule@ATL@@QEAAXXZ ; ATL::CAtlComModule::Term

; 2609 : 	}

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??1CAtlComModule@ATL@@QEAA@XZ ENDP			; ATL::CAtlComModule::~CAtlComModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlComModule@ATL@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 48
tv144 = 64
this$ = 96
??0CAtlComModule@ATL@@QEAA@XZ PROC			; ATL::CAtlComModule::CAtlComModule, COMDAT

; 2586 : 	CAtlComModule() throw()

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_ATL_COM_MODULE70@ATL@@QEAA@XZ

; 2587 : 	{
; 2588 : 		cbSize = 0;

  00028	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0002d	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 2589 : 
; 2590 : 		m_hInstTypeLib = reinterpret_cast<HINSTANCE>(&__ImageBase);

  00033	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__ImageBase
  0003f	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 2591 : 
; 2592 : 		m_ppAutoObjMapFirst = &__pobjMapEntryFirst + 1;

  00043	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:__pobjMapEntryFirst
  0004a	48 83 c0 08	 add	 rax, 8
  0004e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00053	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 2593 : 		m_ppAutoObjMapLast = &__pobjMapEntryLast;

  00057	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__pobjMapEntryLast
  00063	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2594 : 
; 2595 : 		if (FAILED(m_csObjMap.Init()))

  00067	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0006c	48 83 c0 20	 add	 rax, 32			; 00000020H
  00070	48 8b c8	 mov	 rcx, rax
  00073	e8 00 00 00 00	 call	 ?Init@CComCriticalSection@ATL@@QEAAJXZ ; ATL::CComCriticalSection::Init
  00078	85 c0		 test	 eax, eax
  0007a	0f 8d 88 00 00
	00		 jge	 $LN2@CAtlComMod

; 2596 : 		{
; 2597 : 			ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to initialize critical section in CAtlComModule\n"));

  00080	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00087	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  0008c	89 44 24 40	 mov	 DWORD PTR tv144[rsp], eax
  00090	41 b8 25 0a 00
	00		 mov	 r8d, 2597		; 00000a25H
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0009d	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T1[rsp]
  000a2	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000a7	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
  000ae	45 33 c0	 xor	 r8d, r8d
  000b1	8b 4c 24 40	 mov	 ecx, DWORD PTR tv144[rsp]
  000b5	8b d1		 mov	 edx, ecx
  000b7	48 8b c8	 mov	 rcx, rax
  000ba	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ ; ATL::CTraceFileAndLineInfo::operator()

; 2598 : 			ATLASSERT(0);

  000bf	33 c0		 xor	 eax, eax
  000c1	85 c0		 test	 eax, eax
  000c3	75 3a		 jne	 SHORT $LN4@CAtlComMod
  000c5	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
  000cc	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000d1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000d8	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000dd	45 33 c9	 xor	 r9d, r9d
  000e0	41 b8 26 0a 00
	00		 mov	 r8d, 2598		; 00000a26H
  000e6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000ed	b9 02 00 00 00	 mov	 ecx, 2
  000f2	e8 00 00 00 00	 call	 _CrtDbgReportW
  000f7	83 f8 01	 cmp	 eax, 1
  000fa	75 03		 jne	 SHORT $LN4@CAtlComMod
  000fc	cc		 int	 3
  000fd	33 c0		 xor	 eax, eax
$LN4@CAtlComMod:

; 2599 : 			CAtlBaseModule::m_bInitFailed = true;

  000ff	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2600 : 			return;

  00106	eb 0b		 jmp	 SHORT $LN1@CAtlComMod
$LN2@CAtlComMod:

; 2601 : 		}
; 2602 : 		// Set cbSize on success.
; 2603 : 		cbSize = sizeof(_ATL_COM_MODULE);

  00108	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0010d	c7 00 48 00 00
	00		 mov	 DWORD PTR [rax], 72	; 00000048H
$LN1@CAtlComMod:

; 2604 : 	}

  00113	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00118	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0011c	5f		 pop	 rdi
  0011d	c3		 ret	 0
??0CAtlComModule@ATL@@QEAA@XZ ENDP			; ATL::CAtlComModule::CAtlComModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?InlineIsEqualUnknown@ATL@@YAHAEBU_GUID@@@Z
_TEXT	SEGMENT
tv76 = 0
rguid1$ = 32
?InlineIsEqualUnknown@ATL@@YAHAEBU_GUID@@@Z PROC	; ATL::InlineIsEqualUnknown, COMDAT

; 666  : {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 667  :    return (

  0001e	b8 04 00 00 00	 mov	 eax, 4
  00023	48 6b c0 00	 imul	 rax, rax, 0
  00027	48 8b 4c 24 20	 mov	 rcx, QWORD PTR rguid1$[rsp]
  0002c	83 3c 01 00	 cmp	 DWORD PTR [rcx+rax], 0
  00030	75 4b		 jne	 SHORT $LN3@InlineIsEq
  00032	b8 04 00 00 00	 mov	 eax, 4
  00037	48 6b c0 01	 imul	 rax, rax, 1
  0003b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR rguid1$[rsp]
  00040	83 3c 01 00	 cmp	 DWORD PTR [rcx+rax], 0
  00044	75 37		 jne	 SHORT $LN3@InlineIsEq
  00046	b8 04 00 00 00	 mov	 eax, 4
  0004b	48 6b c0 02	 imul	 rax, rax, 2
  0004f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR rguid1$[rsp]
  00054	81 3c 01 c0 00
	00 00		 cmp	 DWORD PTR [rcx+rax], 192 ; 000000c0H
  0005b	75 20		 jne	 SHORT $LN3@InlineIsEq
  0005d	b8 04 00 00 00	 mov	 eax, 4
  00062	48 6b c0 03	 imul	 rax, rax, 3
  00066	48 8b 4c 24 20	 mov	 rcx, QWORD PTR rguid1$[rsp]
  0006b	81 3c 01 00 00
	00 46		 cmp	 DWORD PTR [rcx+rax], 1174405120 ; 46000000H
  00072	75 09		 jne	 SHORT $LN3@InlineIsEq
  00074	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv76[rsp], 1
  0007b	eb 07		 jmp	 SHORT $LN4@InlineIsEq
$LN3@InlineIsEq:
  0007d	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv76[rsp], 0
$LN4@InlineIsEq:
  00084	8b 04 24	 mov	 eax, DWORD PTR tv76[rsp]

; 668  : 	  ((PLONG) &rguid1)[0] == 0 &&
; 669  : 	  ((PLONG) &rguid1)[1] == 0 &&
; 670  : #ifdef _ATL_BYTESWAP
; 671  : 	  ((PLONG) &rguid1)[2] == 0xC0000000 &&
; 672  : 	  ((PLONG) &rguid1)[3] == 0x00000046);
; 673  : #else
; 674  : 	  ((PLONG) &rguid1)[2] == 0x000000C0 &&
; 675  : 	  ((PLONG) &rguid1)[3] == 0x46000000);
; 676  : #endif
; 677  : }

  00087	48 83 c4 10	 add	 rsp, 16
  0008b	5f		 pop	 rdi
  0008c	c3		 ret	 0
?InlineIsEqualUnknown@ATL@@YAHAEBU_GUID@@@Z ENDP	; ATL::InlineIsEqualUnknown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z
_TEXT	SEGMENT
i$1 = 32
pWinModule$ = 64
hInst$ = 72
?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z PROC ; ATL::AtlWinModuleTerm, COMDAT

; 7652 : {

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 7653 : 	if (pWinModule == NULL)

  00023	48 83 7c 24 40
	00		 cmp	 QWORD PTR pWinModule$[rsp], 0
  00029	75 0a		 jne	 SHORT $LN5@AtlWinModu

; 7654 : 		return E_INVALIDARG;

  0002b	b8 57 00 07 80	 mov	 eax, -2147024809	; ffffffff80070057H
  00030	e9 a9 00 00 00	 jmp	 $LN1@AtlWinModu
$LN5@AtlWinModu:

; 7655 : 	if (pWinModule->cbSize == 0)

  00035	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  0003a	83 38 00	 cmp	 DWORD PTR [rax], 0
  0003d	75 07		 jne	 SHORT $LN6@AtlWinModu

; 7656 : 		return S_OK;

  0003f	33 c0		 xor	 eax, eax
  00041	e9 98 00 00 00	 jmp	 $LN1@AtlWinModu
$LN6@AtlWinModu:

; 7657 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

  00046	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  0004b	8b 00		 mov	 eax, DWORD PTR [rax]
  0004d	48 83 f8 48	 cmp	 rax, 72			; 00000048H
  00051	74 0a		 je	 SHORT $LN7@AtlWinModu

; 7658 : 		return E_INVALIDARG;

  00053	b8 57 00 07 80	 mov	 eax, -2147024809	; ffffffff80070057H
  00058	e9 81 00 00 00	 jmp	 $LN1@AtlWinModu
$LN7@AtlWinModu:

; 7659 : 
; 7660 : 	for (int i = 0; i < pWinModule->m_rgWindowClassAtoms.GetSize(); i++)

  0005d	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  00065	eb 0a		 jmp	 SHORT $LN4@AtlWinModu
$LN2@AtlWinModu:
  00067	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  0006b	ff c0		 inc	 eax
  0006d	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@AtlWinModu:
  00071	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  00076	48 83 c0 38	 add	 rax, 56			; 00000038H
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
  00082	39 44 24 20	 cmp	 DWORD PTR i$1[rsp], eax
  00086	7d 27		 jge	 SHORT $LN3@AtlWinModu

; 7661 : 		UnregisterClass((LPCTSTR)pWinModule->m_rgWindowClassAtoms[i], hInst);

  00088	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  0008d	48 83 c0 38	 add	 rax, 56			; 00000038H
  00091	8b 54 24 20	 mov	 edx, DWORD PTR i$1[rsp]
  00095	48 8b c8	 mov	 rcx, rax
  00098	e8 00 00 00 00	 call	 ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
  0009d	0f b7 00	 movzx	 eax, WORD PTR [rax]
  000a0	48 8b 54 24 48	 mov	 rdx, QWORD PTR hInst$[rsp]
  000a5	8b c8		 mov	 ecx, eax
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_UnregisterClassW
  000ad	eb b8		 jmp	 SHORT $LN2@AtlWinModu
$LN3@AtlWinModu:

; 7662 : 	pWinModule->m_rgWindowClassAtoms.RemoveAll();

  000af	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  000b4	48 83 c0 38	 add	 rax, 56			; 00000038H
  000b8	48 8b c8	 mov	 rcx, rax
  000bb	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll

; 7663 : 	pWinModule->m_csWindowCreate.Term();

  000c0	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  000c5	48 83 c0 08	 add	 rax, 8
  000c9	48 8b c8	 mov	 rcx, rax
  000cc	e8 00 00 00 00	 call	 ?Term@CComCriticalSection@ATL@@QEAAJXZ ; ATL::CComCriticalSection::Term

; 7664 : 	pWinModule->cbSize = 0;

  000d1	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  000d6	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 7665 : 	return S_OK;

  000dc	33 c0		 xor	 eax, eax
$LN1@AtlWinModu:

; 7666 : }

  000de	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000e2	5f		 pop	 rdi
  000e3	c3		 ret	 0
?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z ENDP ; ATL::AtlWinModuleTerm
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z
_TEXT	SEGMENT
hr$ = 48
$T1 = 56
tv81 = 72
pWinModule$ = 96
?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z PROC ; ATL::AtlWinModuleInit, COMDAT

; 8396 : {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 8397 : 	if (pWinModule == NULL)

  0001e	48 83 7c 24 60
	00		 cmp	 QWORD PTR pWinModule$[rsp], 0
  00024	75 0a		 jne	 SHORT $LN2@AtlWinModu

; 8398 : 		return E_INVALIDARG;

  00026	b8 57 00 07 80	 mov	 eax, -2147024809	; ffffffff80070057H
  0002b	e9 c3 00 00 00	 jmp	 $LN1@AtlWinModu
$LN2@AtlWinModu:

; 8399 : 
; 8400 : 	// check only in the DLL
; 8401 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

  00030	48 8b 44 24 60	 mov	 rax, QWORD PTR pWinModule$[rsp]
  00035	8b 00		 mov	 eax, DWORD PTR [rax]
  00037	48 83 f8 48	 cmp	 rax, 72			; 00000048H
  0003b	74 0a		 je	 SHORT $LN3@AtlWinModu

; 8402 : 		return E_INVALIDARG;

  0003d	b8 57 00 07 80	 mov	 eax, -2147024809	; ffffffff80070057H
  00042	e9 ac 00 00 00	 jmp	 $LN1@AtlWinModu
$LN3@AtlWinModu:

; 8403 : 
; 8404 : 	pWinModule->m_pCreateWndList = NULL;

  00047	48 8b 44 24 60	 mov	 rax, QWORD PTR pWinModule$[rsp]
  0004c	48 c7 40 30 00
	00 00 00	 mov	 QWORD PTR [rax+48], 0

; 8405 : 
; 8406 : 	HRESULT hr = pWinModule->m_csWindowCreate.Init();

  00054	48 8b 44 24 60	 mov	 rax, QWORD PTR pWinModule$[rsp]
  00059	48 83 c0 08	 add	 rax, 8
  0005d	48 8b c8	 mov	 rcx, rax
  00060	e8 00 00 00 00	 call	 ?Init@CComCriticalSection@ATL@@QEAAJXZ ; ATL::CComCriticalSection::Init
  00065	89 44 24 30	 mov	 DWORD PTR hr$[rsp], eax

; 8407 : 	if (FAILED(hr))

  00069	83 7c 24 30 00	 cmp	 DWORD PTR hr$[rsp], 0
  0006e	7d 7f		 jge	 SHORT $LN4@AtlWinModu

; 8408 : 	{
; 8409 : 		ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Unable to initialize critical section in AtlWinModuleInit\n"));

  00070	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  00077	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ ; ATL::CTraceCategoryEx<32,0>::operator unsigned int
  0007c	89 44 24 48	 mov	 DWORD PTR tv81[rsp], eax
  00080	41 b8 d9 20 00
	00		 mov	 r8d, 8409		; 000020d9H
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0008d	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T1[rsp]
  00092	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00097	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
  0009e	45 33 c0	 xor	 r8d, r8d
  000a1	8b 4c 24 48	 mov	 ecx, DWORD PTR tv81[rsp]
  000a5	8b d1		 mov	 edx, ecx
  000a7	48 8b c8	 mov	 rcx, rax
  000aa	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ ; ATL::CTraceFileAndLineInfo::operator()

; 8410 : 		ATLASSERT(0);

  000af	33 c0		 xor	 eax, eax
  000b1	85 c0		 test	 eax, eax
  000b3	75 3a		 jne	 SHORT $LN6@AtlWinModu
  000b5	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
  000bc	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000c1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000c8	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000cd	45 33 c9	 xor	 r9d, r9d
  000d0	41 b8 da 20 00
	00		 mov	 r8d, 8410		; 000020daH
  000d6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000dd	b9 02 00 00 00	 mov	 ecx, 2
  000e2	e8 00 00 00 00	 call	 _CrtDbgReportW
  000e7	83 f8 01	 cmp	 eax, 1
  000ea	75 03		 jne	 SHORT $LN6@AtlWinModu
  000ec	cc		 int	 3
  000ed	33 c0		 xor	 eax, eax
$LN6@AtlWinModu:
$LN4@AtlWinModu:

; 8411 : 	}
; 8412 : 	return hr;

  000ef	8b 44 24 30	 mov	 eax, DWORD PTR hr$[rsp]
$LN1@AtlWinModu:

; 8413 : }

  000f3	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000f7	5f		 pop	 rdi
  000f8	c3		 ret	 0
?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z ENDP ; ATL::AtlWinModuleInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlInternalQueryInterface@ATL@@YAJPEAXPEBU_ATL_INTMAP_ENTRY@1@AEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
pUnk$1 = 48
hRes$ = 56
bBlind$2 = 60
pUnk$3 = 64
tv143 = 72
pThis$ = 96
pEntries$ = 104
iid$ = 112
ppvObject$ = 120
?AtlInternalQueryInterface@ATL@@YAJPEAXPEBU_ATL_INTMAP_ENTRY@1@AEBU_GUID@@PEAPEAX@Z PROC ; ATL::AtlInternalQueryInterface, COMDAT

; 8265 : {

$LN22:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 8266 : 	ATLASSERT(pThis != NULL);

  0002d	48 83 7c 24 60
	00		 cmp	 QWORD PTR pThis$[rsp], 0
  00033	75 3a		 jne	 SHORT $LN16@AtlInterna
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1BG@PEGMCOIG@?$AAp?$AAT?$AAh?$AAi?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 4a 20 00
	00		 mov	 r8d, 8266		; 0000204aH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	e8 00 00 00 00	 call	 _CrtDbgReportW
  00067	83 f8 01	 cmp	 eax, 1
  0006a	75 03		 jne	 SHORT $LN16@AtlInterna
  0006c	cc		 int	 3
  0006d	33 c0		 xor	 eax, eax
$LN16@AtlInterna:

; 8267 : 	ATLASSERT(pEntries!= NULL);

  0006f	48 83 7c 24 68
	00		 cmp	 QWORD PTR pEntries$[rsp], 0
  00075	75 3a		 jne	 SHORT $LN17@AtlInterna
  00077	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1BK@ENABKMAI@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0007e	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00083	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0008a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0008f	45 33 c9	 xor	 r9d, r9d
  00092	41 b8 4b 20 00
	00		 mov	 r8d, 8267		; 0000204bH
  00098	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0009f	b9 02 00 00 00	 mov	 ecx, 2
  000a4	e8 00 00 00 00	 call	 _CrtDbgReportW
  000a9	83 f8 01	 cmp	 eax, 1
  000ac	75 03		 jne	 SHORT $LN17@AtlInterna
  000ae	cc		 int	 3
  000af	33 c0		 xor	 eax, eax
$LN17@AtlInterna:

; 8268 : 
; 8269 : 	if(pThis == NULL || pEntries == NULL)

  000b1	48 83 7c 24 60
	00		 cmp	 QWORD PTR pThis$[rsp], 0
  000b7	74 08		 je	 SHORT $LN6@AtlInterna
  000b9	48 83 7c 24 68
	00		 cmp	 QWORD PTR pEntries$[rsp], 0
  000bf	75 0a		 jne	 SHORT $LN5@AtlInterna
$LN6@AtlInterna:

; 8270 : 		return E_INVALIDARG;

  000c1	b8 57 00 07 80	 mov	 eax, -2147024809	; ffffffff80070057H
  000c6	e9 ed 01 00 00	 jmp	 $LN1@AtlInterna
$LN5@AtlInterna:

; 8271 : 
; 8272 : 	// First entry in the com map should be a simple map entry
; 8273 : 	ATLASSERT(pEntries->pFunc == _ATL_SIMPLEMAPENTRY);

  000cb	48 8b 44 24 68	 mov	 rax, QWORD PTR pEntries$[rsp]
  000d0	48 83 78 10 01	 cmp	 QWORD PTR [rax+16], 1
  000d5	74 3a		 je	 SHORT $LN18@AtlInterna
  000d7	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1GE@KALDMMBC@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?9?$AA?$DO?$AAp?$AAF?$AAu?$AAn?$AAc@
  000de	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000e3	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000ea	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ef	45 33 c9	 xor	 r9d, r9d
  000f2	41 b8 51 20 00
	00		 mov	 r8d, 8273		; 00002051H
  000f8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000ff	b9 02 00 00 00	 mov	 ecx, 2
  00104	e8 00 00 00 00	 call	 _CrtDbgReportW
  00109	83 f8 01	 cmp	 eax, 1
  0010c	75 03		 jne	 SHORT $LN18@AtlInterna
  0010e	cc		 int	 3
  0010f	33 c0		 xor	 eax, eax
$LN18@AtlInterna:

; 8274 : 
; 8275 : 	if (ppvObject == NULL)

  00111	48 83 7c 24 78
	00		 cmp	 QWORD PTR ppvObject$[rsp], 0
  00117	75 0a		 jne	 SHORT $LN7@AtlInterna

; 8276 : 		return E_POINTER;

  00119	b8 03 40 00 80	 mov	 eax, -2147467261	; ffffffff80004003H
  0011e	e9 95 01 00 00	 jmp	 $LN1@AtlInterna
$LN7@AtlInterna:

; 8277 : 
; 8278 : 	if (InlineIsEqualUnknown(iid)) // use first interface

  00123	48 8b 4c 24 70	 mov	 rcx, QWORD PTR iid$[rsp]
  00128	e8 00 00 00 00	 call	 ?InlineIsEqualUnknown@ATL@@YAHAEBU_GUID@@@Z ; ATL::InlineIsEqualUnknown
  0012d	85 c0		 test	 eax, eax
  0012f	74 3d		 je	 SHORT $LN8@AtlInterna

; 8279 : 	{
; 8280 : 		IUnknown* pUnk = (IUnknown*)((INT_PTR)pThis+pEntries->dw);

  00131	48 8b 44 24 68	 mov	 rax, QWORD PTR pEntries$[rsp]
  00136	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0013a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pThis$[rsp]
  0013f	48 03 c8	 add	 rcx, rax
  00142	48 8b c1	 mov	 rax, rcx
  00145	48 89 44 24 30	 mov	 QWORD PTR pUnk$1[rsp], rax

; 8281 : 		pUnk->AddRef();

  0014a	48 8b 44 24 30	 mov	 rax, QWORD PTR pUnk$1[rsp]
  0014f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00152	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pUnk$1[rsp]
  00157	ff 50 08	 call	 QWORD PTR [rax+8]

; 8282 : 		*ppvObject = pUnk;

  0015a	48 8b 44 24 78	 mov	 rax, QWORD PTR ppvObject$[rsp]
  0015f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pUnk$1[rsp]
  00164	48 89 08	 mov	 QWORD PTR [rax], rcx

; 8283 : 		return S_OK;

  00167	33 c0		 xor	 eax, eax
  00169	e9 4a 01 00 00	 jmp	 $LN1@AtlInterna
$LN8@AtlInterna:

; 8284 : 	}

  0016e	eb 0e		 jmp	 SHORT $LN4@AtlInterna
$LN2@AtlInterna:

; 8285 : 
; 8286 : 	HRESULT hRes;
; 8287 : 
; 8288 : 	for (;; pEntries++)

  00170	48 8b 44 24 68	 mov	 rax, QWORD PTR pEntries$[rsp]
  00175	48 83 c0 18	 add	 rax, 24
  00179	48 89 44 24 68	 mov	 QWORD PTR pEntries$[rsp], rax
$LN4@AtlInterna:

; 8289 : 	{
; 8290 : 		if (pEntries->pFunc == NULL)

  0017e	48 8b 44 24 68	 mov	 rax, QWORD PTR pEntries$[rsp]
  00183	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  00188	75 0d		 jne	 SHORT $LN9@AtlInterna

; 8291 : 		{
; 8292 : 			hRes = E_NOINTERFACE;

  0018a	c7 44 24 38 02
	40 00 80	 mov	 DWORD PTR hRes$[rsp], -2147467262 ; ffffffff80004002H

; 8293 : 			break;

  00192	e9 11 01 00 00	 jmp	 $LN3@AtlInterna
$LN9@AtlInterna:

; 8294 : 		}
; 8295 : 
; 8296 : 		BOOL bBlind = (pEntries->piid == NULL);

  00197	48 8b 44 24 68	 mov	 rax, QWORD PTR pEntries$[rsp]
  0019c	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  001a0	75 0a		 jne	 SHORT $LN19@AtlInterna
  001a2	c7 44 24 48 01
	00 00 00	 mov	 DWORD PTR tv143[rsp], 1
  001aa	eb 08		 jmp	 SHORT $LN20@AtlInterna
$LN19@AtlInterna:
  001ac	c7 44 24 48 00
	00 00 00	 mov	 DWORD PTR tv143[rsp], 0
$LN20@AtlInterna:
  001b4	8b 44 24 48	 mov	 eax, DWORD PTR tv143[rsp]
  001b8	89 44 24 3c	 mov	 DWORD PTR bBlind$2[rsp], eax

; 8297 : 		if (bBlind || InlineIsEqualGUID(*(pEntries->piid), iid))

  001bc	83 7c 24 3c 00	 cmp	 DWORD PTR bBlind$2[rsp], 0
  001c1	75 1a		 jne	 SHORT $LN11@AtlInterna
  001c3	48 8b 54 24 70	 mov	 rdx, QWORD PTR iid$[rsp]
  001c8	48 8b 44 24 68	 mov	 rax, QWORD PTR pEntries$[rsp]
  001cd	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  001d0	e8 00 00 00 00	 call	 InlineIsEqualGUID
  001d5	85 c0		 test	 eax, eax
  001d7	0f 84 c6 00 00
	00		 je	 $LN10@AtlInterna
$LN11@AtlInterna:

; 8298 : 		{
; 8299 : 			if (pEntries->pFunc == _ATL_SIMPLEMAPENTRY) //offset

  001dd	48 8b 44 24 68	 mov	 rax, QWORD PTR pEntries$[rsp]
  001e2	48 83 78 10 01	 cmp	 QWORD PTR [rax+16], 1
  001e7	75 7b		 jne	 SHORT $LN12@AtlInterna

; 8300 : 			{
; 8301 : 				ATLASSERT(!bBlind);

  001e9	83 7c 24 3c 00	 cmp	 DWORD PTR bBlind$2[rsp], 0
  001ee	74 3a		 je	 SHORT $LN21@AtlInterna
  001f0	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1BA@JJDNGNLN@?$AA?$CB?$AAb?$AAB?$AAl?$AAi?$AAn?$AAd@
  001f7	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  001fc	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00203	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00208	45 33 c9	 xor	 r9d, r9d
  0020b	41 b8 6d 20 00
	00		 mov	 r8d, 8301		; 0000206dH
  00211	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00218	b9 02 00 00 00	 mov	 ecx, 2
  0021d	e8 00 00 00 00	 call	 _CrtDbgReportW
  00222	83 f8 01	 cmp	 eax, 1
  00225	75 03		 jne	 SHORT $LN21@AtlInterna
  00227	cc		 int	 3
  00228	33 c0		 xor	 eax, eax
$LN21@AtlInterna:

; 8302 : 				IUnknown* pUnk = (IUnknown*)((INT_PTR)pThis+pEntries->dw);

  0022a	48 8b 44 24 68	 mov	 rax, QWORD PTR pEntries$[rsp]
  0022f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00233	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pThis$[rsp]
  00238	48 03 c8	 add	 rcx, rax
  0023b	48 8b c1	 mov	 rax, rcx
  0023e	48 89 44 24 40	 mov	 QWORD PTR pUnk$3[rsp], rax

; 8303 : 				pUnk->AddRef();

  00243	48 8b 44 24 40	 mov	 rax, QWORD PTR pUnk$3[rsp]
  00248	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0024b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pUnk$3[rsp]
  00250	ff 50 08	 call	 QWORD PTR [rax+8]

; 8304 : 				*ppvObject = pUnk;

  00253	48 8b 44 24 78	 mov	 rax, QWORD PTR ppvObject$[rsp]
  00258	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pUnk$3[rsp]
  0025d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 8305 : 				return S_OK;

  00260	33 c0		 xor	 eax, eax
  00262	eb 54		 jmp	 SHORT $LN1@AtlInterna
$LN12@AtlInterna:

; 8306 : 			}
; 8307 : 
; 8308 : 			// Actual function call
; 8309 : 
; 8310 : 			hRes = pEntries->pFunc(pThis,

  00264	48 8b 44 24 68	 mov	 rax, QWORD PTR pEntries$[rsp]
  00269	4c 8b 48 08	 mov	 r9, QWORD PTR [rax+8]
  0026d	4c 8b 44 24 78	 mov	 r8, QWORD PTR ppvObject$[rsp]
  00272	48 8b 54 24 70	 mov	 rdx, QWORD PTR iid$[rsp]
  00277	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pThis$[rsp]
  0027c	48 8b 44 24 68	 mov	 rax, QWORD PTR pEntries$[rsp]
  00281	ff 50 10	 call	 QWORD PTR [rax+16]
  00284	89 44 24 38	 mov	 DWORD PTR hRes$[rsp], eax

; 8311 : 				iid, ppvObject, pEntries->dw);
; 8312 : 			if (hRes == S_OK)

  00288	83 7c 24 38 00	 cmp	 DWORD PTR hRes$[rsp], 0
  0028d	75 04		 jne	 SHORT $LN13@AtlInterna

; 8313 : 				return S_OK;

  0028f	33 c0		 xor	 eax, eax
  00291	eb 25		 jmp	 SHORT $LN1@AtlInterna
$LN13@AtlInterna:

; 8314 : 			if (!bBlind && FAILED(hRes))

  00293	83 7c 24 3c 00	 cmp	 DWORD PTR bBlind$2[rsp], 0
  00298	75 09		 jne	 SHORT $LN14@AtlInterna
  0029a	83 7c 24 38 00	 cmp	 DWORD PTR hRes$[rsp], 0
  0029f	7d 02		 jge	 SHORT $LN14@AtlInterna

; 8315 : 				break;

  002a1	eb 05		 jmp	 SHORT $LN3@AtlInterna
$LN14@AtlInterna:
$LN10@AtlInterna:

; 8316 : 		}
; 8317 : 	}

  002a3	e9 c8 fe ff ff	 jmp	 $LN2@AtlInterna
$LN3@AtlInterna:

; 8318 : 
; 8319 : 	*ppvObject = NULL;

  002a8	48 8b 44 24 78	 mov	 rax, QWORD PTR ppvObject$[rsp]
  002ad	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 8320 : 
; 8321 : 	return hRes;

  002b4	8b 44 24 38	 mov	 eax, DWORD PTR hRes$[rsp]
$LN1@AtlInterna:

; 8322 : }

  002b8	48 83 c4 50	 add	 rsp, 80			; 00000050H
  002bc	5f		 pop	 rdi
  002bd	c3		 ret	 0
?AtlInternalQueryInterface@ATL@@YAJPEAXPEBU_ATL_INTMAP_ENTRY@1@AEBU_GUID@@PEAPEAX@Z ENDP ; ATL::AtlInternalQueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ PROC			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 38	 add	 rax, 56			; 00000038H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 83 c0 08	 add	 rax, 8
  00038	48 8b c8	 mov	 rcx, rax
  0003b	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00040	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ ENDP			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ PROC			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??0CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::CComCriticalSection
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 83 c0 38	 add	 rax, 56			; 00000038H
  00038	48 8b c8	 mov	 rcx, rax
  0003b	e8 00 00 00 00	 call	 ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ ENDP			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z
_TEXT	SEGMENT
this$ = 64
nIndex$ = 72
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[], COMDAT

; 236  : 	{

$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 237  : 		ATLASSERT(nIndex >= 0 && nIndex < m_nSize);

  00022	83 7c 24 48 00	 cmp	 DWORD PTR nIndex$[rsp], 0
  00027	7c 0e		 jl	 SHORT $LN5@operator
  00029	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002e	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00031	39 44 24 48	 cmp	 DWORD PTR nIndex$[rsp], eax
  00035	7c 3a		 jl	 SHORT $LN6@operator
$LN5@operator:
  00037	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
  0003e	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00043	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0004a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004f	45 33 c9	 xor	 r9d, r9d
  00052	41 b8 ed 00 00
	00		 mov	 r8d, 237		; 000000edH
  00058	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OK@FGCLCILL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0005f	b9 02 00 00 00	 mov	 ecx, 2
  00064	e8 00 00 00 00	 call	 _CrtDbgReportW
  00069	83 f8 01	 cmp	 eax, 1
  0006c	75 03		 jne	 SHORT $LN6@operator
  0006e	cc		 int	 3
  0006f	33 c0		 xor	 eax, eax
$LN6@operator:

; 238  : 		if(nIndex < 0 || nIndex >= m_nSize)

  00071	83 7c 24 48 00	 cmp	 DWORD PTR nIndex$[rsp], 0
  00076	7c 0e		 jl	 SHORT $LN3@operator
  00078	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0007d	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00080	39 44 24 48	 cmp	 DWORD PTR nIndex$[rsp], eax
  00084	7c 0f		 jl	 SHORT $LN2@operator
$LN3@operator:

; 239  : 		{
; 240  : 			_AtlRaiseException((DWORD)EXCEPTION_ARRAY_BOUNDS_EXCEEDED);

  00086	ba 01 00 00 00	 mov	 edx, 1
  0008b	b9 8c 00 00 c0	 mov	 ecx, -1073741684	; c000008cH
  00090	e8 00 00 00 00	 call	 ?_AtlRaiseException@ATL@@YAXKK@Z ; ATL::_AtlRaiseException
$LN2@operator:

; 241  : 		}
; 242  : 		return m_aT[nIndex];

  00095	48 63 44 24 48	 movsxd	 rax, DWORD PTR nIndex$[rsp]
  0009a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0009f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000a2	48 8d 04 41	 lea	 rax, QWORD PTR [rcx+rax*2]
$LN4@operator:

; 243  : 	}

  000a6	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000aa	5f		 pop	 rdi
  000ab	c3		 ret	 0
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ
_TEXT	SEGMENT
i$1 = 32
this$ = 64
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll, COMDAT

; 215  : 	{

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 216  : 		if(m_aT != NULL)

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 3d		 je	 SHORT $LN5@RemoveAll

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)

  00029	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  00031	eb 0a		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00033	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  00037	ff c0		 inc	 eax
  00039	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@RemoveAll:
  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00045	39 44 24 20	 cmp	 DWORD PTR i$1[rsp], eax
  00049	7d 02		 jge	 SHORT $LN3@RemoveAll

; 219  : 				m_aT[i].~T();

  0004b	eb e6		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 220  : 			free(m_aT);

  0004d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00055	e8 00 00 00 00	 call	 free

; 221  : 			m_aT = NULL;

  0005a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN5@RemoveAll:

; 222  : 		}
; 223  : 		m_nSize = 0;

  00066	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006b	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0

; 224  : 		m_nAllocSize = 0;

  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00077	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [rax+12], 0

; 225  :     }

  0007e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00082	5f		 pop	 rdi
  00083	c3		 ret	 0
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ
_TEXT	SEGMENT
this$ = 16
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize, COMDAT

; 160  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 161  : 		return m_nSize;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	8b 40 08	 mov	 eax, DWORD PTR [rax+8]

; 162  : 	}

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT

; 310  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 311  : 	RemoveAll();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll

; 312  : }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT

; 120  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0
  0001e	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00023	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [rax+12], 0

; 121  : 	}

  0002a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_ATL_COM_MODULE70@ATL@@QEAA@XZ PROC			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 20	 add	 rax, 32			; 00000020H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??1_ATL_COM_MODULE70@ATL@@QEAA@XZ ENDP			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_ATL_COM_MODULE70@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0_ATL_COM_MODULE70@ATL@@QEAA@XZ PROC			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 20	 add	 rax, 32			; 00000020H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??0CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::CComCriticalSection
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??0_ATL_COM_MODULE70@ATL@@QEAA@XZ ENDP			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Decrement@CComSingleThreadModel@ATL@@SAKPEAJ@Z
_TEXT	SEGMENT
p$ = 16
?Decrement@CComSingleThreadModel@ATL@@SAKPEAJ@Z PROC	; ATL::CComSingleThreadModel::Decrement, COMDAT

; 443  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 444  : 		return --(*p);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR p$[rsp]
  0000b	8b 00		 mov	 eax, DWORD PTR [rax]
  0000d	ff c8		 dec	 eax
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR p$[rsp]
  00014	89 01		 mov	 DWORD PTR [rcx], eax
  00016	48 8b 44 24 10	 mov	 rax, QWORD PTR p$[rsp]
  0001b	8b 00		 mov	 eax, DWORD PTR [rax]

; 445  : 	}

  0001d	5f		 pop	 rdi
  0001e	c3		 ret	 0
?Decrement@CComSingleThreadModel@ATL@@SAKPEAJ@Z ENDP	; ATL::CComSingleThreadModel::Decrement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Increment@CComSingleThreadModel@ATL@@SAKPEAJ@Z
_TEXT	SEGMENT
p$ = 16
?Increment@CComSingleThreadModel@ATL@@SAKPEAJ@Z PROC	; ATL::CComSingleThreadModel::Increment, COMDAT

; 439  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 440  : 		return ++(*p);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR p$[rsp]
  0000b	8b 00		 mov	 eax, DWORD PTR [rax]
  0000d	ff c0		 inc	 eax
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR p$[rsp]
  00014	89 01		 mov	 DWORD PTR [rcx], eax
  00016	48 8b 44 24 10	 mov	 rax, QWORD PTR p$[rsp]
  0001b	8b 00		 mov	 eax, DWORD PTR [rax]

; 441  : 	}

  0001d	5f		 pop	 rdi
  0001e	c3		 ret	 0
?Increment@CComSingleThreadModel@ATL@@SAKPEAJ@Z ENDP	; ATL::CComSingleThreadModel::Increment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1CComBSTR@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CComBSTR@ATL@@QEAA@XZ PROC				; ATL::CComBSTR::~CComBSTR, COMDAT

; 1673 : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1674 :     ::SysFreeString(m_str);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00026	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SysFreeString

; 1675 : }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1CComBSTR@ATL@@QEAA@XZ ENDP				; ATL::CComBSTR::~CComBSTR
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ PROC		; ATL::CComPtr<IUnknown>::~CComPtr<IUnknown>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIUnknown@@@ATL@@QEAA@XZ ; ATL::CComPtrBase<IUnknown>::~CComPtrBase<IUnknown>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ ENDP		; ATL::CComPtr<IUnknown>::~CComPtr<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??4?$CComPtr@UIUnknown@@@ATL@@QEAAPEAUIUnknown@@PEAU2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
lp$ = 72
??4?$CComPtr@UIUnknown@@@ATL@@QEAAPEAUIUnknown@@PEAU2@@Z PROC ; ATL::CComPtr<IUnknown>::operator=, COMDAT

; 328  :     {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 329  :         if(this->p!=lp)

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR lp$[rsp]
  0002d	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00030	74 26		 je	 SHORT $LN2@operator

; 330  :         {
; 331  :             CComPtr(lp).Swap(*this);

  00032	48 8b 54 24 48	 mov	 rdx, QWORD PTR lp$[rsp]
  00037	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0003c	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QEAA@PEAUIUnknown@@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
  00041	48 8b 54 24 40	 mov	 rdx, QWORD PTR this$[rsp]
  00046	48 8b c8	 mov	 rcx, rax
  00049	e8 00 00 00 00	 call	 ?Swap@?$CComPtrBase@UIUnknown@@@ATL@@IEAAXAEAV12@@Z ; ATL::CComPtrBase<IUnknown>::Swap
  0004e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00053	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ
$LN2@operator:

; 332  :         }
; 333  :         return *this;

  00058	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIUnknown@@@ATL@@QEBAPEAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *

; 334  :     }

  00062	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00066	5f		 pop	 rdi
  00067	c3		 ret	 0
??4?$CComPtr@UIUnknown@@@ATL@@QEAAPEAUIUnknown@@PEAU2@@Z ENDP ; ATL::CComPtr<IUnknown>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
lp$ = 56
??0?$CComPtr@UIUnknown@@@ATL@@QEAA@AEBV01@@Z PROC	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>, COMDAT

; 325  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 324  :         CComPtrBase<T>(lp.p)

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR lp$[rsp]
  00028	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0002b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00030	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIUnknown@@@ATL@@IEAA@PEAUIUnknown@@@Z ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>

; 326  :     }

  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??0?$CComPtr@UIUnknown@@@ATL@@QEAA@AEBV01@@Z ENDP	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QEAA@PEAUIUnknown@@@Z
_TEXT	SEGMENT
this$ = 48
lp$ = 56
??0?$CComPtr@UIUnknown@@@ATL@@QEAA@PEAUIUnknown@@@Z PROC ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>, COMDAT

; 321  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 320  :         CComPtrBase<T>(lp)

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR lp$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIUnknown@@@ATL@@IEAA@PEAUIUnknown@@@Z ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>

; 322  :     }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CComPtr@UIUnknown@@@ATL@@QEAA@PEAUIUnknown@@@Z ENDP ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ PROC		; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>, COMDAT

; 316  :     CComPtr() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 317  :     {

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIUnknown@@@ATL@@IEAA@XZ ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>

; 318  :     }

  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$CComPtr@UIUnknown@@@ATL@@QEAA@XZ ENDP		; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UIUnknown@@@ATL@@QEBAPEAUIUnknown@@XZ
_TEXT	SEGMENT
this$ = 16
??B?$CComPtrBase@UIUnknown@@@ATL@@QEBAPEAUIUnknown@@XZ PROC ; ATL::CComPtrBase<IUnknown>::operator IUnknown *, COMDAT

; 187  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 188  :         return p;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 189  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
??B?$CComPtrBase@UIUnknown@@@ATL@@QEBAPEAUIUnknown@@XZ ENDP ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIUnknown@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComPtrBase@UIUnknown@@@ATL@@QEAA@XZ PROC		; ATL::CComPtrBase<IUnknown>::~CComPtrBase<IUnknown>, COMDAT

; 182  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 183  :         if (p)

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@CComPtrBas

; 184  :             p->Release();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	ff 50 10	 call	 QWORD PTR [rax+16]
$LN2@CComPtrBas:

; 185  :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$CComPtrBase@UIUnknown@@@ATL@@QEAA@XZ ENDP		; ATL::CComPtrBase<IUnknown>::~CComPtrBase<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?Swap@?$CComPtrBase@UIUnknown@@@ATL@@IEAAXAEAV12@@Z
_TEXT	SEGMENT
pTemp$ = 0
this$ = 32
other$ = 40
?Swap@?$CComPtrBase@UIUnknown@@@ATL@@IEAAXAEAV12@@Z PROC ; ATL::CComPtrBase<IUnknown>::Swap, COMDAT

; 174  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 175  :         T* pTemp = p;

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR pTemp$[rsp], rax

; 176  :         p = other.p;

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR other$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 177  :         other.p = pTemp;

  0003f	48 8b 44 24 28	 mov	 rax, QWORD PTR other$[rsp]
  00044	48 8b 0c 24	 mov	 rcx, QWORD PTR pTemp$[rsp]
  00048	48 89 08	 mov	 QWORD PTR [rax], rcx

; 178  :     }

  0004b	48 83 c4 10	 add	 rsp, 16
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
?Swap@?$CComPtrBase@UIUnknown@@@ATL@@IEAAXAEAV12@@Z ENDP ; ATL::CComPtrBase<IUnknown>::Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIUnknown@@@ATL@@IEAA@PEAUIUnknown@@@Z
_TEXT	SEGMENT
this$ = 48
lp$ = 56
??0?$CComPtrBase@UIUnknown@@@ATL@@IEAA@PEAUIUnknown@@@Z PROC ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>, COMDAT

; 167  :     CComPtrBase(_Inout_opt_ T* lp) throw()

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 168  :     {
; 169  :         p = lp;

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR lp$[rsp]
  0002d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 170  :         if (p != NULL)

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00039	74 16		 je	 SHORT $LN2@CComPtrBas

; 171  :             p->AddRef();

  0003b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00043	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00048	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004e	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@CComPtrBas:

; 172  :     }

  00051	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00056	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??0?$CComPtrBase@UIUnknown@@@ATL@@IEAA@PEAUIUnknown@@@Z ENDP ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIUnknown@@@ATL@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$CComPtrBase@UIUnknown@@@ATL@@IEAA@XZ PROC		; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>, COMDAT

; 163  :     CComPtrBase() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 164  :     {
; 165  :         p = NULL;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 166  :     }

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0?$CComPtrBase@UIUnknown@@@ATL@@IEAA@XZ ENDP		; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIDispatch@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComPtr@UIDispatch@@@ATL@@QEAA@XZ PROC		; ATL::CComPtr<IDispatch>::~CComPtr<IDispatch>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIDispatch@@@ATL@@QEAA@XZ ; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CComPtr@UIDispatch@@@ATL@@QEAA@XZ ENDP		; ATL::CComPtr<IDispatch>::~CComPtr<IDispatch>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIDispatch@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CComPtr@UIDispatch@@@ATL@@QEAA@XZ PROC		; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>, COMDAT

; 373  :     CComPtr() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 374  :     {

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIDispatch@@@ATL@@IEAA@XZ ; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>

; 375  :     }

  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$CComPtr@UIDispatch@@@ATL@@QEAA@XZ ENDP		; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIDispatch@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CComPtrBase@UIDispatch@@@ATL@@QEAA@XZ PROC		; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>, COMDAT

; 182  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 183  :         if (p)

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@CComPtrBas

; 184  :             p->Release();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	ff 50 10	 call	 QWORD PTR [rax+16]
$LN2@CComPtrBas:

; 185  :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$CComPtrBase@UIDispatch@@@ATL@@QEAA@XZ ENDP		; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIDispatch@@@ATL@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$CComPtrBase@UIDispatch@@@ATL@@IEAA@XZ PROC		; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>, COMDAT

; 163  :     CComPtrBase() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 164  :     {
; 165  :         p = NULL;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 166  :     }

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0?$CComPtrBase@UIDispatch@@@ATL@@IEAA@XZ ENDP		; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IQuickActivate@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IQuickActivate@@QEAA@XZ PROC				; IQuickActivate::IQuickActivate, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IUnknown@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IQuickActivate@@QEAA@XZ ENDP				; IQuickActivate::IQuickActivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IViewObjectEx@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IViewObjectEx@@QEAA@XZ PROC				; IViewObjectEx::IViewObjectEx, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IViewObject2@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IViewObjectEx@@QEAA@XZ ENDP				; IViewObjectEx::IViewObjectEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IOleInPlaceObjectWindowless@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IOleInPlaceObjectWindowless@@QEAA@XZ PROC		; IOleInPlaceObjectWindowless::IOleInPlaceObjectWindowless, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IOleInPlaceObject@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IOleInPlaceObjectWindowless@@QEAA@XZ ENDP		; IOleInPlaceObjectWindowless::IOleInPlaceObjectWindowless
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IPersistStreamInit@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IPersistStreamInit@@QEAA@XZ PROC			; IPersistStreamInit::IPersistStreamInit, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IPersist@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IPersistStreamInit@@QEAA@XZ ENDP			; IPersistStreamInit::IPersistStreamInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0ISpecifyPropertyPages@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0ISpecifyPropertyPages@@QEAA@XZ PROC			; ISpecifyPropertyPages::ISpecifyPropertyPages, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IUnknown@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0ISpecifyPropertyPages@@QEAA@XZ ENDP			; ISpecifyPropertyPages::ISpecifyPropertyPages
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IOleControl@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IOleControl@@QEAA@XZ PROC				; IOleControl::IOleControl, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IUnknown@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IOleControl@@QEAA@XZ ENDP				; IOleControl::IOleControl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IProvideClassInfo2@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IProvideClassInfo2@@QEAA@XZ PROC			; IProvideClassInfo2::IProvideClassInfo2, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IProvideClassInfo@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IProvideClassInfo2@@QEAA@XZ ENDP			; IProvideClassInfo2::IProvideClassInfo2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IProvideClassInfo@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IProvideClassInfo@@QEAA@XZ PROC			; IProvideClassInfo::IProvideClassInfo, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IUnknown@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IProvideClassInfo@@QEAA@XZ ENDP			; IProvideClassInfo::IProvideClassInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IConnectionPointContainer@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IConnectionPointContainer@@QEAA@XZ PROC		; IConnectionPointContainer::IConnectionPointContainer, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IUnknown@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IConnectionPointContainer@@QEAA@XZ ENDP		; IConnectionPointContainer::IConnectionPointContainer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IEnumConnections@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IEnumConnections@@QEAA@XZ PROC			; IEnumConnections::IEnumConnections, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IUnknown@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IEnumConnections@@QEAA@XZ ENDP			; IEnumConnections::IEnumConnections
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ
_TEXT	SEGMENT
this$ = 16
?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ PROC ; ATL::CAtlBaseModule::GetModuleInstance, COMDAT

; 289  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 290  : 		return m_hInst;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 291  : 	}

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ENDP ; ATL::CAtlBaseModule::GetModuleInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ?Term@CComCriticalSection@ATL@@QEAAJXZ
_TEXT	SEGMENT
this$ = 48
?Term@CComCriticalSection@ATL@@QEAAJXZ PROC		; ATL::CComCriticalSection::Term, COMDAT

; 154  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 155  : 		DeleteCriticalSection(&m_sec);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DeleteCriticalSection

; 156  : 		return S_OK;

  0002c	33 c0		 xor	 eax, eax

; 157  : 	}

  0002e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00032	5f		 pop	 rdi
  00033	c3		 ret	 0
?Term@CComCriticalSection@ATL@@QEAAJXZ ENDP		; ATL::CComCriticalSection::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ?Init@CComCriticalSection@ATL@@QEAAJXZ
_TEXT	SEGMENT
hRes$ = 32
this$ = 64
?Init@CComCriticalSection@ATL@@QEAAJXZ PROC		; ATL::CComCriticalSection::Init, COMDAT

; 143  : 	{

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 144  : 		HRESULT hRes = S_OK;

  0001e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR hRes$[rsp], 0

; 145  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

  00026	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002b	45 33 c0	 xor	 r8d, r8d
  0002e	33 d2		 xor	 edx, edx
  00030	48 8b c8	 mov	 rcx, rax
  00033	e8 00 00 00 00	 call	 ?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
  00038	85 c0		 test	 eax, eax
  0003a	75 11		 jne	 SHORT $LN2@Init

; 146  : 		{
; 147  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

  0003c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError
  00042	8b c8		 mov	 ecx, eax
  00044	e8 00 00 00 00	 call	 HRESULT_FROM_WIN32
  00049	89 44 24 20	 mov	 DWORD PTR hRes$[rsp], eax
$LN2@Init:

; 148  : 		}
; 149  : 
; 150  : 		return hRes;

  0004d	8b 44 24 20	 mov	 eax, DWORD PTR hRes$[rsp]

; 151  : 	}

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?Init@CComCriticalSection@ATL@@QEAAJXZ ENDP		; ATL::CComCriticalSection::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ??1CComCriticalSection@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1CComCriticalSection@ATL@@QEAA@XZ PROC		; ATL::CComCriticalSection::~CComCriticalSection, COMDAT

; 129  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 130  : 	}

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??1CComCriticalSection@ATL@@QEAA@XZ ENDP		; ATL::CComCriticalSection::~CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ??0CComCriticalSection@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0CComCriticalSection@ATL@@QEAA@XZ PROC		; ATL::CComCriticalSection::CComCriticalSection, COMDAT

; 123  : 	CComCriticalSection() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 124  : 	{
; 125  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	41 b8 28 00 00
	00		 mov	 r8d, 40			; 00000028H
  00029	33 d2		 xor	 edx, edx
  0002b	48 8b c8	 mov	 rcx, rax
  0002e	e8 00 00 00 00	 call	 memset

; 126  : 	}

  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
??0CComCriticalSection@ATL@@QEAA@XZ ENDP		; ATL::CComCriticalSection::CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwinverapi.h
;	COMDAT ?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z
_TEXT	SEGMENT
lpCriticalSection$ = 48
dwSpinCount$ = 56
Flags$ = 64
?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z PROC ; ATL::_AtlInitializeCriticalSectionEx, COMDAT

; 727  : {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 728  : #if (NTDDI_VERSION >= NTDDI_VISTA) && !defined(_USING_V110_SDK71_) && !defined(_ATL_XP_TARGETING)
; 729  : 	// InitializeCriticalSectionEx is available in Vista or later, desktop or store apps
; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  00027	44 8b 44 24 40	 mov	 r8d, DWORD PTR Flags$[rsp]
  0002c	8b 54 24 38	 mov	 edx, DWORD PTR dwSpinCount$[rsp]
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR lpCriticalSection$[rsp]
  00035	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_InitializeCriticalSectionEx

; 731  : #else
; 732  : 	UNREFERENCED_PARAMETER(Flags);
; 733  : 
; 734  : 	// ...otherwise fall back to using InitializeCriticalSectionAndSpinCount.
; 735  : 	return ::InitializeCriticalSectionAndSpinCount(lpCriticalSection, dwSpinCount);
; 736  : #endif
; 737  : }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z ENDP ; ATL::_AtlInitializeCriticalSectionEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlexcept.h
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT
dwExceptionCode$ = 48
dwExceptionFlags$ = 56
?_AtlRaiseException@ATL@@YAXKK@Z PROC			; ATL::_AtlRaiseException, COMDAT

; 30   : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	57		 push	 rdi
  00009	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 08 00 00 00	 mov	 ecx, 8
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	8b 4c 24 30	 mov	 ecx, DWORD PTR [rsp+48]

; 31   : 	RaiseException( dwExceptionCode, dwExceptionFlags, 0, NULL );

  00020	45 33 c9	 xor	 r9d, r9d
  00023	45 33 c0	 xor	 r8d, r8d
  00026	8b 54 24 38	 mov	 edx, DWORD PTR dwExceptionFlags$[rsp]
  0002a	8b 4c 24 30	 mov	 ecx, DWORD PTR dwExceptionCode$[rsp]
  0002e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RaiseException

; 32   : }

  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
?_AtlRaiseException@ATL@@YAXKK@Z ENDP			; ATL::_AtlRaiseException
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ
_TEXT	SEGMENT
ple$ = 52
ptr$ = 88
this$ = 128
dwCategory$ = 136
nLevel$ = 144
pszFmt$ = 152
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ PROC	; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 436  : 	{

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 1c 00 00 00	 mov	 ecx, 28
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]

; 437  : 		CPreserveLastError ple;

  0002f	48 8d 4c 24 34	 lea	 rcx, QWORD PTR ple$[rsp]
  00034	e8 00 00 00 00	 call	 ??0CPreserveLastError@ATL@@QEAA@XZ ; ATL::CPreserveLastError::CPreserveLastError

; 438  : 		va_list ptr; va_start(ptr, pszFmt);

  00039	48 8d 84 24 a0
	00 00 00	 lea	 rax, QWORD PTR pszFmt$[rsp+8]
  00041	48 89 44 24 58	 mov	 QWORD PTR ptr$[rsp], rax

; 439  : 		ATL::CTrace::TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

  00046	48 8b 44 24 58	 mov	 rax, QWORD PTR ptr$[rsp]
  0004b	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00050	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR pszFmt$[rsp]
  00058	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0005d	44 8b 8c 24 90
	00 00 00	 mov	 r9d, DWORD PTR nLevel$[rsp]
  00065	44 8b 84 24 88
	00 00 00	 mov	 r8d, DWORD PTR dwCategory$[rsp]
  0006d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00075	8b 50 08	 mov	 edx, DWORD PTR [rax+8]
  00078	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00080	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00083	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z ; ATL::CTrace::TraceV

; 440  : 		va_end(ptr);

  00088	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR ptr$[rsp], 0

; 441  : 	}

  00091	48 8d 4c 24 34	 lea	 rcx, QWORD PTR ple$[rsp]
  00096	e8 00 00 00 00	 call	 ??1CPreserveLastError@ATL@@QEAA@XZ ; ATL::CPreserveLastError::~CPreserveLastError
  0009b	48 8b cc	 mov	 rcx, rsp
  0009e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcFrameData
  000a5	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000aa	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000ae	5f		 pop	 rdi
  000af	c3		 ret	 0
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ ENDP	; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z
_TEXT	SEGMENT
this$ = 16
pszFileName$ = 24
nLineNo$ = 32
??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z PROC		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT

; 411  : 	{

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 410  : 		: m_pszFileName(pszFileName), m_nLineNo(nLineNo)

  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR pszFileName$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	8b 4c 24 20	 mov	 ecx, DWORD PTR nLineNo$[rsp]
  00026	89 48 08	 mov	 DWORD PTR [rax+8], ecx

; 412  : 	}

  00029	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002e	5f		 pop	 rdi
  0002f	c3		 ret	 0
??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??1CPreserveLastError@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CPreserveLastError@ATL@@QEAA@XZ PROC			; ATL::CPreserveLastError::~CPreserveLastError, COMDAT

; 396  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 397  : 		SetLastError(m_dwLastError);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	8b 08		 mov	 ecx, DWORD PTR [rax]
  00025	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetLastError

; 398  : 	}

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
??1CPreserveLastError@ATL@@QEAA@XZ ENDP			; ATL::CPreserveLastError::~CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0CPreserveLastError@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0CPreserveLastError@ATL@@QEAA@XZ PROC			; ATL::CPreserveLastError::CPreserveLastError, COMDAT

; 390  : 	CPreserveLastError()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 391  : 	{
; 392  : 		m_dwLastError = GetLastError();

  0001e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00029	89 01		 mov	 DWORD PTR [rcx], eax

; 393  : 	}

  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??0CPreserveLastError@ATL@@QEAA@XZ ENDP			; ATL::CPreserveLastError::CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
_TEXT	SEGMENT
nBytes$ = 40
this$ = 80
nElements$ = 88
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z PROC ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate, COMDAT

; 455  : 	{

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 456  : 		size_t nBytes=0;

  00023	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR nBytes$[rsp], 0

; 457  : 		if(FAILED(::ATL::AtlMultiply(&nBytes, nElements, sizeof(T))))

  0002c	41 b8 02 00 00
	00		 mov	 r8d, 2
  00032	48 8b 54 24 58	 mov	 rdx, QWORD PTR nElements$[rsp]
  00037	48 8d 4c 24 28	 lea	 rcx, QWORD PTR nBytes$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z ; ATL::AtlMultiply<unsigned __int64>
  00041	85 c0		 test	 eax, eax
  00043	7d 04		 jge	 SHORT $LN2@Allocate

; 458  : 		{
; 459  : 			return false;

  00045	32 c0		 xor	 al, al
  00047	eb 0f		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 460  : 		}
; 461  : 		return this->AllocateBytes(nBytes);

  00049	48 8b 54 24 28	 mov	 rdx, QWORD PTR nBytes$[rsp]
  0004e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00053	e8 00 00 00 00	 call	 ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
$LN1@Allocate:

; 462  : 	}

  00058	48 8b f8	 mov	 rdi, rax
  0005b	48 8b cc	 mov	 rcx, rsp
  0005e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcFrameData
  00065	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006a	48 8b c7	 mov	 rax, rdi
  0006d	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00071	5f		 pop	 rdi
  00072	c3		 ret	 0
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ENDP ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT

; 434  : 	CHeapPtr() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 435  : 	{

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>

; 436  : 	}

  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free, COMDAT

; 407  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 408  : 		Allocator::Free(m_pData);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00026	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPEAX@Z ; ATL::CCRTAllocator::Free

; 409  : 		m_pData = NULL;

  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 410  : 	}

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
_TEXT	SEGMENT
this$ = 64
nBytes$ = 72
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes, COMDAT

; 381  : 	{

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 382  : 		ATLASSERT(m_pData == NULL);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0002c	74 3a		 je	 SHORT $LN4@AllocateBy
  0002e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  00035	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0003a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00041	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00046	45 33 c9	 xor	 r9d, r9d
  00049	41 b8 7e 01 00
	00		 mov	 r8d, 382		; 0000017eH
  0004f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OE@EFJOHFCD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00056	b9 02 00 00 00	 mov	 ecx, 2
  0005b	e8 00 00 00 00	 call	 _CrtDbgReportW
  00060	83 f8 01	 cmp	 eax, 1
  00063	75 03		 jne	 SHORT $LN4@AllocateBy
  00065	cc		 int	 3
  00066	33 c0		 xor	 eax, eax
$LN4@AllocateBy:

; 383  : 		m_pData = static_cast<T*>(Allocator::Allocate(nBytes));

  00068	48 8b 4c 24 48	 mov	 rcx, QWORD PTR nBytes$[rsp]
  0006d	e8 00 00 00 00	 call	 ?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z ; ATL::CCRTAllocator::Allocate
  00072	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00077	48 89 01	 mov	 QWORD PTR [rcx], rax

; 384  : 		if (m_pData == NULL)

  0007a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0007f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00083	75 04		 jne	 SHORT $LN2@AllocateBy

; 385  : 			return false;

  00085	32 c0		 xor	 al, al
  00087	eb 02		 jmp	 SHORT $LN1@AllocateBy
$LN2@AllocateBy:

; 386  : 
; 387  : 		return true;

  00089	b0 01		 mov	 al, 1
$LN1@AllocateBy:

; 388  : 	}

  0008b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ
_TEXT	SEGMENT
this$ = 16
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *, COMDAT

; 363  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 364  : 		return m_pData;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 365  : 	}

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT

; 349  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 350  : 		Free();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free

; 351  : 	}

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT

; 336  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 335  : 		m_pData(NULL)

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 337  : 	}

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z
_TEXT	SEGMENT
pszCategory$ = 64
nCategory$ = 72
?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 330  : 		if (pszCategory == nullptr)

  00022	48 83 7c 24 40
	00		 cmp	 QWORD PTR pszCategory$[rsp], 0
  00028	75 05		 jne	 SHORT $LN2@RegisterCa

; 331  : 		{
; 332  : 			return;

  0002a	e9 9f 00 00 00	 jmp	 $LN1@RegisterCa
$LN2@RegisterCa:

; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  0002f	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 32 ; ATL::CTrace::m_nLastCategory, 00000020H
  00036	72 42		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  00038	33 c0		 xor	 eax, eax
  0003a	85 c0		 test	 eax, eax
  0003c	75 3a		 jne	 SHORT $LN5@RegisterCa
  0003e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
  00045	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0004a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00051	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00056	45 33 c9	 xor	 r9d, r9d
  00059	41 b8 51 01 00
	00		 mov	 r8d, 337		; 00000151H
  0005f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OE@DGDFBHKA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00066	b9 02 00 00 00	 mov	 ecx, 2
  0006b	e8 00 00 00 00	 call	 _CrtDbgReportW
  00070	83 f8 01	 cmp	 eax, 1
  00073	75 03		 jne	 SHORT $LN5@RegisterCa
  00075	cc		 int	 3
  00076	33 c0		 xor	 eax, eax
$LN5@RegisterCa:

; 338  : 			return;

  00078	eb 54		 jmp	 SHORT $LN1@RegisterCa
$LN3@RegisterCa:

; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  0007a	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  00080	48 69 c0 04 01
	00 00		 imul	 rax, rax, 260		; 00000104H
  00087	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A ; ATL::CTrace::m_nMap
  0008e	8b 54 24 48	 mov	 edx, DWORD PTR nCategory$[rsp]
  00092	89 14 01	 mov	 DWORD PTR [rcx+rax], edx

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);

  00095	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  0009b	48 69 c0 04 01
	00 00		 imul	 rax, rax, 260		; 00000104H
  000a2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A ; ATL::CTrace::m_nMap
  000a9	48 8d 44 01 04	 lea	 rax, QWORD PTR [rcx+rax+4]
  000ae	4c 8b 44 24 40	 mov	 r8, QWORD PTR pszCategory$[rsp]
  000b3	ba 7f 00 00 00	 mov	 edx, 127		; 0000007fH
  000b8	48 8b c8	 mov	 rcx, rax
  000bb	e8 00 00 00 00	 call	 wcscpy_s

; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	
; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);
; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);
; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  000c0	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  000c6	ff c0		 inc	 eax
  000c8	89 05 00 00 00
	00		 mov	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  000ce	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z
_TEXT	SEGMENT
cchNeeded$ = 64
wszBuf$ = 88
vsnwprintf_result$ = 100
tv129 = 104
tv132 = 112
tv139 = 120
pszFileName$ = 144
nLine$ = 152
dwCategory$ = 160
nLevel$ = 168
pwszFmt$ = 176
args$ = 184
?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 281  : 	{

$LN6:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0001b	48 8b fc	 mov	 rdi, rsp
  0001e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 282  : #if _MSC_VER < 1900
; 283  : 		int cchNeeded = _vscwprintf(pwszFmt, args);
; 284  : #else
; 285  : 		// Explicitly request the legacy wide format specifiers mode from the CRT,
; 286  : 		// for compatibility with previous versions.  While the CRT supports two
; 287  : 		// modes, the ATL and MFC functions that accept format strings only support
; 288  : 		// legacy mode format strings.
; 289  : 		int cchNeeded = __stdio_common_vswprintf(

  00032	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 83 c8 02	 or	 rax, 2
  0003e	48 83 c8 04	 or	 rax, 4
  00042	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  0004a	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0004f	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00058	4c 8b 8c 24 b0
	00 00 00	 mov	 r9, QWORD PTR pwszFmt$[rsp]
  00060	45 33 c0	 xor	 r8d, r8d
  00063	33 d2		 xor	 edx, edx
  00065	48 8b c8	 mov	 rcx, rax
  00068	e8 00 00 00 00	 call	 __stdio_common_vswprintf
  0006d	89 44 24 40	 mov	 DWORD PTR cchNeeded$[rsp], eax

; 290  : 			_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS |
; 291  : 			_CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR |
; 292  : 			_CRT_INTERNAL_PRINTF_LEGACY_WIDE_SPECIFIERS,
; 293  : 			NULL, 0, pwszFmt, NULL, args);
; 294  : #endif
; 295  : 		if (cchNeeded < 0)

  00071	83 7c 24 40 00	 cmp	 DWORD PTR cchNeeded$[rsp], 0
  00076	7d 05		 jge	 SHORT $LN2@TraceV

; 296  : 		{
; 297  : 			return;

  00078	e9 18 01 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:

; 298  : 		}
; 299  : 
; 300  : 		CHeapPtr<wchar_t> wszBuf;

  0007d	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00082	e8 00 00 00 00	 call	 ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>

; 301  : 		if (!wszBuf.Allocate(cchNeeded + 1))

  00087	8b 44 24 40	 mov	 eax, DWORD PTR cchNeeded$[rsp]
  0008b	ff c0		 inc	 eax
  0008d	48 98		 cdqe
  0008f	48 8b d0	 mov	 rdx, rax
  00092	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00097	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  0009c	0f b6 c0	 movzx	 eax, al
  0009f	85 c0		 test	 eax, eax
  000a1	75 0f		 jne	 SHORT $LN3@TraceV

; 302  : 		{
; 303  : 			return;

  000a3	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  000a8	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  000ad	e9 e3 00 00 00	 jmp	 $LN1@TraceV
$LN3@TraceV:

; 304  : 		}
; 305  : 
; 306  : 		wszBuf[0] = '\0';

  000b2	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  000b7	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  000bc	b9 02 00 00 00	 mov	 ecx, 2
  000c1	48 6b c9 00	 imul	 rcx, rcx, 0
  000c5	33 d2		 xor	 edx, edx
  000c7	66 89 14 08	 mov	 WORD PTR [rax+rcx], dx

; 307  : 
; 308  : #if _MSC_VER < 1900
; 309  : 		if (_vsnwprintf_s(wszBuf, cchNeeded + 1, cchNeeded, pwszFmt, args) == -1)
; 310  : #else
; 311  : 		// Explicitly request the legacy wide format specifiers mode from the CRT,
; 312  : 		// for compatibility with previous versions.  While the CRT supports two
; 313  : 		// modes, the ATL and MFC functions that accept format strings only support
; 314  : 		// legacy mode format strings.
; 315  : 		int const vsnwprintf_result = __stdio_common_vsnwprintf_s(

  000cb	48 63 44 24 40	 movsxd	 rax, DWORD PTR cchNeeded$[rsp]
  000d0	48 89 44 24 68	 mov	 QWORD PTR tv129[rsp], rax
  000d5	8b 4c 24 40	 mov	 ecx, DWORD PTR cchNeeded$[rsp]
  000d9	ff c1		 inc	 ecx
  000db	48 63 c9	 movsxd	 rcx, ecx
  000de	48 89 4c 24 70	 mov	 QWORD PTR tv132[rsp], rcx
  000e3	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  000e8	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  000ed	48 89 44 24 78	 mov	 QWORD PTR tv139[rsp], rax
  000f2	e8 00 00 00 00	 call	 __local_stdio_printf_options
  000f7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000fa	48 83 c8 04	 or	 rax, 4
  000fe	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  00106	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  0010b	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  00114	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR pwszFmt$[rsp]
  0011c	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00121	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv129[rsp]
  00126	4c 8b c9	 mov	 r9, rcx
  00129	48 8b 4c 24 70	 mov	 rcx, QWORD PTR tv132[rsp]
  0012e	4c 8b c1	 mov	 r8, rcx
  00131	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv139[rsp]
  00136	48 8b d1	 mov	 rdx, rcx
  00139	48 8b c8	 mov	 rcx, rax
  0013c	e8 00 00 00 00	 call	 __stdio_common_vsnwprintf_s
  00141	89 44 24 64	 mov	 DWORD PTR vsnwprintf_result$[rsp], eax

; 316  : 			_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS |
; 317  : 			_CRT_INTERNAL_PRINTF_LEGACY_WIDE_SPECIFIERS,
; 318  : 			wszBuf, cchNeeded + 1, cchNeeded, pwszFmt, NULL, args);
; 319  : 		if (vsnwprintf_result < 0)

  00145	83 7c 24 64 00	 cmp	 DWORD PTR vsnwprintf_result$[rsp], 0
  0014a	7d 0c		 jge	 SHORT $LN4@TraceV

; 320  : #endif
; 321  : 		{
; 322  : 			return;

  0014c	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00151	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  00156	eb 3d		 jmp	 SHORT $LN1@TraceV
$LN4@TraceV:

; 323  : 		}
; 324  : 
; 325  : 		TraceV(pszFileName, nLine, dwCategory, nLevel, wszBuf);

  00158	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  0015d	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00162	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00167	44 8b 8c 24 a8
	00 00 00	 mov	 r9d, DWORD PTR nLevel$[rsp]
  0016f	44 8b 84 24 a0
	00 00 00	 mov	 r8d, DWORD PTR dwCategory$[rsp]
  00177	8b 94 24 98 00
	00 00		 mov	 edx, DWORD PTR nLine$[rsp]
  0017e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR pszFileName$[rsp]
  00186	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z ; ATL::CTrace::TraceV

; 326  : 	}

  0018b	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00190	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
$LN1@TraceV:
  00195	48 8b cc	 mov	 rcx, rsp
  00198	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcFrameData
  0019f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001a4	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  001ab	5f		 pop	 rdi
  001ac	c3		 ret	 0
?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z
_TEXT	SEGMENT
wszCategory$ = 64
categoryLength$ = 2116
pwszCategoryName$ = 2120
chCount$ = 2128
wszBuf$ = 2152
fileName$ = 2192
tv145 = 2736
__$ArrayPad$ = 2744
pszFileName$ = 2768
nLine$ = 2776
dwCategory$ = 2784
nLevel$ = 2792
pwszMessage$ = 2800
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 150  : 	{

$LN12:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 81 ec c0 0a
	00 00		 sub	 rsp, 2752		; 00000ac0H
  0001b	48 8b fc	 mov	 rdi, rsp
  0001e	b9 b0 02 00 00	 mov	 ecx, 688		; 000002b0H
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	48 8b 8c 24 d0
	0a 00 00	 mov	 rcx, QWORD PTR [rsp+2768]
  00032	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00039	48 33 c4	 xor	 rax, rsp
  0003c	48 89 84 24 b8
	0a 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 151  : 		if (CTrace::m_nLevel == CTrace::DisableTracing || CTrace::m_nLevel < nLevel || (CTrace::m_nCategory & dwCategory) == 0)

  00044	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?m_nLevel@CTrace@ATL@@1IA, -1 ; ATL::CTrace::m_nLevel, ffffffffH
  0004b	74 24		 je	 SHORT $LN3@TraceV
  0004d	8b 84 24 e8 0a
	00 00		 mov	 eax, DWORD PTR nLevel$[rsp]
  00054	39 05 00 00 00
	00		 cmp	 DWORD PTR ?m_nLevel@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLevel
  0005a	72 15		 jb	 SHORT $LN3@TraceV
  0005c	8b 84 24 e0 0a
	00 00		 mov	 eax, DWORD PTR dwCategory$[rsp]
  00063	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nCategory
  00069	23 c8		 and	 ecx, eax
  0006b	8b c1		 mov	 eax, ecx
  0006d	85 c0		 test	 eax, eax
  0006f	75 05		 jne	 SHORT $LN2@TraceV
$LN3@TraceV:

; 152  : 		{
; 153  : 			return;

  00071	e9 0c 02 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:

; 154  : 		}
; 155  : 
; 156  : 		wchar_t wszCategory[TraceBufferSize] = {'\0'};

  00076	48 8d 44 24 40	 lea	 rax, QWORD PTR wszCategory$[rsp]
  0007b	48 8b f8	 mov	 rdi, rax
  0007e	33 c0		 xor	 eax, eax
  00080	b9 00 08 00 00	 mov	 ecx, 2048		; 00000800H
  00085	f3 aa		 rep stosb

; 157  : 		int categoryLength = 0;

  00087	c7 84 24 44 08
	00 00 00 00 00
	00		 mov	 DWORD PTR categoryLength$[rsp], 0

; 158  : 		const wchar_t *const pwszCategoryName = GetCategoryName(dwCategory);

  00092	8b 8c 24 e0 0a
	00 00		 mov	 ecx, DWORD PTR dwCategory$[rsp]
  00099	e8 00 00 00 00	 call	 ?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z ; ATL::CTrace::GetCategoryName
  0009e	48 89 84 24 48
	08 00 00	 mov	 QWORD PTR pwszCategoryName$[rsp], rax

; 159  : 		if (pwszCategoryName != nullptr)

  000a6	48 83 bc 24 48
	08 00 00 00	 cmp	 QWORD PTR pwszCategoryName$[rsp], 0
  000af	74 36		 je	 SHORT $LN4@TraceV

; 160  : 		{
; 161  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%ls - ", pwszCategoryName)) == -1)

  000b1	4c 8b 8c 24 48
	08 00 00	 mov	 r9, QWORD PTR pwszCategoryName$[rsp]
  000b9	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
  000c0	ba 00 04 00 00	 mov	 edx, 1024		; 00000400H
  000c5	48 8d 4c 24 40	 lea	 rcx, QWORD PTR wszCategory$[rsp]
  000ca	e8 00 00 00 00	 call	 swprintf_s
  000cf	89 84 24 44 08
	00 00		 mov	 DWORD PTR categoryLength$[rsp], eax
  000d6	83 bc 24 44 08
	00 00 ff	 cmp	 DWORD PTR categoryLength$[rsp], -1
  000de	75 05		 jne	 SHORT $LN6@TraceV

; 162  : 			{
; 163  : 				return;

  000e0	e9 9d 01 00 00	 jmp	 $LN1@TraceV
$LN6@TraceV:

; 164  : 			}
; 165  : 		}

  000e5	eb 34		 jmp	 SHORT $LN5@TraceV
$LN4@TraceV:

; 166  : 		else
; 167  : 		{
; 168  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%u - ", dwCategory)) == -1)

  000e7	44 8b 8c 24 e0
	0a 00 00	 mov	 r9d, DWORD PTR dwCategory$[rsp]
  000ef	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
  000f6	ba 00 04 00 00	 mov	 edx, 1024		; 00000400H
  000fb	48 8d 4c 24 40	 lea	 rcx, QWORD PTR wszCategory$[rsp]
  00100	e8 00 00 00 00	 call	 swprintf_s
  00105	89 84 24 44 08
	00 00		 mov	 DWORD PTR categoryLength$[rsp], eax
  0010c	83 bc 24 44 08
	00 00 ff	 cmp	 DWORD PTR categoryLength$[rsp], -1
  00114	75 05		 jne	 SHORT $LN5@TraceV

; 169  : 			{
; 170  : 				return;

  00116	e9 67 01 00 00	 jmp	 $LN1@TraceV
$LN5@TraceV:

; 171  : 			}
; 172  : 		}
; 173  : 
; 174  : 		int chCount = (int)wcslen(pwszMessage) + categoryLength + 1;

  0011b	48 8b 8c 24 f0
	0a 00 00	 mov	 rcx, QWORD PTR pwszMessage$[rsp]
  00123	e8 00 00 00 00	 call	 wcslen
  00128	8b 8c 24 44 08
	00 00		 mov	 ecx, DWORD PTR categoryLength$[rsp]
  0012f	8d 44 08 01	 lea	 eax, DWORD PTR [rax+rcx+1]
  00133	89 84 24 50 08
	00 00		 mov	 DWORD PTR chCount$[rsp], eax

; 175  : 		CHeapPtr<wchar_t> wszBuf;

  0013a	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00142	e8 00 00 00 00	 call	 ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>

; 176  : 		if (!wszBuf.Allocate(chCount))

  00147	48 63 84 24 50
	08 00 00	 movsxd	 rax, DWORD PTR chCount$[rsp]
  0014f	48 8b d0	 mov	 rdx, rax
  00152	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  0015a	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  0015f	0f b6 c0	 movzx	 eax, al
  00162	85 c0		 test	 eax, eax
  00164	75 12		 jne	 SHORT $LN8@TraceV

; 177  : 		{
; 178  : 			return;

  00166	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  0016e	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  00173	e9 0a 01 00 00	 jmp	 $LN1@TraceV
$LN8@TraceV:

; 179  : 		}
; 180  : 
; 181  : 		wszBuf[0] = '\0';

  00178	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00180	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00185	b9 02 00 00 00	 mov	 ecx, 2
  0018a	48 6b c9 00	 imul	 rcx, rcx, 0
  0018e	33 d2		 xor	 edx, edx
  00190	66 89 14 08	 mov	 WORD PTR [rax+rcx], dx

; 182  : 
; 183  : 		if (swprintf_s(wszBuf, chCount, L"%ls%ls", wszCategory, pwszMessage) == -1)

  00194	48 63 84 24 50
	08 00 00	 movsxd	 rax, DWORD PTR chCount$[rsp]
  0019c	48 89 84 24 b0
	0a 00 00	 mov	 QWORD PTR tv145[rsp], rax
  001a4	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  001ac	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  001b1	48 8b 8c 24 f0
	0a 00 00	 mov	 rcx, QWORD PTR pwszMessage$[rsp]
  001b9	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001be	4c 8d 4c 24 40	 lea	 r9, QWORD PTR wszCategory$[rsp]
  001c3	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
  001ca	48 8b 8c 24 b0
	0a 00 00	 mov	 rcx, QWORD PTR tv145[rsp]
  001d2	48 8b d1	 mov	 rdx, rcx
  001d5	48 8b c8	 mov	 rcx, rax
  001d8	e8 00 00 00 00	 call	 swprintf_s
  001dd	83 f8 ff	 cmp	 eax, -1
  001e0	75 12		 jne	 SHORT $LN9@TraceV

; 184  : 		{
; 185  : 			return;

  001e2	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  001ea	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  001ef	e9 8e 00 00 00	 jmp	 $LN1@TraceV
$LN9@TraceV:

; 186  : 		}
; 187  : 
; 188  : 		wchar_t fileName[_MAX_PATH] = {'\0'};	

  001f4	48 8d 84 24 90
	08 00 00	 lea	 rax, QWORD PTR fileName$[rsp]
  001fc	48 8b f8	 mov	 rdi, rax
  001ff	33 c0		 xor	 eax, eax
  00201	b9 08 02 00 00	 mov	 ecx, 520		; 00000208H
  00206	f3 aa		 rep stosb

; 189  : #if _MSC_VER < 1900
; 190  : 		if (swprintf_s(fileName, _MAX_PATH, L"%S", pszFileName) == -1)
; 191  : #else
; 192  : 		if (swprintf_s(fileName, _MAX_PATH, L"%hs", pszFileName) == -1)

  00208	4c 8b 8c 24 d0
	0a 00 00	 mov	 r9, QWORD PTR pszFileName$[rsp]
  00210	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  00217	ba 04 01 00 00	 mov	 edx, 260		; 00000104H
  0021c	48 8d 8c 24 90
	08 00 00	 lea	 rcx, QWORD PTR fileName$[rsp]
  00224	e8 00 00 00 00	 call	 swprintf_s
  00229	83 f8 ff	 cmp	 eax, -1
  0022c	75 0f		 jne	 SHORT $LN10@TraceV

; 193  : #endif
; 194  : 		{
; 195  : 			return;

  0022e	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00236	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  0023b	eb 45		 jmp	 SHORT $LN1@TraceV
$LN10@TraceV:

; 196  : 		}
; 197  : 
; 198  : 		_CrtDbgReportW(_CRT_WARN, fileName, nLine, nullptr, L"%ls", static_cast<const wchar_t*>(wszBuf));

  0023d	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00245	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  0024a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0024f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00256	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0025b	45 33 c9	 xor	 r9d, r9d
  0025e	44 8b 84 24 d8
	0a 00 00	 mov	 r8d, DWORD PTR nLine$[rsp]
  00266	48 8d 94 24 90
	08 00 00	 lea	 rdx, QWORD PTR fileName$[rsp]
  0026e	33 c9		 xor	 ecx, ecx
  00270	e8 00 00 00 00	 call	 _CrtDbgReportW

; 199  : 	}

  00275	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  0027d	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
$LN1@TraceV:
  00282	48 8b cc	 mov	 rcx, rsp
  00285	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcFrameData
  0028c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00291	48 8b 8c 24 b8
	0a 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00299	48 33 cc	 xor	 rcx, rsp
  0029c	e8 00 00 00 00	 call	 __security_check_cookie
  002a1	48 81 c4 c0 0a
	00 00		 add	 rsp, 2752		; 00000ac0H
  002a8	5f		 pop	 rdi
  002a9	c3		 ret	 0
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z
_TEXT	SEGMENT
i$1 = 0
nCategory$ = 32
?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z PROC		; ATL::CTrace::GetCategoryName, COMDAT

; 132  : 	{

$LN7:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 10	 sub	 rsp, 16
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 04 00 00 00	 mov	 ecx, 4
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]

; 133  : 		for(unsigned int i = 0; i < m_nLastCategory; i++) 

  0001c	c7 04 24 00 00
	00 00		 mov	 DWORD PTR i$1[rsp], 0
  00023	eb 08		 jmp	 SHORT $LN4@GetCategor
$LN2@GetCategor:
  00025	8b 04 24	 mov	 eax, DWORD PTR i$1[rsp]
  00028	ff c0		 inc	 eax
  0002a	89 04 24	 mov	 DWORD PTR i$1[rsp], eax
$LN4@GetCategor:
  0002d	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  00033	39 04 24	 cmp	 DWORD PTR i$1[rsp], eax
  00036	73 34		 jae	 SHORT $LN3@GetCategor

; 134  : 		{
; 135  : 			if (m_nMap[i].nCategory == nCategory)

  00038	8b 04 24	 mov	 eax, DWORD PTR i$1[rsp]
  0003b	48 69 c0 04 01
	00 00		 imul	 rax, rax, 260		; 00000104H
  00042	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A ; ATL::CTrace::m_nMap
  00049	8b 54 24 20	 mov	 edx, DWORD PTR nCategory$[rsp]
  0004d	39 14 01	 cmp	 DWORD PTR [rcx+rax], edx
  00050	75 18		 jne	 SHORT $LN5@GetCategor

; 136  : 			{
; 137  : 				return m_nMap[i].categryName;

  00052	8b 04 24	 mov	 eax, DWORD PTR i$1[rsp]
  00055	48 69 c0 04 01
	00 00		 imul	 rax, rax, 260		; 00000104H
  0005c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A ; ATL::CTrace::m_nMap
  00063	48 8d 44 01 04	 lea	 rax, QWORD PTR [rcx+rax+4]
  00068	eb 04		 jmp	 SHORT $LN1@GetCategor
$LN5@GetCategor:

; 138  : 			}
; 139  : 		}

  0006a	eb b9		 jmp	 SHORT $LN2@GetCategor
$LN3@GetCategor:

; 140  : 
; 141  : 		return nullptr;

  0006c	33 c0		 xor	 eax, eax
$LN1@GetCategor:

; 142  : 	}

  0006e	48 83 c4 10	 add	 rsp, 16
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z ENDP		; ATL::CTrace::GetCategoryName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceISAPI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceISAPI@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceISAPI'', COMDAT

; 119  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceISAPI> atlTraceISAPI(_T("atlTraceISAPI"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG94237
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceISAPI@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceISAPI''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 40 00	 mov	 edx, 4194304		; 00400000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSync@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSync@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSync'', COMDAT

; 118  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSync> atlTraceSync(_T("atlTraceSync"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG94188
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceSync@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSync''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 20 00	 mov	 edx, 2097152		; 00200000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSecurity@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSecurity@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSecurity'', COMDAT

; 117  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSecurity> atlTraceSecurity(_T("atlTraceSecurity"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG94139
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceSecurity@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSecurity''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 10 00	 mov	 edx, 1048576		; 00100000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceUtil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceUtil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceUtil'', COMDAT

; 116  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceUtil> atlTraceUtil(_T("atlTraceUtil"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG94090
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceUtil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceUtil''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceMap@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceMap@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceMap'', COMDAT

; 115  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceMap> atlTraceMap(_T("atlTraceMap"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG94085
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceMap@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceMap''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 04 00	 mov	 edx, 262144		; 00040000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceString@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceString@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceString'', COMDAT

; 114  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceString> atlTraceString(_T("atlTraceString"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG94036
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceString@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceString''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 02 00	 mov	 edx, 131072		; 00020000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceStencil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceStencil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceStencil'', COMDAT

; 113  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceStencil> atlTraceStencil(_T("atlTraceStencil"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93987
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceStencil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceStencil''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 01 00	 mov	 edx, 65536		; 00010000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceCache@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCache@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCache'', COMDAT

; 112  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCache> atlTraceCache(_T("atlTraceCache"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93938
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceCache@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCache''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 80 00 00	 mov	 edx, 32768		; 00008000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceTime@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceTime@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceTime'', COMDAT

; 111  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceTime> atlTraceTime(_T("atlTraceTime"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93889
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceTime@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceTime''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 40 00 00	 mov	 edx, 16384		; 00004000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93840
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAAIXZ
_TEXT	SEGMENT
this$ = 16
??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAAIXZ PROC	; ATL::CTraceCategoryEx<8192,0>::operator unsigned int, COMDAT

; 79   : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  00006	b8 00 20 00 00	 mov	 eax, 8192		; 00002000H

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAAIXZ ENDP	; ATL::CTraceCategoryEx<8192,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 20 00 00	 mov	 edx, 8192		; 00002000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceAllocation@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceAllocation@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceAllocation'', COMDAT

; 109  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceAllocation> atlTraceAllocation(_T("atlTraceAllocation"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93791
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceAllocation@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceAllocation''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 10 00 00	 mov	 edx, 4096		; 00001000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceNotImpl@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceNotImpl@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceNotImpl'', COMDAT

; 108  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceNotImpl> atlTraceNotImpl(_T("atlTraceNotImpl"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93742
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceNotImpl@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceNotImpl''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 08 00 00	 mov	 edx, 2048		; 00000800H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSnapin@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSnapin@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSnapin'', COMDAT

; 107  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSnapin> atlTraceSnapin(_T("atlTraceSnapin"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93693
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceSnapin@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSnapin''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 04 00 00	 mov	 edx, 1024		; 00000400H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceDBProvider@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBProvider@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBProvider'', COMDAT

; 106  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBProvider> atlTraceDBProvider(_T("atlTraceDBProvider"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93644
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceDBProvider@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBProvider''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 02 00 00	 mov	 edx, 512		; 00000200H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceDBClient@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBClient@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBClient'', COMDAT

; 105  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBClient> atlTraceDBClient(_T("atlTraceDBClient"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93595
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceDBClient@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBClient''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 01 00 00	 mov	 edx, 256		; 00000100H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceHosting@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceHosting@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceHosting'', COMDAT

; 104  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceHosting> atlTraceHosting(_T("atlTraceHosting"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93546
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceHosting@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceHosting''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 80 00 00 00	 mov	 edx, 128		; 00000080H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceControls@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceControls@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceControls'', COMDAT

; 103  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceControls> atlTraceControls(_T("atlTraceControls"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93497
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceControls@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceControls''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAAIXZ
_TEXT	SEGMENT
this$ = 16
??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAAIXZ PROC	; ATL::CTraceCategoryEx<64,0>::operator unsigned int, COMDAT

; 79   : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  00006	b8 40 00 00 00	 mov	 eax, 64			; 00000040H

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAAIXZ ENDP	; ATL::CTraceCategoryEx<64,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceWindowing@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceWindowing@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceWindowing'', COMDAT

; 102  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceWindowing> atlTraceWindowing(_T("atlTraceWindowing"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93448
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceWindowing@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceWindowing''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ
_TEXT	SEGMENT
this$ = 16
??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ PROC	; ATL::CTraceCategoryEx<32,0>::operator unsigned int, COMDAT

; 79   : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  00006	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ ENDP	; ATL::CTraceCategoryEx<32,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceRefcount@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRefcount@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRefcount'', COMDAT

; 101  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRefcount> atlTraceRefcount(_T("atlTraceRefcount"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93399
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceRefcount@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRefcount''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 10 00 00 00	 mov	 edx, 16
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceRegistrar@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRegistrar@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRegistrar'', COMDAT

; 100  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRegistrar> atlTraceRegistrar(_T("atlTraceRegistrar"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93350
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceRegistrar@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRegistrar''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 08 00 00 00	 mov	 edx, 8
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceQI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceQI@ATL@@YAXXZ PROC				; ATL::`dynamic initializer for 'atlTraceQI'', COMDAT

; 99   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceQI> atlTraceQI(_T("atlTraceQI"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93301
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceQI@ATL@@YAXXZ ENDP				; ATL::`dynamic initializer for 'atlTraceQI''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 04 00 00 00	 mov	 edx, 4
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceCOM@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCOM@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCOM'', COMDAT

; 98   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCom> atlTraceCOM(_T("atlTraceCOM"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93252
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceCOM@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCOM''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ
_TEXT	SEGMENT
this$ = 16
??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ PROC		; ATL::CTraceCategoryEx<2,0>::operator unsigned int, COMDAT

; 79   : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  00006	b8 02 00 00 00	 mov	 eax, 2

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ ENDP		; ATL::CTraceCategoryEx<2,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 02 00 00 00	 mov	 edx, 2
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceGeneral@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceGeneral@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceGeneral'', COMDAT

; 97   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceGeneral> atlTraceGeneral(_T("atlTraceGeneral"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG93179
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceGeneral@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceGeneral''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 01 00 00 00	 mov	 edx, 1
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 08 00	 mov	 edx, 524288		; 00080000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPEAX@Z
_TEXT	SEGMENT
p$ = 48
?Free@CCRTAllocator@ATL@@SAXPEAX@Z PROC			; ATL::CCRTAllocator::Free, COMDAT

; 266  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 267  : 		free(p);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR p$[rsp]
  00023	e8 00 00 00 00	 call	 free

; 268  : 	}

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?Free@CCRTAllocator@ATL@@SAXPEAX@Z ENDP			; ATL::CCRTAllocator::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z
_TEXT	SEGMENT
nBytes$ = 48
?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z PROC		; ATL::CCRTAllocator::Allocate, COMDAT

; 261  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 262  : 		return malloc(nBytes);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR nBytes$[rsp]
  00023	e8 00 00 00 00	 call	 malloc

; 263  : 	}

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z ENDP		; ATL::CCRTAllocator::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@H@ATL@@YAJPEAHHH@Z
_TEXT	SEGMENT
i64Result$ = 32
piResult$ = 64
iLeft$ = 72
iRight$ = 80
??$AtlMultiply@H@ATL@@YAJPEAHHH@Z PROC			; ATL::AtlMultiply<int>, COMDAT

; 120  : {

$LN5:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 0c 00 00 00	 mov	 ecx, 12
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 121  : 	__int64 i64Result=static_cast<__int64>(iLeft) * static_cast<__int64>(iRight);

  00027	48 63 44 24 48	 movsxd	 rax, DWORD PTR iLeft$[rsp]
  0002c	48 63 4c 24 50	 movsxd	 rcx, DWORD PTR iRight$[rsp]
  00031	48 0f af c1	 imul	 rax, rcx
  00035	48 89 44 24 20	 mov	 QWORD PTR i64Result$[rsp], rax

; 122  : 	if(i64Result>INT_MAX || i64Result < INT_MIN)

  0003a	48 81 7c 24 20
	ff ff ff 7f	 cmp	 QWORD PTR i64Result$[rsp], 2147483647 ; 7fffffffH
  00043	7f 0b		 jg	 SHORT $LN3@AtlMultipl
  00045	48 81 7c 24 20
	00 00 00 80	 cmp	 QWORD PTR i64Result$[rsp], -2147483648 ; ffffffff80000000H
  0004e	7d 0c		 jge	 SHORT $LN2@AtlMultipl
$LN3@AtlMultipl:

; 123  : 	{
; 124  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  00050	b9 16 02 00 00	 mov	 ecx, 534		; 00000216H
  00055	e8 00 00 00 00	 call	 HRESULT_FROM_WIN32
  0005a	eb 0d		 jmp	 SHORT $LN1@AtlMultipl
$LN2@AtlMultipl:

; 125  : 	}
; 126  : 	*piResult=static_cast<int>(i64Result);

  0005c	48 8b 44 24 40	 mov	 rax, QWORD PTR piResult$[rsp]
  00061	8b 4c 24 20	 mov	 ecx, DWORD PTR i64Result$[rsp]
  00065	89 08		 mov	 DWORD PTR [rax], ecx

; 127  : 	return S_OK;

  00067	33 c0		 xor	 eax, eax
$LN1@AtlMultipl:

; 128  : }

  00069	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006d	5f		 pop	 rdi
  0006e	c3		 ret	 0
??$AtlMultiply@H@ATL@@YAJPEAHHH@Z ENDP			; ATL::AtlMultiply<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_wstdio.h
;	COMDAT swprintf_s
_TEXT	SEGMENT
_Result$ = 48
_ArgList$ = 72
_Buffer$ = 112
_BufferCount$ = 120
_Format$ = 128
swprintf_s PROC						; COMDAT

; 1523 :         {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1524 :             int _Result;
; 1525 :             va_list _ArgList;
; 1526 :             __crt_va_start(_ArgList, _Format);

  0002d	48 8d 84 24 88
	00 00 00	 lea	 rax, QWORD PTR _Format$[rsp+8]
  00035	48 89 44 24 48	 mov	 QWORD PTR _ArgList$[rsp], rax

; 1527 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0003a	48 8b 44 24 48	 mov	 rax, QWORD PTR _ArgList$[rsp]
  0003f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00044	45 33 c9	 xor	 r9d, r9d
  00047	4c 8b 84 24 80
	00 00 00	 mov	 r8, QWORD PTR _Format$[rsp]
  0004f	48 8b 54 24 78	 mov	 rdx, QWORD PTR _BufferCount$[rsp]
  00054	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  00059	e8 00 00 00 00	 call	 _vswprintf_s_l
  0005e	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1528 :             __crt_va_end(_ArgList);

  00062	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR _ArgList$[rsp], 0

; 1529 :             return _Result;

  0006b	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]

; 1530 :         }

  0006f	8b f8		 mov	 edi, eax
  00071	48 8b cc	 mov	 rcx, rsp
  00074	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:swprintf_s$rtcFrameData
  0007b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00080	8b c7		 mov	 eax, edi
  00082	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00086	5f		 pop	 rdi
  00087	c3		 ret	 0
swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_wstdio.h
;	COMDAT _vswprintf_s_l
_TEXT	SEGMENT
_Result$ = 48
tv73 = 52
_Buffer$ = 80
_BufferCount$ = 88
_Format$ = 96
_Locale$ = 104
_ArgList$ = 112
_vswprintf_s_l PROC					; COMDAT

; 1256 :     {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1257 :         int const _Result = __stdio_common_vswprintf_s(

  0002d	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00032	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00037	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0003c	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Locale$[rsp]
  00041	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00046	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Format$[rsp]
  0004b	4c 8b 44 24 58	 mov	 r8, QWORD PTR _BufferCount$[rsp]
  00050	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Buffer$[rsp]
  00055	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00058	e8 00 00 00 00	 call	 __stdio_common_vswprintf_s
  0005d	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1258 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1259 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1260 : 
; 1261 :         return _Result < 0 ? -1 : _Result;

  00061	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00066	7d 0a		 jge	 SHORT $LN3@vswprintf_
  00068	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv73[rsp], -1
  00070	eb 08		 jmp	 SHORT $LN4@vswprintf_
$LN3@vswprintf_:
  00072	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  00076	89 44 24 34	 mov	 DWORD PTR tv73[rsp], eax
$LN4@vswprintf_:
  0007a	8b 44 24 34	 mov	 eax, DWORD PTR tv73[rsp]

; 1262 :     }

  0007e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00082	5f		 pop	 rdi
  00083	c3		 ret	 0
_vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_wstdio.h
;	COMDAT _vsnwprintf
_TEXT	SEGMENT
_Buffer$ = 64
_BufferCount$ = 72
_Format$ = 80
_ArgList$ = 88
_vsnwprintf PROC					; COMDAT

; 1129 :     {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1130 :         return _vsnwprintf_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0002d	48 8b 44 24 58	 mov	 rax, QWORD PTR _ArgList$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00037	45 33 c9	 xor	 r9d, r9d
  0003a	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Format$[rsp]
  0003f	48 8b 54 24 48	 mov	 rdx, QWORD PTR _BufferCount$[rsp]
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  00049	e8 00 00 00 00	 call	 _vsnwprintf_l

; 1131 :     }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
_vsnwprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_wstdio.h
;	COMDAT _snwprintf
_TEXT	SEGMENT
_Result$ = 48
_ArgList$ = 72
_Buffer$ = 112
_BufferCount$ = 120
_Format$ = 128
_snwprintf PROC						; COMDAT

; 1657 :     {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1658 :         int _Result;
; 1659 :         va_list _ArgList;
; 1660 :         __crt_va_start(_ArgList, _Format);

  0002d	48 8d 84 24 88
	00 00 00	 lea	 rax, QWORD PTR _Format$[rsp+8]
  00035	48 89 44 24 48	 mov	 QWORD PTR _ArgList$[rsp], rax

; 1661 : 
; 1662 :         _Result = _vsnwprintf_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0003a	48 8b 44 24 48	 mov	 rax, QWORD PTR _ArgList$[rsp]
  0003f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00044	45 33 c9	 xor	 r9d, r9d
  00047	4c 8b 84 24 80
	00 00 00	 mov	 r8, QWORD PTR _Format$[rsp]
  0004f	48 8b 54 24 78	 mov	 rdx, QWORD PTR _BufferCount$[rsp]
  00054	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  00059	e8 00 00 00 00	 call	 _vsnwprintf_l
  0005e	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1663 : 
; 1664 :         __crt_va_end(_ArgList);

  00062	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR _ArgList$[rsp], 0

; 1665 :         return _Result;

  0006b	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]

; 1666 :     }

  0006f	8b f8		 mov	 edi, eax
  00071	48 8b cc	 mov	 rcx, rsp
  00074	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_snwprintf$rtcFrameData
  0007b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00080	8b c7		 mov	 eax, edi
  00082	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00086	5f		 pop	 rdi
  00087	c3		 ret	 0
_snwprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_wstdio.h
;	COMDAT _vsnwprintf_l
_TEXT	SEGMENT
_Result$ = 48
tv74 = 52
_Buffer$ = 80
_BufferCount$ = 88
_Format$ = 96
_Locale$ = 104
_ArgList$ = 112
_vsnwprintf_l PROC					; COMDAT

; 1061 :     {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1062 :         int const _Result = __stdio_common_vswprintf(

  0002d	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00032	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00035	48 83 c8 01	 or	 rax, 1
  00039	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  0003e	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00043	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Locale$[rsp]
  00048	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0004d	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Format$[rsp]
  00052	4c 8b 44 24 58	 mov	 r8, QWORD PTR _BufferCount$[rsp]
  00057	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Buffer$[rsp]
  0005c	48 8b c8	 mov	 rcx, rax
  0005f	e8 00 00 00 00	 call	 __stdio_common_vswprintf
  00064	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1063 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1064 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1065 : 
; 1066 :         return _Result < 0 ? -1 : _Result;

  00068	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  0006d	7d 0a		 jge	 SHORT $LN3@vsnwprintf
  0006f	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv74[rsp], -1
  00077	eb 08		 jmp	 SHORT $LN4@vsnwprintf
$LN3@vsnwprintf:
  00079	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  0007d	89 44 24 34	 mov	 DWORD PTR tv74[rsp], eax
$LN4@vsnwprintf:
  00081	8b 44 24 34	 mov	 eax, DWORD PTR tv74[rsp]

; 1067 :     }

  00085	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00089	5f		 pop	 rdi
  0008a	c3		 ret	 0
_vsnwprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_wstdio.h
;	COMDAT vfwprintf
_TEXT	SEGMENT
_Stream$ = 48
_Format$ = 56
_ArgList$ = 64
vfwprintf PROC						; COMDAT

; 322  :     {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 323  :         return _vfwprintf_l(_Stream, _Format, NULL, _ArgList);

  00028	4c 8b 4c 24 40	 mov	 r9, QWORD PTR _ArgList$[rsp]
  0002d	45 33 c0	 xor	 r8d, r8d
  00030	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Format$[rsp]
  00035	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Stream$[rsp]
  0003a	e8 00 00 00 00	 call	 _vfwprintf_l

; 324  :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
vfwprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_wstdio.h
;	COMDAT _vfwprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfwprintf_l PROC					; COMDAT

; 308  :     {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 309  :         return __stdio_common_vfwprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  0002d	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00032	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00037	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0003c	4c 8b 4c 24 50	 mov	 r9, QWORD PTR _Locale$[rsp]
  00041	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Format$[rsp]
  00046	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Stream$[rsp]
  0004b	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0004e	e8 00 00 00 00	 call	 __stdio_common_vfwprintf

; 310  :     }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
_vfwprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 90   :     {

$LN3:
  00000	40 57		 push	 rdi

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00002	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  00009	5f		 pop	 rdi
  0000a	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlexcept.h
;	COMDAT ?AtlThrowImpl@ATL@@YAXJ@Z
_TEXT	SEGMENT
dwExceptionCode$ = 48
$T1 = 56
tv73 = 72
tv85 = 76
hr$ = 96
?AtlThrowImpl@ATL@@YAXJ@Z PROC				; ATL::AtlThrowImpl, COMDAT

; 95   : {

$LN8:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 14 00 00 00	 mov	 ecx, 20
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 60	 mov	 ecx, DWORD PTR [rsp+96]

; 96   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );

  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  00023	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAAIXZ ; ATL::CTraceCategoryEx<8192,0>::operator unsigned int
  00028	89 44 24 48	 mov	 DWORD PTR tv73[rsp], eax
  0002c	41 b8 60 00 00
	00		 mov	 r8d, 96			; 00000060H
  00032	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0HD@ECNMIKGK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00039	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T1[rsp]
  0003e	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00043	8b 4c 24 60	 mov	 ecx, DWORD PTR hr$[rsp]
  00047	89 4c 24 20	 mov	 DWORD PTR [rsp+32], ecx
  0004b	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5@
  00052	45 33 c0	 xor	 r8d, r8d
  00055	8b 4c 24 48	 mov	 ecx, DWORD PTR tv73[rsp]
  00059	8b d1		 mov	 edx, ecx
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ ; ATL::CTraceFileAndLineInfo::operator()

; 97   : 	ATLASSERT( false );

  00063	33 c0		 xor	 eax, eax
  00065	85 c0		 test	 eax, eax
  00067	75 3a		 jne	 SHORT $LN7@AtlThrowIm
  00069	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe@
  00070	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00075	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0007c	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00081	45 33 c9	 xor	 r9d, r9d
  00084	41 b8 61 00 00
	00		 mov	 r8d, 97			; 00000061H
  0008a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OG@DEDHKNLM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00091	b9 02 00 00 00	 mov	 ecx, 2
  00096	e8 00 00 00 00	 call	 _CrtDbgReportW
  0009b	83 f8 01	 cmp	 eax, 1
  0009e	75 03		 jne	 SHORT $LN7@AtlThrowIm
  000a0	cc		 int	 3
  000a1	33 c0		 xor	 eax, eax
$LN7@AtlThrowIm:

; 98   : 	DWORD dwExceptionCode;
; 99   : 	switch(hr)

  000a3	8b 44 24 60	 mov	 eax, DWORD PTR hr$[rsp]
  000a7	89 44 24 4c	 mov	 DWORD PTR tv85[rsp], eax
  000ab	81 7c 24 4c 0e
	00 07 80	 cmp	 DWORD PTR tv85[rsp], -2147024882 ; ffffffff8007000eH
  000b3	74 02		 je	 SHORT $LN4@AtlThrowIm
  000b5	eb 0a		 jmp	 SHORT $LN5@AtlThrowIm
$LN4@AtlThrowIm:

; 100  : 	{
; 101  : 	case E_OUTOFMEMORY:
; 102  : 		dwExceptionCode = STATUS_NO_MEMORY;

  000b7	c7 44 24 30 17
	00 00 c0	 mov	 DWORD PTR dwExceptionCode$[rsp], -1073741801 ; c0000017H

; 103  : 		break;

  000bf	eb 08		 jmp	 SHORT $LN2@AtlThrowIm
$LN5@AtlThrowIm:

; 104  : 	default:
; 105  : 		dwExceptionCode = EXCEPTION_ILLEGAL_INSTRUCTION;

  000c1	c7 44 24 30 1d
	00 00 c0	 mov	 DWORD PTR dwExceptionCode$[rsp], -1073741795 ; c000001dH
$LN2@AtlThrowIm:

; 106  : 	}
; 107  : 	_AtlRaiseException((DWORD)dwExceptionCode);

  000c9	ba 01 00 00 00	 mov	 edx, 1
  000ce	8b 4c 24 30	 mov	 ecx, DWORD PTR dwExceptionCode$[rsp]
  000d2	e8 00 00 00 00	 call	 ?_AtlRaiseException@ATL@@YAXKK@Z ; ATL::_AtlRaiseException
$LN6@AtlThrowIm:

; 108  : }

  000d7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000db	5f		 pop	 rdi
  000dc	c3		 ret	 0
?AtlThrowImpl@ATL@@YAXJ@Z ENDP				; ATL::AtlThrowImpl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IViewObject2@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IViewObject2@@QEAA@XZ PROC				; IViewObject2::IViewObject2, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IViewObject@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IViewObject2@@QEAA@XZ ENDP				; IViewObject2::IViewObject2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IViewObject@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IViewObject@@QEAA@XZ PROC				; IViewObject::IViewObject, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IUnknown@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IViewObject@@QEAA@XZ ENDP				; IViewObject::IViewObject
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IOleInPlaceObject@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IOleInPlaceObject@@QEAA@XZ PROC			; IOleInPlaceObject::IOleInPlaceObject, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IOleWindow@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IOleInPlaceObject@@QEAA@XZ ENDP			; IOleInPlaceObject::IOleInPlaceObject
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IOleInPlaceActiveObject@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IOleInPlaceActiveObject@@QEAA@XZ PROC		; IOleInPlaceActiveObject::IOleInPlaceActiveObject, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IOleWindow@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IOleInPlaceActiveObject@@QEAA@XZ ENDP		; IOleInPlaceActiveObject::IOleInPlaceActiveObject
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IOleWindow@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IOleWindow@@QEAA@XZ PROC				; IOleWindow::IOleWindow, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IUnknown@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IOleWindow@@QEAA@XZ ENDP				; IOleWindow::IOleWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IOleObject@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IOleObject@@QEAA@XZ PROC				; IOleObject::IOleObject, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IUnknown@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IOleObject@@QEAA@XZ ENDP				; IOleObject::IOleObject
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IDispatch@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IDispatch@@QEAA@XZ PROC				; IDispatch::IDispatch, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IUnknown@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IDispatch@@QEAA@XZ ENDP				; IDispatch::IDispatch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IDataObject@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IDataObject@@QEAA@XZ PROC				; IDataObject::IDataObject, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IUnknown@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IDataObject@@QEAA@XZ ENDP				; IDataObject::IDataObject
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IPersistStorage@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IPersistStorage@@QEAA@XZ PROC			; IPersistStorage::IPersistStorage, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IPersist@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IPersistStorage@@QEAA@XZ ENDP			; IPersistStorage::IPersistStorage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IPersist@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0IPersist@@QEAA@XZ PROC				; IPersist::IPersist, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0IUnknown@@QEAA@XZ
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0IPersist@@QEAA@XZ ENDP				; IPersist::IPersist
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IUnknown@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0IUnknown@@QEAA@XZ PROC				; IUnknown::IUnknown, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0IUnknown@@QEAA@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\shared\winerror.h
;	COMDAT HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = 0
x$ = 32
HRESULT_FROM_WIN32 PROC					; COMDAT

; 29051: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

$LN5:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 10	 sub	 rsp, 16
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 04 00 00 00	 mov	 ecx, 4
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]
  0001c	83 7c 24 20 00	 cmp	 DWORD PTR x$[rsp], 0
  00021	7f 09		 jg	 SHORT $LN3@HRESULT_FR
  00023	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00027	89 04 24	 mov	 DWORD PTR tv68[rsp], eax
  0002a	eb 15		 jmp	 SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
  0002c	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00030	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00035	0d 00 00 07 00	 or	 eax, 458752		; 00070000H
  0003a	0f ba e8 1f	 bts	 eax, 31
  0003e	89 04 24	 mov	 DWORD PTR tv68[rsp], eax
$LN4@HRESULT_FR:
  00041	8b 04 24	 mov	 eax, DWORD PTR tv68[rsp]
  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\shared\guiddef.h
;	COMDAT InlineIsEqualGUID
_TEXT	SEGMENT
tv84 = 0
rguid1$ = 32
rguid2$ = 40
InlineIsEqualGUID PROC					; COMDAT

; 151  : {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 152  :    return (

  00023	b8 04 00 00 00	 mov	 eax, 4
  00028	48 6b c0 00	 imul	 rax, rax, 0
  0002c	b9 04 00 00 00	 mov	 ecx, 4
  00031	48 6b c9 00	 imul	 rcx, rcx, 0
  00035	48 8b 54 24 20	 mov	 rdx, QWORD PTR rguid1$[rsp]
  0003a	4c 8b 44 24 28	 mov	 r8, QWORD PTR rguid2$[rsp]
  0003f	41 8b 0c 08	 mov	 ecx, DWORD PTR [r8+rcx]
  00043	39 0c 02	 cmp	 DWORD PTR [rdx+rax], ecx
  00046	75 78		 jne	 SHORT $LN3@InlineIsEq
  00048	b8 04 00 00 00	 mov	 eax, 4
  0004d	48 6b c0 01	 imul	 rax, rax, 1
  00051	b9 04 00 00 00	 mov	 ecx, 4
  00056	48 6b c9 01	 imul	 rcx, rcx, 1
  0005a	48 8b 54 24 20	 mov	 rdx, QWORD PTR rguid1$[rsp]
  0005f	4c 8b 44 24 28	 mov	 r8, QWORD PTR rguid2$[rsp]
  00064	41 8b 0c 08	 mov	 ecx, DWORD PTR [r8+rcx]
  00068	39 0c 02	 cmp	 DWORD PTR [rdx+rax], ecx
  0006b	75 53		 jne	 SHORT $LN3@InlineIsEq
  0006d	b8 04 00 00 00	 mov	 eax, 4
  00072	48 6b c0 02	 imul	 rax, rax, 2
  00076	b9 04 00 00 00	 mov	 ecx, 4
  0007b	48 6b c9 02	 imul	 rcx, rcx, 2
  0007f	48 8b 54 24 20	 mov	 rdx, QWORD PTR rguid1$[rsp]
  00084	4c 8b 44 24 28	 mov	 r8, QWORD PTR rguid2$[rsp]
  00089	41 8b 0c 08	 mov	 ecx, DWORD PTR [r8+rcx]
  0008d	39 0c 02	 cmp	 DWORD PTR [rdx+rax], ecx
  00090	75 2e		 jne	 SHORT $LN3@InlineIsEq
  00092	b8 04 00 00 00	 mov	 eax, 4
  00097	48 6b c0 03	 imul	 rax, rax, 3
  0009b	b9 04 00 00 00	 mov	 ecx, 4
  000a0	48 6b c9 03	 imul	 rcx, rcx, 3
  000a4	48 8b 54 24 20	 mov	 rdx, QWORD PTR rguid1$[rsp]
  000a9	4c 8b 44 24 28	 mov	 r8, QWORD PTR rguid2$[rsp]
  000ae	41 8b 0c 08	 mov	 ecx, DWORD PTR [r8+rcx]
  000b2	39 0c 02	 cmp	 DWORD PTR [rdx+rax], ecx
  000b5	75 09		 jne	 SHORT $LN3@InlineIsEq
  000b7	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv84[rsp], 1
  000be	eb 07		 jmp	 SHORT $LN4@InlineIsEq
$LN3@InlineIsEq:
  000c0	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv84[rsp], 0
$LN4@InlineIsEq:
  000c7	8b 04 24	 mov	 eax, DWORD PTR tv84[rsp]

; 153  :       ((unsigned long *) &rguid1)[0] == ((unsigned long *) &rguid2)[0] &&
; 154  :       ((unsigned long *) &rguid1)[1] == ((unsigned long *) &rguid2)[1] &&
; 155  :       ((unsigned long *) &rguid1)[2] == ((unsigned long *) &rguid2)[2] &&
; 156  :       ((unsigned long *) &rguid1)[3] == ((unsigned long *) &rguid2)[3]);
; 157  : }

  000ca	48 83 c4 10	 add	 rsp, 16
  000ce	5f		 pop	 rdi
  000cf	c3		 ret	 0
InlineIsEqualGUID ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_I@YAXPEAX_K1P6AX0@Z@Z
_TEXT	SEGMENT
tv68 = 32
tv69 = 40
__t$ = 64
__s$ = 72
__n$ = 80
__f$ = 88
??_I@YAXPEAX_K1P6AX0@Z@Z PROC				; `vector destructor iterator', COMDAT
$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0002d	48 8b 44 24 48	 mov	 rax, QWORD PTR __s$[rsp]
  00032	48 0f af 44 24
	50		 imul	 rax, QWORD PTR __n$[rsp]
  00038	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __t$[rsp]
  0003d	48 03 c8	 add	 rcx, rax
  00040	48 8b c1	 mov	 rax, rcx
  00043	48 89 44 24 40	 mov	 QWORD PTR __t$[rsp], rax
$LN2@vector:
  00048	48 8b 44 24 50	 mov	 rax, QWORD PTR __n$[rsp]
  0004d	48 89 44 24 20	 mov	 QWORD PTR tv68[rsp], rax
  00052	48 8b 44 24 50	 mov	 rax, QWORD PTR __n$[rsp]
  00057	48 ff c8	 dec	 rax
  0005a	48 89 44 24 50	 mov	 QWORD PTR __n$[rsp], rax
  0005f	48 83 7c 24 20
	00		 cmp	 QWORD PTR tv68[rsp], 0
  00065	76 0a		 jbe	 SHORT $LN5@vector
  00067	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  0006f	eb 08		 jmp	 SHORT $LN6@vector
$LN5@vector:
  00071	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN6@vector:
  00079	83 7c 24 28 00	 cmp	 DWORD PTR tv69[rsp], 0
  0007e	74 20		 je	 SHORT $LN3@vector
  00080	48 8b 44 24 48	 mov	 rax, QWORD PTR __s$[rsp]
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __t$[rsp]
  0008a	48 2b c8	 sub	 rcx, rax
  0008d	48 8b c1	 mov	 rax, rcx
  00090	48 89 44 24 40	 mov	 QWORD PTR __t$[rsp], rax
  00095	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __t$[rsp]
  0009a	ff 54 24 58	 call	 QWORD PTR __f$[rsp]
  0009e	eb a8		 jmp	 SHORT $LN2@vector
$LN3@vector:
  000a0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
??_I@YAXPEAX_K1P6AX0@Z@Z ENDP				; `vector destructor iterator'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
tv66 = 32
tv67 = 40
__t$ = 64
__s$ = 72
__n$ = 80
__f$ = 88
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN2@vector:
  0002d	48 8b 44 24 50	 mov	 rax, QWORD PTR __n$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00037	48 8b 44 24 50	 mov	 rax, QWORD PTR __n$[rsp]
  0003c	48 ff c8	 dec	 rax
  0003f	48 89 44 24 50	 mov	 QWORD PTR __n$[rsp], rax
  00044	48 83 7c 24 20
	00		 cmp	 QWORD PTR tv66[rsp], 0
  0004a	76 0a		 jbe	 SHORT $LN5@vector
  0004c	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR tv67[rsp], 1
  00054	eb 08		 jmp	 SHORT $LN6@vector
$LN5@vector:
  00056	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR tv67[rsp], 0
$LN6@vector:
  0005e	83 7c 24 28 00	 cmp	 DWORD PTR tv67[rsp], 0
  00063	74 20		 je	 SHORT $LN3@vector
  00065	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __t$[rsp]
  0006a	ff 54 24 58	 call	 QWORD PTR __f$[rsp]
  0006e	48 8b 44 24 48	 mov	 rax, QWORD PTR __s$[rsp]
  00073	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __t$[rsp]
  00078	48 03 c8	 add	 rcx, rax
  0007b	48 8b c1	 mov	 rax, rcx
  0007e	48 89 44 24 40	 mov	 QWORD PTR __t$[rsp], rax
  00083	eb a8		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00085	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00089	5f		 pop	 rdi
  0008a	c3		 ret	 0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
