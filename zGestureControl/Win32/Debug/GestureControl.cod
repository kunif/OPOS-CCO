; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29336.0 

	TITLE	C:\Develop\OPOS-CCO\zGestureControl\GestureControl.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?ObjectMain@CComObjectRootBase@ATL@@SGX_N@Z	; ATL::CComObjectRootBase::ObjectMain
PUBLIC	?GetCategoryMap@CComObjectRootBase@ATL@@SAPBU_ATL_CATMAP_ENTRY@2@XZ ; ATL::CComObjectRootBase::GetCategoryMap
PUBLIC	?WM_ATLGETHOST@ATL@@3IA				; ATL::WM_ATLGETHOST
PUBLIC	?WM_ATLGETCONTROL@ATL@@3IA			; ATL::WM_ATLGETCONTROL
PUBLIC	_LIBID_ATLLib
PUBLIC	___pobjMapEntryFirst
PUBLIC	___pobjMapEntryLast
PUBLIC	_IID_IOPOSGestureControl_1_16
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
PUBLIC	?_AtlRegisterPerUser@ATL@@3_NA			; ATL::_AtlRegisterPerUser
PUBLIC	_IID_IOPOSGestureControl
PUBLIC	_LIBID_OposGestureControl_CCO
PUBLIC	_DIID__IOPOSGestureControlEvents
PUBLIC	_CLSID_OPOSGestureControl
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?GetObjectDescription@?$CComCoClass@VCOPOSGestureControl@@$1?CLSID_OPOSGestureControl@@3U_GUID@@B@ATL@@SGPB_WXZ ; ATL::CComCoClass<COPOSGestureControl,&CLSID_OPOSGestureControl>::GetObjectDescription
PUBLIC	?UpdateRegistry@COPOSGestureControl@@SGJH@Z	; COPOSGestureControl::UpdateRegistry
PUBLIC	?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A ; ATL::_pAtlAutoThreadModule
PUBLIC	?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ; ATL::CComCreator<ATL::CComObjectCached<ATL::CComClassFactory> >::CreateInstance
PUBLIC	?CreateInstance@?$CComCreator2@V?$CComCreator@V?$CComObject@VCOPOSGestureControl@@@ATL@@@ATL@@V?$CComCreator@V?$CComAggObject@VCOPOSGestureControl@@@ATL@@@2@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ; ATL::CComCreator2<ATL::CComCreator<ATL::CComObject<COPOSGestureControl> >,ATL::CComCreator<ATL::CComAggObject<COPOSGestureControl> > >::CreateInstance
PUBLIC	?chDirSep@ATL@@3_WB				; ATL::chDirSep
PUBLIC	?chRightBracket@ATL@@3_WB			; ATL::chRightBracket
PUBLIC	?chLeftBracket@ATL@@3_WB			; ATL::chLeftBracket
PUBLIC	?chQuote@ATL@@3_WB				; ATL::chQuote
PUBLIC	?chEquals@ATL@@3_WB				; ATL::chEquals
PUBLIC	?szStringVal@ATL@@3QB_WB			; ATL::szStringVal
PUBLIC	?multiszStringVal@ATL@@3QB_WB			; ATL::multiszStringVal
PUBLIC	?szDwordVal@ATL@@3QB_WB				; ATL::szDwordVal
PUBLIC	?szBinaryVal@ATL@@3QB_WB			; ATL::szBinaryVal
PUBLIC	?szValToken@ATL@@3QB_WB				; ATL::szValToken
PUBLIC	?szForceRemove@ATL@@3QB_WB			; ATL::szForceRemove
PUBLIC	?szNoRemove@ATL@@3QB_WB				; ATL::szNoRemove
PUBLIC	?szDelete@ATL@@3QB_WB				; ATL::szDelete
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	_IID_IAxWinHostWindowLic
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_IID_IAxWinAmbientDispatchEx
PUBLIC	_IID_IInternalConnection
;	COMDAT ?WM_ATLGETHOST@ATL@@3IA
_BSS	SEGMENT
?WM_ATLGETHOST@ATL@@3IA DD 01H DUP (?)			; ATL::WM_ATLGETHOST
_BSS	ENDS
;	COMDAT ?WM_ATLGETCONTROL@ATL@@3IA
_BSS	SEGMENT
?WM_ATLGETCONTROL@ATL@@3IA DD 01H DUP (?)		; ATL::WM_ATLGETCONTROL
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?_AtlRegisterPerUser@ATL@@3_NA
_BSS	SEGMENT
?_AtlRegisterPerUser@ATL@@3_NA DB 01H DUP (?)		; ATL::_AtlRegisterPerUser
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A
_BSS	SEGMENT
?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A DD 01H DUP (?) ; ATL::_pAtlAutoThreadModule
_BSS	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatchEx
CONST	SEGMENT
_IID_IAxWinAmbientDispatchEx DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindowLic
CONST	SEGMENT
_IID_IAxWinHostWindowLic DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT ?szDelete@ATL@@3QB_WB
CONST	SEGMENT
?szDelete@ATL@@3QB_WB DD FLAT:$SG111376			; ATL::szDelete
CONST	ENDS
;	COMDAT ?szNoRemove@ATL@@3QB_WB
CONST	SEGMENT
?szNoRemove@ATL@@3QB_WB DD FLAT:$SG111374		; ATL::szNoRemove
CONST	ENDS
;	COMDAT ?szForceRemove@ATL@@3QB_WB
CONST	SEGMENT
?szForceRemove@ATL@@3QB_WB DD FLAT:$SG111372		; ATL::szForceRemove
CONST	ENDS
;	COMDAT ?szValToken@ATL@@3QB_WB
CONST	SEGMENT
?szValToken@ATL@@3QB_WB DD FLAT:$SG111370		; ATL::szValToken
CONST	ENDS
;	COMDAT ?szBinaryVal@ATL@@3QB_WB
CONST	SEGMENT
?szBinaryVal@ATL@@3QB_WB DD FLAT:$SG111368		; ATL::szBinaryVal
CONST	ENDS
;	COMDAT ?szDwordVal@ATL@@3QB_WB
CONST	SEGMENT
?szDwordVal@ATL@@3QB_WB DD FLAT:$SG111366		; ATL::szDwordVal
CONST	ENDS
;	COMDAT ?multiszStringVal@ATL@@3QB_WB
CONST	SEGMENT
?multiszStringVal@ATL@@3QB_WB DD FLAT:$SG111364		; ATL::multiszStringVal
CONST	ENDS
;	COMDAT ?szStringVal@ATL@@3QB_WB
CONST	SEGMENT
?szStringVal@ATL@@3QB_WB DD FLAT:$SG111362		; ATL::szStringVal
CONST	ENDS
;	COMDAT ?chEquals@ATL@@3_WB
CONST	SEGMENT
?chEquals@ATL@@3_WB DW 03dH				; ATL::chEquals
CONST	ENDS
;	COMDAT ?chQuote@ATL@@3_WB
CONST	SEGMENT
?chQuote@ATL@@3_WB DW 027H				; ATL::chQuote
CONST	ENDS
;	COMDAT ?chLeftBracket@ATL@@3_WB
CONST	SEGMENT
?chLeftBracket@ATL@@3_WB DW 07bH			; ATL::chLeftBracket
CONST	ENDS
;	COMDAT ?chRightBracket@ATL@@3_WB
CONST	SEGMENT
?chRightBracket@ATL@@3_WB DW 07dH			; ATL::chRightBracket
CONST	ENDS
;	COMDAT ?chDirSep@ATL@@3_WB
CONST	SEGMENT
?chDirSep@ATL@@3_WB DW 05cH				; ATL::chDirSep
CONST	ENDS
;	COMDAT _CLSID_OPOSGestureControl
CONST	SEGMENT
_CLSID_OPOSGestureControl DD 0ccb90392H
	DW	0b81eH
	DW	011d2H
	DB	0abH
	DB	074H
	DB	00H
	DB	040H
	DB	05H
	DB	04cH
	DB	037H
	DB	019H
CONST	ENDS
;	COMDAT _DIID__IOPOSGestureControlEvents
CONST	SEGMENT
_DIID__IOPOSGestureControlEvents DD 0ccb90393H
	DW	0b81eH
	DW	011d2H
	DB	0abH
	DB	074H
	DB	00H
	DB	040H
	DB	05H
	DB	04cH
	DB	037H
	DB	019H
CONST	ENDS
;	COMDAT _LIBID_OposGestureControl_CCO
CONST	SEGMENT
_LIBID_OposGestureControl_CCO DD 0ccb90390H
	DW	0b81eH
	DW	011d2H
	DB	0abH
	DB	074H
	DB	00H
	DB	040H
	DB	05H
	DB	04cH
	DB	037H
	DB	019H
CONST	ENDS
;	COMDAT _IID_IOPOSGestureControl
CONST	SEGMENT
_IID_IOPOSGestureControl DD 0ccb91391H
	DW	0b81eH
	DW	011d2H
	DB	0abH
	DB	074H
	DB	00H
	DB	040H
	DB	05H
	DB	04cH
	DB	037H
	DB	019H
CONST	ENDS
;	COMDAT _IID_IOPOSGestureControl_1_16
CONST	SEGMENT
_IID_IOPOSGestureControl_1_16 DD 0ccb90391H
	DW	0b81eH
	DW	011d2H
	DB	0abH
	DB	074H
	DB	00H
	DB	040H
	DB	05H
	DB	04cH
	DB	037H
	DB	019H
CONST	ENDS
;	COMDAT ___pobjMapEntryLast
ATL$__z	SEGMENT
___pobjMapEntryLast DD 00H
ATL$__z	ENDS
;	COMDAT ___pobjMapEntryFirst
ATL$__a	SEGMENT
___pobjMapEntryFirst DD 00H
ATL$__a	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
CONST	SEGMENT
$SG197010 DB	'p', 00H, 'T', 00H, 'h', 00H, 'i', 00H, 's', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG197011 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG197012 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG197015 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h', 00H
$SG197016 DB	'S', 00H, 'u', 00H, 'b', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 't'
	DB	00H, 'h', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 'g', 00H, 'h', 00H
	DB	' ', 00H, 'a', 00H, ' ', 00H, 'h', 00H, 'o', 00H, 'o', 00H, 'k'
	DB	00H, ' ', 00H, 'd', 00H, 'i', 00H, 's', 00H, 'c', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, 'e', 00H, 'd', 00H, '.', 00H, 0aH, 00H, 00H
	DB	00H
	ORG $+2
$SG197035 DB	'p', 00H, 'T', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H
	DB	'>', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'C', 00H, 'u', 00H, 'r'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'M', 00H, 's', 00H
	DB	'g', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '&', 00H, 'm'
	DB	00H, 's', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG197036 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG197072 DB	't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'm', 00H, '_', 00H, 'h', 00H, 'W', 00H, 'n', 00H, 'd', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG197037 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG197073 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG197074 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG197079 DB	't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'm', 00H, '_', 00H, 'h', 00H, 'W', 00H, 'n', 00H, 'd', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'h', 00H, 'W', 00H, 'n', 00H
	DB	'd', 00H, 00H, 00H
	ORG $+2
$SG197080 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG197098 DB	't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'm', 00H, '_', 00H, 'h', 00H, 'W', 00H, 'n', 00H, 'd', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG197081 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG197099 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG197100 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG197101 DB	':', 00H, ':', 00H, 'I', 00H, 's', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '(', 00H, 'h', 00H, 'W'
	DB	00H, 'n', 00H, 'd', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG197102 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG197121 DB	't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'm', 00H, '_', 00H, 'h', 00H, 'W', 00H, 'n', 00H, 'd', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG197103 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG197122 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG197123 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG197145 DB	'p', 00H, 'T', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H
	DB	'>', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'C', 00H, 'u', 00H, 'r'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'M', 00H, 's', 00H
	DB	'g', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '&', 00H, 'm'
	DB	00H, 's', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG197146 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG197386 DB	'm', 00H, '_', 00H, 'b', 00H, 'e', 00H, 'g', 00H, 'i', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H
	ORG $+2
$SG197147 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H
$SG197205 DB	'p', 00H, 'p', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
$SG197206 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG197207 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG197232 DB	'p', 00H, 'p', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
$SG197233 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG197234 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG197387 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG197388 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG197417 DB	'h', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG197418 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG197419 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG197453 DB	'h', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG197454 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198090 DB	'm', 00H, '_', 00H, 'b', 00H, 'e', 00H, 'g', 00H, 'i', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H
	ORG $+2
$SG197455 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG197489 DB	'h', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG197490 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198471 DB	'm', 00H, '_', 00H, 'b', 00H, 'e', 00H, 'g', 00H, 'i', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H
	ORG $+2
$SG197491 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG197525 DB	'h', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG197526 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG182609 DB	':', 00H, 00H, 00H
$SG197527 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG198091 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG93305 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'r', 00H, 00H, 00H
$SG198092 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG198293 DB	'p', 00H, 'p', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
$SG198294 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198295 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG198320 DB	'p', 00H, 'p', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
$SG198321 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198322 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG198472 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198473 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG198495 DB	'p', 00H, 'p', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
$SG198496 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG198497 DB	'C', 00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P'
	DB	00H, 'O', 00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H
$SG182592 DB	'p', 00H, 'p', 00H, 'v', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	00H, 00H
	ORG $+2
$SG182593 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG182594 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG93134 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG93207 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 00H, 00H
$SG93256 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'Q', 00H, 'I', 00H, 00H, 00H
	ORG $+2
$SG93354 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'f', 00H, 'c', 00H, 'o'
	DB	00H, 'u', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG93403 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H
$SG93452 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r'
	DB	00H, 'o', 00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG93501 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 's', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 00H, 00H
$SG93550 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'D', 00H, 'B', 00H, 'C', 00H, 'l', 00H, 'i'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG93599 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'D', 00H, 'B', 00H, 'P', 00H, 'r', 00H, 'o'
	DB	00H, 'v', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG93648 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'n', 00H, 'a', 00H, 'p', 00H, 'i'
	DB	00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG93697 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'I', 00H, 'm'
	DB	00H, 'p', 00H, 'l', 00H, 00H, 00H
$SG93746 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG93795 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'E', 00H, 'x', 00H, 'c', 00H, 'e', 00H, 'p'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
$SG93844 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG93893 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'a', 00H, 'c', 00H, 'h', 00H, 'e'
	DB	00H, 00H, 00H
$SG93942 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'c'
	DB	00H, 'i', 00H, 'l', 00H, 00H, 00H
$SG93991 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG94040 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 00H, 00H
$SG94045 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'U', 00H, 't', 00H, 'i', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+2
$SG94094 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 'c', 00H, 'u', 00H, 'r'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG94143 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 00H
	DB	00H
	ORG $+2
$SG94192 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'I', 00H, 'S', 00H, 'A', 00H, 'P', 00H, 'I'
	DB	00H, 00H, 00H
$SG111362 DB	'S', 00H, 00H, 00H
$SG111364 DB	'M', 00H, 00H, 00H
$SG111366 DB	'D', 00H, 00H, 00H
$SG111368 DB	'B', 00H, 00H, 00H
$SG111370 DB	'V', 00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG111372 DB	'F', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'R', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 00H, 00H
$SG111374 DB	'N', 00H, 'o', 00H, 'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'v', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG111376 DB	'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG112072 DB	'A', 00H, 'p', 00H, 'p', 00H, 'I', 00H, 'D', 00H, 00H, 00H
$SG112073 DB	'C', 00H, 'L', 00H, 'S', 00H, 'I', 00H, 'D', 00H, 00H, 00H
$SG112074 DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'C', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
	ORG $+2
$SG112075 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'T', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG112076 DB	'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'f', 00H
	DB	'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG112077 DB	'H', 00H, 'a', 00H, 'r', 00H, 'd', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG112078 DB	'M', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG112079 DB	'S', 00H, 'A', 00H, 'M', 00H, 00H, 00H
$SG112080 DB	'S', 00H, 'E', 00H, 'C', 00H, 'U', 00H, 'R', 00H, 'I', 00H
	DB	'T', 00H, 'Y', 00H, 00H, 00H
	ORG $+2
$SG112081 DB	'S', 00H, 'Y', 00H, 'S', 00H, 'T', 00H, 'E', 00H, 'M', 00H
	DB	00H, 00H
	ORG $+2
$SG112082 DB	'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG112083 DB	'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'L', 00H, 'i', 00H
	DB	'b', 00H, 00H, 00H
$SG186909 DB	00H, 00H
	ORG $+2
$SG186913 DB	'_', 00H, '_', 00H, 'a', 00H, 't', 00H, 'l', 00H, '_', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l'
	DB	00H, 00H, 00H
$SG186914 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG186915 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG186918 DB	'l', 00H, 'p', 00H, 's', 00H, 'z', 00H, 'N', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG186919 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG186920 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG113203 DB	'l', 00H, 'p', 00H, 's', 00H, 'z', 00H, 'P', 00H, 'a', 00H
	DB	't', 00H, 'h', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG186922 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlhost.h', 00H
	ORG $+3
$SG186925 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ':', 00H, ' ', 00H, '0'
	DB	00H, 'x', 00H, '%', 00H, 'x', 00H, ' ', 00H, '-', 00H, ' ', 00H
	DB	'%', 00H, 'T', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG113204 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG187003 DB	00H, 00H
	ORG $+2
$SG186923 DB	'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H
	DB	'l', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'f', 00H, 'a', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '''', 00H, '%', 00H, 'T', 00H, 's', 00H
	DB	'''', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG186924 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlhost.h', 00H
	ORG $+3
$SG186933 DB	'l', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H
	DB	00H, 00H
	ORG $+2
$SG186934 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG187007 DB	'_', 00H, '_', 00H, 'a', 00H, 't', 00H, 'l', 00H, '_', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l'
	DB	00H, 00H, 00H
$SG113205 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG187008 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG187014 DB	'l', 00H, 'p', 00H, 's', 00H, 'z', 00H, 'N', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG186935 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG187015 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+4
$SG187009 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG187016 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG187018 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlhost.h', 00H
	ORG $+7
$SG187019 DB	'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H
	DB	'l', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'f', 00H, 'a', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '''', 00H, '%', 00H, 'T', 00H, 's', 00H
	DB	'''', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG187020 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlhost.h', 00H
	ORG $+3
$SG187021 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ':', 00H, ' ', 00H, '0'
	DB	00H, 'x', 00H, '%', 00H, 'x', 00H, ' ', 00H, '-', 00H, ' ', 00H
	DB	'%', 00H, 'T', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG187029 DB	'l', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H
	DB	00H, 00H
	ORG $+2
$SG187030 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+4
$SG187031 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H
	DB	'3', 00H, '3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'h', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??_I@YGXPAXIIP6EX0@Z@Z				; `vector destructor iterator'
PUBLIC	?wcsstr@@YAPA_WPA_WPB_W@Z			; wcsstr
PUBLIC	_InlineIsEqualGUID
PUBLIC	_IsEqualGUID
PUBLIC	_HRESULT_FROM_WIN32
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??0IClassFactory@@QAE@XZ			; IClassFactory::IClassFactory
PUBLIC	_DllGetClassObject@12
PUBLIC	_DllCanUnloadNow@0
PUBLIC	?AtlThrowImpl@ATL@@YGXJ@Z			; ATL::AtlThrowImpl
PUBLIC	___local_stdio_printf_options
PUBLIC	__vswprintf_s_l
PUBLIC	_swprintf_s
PUBLIC	??$AtlMultiply@H@ATL@@YAJPAHHH@Z		; ATL::AtlMultiply<int>
PUBLIC	??$AtlMultiply@I@ATL@@YAJPAIII@Z		; ATL::AtlMultiply<unsigned int>
PUBLIC	??$AtlMultiply@K@ATL@@YAJPAKKK@Z		; ATL::AtlMultiply<unsigned long>
PUBLIC	?AtlCoTaskMemCAlloc@ATL@@YAPAXKK@Z		; ATL::AtlCoTaskMemCAlloc
PUBLIC	?AtlCoTaskMemRecalloc@ATL@@YAPAXPAXKK@Z		; ATL::AtlCoTaskMemRecalloc
PUBLIC	?memcpy_s@Checked@ATL@@YAXPAXIPBXI@Z		; ATL::Checked::memcpy_s
PUBLIC	?Allocate@CCRTAllocator@ATL@@SAPAXI@Z		; ATL::CCRTAllocator::Allocate
PUBLIC	?Free@CCRTAllocator@ATL@@SAXPAX@Z		; ATL::CCRTAllocator::Free
PUBLIC	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
PUBLIC	??$AtlAdd@K@ATL@@YAJPAKKK@Z			; ATL::AtlAdd<unsigned long>
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
PUBLIC	?ocslen@@YAHPB_W@Z				; ocslen
PUBLIC	?ocscpy_s@@YA_NPA_WIPB_W@Z			; ocscpy_s
PUBLIC	?T2COLE_EX@@YAPB_WPB_WI@Z			; T2COLE_EX
PUBLIC	?OLE2CT_EX@@YAPB_WPB_WI@Z			; OLE2CT_EX
PUBLIC	?OLE2CT_EX_DEF@@YAPB_WPB_W@Z			; OLE2CT_EX_DEF
PUBLIC	?T2OLE_EX@@YAPA_WPA_WI@Z			; T2OLE_EX
PUBLIC	?OLE2T_EX@@YAPA_WPA_WI@Z			; OLE2T_EX
PUBLIC	??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
PUBLIC	?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
PUBLIC	?DEVMODEOLE2T_EX@@YAPAU_devicemodeW@@PAU1@@Z	; DEVMODEOLE2T_EX
PUBLIC	??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
PUBLIC	??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
PUBLIC	??B?$CTraceCategoryEx@$00$0A@@ATL@@QAEIXZ	; ATL::CTraceCategoryEx<1,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
PUBLIC	??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ	; ATL::CTraceCategoryEx<2,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
PUBLIC	??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
PUBLIC	??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ	; ATL::CTraceCategoryEx<8,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
PUBLIC	??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
PUBLIC	??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ	; ATL::CTraceCategoryEx<32,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
PUBLIC	??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ	; ATL::CTraceCategoryEx<64,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
PUBLIC	??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ	; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
PUBLIC	??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ	; ATL::CTraceCategoryEx<8192,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
PUBLIC	?GetCategoryName@CTrace@ATL@@CAPA_WI@Z		; ATL::CTrace::GetCategoryName
PUBLIC	?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z		; ATL::CTrace::TraceV
PUBLIC	?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z		; ATL::CTrace::TraceV
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z	; ATL::CTrace::RegisterCategory
PUBLIC	??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
PUBLIC	??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
PUBLIC	??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
PUBLIC	?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
PUBLIC	??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	??0CPreserveLastError@ATL@@QAE@XZ		; ATL::CPreserveLastError::CPreserveLastError
PUBLIC	??1CPreserveLastError@ATL@@QAE@XZ		; ATL::CPreserveLastError::~CPreserveLastError
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	?_AtlRaiseException@ATL@@YAXKK@Z		; ATL::_AtlRaiseException
PUBLIC	?AtlCrtErrorCheck@ATL@@YAHH@Z			; ATL::AtlCrtErrorCheck
PUBLIC	?wcscpy_s@Checked@ATL@@YAXPA_WIPB_W@Z		; ATL::Checked::wcscpy_s
PUBLIC	?wcsncpy_s@Checked@ATL@@YAHPA_WIPB_WI@Z		; ATL::Checked::wcsncpy_s
PUBLIC	?tcsncpy_s@Checked@ATL@@YAHPA_WIPB_WI@Z		; ATL::Checked::tcsncpy_s
PUBLIC	?wcscat_s@Checked@ATL@@YAXPA_WIPB_W@Z		; ATL::Checked::wcscat_s
PUBLIC	?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
PUBLIC	??0CComCriticalSection@ATL@@QAE@XZ		; ATL::CComCriticalSection::CComCriticalSection
PUBLIC	??1CComCriticalSection@ATL@@QAE@XZ		; ATL::CComCriticalSection::~CComCriticalSection
PUBLIC	?Lock@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Lock
PUBLIC	?Unlock@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Unlock
PUBLIC	?Init@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Init
PUBLIC	?Term@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Term
PUBLIC	??0CComSafeDeleteCriticalSection@ATL@@QAE@XZ	; ATL::CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection
PUBLIC	??1CComSafeDeleteCriticalSection@ATL@@QAE@XZ	; ATL::CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection
PUBLIC	?Init@CComSafeDeleteCriticalSection@ATL@@QAEJXZ	; ATL::CComSafeDeleteCriticalSection::Init
PUBLIC	??0CComAutoDeleteCriticalSection@ATL@@QAE@XZ	; ATL::CComAutoDeleteCriticalSection::CComAutoDeleteCriticalSection
PUBLIC	??1CComAutoDeleteCriticalSection@ATL@@QAE@XZ	; ATL::CComAutoDeleteCriticalSection::~CComAutoDeleteCriticalSection
PUBLIC	?Lock@CComFakeCriticalSection@ATL@@QAEJXZ	; ATL::CComFakeCriticalSection::Lock
PUBLIC	?Unlock@CComFakeCriticalSection@ATL@@QAEJXZ	; ATL::CComFakeCriticalSection::Unlock
PUBLIC	?Init@CComFakeCriticalSection@ATL@@QAEJXZ	; ATL::CComFakeCriticalSection::Init
PUBLIC	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
PUBLIC	??0IEnumConnections@@QAE@XZ			; IEnumConnections::IEnumConnections
PUBLIC	??0IEnumConnectionPoints@@QAE@XZ		; IEnumConnectionPoints::IEnumConnectionPoints
PUBLIC	_DllRegisterServer@0
PUBLIC	_DllUnregisterServer@0
PUBLIC	?AtlHresultFromLastError@ATL@@YAJXZ		; ATL::AtlHresultFromLastError
PUBLIC	?AtlHresultFromWin32@ATL@@YAJK@Z		; ATL::AtlHresultFromWin32
PUBLIC	?AtlComQIPtrAssign2@ATL@@YAXPAPAUIUnknown@@PAU2@ABU_GUID@@@Z ; ATL::AtlComQIPtrAssign2
PUBLIC	?AtlInternalOleLoadFromStream@ATL@@YAJPAUIStream@@ABU_GUID@@PAPAXTClassesAllowedInStream@1@K@Z ; ATL::AtlInternalOleLoadFromStream
PUBLIC	??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>
PUBLIC	??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>
PUBLIC	??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ ; ATL::CComPtrBase<IDispatch>::operator&
PUBLIC	?Release@?$CComPtrBase@UIDispatch@@@ATL@@QAEXXZ	; ATL::CComPtrBase<IDispatch>::Release
PUBLIC	??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ		; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
PUBLIC	?GetProperty@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@@Z ; ATL::CComPtr<IDispatch>::GetProperty
PUBLIC	?PutProperty@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@@Z ; ATL::CComPtr<IDispatch>::PutProperty
PUBLIC	?PutProperty@?$CComPtr@UIDispatch@@@ATL@@SAJPAUIDispatch@@JPAUtagVARIANT@@@Z ; ATL::CComPtr<IDispatch>::PutProperty
PUBLIC	?GetProperty@?$CComPtr@UIDispatch@@@ATL@@SAJPAUIDispatch@@JPAUtagVARIANT@@@Z ; ATL::CComPtr<IDispatch>::GetProperty
PUBLIC	??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ		; ATL::CComPtr<IDispatch>::~CComPtr<IDispatch>
PUBLIC	??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>
PUBLIC	??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@PAUIUnknown@@@Z ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>
PUBLIC	?Swap@?$CComPtrBase@UIUnknown@@@ATL@@IAEXAAV12@@Z ; ATL::CComPtrBase<IUnknown>::Swap
PUBLIC	??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IUnknown>::~CComPtrBase<IUnknown>
PUBLIC	??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
PUBLIC	??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
PUBLIC	??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ; ATL::CComPtrBase<IUnknown>::operator->
PUBLIC	??9?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z ; ATL::CComPtrBase<IUnknown>::operator!=
PUBLIC	??8?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z ; ATL::CComPtrBase<IUnknown>::operator==
PUBLIC	?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::Detach
PUBLIC	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ		; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
PUBLIC	??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
PUBLIC	??0?$CComPtr@UIUnknown@@@ATL@@QAE@ABV01@@Z	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
PUBLIC	??4?$CComPtr@UIUnknown@@@ATL@@QAEPAUIUnknown@@PAU2@@Z ; ATL::CComPtr<IUnknown>::operator=
PUBLIC	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ		; ATL::CComPtr<IUnknown>::~CComPtr<IUnknown>
PUBLIC	??0CComBSTR@ATL@@QAE@XZ				; ATL::CComBSTR::CComBSTR
PUBLIC	??1CComBSTR@ATL@@QAE@XZ				; ATL::CComBSTR::~CComBSTR
PUBLIC	?Length@CComBSTR@ATL@@QBEIXZ			; ATL::CComBSTR::Length
PUBLIC	??BCComBSTR@ATL@@QBEPA_WXZ			; ATL::CComBSTR::operator wchar_t *
PUBLIC	??ICComBSTR@ATL@@QAEPAPA_WXZ			; ATL::CComBSTR::operator&
PUBLIC	?Attach@CComBSTR@ATL@@QAEXPA_W@Z		; ATL::CComBSTR::Attach
PUBLIC	?Detach@CComBSTR@ATL@@QAEPA_WXZ			; ATL::CComBSTR::Detach
PUBLIC	?Empty@CComBSTR@ATL@@QAEXXZ			; ATL::CComBSTR::Empty
PUBLIC	??7CComBSTR@ATL@@QBE_NXZ			; ATL::CComBSTR::operator!
PUBLIC	??9CComBSTR@ATL@@QBE_NH@Z			; ATL::CComBSTR::operator!=
PUBLIC	??8CComBSTR@ATL@@QBE_NH@Z			; ATL::CComBSTR::operator==
PUBLIC	?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z	; ATL::CComBSTR::WriteToStream
PUBLIC	?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z ; ATL::CComBSTR::ReadFromStream
PUBLIC	?GetStreamSize@CComBSTR@ATL@@SAKPA_W@Z		; ATL::CComBSTR::GetStreamSize
PUBLIC	??0CComVariant@ATL@@QAE@XZ			; ATL::CComVariant::CComVariant
PUBLIC	??1CComVariant@ATL@@QAE@XZ			; ATL::CComVariant::~CComVariant
PUBLIC	?Clear@CComVariant@ATL@@QAEJXZ			; ATL::CComVariant::Clear
PUBLIC	?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z ; ATL::CComVariant::ChangeType
PUBLIC	?WriteToStream@CComVariant@ATL@@QAEJPAUIStream@@@Z ; ATL::CComVariant::WriteToStream
PUBLIC	?WriteToStream@CComVariant@ATL@@QAEJPAUIStream@@G@Z ; ATL::CComVariant::WriteToStream
PUBLIC	?ReadFromStream@CComVariant@ATL@@QAEJPAUIStream@@GTClassesAllowedInStream@2@K@Z ; ATL::CComVariant::ReadFromStream
PUBLIC	?GetSizeMax@CComVariant@ATL@@QBEJPAT_ULARGE_INTEGER@@@Z ; ATL::CComVariant::GetSizeMax
PUBLIC	??0?$CComPtrBase@UIPersistStream@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IPersistStream>::CComPtrBase<IPersistStream>
PUBLIC	??1?$CComPtrBase@UIPersistStream@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IPersistStream>::~CComPtrBase<IPersistStream>
PUBLIC	??B?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ ; ATL::CComPtrBase<IPersistStream>::operator IPersistStream *
PUBLIC	??I?$CComPtrBase@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ ; ATL::CComPtrBase<IPersistStream>::operator&
PUBLIC	??C?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStream@@@1@XZ ; ATL::CComPtrBase<IPersistStream>::operator->
PUBLIC	??9?$CComPtrBase@UIPersistStream@@@ATL@@QBE_NPAUIPersistStream@@@Z ; ATL::CComPtrBase<IPersistStream>::operator!=
PUBLIC	??8?$CComPtrBase@UIPersistStream@@@ATL@@QBE_NPAUIPersistStream@@@Z ; ATL::CComPtrBase<IPersistStream>::operator==
PUBLIC	?Detach@?$CComPtrBase@UIPersistStream@@@ATL@@QAEPAUIPersistStream@@XZ ; ATL::CComPtrBase<IPersistStream>::Detach
PUBLIC	??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ	; ATL::CComPtr<IPersistStream>::CComPtr<IPersistStream>
PUBLIC	??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ	; ATL::CComPtr<IPersistStream>::~CComPtr<IPersistStream>
PUBLIC	??$AtlAdd@_K@ATL@@YAJPA_K_K1@Z			; ATL::AtlAdd<unsigned __int64>
PUBLIC	??$QueryInterface@UIPersistStream@@@IUnknown@@QAGJPAPAUIPersistStream@@@Z ; IUnknown::QueryInterface<IPersistStream>
PUBLIC	??0IRegistrarBase@@QAE@XZ			; IRegistrarBase::IRegistrarBase
PUBLIC	?RegCreateKeyExW@CAtlTransactionManager@ATL@@QAEJPAUHKEY__@@PB_WKPA_WKKQAU_SECURITY_ATTRIBUTES@@PAPAU3@PAK@Z ; ATL::CAtlTransactionManager::RegCreateKeyExW
PUBLIC	?RegOpenKeyExW@CAtlTransactionManager@ATL@@QAEJPAUHKEY__@@PB_WKKPAPAU3@@Z ; ATL::CAtlTransactionManager::RegOpenKeyExW
PUBLIC	?RegDeleteKeyW@CAtlTransactionManager@ATL@@QAEJPAUHKEY__@@PB_W@Z ; ATL::CAtlTransactionManager::RegDeleteKeyW
PUBLIC	?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z	; ATL::CComMultiThreadModel::Increment
PUBLIC	?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z	; ATL::CComMultiThreadModel::Decrement
PUBLIC	?Increment@CComSingleThreadModel@ATL@@SGKPAJ@Z	; ATL::CComSingleThreadModel::Increment
PUBLIC	?Decrement@CComSingleThreadModel@ATL@@SGKPAJ@Z	; ATL::CComSingleThreadModel::Decrement
PUBLIC	??0_ATL_COM_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
PUBLIC	??1_ATL_COM_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
PUBLIC	??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
PUBLIC	?Add@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEHABG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Add
PUBLIC	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
PUBLIC	??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
PUBLIC	?InternalSetAtIndex@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXHABG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::InternalSetAtIndex
PUBLIC	??0_ATL_WIN_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
PUBLIC	??1_ATL_WIN_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
PUBLIC	??0_ATL_MODULE70@ATL@@QAE@XZ			; ATL::_ATL_MODULE70::_ATL_MODULE70
PUBLIC	??1_ATL_MODULE70@ATL@@QAE@XZ			; ATL::_ATL_MODULE70::~_ATL_MODULE70
PUBLIC	?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z ; ATL::AtlInternalQueryInterface
PUBLIC	?AtlComModuleGetClassObject@ATL@@YGJPAU_ATL_COM_MODULE70@1@ABU_GUID@@1PAPAX@Z ; ATL::AtlComModuleGetClassObject
PUBLIC	?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z ; ATL::AtlRegisterClassCategoriesHelper
PUBLIC	?AtlGetPerUserRegistration@ATL@@YGJPA_N@Z	; ATL::AtlGetPerUserRegistration
PUBLIC	?AtlLoadTypeLib@ATL@@YGJPAUHINSTANCE__@@PB_WPAPA_WPAPAUITypeLib@@@Z ; ATL::AtlLoadTypeLib
PUBLIC	?AtlRegisterTypeLib@ATL@@YGJPAUHINSTANCE__@@PB_W@Z ; ATL::AtlRegisterTypeLib
PUBLIC	?AtlUnRegisterTypeLib@ATL@@YGJPAUHINSTANCE__@@PB_W@Z ; ATL::AtlUnRegisterTypeLib
PUBLIC	?AtlComModuleRegisterServer@ATL@@YGJPAU_ATL_COM_MODULE70@1@HPBU_GUID@@@Z ; ATL::AtlComModuleRegisterServer
PUBLIC	?AtlComModuleUnregisterServer@ATL@@YGJPAU_ATL_COM_MODULE70@1@HPBU_GUID@@@Z ; ATL::AtlComModuleUnregisterServer
PUBLIC	?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE70@1@P6GXK@ZK@Z ; ATL::AtlModuleAddTermFunc
PUBLIC	?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z	; ATL::AtlCallTermFunc
PUBLIC	?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
PUBLIC	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
PUBLIC	?AtlWinModuleAddCreateWndData@ATL@@YGXPAU_ATL_WIN_MODULE70@1@PAU_AtlCreateWndData@1@PAX@Z ; ATL::AtlWinModuleAddCreateWndData
PUBLIC	?AtlWinModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleExtractCreateWndData
PUBLIC	?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z	; ATL::InlineIsEqualUnknown
PUBLIC	??0CRegKey@ATL@@QAE@PAVCAtlTransactionManager@1@@Z ; ATL::CRegKey::CRegKey
PUBLIC	??0CRegKey@ATL@@QAE@PAUHKEY__@@@Z		; ATL::CRegKey::CRegKey
PUBLIC	??1CRegKey@ATL@@QAE@XZ				; ATL::CRegKey::~CRegKey
PUBLIC	??BCRegKey@ATL@@QBEPAUHKEY__@@XZ		; ATL::CRegKey::operator HKEY__ *
PUBLIC	?SetDWORDValue@CRegKey@ATL@@QAEJPB_WK@Z		; ATL::CRegKey::SetDWORDValue
PUBLIC	?SetStringValue@CRegKey@ATL@@QAEJPB_W0K@Z	; ATL::CRegKey::SetStringValue
PUBLIC	?SetMultiStringValue@CRegKey@ATL@@QAEJPB_W0@Z	; ATL::CRegKey::SetMultiStringValue
PUBLIC	?atlCreate@CRegKey@ATL@@QAEJPAUHKEY__@@PB_WPA_WKKPAU_SECURITY_ATTRIBUTES@@PAK@Z ; ATL::CRegKey::atlCreate
PUBLIC	?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PB_WK@Z	; ATL::CRegKey::Open
PUBLIC	?Close@CRegKey@ATL@@QAEJXZ			; ATL::CRegKey::Close
PUBLIC	?Detach@CRegKey@ATL@@QAEPAUHKEY__@@XZ		; ATL::CRegKey::Detach
PUBLIC	?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z		; ATL::CRegKey::Attach
PUBLIC	?DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z		; ATL::CRegKey::DeleteSubKey
PUBLIC	?RecurseDeleteKey@CRegKey@ATL@@QAEJPB_W@Z	; ATL::CRegKey::RecurseDeleteKey
PUBLIC	?DeleteValue@CRegKey@ATL@@QAEJPB_W@Z		; ATL::CRegKey::DeleteValue
PUBLIC	??0CAtlComModule@ATL@@QAE@XZ			; ATL::CAtlComModule::CAtlComModule
PUBLIC	??1CAtlComModule@ATL@@QAE@XZ			; ATL::CAtlComModule::~CAtlComModule
PUBLIC	?Term@CAtlComModule@ATL@@QAEXXZ			; ATL::CAtlComModule::Term
PUBLIC	?RegisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CAtlComModule::RegisterServer
PUBLIC	?UnregisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CAtlComModule::UnregisterServer
PUBLIC	??0CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::CAtlWinModule
PUBLIC	??1CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::~CAtlWinModule
PUBLIC	?Term@CAtlWinModule@ATL@@QAEXXZ			; ATL::CAtlWinModule::Term
PUBLIC	?AddCreateWndData@CAtlWinModule@ATL@@QAEXPAU_AtlCreateWndData@2@PAX@Z ; ATL::CAtlWinModule::AddCreateWndData
PUBLIC	?ExtractCreateWndData@CAtlWinModule@ATL@@QAEPAXXZ ; ATL::CAtlWinModule::ExtractCreateWndData
PUBLIC	??0CAtlModule@ATL@@QAE@XZ			; ATL::CAtlModule::CAtlModule
PUBLIC	?Term@CAtlModule@ATL@@QAEXXZ			; ATL::CAtlModule::Term
PUBLIC	??1CAtlModule@ATL@@UAE@XZ			; ATL::CAtlModule::~CAtlModule
PUBLIC	?Lock@CAtlModule@ATL@@UAEJXZ			; ATL::CAtlModule::Lock
PUBLIC	?Unlock@CAtlModule@ATL@@UAEJXZ			; ATL::CAtlModule::Unlock
PUBLIC	?GetLockCount@CAtlModule@ATL@@UAEJXZ		; ATL::CAtlModule::GetLockCount
PUBLIC	?AddTermFunc@CAtlModule@ATL@@QAEJP6GXK@ZK@Z	; ATL::CAtlModule::AddTermFunc
PUBLIC	?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z ; ATL::CAtlModule::GetGITPtr
PUBLIC	?UpdateRegistryFromResource@CAtlModule@ATL@@QAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CAtlModule::UpdateRegistryFromResource
PUBLIC	?UpdateRegistryFromResource@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CAtlModule::UpdateRegistryFromResource
PUBLIC	?EscapeSingleQuote@CAtlModule@ATL@@SAXPA_WIPB_W@Z ; ATL::CAtlModule::EscapeSingleQuote
PUBLIC	??0?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAE@XZ	; ATL::CAtlModuleT<ATL::CComModule>::CAtlModuleT<ATL::CComModule>
PUBLIC	?InitLibId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAXXZ ; ATL::CAtlModuleT<ATL::CComModule>::InitLibId
PUBLIC	?RegisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CAtlModuleT<ATL::CComModule>::RegisterServer
PUBLIC	?UnregisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CAtlModuleT<ATL::CComModule>::UnregisterServer
PUBLIC	?AddCommonRGSReplacements@?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAEJPAUIRegistrarBase@@@Z ; ATL::CAtlModuleT<ATL::CComModule>::AddCommonRGSReplacements
PUBLIC	?GetAppId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAPB_WXZ ; ATL::CAtlModuleT<ATL::CComModule>::GetAppId
PUBLIC	??1?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAE@XZ	; ATL::CAtlModuleT<ATL::CComModule>::~CAtlModuleT<ATL::CComModule>
PUBLIC	??0CComModule@ATL@@QAE@XZ			; ATL::CComModule::CComModule
PUBLIC	??1CComModule@ATL@@UAE@XZ			; ATL::CComModule::~CComModule
PUBLIC	?Init@CComModule@ATL@@QAEJPAU_ATL_OBJMAP_ENTRY30@2@PAUHINSTANCE__@@PBU_GUID@@@Z ; ATL::CComModule::Init
PUBLIC	?Term@CComModule@ATL@@QAEXXZ			; ATL::CComModule::Term
PUBLIC	?GetClassObject@CComModule@ATL@@QAEJABU_GUID@@0PAPAX@Z ; ATL::CComModule::GetClassObject
PUBLIC	?RegisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CComModule::RegisterServer
PUBLIC	?UnregisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CComModule::UnregisterServer
PUBLIC	?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CComModule::UpdateRegistryFromResourceD
PUBLIC	?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CComModule::UpdateRegistryFromResourceD
PUBLIC	?UpdateRegistryFromResource@CComModule@ATL@@UAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CComModule::UpdateRegistryFromResource
PUBLIC	?UpdateRegistryFromResource@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CComModule::UpdateRegistryFromResource
PUBLIC	??_GCComModule@ATL@@UAEPAXI@Z			; ATL::CComModule::`scalar deleting destructor'
PUBLIC	?IsEqualKey@CExpansionVectorEqualHelper@ATL@@SA_NQA_W0@Z ; ATL::CExpansionVectorEqualHelper::IsEqualKey
PUBLIC	??0?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>
PUBLIC	??1?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::~CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>
PUBLIC	?GetSize@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHXZ ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::GetSize
PUBLIC	?Add@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEHABQA_W0@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Add
PUBLIC	?RemoveAll@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::RemoveAll
PUBLIC	?Lookup@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEPA_WABQA_W@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Lookup
PUBLIC	?GetKeyAt@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPA_WH@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::GetKeyAt
PUBLIC	?GetValueAt@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPA_WH@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::GetValueAt
PUBLIC	?FindKey@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHABQA_W@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::FindKey
PUBLIC	?InternalSetAtIndex@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXHABQA_W0@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::InternalSetAtIndex
PUBLIC	??1CExpansionVector@ATL@@QAE@XZ			; ATL::CExpansionVector::~CExpansionVector
PUBLIC	?Add@CExpansionVector@ATL@@QAEHPB_W0@Z		; ATL::CExpansionVector::Add
PUBLIC	?ClearReplacements@CExpansionVector@ATL@@QAEJXZ	; ATL::CExpansionVector::ClearReplacements
PUBLIC	??0CExpansionVector@ATL@@QAE@XZ			; ATL::CExpansionVector::CExpansionVector
PUBLIC	??0?$CAutoVectorPtr@_W@ATL@@QAE@XZ		; ATL::CAutoVectorPtr<wchar_t>::CAutoVectorPtr<wchar_t>
PUBLIC	??1?$CAutoVectorPtr@_W@ATL@@QAE@XZ		; ATL::CAutoVectorPtr<wchar_t>::~CAutoVectorPtr<wchar_t>
PUBLIC	?Attach@?$CAutoVectorPtr@_W@ATL@@QAEXPA_W@Z	; ATL::CAutoVectorPtr<wchar_t>::Attach
PUBLIC	?Detach@?$CAutoVectorPtr@_W@ATL@@QAEPA_WXZ	; ATL::CAutoVectorPtr<wchar_t>::Detach
PUBLIC	?Free@?$CAutoVectorPtr@_W@ATL@@QAEXXZ		; ATL::CAutoVectorPtr<wchar_t>::Free
PUBLIC	??0CRegParser@ATL@@QAE@PAVCRegObject@1@@Z	; ATL::CRegParser::CRegParser
PUBLIC	?PreProcessBuffer@CRegParser@ATL@@QAEJPA_WPAPA_W@Z ; ATL::CRegParser::PreProcessBuffer
PUBLIC	?RegisterBuffer@CRegParser@ATL@@QAEJPA_WH@Z	; ATL::CRegParser::RegisterBuffer
PUBLIC	?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ		; ATL::CRegParser::SkipWhiteSpace
PUBLIC	?NextToken@CRegParser@ATL@@IAEJPA_W@Z		; ATL::CRegParser::NextToken
PUBLIC	?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PB_WPA_W@Z ; ATL::CRegParser::AddValue
PUBLIC	?CanForceRemoveKey@CRegParser@ATL@@IAEHPB_W@Z	; ATL::CRegParser::CanForceRemoveKey
PUBLIC	?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z	; ATL::CRegParser::HasSubKeys
PUBLIC	?RegisterSubkeys@CRegParser@ATL@@IAEJPA_WPAUHKEY__@@HH@Z ; ATL::CRegParser::RegisterSubkeys
PUBLIC	?IsSpace@CRegParser@ATL@@IAEH_W@Z		; ATL::CRegParser::IsSpace
PUBLIC	?GenerateError@CRegParser@ATL@@IAEJI@Z		; ATL::CRegParser::GenerateError
PUBLIC	?SkipAssignment@CRegParser@ATL@@IAEJPA_W@Z	; ATL::CRegParser::SkipAssignment
PUBLIC	?EndOfVar@CRegParser@ATL@@IAEHXZ		; ATL::CRegParser::EndOfVar
PUBLIC	?StrChrW@CRegParser@ATL@@KAPA_WPA_W_W@Z		; ATL::CRegParser::StrChrW
PUBLIC	?HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PA_W@Z ; ATL::CRegParser::HKeyFromString
PUBLIC	?ChToByte@CRegParser@ATL@@KAE_W@Z		; ATL::CRegParser::ChToByte
PUBLIC	?VTFromRegType@CRegParser@ATL@@KAHPB_WAAG@Z	; ATL::CRegParser::VTFromRegType
PUBLIC	??0CParseBuffer@CRegParser@ATL@@QAE@H@Z		; ATL::CRegParser::CParseBuffer::CParseBuffer
PUBLIC	??1CParseBuffer@CRegParser@ATL@@QAE@XZ		; ATL::CRegParser::CParseBuffer::~CParseBuffer
PUBLIC	?Append@CParseBuffer@CRegParser@ATL@@QAEHPB_WH@Z ; ATL::CRegParser::CParseBuffer::Append
PUBLIC	?AddChar@CParseBuffer@CRegParser@ATL@@QAEHPB_W@Z ; ATL::CRegParser::CParseBuffer::AddChar
PUBLIC	?AddString@CParseBuffer@CRegParser@ATL@@QAEHPB_W@Z ; ATL::CRegParser::CParseBuffer::AddString
PUBLIC	?Detach@CParseBuffer@CRegParser@ATL@@QAEPA_WXZ	; ATL::CRegParser::CParseBuffer::Detach
PUBLIC	?QueryInterface@CRegObject@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CRegObject::QueryInterface
PUBLIC	?AddRef@CRegObject@ATL@@UAGKXZ			; ATL::CRegObject::AddRef
PUBLIC	?Release@CRegObject@ATL@@UAGKXZ			; ATL::CRegObject::Release
PUBLIC	??1CRegObject@ATL@@UAE@XZ			; ATL::CRegObject::~CRegObject
PUBLIC	?FinalConstruct@CRegObject@ATL@@QAEJXZ		; ATL::CRegObject::FinalConstruct
PUBLIC	?AddReplacement@CRegObject@ATL@@UAGJPB_W0@Z	; ATL::CRegObject::AddReplacement
PUBLIC	?ClearReplacements@CRegObject@ATL@@UAGJXZ	; ATL::CRegObject::ClearReplacements
PUBLIC	?StrFromMap@CRegObject@ATL@@QAEPB_WPA_W@Z	; ATL::CRegObject::StrFromMap
PUBLIC	?ResourceRegister@CRegObject@ATL@@QAGJPB_WI0@Z	; ATL::CRegObject::ResourceRegister
PUBLIC	?ResourceRegisterSz@CRegObject@ATL@@QAGJPB_W00@Z ; ATL::CRegObject::ResourceRegisterSz
PUBLIC	?ResourceUnregister@CRegObject@ATL@@QAGJPB_WI0@Z ; ATL::CRegObject::ResourceUnregister
PUBLIC	?ResourceUnregisterSz@CRegObject@ATL@@QAGJPB_W00@Z ; ATL::CRegObject::ResourceUnregisterSz
PUBLIC	?RegisterFromResource@CRegObject@ATL@@IAEJPB_W00H@Z ; ATL::CRegObject::RegisterFromResource
PUBLIC	??0CRegObject@ATL@@QAE@XZ			; ATL::CRegObject::CRegObject
PUBLIC	??_GCRegObject@ATL@@UAEPAXI@Z			; ATL::CRegObject::`scalar deleting destructor'
PUBLIC	??0?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>
PUBLIC	??1?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::~CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>
PUBLIC	??B?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::operator wchar_t *
PUBLIC	?Allocate@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::Allocate
PUBLIC	?AllocateBytes@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?AllocateHeap@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::AllocateHeap
PUBLIC	?FreeHeap@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::FreeHeap
PUBLIC	??0?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>
PUBLIC	??1?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::~CTempBuffer<wchar_t,256,ATL::CCRTAllocator>
PUBLIC	??B?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::operator wchar_t *
PUBLIC	?Allocate@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::Allocate
PUBLIC	?AllocateBytes@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?AllocateHeap@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::AllocateHeap
PUBLIC	?FreeHeap@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::FreeHeap
PUBLIC	??0?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>
PUBLIC	??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::~CTempBuffer<unsigned char,256,ATL::CCRTAllocator>
PUBLIC	??B?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPAEXZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::operator unsigned char *
PUBLIC	?Allocate@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::Allocate
PUBLIC	?AllocateBytes@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?AllocateHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::AllocateHeap
PUBLIC	?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::FreeHeap
PUBLIC	??0?$CComPtrBase@UICatRegister@@@ATL@@IAE@XZ	; ATL::CComPtrBase<ICatRegister>::CComPtrBase<ICatRegister>
PUBLIC	??1?$CComPtrBase@UICatRegister@@@ATL@@QAE@XZ	; ATL::CComPtrBase<ICatRegister>::~CComPtrBase<ICatRegister>
PUBLIC	??I?$CComPtrBase@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ ; ATL::CComPtrBase<ICatRegister>::operator&
PUBLIC	??C?$CComPtrBase@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ ; ATL::CComPtrBase<ICatRegister>::operator->
PUBLIC	??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ	; ATL::CComPtr<ICatRegister>::CComPtr<ICatRegister>
PUBLIC	??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ	; ATL::CComPtr<ICatRegister>::~CComPtr<ICatRegister>
PUBLIC	??0?$CComPtrBase@UITypeLib@@@ATL@@IAE@XZ	; ATL::CComPtrBase<ITypeLib>::CComPtrBase<ITypeLib>
PUBLIC	??1?$CComPtrBase@UITypeLib@@@ATL@@QAE@XZ	; ATL::CComPtrBase<ITypeLib>::~CComPtrBase<ITypeLib>
PUBLIC	??B?$CComPtrBase@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ ; ATL::CComPtrBase<ITypeLib>::operator ITypeLib *
PUBLIC	??I?$CComPtrBase@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ ; ATL::CComPtrBase<ITypeLib>::operator&
PUBLIC	??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ ; ATL::CComPtrBase<ITypeLib>::operator->
PUBLIC	??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ		; ATL::CComPtr<ITypeLib>::CComPtr<ITypeLib>
PUBLIC	??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ		; ATL::CComPtr<ITypeLib>::~CComPtr<ITypeLib>
PUBLIC	??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>
PUBLIC	??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
PUBLIC	?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
PUBLIC	?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Unlock
PUBLIC	??0?$CComPtrBase@UIConnectionPointContainer@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::CComPtrBase<IConnectionPointContainer>
PUBLIC	??1?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::~CComPtrBase<IConnectionPointContainer>
PUBLIC	??I?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::operator&
PUBLIC	??C?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::operator->
PUBLIC	??9?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBE_NPAUIConnectionPointContainer@@@Z ; ATL::CComPtrBase<IConnectionPointContainer>::operator!=
PUBLIC	??8?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBE_NPAUIConnectionPointContainer@@@Z ; ATL::CComPtrBase<IConnectionPointContainer>::operator==
PUBLIC	??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ ; ATL::CComPtr<IConnectionPointContainer>::CComPtr<IConnectionPointContainer>
PUBLIC	??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ ; ATL::CComPtr<IConnectionPointContainer>::~CComPtr<IConnectionPointContainer>
PUBLIC	??0?$CComPtrBase@UIConnectionPoint@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IConnectionPoint>::CComPtrBase<IConnectionPoint>
PUBLIC	??1?$CComPtrBase@UIConnectionPoint@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IConnectionPoint>::~CComPtrBase<IConnectionPoint>
PUBLIC	??I?$CComPtrBase@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ ; ATL::CComPtrBase<IConnectionPoint>::operator&
PUBLIC	??C?$CComPtrBase@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ ; ATL::CComPtrBase<IConnectionPoint>::operator->
PUBLIC	??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ	; ATL::CComPtr<IConnectionPoint>::CComPtr<IConnectionPoint>
PUBLIC	??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ	; ATL::CComPtr<IConnectionPoint>::~CComPtr<IConnectionPoint>
PUBLIC	?Init@CDynamicStdCallThunk2@ATL@@QAEHKPAX@Z	; ATL::CDynamicStdCallThunk2::Init
PUBLIC	?GetCodeAddress@CDynamicStdCallThunk2@ATL@@QAEPAXXZ ; ATL::CDynamicStdCallThunk2::GetCodeAddress
PUBLIC	??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@XZ	; ATL::CComPtrBase<ITypeInfo>::CComPtrBase<ITypeInfo>
PUBLIC	??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@PAUITypeInfo@@@Z ; ATL::CComPtrBase<ITypeInfo>::CComPtrBase<ITypeInfo>
PUBLIC	??1?$CComPtrBase@UITypeInfo@@@ATL@@QAE@XZ	; ATL::CComPtrBase<ITypeInfo>::~CComPtrBase<ITypeInfo>
PUBLIC	??B?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAUITypeInfo@@XZ ; ATL::CComPtrBase<ITypeInfo>::operator ITypeInfo *
PUBLIC	??I?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAPAUITypeInfo@@XZ ; ATL::CComPtrBase<ITypeInfo>::operator&
PUBLIC	??C?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeInfo@@@1@XZ ; ATL::CComPtrBase<ITypeInfo>::operator->
PUBLIC	?IsEqualObject@?$CComPtrBase@UITypeInfo@@@ATL@@QAE_NPAUIUnknown@@@Z ; ATL::CComPtrBase<ITypeInfo>::IsEqualObject
PUBLIC	?Detach@?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@XZ ; ATL::CComPtrBase<ITypeInfo>::Detach
PUBLIC	??0?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ		; ATL::CComPtr<ITypeInfo>::CComPtr<ITypeInfo>
PUBLIC	??0?$CComPtr@UITypeInfo@@@ATL@@QAE@ABV01@@Z	; ATL::CComPtr<ITypeInfo>::CComPtr<ITypeInfo>
PUBLIC	??1?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ		; ATL::CComPtr<ITypeInfo>::~CComPtr<ITypeInfo>
PUBLIC	?AtlIPersistStreamInit_Load@ATL@@YGJPAUIStream@@PBUATL_PROPMAP_ENTRY@1@PAXPAUIUnknown@@@Z ; ATL::AtlIPersistStreamInit_Load
PUBLIC	?AtlIPersistStreamInit_Save@ATL@@YGJPAUIStream@@HPBUATL_PROPMAP_ENTRY@1@PAXPAUIUnknown@@@Z ; ATL::AtlIPersistStreamInit_Save
PUBLIC	??0CComObjectRootBase@ATL@@QAE@XZ		; ATL::CComObjectRootBase::CComObjectRootBase
PUBLIC	??1CComObjectRootBase@ATL@@QAE@XZ		; ATL::CComObjectRootBase::~CComObjectRootBase
PUBLIC	?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ	; ATL::CComObjectRootBase::FinalConstruct
PUBLIC	?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::_AtlFinalConstruct
PUBLIC	?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ	; ATL::CComObjectRootBase::FinalRelease
PUBLIC	?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z ; ATL::CComObjectRootBase::InternalQueryInterface
PUBLIC	?OuterAddRef@CComObjectRootBase@ATL@@QAEKXZ	; ATL::CComObjectRootBase::OuterAddRef
PUBLIC	?OuterRelease@CComObjectRootBase@ATL@@QAEKXZ	; ATL::CComObjectRootBase::OuterRelease
PUBLIC	?OuterQueryInterface@CComObjectRootBase@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComObjectRootBase::OuterQueryInterface
PUBLIC	?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z	; ATL::CComObjectRootBase::SetVoid
PUBLIC	?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructAddRef
PUBLIC	?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructRelease
PUBLIC	??1?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::~CComObjectRootEx<ATL::CComSingleThreadModel>
PUBLIC	?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef
PUBLIC	?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease
PUBLIC	?_AtlInitialConstruct@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEJXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::_AtlInitialConstruct
PUBLIC	?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock
PUBLIC	?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock
PUBLIC	??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::CComObjectRootEx<ATL::CComSingleThreadModel>
PUBLIC	??0ModuleLockHelper@ATL@@QAE@XZ			; ATL::ModuleLockHelper::ModuleLockHelper
PUBLIC	??1ModuleLockHelper@ATL@@QAE@XZ			; ATL::ModuleLockHelper::~ModuleLockHelper
PUBLIC	??1?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::~CComObjectRootEx<ATL::CComMultiThreadModel>
PUBLIC	?InternalAddRef@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalAddRef
PUBLIC	?InternalRelease@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalRelease
PUBLIC	?_AtlInitialConstruct@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEJXZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::_AtlInitialConstruct
PUBLIC	??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::CComObjectRootEx<ATL::CComMultiThreadModel>
PUBLIC	?_InternalQueryInterface@CComClassFactory@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComClassFactory::_InternalQueryInterface
PUBLIC	?_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ; ATL::CComClassFactory::_GetEntries
PUBLIC	??1CComClassFactory@ATL@@UAE@XZ			; ATL::CComClassFactory::~CComClassFactory
PUBLIC	?CreateInstance@CComClassFactory@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z ; ATL::CComClassFactory::CreateInstance
PUBLIC	?LockServer@CComClassFactory@ATL@@UAGJH@Z	; ATL::CComClassFactory::LockServer
PUBLIC	?SetVoid@CComClassFactory@ATL@@QAEXPAX@Z	; ATL::CComClassFactory::SetVoid
PUBLIC	??0CComClassFactory@ATL@@QAE@XZ			; ATL::CComClassFactory::CComClassFactory
PUBLIC	??_GCComClassFactory@ATL@@UAEPAXI@Z		; ATL::CComClassFactory::`scalar deleting destructor'
PUBLIC	??0stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ	; ATL::CComTypeInfoHolder::stringdispid::stringdispid
PUBLIC	??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid
PUBLIC	??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z ; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor'
PUBLIC	?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z ; ATL::CComTypeInfoHolder::GetTI
PUBLIC	?GetTI@CComTypeInfoHolder@ATL@@QAEJK@Z		; ATL::CComTypeInfoHolder::GetTI
PUBLIC	?EnsureTI@CComTypeInfoHolder@ATL@@QAEJK@Z	; ATL::CComTypeInfoHolder::EnsureTI
PUBLIC	?Cleanup@CComTypeInfoHolder@ATL@@SGXK@Z		; ATL::CComTypeInfoHolder::Cleanup
PUBLIC	?GetTypeInfo@CComTypeInfoHolder@ATL@@QAEJIKPAPAUITypeInfo@@@Z ; ATL::CComTypeInfoHolder::GetTypeInfo
PUBLIC	?GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPA_WIKPAJ@Z ; ATL::CComTypeInfoHolder::GetIDsOfNames
PUBLIC	?Invoke@CComTypeInfoHolder@ATL@@QAEJPAUIDispatch@@JABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ; ATL::CComTypeInfoHolder::Invoke
PUBLIC	?LoadNameCache@CComTypeInfoHolder@ATL@@QAEJPAUITypeInfo@@@Z ; ATL::CComTypeInfoHolder::LoadNameCache
PUBLIC	??0?$CComPtrBase@UITypeInfo2@@@ATL@@IAE@XZ	; ATL::CComPtrBase<ITypeInfo2>::CComPtrBase<ITypeInfo2>
PUBLIC	??1?$CComPtrBase@UITypeInfo2@@@ATL@@QAE@XZ	; ATL::CComPtrBase<ITypeInfo2>::~CComPtrBase<ITypeInfo2>
PUBLIC	??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ ; ATL::CComPtrBase<ITypeInfo2>::operator ITypeInfo2 *
PUBLIC	??I?$CComPtrBase@UITypeInfo2@@@ATL@@QAEPAPAUITypeInfo2@@XZ ; ATL::CComPtrBase<ITypeInfo2>::operator&
PUBLIC	??0?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ		; ATL::CComPtr<ITypeInfo2>::CComPtr<ITypeInfo2>
PUBLIC	??1?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ		; ATL::CComPtr<ITypeInfo2>::~CComPtr<ITypeInfo2>
PUBLIC	??$QueryInterface@UITypeInfo2@@@IUnknown@@QAGJPAPAUITypeInfo2@@@Z ; IUnknown::QueryInterface<ITypeInfo2>
PUBLIC	??$?4UITypeInfo2@@@?$CComPtr@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@ABV?$CComPtr@UITypeInfo2@@@1@@Z ; ATL::CComPtr<ITypeInfo>::operator=<ITypeInfo2>
PUBLIC	?copy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAJPAUtagCONNECTDATA@@PBU3@@Z ; ATL::_Copy<tagCONNECTDATA>::copy
PUBLIC	?init@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPAUtagCONNECTDATA@@@Z ; ATL::_Copy<tagCONNECTDATA>::init
PUBLIC	?destroy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPAUtagCONNECTDATA@@@Z ; ATL::_Copy<tagCONNECTDATA>::destroy
PUBLIC	?Add@CComDynamicUnkArray@ATL@@QAEKPAUIUnknown@@@Z ; ATL::CComDynamicUnkArray::Add
PUBLIC	?Remove@CComDynamicUnkArray@ATL@@QAEHK@Z	; ATL::CComDynamicUnkArray::Remove
PUBLIC	?GetCookie@CComDynamicUnkArray@ATL@@QAGKPAPAUIUnknown@@@Z ; ATL::CComDynamicUnkArray::GetCookie
PUBLIC	?GetUnknown@CComDynamicUnkArray@ATL@@QAGPAUIUnknown@@K@Z ; ATL::CComDynamicUnkArray::GetUnknown
PUBLIC	?begin@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::begin
PUBLIC	?end@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::end
PUBLIC	?GetAt@CComDynamicUnkArray@ATL@@QAEPAUIUnknown@@H@Z ; ATL::CComDynamicUnkArray::GetAt
PUBLIC	?GetSize@CComDynamicUnkArray@ATL@@QBEHXZ	; ATL::CComDynamicUnkArray::GetSize
PUBLIC	??0?$CComPtrBase@UIProvideClassInfo2@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IProvideClassInfo2>::CComPtrBase<IProvideClassInfo2>
PUBLIC	??1?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IProvideClassInfo2>::~CComPtrBase<IProvideClassInfo2>
PUBLIC	??B?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QBEPAUIProvideClassInfo2@@XZ ; ATL::CComPtrBase<IProvideClassInfo2>::operator IProvideClassInfo2 *
PUBLIC	??I?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QAEPAPAUIProvideClassInfo2@@XZ ; ATL::CComPtrBase<IProvideClassInfo2>::operator&
PUBLIC	??C?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIProvideClassInfo2@@@1@XZ ; ATL::CComPtrBase<IProvideClassInfo2>::operator->
PUBLIC	??0?$CComPtr@UIProvideClassInfo2@@@ATL@@QAE@XZ	; ATL::CComPtr<IProvideClassInfo2>::CComPtr<IProvideClassInfo2>
PUBLIC	??1?$CComPtr@UIProvideClassInfo2@@@ATL@@QAE@XZ	; ATL::CComPtr<IProvideClassInfo2>::~CComPtr<IProvideClassInfo2>
PUBLIC	?SetWindowLongPtrW@@YAJPAUHWND__@@HJ@Z		; SetWindowLongPtrW
PUBLIC	?GetWindowLongPtrW@@YAJPAUHWND__@@H@Z		; GetWindowLongPtrW
PUBLIC	??0_U_RECT@ATL@@QAE@AAUtagRECT@@@Z		; ATL::_U_RECT::_U_RECT
PUBLIC	??0_U_MENUorID@ATL@@QAE@I@Z			; ATL::_U_MENUorID::_U_MENUorID
PUBLIC	?AtlWinModuleRegisterWndClassInfoW@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PAU_ATL_BASE_MODULE70@1@PAU_ATL_WNDCLASSINFOW@1@PAP6GJPAUHWND__@@IIJ@Z@Z ; ATL::AtlWinModuleRegisterWndClassInfoW
PUBLIC	?AtlWinModuleRegisterClassExW@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PBUtagWNDCLASSEXW@@@Z ; ATL::AtlWinModuleRegisterClassExW
PUBLIC	?AtlCreateTargetDC@ATL@@YGPAUHDC__@@PAU2@PAUtagDVTARGETDEVICE@@@Z ; ATL::AtlCreateTargetDC
PUBLIC	?AtlHiMetricToPixel@ATL@@YGXPBUtagSIZE@@PAU2@@Z	; ATL::AtlHiMetricToPixel
PUBLIC	??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z		; ATL::_ATL_MSG::_ATL_MSG
PUBLIC	?Register@_ATL_WNDCLASSINFOW@ATL@@QAEGPAP6GJPAUHWND__@@IIJ@Z@Z ; ATL::_ATL_WNDCLASSINFOW::Register
PUBLIC	?GetWndClassName@CWindow@ATL@@SAPB_WXZ		; ATL::CWindow::GetWndClassName
PUBLIC	?ShowWindow@CWindow@ATL@@QAEHH@Z		; ATL::CWindow::ShowWindow
PUBLIC	?Init@CWndProcThunk@ATL@@QAEHP6GJPAUHWND__@@IIJ@ZPAX@Z ; ATL::CWndProcThunk::Init
PUBLIC	?GetWNDPROC@CWndProcThunk@ATL@@QAEP6GJPAUHWND__@@IIJ@ZXZ ; ATL::CWndProcThunk::GetWNDPROC
PUBLIC	?DefaultReflectionHandler@?$CWindowImplRoot@VCWindow@ATL@@@ATL@@SAHPAUHWND__@@IIJAAJ@Z ; ATL::CWindowImplRoot<ATL::CWindow>::DefaultReflectionHandler
PUBLIC	?GetWndStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndStyle
PUBLIC	?GetWndExStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndExStyle
PUBLIC	?GetWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEP6GJPAUHWND__@@IIJ@ZXZ ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWindowProc
PUBLIC	?StartWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::StartWindowProc
PUBLIC	?WindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::WindowProc
PUBLIC	?atlCreate@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PB_WKKV_U_MENUorID@2@GPAX@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::atlCreate
PUBLIC	?DefWindowProcW@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DefWindowProcW
PUBLIC	?OnFinalMessage@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEXPAUHWND__@@@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::OnFinalMessage
PUBLIC	??0?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::CComPtrBase<IOleInPlaceActiveObject>
PUBLIC	??1?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::~CComPtrBase<IOleInPlaceActiveObject>
PUBLIC	??B?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAUIOleInPlaceActiveObject@@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator IOleInPlaceActiveObject *
PUBLIC	??I?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAEPAPAUIOleInPlaceActiveObject@@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator&
PUBLIC	??0?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceActiveObject>::CComPtr<IOleInPlaceActiveObject>
PUBLIC	??1?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceActiveObject>::~CComPtr<IOleInPlaceActiveObject>
PUBLIC	??0?$CComPtrBase@UIOleObject@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IOleObject>::CComPtrBase<IOleObject>
PUBLIC	??1?$CComPtrBase@UIOleObject@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IOleObject>::~CComPtrBase<IOleObject>
PUBLIC	??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator IOleObject *
PUBLIC	??I?$CComPtrBase@UIOleObject@@@ATL@@QAEPAPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator&
PUBLIC	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
PUBLIC	??9?$CComPtrBase@UIOleObject@@@ATL@@QBE_NPAUIOleObject@@@Z ; ATL::CComPtrBase<IOleObject>::operator!=
PUBLIC	??8?$CComPtrBase@UIOleObject@@@ATL@@QBE_NPAUIOleObject@@@Z ; ATL::CComPtrBase<IOleObject>::operator==
PUBLIC	??0?$CComPtr@UIOleObject@@@ATL@@QAE@XZ		; ATL::CComPtr<IOleObject>::CComPtr<IOleObject>
PUBLIC	??1?$CComPtr@UIOleObject@@@ATL@@QAE@XZ		; ATL::CComPtr<IOleObject>::~CComPtr<IOleObject>
PUBLIC	??0?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::CComPtrBase<IOleInPlaceFrame>
PUBLIC	??1?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::~CComPtrBase<IOleInPlaceFrame>
PUBLIC	??B?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAUIOleInPlaceFrame@@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::operator IOleInPlaceFrame *
PUBLIC	??I?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEPAPAUIOleInPlaceFrame@@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::operator&
PUBLIC	??C?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceFrame@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::operator->
PUBLIC	??0?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ	; ATL::CComPtr<IOleInPlaceFrame>::CComPtr<IOleInPlaceFrame>
PUBLIC	??1?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ	; ATL::CComPtr<IOleInPlaceFrame>::~CComPtr<IOleInPlaceFrame>
PUBLIC	??0?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::CComPtrBase<IOleInPlaceUIWindow>
PUBLIC	??1?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::~CComPtrBase<IOleInPlaceUIWindow>
PUBLIC	??B?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAUIOleInPlaceUIWindow@@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator IOleInPlaceUIWindow *
PUBLIC	??I?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEPAPAUIOleInPlaceUIWindow@@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator&
PUBLIC	??C?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceUIWindow@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator->
PUBLIC	??0?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ	; ATL::CComPtr<IOleInPlaceUIWindow>::CComPtr<IOleInPlaceUIWindow>
PUBLIC	??1?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ	; ATL::CComPtr<IOleInPlaceUIWindow>::~CComPtr<IOleInPlaceUIWindow>
PUBLIC	??0?$CComPtrBase@UIViewObjectEx@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IViewObjectEx>::CComPtrBase<IViewObjectEx>
PUBLIC	??1?$CComPtrBase@UIViewObjectEx@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IViewObjectEx>::~CComPtrBase<IViewObjectEx>
PUBLIC	??I?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEPAPAUIViewObjectEx@@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator&
PUBLIC	??C?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIViewObjectEx@@@1@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator->
PUBLIC	??9?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z ; ATL::CComPtrBase<IViewObjectEx>::operator!=
PUBLIC	??8?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z ; ATL::CComPtrBase<IViewObjectEx>::operator==
PUBLIC	??0?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ	; ATL::CComPtr<IViewObjectEx>::CComPtr<IViewObjectEx>
PUBLIC	??1?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ	; ATL::CComPtr<IViewObjectEx>::~CComPtr<IViewObjectEx>
PUBLIC	??0?$CComPtrBase@UIOleClientSite@@@ATL@@IAE@PAUIOleClientSite@@@Z ; ATL::CComPtrBase<IOleClientSite>::CComPtrBase<IOleClientSite>
PUBLIC	?Swap@?$CComPtrBase@UIOleClientSite@@@ATL@@IAEXAAV12@@Z ; ATL::CComPtrBase<IOleClientSite>::Swap
PUBLIC	??1?$CComPtrBase@UIOleClientSite@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IOleClientSite>::~CComPtrBase<IOleClientSite>
PUBLIC	??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
PUBLIC	??C?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleClientSite@@@1@XZ ; ATL::CComPtrBase<IOleClientSite>::operator->
PUBLIC	??7?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NXZ	; ATL::CComPtrBase<IOleClientSite>::operator!
PUBLIC	??9?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NPAUIOleClientSite@@@Z ; ATL::CComPtrBase<IOleClientSite>::operator!=
PUBLIC	??8?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NPAUIOleClientSite@@@Z ; ATL::CComPtrBase<IOleClientSite>::operator==
PUBLIC	?IsEqualObject@?$CComPtrBase@UIOleClientSite@@@ATL@@QAE_NPAUIUnknown@@@Z ; ATL::CComPtrBase<IOleClientSite>::IsEqualObject
PUBLIC	??0?$CComPtr@UIOleClientSite@@@ATL@@QAE@PAUIOleClientSite@@@Z ; ATL::CComPtr<IOleClientSite>::CComPtr<IOleClientSite>
PUBLIC	??4?$CComPtr@UIOleClientSite@@@ATL@@QAEPAUIOleClientSite@@PAU2@@Z ; ATL::CComPtr<IOleClientSite>::operator=
PUBLIC	??1?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ	; ATL::CComPtr<IOleClientSite>::~CComPtr<IOleClientSite>
PUBLIC	??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ		; ATL::CComPtrBase<IStream>::CComPtrBase<IStream>
PUBLIC	??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ		; ATL::CComPtrBase<IStream>::~CComPtrBase<IStream>
PUBLIC	??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator IStream *
PUBLIC	??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator&
PUBLIC	??0?$CComPtr@UIStream@@@ATL@@QAE@XZ		; ATL::CComPtr<IStream>::CComPtr<IStream>
PUBLIC	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ		; ATL::CComPtr<IStream>::~CComPtr<IStream>
PUBLIC	??0?$CComPtrBase@UIPersistStreamInit@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IPersistStreamInit>::CComPtrBase<IPersistStreamInit>
PUBLIC	??1?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IPersistStreamInit>::~CComPtrBase<IPersistStreamInit>
PUBLIC	??C?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStreamInit@@@1@XZ ; ATL::CComPtrBase<IPersistStreamInit>::operator->
PUBLIC	??9?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBE_NPAUIPersistStreamInit@@@Z ; ATL::CComPtrBase<IPersistStreamInit>::operator!=
PUBLIC	??8?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBE_NPAUIPersistStreamInit@@@Z ; ATL::CComPtrBase<IPersistStreamInit>::operator==
PUBLIC	??0?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ	; ATL::CComPtr<IPersistStreamInit>::CComPtr<IPersistStreamInit>
PUBLIC	??1?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ	; ATL::CComPtr<IPersistStreamInit>::~CComPtr<IPersistStreamInit>
PUBLIC	??0?$CComPtrBase@UIAdviseSink@@@ATL@@IAE@PAUIAdviseSink@@@Z ; ATL::CComPtrBase<IAdviseSink>::CComPtrBase<IAdviseSink>
PUBLIC	?Swap@?$CComPtrBase@UIAdviseSink@@@ATL@@IAEXAAV12@@Z ; ATL::CComPtrBase<IAdviseSink>::Swap
PUBLIC	??1?$CComPtrBase@UIAdviseSink@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IAdviseSink>::~CComPtrBase<IAdviseSink>
PUBLIC	??B?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAUIAdviseSink@@XZ ; ATL::CComPtrBase<IAdviseSink>::operator IAdviseSink *
PUBLIC	??C?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAdviseSink@@@1@XZ ; ATL::CComPtrBase<IAdviseSink>::operator->
PUBLIC	?Release@?$CComPtrBase@UIAdviseSink@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IAdviseSink>::Release
PUBLIC	??0?$CComPtr@UIAdviseSink@@@ATL@@QAE@PAUIAdviseSink@@@Z ; ATL::CComPtr<IAdviseSink>::CComPtr<IAdviseSink>
PUBLIC	??4?$CComPtr@UIAdviseSink@@@ATL@@QAEPAUIAdviseSink@@PAU2@@Z ; ATL::CComPtr<IAdviseSink>::operator=
PUBLIC	??1?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ		; ATL::CComPtr<IAdviseSink>::~CComPtr<IAdviseSink>
PUBLIC	?GetClassInfoExW@AtlModuleRegisterWndClassInfoParamW@ATL@@SAHPAUHINSTANCE__@@PB_WPAUtagWNDCLASSEXW@@@Z ; ATL::AtlModuleRegisterWndClassInfoParamW::GetClassInfoExW
PUBLIC	?FormatWindowClassName@AtlModuleRegisterWndClassInfoParamW@ATL@@SAXPA_WKPAX@Z ; ATL::AtlModuleRegisterWndClassInfoParamW::FormatWindowClassName
PUBLIC	?LoadCursorW@AtlModuleRegisterWndClassInfoParamW@ATL@@SAPAUHICON__@@PAUHINSTANCE__@@PB_W@Z ; ATL::AtlModuleRegisterWndClassInfoParamW::LoadCursorW
PUBLIC	?RegisterClassExW@AtlModuleRegisterWndClassInfoParamW@ATL@@SAGPAU_ATL_WIN_MODULE70@2@PBUtagWNDCLASSEXW@@@Z ; ATL::AtlModuleRegisterWndClassInfoParamW::RegisterClassExW
PUBLIC	??$AtlModuleRegisterWndClassInfoT@VAtlModuleRegisterWndClassInfoParamW@ATL@@@ATL@@YAGPAU_ATL_BASE_MODULE70@0@PAU_ATL_WIN_MODULE70@0@PAU_ATL_WNDCLASSINFOW@0@PAP6GJPAUHWND__@@IIJ@ZVAtlModuleRegisterWndClassInfoParamW@0@@Z ; ATL::AtlModuleRegisterWndClassInfoT<ATL::AtlModuleRegisterWndClassInfoParamW>
PUBLIC	?GetZoomInfo@CComControlBase@ATL@@QAEXAAUATL_DRAWINFO@@@Z ; ATL::CComControlBase::GetZoomInfo
PUBLIC	?SendOnSave@CComControlBase@ATL@@QAEJXZ		; ATL::CComControlBase::SendOnSave
PUBLIC	?SendOnDataChange@CComControlBase@ATL@@QAEJK@Z	; ATL::CComControlBase::SendOnDataChange
PUBLIC	?SendOnViewChange@CComControlBase@ATL@@QAEJKJ@Z	; ATL::CComControlBase::SendOnViewChange
PUBLIC	?OnSetFocus@CComControlBase@ATL@@QAEJIIJAAH@Z	; ATL::CComControlBase::OnSetFocus
PUBLIC	?OnKillFocus@CComControlBase@ATL@@QAEJIIJAAH@Z	; ATL::CComControlBase::OnKillFocus
PUBLIC	?OnMouseActivate@CComControlBase@ATL@@QAEJIIJAAH@Z ; ATL::CComControlBase::OnMouseActivate
PUBLIC	?PreTranslateAccelerator@CComControlBase@ATL@@QAEHPAUtagMSG@@AAJ@Z ; ATL::CComControlBase::PreTranslateAccelerator
PUBLIC	?GetAmbientProperty@CComControlBase@ATL@@QAEJJAAUtagVARIANT@@@Z ; ATL::CComControlBase::GetAmbientProperty
PUBLIC	?GetAmbientLocaleID@CComControlBase@ATL@@QAEJAAK@Z ; ATL::CComControlBase::GetAmbientLocaleID
PUBLIC	?GetAmbientUserMode@CComControlBase@ATL@@QAEJAAH@Z ; ATL::CComControlBase::GetAmbientUserMode
PUBLIC	?InternalGetSite@CComControlBase@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComControlBase::InternalGetSite
PUBLIC	?DoesVerbUIActivate@CComControlBase@ATL@@QAEHJ@Z ; ATL::CComControlBase::DoesVerbUIActivate
PUBLIC	?DoesVerbActivate@CComControlBase@ATL@@QAEHJ@Z	; ATL::CComControlBase::DoesVerbActivate
PUBLIC	?SetControlFocus@CComControlBase@ATL@@QAEHH@Z	; ATL::CComControlBase::SetControlFocus
PUBLIC	?IQuickActivate_QuickActivate@CComControlBase@ATL@@QAEJPAUtagQACONTAINER@@PAUtagQACONTROL@@@Z ; ATL::CComControlBase::IQuickActivate_QuickActivate
PUBLIC	?DoVerbProperties@CComControlBase@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::CComControlBase::DoVerbProperties
PUBLIC	?InPlaceActivate@CComControlBase@ATL@@QAEJJPBUtagRECT@@@Z ; ATL::CComControlBase::InPlaceActivate
PUBLIC	?IOleObject_SetClientSite@CComControlBase@ATL@@QAEJPAUIOleClientSite@@@Z ; ATL::CComControlBase::IOleObject_SetClientSite
PUBLIC	?IOleObject_GetClientSite@CComControlBase@ATL@@QAEJPAPAUIOleClientSite@@@Z ; ATL::CComControlBase::IOleObject_GetClientSite
PUBLIC	?IOleObject_Advise@CComControlBase@ATL@@QAEJPAUIAdviseSink@@PAK@Z ; ATL::CComControlBase::IOleObject_Advise
PUBLIC	?IOleObject_Close@CComControlBase@ATL@@QAEJK@Z	; ATL::CComControlBase::IOleObject_Close
PUBLIC	?IOleObject_SetExtent@CComControlBase@ATL@@QAEJKPAUtagSIZE@@@Z ; ATL::CComControlBase::IOleObject_SetExtent
PUBLIC	?IOleInPlaceObject_InPlaceDeactivate@CComControlBase@ATL@@QAEJXZ ; ATL::CComControlBase::IOleInPlaceObject_InPlaceDeactivate
PUBLIC	?IOleInPlaceObject_UIDeactivate@CComControlBase@ATL@@QAEJXZ ; ATL::CComControlBase::IOleInPlaceObject_UIDeactivate
PUBLIC	?IOleInPlaceObject_SetObjectRects@CComControlBase@ATL@@QAEJPBUtagRECT@@0@Z ; ATL::CComControlBase::IOleInPlaceObject_SetObjectRects
PUBLIC	?IViewObject_Draw@CComControlBase@ATL@@QAEJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3@Z ; ATL::CComControlBase::IViewObject_Draw
PUBLIC	?IDataObject_GetData@CComControlBase@ATL@@QAEJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z ; ATL::CComControlBase::IDataObject_GetData
PUBLIC	?FireViewChange@CComControlBase@ATL@@QAEJXZ	; ATL::CComControlBase::FireViewChange
PUBLIC	?OnPaint@CComControlBase@ATL@@QAEJIIJAAH@Z	; ATL::CComControlBase::OnPaint
PUBLIC	?OnDrawAdvanced@CComControlBase@ATL@@UAEJAAUATL_DRAWINFO@@@Z ; ATL::CComControlBase::OnDrawAdvanced
PUBLIC	??B?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAUIOleInPlaceSiteWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator IOleInPlaceSiteWindowless *
PUBLIC	??I?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QAEPAPAUIOleInPlaceSiteWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator&
PUBLIC	??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator->
PUBLIC	??7?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBE_NXZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator!
PUBLIC	??9?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBE_NPAUIOleInPlaceSiteWindowless@@@Z ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator!=
PUBLIC	??8?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBE_NPAUIOleInPlaceSiteWindowless@@@Z ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator==
PUBLIC	?Release@?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::Release
PUBLIC	??B?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBEPAUIDataAdviseHolder@@XZ ; ATL::CComPtrBase<IDataAdviseHolder>::operator IDataAdviseHolder *
PUBLIC	??I?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QAEPAPAUIDataAdviseHolder@@XZ ; ATL::CComPtrBase<IDataAdviseHolder>::operator&
PUBLIC	??C?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDataAdviseHolder@@@1@XZ ; ATL::CComPtrBase<IDataAdviseHolder>::operator->
PUBLIC	??9?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBE_NPAUIDataAdviseHolder@@@Z ; ATL::CComPtrBase<IDataAdviseHolder>::operator!=
PUBLIC	??8?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBE_NPAUIDataAdviseHolder@@@Z ; ATL::CComPtrBase<IDataAdviseHolder>::operator==
PUBLIC	??B?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBEPAUIOleAdviseHolder@@XZ ; ATL::CComPtrBase<IOleAdviseHolder>::operator IOleAdviseHolder *
PUBLIC	??I?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QAEPAPAUIOleAdviseHolder@@XZ ; ATL::CComPtrBase<IOleAdviseHolder>::operator&
PUBLIC	??C?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleAdviseHolder@@@1@XZ ; ATL::CComPtrBase<IOleAdviseHolder>::operator->
PUBLIC	??9?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBE_NPAUIOleAdviseHolder@@@Z ; ATL::CComPtrBase<IOleAdviseHolder>::operator!=
PUBLIC	??8?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBE_NPAUIOleAdviseHolder@@@Z ; ATL::CComPtrBase<IOleAdviseHolder>::operator==
PUBLIC	??0?$CComPtrBase@UIOleControlSite@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IOleControlSite>::CComPtrBase<IOleControlSite>
PUBLIC	??1?$CComPtrBase@UIOleControlSite@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IOleControlSite>::~CComPtrBase<IOleControlSite>
PUBLIC	??B?$CComPtrBase@UIOleControlSite@@@ATL@@QBEPAUIOleControlSite@@XZ ; ATL::CComPtrBase<IOleControlSite>::operator IOleControlSite *
PUBLIC	??I?$CComPtrBase@UIOleControlSite@@@ATL@@QAEPAPAUIOleControlSite@@XZ ; ATL::CComPtrBase<IOleControlSite>::operator&
PUBLIC	??C?$CComPtrBase@UIOleControlSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleControlSite@@@1@XZ ; ATL::CComPtrBase<IOleControlSite>::operator->
PUBLIC	??9?$CComPtrBase@UIOleControlSite@@@ATL@@QBE_NPAUIOleControlSite@@@Z ; ATL::CComPtrBase<IOleControlSite>::operator!=
PUBLIC	??8?$CComPtrBase@UIOleControlSite@@@ATL@@QBE_NPAUIOleControlSite@@@Z ; ATL::CComPtrBase<IOleControlSite>::operator==
PUBLIC	??0?$CComPtr@UIOleControlSite@@@ATL@@QAE@XZ	; ATL::CComPtr<IOleControlSite>::CComPtr<IOleControlSite>
PUBLIC	??1?$CComPtr@UIOleControlSite@@@ATL@@QAE@XZ	; ATL::CComPtr<IOleControlSite>::~CComPtr<IOleControlSite>
PUBLIC	??0?$CComQIPtr@UIOleControlSite@@$1?_GUID_b196b289_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>::CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>
PUBLIC	??1?$CComQIPtr@UIOleControlSite@@$1?_GUID_b196b289_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ ; ATL::CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>::~CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>
PUBLIC	??0?$CComPtrBase@UIPointerInactive@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IPointerInactive>::CComPtrBase<IPointerInactive>
PUBLIC	??1?$CComPtrBase@UIPointerInactive@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IPointerInactive>::~CComPtrBase<IPointerInactive>
PUBLIC	??I?$CComPtrBase@UIPointerInactive@@@ATL@@QAEPAPAUIPointerInactive@@XZ ; ATL::CComPtrBase<IPointerInactive>::operator&
PUBLIC	??C?$CComPtrBase@UIPointerInactive@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPointerInactive@@@1@XZ ; ATL::CComPtrBase<IPointerInactive>::operator->
PUBLIC	??9?$CComPtrBase@UIPointerInactive@@@ATL@@QBE_NPAUIPointerInactive@@@Z ; ATL::CComPtrBase<IPointerInactive>::operator!=
PUBLIC	??8?$CComPtrBase@UIPointerInactive@@@ATL@@QBE_NPAUIPointerInactive@@@Z ; ATL::CComPtrBase<IPointerInactive>::operator==
PUBLIC	??0?$CComPtr@UIPointerInactive@@@ATL@@QAE@XZ	; ATL::CComPtr<IPointerInactive>::CComPtr<IPointerInactive>
PUBLIC	??1?$CComPtr@UIPointerInactive@@@ATL@@QAE@XZ	; ATL::CComPtr<IPointerInactive>::~CComPtr<IPointerInactive>
PUBLIC	??0?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@IAE@XZ ; ATL::CComPtrBase<ISpecifyPropertyPages>::CComPtrBase<ISpecifyPropertyPages>
PUBLIC	??1?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ISpecifyPropertyPages>::~CComPtrBase<ISpecifyPropertyPages>
PUBLIC	??B?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@QBEPAUISpecifyPropertyPages@@XZ ; ATL::CComPtrBase<ISpecifyPropertyPages>::operator ISpecifyPropertyPages *
PUBLIC	??C?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UISpecifyPropertyPages@@@1@XZ ; ATL::CComPtrBase<ISpecifyPropertyPages>::operator->
PUBLIC	??0?$CComPtr@UISpecifyPropertyPages@@@ATL@@QAE@XZ ; ATL::CComPtr<ISpecifyPropertyPages>::CComPtr<ISpecifyPropertyPages>
PUBLIC	??1?$CComPtr@UISpecifyPropertyPages@@@ATL@@QAE@XZ ; ATL::CComPtr<ISpecifyPropertyPages>::~CComPtr<ISpecifyPropertyPages>
PUBLIC	??0?$CComQIPtr@UISpecifyPropertyPages@@$1?_GUID_b196b28b_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ ; ATL::CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>::CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>
PUBLIC	??4?$CComQIPtr@UISpecifyPropertyPages@@$1?_GUID_b196b28b_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAEPAUISpecifyPropertyPages@@PAUIUnknown@@@Z ; ATL::CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>::operator=
PUBLIC	??1?$CComQIPtr@UISpecifyPropertyPages@@$1?_GUID_b196b28b_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ ; ATL::CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>::~CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>
PUBLIC	??0?$CComQIPtr@UIOleObject@@$1?_GUID_00000112_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ ; ATL::CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>::CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>
PUBLIC	??4?$CComQIPtr@UIOleObject@@$1?_GUID_00000112_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAEPAUIOleObject@@PAUIUnknown@@@Z ; ATL::CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>::operator=
PUBLIC	??1?$CComQIPtr@UIOleObject@@$1?_GUID_00000112_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ ; ATL::CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>::~CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>
PUBLIC	??0?$CComPtrBase@UIOleInPlaceObject@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleInPlaceObject>::CComPtrBase<IOleInPlaceObject>
PUBLIC	??1?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleInPlaceObject>::~CComPtrBase<IOleInPlaceObject>
PUBLIC	??I?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QAEPAPAUIOleInPlaceObject@@XZ ; ATL::CComPtrBase<IOleInPlaceObject>::operator&
PUBLIC	??C?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObject@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceObject>::operator->
PUBLIC	??9?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBE_NPAUIOleInPlaceObject@@@Z ; ATL::CComPtrBase<IOleInPlaceObject>::operator!=
PUBLIC	??8?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBE_NPAUIOleInPlaceObject@@@Z ; ATL::CComPtrBase<IOleInPlaceObject>::operator==
PUBLIC	??0?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ	; ATL::CComPtr<IOleInPlaceObject>::CComPtr<IOleInPlaceObject>
PUBLIC	??1?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ	; ATL::CComPtr<IOleInPlaceObject>::~CComPtr<IOleInPlaceObject>
PUBLIC	??0?$CComPtrBase@UIDataObject@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IDataObject>::CComPtrBase<IDataObject>
PUBLIC	??1?$CComPtrBase@UIDataObject@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IDataObject>::~CComPtrBase<IDataObject>
PUBLIC	??B?$CComPtrBase@UIDataObject@@@ATL@@QBEPAUIDataObject@@XZ ; ATL::CComPtrBase<IDataObject>::operator IDataObject *
PUBLIC	??I?$CComPtrBase@UIDataObject@@@ATL@@QAEPAPAUIDataObject@@XZ ; ATL::CComPtrBase<IDataObject>::operator&
PUBLIC	??0?$CComPtr@UIDataObject@@@ATL@@QAE@XZ		; ATL::CComPtr<IDataObject>::CComPtr<IDataObject>
PUBLIC	??1?$CComPtr@UIDataObject@@@ATL@@QAE@XZ		; ATL::CComPtr<IDataObject>::~CComPtr<IDataObject>
PUBLIC	??0OposVariant@@QAE@XZ				; OposVariant::OposVariant
PUBLIC	??1OposVariant@@QAE@XZ				; OposVariant::~OposVariant
PUBLIC	?Clear@OposVariant@@QAEJXZ			; OposVariant::Clear
PUBLIC	?GetTypeInfoCount@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAI@Z ; ATL::IDispatchImpl<IOPOSGestureControl,&IID_IOPOSGestureControl,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::GetTypeInfoCount
PUBLIC	?GetTypeInfo@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJIKPAPAUITypeInfo@@@Z ; ATL::IDispatchImpl<IOPOSGestureControl,&IID_IOPOSGestureControl,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::GetTypeInfo
PUBLIC	?GetIDsOfNames@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJABU_GUID@@PAPA_WIKPAJ@Z ; ATL::IDispatchImpl<IOPOSGestureControl,&IID_IOPOSGestureControl,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::GetIDsOfNames
PUBLIC	?Invoke@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ; ATL::IDispatchImpl<IOPOSGestureControl,&IID_IOPOSGestureControl,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::Invoke
PUBLIC	?GetWndClassInfo@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@SAAAU_ATL_WNDCLASSINFOW@2@XZ ; ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo
PUBLIC	?GetWndCaption@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@SAPB_WXZ ; ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndCaption
PUBLIC	?atlCreate@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PB_WKKV_U_MENUorID@2@PAX@Z ; ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::atlCreate
PUBLIC	?CreateControlWindow@?$CComControl@VCOPOSGestureControl@@V?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UAEPAUHWND__@@PAU3@AAUtagRECT@@@Z ; ATL::CComControl<COPOSGestureControl,ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >::CreateControlWindow
PUBLIC	?ControlQueryInterface@?$CComControl@VCOPOSGestureControl@@V?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UAEJABU_GUID@@PAPAX@Z ; ATL::CComControl<COPOSGestureControl,ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >::ControlQueryInterface
PUBLIC	?ProcessWindowMessage@?$CComControl@VCOPOSGestureControl@@V?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UAEHPAUHWND__@@IIJAAJK@Z ; ATL::CComControl<COPOSGestureControl,ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >::ProcessWindowMessage
PUBLIC	?GetClassID@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::GetClassID
PUBLIC	?IsDirty@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::IsDirty
PUBLIC	?Load@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStream@@@Z ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::Load
PUBLIC	?Save@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStream@@H@Z ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::Save
PUBLIC	?GetSizeMax@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAT_ULARGE_INTEGER@@@Z ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::GetSizeMax
PUBLIC	?InitNew@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::InitNew
PUBLIC	?IPersistStreamInit_Load@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@QAEJPAUIStream@@PBUATL_PROPMAP_ENTRY@2@@Z ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::IPersistStreamInit_Load
PUBLIC	?IPersistStreamInit_Save@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@QAEJPAUIStream@@HPBUATL_PROPMAP_ENTRY@2@@Z ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::IPersistStreamInit_Save
PUBLIC	?GetControlInfo@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagCONTROLINFO@@@Z ; ATL::IOleControlImpl<COPOSGestureControl>::GetControlInfo
PUBLIC	?OnMnemonic@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagMSG@@@Z ; ATL::IOleControlImpl<COPOSGestureControl>::OnMnemonic
PUBLIC	?OnAmbientPropertyChange@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJJ@Z ; ATL::IOleControlImpl<COPOSGestureControl>::OnAmbientPropertyChange
PUBLIC	?SetClientSite@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIOleClientSite@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::SetClientSite
PUBLIC	?GetClientSite@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIOleClientSite@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::GetClientSite
PUBLIC	?SetHostNames@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPB_W0@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::SetHostNames
PUBLIC	?Close@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::Close
PUBLIC	?SetMoniker@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUIMoniker@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::SetMoniker
PUBLIC	?GetMoniker@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKKPAPAUIMoniker@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::GetMoniker
PUBLIC	?InitFromData@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIDataObject@@HK@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::InitFromData
PUBLIC	?GetClipboardData@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPAUIDataObject@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::GetClipboardData
PUBLIC	?DoVerbPrimary@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbPrimary
PUBLIC	?DoVerbShow@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbShow
PUBLIC	?DoVerbInPlaceActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbInPlaceActivate
PUBLIC	?DoVerbUIActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbUIActivate
PUBLIC	?DoVerbHide@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbHide
PUBLIC	?DoVerbOpen@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbOpen
PUBLIC	?DoVerbDiscardUndo@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbDiscardUndo
PUBLIC	?DoVerb@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJJPAUtagMSG@@PAUIOleClientSite@@JPAUHWND__@@PBUtagRECT@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerb
PUBLIC	?EnumVerbs@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumOLEVERB@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::EnumVerbs
PUBLIC	?Update@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::Update
PUBLIC	?IsUpToDate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::IsUpToDate
PUBLIC	?GetUserClassID@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::GetUserClassID
PUBLIC	?GetUserType@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPA_W@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::GetUserType
PUBLIC	?SetExtent@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUtagSIZE@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::SetExtent
PUBLIC	?GetExtent@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUtagSIZE@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::GetExtent
PUBLIC	?Advise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIAdviseSink@@PAK@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::Advise
PUBLIC	?Unadvise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::Unadvise
PUBLIC	?EnumAdvise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumSTATDATA@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::EnumAdvise
PUBLIC	?GetMiscStatus@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAK@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::GetMiscStatus
PUBLIC	?SetColorScheme@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagLOGPALETTE@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::SetColorScheme
PUBLIC	?OnPreVerbShow@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbShow
PUBLIC	?OnPostVerbShow@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbShow
PUBLIC	?OnPreVerbInPlaceActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbInPlaceActivate
PUBLIC	?OnPostVerbInPlaceActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbInPlaceActivate
PUBLIC	?OnPreVerbUIActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbUIActivate
PUBLIC	?OnPostVerbUIActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbUIActivate
PUBLIC	?OnPreVerbHide@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbHide
PUBLIC	?OnPostVerbHide@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbHide
PUBLIC	?OnPreVerbOpen@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbOpen
PUBLIC	?OnPostVerbOpen@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbOpen
PUBLIC	?OnPreVerbDiscardUndo@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbDiscardUndo
PUBLIC	?OnPostVerbDiscardUndo@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbDiscardUndo
PUBLIC	?GetWindow@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUHWND__@@@Z ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::GetWindow
PUBLIC	?ContextSensitiveHelp@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::ContextSensitiveHelp
PUBLIC	?TranslateAcceleratorW@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagMSG@@@Z ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::TranslateAcceleratorW
PUBLIC	?OnFrameWindowActivate@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::OnFrameWindowActivate
PUBLIC	?OnDocWindowActivate@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::OnDocWindowActivate
PUBLIC	?ResizeBorder@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::ResizeBorder
PUBLIC	?EnableModeless@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::EnableModeless
PUBLIC	?Draw@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3P6GHK@ZK@Z ; ATL::IViewObjectExImpl<COPOSGestureControl>::Draw
PUBLIC	?GetColorSet@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@PAPAUtagLOGPALETTE@@@Z ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetColorSet
PUBLIC	?Freeze@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAK@Z ; ATL::IViewObjectExImpl<COPOSGestureControl>::Freeze
PUBLIC	?Unfreeze@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z ; ATL::IViewObjectExImpl<COPOSGestureControl>::Unfreeze
PUBLIC	?SetAdvise@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKKPAUIAdviseSink@@@Z ; ATL::IViewObjectExImpl<COPOSGestureControl>::SetAdvise
PUBLIC	?GetAdvise@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJPAK0PAPAUIAdviseSink@@@Z ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetAdvise
PUBLIC	?GetExtent@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUtagSIZE@@@Z ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetExtent
PUBLIC	?GetRect@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAU_RECTL@@@Z ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetRect
PUBLIC	?GetViewStatus@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJPAK@Z ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetViewStatus
PUBLIC	?QueryHitPoint@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPBUtagRECT@@UtagPOINT@@JPAK@Z ; ATL::IViewObjectExImpl<COPOSGestureControl>::QueryHitPoint
PUBLIC	?QueryHitRect@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPBUtagRECT@@0JPAK@Z ; ATL::IViewObjectExImpl<COPOSGestureControl>::QueryHitRect
PUBLIC	?GetNaturalExtent@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUHDC__@@PAUtagExtentInfo@@PAUtagSIZE@@@Z ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetNaturalExtent
PUBLIC	?GetWindow@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUHWND__@@@Z ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::GetWindow
PUBLIC	?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::ContextSensitiveHelp
PUBLIC	?InPlaceDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::InPlaceDeactivate
PUBLIC	?UIDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::UIDeactivate
PUBLIC	?SetObjectRects@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPBUtagRECT@@0@Z ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::SetObjectRects
PUBLIC	?ReactivateAndUndo@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::ReactivateAndUndo
PUBLIC	?OnWindowMessage@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJIIJPAJ@Z ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::OnWindowMessage
PUBLIC	?GetDropTarget@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIDropTarget@@@Z ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::GetDropTarget
PUBLIC	?EnumConnectionPoints@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumConnectionPoints@@@Z ; ATL::IConnectionPointContainerImpl<COPOSGestureControl>::EnumConnectionPoints
PUBLIC	?FindConnectionPoint@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAUIConnectionPoint@@@Z ; ATL::IConnectionPointContainerImpl<COPOSGestureControl>::FindConnectionPoint
PUBLIC	?GetClassID@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z ; ATL::IPersistStorageImpl<COPOSGestureControl>::GetClassID
PUBLIC	?IsDirty@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ; ATL::IPersistStorageImpl<COPOSGestureControl>::IsDirty
PUBLIC	?InitNew@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z ; ATL::IPersistStorageImpl<COPOSGestureControl>::InitNew
PUBLIC	?Load@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z ; ATL::IPersistStorageImpl<COPOSGestureControl>::Load
PUBLIC	?Save@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@H@Z ; ATL::IPersistStorageImpl<COPOSGestureControl>::Save
PUBLIC	?SaveCompleted@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z ; ATL::IPersistStorageImpl<COPOSGestureControl>::SaveCompleted
PUBLIC	?HandsOffStorage@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ; ATL::IPersistStorageImpl<COPOSGestureControl>::HandsOffStorage
PUBLIC	?IPSI_GetIPersistStreamInit@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@AAEPAUIPersistStreamInit@@XZ ; ATL::IPersistStorageImpl<COPOSGestureControl>::IPSI_GetIPersistStreamInit
PUBLIC	?GetPages@?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagCAUUID@@@Z ; ATL::ISpecifyPropertyPagesImpl<COPOSGestureControl>::GetPages
PUBLIC	?GetPagesHelper@?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@ATL@@IAEJPAUtagCAUUID@@PBUATL_PROPMAP_ENTRY@2@@Z ; ATL::ISpecifyPropertyPagesImpl<COPOSGestureControl>::GetPagesHelper
PUBLIC	?QuickActivate@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagQACONTAINER@@PAUtagQACONTROL@@@Z ; ATL::IQuickActivateImpl<COPOSGestureControl>::QuickActivate
PUBLIC	?SetContentExtent@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagSIZE@@@Z ; ATL::IQuickActivateImpl<COPOSGestureControl>::SetContentExtent
PUBLIC	?GetContentExtent@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagSIZE@@@Z ; ATL::IQuickActivateImpl<COPOSGestureControl>::GetContentExtent
PUBLIC	?GetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z ; ATL::IDataObjectImpl<COPOSGestureControl>::GetData
PUBLIC	?GetDataHere@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z ; ATL::IDataObjectImpl<COPOSGestureControl>::GetDataHere
PUBLIC	?QueryGetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@@Z ; ATL::IDataObjectImpl<COPOSGestureControl>::QueryGetData
PUBLIC	?GetCanonicalFormatEtc@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@0@Z ; ATL::IDataObjectImpl<COPOSGestureControl>::GetCanonicalFormatEtc
PUBLIC	?SetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@H@Z ; ATL::IDataObjectImpl<COPOSGestureControl>::SetData
PUBLIC	?EnumFormatEtc@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPAUIEnumFORMATETC@@@Z ; ATL::IDataObjectImpl<COPOSGestureControl>::EnumFormatEtc
PUBLIC	?DAdvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@KPAUIAdviseSink@@PAK@Z ; ATL::IDataObjectImpl<COPOSGestureControl>::DAdvise
PUBLIC	?DUnadvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z ; ATL::IDataObjectImpl<COPOSGestureControl>::DUnadvise
PUBLIC	?EnumDAdvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumSTATDATA@@@Z ; ATL::IDataObjectImpl<COPOSGestureControl>::EnumDAdvise
PUBLIC	?GetClassInfoW@?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAPAUITypeInfo@@@Z ; ATL::IProvideClassInfo2Impl<&CLSID_OPOSGestureControl,&DIID__IOPOSGestureControlEvents,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::GetClassInfoW
PUBLIC	?GetGUID@?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJKPAU_GUID@@@Z ; ATL::IProvideClassInfo2Impl<&CLSID_OPOSGestureControl,&DIID__IOPOSGestureControlEvents,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::GetGUID
PUBLIC	?FAccessAllowed@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@MAEHXZ ; ATL::IObjectSafetyImpl<COPOSGestureControl,3>::FAccessAllowed
PUBLIC	?GetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@UAGJABU_GUID@@PAK1@Z ; ATL::IObjectSafetyImpl<COPOSGestureControl,3>::GetInterfaceSafetyOptions
PUBLIC	?SetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@UAGJABU_GUID@@KK@Z ; ATL::IObjectSafetyImpl<COPOSGestureControl,3>::SetInterfaceSafetyOptions
PUBLIC	?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::_LocCPQueryInterface
PUBLIC	?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAU_GUID@@@Z ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::GetConnectionInterface
PUBLIC	?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIConnectionPointContainer@@@Z ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::GetConnectionPointContainer
PUBLIC	?Advise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAUIUnknown@@PAK@Z ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::Advise
PUBLIC	?Unadvise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJK@Z ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::Unadvise
PUBLIC	?EnumConnections@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIEnumConnections@@@Z ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::EnumConnections
PUBLIC	?GetObjectCLSID@?$CComCoClass@VCOPOSGestureControl@@$1?CLSID_OPOSGestureControl@@3U_GUID@@B@ATL@@SGABU_GUID@@XZ ; ATL::CComCoClass<COPOSGestureControl,&CLSID_OPOSGestureControl>::GetObjectCLSID
PUBLIC	?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::_LocCPQueryInterface
PUBLIC	?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAU_GUID@@@Z ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::GetConnectionInterface
PUBLIC	?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIConnectionPointContainer@@@Z ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::GetConnectionPointContainer
PUBLIC	?Advise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAUIUnknown@@PAK@Z ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::Advise
PUBLIC	?Unadvise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJK@Z ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::Unadvise
PUBLIC	?EnumConnections@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIEnumConnections@@@Z ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::EnumConnections
PUBLIC	?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJPAJPAPA_W@Z ; CProxy_IOPOSEvents<COPOSGestureControl>::Fire_DirectIOEvent
PUBLIC	?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJJJPAJ@Z ; CProxy_IOPOSEvents<COPOSGestureControl>::Fire_ErrorEvent
PUBLIC	?Fire_OutputCompleteEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJ@Z ; CProxy_IOPOSEvents<COPOSGestureControl>::Fire_OutputCompleteEvent
PUBLIC	?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJ@Z ; CProxy_IOPOSEvents<COPOSGestureControl>::Fire_StatusUpdateEvent
PUBLIC	?Advise@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@UAGJPAUIUnknown@@PAK@Z ; CProxy_IOPOSEvents<COPOSGestureControl>::Advise
PUBLIC	?Unadvise@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@UAGJK@Z ; CProxy_IOPOSEvents<COPOSGestureControl>::Unadvise
PUBLIC	?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@IAEXPAUIUnknown@@PAVOposVariant@@IAAJPB_WJ@Z ; CProxy_IOPOSEvents<COPOSGestureControl>::FireTheEvent
PUBLIC	?InternalFinalConstructAddRef@COPOSGestureControl@@QAEXXZ ; COPOSGestureControl::InternalFinalConstructAddRef
PUBLIC	?InternalFinalConstructRelease@COPOSGestureControl@@QAEXXZ ; COPOSGestureControl::InternalFinalConstructRelease
PUBLIC	?_GetRawUnknown@COPOSGestureControl@@QAEPAUIUnknown@@XZ ; COPOSGestureControl::_GetRawUnknown
PUBLIC	?GetUnknown@COPOSGestureControl@@QAEPAUIUnknown@@XZ ; COPOSGestureControl::GetUnknown
PUBLIC	?_InternalQueryInterface@COPOSGestureControl@@QAEJABU_GUID@@PAPAX@Z ; COPOSGestureControl::_InternalQueryInterface
PUBLIC	?_GetEntries@COPOSGestureControl@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ ; COPOSGestureControl::_GetEntries
PUBLIC	?GetPropertyMap@COPOSGestureControl@@SAPBUATL_PROPMAP_ENTRY@ATL@@XZ ; COPOSGestureControl::GetPropertyMap
PUBLIC	?GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z ; COPOSGestureControl::GetConnMap
PUBLIC	?ProcessWindowMessage@COPOSGestureControl@@UAEHPAUHWND__@@IIJAAJK@Z ; COPOSGestureControl::ProcessWindowMessage
PUBLIC	?_GetViewStatus@COPOSGestureControl@@QAEKXZ	; COPOSGestureControl::_GetViewStatus
PUBLIC	?SODataDummy@COPOSGestureControl@@MAGJJ@Z	; COPOSGestureControl::SODataDummy
PUBLIC	?SODirectIO@COPOSGestureControl@@MAGJJPAJPAPA_W@Z ; COPOSGestureControl::SODirectIO
PUBLIC	?SOError@COPOSGestureControl@@MAGJJJJPAJ@Z	; COPOSGestureControl::SOError
PUBLIC	?SOOutputComplete@COPOSGestureControl@@MAGJJ@Z	; COPOSGestureControl::SOOutputComplete
PUBLIC	?SOStatusUpdate@COPOSGestureControl@@MAGJJ@Z	; COPOSGestureControl::SOStatusUpdate
PUBLIC	?DoEvent@COPOSGestureControl@@IAEXIIJ@Z		; COPOSGestureControl::DoEvent
PUBLIC	_DllMain@12
PUBLIC	?CreateInstance@?$CComCreator@V?$CComObject@VCOPOSGestureControl@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ; ATL::CComCreator<ATL::CComObject<COPOSGestureControl> >::CreateInstance
PUBLIC	?CreateInstance@?$CComCreator@V?$CComAggObject@VCOPOSGestureControl@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ; ATL::CComCreator<ATL::CComAggObject<COPOSGestureControl> >::CreateInstance
PUBLIC	??0?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComObjectCached<ATL::CComClassFactory>::CComObjectCached<ATL::CComClassFactory>
PUBLIC	??1?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAE@XZ ; ATL::CComObjectCached<ATL::CComClassFactory>::~CComObjectCached<ATL::CComClassFactory>
PUBLIC	?AddRef@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ ; ATL::CComObjectCached<ATL::CComClassFactory>::AddRef
PUBLIC	?Release@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ ; ATL::CComObjectCached<ATL::CComClassFactory>::Release
PUBLIC	?QueryInterface@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObjectCached<ATL::CComClassFactory>::QueryInterface
PUBLIC	??_G?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAEPAXI@Z ; ATL::CComObjectCached<ATL::CComClassFactory>::`scalar deleting destructor'
PUBLIC	??0?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@QAE@XZ ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >
PUBLIC	??1?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAE@XZ ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::~CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >
PUBLIC	?Next@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJKPAPAUIConnectionPoint@@PAK@Z ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::Next
PUBLIC	?Skip@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJK@Z ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::Skip
PUBLIC	?Reset@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJXZ ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::Reset
PUBLIC	?Clone@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJPAPAUIEnumConnectionPoints@@@Z ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::Clone
PUBLIC	?Init@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@QAEJPAPAUIConnectionPoint@@0PAUIUnknown@@W4CComEnumFlags@2@@Z ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::Init
PUBLIC	?_InternalQueryInterface@?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::_InternalQueryInterface
PUBLIC	?_GetEntries@?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ; ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::_GetEntries
PUBLIC	??0?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ ; ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>
PUBLIC	??1?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@UAE@XZ ; ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::~CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>
PUBLIC	??0?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >
PUBLIC	??1?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAE@XZ ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::~CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >
PUBLIC	?AddRef@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::AddRef
PUBLIC	?Release@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::Release
PUBLIC	?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::QueryInterface
PUBLIC	?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::CreateInstance
PUBLIC	??_G?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::`scalar deleting destructor'
PUBLIC	??$AtlMultiplyThrow@I@ATL@@YAIII@Z		; ATL::AtlMultiplyThrow<unsigned int>
PUBLIC	?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData
PUBLIC	??$AtlAddThrow@K@ATL@@YAKKK@Z			; ATL::AtlAddThrow<unsigned long>
PUBLIC	??0?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAE@PAX@Z ; ATL::CComAggObject<COPOSGestureControl>::CComAggObject<COPOSGestureControl>
PUBLIC	?_AtlInitialConstruct@?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::CComAggObject<COPOSGestureControl>::_AtlInitialConstruct
PUBLIC	?FinalConstruct@?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::CComAggObject<COPOSGestureControl>::FinalConstruct
PUBLIC	?FinalRelease@?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAEXXZ ; ATL::CComAggObject<COPOSGestureControl>::FinalRelease
PUBLIC	??1?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAE@XZ ; ATL::CComAggObject<COPOSGestureControl>::~CComAggObject<COPOSGestureControl>
PUBLIC	?AddRef@?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComAggObject<COPOSGestureControl>::AddRef
PUBLIC	?Release@?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComAggObject<COPOSGestureControl>::Release
PUBLIC	?QueryInterface@?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComAggObject<COPOSGestureControl>::QueryInterface
PUBLIC	??0?$CComContainedObject@VCOPOSGestureControl@@@ATL@@QAE@PAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::CComContainedObject<COPOSGestureControl>
PUBLIC	?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::AddRef
PUBLIC	?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::Release
PUBLIC	?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::QueryInterface
PUBLIC	??1?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAE@XZ ; ATL::CComContainedObject<COPOSGestureControl>::~CComContainedObject<COPOSGestureControl>
PUBLIC	??_G?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z ; ATL::CComContainedObject<COPOSGestureControl>::`scalar deleting destructor'
PUBLIC	??_G?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z ; ATL::CComAggObject<COPOSGestureControl>::`scalar deleting destructor'
PUBLIC	??0?$CComObject@VCOPOSGestureControl@@@ATL@@QAE@PAX@Z ; ATL::CComObject<COPOSGestureControl>::CComObject<COPOSGestureControl>
PUBLIC	??1?$CComObject@VCOPOSGestureControl@@@ATL@@UAE@XZ ; ATL::CComObject<COPOSGestureControl>::~CComObject<COPOSGestureControl>
PUBLIC	?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::AddRef
PUBLIC	?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::Release
PUBLIC	?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::QueryInterface
PUBLIC	??_G?$CComObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z ; ATL::CComObject<COPOSGestureControl>::`scalar deleting destructor'
PUBLIC	?GetWndStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z ; ATL::CWinTraits<1442840576,0>::GetWndStyle
PUBLIC	?GetWndExStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z ; ATL::CWinTraits<1442840576,0>::GetWndExStyle
PUBLIC	??0?$Wrapper@PA_W@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQA_W@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Wrapper<wchar_t *>::Wrapper<wchar_t *>
PUBLIC	??$?2PA_W@?$Wrapper@PA_W@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPA_W@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Wrapper<wchar_t *>::operator new<wchar_t *>
PUBLIC	??0Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@ABG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::Wrapper
PUBLIC	??$?2G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAPAXIPAG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::operator new<unsigned short>
PUBLIC	??0?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QAE@XZ ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >
PUBLIC	??1?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAE@XZ ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::~CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >
PUBLIC	?Next@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJKPAUtagCONNECTDATA@@PAK@Z ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Next
PUBLIC	?Skip@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJK@Z ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Skip
PUBLIC	?Reset@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJXZ ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Reset
PUBLIC	?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJPAPAUIEnumConnections@@@Z ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Clone
PUBLIC	?Init@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QAEJPAUtagCONNECTDATA@@0PAUIUnknown@@W4CComEnumFlags@2@@Z ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Init
PUBLIC	?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_InternalQueryInterface
PUBLIC	?_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_GetEntries
PUBLIC	??0?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>
PUBLIC	??1?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@UAE@XZ ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::~CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>
PUBLIC	??0?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >
PUBLIC	??1?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAE@XZ ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::~CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >
PUBLIC	?AddRef@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::AddRef
PUBLIC	?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::Release
PUBLIC	?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::QueryInterface
PUBLIC	?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CreateInstance
PUBLIC	??_G?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::`scalar deleting destructor'
PUBLIC	?copy@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAJPAPAUIConnectionPoint@@PBQAU3@@Z ; ATL::_CopyInterface<IConnectionPoint>::copy
PUBLIC	?init@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAXPAPAUIConnectionPoint@@@Z ; ATL::_CopyInterface<IConnectionPoint>::init
PUBLIC	?destroy@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAXPAPAUIConnectionPoint@@@Z ; ATL::_CopyInterface<IConnectionPoint>::destroy
PUBLIC	??_E?$CComObject@VCOPOSGestureControl@@@ATL@@W3AEPAXI@Z ; [thunk]:ATL::CComObject<COPOSGestureControl>::`vector deleting destructor'
PUBLIC	??_E?$CComObject@VCOPOSGestureControl@@@ATL@@WEM@AEPAXI@Z ; [thunk]:ATL::CComObject<COPOSGestureControl>::`vector deleting destructor'
PUBLIC	?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHA@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{112}'
PUBLIC	?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{112}'
PUBLIC	?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{112}'
PUBLIC	?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHE@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{116}'
PUBLIC	?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{116}'
PUBLIC	?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{116}'
PUBLIC	?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHI@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{120}'
PUBLIC	?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{120}'
PUBLIC	?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{120}'
PUBLIC	?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHM@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{124}'
PUBLIC	?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{124}'
PUBLIC	?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{124}'
PUBLIC	?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WIA@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{128}'
PUBLIC	?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{128}'
PUBLIC	?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{128}'
PUBLIC	?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WIE@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{132}'
PUBLIC	?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{132}'
PUBLIC	?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{132}'
PUBLIC	?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WII@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{136}'
PUBLIC	?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{136}'
PUBLIC	?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{136}'
PUBLIC	?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WIM@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{140}'
PUBLIC	?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{140}'
PUBLIC	?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{140}'
PUBLIC	?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJA@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{144}'
PUBLIC	?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{144}'
PUBLIC	?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{144}'
PUBLIC	?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJE@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{148}'
PUBLIC	?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{148}'
PUBLIC	?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{148}'
PUBLIC	?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJI@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{152}'
PUBLIC	?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{152}'
PUBLIC	?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{152}'
PUBLIC	?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJM@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{156}'
PUBLIC	?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{156}'
PUBLIC	?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{156}'
PUBLIC	?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WKA@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{160}'
PUBLIC	?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{160}'
PUBLIC	?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{160}'
PUBLIC	?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{168}'
PUBLIC	?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{168}'
PUBLIC	?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{180}'
PUBLIC	?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{180}'
PUBLIC	??_E?$CComContainedObject@VCOPOSGestureControl@@@ATL@@W3AEPAXI@Z ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::`vector deleting destructor'
PUBLIC	??_E?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WEM@AEPAXI@Z ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::`vector deleting destructor'
PUBLIC	?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHA@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{112}'
PUBLIC	?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{112}'
PUBLIC	?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{112}'
PUBLIC	?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHE@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{116}'
PUBLIC	?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{116}'
PUBLIC	?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{116}'
PUBLIC	?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHI@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{120}'
PUBLIC	?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{120}'
PUBLIC	?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{120}'
PUBLIC	?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHM@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{124}'
PUBLIC	?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{124}'
PUBLIC	?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{124}'
PUBLIC	?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIA@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{128}'
PUBLIC	?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{128}'
PUBLIC	?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{128}'
PUBLIC	?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIE@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{132}'
PUBLIC	?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{132}'
PUBLIC	?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{132}'
PUBLIC	?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WII@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{136}'
PUBLIC	?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{136}'
PUBLIC	?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{136}'
PUBLIC	?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIM@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{140}'
PUBLIC	?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{140}'
PUBLIC	?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{140}'
PUBLIC	?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJA@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{144}'
PUBLIC	?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{144}'
PUBLIC	?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{144}'
PUBLIC	?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJE@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{148}'
PUBLIC	?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{148}'
PUBLIC	?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{148}'
PUBLIC	?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJI@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{152}'
PUBLIC	?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{152}'
PUBLIC	?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{152}'
PUBLIC	?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJM@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{156}'
PUBLIC	?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{156}'
PUBLIC	?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{156}'
PUBLIC	?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKA@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{160}'
PUBLIC	?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{160}'
PUBLIC	?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{160}'
PUBLIC	?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{168}'
PUBLIC	?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{168}'
PUBLIC	?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{180}'
PUBLIC	?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{180}'
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_13COJANIEC@?$AA0@				; `string'
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@		; `string'
PUBLIC	??_C@_1OE@EFJOHFCD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
PUBLIC	?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
PUBLIC	?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
PUBLIC	?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
PUBLIC	?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
PUBLIC	?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
PUBLIC	?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
PUBLIC	?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
PUBLIC	?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
PUBLIC	?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
PUBLIC	?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
PUBLIC	?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
PUBLIC	?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
PUBLIC	?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
PUBLIC	?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
PUBLIC	?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
PUBLIC	?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
PUBLIC	?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
PUBLIC	?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
PUBLIC	?m_nLevel@CTrace@ATL@@1IA			; ATL::CTrace::m_nLevel
PUBLIC	?m_nCategory@CTrace@ATL@@1IA			; ATL::CTrace::m_nCategory
PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ ; `string'
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ ; `string'
PUBLIC	??_C@_1OE@DGDFBHKA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0HD@ECNMIKGK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5@ ; `string'
PUBLIC	??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe@	; `string'
PUBLIC	??_C@_1OG@DEDHKNLM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1CA@MNJCDMEH@?$AA?$CB?$AAm?$AA_?$AAb?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd@ ; `string'
PUBLIC	??_C@_1OC@LDOGAJJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@ ; `string'
PUBLIC	??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BE@LOHOFOCD@?$AAp?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt?$AAc?$AAh@ ; `string'
PUBLIC	??_C@_1BE@GIHDMMGE@?$AAp?$AAV?$AAa?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_0HD@MGLNKGFD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1DM@OFBKNGJC@?$AAC?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_1DM@OIOAIJPB@?$AAC?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr@ ; `string'
PUBLIC	__GUID_00000000_0000_0000_c000_000000000046
PUBLIC	__GUID_00020400_0000_0000_c000_000000000046
PUBLIC	??_C@_1BG@ILBPLEEF@?$AAn?$AAN?$AAu?$AAl?$AAl?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BK@PMLCOGII@?$AAp?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1DE@KLNFNPEF@?$AAc?$AAb?$AAS?$AAt?$AAr?$AAL?$AAe?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAi?$AAz@ ; `string'
PUBLIC	??_C@_1O@CGPEODAD@?$AA?$CB?$AA?$CK?$AAt?$AAh?$AAi?$AAs@ ; `string'
PUBLIC	??_C@_1DG@PIJMPOJH@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAs?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AAi?$AAs@ ; `string'
PUBLIC	??_C@_1IG@BFBDIBOK@?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAe?$AAd?$AAe?$AAd@ ; `string'
PUBLIC	??_C@_1GE@DKMFEMPD@?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AAo?$AAf?$AA?5?$AAs?$AAt?$AAr?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1FC@BKMPMMIF@?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAN?$AAU?$AAL@ ; `string'
PUBLIC	??_C@_1CO@HIJGNINB@?$AA?$CI?$AA?$CI?$AA?$CI?$AAH?$AAR?$AAE?$AAS?$AAU?$AAL?$AAT?$AA?$CJ?$AA?$CI?$AAh?$AAr?$AA?$CJ@ ; `string'
PUBLIC	__GUID_00000109_0000_0000_c000_000000000046
PUBLIC	__GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
PUBLIC	??_C@_1BK@EKMOGOFM@?$AAp?$AAc?$AAb?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BM@JBGPBNEE@?$AAs?$AAp?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BE@CANBMGJB@?$AAp?$AAS?$AAt?$AAm?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1EG@GMHEAKOM@?$AAr?$AAg?$AAc?$AAl?$AAs?$AAi?$AAd?$AAA?$AAl?$AAl?$AAo?$AAw?$AAe?$AAd?$AA?4@ ; `string'
PUBLIC	??_C@_1PO@GPALOAFP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BK@BIGILECK@?$AAA?$AAd?$AAv?$AAa?$AAp?$AAi?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl@ ; `string'
PUBLIC	??_C@_1BO@KNMGNOCJ@?$AAh?$AAA?$AAd?$AAv?$AAA?$AAP?$AAI?$AA3?$AA2?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_0BG@EKFFMJIO@RegOpenKeyTransactedW@	; `string'
PUBLIC	??_C@_0BI@MNCFCPFK@RegCreateKeyTransactedW@	; `string'
PUBLIC	??_C@_0BI@HAKLOOGP@RegDeleteKeyTransactedW@	; `string'
PUBLIC	??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BG@OHCCAGNO@?$AA?$CB?$AAm?$AA_?$AAb?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd@ ; `string'
PUBLIC	??_C@_1BE@NPGJNKLA@?$AAm?$AA_?$AAb?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd@ ; `string'
PUBLIC	??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	?_AtlComModule@ATL@@3VCAtlComModule@1@A		; ATL::_AtlComModule
PUBLIC	?_AtlWinModule@ATL@@3VCAtlWinModule@1@A		; ATL::_AtlWinModule
PUBLIC	?m_libid@CAtlModule@ATL@@2U_GUID@@A		; ATL::CAtlModule::m_libid
PUBLIC	??_C@_1CC@DNHFMIHP@?$AA_?$AAp?$AAA?$AAt?$AAl?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5@ ; `string'
PUBLIC	??_C@_1HK@DFMOIGDB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	__GUID_00000146_0000_0000_c000_000000000046
PUBLIC	??_C@_1BG@LENCCAOJ@?$AAp?$AAp?$AAG?$AAI?$AAT?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BI@JBLBCKD@?$AAm?$AA_?$AAp?$AAG?$AAI?$AAT?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_7CComModule@ATL@@6B@				; ATL::CComModule::`vftable'
PUBLIC	??_C@_1BM@NFPICFEL@?$AA_?$AAp?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@ ; `string'
PUBLIC	??_C@_1BI@JPOONHGO@?$AAm?$AA_?$AAh?$AAK?$AAe?$AAy?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	?pfnRegDeleteKeyEx@?1??DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z@4P6GJPAUHKEY__@@0KK@ZA ; `ATL::CRegKey::DeleteSubKey'::`2'::pfnRegDeleteKeyEx
PUBLIC	?bInitialized@?1??DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z@4_NA ; `ATL::CRegKey::DeleteSubKey'::`2'::bInitialized
PUBLIC	??_C@_1BI@KCHMLGAI@?$AAm?$AA_?$AAh?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_0BA@LILAPHGE@RegDeleteKeyExW@		; `string'
PUBLIC	??_C@_1CA@JAHJEEHI@?$AAh?$AAK?$AAe?$AAy?$AAP?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BG@OMKLFNDM@?$AAl?$AAR?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AAL@ ; `string'
PUBLIC	??_C@_1FG@MAMCHIIA@?$AA?$CI?$AAd?$AAw?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CI?$AA?5?$AA1?$AAu@ ; `string'
PUBLIC	??_C@_1IA@CIKBLAHF@?$AAC?$AAR?$AAe?$AAg?$AAK?$AAe?$AAy?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAu?$AAr?$AAs@ ; `string'
PUBLIC	??_C@_1DO@EIGOLNAA@?$AAl?$AAp?$AAs?$AAz?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG@ ; `string'
PUBLIC	??_C@_1OC@IGDLHBDL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BG@MMFPEKL@?$AAs?$AAz?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BK@LDPHGFPN@?$AAs?$AAz?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	?rgszNeverDelete@CRegParser@ATL@@1QBQB_WB	; ATL::CRegParser::rgszNeverDelete
PUBLIC	??_C@_1O@JFMKDNFA@?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_7CRegObject@ATL@@6B@				; ATL::CRegObject::`vftable'
PUBLIC	??_C@_1JM@PMKLGAKF@?$AAs?$AAt?$AAa?$AAt?$AAi?$AAc?$AAa?$AAl?$AAl?$AAy?$AA?5?$AAl?$AAi?$AAn?$AAk@ ; `string'
PUBLIC	??_C@_1KC@MLBIPPDL@?$AAL?$AA?$CC?$AAs?$AAt?$AAa?$AAt?$AAi?$AAc?$AAa?$AAl?$AAl?$AAy?$AA?5?$AAl?$AAi@ ; `string'
PUBLIC	??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1DM@JBIDINMA@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAL@ ; `string'
PUBLIC	??_C@_1FE@HJDAOHJE@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAF?$AAi?$AAn?$AAd?$AAR@ ; `string'
PUBLIC	??_C@_1FG@BBJFPKL@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAF?$AAi?$AAn?$AAd?$AAR@ ; `string'
PUBLIC	??_C@_1DA@KJKEAFMD@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAR@ ; `string'
PUBLIC	??_C@_1CK@BCPDHANH@?$AAM?$AAa?$AAp?$AA?5?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAf@ ; `string'
PUBLIC	??_C@_1FI@KMIOGKOO@?$AAB?$AAo?$AAg?$AAu?$AAs?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF?$AAT?$AAc@ ; `string'
PUBLIC	?map@?1??HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PA_W@Z@4QBUkeymap@?1??123@KAPAU4@0@Z@B ; `ATL::CRegParser::HKeyFromString'::`2'::map
PUBLIC	??_C@_19NCHLBIN@?$AAH?$AAK?$AAC?$AAR@		; `string'
PUBLIC	??_C@_19JAPAIJDE@?$AAH?$AAK?$AAC?$AAU@		; `string'
PUBLIC	??_C@_19PEALEEJB@?$AAH?$AAK?$AAL?$AAM@		; `string'
PUBLIC	??_C@_17PJOJPMPB@?$AAH?$AAK?$AAU@		; `string'
PUBLIC	??_C@_19PNBHMJPL@?$AAH?$AAK?$AAP?$AAD@		; `string'
PUBLIC	??_C@_19GFFAIJHG@?$AAH?$AAK?$AAD?$AAD@		; `string'
PUBLIC	??_C@_19OFICIBHH@?$AAH?$AAK?$AAC?$AAC@		; `string'
PUBLIC	??_C@_1CE@PACHPJFI@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAC?$AAL?$AAA?$AAS?$AAS?$AAE?$AAS?$AA_?$AAR?$AAO@ ; `string'
PUBLIC	??_C@_1CE@HLHNCBPM@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAC?$AAU?$AAR?$AAR?$AAE?$AAN?$AAT?$AA_?$AAU?$AAS@ ; `string'
PUBLIC	??_C@_1CG@GFBEANJL@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAL?$AAO?$AAC?$AAA?$AAL?$AA_?$AAM?$AAA?$AAC?$AAH@ ; `string'
PUBLIC	??_C@_1BG@BGODANIO@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAU?$AAS?$AAE?$AAR?$AAS@ ; `string'
PUBLIC	??_C@_1CM@KHNNAOIC@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAP?$AAE?$AAR?$AAF?$AAO?$AAR?$AAM?$AAA?$AAN?$AAC@ ; `string'
PUBLIC	??_C@_1BM@HAGMMHIA@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAD?$AAY?$AAN?$AA_?$AAD?$AAA?$AAT?$AAA@ ; `string'
PUBLIC	??_C@_1CI@BBJOACGG@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAC?$AAU?$AAR?$AAR?$AAE?$AAN?$AAT?$AA_?$AAC?$AAO@ ; `string'
PUBLIC	??_C@_1EI@CDDJHMMA@?$AAN?$AAe?$AAx?$AAt?$AAT?$AAo?$AAk?$AAe?$AAn?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAe@ ; `string'
PUBLIC	??_C@_1DA@BDBPEMM@?$AA?$CF?$AAT?$AAs?$AA?5?$AAT?$AAy?$AAp?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAu@ ; `string'
PUBLIC	??_C@_1BA@HANLFFFG@?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt@ ; `string'
PUBLIC	??_C@_1DE@GENBDOHF@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF@ ; `string'
PUBLIC	??_C@_1DC@OPMJCKIB@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF@ ; `string'
PUBLIC	??_C@_1FK@OIDGAAMP@?$AAB?$AAi?$AAn?$AAa?$AAr?$AAy?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AAd?$AAo?$AAe@ ; `string'
PUBLIC	??_C@_1CM@LNIALBHN@?$AAS?$AAh?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAb?$AAe?$AA?5?$AAh@ ; `string'
PUBLIC	??_C@_1BK@ODFKMBGC@?$AAl?$AAp?$AAs?$AAz?$AAR?$AAe?$AAg?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BK@DGLFCBHI@?$AAp?$AAp?$AAs?$AAz?$AAR?$AAe?$AAg?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1EA@NHKLICFA@?$AAH?$AAK?$AAC?$AAU?$AA?$AN?$AA?6?$AA?$HL?$AA?7?$AAS?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BE@LJOLIMEM@?$AA?$AN?$AA?6?$AA?7?$AA?$HN?$AA?$AN?$AA?6?$AA?$HN?$AA?$AN?$AA?6@ ; `string'
PUBLIC	??_C@_1DG@KOLNJMBJ@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAn?$AAo?$AA?5?$AAc?$AAl?$AAo?$AAs?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_19IGGGDNCK@?$AA?$CF?$AAT?$AAs?$AA?6@	; `string'
PUBLIC	??_C@_1DM@JFHAPNGI@?$AAH?$AAK?$AAe?$AAy?$AAF?$AAr?$AAo?$AAm?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5@ ; `string'
PUBLIC	??_C@_1FE@MCPBFDLN@?$AAS?$AAy?$AAn?$AAt?$AAa?$AAx?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?0?$AA?5?$AAe@ ; `string'
PUBLIC	??_C@_1EE@EMAKHHOG@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs@ ; `string'
PUBLIC	??_C@_1BM@KJDIPNJ@?$AAN?$AAu?$AAm?$AA?5?$AAE?$AAl?$AAs?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?6@ ; `string'
PUBLIC	??_C@_1BM@BEOOHDFB@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAT?$AAs?$AA?6@ ; `string'
PUBLIC	??_C@_1CE@NOBELHPC@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAk?$AAe?$AAy?$AA?5?$AA?$CF?$AAT@ ; `string'
PUBLIC	??_C@_1CA@MKECKMBH@?$AAO?$AAp?$AAe?$AAn?$AAe?$AAd?$AA?5?$AAK?$AAe?$AAy?$AA?5?$AA?$CF?$AAT?$AAs?$AA?6@ ; `string'
PUBLIC	??_C@_1FK@OAJHMKAA@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAp?$AAe?$AAn?$AA?5?$AAk@ ; `string'
PUBLIC	??_C@_1CM@OHCCCDHD@?$AAE?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy@ ; `string'
PUBLIC	??_C@_1FA@ECAJCMBE@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAo?$AAn?$AA?9?$AAe?$AAm@ ; `string'
PUBLIC	??_C@_1CE@OGJGDPFE@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAK?$AAe?$AAy?$AA?5?$AA?$CF?$AAT@ ; `string'
PUBLIC	??_C@_1DC@HEJCCJC@?$AA0?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAp?$AAM?$AAa?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe@ ; `string'
PUBLIC	??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BG@JBACFMF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA_?$AAR?$AAa?$AAw@ ; `string'
PUBLIC	??_C@_1BC@KAILKFFG@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY@ ; `string'
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	??_C@_1EC@GOCPDDCL@?$AAp?$AAb?$AAs?$AAt?$AAr?$AAP?$AAa?$AAt?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5@ ; `string'
PUBLIC	??_C@_1CE@MNLFIKHJ@?$AAh?$AAI?$AAn?$AAs?$AAt?$AAT?$AAy?$AAp?$AAe?$AAL?$AAi?$AAb?$AA?5?$AA?$CB?$AA?$DN@ ; `string'
PUBLIC	??_C@_19ILOCMLCJ@?$AA?4?$AAt?$AAl?$AAb@		; `string'
PUBLIC	__GUID_0002e012_0000_0000_c000_000000000046
PUBLIC	??_C@_1OK@NEECLFPA@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAL?$AA?$CC?$AAU?$AAs?$AAe?$AA?5?$AAO?$AAB?$AAJ?$AAE@ ; `string'
PUBLIC	??_C@_1CG@IDMIONOG@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?9?$AA?$DO?$AAi?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$DN@ ; `string'
PUBLIC	??_C@_1O@FHBGLCIO@?$AAC?$AAL?$AAS?$AAI?$AAD?$AA?2@ ; `string'
PUBLIC	??_C@_1CK@IFBKBFAA@?$AA?2?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAd?$AA?5?$AAC?$AAa?$AAt?$AAe?$AAg@ ; `string'
PUBLIC	??_C@_1DA@BIHALFED@?$AA?2?$AAI?$AAm?$AAp?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AAe?$AAd?$AA?5?$AAC?$AAa@ ; `string'
PUBLIC	??_C@_1BK@EDKOLFBJ@?$AAO?$AAL?$AAE?$AAA?$AAU?$AAT?$AA3?$AA2?$AA?4?$AAD?$AAL?$AAL@ ; `string'
PUBLIC	??_C@_0BJ@CNLFOMHB@UnRegisterTypeLibForUser@	; `string'
PUBLIC	??_C@_0BH@LBOMMKPJ@RegisterTypeLibForUser@	; `string'
PUBLIC	??_C@_1CA@GAOMIJFK@?$AAp?$AAC?$AAo?$AAm?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1EA@JIHAIGJA@?$AAp?$AAC?$AAo?$AAm?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?9?$AA?$DO?$AAm?$AA_?$AAh@ ; `string'
PUBLIC	??_C@_1IO@OONIPMJC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	__GUID_b196b284_bab4_101a_b69c_00aa00341d07
PUBLIC	??_C@_1IO@BDEIDBOP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_1BG@PEGMCOIG@?$AAp?$AAT?$AAh?$AAi?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BK@ENABKMAI@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1GE@KALDMMBC@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?9?$AA?$DO?$AAp?$AAF?$AAu?$AAn?$AAc@ ; `string'
PUBLIC	??_C@_1BA@JJDNGNLN@?$AA?$CB?$AAb?$AAB?$AAl?$AAi?$AAn?$AAd@ ; `string'
PUBLIC	??_C@_1DG@BEGLAIHK@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp@ ; `string'
PUBLIC	??_C@_1JC@NCPNLOIP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_1JK@PCFOBMDH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_1IC@DIIBMAJJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	?_Module@@3VCComModule@ATL@@A			; _Module
PUBLIC	??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@ ; `string'
PUBLIC	??_C@_1BO@IINBGKAE@?$AAp?$AAp?$AAv?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BK@MDGGGAPK@?$AAm?$AA_?$AAd?$AAw?$AAR?$AAe?$AAf?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BO@CFNLNIPO@?$AAm?$AA_?$AAd?$AAw?$AAR?$AAe?$AAf?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1?$AAL@ ; `string'
PUBLIC	??_C@_1IG@BMPHLDAM@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAL?$AA?$CC?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5@ ; `string'
PUBLIC	??_7CComClassFactory@ATL@@6B@			; ATL::CComClassFactory::`vftable'
PUBLIC	??_C@_1HC@JLHBDINH@?$AA_?$AAG?$AAe?$AAt?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?$CI?$AA?$CJ?$AA?$FL?$AA0@ ; `string'
PUBLIC	?_entries@?1??_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B ; `ATL::CComClassFactory::_GetEntries'::`2'::_entries
PUBLIC	__GUID_00000001_0000_0000_c000_000000000046
PUBLIC	??_C@_1CC@KFPLEHE@?$AAC?$AAC?$AAo?$AAm?$AAC?$AAl?$AAa?$AAs?$AAs?$AAF?$AAa?$AAc?$AAt?$AAo?$AAr@ ; `string'
PUBLIC	??_C@_1DC@ENLDIEGP@?$AAm?$AA_?$AAp?$AAf?$AAn?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAI?$AAn?$AAs?$AAt@ ; `string'
PUBLIC	??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@ ; `string'
PUBLIC	??_C@_1KO@PPNHIIND@?$AAC?$AAC?$AAo?$AAm?$AAC?$AAl?$AAa?$AAs?$AAs?$AAF?$AAa?$AAc?$AAt?$AAo?$AAr@ ; `string'
PUBLIC	??_C@_1BI@MCKDPFMC@?$AAp?$AAp?$AAI?$AAn?$AAf?$AAo?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	?s_Claim@?7??GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPA_WIKPAJ@Z@4PA_WA ; `ATL::CComTypeInfoHolder::GetIDsOfNames'::`8'::s_Claim
PUBLIC	?s_Release@?7??GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPA_WIKPAJ@Z@4PA_WA ; `ATL::CComTypeInfoHolder::GetIDsOfNames'::`8'::s_Release
PUBLIC	??_C@_1BA@CAHHGEAC@?$AAd?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1DM@FHENBGPF@?$AAm?$AA_?$AAp?$AAl?$AAi?$AAb?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@ ; `string'
PUBLIC	??_C@_1IM@JHDEBJKA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_0DP@CJHCKAIL@Module?5LIBID?5not?5initialized?4?5S@ ; `string'
PUBLIC	??_C@_1NK@EGGIGGEE@?$AA?$CB?$AAI?$AAn?$AAl?$AAi?$AAn?$AAe?$AAI?$AAs?$AAE?$AAq?$AAu?$AAa?$AAl?$AAG@ ; `string'
PUBLIC	??_C@_1MK@MBBPECFK@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?3?$AA?5?$AAC?$AAC?$AAo?$AAm?$AAT@ ; `string'
PUBLIC	??_C@_1HK@IMBOLHFI@?$AA?7?$AAS?$AAe?$AAe?$AA?5?$AAI?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt?$AAc?$AAh?$AAI@ ; `string'
PUBLIC	??_C@_1GM@JMFGIKJN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_1GI@KFOMLMHI@?$AA?7?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA?5?$AAT?$AAy?$AAp?$AAe?$AAl?$AAi?$AAb@ ; `string'
PUBLIC	??_C@_1KC@EPBNKDJD@?$AA?7?$AAI?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt?$AAc?$AAh?$AAI?$AAm?$AAp?$AAl?$AA?0@ ; `string'
PUBLIC	??_C@_1CE@GFEBMKPP@?$AAp?$AAp?$AAF?$AAi?$AAn?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CK?$AAp?$AAp?$AAF?$AAi@ ; `string'
PUBLIC	??_C@_1FI@CDNFCAGD@?$AAd?$AAw?$AAC?$AAo?$AAo?$AAk?$AAi?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@ ; `string'
PUBLIC	??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_1EO@PKGIEOJK@?$AAi?$AAd?$AAx?$AA?5?$AA?$DM?$AA?5?$AAd?$AAw?$AAC?$AAo?$AAo?$AAk?$AAi?$AAe?$AA?5@ ; `string'
PUBLIC	__GUID_b196b287_bab4_101a_b69c_00aa00341d07
PUBLIC	__GUID_b196b285_bab4_101a_b69c_00aa00341d07
PUBLIC	??_C@_1BE@FKGJCHLP@?$AAp?$AAM?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1GG@DILCHCCF@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAa@ ; `string'
PUBLIC	??_C@_1DK@CIMELFNK@?$AAI?$AAn?$AAv?$AAo?$AAk?$AAe?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5@ ; `string'
PUBLIC	__GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
PUBLIC	__GUID_0000010c_0000_0000_c000_000000000046
PUBLIC	??_C@_1OA@EJAAKNNE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?rcDefault@CWindow@ATL@@2UtagRECT@@A		; ATL::CWindow::rcDefault
PUBLIC	??_C@_1CG@OFEMDDJL@?$AA?3?$AA?3?$AAI?$AAs?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?$CI?$AAm?$AA_?$AAh?$AAW@ ; `string'
PUBLIC	__GUID_00000114_0000_0000_c000_000000000046
PUBLIC	__GUID_922eada0_3424_11cf_b670_00aa004cd6d8
PUBLIC	__GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
PUBLIC	__GUID_00000119_0000_0000_c000_000000000046
PUBLIC	__GUID_b196b289_bab4_101a_b69c_00aa00341d07
PUBLIC	??_C@_1DK@DAANONID@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe@ ; `string'
PUBLIC	__GUID_00000117_0000_0000_c000_000000000046
PUBLIC	__GUID_0000010e_0000_0000_c000_000000000046
PUBLIC	__GUID_b196b288_bab4_101a_b69c_00aa00341d07
PUBLIC	__GUID_00000113_0000_0000_c000_000000000046
PUBLIC	__GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
PUBLIC	__GUID_00000112_0000_0000_c000_000000000046
PUBLIC	__GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
PUBLIC	__GUID_00000127_0000_0000_c000_000000000046
PUBLIC	__GUID_0000010d_0000_0000_c000_000000000046
PUBLIC	??_C@_1O@GBFKGNEO@?$AAA?$AAT?$AAL?$AA?3?$AA?$CF?$AAp@ ; `string'
PUBLIC	??_C@_19GCAABOFN@?$AAb?$AAR?$AAe?$AAt@		; `string'
PUBLIC	??_C@_1BA@PICGEGJB@?$AAD?$AAI?$AAS?$AAP?$AAL?$AAA?$AAY@ ; `string'
PUBLIC	??_C@_1BO@EKDDFOBL@?$AAh?$AAD?$AAC?$AAS?$AAc?$AAr?$AAe?$AAe?$AAn?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	__GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
PUBLIC	??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1IC@FBPLOGNL@?$AA?$CI?$AA?$CI?$AA?$CI?$AAH?$AAR?$AAE?$AAS?$AAU?$AAL?$AAT?$AA?$CJ?$AA?$CI?$AAh?$AAR?$AAe@ ; `string'
PUBLIC	??_C@_1CE@EIEAFJJI@?$AAv?$AAa?$AAr?$AA?4?$AAv?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAV?$AAT?$AA_?$AAB?$AAO@ ; `string'
PUBLIC	??_C@_1BO@NKNHJKPB@?$AAp?$AAp?$AAU?$AAn?$AAk?$AAS?$AAi?$AAt?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	__GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
PUBLIC	??_C@_1BK@IELOKEDE@?$AAp?$AAQ?$AAA?$AAC?$AAo?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BK@EDCEEEEO@?$AAp?$AAQ?$AAA?$AAC?$AAt?$AAr?$AAl?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1DM@NOHFMFHB@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAp?$AA?5?$AAI?$AAO?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1DE@OCCEGLFH@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAp?$AA?5?$AAP?$AAr?$AAo?$AAp@ ; `string'
PUBLIC	??_C@_1FA@GGGGDGB@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAp?$AA?5?$AAD?$AAe?$AAf?$AAa@ ; `string'
PUBLIC	__GUID_b196b28b_bab4_101a_b69c_00aa00341d07
PUBLIC	??_C@_1BE@MEPLLFBA@?$AAp?$AAU?$AAn?$AAk?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BE@PDPDNEIJ@?$AAp?$AAI?$AAP?$AAO?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1CA@IIDAJDHP@?$AAm?$AA_?$AAs?$AAp?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAS?$AAi?$AAt?$AAe@ ; `string'
PUBLIC	??_C@_1O@MACBBPAK@?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BM@HHHJIMDE@?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAm?$AA_?$AAh?$AAW?$AAn?$AAd?$AAC?$AAD@ ; `string'
PUBLIC	??_C@_1FA@MLHHLKCI@?$AAp?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAS?$AAi?$AAt?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5@ ; `string'
PUBLIC	??_C@_1BK@CEDNNLJH@?$AAp?$AAp?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAS?$AAi?$AAt?$AAe@ ; `string'
PUBLIC	??_C@_1CE@OHCDIKPM@?$AA?$CB?$AAm?$AA_?$AAb?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@ ; `string'
PUBLIC	??_C@_1CG@KJDDPODI@?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAW?$AAi?$AAn?$AAd@ ; `string'
PUBLIC	??_C@_1GK@PEJLBIEI@?$AAD?$AAr?$AAa?$AAw?$AA?5?$AAd?$AAw?$AAD?$AAr?$AAa?$AAw?$AAA?$AAs?$AAp?$AAe@ ; `string'
PUBLIC	??_C@_1CC@KIMLOMB@?$AA?7?$AAp?$AAr?$AAc?$AAB?$AAo?$AAu?$AAn?$AAd?$AAs?$AA?$DN?$AAN?$AAU?$AAL?$AAL@ ; `string'
PUBLIC	??_C@_1DA@MIJFAJLJ@?$AA?7?$AAp?$AAr?$AAc?$AAB?$AAo?$AAu?$AAn?$AAd?$AAs?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?$CF@ ; `string'
PUBLIC	??_C@_1CE@LIAGMDDA@?$AA?7?$AAp?$AAr?$AAc?$AAW?$AAB?$AAo?$AAu?$AAn?$AAd?$AAs?$AA?$DN?$AAN?$AAU?$AAL@ ; `string'
PUBLIC	??_C@_1DC@EMEJOIFB@?$AA?7?$AAp?$AAr?$AAc?$AAW?$AAB?$AAo?$AAu?$AAn?$AAd?$AAs?$AA?$DN?$AA?$CF?$AAd?$AA?0@ ; `string'
PUBLIC	??_C@_1BK@POAAPOBL@?$AAF?$AAo?$AAr?$AAm?$AAa?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAx?$AA?6@ ; `string'
PUBLIC	??_C@_1BI@LHCJEHBH@?$AAT?$AAY?$AAM?$AAE?$AAD?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAx?$AA?6@ ; `string'
PUBLIC	?_tih@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A ; ATL::IDispatchImpl<IOPOSGestureControl,&IID_IOPOSGestureControl,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::_tih
PUBLIC	?pConnMap@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@0PBU_ATL_CONNMAP_ENTRY@2@B ; ATL::IConnectionPointContainerImpl<COPOSGestureControl>::pConnMap
PUBLIC	?_tih@?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A ; ATL::IProvideClassInfo2Impl<&CLSID_OPOSGestureControl,&DIID__IOPOSGestureControlEvents,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::_tih
PUBLIC	??_C@_1HC@PBALCFGB@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@ ; `string'
PUBLIC	?_entries@?1??_GetEntries@COPOSGestureControl@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B ; `COPOSGestureControl::_GetEntries'::`2'::_entries
PUBLIC	__GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
PUBLIC	__GUID_0000010a_0000_0000_c000_000000000046
PUBLIC	__GUID_b196b283_bab4_101a_b69c_00aa00341d07
PUBLIC	__GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
PUBLIC	??_C@_1CI@KJKGOLOJ@?$AAC?$AAO?$AAP?$AAO?$AAS?$AAG?$AAe?$AAs?$AAt?$AAu?$AAr?$AAe?$AAC?$AAo?$AAn@ ; `string'
PUBLIC	?pPropMap@?1??GetPropertyMap@COPOSGestureControl@@SAPBUATL_PROPMAP_ENTRY@ATL@@XZ@4QBU34@B ; `COPOSGestureControl::GetPropertyMap'::`2'::pPropMap
PUBLIC	??_C@_17DGDADEHL@?$AA_?$AAc?$AAx@		; `string'
PUBLIC	??_C@_17IOIMFDBO@?$AA_?$AAc?$AAy@		; `string'
PUBLIC	?_entries@?1??GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z@4QBU34@B ; `COPOSGestureControl::GetConnMap'::`2'::_entries
PUBLIC	?$TSS0@?1??GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z@4HA ; `COPOSGestureControl::GetConnMap'::`2'::$TSS0
PUBLIC	??_C@_0DJ@ECLACHDO@C?3?2Develop?2OPOS?9CCO?2zGestureCon@ ; `string'
PUBLIC	??_C@_1GA@DMLHJIOB@?$AA?$CL?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3@ ; `string'
PUBLIC	??_C@_1BI@KGBJECC@?$AA?5?$AA?5?$AA?5?$AA?5?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4@ ; `string'
PUBLIC	??_C@_1GC@IKMABJEN@?$AA?9?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3@ ; `string'
PUBLIC	??_C@_1DO@FFEJMENC@?$AA?9?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3@ ; `string'
PUBLIC	??_C@_1HG@FBPJDKIH@?$AA?$CL?$AAE?$AAr?$AAr?$AAo?$AAr?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAR?$AAC@ ; `string'
PUBLIC	??_C@_1DC@PMEACJIH@?$AA?9?$AAE?$AAr?$AAr?$AAo?$AAr?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAR?$AAe@ ; `string'
PUBLIC	??_C@_1EE@DPNPCNOD@?$AA?$CL?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe@ ; `string'
PUBLIC	??_C@_1CK@BBCBFAGA@?$AA?9?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe@ ; `string'
PUBLIC	??_C@_1DI@OMBDAFMJ@?$AA?$CL?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAE?$AAv@ ; `string'
PUBLIC	??_C@_1CG@NFFONGGK@?$AA?9?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAE?$AAv@ ; `string'
PUBLIC	??_C@_1CG@BBHLCHLH@?$AA?$CL?$AAD?$AAo?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAM?$AAs?$AAg?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1EO@NLBACKII@?$AA?$CK?$AAD?$AAo?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAP?$AAo?$AAs?$AAt?$AAi@ ; `string'
PUBLIC	??_C@_1CG@IKKLCHHJ@?$AA?9?$AAD?$AAo?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAM?$AAs?$AAg?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BC@MNKGOHDN@?$AAp?$AAp?$AAv?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_7?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@6B@ ; ATL::CComObjectCached<ATL::CComClassFactory>::`vftable'
PUBLIC	??_C@_1CO@NKNAIIAP@?$AA?$CK?$AAU?$AAn?$AAa?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?3?$AA?5?$AAC?$AAo?$AAo?$AAk@ ; `string'
PUBLIC	??_C@_1EA@IMKHEMDJ@?$AA?$CK?$AAA?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?3?$AA?5?$AAS?$AAi?$AAn?$AAk?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1CE@PGFMOFKI@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe@ ; `string'
PUBLIC	??_C@_1CI@HLBJDONE@?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AAE@ ; `string'
PUBLIC	??_C@_1BG@LODEBHDD@?$AAE?$AAr?$AAr?$AAo?$AAr?$AAE?$AAv?$AAe?$AAn?$AAt@ ; `string'
PUBLIC	??_C@_1BM@CBGEBBBJ@?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt@ ; `string'
PUBLIC	__GUID_b196b286_bab4_101a_b69c_00aa00341d07
PUBLIC	??_C@_1FM@CLKMPFGJ@?$AAI?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAS?$AAa?$AAf?$AAe?$AAt?$AAy?$AAI?$AAm@ ; `string'
PUBLIC	??_C@_1FM@DHGAMINB@?$AAI?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAS?$AAa?$AAf?$AAe?$AAt?$AAy?$AAI?$AAm@ ; `string'
PUBLIC	??_C@_1DM@FNLPENOI@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ ; `string'
PUBLIC	??_C@_1CE@PHHHDEOE@?$AAp?$AAp?$AAe?$AAn?$AAu?$AAm?$AAA?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?5?$AA?$CB?$AA?$DN@ ; `string'
PUBLIC	??_C@_1DI@BLCCNEGF@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ ; `string'
PUBLIC	??_C@_1DE@GIJAFMDC@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ ; `string'
PUBLIC	??_C@_1DO@IJEOKODF@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ ; `string'
PUBLIC	??_C@_1DC@EJMOFAGB@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ ; `string'
PUBLIC	??_C@_1EO@CPLAMLOM@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ ; `string'
PUBLIC	??_C@_1DM@BPNENJGE@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ ; `string'
PUBLIC	??_C@_1DK@IIMKPHM@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ ; `string'
PUBLIC	??_C@_1DE@FNDLCJKG@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ ; `string'
PUBLIC	??_C@_1EM@OECHILCB@?$AAI?$AAQ?$AAu?$AAi?$AAc?$AAk?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAI@ ; `string'
PUBLIC	??_C@_1EM@DNDGLBOK@?$AAI?$AAQ?$AAu?$AAi?$AAc?$AAk?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAI@ ; `string'
PUBLIC	??_C@_1EG@OOLJNHOI@?$AAI?$AAQ?$AAu?$AAi?$AAc?$AAk?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAI@ ; `string'
PUBLIC	??_C@_1EK@IMECMPEJ@?$AAI?$AAS?$AAp?$AAe?$AAc?$AAi?$AAf?$AAy?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt@ ; `string'
PUBLIC	??_C@_1EM@MKDPAIHC@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@ ; `string'
PUBLIC	??_C@_1EI@KGLFIEKA@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@ ; `string'
PUBLIC	?vszContents@?6??Save@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@H@Z@4PB_WB ; `ATL::IPersistStorageImpl<COPOSGestureControl>::Save'::`7'::vszContents
PUBLIC	??_C@_1BC@ENICKDH@?$AAC?$AAo?$AAn?$AAt?$AAe?$AAn?$AAt?$AAs@ ; `string'
PUBLIC	??_C@_1DG@LDJFMFDF@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@ ; `string'
PUBLIC	??_C@_1DG@GOPCGMJM@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@ ; `string'
PUBLIC	??_C@_1DM@FLFDKDNG@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@ ; `string'
PUBLIC	??_C@_1DM@KEMDAJPD@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@ ; `string'
PUBLIC	??_C@_1EC@CBCJOIPD@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@ ; `string'
PUBLIC	??_7?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@ ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::`vftable'
PUBLIC	??_C@_1FO@FOAHOGK@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@ ; `string'
PUBLIC	??_C@_1GE@GOJAGBD@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@ ; `string'
PUBLIC	??_C@_1DM@IDHMCPFB@?$AAp?$AAT?$AA?9?$AA?$DO?$AAm?$AA_?$AAp?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM@ ; `string'
PUBLIC	??_C@_1GG@CPMHNPED@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@ ; `string'
PUBLIC	??_C@_1GC@NABMBGNB@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@ ; `string'
PUBLIC	??_C@_1FO@KFPABBGF@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@ ; `string'
PUBLIC	??_C@_1GI@FLFGNCEO@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@ ; `string'
PUBLIC	??_C@_1GM@OCHIALO@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@ ; `string'
PUBLIC	??_C@_1FI@POCNNILF@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@ ; `string'
PUBLIC	??_C@_1EK@BJGNOKFG@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ ; `string'
PUBLIC	??_C@_1CC@BNJDLDIH@?$AAp?$AAE?$AAx?$AAt?$AAe?$AAn?$AAt?$AAI?$AAn?$AAf?$AAo?$AA?5?$AA?$CB?$AA?$DN?$AA?5@ ; `string'
PUBLIC	??_C@_1BI@JBIFBCLO@?$AAp?$AAs?$AAi?$AAz?$AAe?$AAl?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1EC@OOPFCKPJ@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ ; `string'
PUBLIC	??_C@_1CA@PALDCHIG@?$AAp?$AAH?$AAi?$AAt?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1CA@PEBIMLJG@?$AAW?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAD?$AAV?$AAA?$AAS?$AAP?$AAE?$AAC?$AAT?$AA?6@ ; `string'
PUBLIC	??_C@_1EE@LBFAGAOE@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ ; `string'
PUBLIC	??_C@_1EE@ICFBLIPC@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ ; `string'
PUBLIC	??_C@_1BO@EONKKIBB@?$AAp?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1DG@HMMPEHJO@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ ; `string'
PUBLIC	??_C@_1DM@POGPOFEN@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ ; `string'
PUBLIC	??_C@_1BK@KJBKAKFM@?$AAl?$AAp?$AAs?$AAi?$AAz?$AAe?$AAl?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1DM@LPCKIPFO@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ ; `string'
PUBLIC	??_C@_1BO@NDBFONFF@?$AAp?$AAp?$AAA?$AAd?$AAv?$AAS?$AAi?$AAn?$AAk?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1DM@EKHMFGBP@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ ; `string'
PUBLIC	??_C@_1DI@BJKGFPLB@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ ; `string'
PUBLIC	??_C@_1DE@PKOCJOMP@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ ; `string'
PUBLIC	??_C@_1DO@OMBHOJOI@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ ; `string'
PUBLIC	??_C@_1DC@EOPFDCAL@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ ; `string'
PUBLIC	??_C@_1FK@MLCEAOAF@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@ ; `string'
PUBLIC	??_C@_1FG@NONNDFDB@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@ ; `string'
PUBLIC	??_C@_1GE@HBFPAJL@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@ ; `string'
PUBLIC	??_C@_1GI@CGHNFFAP@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@ ; `string'
PUBLIC	??_C@_1GG@KHCNGNGO@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@ ; `string'
PUBLIC	??_C@_1GE@JEOLIANC@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@ ; `string'
PUBLIC	??_C@_1FA@GCGKPCBJ@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@ ; `string'
PUBLIC	??_C@_1DO@PBDGGEPN@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1DO@GENDACH@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1DI@IJKKKNHF@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1DE@DIPMKMJO@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1DA@OJLCEIKD@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1DG@IGBKGHLP@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1DG@HDEMLOPO@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1DK@OLKKBIEP@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1EA@KFGOFNKC@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1O@PBGNBMDG@?$AAp?$AAC?$AAl?$AAs?$AAi?$AAd@ ; `string'
PUBLIC	??_C@_1DI@JMCOGOPO@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1DA@FNILLDED@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1DG@PNMFEDJ@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1BM@CEHACOFH@?$AAp?$AAp?$AAE?$AAn?$AAu?$AAm?$AAO?$AAl?$AAe?$AAV?$AAe?$AAr?$AAb@ ; `string'
PUBLIC	??_C@_1DI@MCJJDJOB@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1CG@EJEJDDBA@?$AAp?$AAT?$AA?9?$AA?$DO?$AAm?$AA_?$AAs?$AAp?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAS@ ; `string'
PUBLIC	??_C@_1EC@KDKDKHCO@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1DK@PCFABHJP@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1DG@CEIENMGG@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1DG@NBNCAFCH@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1CO@MLHGCMGP@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1DM@ENNHEKGE@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1DO@FNGOFKPG@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1DO@NMABOKNE@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ ; `string'
PUBLIC	??_C@_1FE@LCIFNEAD@?$AAI?$AAO?$AAl?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAI?$AAm?$AAp?$AAl@ ; `string'
PUBLIC	??_C@_1CC@GHJDDODE@?$AA?5?$AA?9?$AA?9?$AA?5?$AAD?$AAI?$AAS?$AAP?$AAI?$AAD?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd@ ; `string'
PUBLIC	??_C@_1DI@HLJHBFHB@?$AAI?$AAO?$AAl?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAI?$AAm?$AAp?$AAl@ ; `string'
PUBLIC	??_C@_1EA@IFIKFMIO@?$AAI?$AAO?$AAl?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAI?$AAm?$AAp?$AAl@ ; `string'
PUBLIC	??_C@_1EC@OBJBCLBJ@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@ ; `string'
PUBLIC	??_C@_1EI@OFMICAKH@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@ ; `string'
PUBLIC	??_C@_1EK@BKBPFBNN@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAs@ ; `string'
PUBLIC	??_C@_1FG@PECCGIAK@?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AAo?$AAv?$AAe?$AAr?$AAf?$AAl?$AAo?$AAw@ ; `string'
PUBLIC	??_C@_1DM@INAJINEF@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@ ; `string'
PUBLIC	??_C@_1DM@FAGOCEOM@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@ ; `string'
PUBLIC	??_C@_1EC@BOABIBDM@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@ ; `string'
PUBLIC	??_C@_1EI@FEIMOCIK@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@ ; `string'
PUBLIC	??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@	; `string'
PUBLIC	??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@	; `string'
PUBLIC	??_C@_0HA@JEDONBAF@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1OK@FGCLCILL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@EMCLECFJ@?$AAm?$AA_?$AAp?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD@	; `string'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6BCComControlBase@1@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@1@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStreamInitImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IOleControlImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IOleObjectImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IViewObjectExImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStorageImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IQuickActivateImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IDataObjectImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@1@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IPropertyNotifySinkCP@VCOPOSGestureControl@@VCComDynamicUnkArray@ATL@@@1@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@@ ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComAggObject@VCOPOSGestureControl@@@ATL@@6B@ ; ATL::CComAggObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6BCComControlBase@1@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@1@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStreamInitImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleControlImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleObjectImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IViewObjectExImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStorageImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IQuickActivateImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IDataObjectImpl@VCOPOSGestureControl@@@1@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@1@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IPropertyNotifySinkCP@VCOPOSGestureControl@@VCComDynamicUnkArray@ATL@@@1@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@@ ; ATL::CComObject<COPOSGestureControl>::`vftable'
PUBLIC	??_C@_1GI@CMBOLMBG@?$AA?$CK?$AAF?$AAi?$AAr?$AAe?$AAT?$AAh?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5@ ; `string'
PUBLIC	??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	?wc@?1??GetWndClassInfo@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@SAAAU_ATL_WNDCLASSINFOW@3@XZ@4U43@A ; `ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo'::`2'::wc
PUBLIC	??_C@_1BE@ENNDGLJC@?$AA_?$AAC?$AAC?$AAo?$AAm?$AAE?$AAn?$AAu?$AAm@ ; `string'
PUBLIC	?_entries@?1??_GetEntries@?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B ; `ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::_GetEntries'::`2'::_entries
PUBLIC	__GUID_00020412_0000_0000_c000_000000000046
PUBLIC	__GUID_00020401_0000_0000_c000_000000000046
PUBLIC	??_C@_1HK@LKOJNIEL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@ ; `string'
PUBLIC	??_C@_1JG@LLDBHFHF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_1BG@LDIEAJMA@?$AAp?$AAP?$AAr?$AAo?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1HG@EHFNCEAN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn@ ; `string'
PUBLIC	??_C@_1CC@GCJALPHP@?$AAp?$AA?9?$AA?$DO?$AAp?$AAW?$AAn?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5@ ; `string'
PUBLIC	??_7?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@ ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::`vftable'
PUBLIC	?_entries@?1??_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B ; `ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_GetEntries'::`2'::_entries
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	___report_rangecheckfailure:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo:PROC
EXTRN	__errno:PROC
EXTRN	_calloc:PROC
EXTRN	_free:PROC
EXTRN	_malloc:PROC
EXTRN	__recalloc:PROC
EXTRN	??2@YAPAXIABUnothrow_t@std@@@Z:PROC		; operator new
EXTRN	??_U@YAPAXIABUnothrow_t@std@@@Z:PROC		; operator new[]
EXTRN	__resetstkoflw:PROC
EXTRN	__CrtDbgReportW:PROC
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_wcsstr:PROC
EXTRN	_wcscat_s:PROC
EXTRN	_wcscpy_s:PROC
EXTRN	_wcsncpy_s:PROC
EXTRN	_wcslen:PROC
EXTRN	__imp__EncodePointer@4:PROC
EXTRN	__imp__DecodePointer@4:PROC
EXTRN	__imp__RaiseException@16:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__SetLastError@4:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__InitializeCriticalSectionEx@12:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__ResetEvent@4:PROC
EXTRN	__imp__ReleaseMutex@4:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__GetCurrentThreadId@0:PROC
EXTRN	__imp__DisableThreadLibraryCalls@4:PROC
EXTRN	__imp__FreeLibrary@4:PROC
EXTRN	__imp__GetModuleFileNameW@12:PROC
EXTRN	__imp__GetModuleHandleW@4:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__LoadLibraryExW@12:PROC
EXTRN	__imp__LoadResource@8:PROC
EXTRN	__imp__SizeofResource@8:PROC
EXTRN	__imp__FindResourceW@12:PROC
EXTRN	__imp__GlobalAlloc@8:PROC
EXTRN	__imp__GlobalUnlock@4:PROC
EXTRN	__imp__GlobalLock@4:PROC
EXTRN	__imp__MulDiv@12:PROC
EXTRN	__imp__lstrcmpiW@8:PROC
EXTRN	__imp__CloseMetaFile@4:PROC
EXTRN	__imp__CreateDCW@16:PROC
EXTRN	__imp__CreateMetaFileW@4:PROC
EXTRN	__imp__CreateRectRgnIndirect@4:PROC
EXTRN	__imp__DeleteDC@4:PROC
EXTRN	__imp__DeleteMetaFile@4:PROC
EXTRN	__imp__GetDeviceCaps@8:PROC
EXTRN	__imp__RestoreDC@8:PROC
EXTRN	__imp__SaveDC@4:PROC
EXTRN	__imp__SetMapMode@8:PROC
EXTRN	__imp__LPtoDP@12:PROC
EXTRN	__imp__SetViewportOrgEx@16:PROC
EXTRN	__imp__SetWindowExtEx@16:PROC
EXTRN	__imp__SetWindowOrgEx@16:PROC
EXTRN	__imp__PostMessageW@16:PROC
EXTRN	__imp__DefWindowProcW@16:PROC
EXTRN	__imp__CallWindowProcW@20:PROC
EXTRN	__imp__UnregisterClassW@8:PROC
EXTRN	__imp__RegisterClassExW@4:PROC
EXTRN	__imp__GetClassInfoExW@12:PROC
EXTRN	__imp__CreateWindowExW@48:PROC
EXTRN	__imp__IsWindow@4:PROC
EXTRN	__imp__IsChild@8:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__SetWindowPos@28:PROC
EXTRN	__imp__CharNextW@4:PROC
EXTRN	__imp__SetFocus@4:PROC
EXTRN	__imp__GetFocus@0:PROC
EXTRN	__imp__GetKeyState@4:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	__imp__ReleaseDC@8:PROC
EXTRN	__imp__BeginPaint@8:PROC
EXTRN	__imp__EndPaint@8:PROC
EXTRN	__imp__SetWindowRgn@12:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__IntersectRect@12:PROC
EXTRN	__imp__UnionRect@12:PROC
EXTRN	__imp__OffsetRect@12:PROC
EXTRN	__imp__EqualRect@8:PROC
EXTRN	__imp__PtInRect@12:PROC
EXTRN	__imp__GetWindowLongW@8:PROC
EXTRN	__imp__SetWindowLongW@12:PROC
EXTRN	__imp__GetParent@4:PROC
EXTRN	__imp__LoadCursorW@8:PROC
EXTRN	__imp__MultiByteToWideChar@24:PROC
EXTRN	__imp__RegCloseKey@4:PROC
EXTRN	__imp__RegCreateKeyExW@36:PROC
EXTRN	__imp__RegDeleteKeyW@8:PROC
EXTRN	__imp__RegDeleteValueW@8:PROC
EXTRN	__imp__RegEnumKeyExW@32:PROC
EXTRN	__imp__RegOpenKeyExW@20:PROC
EXTRN	__imp__RegQueryInfoKeyW@48:PROC
EXTRN	__imp__RegSetValueExW@24:PROC
EXTRN	__imp__CoCreateInstance@20:PROC
EXTRN	__imp__StringFromGUID2@12:PROC
EXTRN	__imp__CoTaskMemAlloc@4:PROC
EXTRN	__imp__CoTaskMemRealloc@8:PROC
EXTRN	__imp__CoTaskMemFree@4:PROC
EXTRN	__imp__ReadClassStm@8:PROC
EXTRN	__imp__WriteClassStm@8:PROC
EXTRN	__imp__CreateDataAdviseHolder@4:PROC
EXTRN	__imp__SysAllocString@4:PROC
EXTRN	__imp__SysFreeString@4:PROC
EXTRN	__imp__SysStringLen@4:PROC
EXTRN	__imp__SysStringByteLen@4:PROC
EXTRN	__imp__SysAllocStringByteLen@8:PROC
EXTRN	__imp__VariantInit@4:PROC
EXTRN	__imp__VariantClear@4:PROC
EXTRN	__imp__VariantChangeType@16:PROC
EXTRN	__imp__VarUI4FromStr@16:PROC
EXTRN	__imp__LoadTypeLib@8:PROC
EXTRN	__imp__LoadRegTypeLib@20:PROC
EXTRN	__imp__RegisterTypeLib@12:PROC
EXTRN	__imp__UnRegisterTypeLib@20:PROC
EXTRN	__imp__OleSaveToStream@8:PROC
EXTRN	__imp__CreateOleAdviseHolder@4:PROC
EXTRN	__imp__OleRegGetUserType@12:PROC
EXTRN	__imp__OleRegGetMiscStatus@12:PROC
EXTRN	__imp__OleRegEnumVerbs@8:PROC
EXTRN	___stdio_common_vswprintf:PROC
EXTRN	___stdio_common_vswprintf_s:PROC
EXTRN	___stdio_common_vsnwprintf_s:PROC
EXTRN	__imp__OleCreatePropertyFrame@44:PROC
EXTRN	??_ECComModule@ATL@@UAEPAXI@Z:PROC		; ATL::CComModule::`vector deleting destructor'
EXTRN	??_ECRegObject@ATL@@UAEPAXI@Z:PROC		; ATL::CRegObject::`vector deleting destructor'
EXTRN	_AtlThunk_AllocateData@0:PROC
EXTRN	_AtlThunk_InitData@12:PROC
EXTRN	_AtlThunk_DataToCode@4:PROC
EXTRN	??_ECComClassFactory@ATL@@UAEPAXI@Z:PROC	; ATL::CComClassFactory::`vector deleting destructor'
EXTRN	?SetLONG@OposVariant@@QAEXJ@Z:PROC		; OposVariant::SetLONG
EXTRN	?SetLONG_Ptr@OposVariant@@QAEXPAJAAJ@Z:PROC	; OposVariant::SetLONG_Ptr
EXTRN	?SetBSTR_Copy@OposVariant@@QAEXPA_WAAJ@Z:PROC	; OposVariant::SetBSTR_Copy
EXTRN	?SetBSTR_InOutPtr@OposVariant@@QAE_NPAPA_WAAJ@Z:PROC ; OposVariant::SetBSTR_InOutPtr
EXTRN	??0OposDispParms@@QAE@PAVOposVariant@@H@Z:PROC	; OposDispParms::OposDispParms
EXTRN	??1OposDispParms@@QAE@XZ:PROC			; OposDispParms::~OposDispParms
EXTRN	??0COPOSGestureControl@@QAE@XZ:PROC		; COPOSGestureControl::COPOSGestureControl
EXTRN	?FinalConstruct@COPOSGestureControl@@QAEJXZ:PROC ; COPOSGestureControl::FinalConstruct
EXTRN	??1COPOSGestureControl@@UAE@XZ:PROC		; COPOSGestureControl::~COPOSGestureControl
EXTRN	?WriteTrace@COPOSGestureControl@@QAAXPB_WZZ:PROC ; COPOSGestureControl::WriteTrace
EXTRN	?WriteTraceString@COPOSGestureControl@@QAEXPB_WPA_W@Z:PROC ; COPOSGestureControl::WriteTraceString
EXTRN	?FreezeEvents@COPOSGestureControl@@MAGJH@Z:PROC	; COPOSGestureControl::FreezeEvents
EXTRN	?OnDraw@COPOSGestureControl@@MAEJAAUATL_DRAWINFO@@@Z:PROC ; COPOSGestureControl::OnDraw
EXTRN	?SOProcessID@COPOSGestureControl@@UAGJPAJ@Z:PROC ; COPOSGestureControl::SOProcessID
EXTRN	?get_OpenResult@COPOSGestureControl@@UAGJPAJ@Z:PROC ; COPOSGestureControl::get_OpenResult
EXTRN	?get_BinaryConversion@COPOSGestureControl@@UAGJPAJ@Z:PROC ; COPOSGestureControl::get_BinaryConversion
EXTRN	?put_BinaryConversion@COPOSGestureControl@@UAGJJ@Z:PROC ; COPOSGestureControl::put_BinaryConversion
EXTRN	?get_CapPowerReporting@COPOSGestureControl@@UAGJPAJ@Z:PROC ; COPOSGestureControl::get_CapPowerReporting
EXTRN	?get_CheckHealthText@COPOSGestureControl@@UAGJPAPA_W@Z:PROC ; COPOSGestureControl::get_CheckHealthText
EXTRN	?get_Claimed@COPOSGestureControl@@UAGJPAF@Z:PROC ; COPOSGestureControl::get_Claimed
EXTRN	?get_DeviceEnabled@COPOSGestureControl@@UAGJPAF@Z:PROC ; COPOSGestureControl::get_DeviceEnabled
EXTRN	?put_DeviceEnabled@COPOSGestureControl@@UAGJF@Z:PROC ; COPOSGestureControl::put_DeviceEnabled
EXTRN	?get_FreezeEvents@COPOSGestureControl@@UAGJPAF@Z:PROC ; COPOSGestureControl::get_FreezeEvents
EXTRN	?put_FreezeEvents@COPOSGestureControl@@UAGJF@Z:PROC ; COPOSGestureControl::put_FreezeEvents
EXTRN	?get_OutputID@COPOSGestureControl@@UAGJPAJ@Z:PROC ; COPOSGestureControl::get_OutputID
EXTRN	?get_PowerNotify@COPOSGestureControl@@UAGJPAJ@Z:PROC ; COPOSGestureControl::get_PowerNotify
EXTRN	?put_PowerNotify@COPOSGestureControl@@UAGJJ@Z:PROC ; COPOSGestureControl::put_PowerNotify
EXTRN	?get_PowerState@COPOSGestureControl@@UAGJPAJ@Z:PROC ; COPOSGestureControl::get_PowerState
EXTRN	?get_ResultCode@COPOSGestureControl@@UAGJPAJ@Z:PROC ; COPOSGestureControl::get_ResultCode
EXTRN	?get_ResultCodeExtended@COPOSGestureControl@@UAGJPAJ@Z:PROC ; COPOSGestureControl::get_ResultCodeExtended
EXTRN	?get_State@COPOSGestureControl@@UAGJPAJ@Z:PROC	; COPOSGestureControl::get_State
EXTRN	?get_ControlObjectDescription@COPOSGestureControl@@UAGJPAPA_W@Z:PROC ; COPOSGestureControl::get_ControlObjectDescription
EXTRN	?get_ControlObjectVersion@COPOSGestureControl@@UAGJPAJ@Z:PROC ; COPOSGestureControl::get_ControlObjectVersion
EXTRN	?get_ServiceObjectDescription@COPOSGestureControl@@UAGJPAPA_W@Z:PROC ; COPOSGestureControl::get_ServiceObjectDescription
EXTRN	?get_ServiceObjectVersion@COPOSGestureControl@@UAGJPAJ@Z:PROC ; COPOSGestureControl::get_ServiceObjectVersion
EXTRN	?get_DeviceDescription@COPOSGestureControl@@UAGJPAPA_W@Z:PROC ; COPOSGestureControl::get_DeviceDescription
EXTRN	?get_DeviceName@COPOSGestureControl@@UAGJPAPA_W@Z:PROC ; COPOSGestureControl::get_DeviceName
EXTRN	?get_CapStatisticsReporting@COPOSGestureControl@@UAGJPAF@Z:PROC ; COPOSGestureControl::get_CapStatisticsReporting
EXTRN	?get_CapUpdateStatistics@COPOSGestureControl@@UAGJPAF@Z:PROC ; COPOSGestureControl::get_CapUpdateStatistics
EXTRN	?get_CapCompareFirmwareVersion@COPOSGestureControl@@UAGJPAF@Z:PROC ; COPOSGestureControl::get_CapCompareFirmwareVersion
EXTRN	?get_CapUpdateFirmware@COPOSGestureControl@@UAGJPAF@Z:PROC ; COPOSGestureControl::get_CapUpdateFirmware
EXTRN	?CheckHealth@COPOSGestureControl@@UAGJJPAJ@Z:PROC ; COPOSGestureControl::CheckHealth
EXTRN	?ClaimDevice@COPOSGestureControl@@UAGJJPAJ@Z:PROC ; COPOSGestureControl::ClaimDevice
EXTRN	?ClearOutput@COPOSGestureControl@@UAGJPAJ@Z:PROC ; COPOSGestureControl::ClearOutput
EXTRN	?Close@COPOSGestureControl@@UAGJPAJ@Z:PROC	; COPOSGestureControl::Close
EXTRN	?DirectIO@COPOSGestureControl@@UAGJJPAJPAPA_W0@Z:PROC ; COPOSGestureControl::DirectIO
EXTRN	?Open@COPOSGestureControl@@UAGJPA_WPAJ@Z:PROC	; COPOSGestureControl::Open
EXTRN	?ReleaseDevice@COPOSGestureControl@@UAGJPAJ@Z:PROC ; COPOSGestureControl::ReleaseDevice
EXTRN	?ResetStatistics@COPOSGestureControl@@UAGJPA_WPAJ@Z:PROC ; COPOSGestureControl::ResetStatistics
EXTRN	?RetrieveStatistics@COPOSGestureControl@@UAGJPAPA_WPAJ@Z:PROC ; COPOSGestureControl::RetrieveStatistics
EXTRN	?UpdateStatistics@COPOSGestureControl@@UAGJPA_WPAJ@Z:PROC ; COPOSGestureControl::UpdateStatistics
EXTRN	?CompareFirmwareVersion@COPOSGestureControl@@UAGJPA_WPAJ1@Z:PROC ; COPOSGestureControl::CompareFirmwareVersion
EXTRN	?UpdateFirmware@COPOSGestureControl@@UAGJPA_WPAJ@Z:PROC ; COPOSGestureControl::UpdateFirmware
EXTRN	?get_AutoMode@COPOSGestureControl@@UAGJPAPA_W@Z:PROC ; COPOSGestureControl::get_AutoMode
EXTRN	?put_AutoMode@COPOSGestureControl@@UAGJPA_W@Z:PROC ; COPOSGestureControl::put_AutoMode
EXTRN	?get_AutoModeList@COPOSGestureControl@@UAGJPAPA_W@Z:PROC ; COPOSGestureControl::get_AutoModeList
EXTRN	?get_CapAssociatedHardTotalsDevice@COPOSGestureControl@@UAGJPAPA_W@Z:PROC ; COPOSGestureControl::get_CapAssociatedHardTotalsDevice
EXTRN	?get_CapMotion@COPOSGestureControl@@UAGJPAF@Z:PROC ; COPOSGestureControl::get_CapMotion
EXTRN	?get_CapMotionCreation@COPOSGestureControl@@UAGJPAF@Z:PROC ; COPOSGestureControl::get_CapMotionCreation
EXTRN	?get_CapPose@COPOSGestureControl@@UAGJPAF@Z:PROC ; COPOSGestureControl::get_CapPose
EXTRN	?get_CapPoseCreation@COPOSGestureControl@@UAGJPAF@Z:PROC ; COPOSGestureControl::get_CapPoseCreation
EXTRN	?get_CapStorage@COPOSGestureControl@@UAGJPAJ@Z:PROC ; COPOSGestureControl::get_CapStorage
EXTRN	?get_JointList@COPOSGestureControl@@UAGJPAPA_W@Z:PROC ; COPOSGestureControl::get_JointList
EXTRN	?get_MotionList@COPOSGestureControl@@UAGJPAPA_W@Z:PROC ; COPOSGestureControl::get_MotionList
EXTRN	?get_PoseCreationMode@COPOSGestureControl@@UAGJPAF@Z:PROC ; COPOSGestureControl::get_PoseCreationMode
EXTRN	?put_PoseCreationMode@COPOSGestureControl@@UAGJF@Z:PROC ; COPOSGestureControl::put_PoseCreationMode
EXTRN	?get_PoseList@COPOSGestureControl@@UAGJPAPA_W@Z:PROC ; COPOSGestureControl::get_PoseList
EXTRN	?get_Storage@COPOSGestureControl@@UAGJPAJ@Z:PROC ; COPOSGestureControl::get_Storage
EXTRN	?put_Storage@COPOSGestureControl@@UAGJJ@Z:PROC	; COPOSGestureControl::put_Storage
EXTRN	?CreateMotion@COPOSGestureControl@@UAGJPA_W0PAJ@Z:PROC ; COPOSGestureControl::CreateMotion
EXTRN	?CreatePose@COPOSGestureControl@@UAGJPA_WJPAJ@Z:PROC ; COPOSGestureControl::CreatePose
EXTRN	?GetPosition@COPOSGestureControl@@UAGJPA_WPAJ1@Z:PROC ; COPOSGestureControl::GetPosition
EXTRN	?SetPosition@COPOSGestureControl@@UAGJPA_WJFPAJ@Z:PROC ; COPOSGestureControl::SetPosition
EXTRN	?SetSpeed@COPOSGestureControl@@UAGJPA_WJPAJ@Z:PROC ; COPOSGestureControl::SetSpeed
EXTRN	?StartMotion@COPOSGestureControl@@UAGJPA_WPAJ@Z:PROC ; COPOSGestureControl::StartMotion
EXTRN	?StartPose@COPOSGestureControl@@UAGJPA_WPAJ@Z:PROC ; COPOSGestureControl::StartPose
EXTRN	?StopControl@COPOSGestureControl@@UAGJJPAJ@Z:PROC ; COPOSGestureControl::StopControl
EXTRN	??_E?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAEPAXI@Z:PROC ; ATL::CComObjectCached<ATL::CComClassFactory>::`vector deleting destructor'
EXTRN	??_E?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z:PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::`vector deleting destructor'
EXTRN	??_E?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z:PROC ; ATL::CComContainedObject<COPOSGestureControl>::`vector deleting destructor'
EXTRN	??_E?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z:PROC ; ATL::CComAggObject<COPOSGestureControl>::`vector deleting destructor'
EXTRN	??_E?$CComObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z:PROC ; ATL::CComObject<COPOSGestureControl>::`vector deleting destructor'
EXTRN	??_E?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z:PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::`vector deleting destructor'
EXTRN	@_RTC_AllocaHelper@12:PROC
EXTRN	@_RTC_CheckStackVars2@12:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__allmul:PROC
EXTRN	__alloca_probe_16:PROC
EXTRN	__chkstk:PROC
EXTRN	__except_handler4:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	?nothrow@std@@3Unothrow_t@1@B:BYTE		; std::nothrow
EXTRN	_GUID_NULL:BYTE
EXTRN	_CLSID_StdGlobalInterfaceTable:BYTE
EXTRN	_IID_IDispatch:BYTE
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
EXTRN	_IID_IPropertyNotifySink:BYTE
EXTRN	_CLSID_StdComponentCategoriesMgr:BYTE
EXTRN	___ImageBase:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A
_BSS	SEGMENT
?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceGeneral
_BSS	ENDS
;	COMDAT ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A
_BSS	SEGMENT
?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCOM
_BSS	ENDS
;	COMDAT ?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A
_BSS	SEGMENT
?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceQI
_BSS	ENDS
;	COMDAT ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A
_BSS	SEGMENT
?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRegistrar
_BSS	ENDS
;	COMDAT ?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A
_BSS	SEGMENT
?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRefcount
_BSS	ENDS
;	COMDAT ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A
_BSS	SEGMENT
?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceWindowing
_BSS	ENDS
;	COMDAT ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A
_BSS	SEGMENT
?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceControls
_BSS	ENDS
;	COMDAT ?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A
_BSS	SEGMENT
?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceHosting
_BSS	ENDS
;	COMDAT ?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBClient
_BSS	ENDS
;	COMDAT ?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBProvider
_BSS	ENDS
;	COMDAT ?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSnapin
_BSS	ENDS
;	COMDAT ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceNotImpl
_BSS	ENDS
;	COMDAT ?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceAllocation
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceTime
_BSS	ENDS
;	COMDAT ?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCache
_BSS	ENDS
;	COMDAT ?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceStencil
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT ?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceMap
_BSS	ENDS
;	COMDAT ?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceUtil
_BSS	ENDS
;	COMDAT ?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSecurity
_BSS	ENDS
;	COMDAT ?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSync
_BSS	ENDS
;	COMDAT ?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceISAPI
_BSS	ENDS
;	COMDAT ?m_nLevel@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLevel@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLevel
_BSS	ENDS
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?_AtlComModule@ATL@@3VCAtlComModule@1@A
_BSS	SEGMENT
?_AtlComModule@ATL@@3VCAtlComModule@1@A DB 028H DUP (?)	; ATL::_AtlComModule
_BSS	ENDS
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_BSS	SEGMENT
?_AtlWinModule@ATL@@3VCAtlWinModule@1@A DB 02cH DUP (?)	; ATL::_AtlWinModule
_BSS	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CAtlModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CAtlModule::m_libid
_BSS	ENDS
;	COMDAT ?pfnRegDeleteKeyEx@?1??DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z@4P6GJPAUHKEY__@@0KK@ZA
_BSS	SEGMENT
?pfnRegDeleteKeyEx@?1??DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z@4P6GJPAUHKEY__@@0KK@ZA DD 01H DUP (?) ; `ATL::CRegKey::DeleteSubKey'::`2'::pfnRegDeleteKeyEx
_BSS	ENDS
;	COMDAT ?bInitialized@?1??DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z@4_NA
_BSS	SEGMENT
?bInitialized@?1??DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z@4_NA DB 01H DUP (?) ; `ATL::CRegKey::DeleteSubKey'::`2'::bInitialized
_BSS	ENDS
_BSS	SEGMENT
?_Module@@3VCComModule@ATL@@A DB 030H DUP (?)		; _Module
_BSS	ENDS
;	COMDAT ?pConnMap@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@0PBU_ATL_CONNMAP_ENTRY@2@B
_BSS	SEGMENT
?pConnMap@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@0PBU_ATL_CONNMAP_ENTRY@2@B DD 01H DUP (?) ; ATL::IConnectionPointContainerImpl<COPOSGestureControl>::pConnMap
_BSS	ENDS
;	COMDAT ?_entries@?1??GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z@4QBU34@B
_BSS	SEGMENT
?_entries@?1??GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z@4QBU34@B DD 03H DUP (?) ; `COPOSGestureControl::GetConnMap'::`2'::_entries
_BSS	ENDS
;	COMDAT ?$TSS0@?1??GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z@4HA
_BSS	SEGMENT
?$TSS0@?1??GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z@4HA DD 01H DUP (?) ; `COPOSGestureControl::GetConnMap'::`2'::$TSS0
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceGeneral$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceGeneral@ATL@@YAXXZ ; ATL::atlTraceGeneral$initializer$
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ?_entries@?1??_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT
?_entries@?1??_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B DD 00H ; `ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_GetEntries'::`2'::_entries
	DD	FLAT:??_C@_1BE@ENNDGLJC@?$AA_?$AAC?$AAC?$AAo?$AAm?$AAE?$AAn?$AAu?$AAm@
	DD	00H
	DD	FLAT:__GUID_b196b287_bab4_101a_b69c_00aa00341d07
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_7?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@
CONST	SEGMENT
??_7?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@ DD FLAT:?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::`vftable'
	DD	FLAT:?AddRef@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ
	DD	FLAT:?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ
	DD	FLAT:?Next@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJKPAUtagCONNECTDATA@@PAK@Z
	DD	FLAT:?Skip@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJK@Z
	DD	FLAT:?Reset@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJXZ
	DD	FLAT:?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJPAPAUIEnumConnections@@@Z
	DD	FLAT:??_E?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_1CC@GCJALPHP@?$AAp?$AA?9?$AA?$DO?$AAp?$AAW?$AAn?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5@
CONST	SEGMENT
??_C@_1CC@GCJALPHP@?$AAp?$AA?9?$AA?$DO?$AAp?$AAW?$AAn?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5@ DB 'p'
	DB	00H, '-', 00H, '>', 00H, 'p', 00H, 'W', 00H, 'n', 00H, 'd', 00H
	DB	'P', 00H, 'r', 00H, 'o', 00H, 'c', 00H, ' ', 00H, '!', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1HG@EHFNCEAN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn@
CONST	SEGMENT
??_C@_1HG@EHFNCEAN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'b', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'W', 00H, 'i'
	DB	00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H, 'C', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n'
	DB	00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '%', 00H, 'T', 00H, 's', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@LDIEAJMA@?$AAp?$AAP?$AAr?$AAo?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BG@LDIEAJMA@?$AAp?$AAP?$AAr?$AAo?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'P', 00H, 'r', 00H, 'o', 00H, 'c', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1JG@LLDBHFHF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1JG@LLDBHFHF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H
	DB	'c', 00H, 'k', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, ' ', 00H, 'A', 00H, 't', 00H, 'l', 00H
	DB	'M', 00H, 'o', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, 'R'
	DB	00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'W', 00H, 'n', 00H, 'd', 00H, 'C', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H
	DB	'T', 00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1HK@LKOJNIEL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@
CONST	SEGMENT
??_C@_1HK@LKOJNIEL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i'
	DB	00H, 'd', 00H, ' ', 00H, 'A', 00H, 'r', 00H, 'g', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, ' ', 00H, 't'
	DB	00H, 'o', 00H, ' ', 00H, 'A', 00H, 't', 00H, 'l', 00H, 'M', 00H
	DB	'o', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, 'R', 00H, 'e'
	DB	00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'W', 00H, 'n', 00H, 'd', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, 'T', 00H
	DB	0aH, 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00020401_0000_0000_c000_000000000046 DD 020401H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00020412_0000_0000_c000_000000000046 DD 020412H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT
?_entries@?1??_GetEntries@?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B DD 00H ; `ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::_GetEntries'::`2'::_entries
	DD	FLAT:??_C@_1BE@ENNDGLJC@?$AA_?$AAC?$AAC?$AAo?$AAm?$AAE?$AAn?$AAu?$AAm@
	DD	00H
	DD	FLAT:__GUID_b196b285_bab4_101a_b69c_00aa00341d07
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_1BE@ENNDGLJC@?$AA_?$AAC?$AAC?$AAo?$AAm?$AAE?$AAn?$AAu?$AAm@
CONST	SEGMENT
??_C@_1BE@ENNDGLJC@?$AA_?$AAC?$AAC?$AAo?$AAm?$AAE?$AAn?$AAu?$AAm@ DB '_', 00H
	DB	'C', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'E', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?wc@?1??GetWndClassInfo@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@SAAAU_ATL_WNDCLASSINFOW@3@XZ@4U43@A
_DATA	SEGMENT
?wc@?1??GetWndClassInfo@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@SAAAU_ATL_WNDCLASSINFOW@3@XZ@4U43@A DD 030H ; `ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo'::`2'::wc
	DD	0bH
	DD	FLAT:?StartWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	06H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	07f00H
	DD	01H
	DW	00H
	DB	00H, 00H
	ORG $+72
_DATA	ENDS
;	COMDAT ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'm'
	DB	00H, '_', 00H, 'p', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GI@CMBOLMBG@?$AA?$CK?$AAF?$AAi?$AAr?$AAe?$AAT?$AAh?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5@
CONST	SEGMENT
??_C@_1GI@CMBOLMBG@?$AA?$CK?$AAF?$AAi?$AAr?$AAe?$AAT?$AAh?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5@ DB '*'
	DB	00H, 'F', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'T', 00H, 'h', 00H
	DB	'e', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, ':'
	DB	00H, ' ', 00H, 'D', 00H, 'e', 00H, 'l', 00H, 'i', 00H, 'v', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, '%'
	DB	00H, 'l', 00H, 's', 00H, ';', 00H, ' ', 00H, 'S', 00H, 'i', 00H
	DB	'n', 00H, 'k', 00H, ' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'X'
	DB	00H, ';', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'p', 00H
	DB	'I', 00H, 'D', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@@ DD FLAT:?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ
	DD	FLAT:?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ
	DD	FLAT:?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAU_GUID@@@Z
	DD	FLAT:?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIConnectionPointContainer@@@Z
	DD	FLAT:?Advise@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@UAGJPAUIUnknown@@PAK@Z
	DD	FLAT:?Unadvise@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@UAGJK@Z
	DD	FLAT:?EnumConnections@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIEnumConnections@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IPropertyNotifySinkCP@VCOPOSGestureControl@@VCComDynamicUnkArray@ATL@@@1@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IPropertyNotifySinkCP@VCOPOSGestureControl@@VCComDynamicUnkArray@ATL@@@1@@ DD FLAT:?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ
	DD	FLAT:?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ
	DD	FLAT:?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAU_GUID@@@Z
	DD	FLAT:?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIConnectionPointContainer@@@Z
	DD	FLAT:?Advise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAUIUnknown@@PAK@Z
	DD	FLAT:?Unadvise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJK@Z
	DD	FLAT:?EnumConnections@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIEnumConnections@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@1@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@1@@ DD FLAT:?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WKA@AGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ
	DD	FLAT:?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ
	DD	FLAT:?GetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@UAGJABU_GUID@@PAK1@Z
	DD	FLAT:?SetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@UAGJABU_GUID@@KK@Z
	DD	FLAT:?FAccessAllowed@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@MAEHXZ
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@ DD FLAT:?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJM@AGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ
	DD	FLAT:?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ
	DD	FLAT:?GetClassInfoW@?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAPAUITypeInfo@@@Z
	DD	FLAT:?GetGUID@?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJKPAU_GUID@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IDataObjectImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IDataObjectImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJI@AGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ
	DD	FLAT:?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ
	DD	FLAT:?GetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
	DD	FLAT:?GetDataHere@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
	DD	FLAT:?QueryGetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@@Z
	DD	FLAT:?GetCanonicalFormatEtc@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@0@Z
	DD	FLAT:?SetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@H@Z
	DD	FLAT:?EnumFormatEtc@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPAUIEnumFORMATETC@@@Z
	DD	FLAT:?DAdvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@KPAUIAdviseSink@@PAK@Z
	DD	FLAT:?DUnadvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z
	DD	FLAT:?EnumDAdvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumSTATDATA@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IQuickActivateImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IQuickActivateImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJE@AGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ
	DD	FLAT:?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ
	DD	FLAT:?QuickActivate@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagQACONTAINER@@PAUtagQACONTROL@@@Z
	DD	FLAT:?SetContentExtent@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagSIZE@@@Z
	DD	FLAT:?GetContentExtent@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagSIZE@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJA@AGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ
	DD	FLAT:?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ
	DD	FLAT:?GetPages@?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagCAUUID@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStorageImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStorageImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WIM@AGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ
	DD	FLAT:?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ
	DD	FLAT:?GetClassID@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z
	DD	FLAT:?IsDirty@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
	DD	FLAT:?InitNew@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z
	DD	FLAT:?Load@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z
	DD	FLAT:?Save@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@H@Z
	DD	FLAT:?SaveCompleted@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z
	DD	FLAT:?HandsOffStorage@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WII@AGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ
	DD	FLAT:?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ
	DD	FLAT:?EnumConnectionPoints@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumConnectionPoints@@@Z
	DD	FLAT:?FindConnectionPoint@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAUIConnectionPoint@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WIE@AGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ
	DD	FLAT:?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ
	DD	FLAT:?GetWindow@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUHWND__@@@Z
	DD	FLAT:?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z
	DD	FLAT:?InPlaceDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
	DD	FLAT:?UIDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
	DD	FLAT:?SetObjectRects@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPBUtagRECT@@0@Z
	DD	FLAT:?ReactivateAndUndo@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
	DD	FLAT:?OnWindowMessage@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJIIJPAJ@Z
	DD	FLAT:?GetDropTarget@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIDropTarget@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IViewObjectExImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IViewObjectExImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WIA@AGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ
	DD	FLAT:?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ
	DD	FLAT:?Draw@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3P6GHK@ZK@Z
	DD	FLAT:?GetColorSet@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@PAPAUtagLOGPALETTE@@@Z
	DD	FLAT:?Freeze@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAK@Z
	DD	FLAT:?Unfreeze@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z
	DD	FLAT:?SetAdvise@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKKPAUIAdviseSink@@@Z
	DD	FLAT:?GetAdvise@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJPAK0PAPAUIAdviseSink@@@Z
	DD	FLAT:?GetExtent@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUtagSIZE@@@Z
	DD	FLAT:?GetRect@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAU_RECTL@@@Z
	DD	FLAT:?GetViewStatus@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJPAK@Z
	DD	FLAT:?QueryHitPoint@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPBUtagRECT@@UtagPOINT@@JPAK@Z
	DD	FLAT:?QueryHitRect@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPBUtagRECT@@0JPAK@Z
	DD	FLAT:?GetNaturalExtent@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUHDC__@@PAUtagExtentInfo@@PAUtagSIZE@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHM@AGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ
	DD	FLAT:?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ
	DD	FLAT:?GetWindow@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUHWND__@@@Z
	DD	FLAT:?ContextSensitiveHelp@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z
	DD	FLAT:?TranslateAcceleratorW@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagMSG@@@Z
	DD	FLAT:?OnFrameWindowActivate@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z
	DD	FLAT:?OnDocWindowActivate@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z
	DD	FLAT:?ResizeBorder@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z
	DD	FLAT:?EnableModeless@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleObjectImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleObjectImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHI@AGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ
	DD	FLAT:?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ
	DD	FLAT:?SetClientSite@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIOleClientSite@@@Z
	DD	FLAT:?GetClientSite@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIOleClientSite@@@Z
	DD	FLAT:?SetHostNames@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPB_W0@Z
	DD	FLAT:?Close@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z
	DD	FLAT:?SetMoniker@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUIMoniker@@@Z
	DD	FLAT:?GetMoniker@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKKPAPAUIMoniker@@@Z
	DD	FLAT:?InitFromData@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIDataObject@@HK@Z
	DD	FLAT:?GetClipboardData@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPAUIDataObject@@@Z
	DD	FLAT:?DoVerb@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJJPAUtagMSG@@PAUIOleClientSite@@JPAUHWND__@@PBUtagRECT@@@Z
	DD	FLAT:?EnumVerbs@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumOLEVERB@@@Z
	DD	FLAT:?Update@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
	DD	FLAT:?IsUpToDate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
	DD	FLAT:?GetUserClassID@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z
	DD	FLAT:?GetUserType@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPA_W@Z
	DD	FLAT:?SetExtent@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUtagSIZE@@@Z
	DD	FLAT:?GetExtent@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUtagSIZE@@@Z
	DD	FLAT:?Advise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIAdviseSink@@PAK@Z
	DD	FLAT:?Unadvise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z
	DD	FLAT:?EnumAdvise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumSTATDATA@@@Z
	DD	FLAT:?GetMiscStatus@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAK@Z
	DD	FLAT:?SetColorScheme@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagLOGPALETTE@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleControlImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleControlImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHE@AGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ
	DD	FLAT:?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ
	DD	FLAT:?GetControlInfo@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagCONTROLINFO@@@Z
	DD	FLAT:?OnMnemonic@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientPropertyChange@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJJ@Z
	DD	FLAT:?FreezeEvents@COPOSGestureControl@@MAGJH@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStreamInitImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStreamInitImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHA@AGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ
	DD	FLAT:?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ
	DD	FLAT:?GetClassID@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z
	DD	FLAT:?IsDirty@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
	DD	FLAT:?Load@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStream@@@Z
	DD	FLAT:?Save@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStream@@H@Z
	DD	FLAT:?GetSizeMax@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAT_ULARGE_INTEGER@@@Z
	DD	FLAT:?InitNew@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@1@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@1@@ DD FLAT:?ProcessWindowMessage@COPOSGestureControl@@UAEHPAUHWND__@@IIJAAJK@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:??_E?$CComObject@VCOPOSGestureControl@@@ATL@@WEM@AEPAXI@Z
	DD	FLAT:?GetWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?OnFinalMessage@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEXPAUHWND__@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6BCComControlBase@1@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6BCComControlBase@1@@ DD FLAT:??_E?$CComObject@VCOPOSGestureControl@@@ATL@@W3AEPAXI@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?CreateControlWindow@?$CComControl@VCOPOSGestureControl@@V?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UAEPAUHWND__@@PAU3@AAUtagRECT@@@Z
	DD	FLAT:?ControlQueryInterface@?$CComControl@VCOPOSGestureControl@@V?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UAEJABU_GUID@@PAPAX@Z
	DD	FLAT:?OnDrawAdvanced@CComControlBase@ATL@@UAEJAAUATL_DRAWINFO@@@Z
	DD	FLAT:?OnDraw@COPOSGestureControl@@MAEJAAUATL_DRAWINFO@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@
CONST	SEGMENT
??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@ DD FLAT:?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ
	DD	FLAT:?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ
	DD	FLAT:?GetTypeInfoCount@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAI@Z
	DD	FLAT:?GetTypeInfo@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJIKPAPAUITypeInfo@@@Z
	DD	FLAT:?GetIDsOfNames@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJABU_GUID@@PAPA_WIKPAJ@Z
	DD	FLAT:?Invoke@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
	DD	FLAT:?SODataDummy@COPOSGestureControl@@MAGJJ@Z
	DD	FLAT:?SODirectIO@COPOSGestureControl@@MAGJJPAJPAPA_W@Z
	DD	FLAT:?SOError@COPOSGestureControl@@MAGJJJJPAJ@Z
	DD	FLAT:?SOOutputComplete@COPOSGestureControl@@MAGJJ@Z
	DD	FLAT:?SOStatusUpdate@COPOSGestureControl@@MAGJJ@Z
	DD	FLAT:?SOProcessID@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_OpenResult@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_BinaryConversion@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?put_BinaryConversion@COPOSGestureControl@@UAGJJ@Z
	DD	FLAT:?get_CapPowerReporting@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_CheckHealthText@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_Claimed@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?get_DeviceEnabled@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?put_DeviceEnabled@COPOSGestureControl@@UAGJF@Z
	DD	FLAT:?get_FreezeEvents@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?put_FreezeEvents@COPOSGestureControl@@UAGJF@Z
	DD	FLAT:?get_OutputID@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_PowerNotify@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?put_PowerNotify@COPOSGestureControl@@UAGJJ@Z
	DD	FLAT:?get_PowerState@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_ResultCode@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_ResultCodeExtended@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_State@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_ControlObjectDescription@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_ControlObjectVersion@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_ServiceObjectDescription@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_ServiceObjectVersion@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_DeviceDescription@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_DeviceName@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_CapStatisticsReporting@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?get_CapUpdateStatistics@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?get_CapCompareFirmwareVersion@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?get_CapUpdateFirmware@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?CheckHealth@COPOSGestureControl@@UAGJJPAJ@Z
	DD	FLAT:?ClaimDevice@COPOSGestureControl@@UAGJJPAJ@Z
	DD	FLAT:?ClearOutput@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?Close@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?DirectIO@COPOSGestureControl@@UAGJJPAJPAPA_W0@Z
	DD	FLAT:?Open@COPOSGestureControl@@UAGJPA_WPAJ@Z
	DD	FLAT:?ReleaseDevice@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?ResetStatistics@COPOSGestureControl@@UAGJPA_WPAJ@Z
	DD	FLAT:?RetrieveStatistics@COPOSGestureControl@@UAGJPAPA_WPAJ@Z
	DD	FLAT:?UpdateStatistics@COPOSGestureControl@@UAGJPA_WPAJ@Z
	DD	FLAT:?CompareFirmwareVersion@COPOSGestureControl@@UAGJPA_WPAJ1@Z
	DD	FLAT:?UpdateFirmware@COPOSGestureControl@@UAGJPA_WPAJ@Z
	DD	FLAT:?get_AutoMode@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?put_AutoMode@COPOSGestureControl@@UAGJPA_W@Z
	DD	FLAT:?get_AutoModeList@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_CapAssociatedHardTotalsDevice@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_CapMotion@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?get_CapMotionCreation@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?get_CapPose@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?get_CapPoseCreation@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?get_CapStorage@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_JointList@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_MotionList@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_PoseCreationMode@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?put_PoseCreationMode@COPOSGestureControl@@UAGJF@Z
	DD	FLAT:?get_PoseList@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_Storage@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?put_Storage@COPOSGestureControl@@UAGJJ@Z
	DD	FLAT:?CreateMotion@COPOSGestureControl@@UAGJPA_W0PAJ@Z
	DD	FLAT:?CreatePose@COPOSGestureControl@@UAGJPA_WJPAJ@Z
	DD	FLAT:?GetPosition@COPOSGestureControl@@UAGJPA_WPAJ1@Z
	DD	FLAT:?SetPosition@COPOSGestureControl@@UAGJPA_WJFPAJ@Z
	DD	FLAT:?SetSpeed@COPOSGestureControl@@UAGJPA_WJPAJ@Z
	DD	FLAT:?StartMotion@COPOSGestureControl@@UAGJPA_WPAJ@Z
	DD	FLAT:?StartPose@COPOSGestureControl@@UAGJPA_WPAJ@Z
	DD	FLAT:?StopControl@COPOSGestureControl@@UAGJJPAJ@Z
CONST	ENDS
;	COMDAT ??_7?$CComAggObject@VCOPOSGestureControl@@@ATL@@6B@
CONST	SEGMENT
??_7?$CComAggObject@VCOPOSGestureControl@@@ATL@@6B@ DD FLAT:?QueryInterface@?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComAggObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAGKXZ
	DD	FLAT:?Release@?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAGKXZ
	DD	FLAT:??_E?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@@ DD FLAT:?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ
	DD	FLAT:?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAU_GUID@@@Z
	DD	FLAT:?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIConnectionPointContainer@@@Z
	DD	FLAT:?Advise@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@UAGJPAUIUnknown@@PAK@Z
	DD	FLAT:?Unadvise@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@UAGJK@Z
	DD	FLAT:?EnumConnections@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIEnumConnections@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IPropertyNotifySinkCP@VCOPOSGestureControl@@VCComDynamicUnkArray@ATL@@@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IPropertyNotifySinkCP@VCOPOSGestureControl@@VCComDynamicUnkArray@ATL@@@1@@ DD FLAT:?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ
	DD	FLAT:?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAU_GUID@@@Z
	DD	FLAT:?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIConnectionPointContainer@@@Z
	DD	FLAT:?Advise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAUIUnknown@@PAK@Z
	DD	FLAT:?Unadvise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJK@Z
	DD	FLAT:?EnumConnections@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIEnumConnections@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@1@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKA@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ
	DD	FLAT:?GetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@UAGJABU_GUID@@PAK1@Z
	DD	FLAT:?SetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@UAGJABU_GUID@@KK@Z
	DD	FLAT:?FAccessAllowed@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@MAEHXZ
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJM@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ
	DD	FLAT:?GetClassInfoW@?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAPAUITypeInfo@@@Z
	DD	FLAT:?GetGUID@?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJKPAU_GUID@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IDataObjectImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IDataObjectImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJI@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ
	DD	FLAT:?GetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
	DD	FLAT:?GetDataHere@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
	DD	FLAT:?QueryGetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@@Z
	DD	FLAT:?GetCanonicalFormatEtc@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@0@Z
	DD	FLAT:?SetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@H@Z
	DD	FLAT:?EnumFormatEtc@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPAUIEnumFORMATETC@@@Z
	DD	FLAT:?DAdvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@KPAUIAdviseSink@@PAK@Z
	DD	FLAT:?DUnadvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z
	DD	FLAT:?EnumDAdvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumSTATDATA@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IQuickActivateImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IQuickActivateImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJE@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ
	DD	FLAT:?QuickActivate@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagQACONTAINER@@PAUtagQACONTROL@@@Z
	DD	FLAT:?SetContentExtent@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagSIZE@@@Z
	DD	FLAT:?GetContentExtent@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagSIZE@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJA@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ
	DD	FLAT:?GetPages@?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagCAUUID@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStorageImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStorageImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIM@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ
	DD	FLAT:?GetClassID@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z
	DD	FLAT:?IsDirty@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
	DD	FLAT:?InitNew@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z
	DD	FLAT:?Load@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z
	DD	FLAT:?Save@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@H@Z
	DD	FLAT:?SaveCompleted@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z
	DD	FLAT:?HandsOffStorage@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WII@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ
	DD	FLAT:?EnumConnectionPoints@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumConnectionPoints@@@Z
	DD	FLAT:?FindConnectionPoint@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAUIConnectionPoint@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIE@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ
	DD	FLAT:?GetWindow@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUHWND__@@@Z
	DD	FLAT:?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z
	DD	FLAT:?InPlaceDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
	DD	FLAT:?UIDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
	DD	FLAT:?SetObjectRects@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPBUtagRECT@@0@Z
	DD	FLAT:?ReactivateAndUndo@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
	DD	FLAT:?OnWindowMessage@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJIIJPAJ@Z
	DD	FLAT:?GetDropTarget@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIDropTarget@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IViewObjectExImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IViewObjectExImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIA@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ
	DD	FLAT:?Draw@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3P6GHK@ZK@Z
	DD	FLAT:?GetColorSet@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@PAPAUtagLOGPALETTE@@@Z
	DD	FLAT:?Freeze@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAK@Z
	DD	FLAT:?Unfreeze@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z
	DD	FLAT:?SetAdvise@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKKPAUIAdviseSink@@@Z
	DD	FLAT:?GetAdvise@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJPAK0PAPAUIAdviseSink@@@Z
	DD	FLAT:?GetExtent@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUtagSIZE@@@Z
	DD	FLAT:?GetRect@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAU_RECTL@@@Z
	DD	FLAT:?GetViewStatus@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJPAK@Z
	DD	FLAT:?QueryHitPoint@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPBUtagRECT@@UtagPOINT@@JPAK@Z
	DD	FLAT:?QueryHitRect@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPBUtagRECT@@0JPAK@Z
	DD	FLAT:?GetNaturalExtent@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUHDC__@@PAUtagExtentInfo@@PAUtagSIZE@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHM@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ
	DD	FLAT:?GetWindow@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUHWND__@@@Z
	DD	FLAT:?ContextSensitiveHelp@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z
	DD	FLAT:?TranslateAcceleratorW@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagMSG@@@Z
	DD	FLAT:?OnFrameWindowActivate@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z
	DD	FLAT:?OnDocWindowActivate@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z
	DD	FLAT:?ResizeBorder@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z
	DD	FLAT:?EnableModeless@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IOleObjectImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IOleObjectImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHI@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ
	DD	FLAT:?SetClientSite@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIOleClientSite@@@Z
	DD	FLAT:?GetClientSite@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIOleClientSite@@@Z
	DD	FLAT:?SetHostNames@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPB_W0@Z
	DD	FLAT:?Close@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z
	DD	FLAT:?SetMoniker@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUIMoniker@@@Z
	DD	FLAT:?GetMoniker@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKKPAPAUIMoniker@@@Z
	DD	FLAT:?InitFromData@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIDataObject@@HK@Z
	DD	FLAT:?GetClipboardData@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPAUIDataObject@@@Z
	DD	FLAT:?DoVerb@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJJPAUtagMSG@@PAUIOleClientSite@@JPAUHWND__@@PBUtagRECT@@@Z
	DD	FLAT:?EnumVerbs@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumOLEVERB@@@Z
	DD	FLAT:?Update@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
	DD	FLAT:?IsUpToDate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
	DD	FLAT:?GetUserClassID@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z
	DD	FLAT:?GetUserType@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPA_W@Z
	DD	FLAT:?SetExtent@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUtagSIZE@@@Z
	DD	FLAT:?GetExtent@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUtagSIZE@@@Z
	DD	FLAT:?Advise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIAdviseSink@@PAK@Z
	DD	FLAT:?Unadvise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z
	DD	FLAT:?EnumAdvise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumSTATDATA@@@Z
	DD	FLAT:?GetMiscStatus@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAK@Z
	DD	FLAT:?SetColorScheme@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagLOGPALETTE@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IOleControlImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IOleControlImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHE@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ
	DD	FLAT:?GetControlInfo@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagCONTROLINFO@@@Z
	DD	FLAT:?OnMnemonic@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientPropertyChange@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJJ@Z
	DD	FLAT:?FreezeEvents@COPOSGestureControl@@MAGJH@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStreamInitImpl@VCOPOSGestureControl@@@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStreamInitImpl@VCOPOSGestureControl@@@1@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHA@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ
	DD	FLAT:?GetClassID@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z
	DD	FLAT:?IsDirty@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
	DD	FLAT:?Load@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStream@@@Z
	DD	FLAT:?Save@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStream@@H@Z
	DD	FLAT:?GetSizeMax@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAT_ULARGE_INTEGER@@@Z
	DD	FLAT:?InitNew@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@1@@ DD FLAT:?ProcessWindowMessage@COPOSGestureControl@@UAEHPAUHWND__@@IIJAAJK@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:??_E?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WEM@AEPAXI@Z
	DD	FLAT:?GetWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?OnFinalMessage@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEXPAUHWND__@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6BCComControlBase@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6BCComControlBase@1@@ DD FLAT:??_E?$CComContainedObject@VCOPOSGestureControl@@@ATL@@W3AEPAXI@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?CreateControlWindow@?$CComControl@VCOPOSGestureControl@@V?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UAEPAUHWND__@@PAU3@AAUtagRECT@@@Z
	DD	FLAT:?ControlQueryInterface@?$CComControl@VCOPOSGestureControl@@V?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UAEJABU_GUID@@PAPAX@Z
	DD	FLAT:?OnDrawAdvanced@CComControlBase@ATL@@UAEJAAUATL_DRAWINFO@@@Z
	DD	FLAT:?OnDraw@COPOSGestureControl@@MAEJAAUATL_DRAWINFO@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ
	DD	FLAT:?GetTypeInfoCount@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAI@Z
	DD	FLAT:?GetTypeInfo@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJIKPAPAUITypeInfo@@@Z
	DD	FLAT:?GetIDsOfNames@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJABU_GUID@@PAPA_WIKPAJ@Z
	DD	FLAT:?Invoke@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
	DD	FLAT:?SODataDummy@COPOSGestureControl@@MAGJJ@Z
	DD	FLAT:?SODirectIO@COPOSGestureControl@@MAGJJPAJPAPA_W@Z
	DD	FLAT:?SOError@COPOSGestureControl@@MAGJJJJPAJ@Z
	DD	FLAT:?SOOutputComplete@COPOSGestureControl@@MAGJJ@Z
	DD	FLAT:?SOStatusUpdate@COPOSGestureControl@@MAGJJ@Z
	DD	FLAT:?SOProcessID@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_OpenResult@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_BinaryConversion@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?put_BinaryConversion@COPOSGestureControl@@UAGJJ@Z
	DD	FLAT:?get_CapPowerReporting@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_CheckHealthText@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_Claimed@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?get_DeviceEnabled@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?put_DeviceEnabled@COPOSGestureControl@@UAGJF@Z
	DD	FLAT:?get_FreezeEvents@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?put_FreezeEvents@COPOSGestureControl@@UAGJF@Z
	DD	FLAT:?get_OutputID@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_PowerNotify@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?put_PowerNotify@COPOSGestureControl@@UAGJJ@Z
	DD	FLAT:?get_PowerState@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_ResultCode@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_ResultCodeExtended@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_State@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_ControlObjectDescription@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_ControlObjectVersion@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_ServiceObjectDescription@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_ServiceObjectVersion@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_DeviceDescription@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_DeviceName@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_CapStatisticsReporting@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?get_CapUpdateStatistics@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?get_CapCompareFirmwareVersion@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?get_CapUpdateFirmware@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?CheckHealth@COPOSGestureControl@@UAGJJPAJ@Z
	DD	FLAT:?ClaimDevice@COPOSGestureControl@@UAGJJPAJ@Z
	DD	FLAT:?ClearOutput@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?Close@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?DirectIO@COPOSGestureControl@@UAGJJPAJPAPA_W0@Z
	DD	FLAT:?Open@COPOSGestureControl@@UAGJPA_WPAJ@Z
	DD	FLAT:?ReleaseDevice@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?ResetStatistics@COPOSGestureControl@@UAGJPA_WPAJ@Z
	DD	FLAT:?RetrieveStatistics@COPOSGestureControl@@UAGJPAPA_WPAJ@Z
	DD	FLAT:?UpdateStatistics@COPOSGestureControl@@UAGJPA_WPAJ@Z
	DD	FLAT:?CompareFirmwareVersion@COPOSGestureControl@@UAGJPA_WPAJ1@Z
	DD	FLAT:?UpdateFirmware@COPOSGestureControl@@UAGJPA_WPAJ@Z
	DD	FLAT:?get_AutoMode@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?put_AutoMode@COPOSGestureControl@@UAGJPA_W@Z
	DD	FLAT:?get_AutoModeList@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_CapAssociatedHardTotalsDevice@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_CapMotion@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?get_CapMotionCreation@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?get_CapPose@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?get_CapPoseCreation@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?get_CapStorage@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?get_JointList@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_MotionList@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_PoseCreationMode@COPOSGestureControl@@UAGJPAF@Z
	DD	FLAT:?put_PoseCreationMode@COPOSGestureControl@@UAGJF@Z
	DD	FLAT:?get_PoseList@COPOSGestureControl@@UAGJPAPA_W@Z
	DD	FLAT:?get_Storage@COPOSGestureControl@@UAGJPAJ@Z
	DD	FLAT:?put_Storage@COPOSGestureControl@@UAGJJ@Z
	DD	FLAT:?CreateMotion@COPOSGestureControl@@UAGJPA_W0PAJ@Z
	DD	FLAT:?CreatePose@COPOSGestureControl@@UAGJPA_WJPAJ@Z
	DD	FLAT:?GetPosition@COPOSGestureControl@@UAGJPA_WPAJ1@Z
	DD	FLAT:?SetPosition@COPOSGestureControl@@UAGJPA_WJFPAJ@Z
	DD	FLAT:?SetSpeed@COPOSGestureControl@@UAGJPA_WJPAJ@Z
	DD	FLAT:?StartMotion@COPOSGestureControl@@UAGJPA_WPAJ@Z
	DD	FLAT:?StartPose@COPOSGestureControl@@UAGJPA_WPAJ@Z
	DD	FLAT:?StopControl@COPOSGestureControl@@UAGJJPAJ@Z
CONST	ENDS
;	COMDAT ??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD@
CONST	SEGMENT
??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD@ DB 'A', 00H, 'P', 00H, 'P', 00H
	DB	'I', 00H, 'D', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@EMCLECFJ@?$AAm?$AA_?$AAp?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BC@EMCLECFJ@?$AAm?$AA_?$AAp?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'm'
	DB	00H, '_', 00H, 'p', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1OK@FGCLCILL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OK@FGCLCILL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 's', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'c', 00H
	DB	'o', 00H, 'l', 00H, 'l', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HA@JEDONBAF@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HA@JEDONBAF@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.28.29333\atlmfc\include\atlwin.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
CONST	SEGMENT
??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@ DB 'p', 00H, '!', 00H, '=', 00H
	DB	'0', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
CONST	SEGMENT
??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@ DB 'p', 00H, '=', 00H, '=', 00H
	DB	'0', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@FEIMOCIK@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@
CONST	SEGMENT
??_C@_1EI@FEIMOCIK@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@ DB 'I'
	DB	00H, 'P', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm'
	DB	00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'I', 00H, 'm', 00H
	DB	'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't'
	DB	00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 'I', 00H
	DB	'D', 00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@BOABIBDM@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@
CONST	SEGMENT
??_C@_1EC@BOABIBDM@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@ DB 'I'
	DB	00H, 'P', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm'
	DB	00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'I', 00H, 'm', 00H
	DB	'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'I', 00H, 's', 00H, 'D'
	DB	00H, 'i', 00H, 'r', 00H, 't', 00H, 'y', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@FAGOCEOM@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@
CONST	SEGMENT
??_C@_1DM@FAGOCEOM@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@ DB 'I'
	DB	00H, 'P', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm'
	DB	00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'I', 00H, 'm', 00H
	DB	'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'L', 00H, 'o', 00H, 'a'
	DB	00H, 'd', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@INAJINEF@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@
CONST	SEGMENT
??_C@_1DM@INAJINEF@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@ DB 'I'
	DB	00H, 'P', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm'
	DB	00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'I', 00H, 'm', 00H
	DB	'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'S', 00H, 'a', 00H, 'v'
	DB	00H, 'e', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@PECCGIAK@?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AAo?$AAv?$AAe?$AAr?$AAf?$AAl?$AAo?$AAw@
CONST	SEGMENT
??_C@_1FG@PECCGIAK@?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AAo?$AAv?$AAe?$AAr?$AAf?$AAl?$AAo?$AAw@ DB 'R'
	DB	00H, 'e', 00H, 's', 00H, 'u', 00H, 'l', 00H, 't', 00H, ' ', 00H
	DB	'o', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 'f', 00H, 'l', 00H, 'o'
	DB	00H, 'w', 00H, ' ', 00H, 'a', 00H, 'f', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, 'a', 00H, 'd', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, ' ', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 't', 00H, 'y', 00H, ' ', 00H, '#', 00H, '%'
	DB	00H, 'i', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@BKBPFBNN@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAs@
CONST	SEGMENT
??_C@_1EK@BKBPFBNN@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAs@ DB 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'g', 00H, 'e', 00H, 't', 00H, ' '
	DB	00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, 'f', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 't', 00H, 'y', 00H, ' ', 00H, '#', 00H
	DB	'%', 00H, 'i', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@OFMICAKH@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@
CONST	SEGMENT
??_C@_1EI@OFMICAKH@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@ DB 'I'
	DB	00H, 'P', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm'
	DB	00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'I', 00H, 'm', 00H
	DB	'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't'
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'M', 00H, 'a', 00H
	DB	'x', 00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@OBJBCLBJ@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@
CONST	SEGMENT
??_C@_1EC@OBJBCLBJ@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@ DB 'I'
	DB	00H, 'P', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm'
	DB	00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'I', 00H, 'm', 00H
	DB	'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'I', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'N', 00H, 'e', 00H, 'w', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@IFIKFMIO@?$AAI?$AAO?$AAl?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAI?$AAm?$AAp?$AAl@
CONST	SEGMENT
??_C@_1EA@IFIKFMIO@?$AAI?$AAO?$AAl?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAI?$AAm?$AAp?$AAl@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H
	DB	't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 'I', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l'
	DB	00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@HLJHBFHB@?$AAI?$AAO?$AAl?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAI?$AAm?$AAp?$AAl@
CONST	SEGMENT
??_C@_1DI@HLJHBFHB@?$AAI?$AAO?$AAl?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAI?$AAm?$AAp?$AAl@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H
	DB	't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 'I', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, ':', 00H, ':', 00H, 'O', 00H, 'n', 00H, 'M', 00H
	DB	'n', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'n', 00H, 'i', 00H, 'c'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@GHJDDODE@?$AA?5?$AA?9?$AA?9?$AA?5?$AAD?$AAI?$AAS?$AAP?$AAI?$AAD?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd@
CONST	SEGMENT
??_C@_1CC@GHJDDODE@?$AA?5?$AA?9?$AA?9?$AA?5?$AAD?$AAI?$AAS?$AAP?$AAI?$AAD?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd@ DB ' '
	DB	00H, '-', 00H, '-', 00H, ' ', 00H, 'D', 00H, 'I', 00H, 'S', 00H
	DB	'P', 00H, 'I', 00H, 'D', 00H, ' ', 00H, '=', 00H, ' ', 00H, '%'
	DB	00H, 'd', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FE@LCIFNEAD@?$AAI?$AAO?$AAl?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAI?$AAm?$AAp?$AAl@
CONST	SEGMENT
??_C@_1FE@LCIFNEAD@?$AAI?$AAO?$AAl?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAI?$AAm?$AAp?$AAl@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H
	DB	't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 'I', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, ':', 00H, ':', 00H, 'O', 00H, 'n', 00H, 'A', 00H
	DB	'm', 00H, 'b', 00H, 'i', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'P'
	DB	00H, 'r', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'y', 00H, 'C', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e'
	DB	00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@NMABOKNE@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DO@NMABOKNE@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'S', 00H, 'e', 00H, 't', 00H, 'C', 00H
	DB	'l', 00H, 'i', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'S', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@FNGOFKPG@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DO@FNGOFKPG@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'C', 00H
	DB	'l', 00H, 'i', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'S', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@ENNHEKGE@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DM@ENNHEKGE@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'S', 00H, 'e', 00H, 't', 00H, 'H', 00H
	DB	'o', 00H, 's', 00H, 't', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, 's', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@MLHGCMGP@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1CO@MLHGCMGP@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H
	DB	'e', 00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@NBNCAFCH@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DG@NBNCAFCH@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'S', 00H, 'e', 00H, 't', 00H, 'M', 00H
	DB	'o', 00H, 'n', 00H, 'i', 00H, 'k', 00H, 'e', 00H, 'r', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@CEIENMGG@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DG@CEIENMGG@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'M', 00H
	DB	'o', 00H, 'n', 00H, 'i', 00H, 'k', 00H, 'e', 00H, 'r', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@PCFABHJP@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DK@PCFABHJP@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H
	DB	'F', 00H, 'r', 00H, 'o', 00H, 'm', 00H, 'D', 00H, 'a', 00H, 't'
	DB	00H, 'a', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@KDKDKHCO@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1EC@KDKDKHCO@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'C', 00H
	DB	'l', 00H, 'i', 00H, 'p', 00H, 'b', 00H, 'o', 00H, 'a', 00H, 'r'
	DB	00H, 'd', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@EJEJDDBA@?$AAp?$AAT?$AA?9?$AA?$DO?$AAm?$AA_?$AAs?$AAp?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAS@
CONST	SEGMENT
??_C@_1CG@EJEJDDBA@?$AAp?$AAT?$AA?9?$AA?$DO?$AAm?$AA_?$AAs?$AAp?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAS@ DB 'p'
	DB	00H, 'T', 00H, '-', 00H, '>', 00H, 'm', 00H, '_', 00H, 's', 00H
	DB	'p', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, 'S', 00H, 'i', 00H, 't', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@MCJJDJOB@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DI@MCJJDJOB@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'D', 00H, 'o', 00H, 'V', 00H, 'e', 00H
	DB	'r', 00H, 'b', 00H, '(', 00H, '%', 00H, 'd', 00H, ')', 00H, 0aH
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@CEHACOFH@?$AAp?$AAp?$AAE?$AAn?$AAu?$AAm?$AAO?$AAl?$AAe?$AAV?$AAe?$AAr?$AAb@
CONST	SEGMENT
??_C@_1BM@CEHACOFH@?$AAp?$AAp?$AAE?$AAn?$AAu?$AAm?$AAO?$AAl?$AAe?$AAV?$AAe?$AAr?$AAb@ DB 'p'
	DB	00H, 'p', 00H, 'E', 00H, 'n', 00H, 'u', 00H, 'm', 00H, 'O', 00H
	DB	'l', 00H, 'e', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 'b', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@PNMFEDJ@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DG@PNMFEDJ@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'E', 00H, 'n', 00H, 'u', 00H, 'm', 00H
	DB	'V', 00H, 'e', 00H, 'r', 00H, 'b', 00H, 's', 00H, 0aH, 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@FNILLDED@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DA@FNILLDED@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'U', 00H, 'p', 00H, 'd', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@JMCOGOPO@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DI@JMCOGOPO@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'I', 00H, 's', 00H, 'U', 00H, 'p', 00H
	DB	'T', 00H, 'o', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'e', 00H, 0aH
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@PBGNBMDG@?$AAp?$AAC?$AAl?$AAs?$AAi?$AAd@
CONST	SEGMENT
??_C@_1O@PBGNBMDG@?$AAp?$AAC?$AAl?$AAs?$AAi?$AAd@ DB 'p', 00H, 'C', 00H, 'l'
	DB	00H, 's', 00H, 'i', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@KFGOFNKC@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1EA@KFGOFNKC@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'U', 00H
	DB	's', 00H, 'e', 00H, 'r', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, 'I', 00H, 'D', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@OLKKBIEP@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DK@OLKKBIEP@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'U', 00H
	DB	's', 00H, 'e', 00H, 'r', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e'
	DB	00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@HDEMLOPO@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DG@HDEMLOPO@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'S', 00H, 'e', 00H, 't', 00H, 'E', 00H
	DB	'x', 00H, 't', 00H, 'e', 00H, 'n', 00H, 't', 00H, 0aH, 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@IGBKGHLP@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DG@IGBKGHLP@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'E', 00H
	DB	'x', 00H, 't', 00H, 'e', 00H, 'n', 00H, 't', 00H, 0aH, 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@OJLCEIKD@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DA@OJLCEIKD@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H
	DB	's', 00H, 'e', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@DIPMKMJO@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DE@DIPMKMJO@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'd', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'e', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@IJKKKNHF@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DI@IJKKKNHF@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'E', 00H, 'n', 00H, 'u', 00H, 'm', 00H
	DB	'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'e', 00H, 0aH
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@GENDACH@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DO@GENDACH@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'M', 00H
	DB	'i', 00H, 's', 00H, 'c', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't'
	DB	00H, 'u', 00H, 's', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@PBDGGEPN@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
CONST	SEGMENT
??_C@_1DO@PBDGGEPN@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'S', 00H, 'e', 00H, 't', 00H, 'C', 00H
	DB	'o', 00H, 'l', 00H, 'o', 00H, 'r', 00H, 'S', 00H, 'c', 00H, 'h'
	DB	00H, 'e', 00H, 'm', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@GCGKPCBJ@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@
CONST	SEGMENT
??_C@_1FA@GCGKPCBJ@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'P', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'W', 00H
	DB	'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 0aH, 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@JEOLIANC@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@
CONST	SEGMENT
??_C@_1GE@JEOLIANC@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'P', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, 't', 00H, 'S', 00H, 'e', 00H, 'n', 00H, 's'
	DB	00H, 'i', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'e', 00H, 'H', 00H
	DB	'e', 00H, 'l', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GG@KHCNGNGO@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@
CONST	SEGMENT
??_C@_1GG@KHCNGNGO@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'P', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	's', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'A', 00H, 'c'
	DB	00H, 'c', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GI@CGHNFFAP@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@
CONST	SEGMENT
??_C@_1GI@CGHNFFAP@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'P', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'O', 00H, 'n', 00H, 'F', 00H, 'r', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 'A', 00H, 'c', 00H, 't', 00H, 'i', 00H
	DB	'v', 00H, 'a', 00H, 't', 00H, 'e', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@HBFPAJL@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@
CONST	SEGMENT
??_C@_1GE@HBFPAJL@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'P', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'O', 00H, 'n', 00H, 'D', 00H, 'o', 00H
	DB	'c', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w'
	DB	00H, 'A', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@NONNDFDB@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@
CONST	SEGMENT
??_C@_1FG@NONNDFDB@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'P', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'B', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e'
	DB	00H, 'r', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@MLCEAOAF@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@
CONST	SEGMENT
??_C@_1FK@MLCEAOAF@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'P', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ':', 00H, ':', 00H, 'E', 00H, 'n', 00H, 'a', 00H, 'b', 00H
	DB	'l', 00H, 'e', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, 's', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@EOPFDCAL@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
CONST	SEGMENT
??_C@_1DC@EOPFDCAL@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ DB 'I'
	DB	00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'I'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'D', 00H
	DB	'r', 00H, 'a', 00H, 'w', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@OMBHOJOI@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
CONST	SEGMENT
??_C@_1DO@OMBHOJOI@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ DB 'I'
	DB	00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'I'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'G', 00H
	DB	'e', 00H, 't', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H, 'r'
	DB	00H, 'S', 00H, 'e', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@PKOCJOMP@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
CONST	SEGMENT
??_C@_1DE@PKOCJOMP@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ DB 'I'
	DB	00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'I'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'F', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, 'z', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@BJKGFPLB@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
CONST	SEGMENT
??_C@_1DI@BJKGFPLB@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ DB 'I'
	DB	00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'I'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'U', 00H
	DB	'n', 00H, 'f', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'z', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@EKHMFGBP@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
CONST	SEGMENT
??_C@_1DM@EKHMFGBP@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ DB 'I'
	DB	00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'I'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'S', 00H
	DB	'e', 00H, 't', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's'
	DB	00H, 'e', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@NDBFONFF@?$AAp?$AAp?$AAA?$AAd?$AAv?$AAS?$AAi?$AAn?$AAk?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BO@NDBFONFF@?$AAp?$AAp?$AAA?$AAd?$AAv?$AAS?$AAi?$AAn?$AAk?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'p', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'S', 00H, 'i', 00H
	DB	'n', 00H, 'k', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@LPCKIPFO@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
CONST	SEGMENT
??_C@_1DM@LPCKIPFO@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ DB 'I'
	DB	00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'I'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'G', 00H
	DB	'e', 00H, 't', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's'
	DB	00H, 'e', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@KJBKAKFM@?$AAl?$AAp?$AAs?$AAi?$AAz?$AAe?$AAl?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@KJBKAKFM@?$AAl?$AAp?$AAs?$AAi?$AAz?$AAe?$AAl?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'l'
	DB	00H, 'p', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'l', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@POGPOFEN@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
CONST	SEGMENT
??_C@_1DM@POGPOFEN@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ DB 'I'
	DB	00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'I'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'G', 00H
	DB	'e', 00H, 't', 00H, 'E', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'n'
	DB	00H, 't', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@HMMPEHJO@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
CONST	SEGMENT
??_C@_1DG@HMMPEHJO@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ DB 'I'
	DB	00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'I'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'G', 00H
	DB	'e', 00H, 't', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@EONKKIBB@?$AAp?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BO@EONKKIBB@?$AAp?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'd', 00H, 'w', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H
	DB	'u', 00H, 's', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@ICFBLIPC@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
CONST	SEGMENT
??_C@_1EE@ICFBLIPC@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ DB 'I'
	DB	00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'I'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'G', 00H
	DB	'e', 00H, 't', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, 'S'
	DB	00H, 't', 00H, 'a', 00H, 't', 00H, 'u', 00H, 's', 00H, 0aH, 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@LBFAGAOE@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
CONST	SEGMENT
??_C@_1EE@LBFAGAOE@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ DB 'I'
	DB	00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'I'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'Q', 00H
	DB	'u', 00H, 'e', 00H, 'r', 00H, 'y', 00H, 'H', 00H, 'i', 00H, 't'
	DB	00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 0aH, 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@PEBIMLJG@?$AAW?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAD?$AAV?$AAA?$AAS?$AAP?$AAE?$AAC?$AAT?$AA?6@
CONST	SEGMENT
??_C@_1CA@PEBIMLJG@?$AAW?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAD?$AAV?$AAA?$AAS?$AAP?$AAE?$AAC?$AAT?$AA?6@ DB 'W'
	DB	00H, 'r', 00H, 'o', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'D', 00H
	DB	'V', 00H, 'A', 00H, 'S', 00H, 'P', 00H, 'E', 00H, 'C', 00H, 'T'
	DB	00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@PALDCHIG@?$AAp?$AAH?$AAi?$AAt?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1CA@PALDCHIG@?$AAp?$AAH?$AAi?$AAt?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'H', 00H, 'i', 00H, 't', 00H, 'R', 00H, 'e', 00H, 's', 00H
	DB	'u', 00H, 'l', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@OOPFCKPJ@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
CONST	SEGMENT
??_C@_1EC@OOPFCKPJ@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ DB 'I'
	DB	00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'I'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'Q', 00H
	DB	'u', 00H, 'e', 00H, 'r', 00H, 'y', 00H, 'H', 00H, 'i', 00H, 't'
	DB	00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@JBIFBCLO@?$AAp?$AAs?$AAi?$AAz?$AAe?$AAl?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BI@JBIFBCLO@?$AAp?$AAs?$AAi?$AAz?$AAe?$AAl?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'l', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@BNJDLDIH@?$AAp?$AAE?$AAx?$AAt?$AAe?$AAn?$AAt?$AAI?$AAn?$AAf?$AAo?$AA?5?$AA?$CB?$AA?$DN?$AA?5@
CONST	SEGMENT
??_C@_1CC@BNJDLDIH@?$AAp?$AAE?$AAx?$AAt?$AAe?$AAn?$AAt?$AAI?$AAn?$AAf?$AAo?$AA?5?$AA?$CB?$AA?$DN?$AA?5@ DB 'p'
	DB	00H, 'E', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ' ', 00H, '!', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@BJGNOKFG@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
CONST	SEGMENT
??_C@_1EK@BJGNOKFG@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@ DB 'I'
	DB	00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'I'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'G', 00H
	DB	'e', 00H, 't', 00H, 'N', 00H, 'a', 00H, 't', 00H, 'u', 00H, 'r'
	DB	00H, 'a', 00H, 'l', 00H, 'E', 00H, 'x', 00H, 't', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FI@POCNNILF@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@
CONST	SEGMENT
??_C@_1FI@POCNNILF@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'P', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 'l', 00H, 'e', 00H, 's', 00H, 's'
	DB	00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H
	DB	'G', 00H, 'e', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@OCHIALO@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@
CONST	SEGMENT
??_C@_1GM@OCHIALO@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'P', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 'l', 00H, 'e', 00H, 's', 00H, 's'
	DB	00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'x', 00H, 't'
	DB	00H, 'S', 00H, 'e', 00H, 'n', 00H, 's', 00H, 'i', 00H, 't', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, 'H', 00H, 'e', 00H, 'l', 00H, 'p'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1GI@FLFGNCEO@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@
CONST	SEGMENT
??_C@_1GI@FLFGNCEO@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'P', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 'l', 00H, 'e', 00H, 's', 00H, 's'
	DB	00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H
	DB	'I', 00H, 'n', 00H, 'P', 00H, 'l', 00H, 'a', 00H, 'c', 00H, 'e'
	DB	00H, 'D', 00H, 'e', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'i', 00H
	DB	'v', 00H, 'a', 00H, 't', 00H, 'e', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@KFPABBGF@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@
CONST	SEGMENT
??_C@_1FO@KFPABBGF@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'P', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 'l', 00H, 'e', 00H, 's', 00H, 's'
	DB	00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H
	DB	'U', 00H, 'I', 00H, 'D', 00H, 'e', 00H, 'a', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'a', 00H, 't', 00H, 'e', 00H, 0aH, 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@NABMBGNB@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@
CONST	SEGMENT
??_C@_1GC@NABMBGNB@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'P', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 'l', 00H, 'e', 00H, 's', 00H, 's'
	DB	00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H
	DB	'S', 00H, 'e', 00H, 't', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	's', 00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1GG@CPMHNPED@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@
CONST	SEGMENT
??_C@_1GG@CPMHNPED@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'P', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 'l', 00H, 'e', 00H, 's', 00H, 's'
	DB	00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H
	DB	'R', 00H, 'e', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'v'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, 'A', 00H, 'n', 00H, 'd', 00H
	DB	'U', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@IDHMCPFB@?$AAp?$AAT?$AA?9?$AA?$DO?$AAm?$AA_?$AAp?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM@
CONST	SEGMENT
??_C@_1DM@IDHMCPFB@?$AAp?$AAT?$AA?9?$AA?$DO?$AAm?$AA_?$AAp?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM@ DB 'p'
	DB	00H, 'T', 00H, '-', 00H, '>', 00H, 'm', 00H, '_', 00H, 'p', 00H
	DB	'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, 'M', 00H, 's', 00H, 'g', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, '&', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a'
	DB	00H, 'g', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@GOJAGBD@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@
CONST	SEGMENT
??_C@_1GE@GOJAGBD@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'P', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 'l', 00H, 'e', 00H, 's', 00H, 's'
	DB	00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H
	DB	'O', 00H, 'n', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 'M', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H
	DB	'g', 00H, 'e', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@FOAHOGK@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@
CONST	SEGMENT
??_C@_1FO@FOAHOGK@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@ DB 'I'
	DB	00H, 'O', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'P', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 'l', 00H, 'e', 00H, 's', 00H, 's'
	DB	00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H
	DB	'G', 00H, 'e', 00H, 't', 00H, 'D', 00H, 'r', 00H, 'o', 00H, 'p'
	DB	00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_7?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@
CONST	SEGMENT
??_7?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@ DD FLAT:?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::`vftable'
	DD	FLAT:?AddRef@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ
	DD	FLAT:?Release@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ
	DD	FLAT:?Next@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJKPAPAUIConnectionPoint@@PAK@Z
	DD	FLAT:?Skip@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJK@Z
	DD	FLAT:?Reset@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJXZ
	DD	FLAT:?Clone@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJPAPAUIEnumConnectionPoints@@@Z
	DD	FLAT:??_E?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_1EC@CBCJOIPD@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@
CONST	SEGMENT
??_C@_1EC@CBCJOIPD@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@ DB 'I'
	DB	00H, 'P', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'S', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H
	DB	':', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'C', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, 'I', 00H, 'D', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@KEMDAJPD@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@
CONST	SEGMENT
??_C@_1DM@KEMDAJPD@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@ DB 'I'
	DB	00H, 'P', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'S', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H
	DB	':', 00H, 'I', 00H, 's', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 't'
	DB	00H, 'y', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@FLFDKDNG@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@
CONST	SEGMENT
??_C@_1DM@FLFDKDNG@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@ DB 'I'
	DB	00H, 'P', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'S', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H
	DB	':', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'N', 00H, 'e'
	DB	00H, 'w', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@GOPCGMJM@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@
CONST	SEGMENT
??_C@_1DG@GOPCGMJM@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@ DB 'I'
	DB	00H, 'P', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'S', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H
	DB	':', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 0aH, 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@LDJFMFDF@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@
CONST	SEGMENT
??_C@_1DG@LDJFMFDF@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@ DB 'I'
	DB	00H, 'P', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'S', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H
	DB	':', 00H, 'S', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 0aH, 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ENICKDH@?$AAC?$AAo?$AAn?$AAt?$AAe?$AAn?$AAt?$AAs@
CONST	SEGMENT
??_C@_1BC@ENICKDH@?$AAC?$AAo?$AAn?$AAt?$AAe?$AAn?$AAt?$AAs@ DB 'C', 00H, 'o'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?vszContents@?6??Save@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@H@Z@4PB_WB
_DATA	SEGMENT
?vszContents@?6??Save@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@H@Z@4PB_WB DD FLAT:??_C@_1BC@ENICKDH@?$AAC?$AAo?$AAn?$AAt?$AAe?$AAn?$AAt?$AAs@ ; `ATL::IPersistStorageImpl<COPOSGestureControl>::Save'::`7'::vszContents
_DATA	ENDS
;	COMDAT ??_C@_1EI@KGLFIEKA@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@
CONST	SEGMENT
??_C@_1EI@KGLFIEKA@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@ DB 'I'
	DB	00H, 'P', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'S', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H
	DB	':', 00H, 'S', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'C', 00H, 'o'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	'd', 00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@MKDPAIHC@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@
CONST	SEGMENT
??_C@_1EM@MKDPAIHC@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@ DB 'I'
	DB	00H, 'P', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'S', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H
	DB	':', 00H, 'H', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 's', 00H, 'O'
	DB	00H, 'f', 00H, 'f', 00H, 'S', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'a', 00H, 'g', 00H, 'e', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@IMECMPEJ@?$AAI?$AAS?$AAp?$AAe?$AAc?$AAi?$AAf?$AAy?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt@
CONST	SEGMENT
??_C@_1EK@IMECMPEJ@?$AAI?$AAS?$AAp?$AAe?$AAc?$AAi?$AAf?$AAy?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt@ DB 'I'
	DB	00H, 'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'f', 00H
	DB	'y', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 't', 00H, 'y', 00H, 'P', 00H, 'a', 00H, 'g', 00H, 'e', 00H
	DB	's', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'P', 00H, 'a', 00H, 'g', 00H
	DB	'e', 00H, 's', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@OOLJNHOI@?$AAI?$AAQ?$AAu?$AAi?$AAc?$AAk?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAI@
CONST	SEGMENT
??_C@_1EG@OOLJNHOI@?$AAI?$AAQ?$AAu?$AAi?$AAc?$AAk?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAI@ DB 'I'
	DB	00H, 'Q', 00H, 'u', 00H, 'i', 00H, 'c', 00H, 'k', 00H, 'A', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H
	DB	'Q', 00H, 'u', 00H, 'i', 00H, 'c', 00H, 'k', 00H, 'A', 00H, 'c'
	DB	00H, 't', 00H, 'i', 00H, 'v', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	0aH, 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@DNDGLBOK@?$AAI?$AAQ?$AAu?$AAi?$AAc?$AAk?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAI@
CONST	SEGMENT
??_C@_1EM@DNDGLBOK@?$AAI?$AAQ?$AAu?$AAi?$AAc?$AAk?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAI@ DB 'I'
	DB	00H, 'Q', 00H, 'u', 00H, 'i', 00H, 'c', 00H, 'k', 00H, 'A', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H
	DB	'S', 00H, 'e', 00H, 't', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'E', 00H, 'x', 00H, 't', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@OECHILCB@?$AAI?$AAQ?$AAu?$AAi?$AAc?$AAk?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAI@
CONST	SEGMENT
??_C@_1EM@OECHILCB@?$AAI?$AAQ?$AAu?$AAi?$AAc?$AAk?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAI@ DB 'I'
	DB	00H, 'Q', 00H, 'u', 00H, 'i', 00H, 'c', 00H, 'k', 00H, 'A', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H
	DB	'G', 00H, 'e', 00H, 't', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'E', 00H, 'x', 00H, 't', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@FNDLCJKG@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
CONST	SEGMENT
??_C@_1DE@FNDLCJKG@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ DB 'I'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't', 00H
	DB	'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@IIMKPHM@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
CONST	SEGMENT
??_C@_1DK@IIMKPHM@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ DB 'I'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't', 00H
	DB	'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'H', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@BPNENJGE@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
CONST	SEGMENT
??_C@_1DM@BPNENJGE@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ DB 'I'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, ':', 00H, ':', 00H, 'Q', 00H, 'u', 00H, 'e', 00H
	DB	'r', 00H, 'y', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'D', 00H, 'a'
	DB	00H, 't', 00H, 'a', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@CPLAMLOM@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
CONST	SEGMENT
??_C@_1EO@CPLAMLOM@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ DB 'I'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't', 00H
	DB	'C', 00H, 'a', 00H, 'n', 00H, 'o', 00H, 'n', 00H, 'i', 00H, 'c'
	DB	00H, 'a', 00H, 'l', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 't', 00H, 'E', 00H, 't', 00H, 'c', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@EJMOFAGB@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
CONST	SEGMENT
??_C@_1DC@EJMOFAGB@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ DB 'I'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, ':', 00H, ':', 00H, 'S', 00H, 'e', 00H, 't', 00H
	DB	'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@IJEOKODF@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
CONST	SEGMENT
??_C@_1DO@IJEOKODF@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ DB 'I'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, ':', 00H, ':', 00H, 'E', 00H, 'n', 00H, 'u', 00H
	DB	'm', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't'
	DB	00H, 'E', 00H, 't', 00H, 'c', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@GIJAFMDC@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
CONST	SEGMENT
??_C@_1DE@GIJAFMDC@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ DB 'I'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, ':', 00H, ':', 00H, 'D', 00H, 'A', 00H, 'd', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'e', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@BLCCNEGF@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
CONST	SEGMENT
??_C@_1DI@BLCCNEGF@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ DB 'I'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, ':', 00H, ':', 00H, 'D', 00H, 'U', 00H, 'n', 00H
	DB	'a', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'e', 00H, 0aH
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@PHHHDEOE@?$AAp?$AAp?$AAe?$AAn?$AAu?$AAm?$AAA?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?5?$AA?$CB?$AA?$DN@
CONST	SEGMENT
??_C@_1CE@PHHHDEOE@?$AAp?$AAp?$AAe?$AAn?$AAu?$AAm?$AAA?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?5?$AA?$CB?$AA?$DN@ DB 'p'
	DB	00H, 'p', 00H, 'e', 00H, 'n', 00H, 'u', 00H, 'm', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'e', 00H, ' ', 00H, '!'
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@FNLPENOI@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
CONST	SEGMENT
??_C@_1DM@FNLPENOI@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@ DB 'I'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, ':', 00H, ':', 00H, 'E', 00H, 'n', 00H, 'u', 00H
	DB	'm', 00H, 'D', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's'
	DB	00H, 'e', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FM@DHGAMINB@?$AAI?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAS?$AAa?$AAf?$AAe?$AAt?$AAy?$AAI?$AAm@
CONST	SEGMENT
??_C@_1FM@DHGAMINB@?$AAI?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAS?$AAa?$AAf?$AAe?$AAt?$AAy?$AAI?$AAm@ DB 'I'
	DB	00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'S', 00H, 'a', 00H, 'f', 00H, 'e', 00H, 't', 00H, 'y', 00H, 'I'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'G', 00H
	DB	'e', 00H, 't', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, 'f', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'S', 00H, 'a', 00H
	DB	'f', 00H, 'e', 00H, 't', 00H, 'y', 00H, 'O', 00H, 'p', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 's', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FM@CLKMPFGJ@?$AAI?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAS?$AAa?$AAf?$AAe?$AAt?$AAy?$AAI?$AAm@
CONST	SEGMENT
??_C@_1FM@CLKMPFGJ@?$AAI?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAS?$AAa?$AAf?$AAe?$AAt?$AAy?$AAI?$AAm@ DB 'I'
	DB	00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'S', 00H, 'a', 00H, 'f', 00H, 'e', 00H, 't', 00H, 'y', 00H, 'I'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, ':', 00H, ':', 00H, 'S', 00H
	DB	'e', 00H, 't', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, 'f', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'S', 00H, 'a', 00H
	DB	'f', 00H, 'e', 00H, 't', 00H, 'y', 00H, 'O', 00H, 'p', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 's', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT __GUID_b196b286_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT
__GUID_b196b286_bab4_101a_b69c_00aa00341d07 DD 0b196b286H
	DW	0bab4H
	DW	0101aH
	DB	0b6H
	DB	09cH
	DB	00H
	DB	0aaH
	DB	00H
	DB	034H
	DB	01dH
	DB	07H
CONST	ENDS
;	COMDAT ??_C@_1BM@CBGEBBBJ@?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt@
CONST	SEGMENT
??_C@_1BM@CBGEBBBJ@?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt@ DB 'D'
	DB	00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'I', 00H
	DB	'O', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@LODEBHDD@?$AAE?$AAr?$AAr?$AAo?$AAr?$AAE?$AAv?$AAe?$AAn?$AAt@
CONST	SEGMENT
??_C@_1BG@LODEBHDD@?$AAE?$AAr?$AAr?$AAo?$AAr?$AAE?$AAv?$AAe?$AAn?$AAt@ DB 'E'
	DB	00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 'E', 00H, 'v', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@HLBJDONE@?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AAE@
CONST	SEGMENT
??_C@_1CI@HLBJDONE@?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AAE@ DB 'O'
	DB	00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e'
	DB	00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@PGFMOFKI@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe@
CONST	SEGMENT
??_C@_1CE@PGFMOFKI@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe@ DB 'S'
	DB	00H, 't', 00H, 'a', 00H, 't', 00H, 'u', 00H, 's', 00H, 'U', 00H
	DB	'p', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'E', 00H, 'v'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@IMKHEMDJ@?$AA?$CK?$AAA?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?3?$AA?5?$AAS?$AAi?$AAn?$AAk?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1EA@IMKHEMDJ@?$AA?$CK?$AAA?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?3?$AA?5?$AAS?$AAi?$AAn?$AAk?$AA?5?$AA0@ DB '*'
	DB	00H, 'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'e', 00H
	DB	':', 00H, ' ', 00H, 'S', 00H, 'i', 00H, 'n', 00H, 'k', 00H, ' '
	DB	00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, ';', 00H, ' ', 00H
	DB	'C', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 'i', 00H, 'e', 00H, ' '
	DB	00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@NKNAIIAP@?$AA?$CK?$AAU?$AAn?$AAa?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?3?$AA?5?$AAC?$AAo?$AAo?$AAk@
CONST	SEGMENT
??_C@_1CO@NKNAIIAP@?$AA?$CK?$AAU?$AAn?$AAa?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?3?$AA?5?$AAC?$AAo?$AAo?$AAk@ DB '*'
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'd', 00H, 'v', 00H, 'i', 00H
	DB	's', 00H, 'e', 00H, ':', 00H, ' ', 00H, 'C', 00H, 'o', 00H, 'o'
	DB	00H, 'k', 00H, 'i', 00H, 'e', 00H, ' ', 00H, '0', 00H, 'x', 00H
	DB	'%', 00H, 'X', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_7?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@6B@
CONST	SEGMENT
??_7?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@6B@ DD FLAT:?QueryInterface@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObjectCached<ATL::CComClassFactory>::`vftable'
	DD	FLAT:?AddRef@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ
	DD	FLAT:?Release@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ
	DD	FLAT:?CreateInstance@CComClassFactory@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
	DD	FLAT:?LockServer@CComClassFactory@ATL@@UAGJH@Z
	DD	FLAT:??_E?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_1BC@MNKGOHDN@?$AAp?$AAp?$AAv?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BC@MNKGOHDN@?$AAp?$AAp?$AAv?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'p', 00H, 'v', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H				; `string'
CONST	ENDS
_DATA	SEGMENT
?ObjectMap@@3PAU_ATL_OBJMAP_ENTRY30@ATL@@A DD FLAT:_CLSID_OPOSGestureControl ; ObjectMap
	DD	FLAT:?UpdateRegistry@COPOSGestureControl@@SGJH@Z
	DD	FLAT:?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
	DD	FLAT:?CreateInstance@?$CComCreator2@V?$CComCreator@V?$CComObject@VCOPOSGestureControl@@@ATL@@@ATL@@V?$CComCreator@V?$CComAggObject@VCOPOSGestureControl@@@ATL@@@2@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
	DD	00H
	DD	00H
	DD	FLAT:?GetObjectDescription@?$CComCoClass@VCOPOSGestureControl@@$1?CLSID_OPOSGestureControl@@3U_GUID@@B@ATL@@SGPB_WXZ
	DD	FLAT:?GetCategoryMap@CComObjectRootBase@ATL@@SAPBU_ATL_CATMAP_ENTRY@2@XZ
	DD	FLAT:?ObjectMain@CComObjectRootBase@ATL@@SGX_N@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	ORG $+4
_DATA	ENDS
;	COMDAT ??_C@_1CG@IKKLCHHJ@?$AA?9?$AAD?$AAo?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAM?$AAs?$AAg?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1CG@IKKLCHHJ@?$AA?9?$AAD?$AAo?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAM?$AAs?$AAg?$AA?5?$AA0@ DB '-'
	DB	00H, 'D', 00H, 'o', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, ':', 00H, ' ', 00H, 'M', 00H, 's', 00H, 'g', 00H, ' '
	DB	00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@NLBACKII@?$AA?$CK?$AAD?$AAo?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAP?$AAo?$AAs?$AAt?$AAi@
CONST	SEGMENT
??_C@_1EO@NLBACKII@?$AA?$CK?$AAD?$AAo?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAP?$AAo?$AAs?$AAt?$AAi@ DB '*'
	DB	00H, 'D', 00H, 'o', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, ':', 00H, ' ', 00H, 'P', 00H, 'o', 00H, 's', 00H, 't'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'r'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'm', 00H, 'e', 00H
	DB	's', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@BBHLCHLH@?$AA?$CL?$AAD?$AAo?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAM?$AAs?$AAg?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1CG@BBHLCHLH@?$AA?$CL?$AAD?$AAo?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAM?$AAs?$AAg?$AA?5?$AA0@ DB '+'
	DB	00H, 'D', 00H, 'o', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, ':', 00H, ' ', 00H, 'M', 00H, 's', 00H, 'g', 00H, ' '
	DB	00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@NFFONGGK@?$AA?9?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAE?$AAv@
CONST	SEGMENT
??_C@_1CG@NFFONGGK@?$AA?9?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAE?$AAv@ DB '-'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'u', 00H, 's', 00H
	DB	'U', 00H, 'p', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'E'
	DB	00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@OMBDAFMJ@?$AA?$CL?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAE?$AAv@
CONST	SEGMENT
??_C@_1DI@OMBDAFMJ@?$AA?$CL?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAE?$AAv@ DB '+'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'u', 00H, 's', 00H
	DB	'U', 00H, 'p', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'E'
	DB	00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, ':', 00H, ' ', 00H
	DB	'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H, '%', 00H, 'd'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@BBCBFAGA@?$AA?9?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe@
CONST	SEGMENT
??_C@_1CK@BBCBFAGA@?$AA?9?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe@ DB '-'
	DB	00H, 'O', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 't'
	DB	00H, 'e', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@DPNPCNOD@?$AA?$CL?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe@
CONST	SEGMENT
??_C@_1EE@DPNPCNOD@?$AA?$CL?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe@ DB '+'
	DB	00H, 'O', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 't'
	DB	00H, 'e', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	':', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u'
	DB	00H, 't', 00H, 'I', 00H, 'D', 00H, ' ', 00H, '%', 00H, 'd', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@PMEACJIH@?$AA?9?$AAE?$AAr?$AAr?$AAo?$AAr?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAR?$AAe@
CONST	SEGMENT
??_C@_1DC@PMEACJIH@?$AA?9?$AAE?$AAr?$AAr?$AAo?$AAr?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAR?$AAe@ DB '-'
	DB	00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 'E', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, ':', 00H, ' ', 00H, 'R'
	DB	00H, 'e', 00H, 's', 00H, 'p', 00H, 'o', 00H, 'n', 00H, 's', 00H
	DB	'e', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HG@FBPJDKIH@?$AA?$CL?$AAE?$AAr?$AAr?$AAo?$AAr?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAR?$AAC@
CONST	SEGMENT
??_C@_1HG@FBPJDKIH@?$AA?$CL?$AAE?$AAr?$AAr?$AAo?$AAr?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAR?$AAC@ DB '+'
	DB	00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 'E', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, ':', 00H, ' ', 00H, 'R'
	DB	00H, 'C', 00H, ' ', 00H, '%', 00H, 'd', 00H, ',', 00H, ' ', 00H
	DB	'R', 00H, 'C', 00H, 'E', 00H, 'x', 00H, 't', 00H, ' ', 00H, '%'
	DB	00H, 'd', 00H, ' ', 00H, '(', 00H, '0', 00H, 'x', 00H, '%', 00H
	DB	'X', 00H, ')', 00H, ',', 00H, ' ', 00H, 'L', 00H, 'o', 00H, 'c'
	DB	00H, 'u', 00H, 's', 00H, ' ', 00H, '%', 00H, 'd', 00H, ',', 00H
	DB	' ', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'p', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 'e', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@FFEJMENC@?$AA?9?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3@
CONST	SEGMENT
??_C@_1DO@FFEJMENC@?$AA?9?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3@ DB '-'
	DB	00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'I', 00H, 'O', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, ':', 00H, ' ', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	' ', 00H, '%', 00H, 'd', 00H, ' ', 00H, '(', 00H, '0', 00H, 'x'
	DB	00H, '%', 00H, 'X', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@IKMABJEN@?$AA?9?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3@
CONST	SEGMENT
??_C@_1GC@IKMABJEN@?$AA?9?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3@ DB '-'
	DB	00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'I', 00H, 'O', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, ':', 00H, ' ', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	' ', 00H, '%', 00H, 'd', 00H, ' ', 00H, '(', 00H, '0', 00H, 'x'
	DB	00H, '%', 00H, 'X', 00H, ')', 00H, ';', 00H, ' ', 00H, 'S', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'U'
	DB	00H, 'n', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'e', 00H, 'd', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@KGBJECC@?$AA?5?$AA?5?$AA?5?$AA?5?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4@
CONST	SEGMENT
??_C@_1BI@KGBJECC@?$AA?5?$AA?5?$AA?5?$AA?5?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4@ DB ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'r', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GA@DMLHJIOB@?$AA?$CL?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3@
CONST	SEGMENT
??_C@_1GA@DMLHJIOB@?$AA?$CL?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3@ DB '+'
	DB	00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'I', 00H, 'O', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, ':', 00H, ' ', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, ' ', 00H, '%', 00H, 'd', 00H, ' ', 00H, '(', 00H, '0'
	DB	00H, 'x', 00H, '%', 00H, 'X', 00H, ')', 00H, ',', 00H, ' ', 00H
	DB	'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H, '%', 00H, 'd'
	DB	00H, ' ', 00H, '(', 00H, '0', 00H, 'x', 00H, '%', 00H, 'X', 00H
	DB	')', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@ECLACHDO@C?3?2Develop?2OPOS?9CCO?2zGestureCon@
CONST	SEGMENT
??_C@_0DJ@ECLACHDO@C?3?2Develop?2OPOS?9CCO?2zGestureCon@ DB 'C:\Develop\O'
	DB	'POS-CCO\zGestureControl\GestureControlImpl.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17IOIMFDBO@?$AA_?$AAc?$AAy@
CONST	SEGMENT
??_C@_17IOIMFDBO@?$AA_?$AAc?$AAy@ DB '_', 00H, 'c', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17DGDADEHL@?$AA_?$AAc?$AAx@
CONST	SEGMENT
??_C@_17DGDADEHL@?$AA_?$AAc?$AAx@ DB '_', 00H, 'c', 00H, 'x', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?pPropMap@?1??GetPropertyMap@COPOSGestureControl@@SAPBUATL_PROPMAP_ENTRY@ATL@@XZ@4QBU34@B
CONST	SEGMENT
?pPropMap@?1??GetPropertyMap@COPOSGestureControl@@SAPBUATL_PROPMAP_ENTRY@ATL@@XZ@4QBU34@B DD FLAT:??_C@_17DGDADEHL@?$AA_?$AAc?$AAx@ ; `COPOSGestureControl::GetPropertyMap'::`2'::pPropMap
	DD	FLAT:_GUID_NULL
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	028H
	DD	04H
	DW	013H
	ORG $+2
	DD	FLAT:??_C@_17IOIMFDBO@?$AA_?$AAc?$AAy@
	DD	FLAT:_GUID_NULL
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	02cH
	DD	04H
	DW	013H
	ORG $+2
	DD	00H
	DD	00H
	DD	FLAT:_GUID_NULL
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DW	00H
	ORG $+2
CONST	ENDS
;	COMDAT ??_C@_1CI@KJKGOLOJ@?$AAC?$AAO?$AAP?$AAO?$AAS?$AAG?$AAe?$AAs?$AAt?$AAu?$AAr?$AAe?$AAC?$AAo?$AAn@
CONST	SEGMENT
??_C@_1CI@KJKGOLOJ@?$AAC?$AAO?$AAP?$AAO?$AAS?$AAG?$AAe?$AAs?$AAt?$AAu?$AAr?$AAe?$AAC?$AAo?$AAn@ DB 'C'
	DB	00H, 'O', 00H, 'P', 00H, 'O', 00H, 'S', 00H, 'G', 00H, 'e', 00H
	DB	's', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 'C', 00H, 'o'
	DB	00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT __GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
CONST	SEGMENT
__GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064 DD 0cb5bdc81H
	DW	093c1H
	DW	011cfH
	DB	08fH
	DB	020H
	DB	00H
	DB	080H
	DB	05fH
	DB	02cH
	DB	0d0H
	DB	064H
CONST	ENDS
;	COMDAT __GUID_b196b283_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT
__GUID_b196b283_bab4_101a_b69c_00aa00341d07 DD 0b196b283H
	DW	0bab4H
	DW	0101aH
	DB	0b6H
	DB	09cH
	DB	00H
	DB	0aaH
	DB	00H
	DB	034H
	DB	01dH
	DB	07H
CONST	ENDS
;	COMDAT __GUID_0000010a_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_0000010a_0000_0000_c000_000000000046 DD 010aH
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
CONST	SEGMENT
__GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836 DD 0cf51ed10H
	DW	062feH
	DW	011cfH
	DB	0bfH
	DB	086H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	048H
	DB	036H
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@COPOSGestureControl@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B
CONST	SEGMENT
?_entries@?1??_GetEntries@COPOSGestureControl@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B DD 00H ; `COPOSGestureControl::_GetEntries'::`2'::_entries
	DD	FLAT:??_C@_1CI@KJKGOLOJ@?$AAC?$AAO?$AAP?$AAO?$AAS?$AAG?$AAe?$AAs?$AAt?$AAu?$AAr?$AAe?$AAC?$AAo?$AAn@
	DD	00H
	DD	FLAT:_IID_IDispatch
	DD	00H
	DD	01H
	DD	FLAT:_IID_IOPOSGestureControl
	DD	00H
	DD	01H
	DD	FLAT:_IID_IOPOSGestureControl_1_16
	DD	00H
	DD	01H
	DD	FLAT:__GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
	DD	080H
	DD	01H
	DD	FLAT:__GUID_00000127_0000_0000_c000_000000000046
	DD	080H
	DD	01H
	DD	FLAT:__GUID_0000010d_0000_0000_c000_000000000046
	DD	080H
	DD	01H
	DD	FLAT:__GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
	DD	084H
	DD	01H
	DD	FLAT:__GUID_00000113_0000_0000_c000_000000000046
	DD	084H
	DD	01H
	DD	FLAT:__GUID_00000114_0000_0000_c000_000000000046
	DD	084H
	DD	01H
	DD	FLAT:__GUID_00000117_0000_0000_c000_000000000046
	DD	07cH
	DD	01H
	DD	FLAT:__GUID_b196b288_bab4_101a_b69c_00aa00341d07
	DD	074H
	DD	01H
	DD	FLAT:__GUID_00000112_0000_0000_c000_000000000046
	DD	078H
	DD	01H
	DD	FLAT:__GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
	DD	070H
	DD	01H
	DD	FLAT:__GUID_0000010c_0000_0000_c000_000000000046
	DD	070H
	DD	01H
	DD	FLAT:__GUID_b196b284_bab4_101a_b69c_00aa00341d07
	DD	088H
	DD	01H
	DD	FLAT:__GUID_b196b28b_bab4_101a_b69c_00aa00341d07
	DD	090H
	DD	01H
	DD	FLAT:__GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
	DD	094H
	DD	01H
	DD	FLAT:__GUID_0000010a_0000_0000_c000_000000000046
	DD	08cH
	DD	01H
	DD	FLAT:__GUID_0000010e_0000_0000_c000_000000000046
	DD	098H
	DD	01H
	DD	FLAT:__GUID_b196b283_bab4_101a_b69c_00aa00341d07
	DD	09cH
	DD	01H
	DD	FLAT:__GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
	DD	09cH
	DD	01H
	DD	FLAT:__GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
	DD	0a0H
	DD	01H
	DD	FLAT:__GUID_b196b284_bab4_101a_b69c_00aa00341d07
	DD	088H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_1HC@PBALCFGB@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
CONST	SEGMENT
??_C@_1HC@PBALCFGB@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'e', 00H
	DB	'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P', 00H, 'O'
	DB	00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H, '\', 00H
	DB	'z', 00H, 'G', 00H, 'e', 00H, 's', 00H, 't', 00H, 'u', 00H, 'r'
	DB	00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H
	DB	'o', 00H, 'l', 00H, '\', 00H, 'G', 00H, 'e', 00H, 's', 00H, 't'
	DB	00H, 'u', 00H, 'r', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H
	DB	't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 'I', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, '.', 00H, 'h', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?_tih@?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A
_DATA	SEGMENT
?_tih@?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A DD FLAT:_CLSID_OPOSGestureControl ; ATL::IProvideClassInfo2Impl<&CLSID_OPOSGestureControl,&DIID__IOPOSGestureControlEvents,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::_tih
	DD	FLAT:_LIBID_OposGestureControl_CCO
	DW	01H
	DW	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?_tih@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A
_DATA	SEGMENT
?_tih@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A DD FLAT:_IID_IOPOSGestureControl ; ATL::IDispatchImpl<IOPOSGestureControl,&IID_IOPOSGestureControl,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::_tih
	DD	FLAT:_LIBID_OposGestureControl_CCO
	DW	01H
	DW	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_C@_1BI@LHCJEHBH@?$AAT?$AAY?$AAM?$AAE?$AAD?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAx?$AA?6@
CONST	SEGMENT
??_C@_1BI@LHCJEHBH@?$AAT?$AAY?$AAM?$AAE?$AAD?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAx?$AA?6@ DB 'T'
	DB	00H, 'Y', 00H, 'M', 00H, 'E', 00H, 'D', 00H, ' ', 00H, '=', 00H
	DB	' ', 00H, '%', 00H, 'x', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@POAAPOBL@?$AAF?$AAo?$AAr?$AAm?$AAa?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAx?$AA?6@
CONST	SEGMENT
??_C@_1BK@POAAPOBL@?$AAF?$AAo?$AAr?$AAm?$AAa?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAx?$AA?6@ DB 'F'
	DB	00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H, ' ', 00H
	DB	'=', 00H, ' ', 00H, '%', 00H, 'x', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@EMEJOIFB@?$AA?7?$AAp?$AAr?$AAc?$AAW?$AAB?$AAo?$AAu?$AAn?$AAd?$AAs?$AA?$DN?$AA?$CF?$AAd?$AA?0@
CONST	SEGMENT
??_C@_1DC@EMEJOIFB@?$AA?7?$AAp?$AAr?$AAc?$AAW?$AAB?$AAo?$AAu?$AAn?$AAd?$AAs?$AA?$DN?$AA?$CF?$AAd?$AA?0@ DB 09H
	DB	00H, 'p', 00H, 'r', 00H, 'c', 00H, 'W', 00H, 'B', 00H, 'o', 00H
	DB	'u', 00H, 'n', 00H, 'd', 00H, 's', 00H, '=', 00H, '%', 00H, 'd'
	DB	00H, ',', 00H, '%', 00H, 'd', 00H, ',', 00H, '%', 00H, 'd', 00H
	DB	',', 00H, '%', 00H, 'd', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@LIAGMDDA@?$AA?7?$AAp?$AAr?$AAc?$AAW?$AAB?$AAo?$AAu?$AAn?$AAd?$AAs?$AA?$DN?$AAN?$AAU?$AAL@
CONST	SEGMENT
??_C@_1CE@LIAGMDDA@?$AA?7?$AAp?$AAr?$AAc?$AAW?$AAB?$AAo?$AAu?$AAn?$AAd?$AAs?$AA?$DN?$AAN?$AAU?$AAL@ DB 09H
	DB	00H, 'p', 00H, 'r', 00H, 'c', 00H, 'W', 00H, 'B', 00H, 'o', 00H
	DB	'u', 00H, 'n', 00H, 'd', 00H, 's', 00H, '=', 00H, 'N', 00H, 'U'
	DB	00H, 'L', 00H, 'L', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@MIJFAJLJ@?$AA?7?$AAp?$AAr?$AAc?$AAB?$AAo?$AAu?$AAn?$AAd?$AAs?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?$CF@
CONST	SEGMENT
??_C@_1DA@MIJFAJLJ@?$AA?7?$AAp?$AAr?$AAc?$AAB?$AAo?$AAu?$AAn?$AAd?$AAs?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?$CF@ DB 09H
	DB	00H, 'p', 00H, 'r', 00H, 'c', 00H, 'B', 00H, 'o', 00H, 'u', 00H
	DB	'n', 00H, 'd', 00H, 's', 00H, '=', 00H, '%', 00H, 'd', 00H, ','
	DB	00H, '%', 00H, 'd', 00H, ',', 00H, '%', 00H, 'd', 00H, ',', 00H
	DB	'%', 00H, 'd', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@KIMLOMB@?$AA?7?$AAp?$AAr?$AAc?$AAB?$AAo?$AAu?$AAn?$AAd?$AAs?$AA?$DN?$AAN?$AAU?$AAL?$AAL@
CONST	SEGMENT
??_C@_1CC@KIMLOMB@?$AA?7?$AAp?$AAr?$AAc?$AAB?$AAo?$AAu?$AAn?$AAd?$AAs?$AA?$DN?$AAN?$AAU?$AAL?$AAL@ DB 09H
	DB	00H, 'p', 00H, 'r', 00H, 'c', 00H, 'B', 00H, 'o', 00H, 'u', 00H
	DB	'n', 00H, 'd', 00H, 's', 00H, '=', 00H, 'N', 00H, 'U', 00H, 'L'
	DB	00H, 'L', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1GK@PEJLBIEI@?$AAD?$AAr?$AAa?$AAw?$AA?5?$AAd?$AAw?$AAD?$AAr?$AAa?$AAw?$AAA?$AAs?$AAp?$AAe@
CONST	SEGMENT
??_C@_1GK@PEJLBIEI@?$AAD?$AAr?$AAa?$AAw?$AA?5?$AAd?$AAw?$AAD?$AAr?$AAa?$AAw?$AAA?$AAs?$AAp?$AAe@ DB 'D'
	DB	00H, 'r', 00H, 'a', 00H, 'w', 00H, ' ', 00H, 'd', 00H, 'w', 00H
	DB	'D', 00H, 'r', 00H, 'a', 00H, 'w', 00H, 'A', 00H, 's', 00H, 'p'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, '=', 00H, '%', 00H, 'x', 00H
	DB	' ', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x'
	DB	00H, '=', 00H, '%', 00H, 'd', 00H, ' ', 00H, 'p', 00H, 't', 00H
	DB	'd', 00H, '=', 00H, '%', 00H, 'x', 00H, ' ', 00H, 'h', 00H, 'i'
	DB	00H, 'c', 00H, '=', 00H, '%', 00H, 'x', 00H, ' ', 00H, 'h', 00H
	DB	'd', 00H, 'c', 00H, '=', 00H, '%', 00H, 'x', 00H, 0aH, 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@KJDDPODI@?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAW?$AAi?$AAn?$AAd@
CONST	SEGMENT
??_C@_1CG@KJDDPODI@?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAW?$AAi?$AAn?$AAd@ DB 'D'
	DB	00H, 'e', 00H, 's', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'y', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'W', 00H, 'i', 00H, 'n'
	DB	00H, 'd', 00H, 'o', 00H, 'w', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@OHCDIKPM@?$AA?$CB?$AAm?$AA_?$AAb?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@
CONST	SEGMENT
??_C@_1CE@OHCDIKPM@?$AA?$CB?$AAm?$AA_?$AAb?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@ DB '!'
	DB	00H, 'm', 00H, '_', 00H, 'b', 00H, 'I', 00H, 'n', 00H, 'P', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@CEDNNLJH@?$AAp?$AAp?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAS?$AAi?$AAt?$AAe@
CONST	SEGMENT
??_C@_1BK@CEDNNLJH@?$AAp?$AAp?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAS?$AAi?$AAt?$AAe@ DB 'p'
	DB	00H, 'p', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, 'S', 00H, 'i', 00H, 't', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@MLHHLKCI@?$AAp?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAS?$AAi?$AAt?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5@
CONST	SEGMENT
??_C@_1FA@MLHHLKCI@?$AAp?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAS?$AAi?$AAt?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5@ DB 'p'
	DB	00H, 'C', 00H, 'l', 00H, 'i', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	'S', 00H, 'i', 00H, 't', 00H, 'e', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H
	DB	'm', 00H, '_', 00H, 's', 00H, 'p', 00H, 'C', 00H, 'l', 00H, 'i'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'S', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@HHHJIMDE@?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAm?$AA_?$AAh?$AAW?$AAn?$AAd?$AAC?$AAD@
CONST	SEGMENT
??_C@_1BM@HHHJIMDE@?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAm?$AA_?$AAh?$AAW?$AAn?$AAd?$AAC?$AAD@ DB 'h'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'm', 00H, '_', 00H
	DB	'h', 00H, 'W', 00H, 'n', 00H, 'd', 00H, 'C', 00H, 'D', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@MACBBPAK@?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1O@MACBBPAK@?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'h', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@IIDAJDHP@?$AAm?$AA_?$AAs?$AAp?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAS?$AAi?$AAt?$AAe@
CONST	SEGMENT
??_C@_1CA@IIDAJDHP@?$AAm?$AA_?$AAs?$AAp?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAS?$AAi?$AAt?$AAe@ DB 'm'
	DB	00H, '_', 00H, 's', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'P', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'S', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@PDPDNEIJ@?$AAp?$AAI?$AAP?$AAO?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BE@PDPDNEIJ@?$AAp?$AAI?$AAP?$AAO?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'I', 00H, 'P', 00H, 'O', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@MEPLLFBA@?$AAp?$AAU?$AAn?$AAk?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BE@MEPLLFBA@?$AAp?$AAU?$AAn?$AAk?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'U', 00H, 'n', 00H, 'k', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT
__GUID_b196b28b_bab4_101a_b69c_00aa00341d07 DD 0b196b28bH
	DW	0bab4H
	DW	0101aH
	DB	0b6H
	DB	09cH
	DB	00H
	DB	0aaH
	DB	00H
	DB	034H
	DB	01dH
	DB	07H
CONST	ENDS
;	COMDAT ??_C@_1FA@GGGGDGB@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAp?$AA?5?$AAD?$AAe?$AAf?$AAa@
CONST	SEGMENT
??_C@_1FA@GGGGDGB@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAp?$AA?5?$AAD?$AAe?$AAf?$AAa@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 'u', 00H, 'p', 00H, ' ', 00H, 'D', 00H, 'e', 00H, 'f'
	DB	00H, 'a', 00H, 'u', 00H, 'l', 00H, 't', 00H, ' ', 00H, 'O', 00H
	DB	'u', 00H, 't', 00H, ' ', 00H, 'G', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 0aH, 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@OCCEGLFH@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAp?$AA?5?$AAP?$AAr?$AAo?$AAp@
CONST	SEGMENT
??_C@_1DE@OCCEGLFH@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAp?$AA?5?$AAP?$AAr?$AAo?$AAp@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 'u', 00H, 'p', 00H, ' ', 00H, 'P', 00H, 'r', 00H, 'o'
	DB	00H, 'p', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'i', 00H, 'f', 00H
	DB	'y', 00H, ' ', 00H, 'C', 00H, 'P', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@NOHFMFHB@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAp?$AA?5?$AAI?$AAO?$AAl?$AAe@
CONST	SEGMENT
??_C@_1DM@NOHFMFHB@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAp?$AA?5?$AAI?$AAO?$AAl?$AAe@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 'u', 00H, 'p', 00H, ' ', 00H, 'I', 00H, 'O', 00H, 'l'
	DB	00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's'
	DB	00H, 'e', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@EDCEEEEO@?$AAp?$AAQ?$AAA?$AAC?$AAt?$AAr?$AAl?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@EDCEEEEO@?$AAp?$AAQ?$AAA?$AAC?$AAt?$AAr?$AAl?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'Q', 00H, 'A', 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@IELOKEDE@?$AAp?$AAQ?$AAA?$AAC?$AAo?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@IELOKEDE@?$AAp?$AAQ?$AAA?$AAC?$AAo?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'Q', 00H, 'A', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
CONST	SEGMENT
__GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8 DD 055980ba0H
	DW	035aaH
	DW	011cfH
	DB	0b6H
	DB	071H
	DB	00H
	DB	0aaH
	DB	00H
	DB	04cH
	DB	0d6H
	DB	0d8H
CONST	ENDS
;	COMDAT ??_C@_1BO@NKNHJKPB@?$AAp?$AAp?$AAU?$AAn?$AAk?$AAS?$AAi?$AAt?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BO@NKNHJKPB@?$AAp?$AAp?$AAU?$AAn?$AAk?$AAS?$AAi?$AAt?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'p', 00H, 'U', 00H, 'n', 00H, 'k', 00H, 'S', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@EIEAFJJI@?$AAv?$AAa?$AAr?$AA?4?$AAv?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAV?$AAT?$AA_?$AAB?$AAO@
CONST	SEGMENT
??_C@_1CE@EIEAFJJI@?$AAv?$AAa?$AAr?$AA?4?$AAv?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAV?$AAT?$AA_?$AAB?$AAO@ DB 'v'
	DB	00H, 'a', 00H, 'r', 00H, '.', 00H, 'v', 00H, 't', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'V', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'O', 00H, 'O', 00H, 'L', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IC@FBPLOGNL@?$AA?$CI?$AA?$CI?$AA?$CI?$AAH?$AAR?$AAE?$AAS?$AAU?$AAL?$AAT?$AA?$CJ?$AA?$CI?$AAh?$AAR?$AAe@
CONST	SEGMENT
??_C@_1IC@FBPLOGNL@?$AA?$CI?$AA?$CI?$AA?$CI?$AAH?$AAR?$AAE?$AAS?$AAU?$AAL?$AAT?$AA?$CJ?$AA?$CI?$AAh?$AAR?$AAe@ DB '('
	DB	00H, '(', 00H, '(', 00H, 'H', 00H, 'R', 00H, 'E', 00H, 'S', 00H
	DB	'U', 00H, 'L', 00H, 'T', 00H, ')', 00H, '(', 00H, 'h', 00H, 'R'
	DB	00H, 'e', 00H, 's', 00H, ')', 00H, ')', 00H, ' ', 00H, '<', 00H
	DB	' ', 00H, '0', 00H, ')', 00H, ' ', 00H, '|', 00H, '|', 00H, ' '
	DB	00H, '(', 00H, 'v', 00H, 'a', 00H, 'r', 00H, '.', 00H, 'v', 00H
	DB	't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'V', 00H, 'T'
	DB	00H, '_', 00H, 'U', 00H, 'I', 00H, '4', 00H, ' ', 00H, '|', 00H
	DB	'|', 00H, ' ', 00H, 'v', 00H, 'a', 00H, 'r', 00H, '.', 00H, 'v'
	DB	00H, 't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'V', 00H
	DB	'T', 00H, '_', 00H, 'I', 00H, '4', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'h', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.28.29333\atlmfc\include\atlctl.h', 00H ; `string'
CONST	ENDS
;	COMDAT __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
CONST	SEGMENT
__GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07 DD 09bfbbc02H
	DW	0eff1H
	DW	0101aH
	DB	084H
	DB	0edH
	DB	00H
	DB	0aaH
	DB	00H
	DB	034H
	DB	01dH
	DB	07H
CONST	ENDS
;	COMDAT ??_C@_1BO@EKDDFOBL@?$AAh?$AAD?$AAC?$AAS?$AAc?$AAr?$AAe?$AAe?$AAn?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BO@EKDDFOBL@?$AAh?$AAD?$AAC?$AAS?$AAc?$AAr?$AAe?$AAe?$AAn?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'h'
	DB	00H, 'D', 00H, 'C', 00H, 'S', 00H, 'c', 00H, 'r', 00H, 'e', 00H
	DB	'e', 00H, 'n', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@PICGEGJB@?$AAD?$AAI?$AAS?$AAP?$AAL?$AAA?$AAY@
CONST	SEGMENT
??_C@_1BA@PICGEGJB@?$AAD?$AAI?$AAS?$AAP?$AAL?$AAA?$AAY@ DB 'D', 00H, 'I', 00H
	DB	'S', 00H, 'P', 00H, 'L', 00H, 'A', 00H, 'Y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_19GCAABOFN@?$AAb?$AAR?$AAe?$AAt@
CONST	SEGMENT
??_C@_19GCAABOFN@?$AAb?$AAR?$AAe?$AAt@ DB 'b', 00H, 'R', 00H, 'e', 00H, 't'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@GBFKGNEO@?$AAA?$AAT?$AAL?$AA?3?$AA?$CF?$AAp@
CONST	SEGMENT
??_C@_1O@GBFKGNEO@?$AAA?$AAT?$AAL?$AA?3?$AA?$CF?$AAp@ DB 'A', 00H, 'T', 00H
	DB	'L', 00H, ':', 00H, '%', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_0000010d_0000_0000_c000_000000000046 DD 010dH
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000127_0000_0000_c000_000000000046 DD 0127H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
CONST	SEGMENT
__GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8 DD 03af24292H
	DW	0c96H
	DW	011ceH
	DB	0a0H
	DB	0cfH
	DB	00H
	DB	0aaH
	DB	00H
	DB	060H
	DB	0aH
	DB	0b8H
CONST	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000112_0000_0000_c000_000000000046 DD 0112H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
CONST	SEGMENT
__GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29 DD 01c2056ccH
	DW	05ef4H
	DW	0101bH
	DB	08bH
	DB	0c8H
	DB	00H
	DB	0aaH
	DB	00H
	DB	03eH
	DB	03bH
	DB	029H
CONST	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000113_0000_0000_c000_000000000046 DD 0113H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT
__GUID_b196b288_bab4_101a_b69c_00aa00341d07 DD 0b196b288H
	DW	0bab4H
	DW	0101aH
	DB	0b6H
	DB	09cH
	DB	00H
	DB	0aaH
	DB	00H
	DB	034H
	DB	01dH
	DB	07H
CONST	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_0000010e_0000_0000_c000_000000000046 DD 010eH
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000117_0000_0000_c000_000000000046 DD 0117H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ??_C@_1DK@DAANONID@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe@
CONST	SEGMENT
??_C@_1DK@DAANONID@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe@ DB 'I'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'p', 00H, ' ', 00H
	DB	'I', 00H, 'D', 00H, ' ', 00H, '(', 00H, '%', 00H, 'i', 00H, ')'
	DB	00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT
__GUID_b196b289_bab4_101a_b69c_00aa00341d07 DD 0b196b289H
	DW	0bab4H
	DW	0101aH
	DB	0b6H
	DB	09cH
	DB	00H
	DB	0aaH
	DB	00H
	DB	034H
	DB	01dH
	DB	07H
CONST	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000119_0000_0000_c000_000000000046 DD 0119H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
CONST	SEGMENT
__GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8 DD 09c2cad80H
	DW	03424H
	DW	011cfH
	DB	0b6H
	DB	070H
	DB	00H
	DB	0aaH
	DB	00H
	DB	04cH
	DB	0d6H
	DB	0d8H
CONST	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
CONST	SEGMENT
__GUID_922eada0_3424_11cf_b670_00aa004cd6d8 DD 0922eada0H
	DW	03424H
	DW	011cfH
	DB	0b6H
	DB	070H
	DB	00H
	DB	0aaH
	DB	00H
	DB	04cH
	DB	0d6H
	DB	0d8H
CONST	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000114_0000_0000_c000_000000000046 DD 0114H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ??_C@_1CG@OFEMDDJL@?$AA?3?$AA?3?$AAI?$AAs?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?$CI?$AAm?$AA_?$AAh?$AAW@
CONST	SEGMENT
??_C@_1CG@OFEMDDJL@?$AA?3?$AA?3?$AAI?$AAs?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?$CI?$AAm?$AA_?$AAh?$AAW@ DB ':'
	DB	00H, ':', 00H, 'I', 00H, 's', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, '(', 00H, 'm', 00H, '_', 00H, 'h'
	DB	00H, 'W', 00H, 'n', 00H, 'd', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?rcDefault@CWindow@ATL@@2UtagRECT@@A
_DATA	SEGMENT
?rcDefault@CWindow@ATL@@2UtagRECT@@A DD 080000000H	; ATL::CWindow::rcDefault
	DD	080000000H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_C@_1OA@EJAAKNNE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OA@EJAAKNNE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'w', 00H, 'i', 00H, 'n', 00H, '.', 00H, 'h', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_0000010c_0000_0000_c000_000000000046 DD 010cH
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
CONST	SEGMENT
__GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851 DD 0a6bc3ac0H
	DW	0dbaaH
	DW	011ceH
	DB	09dH
	DB	0e3H
	DB	00H
	DB	0aaH
	DB	00H
	DB	04bH
	DB	0b8H
	DB	051H
CONST	ENDS
;	COMDAT ??_C@_1DK@CIMELFNK@?$AAI?$AAn?$AAv?$AAo?$AAk?$AAe?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1DK@CIMELFNK@?$AAI?$AAn?$AAv?$AAo?$AAk?$AAe?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5@ DB 'I'
	DB	00H, 'n', 00H, 'v', 00H, 'o', 00H, 'k', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd'
	DB	00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'D', 00H, 'I', 00H
	DB	'S', 00H, 'P', 00H, 'I', 00H, 'D', 00H, ' ', 00H, '%', 00H, 'x'
	DB	00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1GG@DILCHCCF@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAa@
CONST	SEGMENT
??_C@_1GG@DILCHCCF@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAa@ DB 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'g', 00H, 'e', 00H, 't', 00H, ' '
	DB	00H, 'a', 00H, ' ', 00H, 'd', 00H, 'i', 00H, 's', 00H, 'p', 00H
	DB	'a', 00H, 't', 00H, 'c', 00H, 'h', 00H, ' ', 00H, 'p', 00H, 'o'
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'p', 00H, 'r', 00H, 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'r', 00H, 't', 00H, 'y', 00H, ' ', 00H
	DB	'#', 00H, '%', 00H, 'i', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@FKGJCHLP@?$AAp?$AAM?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BE@FKGJCHLP@?$AAp?$AAM?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'M', 00H, 'a', 00H, 'p', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT __GUID_b196b285_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT
__GUID_b196b285_bab4_101a_b69c_00aa00341d07 DD 0b196b285H
	DW	0bab4H
	DW	0101aH
	DB	0b6H
	DB	09cH
	DB	00H
	DB	0aaH
	DB	00H
	DB	034H
	DB	01dH
	DB	07H
CONST	ENDS
;	COMDAT __GUID_b196b287_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT
__GUID_b196b287_bab4_101a_b69c_00aa00341d07 DD 0b196b287H
	DW	0bab4H
	DW	0101aH
	DB	0b6H
	DB	09cH
	DB	00H
	DB	0aaH
	DB	00H
	DB	034H
	DB	01dH
	DB	07H
CONST	ENDS
;	COMDAT ??_C@_1EO@PKGIEOJK@?$AAi?$AAd?$AAx?$AA?5?$AA?$DM?$AA?5?$AAd?$AAw?$AAC?$AAo?$AAo?$AAk?$AAi?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1EO@PKGIEOJK@?$AAi?$AAd?$AAx?$AA?5?$AA?$DM?$AA?5?$AAd?$AAw?$AAC?$AAo?$AAo?$AAk?$AAi?$AAe?$AA?5@ DB 'i'
	DB	00H, 'd', 00H, 'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'd', 00H
	DB	'w', 00H, 'C', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 'i', 00H, 'e'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'i', 00H, 'd', 00H
	DB	'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, '(', 00H, 'D', 00H, 'W'
	DB	00H, 'O', 00H, 'R', 00H, 'D', 00H, ')', 00H, 'm', 00H, '_', 00H
	DB	'n', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB 'n'
	DB	00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'n', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'm', 00H, '_', 00H, 'n'
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FI@CDNFCAGD@?$AAd?$AAw?$AAC?$AAo?$AAo?$AAk?$AAi?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@
CONST	SEGMENT
??_C@_1FI@CDNFCAGD@?$AAd?$AAw?$AAC?$AAo?$AAo?$AAk?$AAi?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@ DB 'd'
	DB	00H, 'w', 00H, 'C', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 'i', 00H
	DB	'e', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, 'd', 00H, 'w', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'k', 00H, 'i', 00H, 'e', 00H, ' ', 00H, '<'
	DB	00H, '=', 00H, ' ', 00H, '(', 00H, 'D', 00H, 'W', 00H, 'O', 00H
	DB	'R', 00H, 'D', 00H, ')', 00H, 'm', 00H, '_', 00H, 'n', 00H, 'S'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@GFEBMKPP@?$AAp?$AAp?$AAF?$AAi?$AAn?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CK?$AAp?$AAp?$AAF?$AAi@
CONST	SEGMENT
??_C@_1CE@GFEBMKPP@?$AAp?$AAp?$AAF?$AAi?$AAn?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CK?$AAp?$AAp?$AAF?$AAi@ DB 'p'
	DB	00H, 'p', 00H, 'F', 00H, 'i', 00H, 'n', 00H, 'd', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, '*', 00H, 'p', 00H, 'p', 00H, 'F'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1KC@EPBNKDJD@?$AA?7?$AAI?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt?$AAc?$AAh?$AAI?$AAm?$AAp?$AAl?$AA?0@
CONST	SEGMENT
??_C@_1KC@EPBNKDJD@?$AA?7?$AAI?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt?$AAc?$AAh?$AAI?$AAm?$AAp?$AAl?$AA?0@ DB 09H
	DB	00H, 'I', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'p', 00H, 'a', 00H
	DB	't', 00H, 'c', 00H, 'h', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ',', 00H, ' ', 00H, 'C', 00H, 'S', 00H, 't', 00H, 'o', 00H
	DB	'c', 00H, 'k', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 'I'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, ',', 00H, ' ', 00H, 'I', 00H
	DB	'P', 00H, 'r', 00H, 'o', 00H, 'v', 00H, 'i', 00H, 'd', 00H, 'e'
	DB	00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 'I', 00H
	DB	'n', 00H, 'f', 00H, 'o', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'I', 00H, 'P', 00H
	DB	'r', 00H, 'o', 00H, 'v', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'C'
	DB	00H, 'L', 00H, 'a', 00H, 's', 00H, 's', 00H, 'I', 00H, 'n', 00H
	DB	'f', 00H, 'o', 00H, '2', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1GI@KFOMLMHI@?$AA?7?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA?5?$AAT?$AAy?$AAp?$AAe?$AAl?$AAi?$AAb@
CONST	SEGMENT
??_C@_1GI@KFOMLMHI@?$AA?7?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA?5?$AAT?$AAy?$AAp?$AAe?$AAl?$AAi?$AAb@ DB 09H
	DB	00H, 'V', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'f', 00H, 'y', 00H
	DB	' ', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'l', 00H, 'i'
	DB	00H, 'b', 00H, 'I', 00H, 'D', 00H, ' ', 00H, 'a', 00H, 'n', 00H
	DB	'd', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'j', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, ' ', 00H, 's', 00H, 'p', 00H, 'e', 00H, 'c'
	DB	00H, 'i', 00H, 'f', 00H, 'i', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'w', 00H, 'i', 00H, 't', 00H, 'h', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@JMFGIKJN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1GM@JMFGIKJN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H
	DB	'a', 00H, 'd', 00H, ' ', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e'
	DB	00H, 'l', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'y', 00H, '.', 00H, ' ', 00H, '(', 00H, 'H', 00H, 'R', 00H, 'E'
	DB	00H, 'S', 00H, 'U', 00H, 'L', 00H, 'T', 00H, ' ', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'x', 00H, ')', 00H, 0aH
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1HK@IMBOLHFI@?$AA?7?$AAS?$AAe?$AAe?$AA?5?$AAI?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt?$AAc?$AAh?$AAI@
CONST	SEGMENT
??_C@_1HK@IMBOLHFI@?$AA?7?$AAS?$AAe?$AAe?$AA?5?$AAI?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt?$AAc?$AAh?$AAI@ DB 09H
	DB	00H, 'S', 00H, 'e', 00H, 'e', 00H, ' ', 00H, 'I', 00H, 'D', 00H
	DB	'i', 00H, 's', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'c', 00H, 'h'
	DB	00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, ' ', 00H, 'o', 00H
	DB	'v', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'e', 00H, 'w'
	DB	00H, ' ', 00H, 'h', 00H, 'e', 00H, 'l', 00H, 'p', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, 'p', 00H, 'i', 00H, 'c', 00H, ' ', 00H, 'f'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'm', 00H, 'o', 00H, 'r', 00H
	DB	'e', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'f', 00H, 'o', 00H, 'r'
	DB	00H, 'm', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	0aH, 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1MK@MBBPECFK@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?3?$AA?5?$AAC?$AAC?$AAo?$AAm?$AAT@
CONST	SEGMENT
??_C@_1MK@MBBPECFK@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?3?$AA?5?$AAC?$AAC?$AAo?$AAm?$AAT@ DB 'W'
	DB	00H, 'a', 00H, 'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, ':', 00H, ' ', 00H, 'C', 00H, 'C', 00H, 'o', 00H, 'm'
	DB	00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'I', 00H, 'n', 00H
	DB	'f', 00H, 'o', 00H, 'H', 00H, 'o', 00H, 'l', 00H, 'd', 00H, 'e'
	DB	00H, 'r', 00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't', 00H
	DB	'T', 00H, 'I', 00H, ' ', 00H, ':', 00H, ' ', 00H, 'L', 00H, 'o'
	DB	00H, 'a', 00H, 'd', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 'l', 00H, 'i', 00H, 'b', 00H, ' '
	DB	00H, 'd', 00H, 'o', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'n', 00H
	DB	'o', 00H, 't', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'c'
	DB	00H, 'h', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'l', 00H, 'i', 00H, 'b'
	DB	00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 't', 00H, 'h', 00H
	DB	'e', 00H, ' ', 00H, 'm', 00H, 'o', 00H, 'd', 00H, 'u', 00H, 'l'
	DB	00H, 'e', 00H, ' ', 00H, ':', 00H, ' ', 00H, '%', 00H, 'T', 00H
	DB	's', 00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1NK@EGGIGGEE@?$AA?$CB?$AAI?$AAn?$AAl?$AAi?$AAn?$AAe?$AAI?$AAs?$AAE?$AAq?$AAu?$AAa?$AAl?$AAG@
CONST	SEGMENT
??_C@_1NK@EGGIGGEE@?$AA?$CB?$AAI?$AAn?$AAl?$AAi?$AAn?$AAe?$AAI?$AAs?$AAE?$AAq?$AAu?$AAa?$AAl?$AAG@ DB '!'
	DB	00H, 'I', 00H, 'n', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'e', 00H
	DB	'I', 00H, 's', 00H, 'E', 00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, 'G', 00H, 'U', 00H, 'I', 00H, 'D', 00H, '(', 00H, '*', 00H
	DB	'm', 00H, '_', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'b', 00H, 'i'
	DB	00H, 'd', 00H, ',', 00H, ' ', 00H, 'G', 00H, 'U', 00H, 'I', 00H
	DB	'D', 00H, '_', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, ')'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'M', 00H
	DB	'o', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'L'
	DB	00H, 'I', 00H, 'B', 00H, 'I', 00H, 'D', 00H, ' ', 00H, 'n', 00H
	DB	'o', 00H, 't', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 't'
	DB	00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	'd', 00H, '.', 00H, ' ', 00H, 'S', 00H, 'e', 00H, 'e', 00H, ' '
	DB	00H, 'D', 00H, 'E', 00H, 'C', 00H, 'L', 00H, 'A', 00H, 'R', 00H
	DB	'E', 00H, '_', 00H, 'L', 00H, 'I', 00H, 'B', 00H, 'I', 00H, 'D'
	DB	00H, ' ', 00H, 'd', 00H, 'o', 00H, 'c', 00H, 'u', 00H, 'm', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, '.', 00H, '"', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@CJHCKAIL@Module?5LIBID?5not?5initialized?4?5S@
CONST	SEGMENT
??_C@_0DP@CJHCKAIL@Module?5LIBID?5not?5initialized?4?5S@ DB 'Module LIBID'
	DB	' not initialized. See DECLARE_LIBID documentation.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@JHDEBJKA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1IM@JHDEBJKA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H
	DB	'c', 00H, 'k', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, ' ', 00H, 'C', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'I', 00H, 'n'
	DB	00H, 'f', 00H, 'o', 00H, 'H', 00H, 'o', 00H, 'l', 00H, 'd', 00H
	DB	'e', 00H, 'r', 00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't'
	DB	00H, 'T', 00H, 'I', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@FHENBGPF@?$AAm?$AA_?$AAp?$AAl?$AAi?$AAb?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@
CONST	SEGMENT
??_C@_1DM@FHENBGPF@?$AAm?$AA_?$AAp?$AAl?$AAi?$AAb?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@ DB 'm'
	DB	00H, '_', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'b', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, 'm', 00H, '_', 00H, 'p', 00H
	DB	'g', 00H, 'u', 00H, 'i', 00H, 'd', 00H, ' ', 00H, '!', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@CAHHGEAC@?$AAd?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BA@CAHHGEAC@?$AAd?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'd', 00H
	DB	'w', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?s_Release@?7??GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPA_WIKPAJ@Z@4PA_WA
_DATA	SEGMENT
?s_Release@?7??GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPA_WIKPAJ@Z@4PA_WA DB 'R'
	DB	00H, 'e', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H						; `ATL::CComTypeInfoHolder::GetIDsOfNames'::`8'::s_Release
_DATA	ENDS
;	COMDAT ?s_Claim@?7??GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPA_WIKPAJ@Z@4PA_WA
_DATA	SEGMENT
?s_Claim@?7??GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPA_WIKPAJ@Z@4PA_WA DB 'C'
	DB	00H, 'l', 00H, 'a', 00H, 'i', 00H, 'm', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H, 00H ; `ATL::CComTypeInfoHolder::GetIDsOfNames'::`8'::s_Claim
_DATA	ENDS
;	COMDAT ??_C@_1BI@MCKDPFMC@?$AAp?$AAp?$AAI?$AAn?$AAf?$AAo?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BI@MCKDPFMC@?$AAp?$AAp?$AAI?$AAn?$AAf?$AAo?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'p', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1KO@PPNHIIND@?$AAC?$AAC?$AAo?$AAm?$AAC?$AAl?$AAa?$AAs?$AAs?$AAF?$AAa?$AAc?$AAt?$AAo?$AAr@
CONST	SEGMENT
??_C@_1KO@PPNHIIND@?$AAC?$AAC?$AAo?$AAm?$AAC?$AAl?$AAa?$AAs?$AAs?$AAF?$AAa?$AAc?$AAt?$AAo?$AAr@ DB 'C'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'C', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, 'F', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 'y', 00H, ':', 00H, ' ', 00H, 'a', 00H, 's', 00H
	DB	'k', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'I', 00H
	DB	'U', 00H, 'n', 00H, 'k', 00H, 'n', 00H, 'o', 00H, 'w', 00H, 'n'
	DB	00H, ' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'f', 00H, 'a', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'w', 00H, 'h'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'c', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' '
	DB	00H, 'a', 00H, 'n', 00H, ' ', 00H, 'a', 00H, 'g', 00H, 'g', 00H
	DB	'r', 00H, 'e', 00H, 'g', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'd'
	DB	00H, ' ', 00H, 'o', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
CONST	SEGMENT
??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@ DB 'C:\Develop'
	DB	'\OPOS-CCO\Common\ATL\atlcom.h', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@ENLDIEGP@?$AAm?$AA_?$AAp?$AAf?$AAn?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAI?$AAn?$AAs?$AAt@
CONST	SEGMENT
??_C@_1DC@ENLDIEGP@?$AAm?$AA_?$AAp?$AAf?$AAn?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAI?$AAn?$AAs?$AAt@ DB 'm'
	DB	00H, '_', 00H, 'p', 00H, 'f', 00H, 'n', 00H, 'C', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 's'
	DB	00H, 't', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@KFPLEHE@?$AAC?$AAC?$AAo?$AAm?$AAC?$AAl?$AAa?$AAs?$AAs?$AAF?$AAa?$AAc?$AAt?$AAo?$AAr@
CONST	SEGMENT
??_C@_1CC@KFPLEHE@?$AAC?$AAC?$AAo?$AAm?$AAC?$AAl?$AAa?$AAs?$AAs?$AAF?$AAa?$AAc?$AAt?$AAo?$AAr@ DB 'C'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'C', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, 'F', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 'y', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000001_0000_0000_c000_000000000046 DD 01H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT
?_entries@?1??_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B DD 00H ; `ATL::CComClassFactory::_GetEntries'::`2'::_entries
	DD	FLAT:??_C@_1CC@KFPLEHE@?$AAC?$AAC?$AAo?$AAm?$AAC?$AAl?$AAa?$AAs?$AAs?$AAF?$AAa?$AAc?$AAt?$AAo?$AAr@
	DD	00H
	DD	FLAT:__GUID_00000001_0000_0000_c000_000000000046
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_1HC@JLHBDINH@?$AA_?$AAG?$AAe?$AAt?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?$CI?$AA?$CJ?$AA?$FL?$AA0@
CONST	SEGMENT
??_C@_1HC@JLHBDINH@?$AA_?$AAG?$AAe?$AAt?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?$CI?$AA?$CJ?$AA?$FL?$AA0@ DB '_'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'E', 00H, 'n', 00H, 't', 00H
	DB	'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '(', 00H, ')', 00H, '['
	DB	00H, '0', 00H, ']', 00H, '.', 00H, 'p', 00H, 'F', 00H, 'u', 00H
	DB	'n', 00H, 'c', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '('
	DB	00H, '(', 00H, 'A', 00H, 'T', 00H, 'L', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'A', 00H, 'T', 00H, 'L', 00H, '_', 00H, 'C', 00H, 'R'
	DB	00H, 'E', 00H, 'A', 00H, 'T', 00H, 'O', 00H, 'R', 00H, 'A', 00H
	DB	'R', 00H, 'G', 00H, 'F', 00H, 'U', 00H, 'N', 00H, 'C', 00H, '*'
	DB	00H, ')', 00H, '1', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CComClassFactory@ATL@@6B@
CONST	SEGMENT
??_7CComClassFactory@ATL@@6B@ DD FLAT:__purecall	; ATL::CComClassFactory::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?CreateInstance@CComClassFactory@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
	DD	FLAT:?LockServer@CComClassFactory@ATL@@UAGJH@Z
	DD	FLAT:??_ECComClassFactory@ATL@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_1IG@BMPHLDAM@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAL?$AA?$CC?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1IG@BMPHLDAM@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAL?$AA?$CC?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5@ DB '0'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'L', 00H, '"', 00H
	DB	'R', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e'
	DB	00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'a', 00H, ' '
	DB	00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'a', 00H, 't', 00H, ' '
	DB	00H, 'h', 00H, 'a', 00H, 's', 00H, ' ', 00H, 'a', 00H, 'l', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'y', 00H, ' ', 00H, 'b'
	DB	00H, 'e', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'r', 00H, 'e', 00H
	DB	'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'd', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@CFNLNIPO@?$AAm?$AA_?$AAd?$AAw?$AAR?$AAe?$AAf?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1?$AAL@
CONST	SEGMENT
??_C@_1BO@CFNLNIPO@?$AAm?$AA_?$AAd?$AAw?$AAR?$AAe?$AAf?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1?$AAL@ DB 'm'
	DB	00H, '_', 00H, 'd', 00H, 'w', 00H, 'R', 00H, 'e', 00H, 'f', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '-', 00H, '1', 00H, 'L'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@MDGGGAPK@?$AAm?$AA_?$AAd?$AAw?$AAR?$AAe?$AAf?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@MDGGGAPK@?$AAm?$AA_?$AAd?$AAw?$AAR?$AAe?$AAf?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'm'
	DB	00H, '_', 00H, 'd', 00H, 'w', 00H, 'R', 00H, 'e', 00H, 'f', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@IINBGKAE@?$AAp?$AAp?$AAv?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BO@IINBGKAE@?$AAp?$AAp?$AAv?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'p', 00H, 'v', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
CONST	SEGMENT
??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'e', 00H
	DB	'l', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'O', 00H, 'P', 00H, 'O'
	DB	00H, 'S', 00H, '-', 00H, 'C', 00H, 'C', 00H, 'O', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H, '\'
	DB	00H, 'A', 00H, 'T', 00H, 'L', 00H, '\', 00H, 'a', 00H, 't', 00H
	DB	'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '.', 00H, 'h', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1IC@DIIBMAJJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1IC@DIIBMAJJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H
	DB	'c', 00H, 'k', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, ' ', 00H, 'A', 00H, 't', 00H, 'l', 00H
	DB	'M', 00H, 'o', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, 'A'
	DB	00H, 'd', 00H, 'd', 00H, 'T', 00H, 'e', 00H, 'r', 00H, 'm', 00H
	DB	'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, ' ', 00H, 'A', 00H, 't', 00H, 'l', 00H, 'W'
	DB	00H, 'i', 00H, 'n', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'u', 00H
	DB	'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 0aH
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JK@PCFOBMDH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1JK@PCFOBMDH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H
	DB	'c', 00H, 'k', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, ' ', 00H, 'A', 00H, 't', 00H, 'l', 00H
	DB	'W', 00H, 'i', 00H, 'n', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'u'
	DB	00H, 'l', 00H, 'e', 00H, 'E', 00H, 'x', 00H, 't', 00H, 'r', 00H
	DB	'a', 00H, 'c', 00H, 't', 00H, 'C', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 'W', 00H, 'n', 00H, 'd', 00H, 'D', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JC@NCPNLOIP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1JC@NCPNLOIP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H
	DB	'c', 00H, 'k', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, ' ', 00H, 'A', 00H, 't', 00H, 'l', 00H
	DB	'W', 00H, 'i', 00H, 'n', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'u'
	DB	00H, 'l', 00H, 'e', 00H, 'A', 00H, 'd', 00H, 'd', 00H, 'C', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'W', 00H, 'n'
	DB	00H, 'd', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 0aH, 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@BEGLAIHK@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp@
CONST	SEGMENT
??_C@_1DG@BEGLAIHK@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp@ DB 'p'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, 'p', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@JJDNGNLN@?$AA?$CB?$AAb?$AAB?$AAl?$AAi?$AAn?$AAd@
CONST	SEGMENT
??_C@_1BA@JJDNGNLN@?$AA?$CB?$AAb?$AAB?$AAl?$AAi?$AAn?$AAd@ DB '!', 00H, 'b'
	DB	00H, 'B', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@KALDMMBC@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?9?$AA?$DO?$AAp?$AAF?$AAu?$AAn?$AAc@
CONST	SEGMENT
??_C@_1GE@KALDMMBC@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?9?$AA?$DO?$AAp?$AAF?$AAu?$AAn?$AAc@ DB 'p'
	DB	00H, 'E', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'e', 00H
	DB	's', 00H, '-', 00H, '>', 00H, 'p', 00H, 'F', 00H, 'u', 00H, 'n'
	DB	00H, 'c', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '(', 00H
	DB	'(', 00H, 'A', 00H, 'T', 00H, 'L', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'A', 00H, 'T', 00H, 'L', 00H, '_', 00H, 'C', 00H, 'R', 00H
	DB	'E', 00H, 'A', 00H, 'T', 00H, 'O', 00H, 'R', 00H, 'A', 00H, 'R'
	DB	00H, 'G', 00H, 'F', 00H, 'U', 00H, 'N', 00H, 'C', 00H, '*', 00H
	DB	')', 00H, '1', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@ENABKMAI@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@ENABKMAI@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'E', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'e', 00H
	DB	's', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@PEGMCOIG@?$AAp?$AAT?$AAh?$AAi?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BG@PEGMCOIG@?$AAp?$AAT?$AAh?$AAi?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'T', 00H, 'h', 00H, 'i', 00H, 's', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@BDEIDBOP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1IO@BDEIDBOP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H
	DB	'c', 00H, 'k', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, ' ', 00H, 'A', 00H, 't', 00H, 'l', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'u'
	DB	00H, 'l', 00H, 'e', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'C', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 'O', 00H, 'b', 00H, 'j'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT
__GUID_b196b284_bab4_101a_b69c_00aa00341d07 DD 0b196b284H
	DW	0bab4H
	DW	0101aH
	DB	0b6H
	DB	09cH
	DB	00H
	DB	0aaH
	DB	00H
	DB	034H
	DB	01dH
	DB	07H
CONST	ENDS
;	COMDAT ??_C@_1IO@OONIPMJC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1IO@OONIPMJC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H
	DB	'c', 00H, 'k', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, ' ', 00H, 'C', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e'
	DB	00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'C', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 'O', 00H, 'b', 00H, 'j'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@JIHAIGJA@?$AAp?$AAC?$AAo?$AAm?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?9?$AA?$DO?$AAm?$AA_?$AAh@
CONST	SEGMENT
??_C@_1EA@JIHAIGJA@?$AAp?$AAC?$AAo?$AAm?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?9?$AA?$DO?$AAm?$AA_?$AAh@ DB 'p'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'M', 00H, 'o', 00H, 'd', 00H
	DB	'u', 00H, 'l', 00H, 'e', 00H, '-', 00H, '>', 00H, 'm', 00H, '_'
	DB	00H, 'h', 00H, 'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'T', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 'L', 00H, 'i', 00H, 'b', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@GAOMIJFK@?$AAp?$AAC?$AAo?$AAm?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1CA@GAOMIJFK@?$AAp?$AAC?$AAo?$AAm?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'M', 00H, 'o', 00H, 'd', 00H
	DB	'u', 00H, 'l', 00H, 'e', 00H, ' ', 00H, '!', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LBOMMKPJ@RegisterTypeLibForUser@
CONST	SEGMENT
??_C@_0BH@LBOMMKPJ@RegisterTypeLibForUser@ DB 'RegisterTypeLibForUser', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CNLFOMHB@UnRegisterTypeLibForUser@
CONST	SEGMENT
??_C@_0BJ@CNLFOMHB@UnRegisterTypeLibForUser@ DB 'UnRegisterTypeLibForUser'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@EDKOLFBJ@?$AAO?$AAL?$AAE?$AAA?$AAU?$AAT?$AA3?$AA2?$AA?4?$AAD?$AAL?$AAL@
CONST	SEGMENT
??_C@_1BK@EDKOLFBJ@?$AAO?$AAL?$AAE?$AAA?$AAU?$AAT?$AA3?$AA2?$AA?4?$AAD?$AAL?$AAL@ DB 'O'
	DB	00H, 'L', 00H, 'E', 00H, 'A', 00H, 'U', 00H, 'T', 00H, '3', 00H
	DB	'2', 00H, '.', 00H, 'D', 00H, 'L', 00H, 'L', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@BIHALFED@?$AA?2?$AAI?$AAm?$AAp?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AAe?$AAd?$AA?5?$AAC?$AAa@
CONST	SEGMENT
??_C@_1DA@BIHALFED@?$AA?2?$AAI?$AAm?$AAp?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AAe?$AAd?$AA?5?$AAC?$AAa@ DB '\'
	DB	00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 'm', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@IFBKBFAA@?$AA?2?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAd?$AA?5?$AAC?$AAa?$AAt?$AAe?$AAg@
CONST	SEGMENT
??_C@_1CK@IFBKBFAA@?$AA?2?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAd?$AA?5?$AAC?$AAa?$AAt?$AAe?$AAg@ DB '\'
	DB	00H, 'R', 00H, 'e', 00H, 'q', 00H, 'u', 00H, 'i', 00H, 'r', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 'C', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@FHBGLCIO@?$AAC?$AAL?$AAS?$AAI?$AAD?$AA?2@
CONST	SEGMENT
??_C@_1O@FHBGLCIO@?$AAC?$AAL?$AAS?$AAI?$AAD?$AA?2@ DB 'C', 00H, 'L', 00H, 'S'
	DB	00H, 'I', 00H, 'D', 00H, '\', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@IDMIONOG@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?9?$AA?$DO?$AAi?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$DN@
CONST	SEGMENT
??_C@_1CG@IDMIONOG@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?9?$AA?$DO?$AAi?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$DN@ DB 'p'
	DB	00H, 'E', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'y', 00H, '-', 00H
	DB	'>', 00H, 'i', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OK@NEECLFPA@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAL?$AA?$CC?$AAU?$AAs?$AAe?$AA?5?$AAO?$AAB?$AAJ?$AAE@
CONST	SEGMENT
??_C@_1OK@NEECLFPA@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAL?$AA?$CC?$AAU?$AAs?$AAe?$AA?5?$AAO?$AAB?$AAJ?$AAE@ DB '0'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'L', 00H, '"', 00H
	DB	'U', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'O', 00H, 'B', 00H, 'J'
	DB	00H, 'E', 00H, 'C', 00H, 'T', 00H, '_', 00H, 'E', 00H, 'N', 00H
	DB	'T', 00H, 'R', 00H, 'Y', 00H, '_', 00H, 'N', 00H, 'O', 00H, 'N'
	DB	00H, '_', 00H, 'C', 00H, 'R', 00H, 'E', 00H, 'A', 00H, 'T', 00H
	DB	'E', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H, '_', 00H, 'E'
	DB	00H, 'X', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'c', 00H, 'r', 00H
	DB	'o', 00H, ' ', 00H, 'i', 00H, 'f', 00H, ' ', 00H, 'y', 00H, 'o'
	DB	00H, 'u', 00H, ' ', 00H, 'w', 00H, 'a', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'g'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'c', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, ' ', 00H, 'o', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 's', 00H, '.', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_0002e012_0000_0000_c000_000000000046 DD 02e012H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ??_C@_19ILOCMLCJ@?$AA?4?$AAt?$AAl?$AAb@
CONST	SEGMENT
??_C@_19ILOCMLCJ@?$AA?4?$AAt?$AAl?$AAb@ DB '.', 00H, 't', 00H, 'l', 00H, 'b'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@MNLFIKHJ@?$AAh?$AAI?$AAn?$AAs?$AAt?$AAT?$AAy?$AAp?$AAe?$AAL?$AAi?$AAb?$AA?5?$AA?$CB?$AA?$DN@
CONST	SEGMENT
??_C@_1CE@MNLFIKHJ@?$AAh?$AAI?$AAn?$AAs?$AAt?$AAT?$AAy?$AAp?$AAe?$AAL?$AAi?$AAb?$AA?5?$AA?$CB?$AA?$DN@ DB 'h'
	DB	00H, 'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'T', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, 'L', 00H, 'i', 00H, 'b', 00H, ' ', 00H, '!'
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@GOCPDDCL@?$AAp?$AAb?$AAs?$AAt?$AAr?$AAP?$AAa?$AAt?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5@
CONST	SEGMENT
??_C@_1EC@GOCPDDCL@?$AAp?$AAb?$AAs?$AAt?$AAr?$AAP?$AAa?$AAt?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5@ DB 'p'
	DB	00H, 'b', 00H, 's', 00H, 't', 00H, 'r', 00H, 'P', 00H, 'a', 00H
	DB	't', 00H, 'h', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'p', 00H, 'p', 00H
	DB	'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'L', 00H, 'i', 00H, 'b'
	DB	00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@KAILKFFG@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY@
CONST	SEGMENT
??_C@_1BC@KAILKFFG@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY@ DB 'R', 00H, 'E'
	DB	00H, 'G', 00H, 'I', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'Y', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@JBACFMF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA_?$AAR?$AAa?$AAw@
CONST	SEGMENT
??_C@_1BG@JBACFMF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA_?$AAR?$AAa?$AAw@ DB 'M'
	DB	00H, 'o', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	'R', 00H, 'a', 00H, 'w', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe@
CONST	SEGMENT
??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe@ DB 'M', 00H, 'o', 00H, 'd'
	DB	00H, 'u', 00H, 'l', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@HEJCCJC@?$AA0?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAp?$AAM?$AAa?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe@
CONST	SEGMENT
??_C@_1DC@HEJCCJC@?$AA0?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAp?$AAM?$AAa?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe@ DB '0'
	DB	00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, 'p', 00H, 'M', 00H
	DB	'a', 00H, 'p', 00H, 'E', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, '-', 00H, '>', 00H, 's', 00H, 'z', 00H
	DB	'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@OGJGDPFE@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAK?$AAe?$AAy?$AA?5?$AA?$CF?$AAT@
CONST	SEGMENT
??_C@_1CE@OGJGDPFE@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAK?$AAe?$AAy?$AA?5?$AA?$CF?$AAT@ DB 'D'
	DB	00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 'K', 00H, 'e', 00H, 'y', 00H, ' ', 00H, '%'
	DB	00H, 'T', 00H, 's', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@ECAJCMBE@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAo?$AAn?$AA?9?$AAe?$AAm@
CONST	SEGMENT
??_C@_1FA@ECAJCMBE@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAo?$AAn?$AA?9?$AAe?$AAm@ DB 'D'
	DB	00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 'n', 00H, '-', 00H, 'e'
	DB	00H, 'm', 00H, 'p', 00H, 't', 00H, 'y', 00H, ' ', 00H, 's', 00H
	DB	'u', 00H, 'b', 00H, 'k', 00H, 'e', 00H, 'y', 00H, ' ', 00H, '%'
	DB	00H, 'T', 00H, 's', 00H, ' ', 00H, 'b', 00H, 'y', 00H, ' ', 00H
	DB	'f', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 0aH, 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@OHCCCDHD@?$AAE?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy@
CONST	SEGMENT
??_C@_1CM@OHCCCDHD@?$AAE?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy@ DB 'E'
	DB	00H, 'n', 00H, 'd', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H
	DB	'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'r'
	DB	00H, 'y', 00H, ' ', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	0aH, 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@OAJHMKAA@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAp?$AAe?$AAn?$AA?5?$AAk@
CONST	SEGMENT
??_C@_1FK@OAJHMKAA@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAp?$AAe?$AAn?$AA?5?$AAk@ DB 'I'
	DB	00H, 'g', 00H, 'n', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, ' '
	DB	00H, 'k', 00H, 'e', 00H, 'y', 00H, ' ', 00H, 'o', 00H, 'n', 00H
	DB	' ', 00H, '%', 00H, 'T', 00H, 's', 00H, ' ', 00H, ':', 00H, ' '
	DB	00H, 'I', 00H, 'n', 00H, ' ', 00H, 'R', 00H, 'e', 00H, 'c', 00H
	DB	'o', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 'y', 00H, ' ', 00H, 'm'
	DB	00H, 'o', 00H, 'd', 00H, 'e', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@MKECKMBH@?$AAO?$AAp?$AAe?$AAn?$AAe?$AAd?$AA?5?$AAK?$AAe?$AAy?$AA?5?$AA?$CF?$AAT?$AAs?$AA?6@
CONST	SEGMENT
??_C@_1CA@MKECKMBH@?$AAO?$AAp?$AAe?$AAn?$AAe?$AAd?$AA?5?$AAK?$AAe?$AAy?$AA?5?$AA?$CF?$AAT?$AAs?$AA?6@ DB 'O'
	DB	00H, 'p', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'K', 00H, 'e', 00H, 'y', 00H, ' ', 00H, '%', 00H, 'T', 00H, 's'
	DB	00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@NOBELHPC@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAk?$AAe?$AAy?$AA?5?$AA?$CF?$AAT@
CONST	SEGMENT
??_C@_1CE@NOBELHPC@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAk?$AAe?$AAy?$AA?5?$AA?$CF?$AAT@ DB 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 'k', 00H, 'e', 00H, 'y', 00H, ' ', 00H, '%'
	DB	00H, 'T', 00H, 's', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@BEOOHDFB@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAT?$AAs?$AA?6@
CONST	SEGMENT
??_C@_1BM@BEOOHDFB@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAT?$AAs?$AA?6@ DB 'D'
	DB	00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, '%', 00H, 'T', 00H, 's', 00H, 0aH, 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@KJDIPNJ@?$AAN?$AAu?$AAm?$AA?5?$AAE?$AAl?$AAs?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?6@
CONST	SEGMENT
??_C@_1BM@KJDIPNJ@?$AAN?$AAu?$AAm?$AA?5?$AAE?$AAl?$AAs?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?6@ DB 'N'
	DB	00H, 'u', 00H, 'm', 00H, ' ', 00H, 'E', 00H, 'l', 00H, 's', 00H
	DB	' ', 00H, '=', 00H, ' ', 00H, '%', 00H, 'd', 00H, 0aH, 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@EMAKHHOG@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs@
CONST	SEGMENT
??_C@_1EE@EMAKHHOG@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs@ DB 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, ',', 00H, ' ', 00H
	DB	'c', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 'n', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, ' ', 00H, 'u', 00H, 'p', 00H, '!', 00H, 0aH, 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1FE@MCPBFDLN@?$AAS?$AAy?$AAn?$AAt?$AAa?$AAx?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?0?$AA?5?$AAe@
CONST	SEGMENT
??_C@_1FE@MCPBFDLN@?$AAS?$AAy?$AAn?$AAt?$AAa?$AAx?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?0?$AA?5?$AAe@ DB 'S'
	DB	00H, 'y', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'x', 00H, ' ', 00H
	DB	'e', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ',', 00H, ' '
	DB	00H, 'e', 00H, 'x', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'a', 00H, ' ', 00H, '{'
	DB	00H, ',', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'u', 00H, 'n', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, ' ', 00H, '%', 00H, 'T', 00H, 's'
	DB	00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@JFHAPNGI@?$AAH?$AAK?$AAe?$AAy?$AAF?$AAr?$AAo?$AAm?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5@
CONST	SEGMENT
??_C@_1DM@JFHAPNGI@?$AAH?$AAK?$AAe?$AAy?$AAF?$AAr?$AAo?$AAm?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5@ DB 'H'
	DB	00H, 'K', 00H, 'e', 00H, 'y', 00H, 'F', 00H, 'r', 00H, 'o', 00H
	DB	'm', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H, '%', 00H, 'T'
	DB	00H, 's', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_19IGGGDNCK@?$AA?$CF?$AAT?$AAs?$AA?6@
CONST	SEGMENT
??_C@_19IGGGDNCK@?$AA?$CF?$AAT?$AAs?$AA?6@ DB '%', 00H, 'T', 00H, 's', 00H
	DB	0aH, 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@KOLNJMBJ@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAn?$AAo?$AA?5?$AAc?$AAl?$AAo?$AAs?$AAi?$AAn@
CONST	SEGMENT
??_C@_1DG@KOLNJMBJ@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAn?$AAo?$AA?5?$AAc?$AAl?$AAo?$AAs?$AAi?$AAn@ DB 'E'
	DB	00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'n', 00H
	DB	'o', 00H, ' ', 00H, 'c', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, ' ', 00H, '%', 00H, '%', 00H, ' ', 00H
	DB	'f', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 0aH, 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@LJOLIMEM@?$AA?$AN?$AA?6?$AA?7?$AA?$HN?$AA?$AN?$AA?6?$AA?$HN?$AA?$AN?$AA?6@
CONST	SEGMENT
??_C@_1BE@LJOLIMEM@?$AA?$AN?$AA?6?$AA?7?$AA?$HN?$AA?$AN?$AA?6?$AA?$HN?$AA?$AN?$AA?6@ DB 0dH
	DB	00H, 0aH, 00H, 09H, 00H, '}', 00H, 0dH, 00H, 0aH, 00H, '}', 00H
	DB	0dH, 00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@NHKLICFA@?$AAH?$AAK?$AAC?$AAU?$AA?$AN?$AA?6?$AA?$HL?$AA?7?$AAS?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr@
CONST	SEGMENT
??_C@_1EA@NHKLICFA@?$AAH?$AAK?$AAC?$AAU?$AA?$AN?$AA?6?$AA?$HL?$AA?7?$AAS?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr@ DB 'H'
	DB	00H, 'K', 00H, 'C', 00H, 'U', 00H, 0dH, 00H, 0aH, 00H, '{', 00H
	DB	09H, 00H, 'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a'
	DB	00H, 'r', 00H, 'e', 00H, 0dH, 00H, 0aH, 00H, 09H, 00H, '{', 00H
	DB	0dH, 00H, 0aH, 00H, 09H, 00H, 09H, 00H, 'C', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, 'e', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@DGLFCBHI@?$AAp?$AAp?$AAs?$AAz?$AAR?$AAe?$AAg?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@DGLFCBHI@?$AAp?$AAp?$AAs?$AAz?$AAR?$AAe?$AAg?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'p', 00H, 's', 00H, 'z', 00H, 'R', 00H, 'e', 00H, 'g', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@ODFKMBGC@?$AAl?$AAp?$AAs?$AAz?$AAR?$AAe?$AAg?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@ODFKMBGC@?$AAl?$AAp?$AAs?$AAz?$AAR?$AAe?$AAg?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'l'
	DB	00H, 'p', 00H, 's', 00H, 'z', 00H, 'R', 00H, 'e', 00H, 'g', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@LNIALBHN@?$AAS?$AAh?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAb?$AAe?$AA?5?$AAh@
CONST	SEGMENT
??_C@_1CM@LNIALBHN@?$AAS?$AAh?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAb?$AAe?$AA?5?$AAh@ DB 'S'
	DB	00H, 'h', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H
	DB	'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'b', 00H, 'e', 00H, ' '
	DB	00H, 'h', 00H, 'e', 00H, 'r', 00H, 'e', 00H, '!', 00H, '!', 00H
	DB	0aH, 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@OIDGAAMP@?$AAB?$AAi?$AAn?$AAa?$AAr?$AAy?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AAd?$AAo?$AAe@
CONST	SEGMENT
??_C@_1FK@OIDGAAMP@?$AAB?$AAi?$AAn?$AAa?$AAr?$AAy?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AAd?$AAo?$AAe@ DB 'B'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'r', 00H, 'y', 00H, ' ', 00H
	DB	'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H, 'd', 00H, 'o'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'f', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'o'
	DB	00H, 'n', 00H, ' ', 00H, 'B', 00H, 'Y', 00H, 'T', 00H, 'E', 00H
	DB	' ', 00H, 'b', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 'r'
	DB	00H, 'i', 00H, 'e', 00H, 's', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@OPMJCKIB@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF@
CONST	SEGMENT
??_C@_1DC@OPMJCKIB@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, ' '
	DB	00H, '%', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 't', 00H, ' ', 00H
	DB	'%', 00H, 'T', 00H, 's', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@GENBDOHF@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF@
CONST	SEGMENT
??_C@_1DE@GENBDOHF@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, ' '
	DB	00H, '%', 00H, 'T', 00H, 's', 00H, ' ', 00H, 'a', 00H, 't', 00H
	DB	' ', 00H, '%', 00H, 'T', 00H, 's', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@HANLFFFG@?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt@
CONST	SEGMENT
??_C@_1BA@HANLFFFG@?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt@ DB 'd', 00H, 'e', 00H
	DB	'f', 00H, 'a', 00H, 'u', 00H, 'l', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@BDBPEMM@?$AA?$CF?$AAT?$AAs?$AA?5?$AAT?$AAy?$AAp?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAu@
CONST	SEGMENT
??_C@_1DA@BDBPEMM@?$AA?$CF?$AAT?$AAs?$AA?5?$AAT?$AAy?$AAp?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAu@ DB '%'
	DB	00H, 'T', 00H, 's', 00H, ' ', 00H, 'T', 00H, 'y', 00H, 'p', 00H
	DB	'e', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 's'
	DB	00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'd', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@CDDJHMMA@?$AAN?$AAe?$AAx?$AAt?$AAT?$AAo?$AAk?$AAe?$AAn?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAe@
CONST	SEGMENT
??_C@_1EI@CDDJHMMA@?$AAN?$AAe?$AAx?$AAt?$AAT?$AAo?$AAk?$AAe?$AAn?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAe@ DB 'N'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'T', 00H, 'o', 00H, 'k', 00H
	DB	'e', 00H, 'n', 00H, ' ', 00H, ':', 00H, ' ', 00H, 'U', 00H, 'n'
	DB	00H, 'e', 00H, 'x', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 'E', 00H, 'n', 00H, 'd', 00H, ' '
	DB	00H, 'o', 00H, 'f', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@BBJOACGG@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAC?$AAU?$AAR?$AAR?$AAE?$AAN?$AAT?$AA_?$AAC?$AAO@
CONST	SEGMENT
??_C@_1CI@BBJOACGG@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAC?$AAU?$AAR?$AAR?$AAE?$AAN?$AAT?$AA_?$AAC?$AAO@ DB 'H'
	DB	00H, 'K', 00H, 'E', 00H, 'Y', 00H, '_', 00H, 'C', 00H, 'U', 00H
	DB	'R', 00H, 'R', 00H, 'E', 00H, 'N', 00H, 'T', 00H, '_', 00H, 'C'
	DB	00H, 'O', 00H, 'N', 00H, 'F', 00H, 'I', 00H, 'G', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@HAGMMHIA@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAD?$AAY?$AAN?$AA_?$AAD?$AAA?$AAT?$AAA@
CONST	SEGMENT
??_C@_1BM@HAGMMHIA@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAD?$AAY?$AAN?$AA_?$AAD?$AAA?$AAT?$AAA@ DB 'H'
	DB	00H, 'K', 00H, 'E', 00H, 'Y', 00H, '_', 00H, 'D', 00H, 'Y', 00H
	DB	'N', 00H, '_', 00H, 'D', 00H, 'A', 00H, 'T', 00H, 'A', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@KHNNAOIC@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAP?$AAE?$AAR?$AAF?$AAO?$AAR?$AAM?$AAA?$AAN?$AAC@
CONST	SEGMENT
??_C@_1CM@KHNNAOIC@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAP?$AAE?$AAR?$AAF?$AAO?$AAR?$AAM?$AAA?$AAN?$AAC@ DB 'H'
	DB	00H, 'K', 00H, 'E', 00H, 'Y', 00H, '_', 00H, 'P', 00H, 'E', 00H
	DB	'R', 00H, 'F', 00H, 'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'N'
	DB	00H, 'C', 00H, 'E', 00H, '_', 00H, 'D', 00H, 'A', 00H, 'T', 00H
	DB	'A', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@BGODANIO@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAU?$AAS?$AAE?$AAR?$AAS@
CONST	SEGMENT
??_C@_1BG@BGODANIO@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAU?$AAS?$AAE?$AAR?$AAS@ DB 'H'
	DB	00H, 'K', 00H, 'E', 00H, 'Y', 00H, '_', 00H, 'U', 00H, 'S', 00H
	DB	'E', 00H, 'R', 00H, 'S', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@GFBEANJL@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAL?$AAO?$AAC?$AAA?$AAL?$AA_?$AAM?$AAA?$AAC?$AAH@
CONST	SEGMENT
??_C@_1CG@GFBEANJL@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAL?$AAO?$AAC?$AAA?$AAL?$AA_?$AAM?$AAA?$AAC?$AAH@ DB 'H'
	DB	00H, 'K', 00H, 'E', 00H, 'Y', 00H, '_', 00H, 'L', 00H, 'O', 00H
	DB	'C', 00H, 'A', 00H, 'L', 00H, '_', 00H, 'M', 00H, 'A', 00H, 'C'
	DB	00H, 'H', 00H, 'I', 00H, 'N', 00H, 'E', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@HLHNCBPM@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAC?$AAU?$AAR?$AAR?$AAE?$AAN?$AAT?$AA_?$AAU?$AAS@
CONST	SEGMENT
??_C@_1CE@HLHNCBPM@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAC?$AAU?$AAR?$AAR?$AAE?$AAN?$AAT?$AA_?$AAU?$AAS@ DB 'H'
	DB	00H, 'K', 00H, 'E', 00H, 'Y', 00H, '_', 00H, 'C', 00H, 'U', 00H
	DB	'R', 00H, 'R', 00H, 'E', 00H, 'N', 00H, 'T', 00H, '_', 00H, 'U'
	DB	00H, 'S', 00H, 'E', 00H, 'R', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@PACHPJFI@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAC?$AAL?$AAA?$AAS?$AAS?$AAE?$AAS?$AA_?$AAR?$AAO@
CONST	SEGMENT
??_C@_1CE@PACHPJFI@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAC?$AAL?$AAA?$AAS?$AAS?$AAE?$AAS?$AA_?$AAR?$AAO@ DB 'H'
	DB	00H, 'K', 00H, 'E', 00H, 'Y', 00H, '_', 00H, 'C', 00H, 'L', 00H
	DB	'A', 00H, 'S', 00H, 'S', 00H, 'E', 00H, 'S', 00H, '_', 00H, 'R'
	DB	00H, 'O', 00H, 'O', 00H, 'T', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_19OFICIBHH@?$AAH?$AAK?$AAC?$AAC@
CONST	SEGMENT
??_C@_19OFICIBHH@?$AAH?$AAK?$AAC?$AAC@ DB 'H', 00H, 'K', 00H, 'C', 00H, 'C'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19GFFAIJHG@?$AAH?$AAK?$AAD?$AAD@
CONST	SEGMENT
??_C@_19GFFAIJHG@?$AAH?$AAK?$AAD?$AAD@ DB 'H', 00H, 'K', 00H, 'D', 00H, 'D'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19PNBHMJPL@?$AAH?$AAK?$AAP?$AAD@
CONST	SEGMENT
??_C@_19PNBHMJPL@?$AAH?$AAK?$AAP?$AAD@ DB 'H', 00H, 'K', 00H, 'P', 00H, 'D'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_17PJOJPMPB@?$AAH?$AAK?$AAU@
CONST	SEGMENT
??_C@_17PJOJPMPB@?$AAH?$AAK?$AAU@ DB 'H', 00H, 'K', 00H, 'U', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_19PEALEEJB@?$AAH?$AAK?$AAL?$AAM@
CONST	SEGMENT
??_C@_19PEALEEJB@?$AAH?$AAK?$AAL?$AAM@ DB 'H', 00H, 'K', 00H, 'L', 00H, 'M'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19JAPAIJDE@?$AAH?$AAK?$AAC?$AAU@
CONST	SEGMENT
??_C@_19JAPAIJDE@?$AAH?$AAK?$AAC?$AAU@ DB 'H', 00H, 'K', 00H, 'C', 00H, 'U'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19NCHLBIN@?$AAH?$AAK?$AAC?$AAR@
CONST	SEGMENT
??_C@_19NCHLBIN@?$AAH?$AAK?$AAC?$AAR@ DB 'H', 00H, 'K', 00H, 'C', 00H, 'R'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?map@?1??HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PA_W@Z@4QBUkeymap@?1??123@KAPAU4@0@Z@B
CONST	SEGMENT
?map@?1??HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PA_W@Z@4QBUkeymap@?1??123@KAPAU4@0@Z@B DD FLAT:??_C@_19NCHLBIN@?$AAH?$AAK?$AAC?$AAR@ ; `ATL::CRegParser::HKeyFromString'::`2'::map
	DD	080000000H
	DD	FLAT:??_C@_19JAPAIJDE@?$AAH?$AAK?$AAC?$AAU@
	DD	080000001H
	DD	FLAT:??_C@_19PEALEEJB@?$AAH?$AAK?$AAL?$AAM@
	DD	080000002H
	DD	FLAT:??_C@_17PJOJPMPB@?$AAH?$AAK?$AAU@
	DD	080000003H
	DD	FLAT:??_C@_19PNBHMJPL@?$AAH?$AAK?$AAP?$AAD@
	DD	080000004H
	DD	FLAT:??_C@_19GFFAIJHG@?$AAH?$AAK?$AAD?$AAD@
	DD	080000006H
	DD	FLAT:??_C@_19OFICIBHH@?$AAH?$AAK?$AAC?$AAC@
	DD	080000005H
	DD	FLAT:??_C@_1CE@PACHPJFI@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAC?$AAL?$AAA?$AAS?$AAS?$AAE?$AAS?$AA_?$AAR?$AAO@
	DD	080000000H
	DD	FLAT:??_C@_1CE@HLHNCBPM@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAC?$AAU?$AAR?$AAR?$AAE?$AAN?$AAT?$AA_?$AAU?$AAS@
	DD	080000001H
	DD	FLAT:??_C@_1CG@GFBEANJL@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAL?$AAO?$AAC?$AAA?$AAL?$AA_?$AAM?$AAA?$AAC?$AAH@
	DD	080000002H
	DD	FLAT:??_C@_1BG@BGODANIO@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAU?$AAS?$AAE?$AAR?$AAS@
	DD	080000003H
	DD	FLAT:??_C@_1CM@KHNNAOIC@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAP?$AAE?$AAR?$AAF?$AAO?$AAR?$AAM?$AAA?$AAN?$AAC@
	DD	080000004H
	DD	FLAT:??_C@_1BM@HAGMMHIA@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAD?$AAY?$AAN?$AA_?$AAD?$AAA?$AAT?$AAA@
	DD	080000006H
	DD	FLAT:??_C@_1CI@BBJOACGG@?$AAH?$AAK?$AAE?$AAY?$AA_?$AAC?$AAU?$AAR?$AAR?$AAE?$AAN?$AAT?$AA_?$AAC?$AAO@
	DD	080000005H
CONST	ENDS
;	COMDAT ??_C@_1FI@KMIOGKOO@?$AAB?$AAo?$AAg?$AAu?$AAs?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF?$AAT?$AAc@
CONST	SEGMENT
??_C@_1FI@KMIOGKOO@?$AAB?$AAo?$AAg?$AAu?$AAs?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF?$AAT?$AAc@ DB 'B'
	DB	00H, 'o', 00H, 'g', 00H, 'u', 00H, 's', 00H, ' ', 00H, 'v', 00H
	DB	'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, ' ', 00H, '%', 00H, 'T'
	DB	00H, 'c', 00H, ' ', 00H, 'p', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 's', 00H, ' ', 00H, 'b'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'r', 00H, 'y', 00H, ' ', 00H
	DB	'H', 00H, 'e', 00H, 'x', 00H, ' ', 00H, 'v', 00H, 'a', 00H, 'l'
	DB	00H, 'u', 00H, 'e', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@BCPDHANH@?$AAM?$AAa?$AAp?$AA?5?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAf@
CONST	SEGMENT
??_C@_1CK@BCPDHANH@?$AAM?$AAa?$AAp?$AA?5?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAf@ DB 'M'
	DB	00H, 'a', 00H, 'p', 00H, ' ', 00H, 'E', 00H, 'n', 00H, 't', 00H
	DB	'r', 00H, 'y', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' '
	DB	00H, 'f', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 0aH, 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@KJKEAFMD@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAR@
CONST	SEGMENT
??_C@_1DA@KJKEAFMD@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAR@ DB 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd'
	DB	00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H
	DB	'c', 00H, 'e', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@BBJFPKL@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAF?$AAi?$AAn?$AAd?$AAR@
CONST	SEGMENT
??_C@_1FG@BBJFPKL@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAF?$AAi?$AAn?$AAd?$AAR@ DB 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H
	DB	'c', 00H, 'e', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'I'
	DB	00H, 'D', 00H, ':', 00H, '%', 00H, 'T', 00H, 's', 00H, ' ', 00H
	DB	'T', 00H, 'Y', 00H, 'P', 00H, 'E', 00H, ':', 00H, '%', 00H, 'T'
	DB	00H, 's', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FE@HJDAOHJE@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAF?$AAi?$AAn?$AAd?$AAR@
CONST	SEGMENT
??_C@_1FE@HJDAOHJE@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAF?$AAi?$AAn?$AAd?$AAR@ DB 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H
	DB	'c', 00H, 'e', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'I'
	DB	00H, 'D', 00H, ':', 00H, '%', 00H, 'd', 00H, ' ', 00H, 'T', 00H
	DB	'Y', 00H, 'P', 00H, 'E', 00H, ':', 00H, '%', 00H, 'T', 00H, 's'
	DB	00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@JBIDINMA@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAL@
CONST	SEGMENT
??_C@_1DM@JBIDINMA@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAL@ DB 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd'
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'y', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H, '%', 00H, 'T'
	DB	00H, 's', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.28.29333\atlmfc\include\statreg.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1KC@MLBIPPDL@?$AAL?$AA?$CC?$AAs?$AAt?$AAa?$AAt?$AAi?$AAc?$AAa?$AAl?$AAl?$AAy?$AA?5?$AAl?$AAi@
CONST	SEGMENT
??_C@_1KC@MLBIPPDL@?$AAL?$AA?$CC?$AAs?$AAt?$AAa?$AAt?$AAi?$AAc?$AAa?$AAl?$AAl?$AAy?$AA?5?$AAl?$AAi@ DB 'L'
	DB	00H, '"', 00H, 's', 00H, 't', 00H, 'a', 00H, 't', 00H, 'i', 00H
	DB	'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, ' ', 00H, 'l'
	DB	00H, 'i', 00H, 'n', 00H, 'k', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, ' ', 00H, 'C', 00H, 'R', 00H, 'e', 00H, 'g'
	DB	00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, 'a', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	' ', 00H, 'o', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, '.', 00H, ' ', 00H, 'D', 00H, 'o', 00H, ' ', 00H, 'n', 00H
	DB	'o', 00H, 't', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l'
	DB	00H, 't', 00H, 'h', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'f', 00H
	DB	'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1JM@PMKLGAKF@?$AAs?$AAt?$AAa?$AAt?$AAi?$AAc?$AAa?$AAl?$AAl?$AAy?$AA?5?$AAl?$AAi?$AAn?$AAk@
CONST	SEGMENT
??_C@_1JM@PMKLGAKF@?$AAs?$AAt?$AAa?$AAt?$AAi?$AAc?$AAa?$AAl?$AAl?$AAy?$AA?5?$AAl?$AAi?$AAn?$AAk@ DB 's'
	DB	00H, 't', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'y', 00H, ' ', 00H, 'l', 00H, 'i', 00H, 'n'
	DB	00H, 'k', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	' ', 00H, 'C', 00H, 'R', 00H, 'e', 00H, 'g', 00H, 'O', 00H, 'b'
	DB	00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'i', 00H
	DB	's', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'a'
	DB	00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, ' ', 00H, 'o', 00H
	DB	'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, '.', 00H, ' '
	DB	00H, 'D', 00H, 'o', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 't', 00H, 'h'
	DB	00H, 'i', 00H, 's', 00H, ' ', 00H, 'f', 00H, 'u', 00H, 'n', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CRegObject@ATL@@6B@
CONST	SEGMENT
??_7CRegObject@ATL@@6B@ DD FLAT:?QueryInterface@CRegObject@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CRegObject::`vftable'
	DD	FLAT:?AddRef@CRegObject@ATL@@UAGKXZ
	DD	FLAT:?Release@CRegObject@ATL@@UAGKXZ
	DD	FLAT:?AddReplacement@CRegObject@ATL@@UAGJPB_W0@Z
	DD	FLAT:?ClearReplacements@CRegObject@ATL@@UAGJXZ
	DD	FLAT:??_ECRegObject@ATL@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_1O@JFMKDNFA@?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1O@JFMKDNFA@?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQB_WB
CONST	SEGMENT
?rgszNeverDelete@CRegParser@ATL@@1QBQB_WB DD FLAT:$SG112072 ; ATL::CRegParser::rgszNeverDelete
	DD	FLAT:$SG112073
	DD	FLAT:$SG112074
	DD	FLAT:$SG112075
	DD	FLAT:$SG112076
	DD	FLAT:$SG112077
	DD	FLAT:$SG112078
	DD	FLAT:$SG112079
	DD	FLAT:$SG112080
	DD	FLAT:$SG112081
	DD	FLAT:$SG112082
	DD	FLAT:$SG112083
CONST	ENDS
;	COMDAT ??_C@_1BK@LDPHGFPN@?$AAs?$AAz?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@LDPHGFPN@?$AAs?$AAz?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 's'
	DB	00H, 'z', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@MMFPEKL@?$AAs?$AAz?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BG@MMFPEKL@?$AAs?$AAz?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 's'
	DB	00H, 'z', 00H, 'K', 00H, 'e', 00H, 'y', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1OC@IGDLHBDL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OC@IGDLHBDL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 's', 00H, 't'
	DB	00H, 'a', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'g', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@EIGOLNAA@?$AAl?$AAp?$AAs?$AAz?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG@
CONST	SEGMENT
??_C@_1DO@EIGOLNAA@?$AAl?$AAp?$AAs?$AAz?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG@ DB 'l'
	DB	00H, 'p', 00H, 's', 00H, 'z', 00H, 'K', 00H, 'e', 00H, 'y', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, 'l', 00H, 'p', 00H, 's', 00H, 'z', 00H
	DB	'V', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, ' ', 00H, '!'
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IA@CIKBLAHF@?$AAC?$AAR?$AAe?$AAg?$AAK?$AAe?$AAy?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAu?$AAr?$AAs@
CONST	SEGMENT
??_C@_1IA@CIKBLAHF@?$AAC?$AAR?$AAe?$AAg?$AAK?$AAe?$AAy?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAu?$AAr?$AAs@ DB 'C'
	DB	00H, 'R', 00H, 'e', 00H, 'g', 00H, 'K', 00H, 'e', 00H, 'y', 00H
	DB	':', 00H, ':', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 'u', 00H, 'r'
	DB	00H, 's', 00H, 'e', 00H, 'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'K', 00H, 'e', 00H, 'y', 00H, ' ', 00H, ':'
	DB	00H, ' ', 00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'O', 00H, 'p'
	DB	00H, 'e', 00H, 'n', 00H, ' ', 00H, 'K', 00H, 'e', 00H, 'y', 00H
	DB	' ', 00H, '%', 00H, 'T', 00H, 's', 00H, '(', 00H, 'E', 00H, 'r'
	DB	00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '=', 00H, ' ', 00H
	DB	'%', 00H, 'd', 00H, ')', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@MAMCHIIA@?$AA?$CI?$AAd?$AAw?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CI?$AA?5?$AA1?$AAu@
CONST	SEGMENT
??_C@_1FG@MAMCHIIA@?$AA?$CI?$AAd?$AAw?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CI?$AA?5?$AA1?$AAu@ DB '('
	DB	00H, 'd', 00H, 'w', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '(', 00H, ' ', 00H, '1'
	DB	00H, 'u', 00H, 'l', 00H, ' ', 00H, ')', 00H, ')', 00H, ' ', 00H
	DB	'|', 00H, '|', 00H, ' ', 00H, '(', 00H, 'd', 00H, 'w', 00H, 'T'
	DB	00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, '(', 00H, ' ', 00H, '2', 00H, 'u', 00H, 'l', 00H, ' '
	DB	00H, ')', 00H, ')', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@OMKLFNDM@?$AAl?$AAR?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AAL@
CONST	SEGMENT
??_C@_1BG@OMKLFNDM@?$AAl?$AAR?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AAL@ DB 'l'
	DB	00H, 'R', 00H, 'e', 00H, 's', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 'L', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@JAHJEEHI@?$AAh?$AAK?$AAe?$AAy?$AAP?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1CA@JAHJEEHI@?$AAh?$AAK?$AAe?$AAy?$AAP?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'h'
	DB	00H, 'K', 00H, 'e', 00H, 'y', 00H, 'P', 00H, 'a', 00H, 'r', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LILAPHGE@RegDeleteKeyExW@
CONST	SEGMENT
??_C@_0BA@LILAPHGE@RegDeleteKeyExW@ DB 'RegDeleteKeyExW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@KCHMLGAI@?$AAm?$AA_?$AAh?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BI@KCHMLGAI@?$AAm?$AA_?$AAh?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'm'
	DB	00H, '_', 00H, 'h', 00H, 'K', 00H, 'e', 00H, 'y', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@JPOONHGO@?$AAm?$AA_?$AAh?$AAK?$AAe?$AAy?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BI@JPOONHGO@?$AAm?$AA_?$AAh?$AAK?$AAe?$AAy?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'm'
	DB	00H, '_', 00H, 'h', 00H, 'K', 00H, 'e', 00H, 'y', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
CONST	SEGMENT
??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@ DB 'A'
	DB	00H, 'T', 00H, 'L', 00H, ':', 00H, ' ', 00H, '%', 00H, 'T', 00H
	DB	's', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 'm', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 'e', 00H, 'd', 00H, '.', 00H, 0aH, 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@NFPICFEL@?$AA_?$AAp?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BM@NFPICFEL@?$AA_?$AAp?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB '_'
	DB	00H, 'p', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'u', 00H, 'l', 00H
	DB	'e', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_7CComModule@ATL@@6B@
CONST	SEGMENT
??_7CComModule@ATL@@6B@ DD FLAT:??_ECComModule@ATL@@UAEPAXI@Z ; ATL::CComModule::`vftable'
	DD	FLAT:?Lock@CAtlModule@ATL@@UAEJXZ
	DD	FLAT:?Unlock@CAtlModule@ATL@@UAEJXZ
	DD	FLAT:?GetLockCount@CAtlModule@ATL@@UAEJXZ
	DD	FLAT:?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z
	DD	FLAT:?AddCommonRGSReplacements@?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAEJPAUIRegistrarBase@@@Z
	DD	FLAT:?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
	DD	FLAT:?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z
	DD	FLAT:?UpdateRegistryFromResource@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
	DD	FLAT:?UpdateRegistryFromResource@CComModule@ATL@@UAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z
CONST	ENDS
;	COMDAT ??_C@_1BI@JBLBCKD@?$AAm?$AA_?$AAp?$AAG?$AAI?$AAT?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BI@JBLBCKD@?$AAm?$AA_?$AAp?$AAG?$AAI?$AAT?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'm'
	DB	00H, '_', 00H, 'p', 00H, 'G', 00H, 'I', 00H, 'T', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@LENCCAOJ@?$AAp?$AAp?$AAG?$AAI?$AAT?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BG@LENCCAOJ@?$AAp?$AAp?$AAG?$AAI?$AAT?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'p', 00H, 'G', 00H, 'I', 00H, 'T', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000146_0000_0000_c000_000000000046 DD 0146H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ??_C@_1HK@DFMOIGDB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1HK@DFMOIGDB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, ' ', 00H, 'C', 00H, 'A', 00H, 't', 00H, 'l'
	DB	00H, 'M', 00H, 'o', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H
	DB	0aH, 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@DNHFMIHP@?$AA_?$AAp?$AAA?$AAt?$AAl?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5@
CONST	SEGMENT
??_C@_1CC@DNHFMIHP@?$AA_?$AAp?$AAA?$AAt?$AAl?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5@ DB '_'
	DB	00H, 'p', 00H, 'A', 00H, 't', 00H, 'l', 00H, 'M', 00H, 'o', 00H
	DB	'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, ' ', 00H, 'C', 00H, 'A', 00H, 't', 00H, 'l'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'M', 00H, 'o', 00H, 'd', 00H
	DB	'u', 00H, 'l', 00H, 'e', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.28.29333\atlmfc\include\atlbase.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@NPGJNKLA@?$AAm?$AA_?$AAb?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd@
CONST	SEGMENT
??_C@_1BE@NPGJNKLA@?$AAm?$AA_?$AAb?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd@ DB 'm', 00H
	DB	'_', 00H, 'b', 00H, 'L', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 'e'
	DB	00H, 'd', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@OHCCAGNO@?$AA?$CB?$AAm?$AA_?$AAb?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd@
CONST	SEGMENT
??_C@_1BG@OHCCAGNO@?$AA?$CB?$AAm?$AA_?$AAb?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd@ DB '!'
	DB	00H, 'm', 00H, '_', 00H, 'b', 00H, 'L', 00H, 'o', 00H, 'c', 00H
	DB	'k', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HAKLOOGP@RegDeleteKeyTransactedW@
CONST	SEGMENT
??_C@_0BI@HAKLOOGP@RegDeleteKeyTransactedW@ DB 'RegDeleteKeyTransactedW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MNCFCPFK@RegCreateKeyTransactedW@
CONST	SEGMENT
??_C@_0BI@MNCFCPFK@RegCreateKeyTransactedW@ DB 'RegCreateKeyTransactedW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EKFFMJIO@RegOpenKeyTransactedW@
CONST	SEGMENT
??_C@_0BG@EKFFMJIO@RegOpenKeyTransactedW@ DB 'RegOpenKeyTransactedW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@KNMGNOCJ@?$AAh?$AAA?$AAd?$AAv?$AAA?$AAP?$AAI?$AA3?$AA2?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BO@KNMGNOCJ@?$AAh?$AAA?$AAd?$AAv?$AAA?$AAP?$AAI?$AA3?$AA2?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'h'
	DB	00H, 'A', 00H, 'd', 00H, 'v', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	'3', 00H, '2', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@BIGILECK@?$AAA?$AAd?$AAv?$AAa?$AAp?$AAi?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl@
CONST	SEGMENT
??_C@_1BK@BIGILECK@?$AAA?$AAd?$AAv?$AAa?$AAp?$AAi?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl@ DB 'A'
	DB	00H, 'd', 00H, 'v', 00H, 'a', 00H, 'p', 00H, 'i', 00H, '3', 00H
	DB	'2', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1PO@GPALOAFP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1PO@GPALOAFP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H
	DB	'a', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 'r', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@GMHEAKOM@?$AAr?$AAg?$AAc?$AAl?$AAs?$AAi?$AAd?$AAA?$AAl?$AAl?$AAo?$AAw?$AAe?$AAd?$AA?4@
CONST	SEGMENT
??_C@_1EG@GMHEAKOM@?$AAr?$AAg?$AAc?$AAl?$AAs?$AAi?$AAd?$AAA?$AAl?$AAl?$AAo?$AAw?$AAe?$AAd?$AA?4@ DB 'r'
	DB	00H, 'g', 00H, 'c', 00H, 'l', 00H, 's', 00H, 'i', 00H, 'd', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'd'
	DB	00H, '.', 00H, 'r', 00H, 'g', 00H, 'c', 00H, 'l', 00H, 's', 00H
	DB	'i', 00H, 'd', 00H, 'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'w'
	DB	00H, 'e', 00H, 'd', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@CANBMGJB@?$AAp?$AAS?$AAt?$AAm?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BE@CANBMGJB@?$AAp?$AAS?$AAt?$AAm?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'S', 00H, 't', 00H, 'm', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@JBGPBNEE@?$AAs?$AAp?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BM@JBGPBNEE@?$AAs?$AAp?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 's'
	DB	00H, 'p', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H
	DB	'm', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@EKMOGOFM@?$AAp?$AAc?$AAb?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@EKMOGOFM@?$AAp?$AAc?$AAb?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'c', 00H, 'b', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
CONST	SEGMENT
__GUID_7fd52380_4e07_101b_ae2d_08002b2ec713 DD 07fd52380H
	DW	04e07H
	DW	0101bH
	DB	0aeH
	DB	02dH
	DB	08H
	DB	00H
	DB	02bH
	DB	02eH
	DB	0c7H
	DB	013H
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000109_0000_0000_c000_000000000046 DD 0109H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ??_C@_1CO@HIJGNINB@?$AA?$CI?$AA?$CI?$AA?$CI?$AAH?$AAR?$AAE?$AAS?$AAU?$AAL?$AAT?$AA?$CJ?$AA?$CI?$AAh?$AAr?$AA?$CJ@
CONST	SEGMENT
??_C@_1CO@HIJGNINB@?$AA?$CI?$AA?$CI?$AA?$CI?$AAH?$AAR?$AAE?$AAS?$AAU?$AAL?$AAT?$AA?$CJ?$AA?$CI?$AAh?$AAr?$AA?$CJ@ DB '('
	DB	00H, '(', 00H, '(', 00H, 'H', 00H, 'R', 00H, 'E', 00H, 'S', 00H
	DB	'U', 00H, 'L', 00H, 'T', 00H, ')', 00H, '(', 00H, 'h', 00H, 'r'
	DB	00H, ')', 00H, ')', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FC@BKMPMMIF@?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAN?$AAU?$AAL@
CONST	SEGMENT
??_C@_1FC@BKMPMMIF@?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAN?$AAU?$AAL@ DB 'C'
	DB	00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H, ' ', 00H, 'N', 00H, 'U'
	DB	00H, 'L', 00H, 'L', 00H, ' ', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'm', 00H, 'i', 00H, 'n', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, 'f', 00H, 'r', 00H, 'o', 00H, 'm', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm', 00H, '.'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@DKMFEMPD@?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AAo?$AAf?$AA?5?$AAs?$AAt?$AAr?$AAi?$AAn@
CONST	SEGMENT
??_C@_1GE@DKMFEMPD@?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AAo?$AAf?$AA?5?$AAs?$AAt?$AAr?$AAi?$AAn@ DB 'L'
	DB	00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, ' ', 00H
	DB	'o', 00H, 'f', 00H, ' ', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, ' ', 00H, 'd', 00H, 'a', 00H, 't', 00H
	DB	'a', 00H, ' ', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'i'
	DB	00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'a', 00H, 'n', 00H, ' '
	DB	00H, 'e', 00H, 'x', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'e', 00H, 'd', 00H, '.', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IG@BFBDIBOK@?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAe?$AAd?$AAe?$AAd@
CONST	SEGMENT
??_C@_1IG@BFBDIBOK@?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAe?$AAd?$AAe?$AAd@ DB 'S'
	DB	00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H
	DB	'e', 00H, 'x', 00H, 'c', 00H, 'e', 00H, 'e', 00H, 'd', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H
	DB	'm', 00H, 'a', 00H, 'x', 00H, 'i', 00H, 'm', 00H, 'u', 00H, 'm'
	DB	00H, ' ', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'w', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e'
	DB	00H, ' ', 00H, 's', 00H, 'e', 00H, 'e', 00H, ' ', 00H, '_', 00H
	DB	'A', 00H, 'T', 00H, 'L', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'R'
	DB	00H, 'E', 00H, 'A', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'A', 00H
	DB	'X', 00H, '_', 00H, 'S', 00H, 'I', 00H, 'Z', 00H, 'E', 00H, '.'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@PIJMPOJH@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAs?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AAi?$AAs@
CONST	SEGMENT
??_C@_1DG@PIJMPOJH@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAs?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AAi?$AAs@ DB 'I'
	DB	00H, 'n', 00H, 'p', 00H, 'u', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'i'
	DB	00H, 's', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'r', 00H
	DB	'u', 00H, 'p', 00H, 't', 00H, 'e', 00H, 'd', 00H, '.', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@CGPEODAD@?$AA?$CB?$AA?$CK?$AAt?$AAh?$AAi?$AAs@
CONST	SEGMENT
??_C@_1O@CGPEODAD@?$AA?$CB?$AA?$CK?$AAt?$AAh?$AAi?$AAs@ DB '!', 00H, '*', 00H
	DB	't', 00H, 'h', 00H, 'i', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@KLNFNPEF@?$AAc?$AAb?$AAS?$AAt?$AAr?$AAL?$AAe?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAi?$AAz@
CONST	SEGMENT
??_C@_1DE@KLNFNPEF@?$AAc?$AAb?$AAS?$AAt?$AAr?$AAL?$AAe?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAi?$AAz@ DB 'c'
	DB	00H, 'b', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'L', 00H, 'e', 00H
	DB	'n', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, 's', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'U', 00H
	DB	'L', 00H, 'O', 00H, 'N', 00H, 'G', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@PMLCOGII@?$AAp?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@PMLCOGII@?$AAp?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@ILBPLEEF@?$AAn?$AAN?$AAu?$AAl?$AAl?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BG@ILBPLEEF@?$AAn?$AAN?$AAu?$AAl?$AAl?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'n'
	DB	00H, 'N', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00020400_0000_0000_c000_000000000046 DD 020400H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000000_0000_0000_c000_000000000046 DD 00H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ??_C@_1DM@OIOAIJPB@?$AAC?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr@
CONST	SEGMENT
??_C@_1DM@OIOAIJPB@?$AAC?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr@ DB 'C'
	DB	00H, 'P', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H
	DB	't', 00H, 'y', 00H, 'H', 00H, 'e', 00H, 'l', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't', 00H
	DB	'P', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 't'
	DB	00H, 'y', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@OFBKNGJC@?$AAC?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr@
CONST	SEGMENT
??_C@_1DM@OFBKNGJC@?$AAC?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr@ DB 'C'
	DB	00H, 'P', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H
	DB	't', 00H, 'y', 00H, 'H', 00H, 'e', 00H, 'l', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, ':', 00H, ':', 00H, 'P', 00H, 'u', 00H, 't', 00H
	DB	'P', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 't'
	DB	00H, 'y', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0HD@MGLNKGFD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HD@MGLNKGFD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.28.29333\atlmfc\include\atlcomcli.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@GIHDMMGE@?$AAp?$AAV?$AAa?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BE@GIHDMMGE@?$AAp?$AAV?$AAa?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'V', 00H, 'a', 00H, 'r', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@LOHOFOCD@?$AAp?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt?$AAc?$AAh@
CONST	SEGMENT
??_C@_1BE@LOHOFOCD@?$AAp?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt?$AAc?$AAh@ DB 'p', 00H
	DB	'D', 00H, 'i', 00H, 's', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'c'
	DB	00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'c', 00H, 'l', 00H
	DB	'i', 00H, '.', 00H, 'h', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
CONST	SEGMENT
??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@ DB '_'
	DB	00H, '_', 00H, 'a', 00H, 't', 00H, 'l', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1OC@LDOGAJJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OC@LDOGAJJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'e', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@MNJCDMEH@?$AA?$CB?$AAm?$AA_?$AAb?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd@
CONST	SEGMENT
??_C@_1CA@MNJCDMEH@?$AA?$CB?$AAm?$AA_?$AAb?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd@ DB '!'
	DB	00H, 'm', 00H, '_', 00H, 'b', 00H, 'I', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H, 'e'
	DB	00H, 'd', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1OG@DEDHKNLM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OG@DEDHKNLM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'e', 00H, 'x', 00H, 'c', 00H, 'e', 00H, 'p', 00H
	DB	't', 00H, '.', 00H, 'h', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe@
CONST	SEGMENT
??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe@ DB 'f', 00H, 'a', 00H, 'l', 00H
	DB	's', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5@
CONST	SEGMENT
??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5@ DB 'A'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'h', 00H, 'r', 00H, 'o', 00H
	DB	'w', 00H, ':', 00H, ' ', 00H, 'h', 00H, 'r', 00H, ' ', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'x', 00H, 0aH, 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0HD@ECNMIKGK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HD@ECNMIKGK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.28.29333\atlmfc\include\atlexcept.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OE@DGDFBHKA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@DGDFBHKA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H
	DB	's', 00H, '%', 00H, 'l', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'u', 00H, ' '
	DB	00H, '-', 00H, ' ', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'l', 00H
	DB	's', 00H, ' ', 00H, '-', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?m_nCategory@CTrace@ATL@@1IA
_DATA	SEGMENT
?m_nCategory@CTrace@ATL@@1IA DD 0ffffffffH		; ATL::CTrace::m_nCategory
_DATA	ENDS
;	COMDAT ??_C@_1OE@EFJOHFCD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@EFJOHFCD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '8', 00H, '.', 00H, '2', 00H, '9', 00H, '3', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_13COJANIEC@?$AA0@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0@ DB '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__sehtable$?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z DD 0ffffffe4H
	DD	00H
	DD	0ffffff98H
	DD	00H
	DD	0fffffffeH
	DD	FLAT:$LN20@AtlVerifyS
	DD	FLAT:$LN11@AtlVerifyS
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCOM$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceCOM@ATL@@YAXXZ ; ATL::atlTraceCOM$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceQI$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceQI@ATL@@YAXXZ ; ATL::atlTraceQI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRegistrar$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceRegistrar@ATL@@YAXXZ ; ATL::atlTraceRegistrar$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRefcount$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceRefcount@ATL@@YAXXZ ; ATL::atlTraceRefcount$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceWindowing$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceWindowing@ATL@@YAXXZ ; ATL::atlTraceWindowing$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceControls$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceControls@ATL@@YAXXZ ; ATL::atlTraceControls$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceHosting$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceHosting@ATL@@YAXXZ ; ATL::atlTraceHosting$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBClient$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceDBClient@ATL@@YAXXZ ; ATL::atlTraceDBClient$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBProvider$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceDBProvider@ATL@@YAXXZ ; ATL::atlTraceDBProvider$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSnapin$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceSnapin@ATL@@YAXXZ ; ATL::atlTraceSnapin$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceNotImpl$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceNotImpl@ATL@@YAXXZ ; ATL::atlTraceNotImpl$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceAllocation$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceAllocation@ATL@@YAXXZ ; ATL::atlTraceAllocation$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceTime$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceTime@ATL@@YAXXZ ; ATL::atlTraceTime$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCache$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceCache@ATL@@YAXXZ ; ATL::atlTraceCache$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceStencil$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceStencil@ATL@@YAXXZ ; ATL::atlTraceStencil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceString$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceString@ATL@@YAXXZ ; ATL::atlTraceString$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceMap$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceMap@ATL@@YAXXZ ; ATL::atlTraceMap$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceUtil$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceUtil@ATL@@YAXXZ ; ATL::atlTraceUtil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSecurity$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceSecurity@ATL@@YAXXZ ; ATL::atlTraceSecurity$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSync$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceSync@ATL@@YAXXZ ; ATL::atlTraceSync$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceISAPI$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceISAPI@ATL@@YAXXZ ; ATL::atlTraceISAPI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlComModule$initializer$@ATL@@3P6AXXZA DD FLAT:??__E_AtlComModule@ATL@@YAXXZ ; ATL::_AtlComModule$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlWinModule$initializer$@ATL@@3P6AXXZA DD FLAT:??__E_AtlWinModule@ATL@@YAXXZ ; ATL::_AtlWinModule$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?_Module$initializer$@@3P6AXXZA DD FLAT:??__E_Module@@YAXXZ ; _Module$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??pConnMap$initializer$@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@0P6AXXZA@@3P6AXXZA DD FLAT:??__E?pConnMap@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@0PBU_ATL_CONNMAP_ENTRY@2@B@@YAXXZ ; ??pConnMap$initializer$@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@0P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{180}', COMDAT
  00000	81 6c 24 04 b4
	00 00 00	 sub	 DWORD PTR [esp+4], 180	; 000000b4H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::Release
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{180}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{180}', COMDAT
  00000	81 6c 24 04 b4
	00 00 00	 sub	 DWORD PTR [esp+4], 180	; 000000b4H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::AddRef
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{180}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{168}', COMDAT
  00000	81 6c 24 04 a8
	00 00 00	 sub	 DWORD PTR [esp+4], 168	; 000000a8H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::Release
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{168}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{168}', COMDAT
  00000	81 6c 24 04 a8
	00 00 00	 sub	 DWORD PTR [esp+4], 168	; 000000a8H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::AddRef
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{168}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{160}', COMDAT
  00000	81 6c 24 04 a0
	00 00 00	 sub	 DWORD PTR [esp+4], 160	; 000000a0H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::Release
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{160}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{160}', COMDAT
  00000	81 6c 24 04 a0
	00 00 00	 sub	 DWORD PTR [esp+4], 160	; 000000a0H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::AddRef
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{160}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{160}', COMDAT
  00000	81 6c 24 04 a0
	00 00 00	 sub	 DWORD PTR [esp+4], 160	; 000000a0H
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WKA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{160}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{156}', COMDAT
  00000	81 6c 24 04 9c
	00 00 00	 sub	 DWORD PTR [esp+4], 156	; 0000009cH
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::Release
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{156}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{156}', COMDAT
  00000	81 6c 24 04 9c
	00 00 00	 sub	 DWORD PTR [esp+4], 156	; 0000009cH
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::AddRef
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{156}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{156}', COMDAT
  00000	81 6c 24 04 9c
	00 00 00	 sub	 DWORD PTR [esp+4], 156	; 0000009cH
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{156}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{152}', COMDAT
  00000	81 6c 24 04 98
	00 00 00	 sub	 DWORD PTR [esp+4], 152	; 00000098H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::Release
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{152}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{152}', COMDAT
  00000	81 6c 24 04 98
	00 00 00	 sub	 DWORD PTR [esp+4], 152	; 00000098H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::AddRef
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{152}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJI@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJI@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{152}', COMDAT
  00000	81 6c 24 04 98
	00 00 00	 sub	 DWORD PTR [esp+4], 152	; 00000098H
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJI@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{152}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{148}', COMDAT
  00000	81 6c 24 04 94
	00 00 00	 sub	 DWORD PTR [esp+4], 148	; 00000094H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::Release
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{148}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{148}', COMDAT
  00000	81 6c 24 04 94
	00 00 00	 sub	 DWORD PTR [esp+4], 148	; 00000094H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::AddRef
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{148}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJE@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{148}', COMDAT
  00000	81 6c 24 04 94
	00 00 00	 sub	 DWORD PTR [esp+4], 148	; 00000094H
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJE@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{148}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{144}', COMDAT
  00000	81 6c 24 04 90
	00 00 00	 sub	 DWORD PTR [esp+4], 144	; 00000090H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::Release
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{144}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{144}', COMDAT
  00000	81 6c 24 04 90
	00 00 00	 sub	 DWORD PTR [esp+4], 144	; 00000090H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::AddRef
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{144}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{144}', COMDAT
  00000	81 6c 24 04 90
	00 00 00	 sub	 DWORD PTR [esp+4], 144	; 00000090H
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WJA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{144}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{140}', COMDAT
  00000	81 6c 24 04 8c
	00 00 00	 sub	 DWORD PTR [esp+4], 140	; 0000008cH
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::Release
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{140}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{140}', COMDAT
  00000	81 6c 24 04 8c
	00 00 00	 sub	 DWORD PTR [esp+4], 140	; 0000008cH
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::AddRef
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{140}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{140}', COMDAT
  00000	81 6c 24 04 8c
	00 00 00	 sub	 DWORD PTR [esp+4], 140	; 0000008cH
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{140}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{136}', COMDAT
  00000	81 6c 24 04 88
	00 00 00	 sub	 DWORD PTR [esp+4], 136	; 00000088H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::Release
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{136}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{136}', COMDAT
  00000	81 6c 24 04 88
	00 00 00	 sub	 DWORD PTR [esp+4], 136	; 00000088H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::AddRef
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{136}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WII@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WII@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{136}', COMDAT
  00000	81 6c 24 04 88
	00 00 00	 sub	 DWORD PTR [esp+4], 136	; 00000088H
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WII@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{136}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{132}', COMDAT
  00000	81 6c 24 04 84
	00 00 00	 sub	 DWORD PTR [esp+4], 132	; 00000084H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::Release
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{132}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{132}', COMDAT
  00000	81 6c 24 04 84
	00 00 00	 sub	 DWORD PTR [esp+4], 132	; 00000084H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::AddRef
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{132}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIE@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{132}', COMDAT
  00000	81 6c 24 04 84
	00 00 00	 sub	 DWORD PTR [esp+4], 132	; 00000084H
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIE@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{132}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{128}', COMDAT
  00000	81 6c 24 04 80
	00 00 00	 sub	 DWORD PTR [esp+4], 128	; 00000080H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::Release
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{128}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{128}', COMDAT
  00000	81 6c 24 04 80
	00 00 00	 sub	 DWORD PTR [esp+4], 128	; 00000080H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::AddRef
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{128}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{128}', COMDAT
  00000	81 6c 24 04 80
	00 00 00	 sub	 DWORD PTR [esp+4], 128	; 00000080H
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WIA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{128}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{124}', COMDAT
  00000	83 6c 24 04 7c	 sub	 DWORD PTR [esp+4], 124	; 0000007cH
  00005	e9 00 00 00 00	 jmp	 ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::Release
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{124}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{124}', COMDAT
  00000	83 6c 24 04 7c	 sub	 DWORD PTR [esp+4], 124	; 0000007cH
  00005	e9 00 00 00 00	 jmp	 ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::AddRef
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{124}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{124}', COMDAT
  00000	83 6c 24 04 7c	 sub	 DWORD PTR [esp+4], 124	; 0000007cH
  00005	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{124}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{120}', COMDAT
  00000	83 6c 24 04 78	 sub	 DWORD PTR [esp+4], 120	; 00000078H
  00005	e9 00 00 00 00	 jmp	 ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::Release
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{120}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{120}', COMDAT
  00000	83 6c 24 04 78	 sub	 DWORD PTR [esp+4], 120	; 00000078H
  00005	e9 00 00 00 00	 jmp	 ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::AddRef
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{120}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHI@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHI@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{120}', COMDAT
  00000	83 6c 24 04 78	 sub	 DWORD PTR [esp+4], 120	; 00000078H
  00005	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHI@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{120}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{116}', COMDAT
  00000	83 6c 24 04 74	 sub	 DWORD PTR [esp+4], 116	; 00000074H
  00005	e9 00 00 00 00	 jmp	 ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::Release
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{116}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{116}', COMDAT
  00000	83 6c 24 04 74	 sub	 DWORD PTR [esp+4], 116	; 00000074H
  00005	e9 00 00 00 00	 jmp	 ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::AddRef
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{116}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHE@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{116}', COMDAT
  00000	83 6c 24 04 74	 sub	 DWORD PTR [esp+4], 116	; 00000074H
  00005	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHE@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{116}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{112}', COMDAT
  00000	83 6c 24 04 70	 sub	 DWORD PTR [esp+4], 112	; 00000070H
  00005	e9 00 00 00 00	 jmp	 ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::Release
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::Release`adjustor{112}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{112}', COMDAT
  00000	83 6c 24 04 70	 sub	 DWORD PTR [esp+4], 112	; 00000070H
  00005	e9 00 00 00 00	 jmp	 ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComContainedObject<COPOSGestureControl>::AddRef
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::AddRef`adjustor{112}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{112}', COMDAT
  00000	83 6c 24 04 70	 sub	 DWORD PTR [esp+4], 112	; 00000070H
  00005	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WHA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::QueryInterface`adjustor{112}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ??_E?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WEM@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WEM@AEPAXI@Z PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::`vector deleting destructor', COMDAT
  00000	83 e9 4c	 sub	 ecx, 76			; 0000004cH
  00003	e9 00 00 00 00	 jmp	 ??_E?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z
??_E?$CComContainedObject@VCOPOSGestureControl@@@ATL@@WEM@AEPAXI@Z ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ??_E?$CComContainedObject@VCOPOSGestureControl@@@ATL@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$CComContainedObject@VCOPOSGestureControl@@@ATL@@W3AEPAXI@Z PROC ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z
??_E?$CComContainedObject@VCOPOSGestureControl@@@ATL@@W3AEPAXI@Z ENDP ; [thunk]:ATL::CComContainedObject<COPOSGestureControl>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ
_TEXT	SEGMENT
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{180}', COMDAT
  00000	81 6c 24 04 b4
	00 00 00	 sub	 DWORD PTR [esp+4], 180	; 000000b4H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::Release
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{180}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{180}', COMDAT
  00000	81 6c 24 04 b4
	00 00 00	 sub	 DWORD PTR [esp+4], 180	; 000000b4H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::AddRef
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WLE@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{180}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ
_TEXT	SEGMENT
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{168}', COMDAT
  00000	81 6c 24 04 a8
	00 00 00	 sub	 DWORD PTR [esp+4], 168	; 000000a8H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::Release
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{168}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{168}', COMDAT
  00000	81 6c 24 04 a8
	00 00 00	 sub	 DWORD PTR [esp+4], 168	; 000000a8H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::AddRef
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WKI@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{168}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ
_TEXT	SEGMENT
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{160}', COMDAT
  00000	81 6c 24 04 a0
	00 00 00	 sub	 DWORD PTR [esp+4], 160	; 000000a0H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::Release
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{160}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{160}', COMDAT
  00000	81 6c 24 04 a0
	00 00 00	 sub	 DWORD PTR [esp+4], 160	; 000000a0H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::AddRef
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WKA@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{160}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WKA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WKA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{160}', COMDAT
  00000	81 6c 24 04 a0
	00 00 00	 sub	 DWORD PTR [esp+4], 160	; 000000a0H
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WKA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{160}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ
_TEXT	SEGMENT
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{156}', COMDAT
  00000	81 6c 24 04 9c
	00 00 00	 sub	 DWORD PTR [esp+4], 156	; 0000009cH
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::Release
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{156}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{156}', COMDAT
  00000	81 6c 24 04 9c
	00 00 00	 sub	 DWORD PTR [esp+4], 156	; 0000009cH
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::AddRef
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJM@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{156}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{156}', COMDAT
  00000	81 6c 24 04 9c
	00 00 00	 sub	 DWORD PTR [esp+4], 156	; 0000009cH
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{156}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ
_TEXT	SEGMENT
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{152}', COMDAT
  00000	81 6c 24 04 98
	00 00 00	 sub	 DWORD PTR [esp+4], 152	; 00000098H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::Release
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{152}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{152}', COMDAT
  00000	81 6c 24 04 98
	00 00 00	 sub	 DWORD PTR [esp+4], 152	; 00000098H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::AddRef
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJI@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{152}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJI@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJI@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{152}', COMDAT
  00000	81 6c 24 04 98
	00 00 00	 sub	 DWORD PTR [esp+4], 152	; 00000098H
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJI@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{152}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ
_TEXT	SEGMENT
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{148}', COMDAT
  00000	81 6c 24 04 94
	00 00 00	 sub	 DWORD PTR [esp+4], 148	; 00000094H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::Release
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{148}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{148}', COMDAT
  00000	81 6c 24 04 94
	00 00 00	 sub	 DWORD PTR [esp+4], 148	; 00000094H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::AddRef
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJE@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{148}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJE@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{148}', COMDAT
  00000	81 6c 24 04 94
	00 00 00	 sub	 DWORD PTR [esp+4], 148	; 00000094H
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJE@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{148}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ
_TEXT	SEGMENT
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{144}', COMDAT
  00000	81 6c 24 04 90
	00 00 00	 sub	 DWORD PTR [esp+4], 144	; 00000090H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::Release
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{144}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{144}', COMDAT
  00000	81 6c 24 04 90
	00 00 00	 sub	 DWORD PTR [esp+4], 144	; 00000090H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::AddRef
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WJA@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{144}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{144}', COMDAT
  00000	81 6c 24 04 90
	00 00 00	 sub	 DWORD PTR [esp+4], 144	; 00000090H
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WJA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{144}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ
_TEXT	SEGMENT
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{140}', COMDAT
  00000	81 6c 24 04 8c
	00 00 00	 sub	 DWORD PTR [esp+4], 140	; 0000008cH
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::Release
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{140}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{140}', COMDAT
  00000	81 6c 24 04 8c
	00 00 00	 sub	 DWORD PTR [esp+4], 140	; 0000008cH
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::AddRef
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WIM@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{140}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WIM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WIM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{140}', COMDAT
  00000	81 6c 24 04 8c
	00 00 00	 sub	 DWORD PTR [esp+4], 140	; 0000008cH
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WIM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{140}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ
_TEXT	SEGMENT
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{136}', COMDAT
  00000	81 6c 24 04 88
	00 00 00	 sub	 DWORD PTR [esp+4], 136	; 00000088H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::Release
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{136}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{136}', COMDAT
  00000	81 6c 24 04 88
	00 00 00	 sub	 DWORD PTR [esp+4], 136	; 00000088H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::AddRef
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WII@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{136}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WII@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WII@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{136}', COMDAT
  00000	81 6c 24 04 88
	00 00 00	 sub	 DWORD PTR [esp+4], 136	; 00000088H
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WII@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{136}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ
_TEXT	SEGMENT
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{132}', COMDAT
  00000	81 6c 24 04 84
	00 00 00	 sub	 DWORD PTR [esp+4], 132	; 00000084H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::Release
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{132}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{132}', COMDAT
  00000	81 6c 24 04 84
	00 00 00	 sub	 DWORD PTR [esp+4], 132	; 00000084H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::AddRef
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WIE@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{132}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WIE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WIE@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{132}', COMDAT
  00000	81 6c 24 04 84
	00 00 00	 sub	 DWORD PTR [esp+4], 132	; 00000084H
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WIE@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{132}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ
_TEXT	SEGMENT
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{128}', COMDAT
  00000	81 6c 24 04 80
	00 00 00	 sub	 DWORD PTR [esp+4], 128	; 00000080H
  00008	e9 00 00 00 00	 jmp	 ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::Release
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{128}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{128}', COMDAT
  00000	81 6c 24 04 80
	00 00 00	 sub	 DWORD PTR [esp+4], 128	; 00000080H
  00008	e9 00 00 00 00	 jmp	 ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::AddRef
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WIA@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{128}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WIA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WIA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{128}', COMDAT
  00000	81 6c 24 04 80
	00 00 00	 sub	 DWORD PTR [esp+4], 128	; 00000080H
  00008	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WIA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{128}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ
_TEXT	SEGMENT
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{124}', COMDAT
  00000	83 6c 24 04 7c	 sub	 DWORD PTR [esp+4], 124	; 0000007cH
  00005	e9 00 00 00 00	 jmp	 ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::Release
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{124}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{124}', COMDAT
  00000	83 6c 24 04 7c	 sub	 DWORD PTR [esp+4], 124	; 0000007cH
  00005	e9 00 00 00 00	 jmp	 ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::AddRef
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHM@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{124}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{124}', COMDAT
  00000	83 6c 24 04 7c	 sub	 DWORD PTR [esp+4], 124	; 0000007cH
  00005	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{124}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ
_TEXT	SEGMENT
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{120}', COMDAT
  00000	83 6c 24 04 78	 sub	 DWORD PTR [esp+4], 120	; 00000078H
  00005	e9 00 00 00 00	 jmp	 ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::Release
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{120}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{120}', COMDAT
  00000	83 6c 24 04 78	 sub	 DWORD PTR [esp+4], 120	; 00000078H
  00005	e9 00 00 00 00	 jmp	 ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::AddRef
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHI@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{120}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHI@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHI@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{120}', COMDAT
  00000	83 6c 24 04 78	 sub	 DWORD PTR [esp+4], 120	; 00000078H
  00005	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHI@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{120}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ
_TEXT	SEGMENT
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{116}', COMDAT
  00000	83 6c 24 04 74	 sub	 DWORD PTR [esp+4], 116	; 00000074H
  00005	e9 00 00 00 00	 jmp	 ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::Release
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{116}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{116}', COMDAT
  00000	83 6c 24 04 74	 sub	 DWORD PTR [esp+4], 116	; 00000074H
  00005	e9 00 00 00 00	 jmp	 ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::AddRef
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHE@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{116}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHE@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{116}', COMDAT
  00000	83 6c 24 04 74	 sub	 DWORD PTR [esp+4], 116	; 00000074H
  00005	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHE@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{116}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ
_TEXT	SEGMENT
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{112}', COMDAT
  00000	83 6c 24 04 70	 sub	 DWORD PTR [esp+4], 112	; 00000070H
  00005	e9 00 00 00 00	 jmp	 ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::Release
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::Release`adjustor{112}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{112}', COMDAT
  00000	83 6c 24 04 70	 sub	 DWORD PTR [esp+4], 112	; 00000070H
  00005	e9 00 00 00 00	 jmp	 ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ; ATL::CComObject<COPOSGestureControl>::AddRef
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@WHA@AGKXZ ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::AddRef`adjustor{112}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{112}', COMDAT
  00000	83 6c 24 04 70	 sub	 DWORD PTR [esp+4], 112	; 00000070H
  00005	e9 00 00 00 00	 jmp	 ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<COPOSGestureControl>::QueryInterface
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@WHA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::QueryInterface`adjustor{112}'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ??_E?$CComObject@VCOPOSGestureControl@@@ATL@@WEM@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CComObject@VCOPOSGestureControl@@@ATL@@WEM@AEPAXI@Z PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::`vector deleting destructor', COMDAT
  00000	83 e9 4c	 sub	 ecx, 76			; 0000004cH
  00003	e9 00 00 00 00	 jmp	 ??_E?$CComObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z
??_E?$CComObject@VCOPOSGestureControl@@@ATL@@WEM@AEPAXI@Z ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ??_E?$CComObject@VCOPOSGestureControl@@@ATL@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$CComObject@VCOPOSGestureControl@@@ATL@@W3AEPAXI@Z PROC ; [thunk]:ATL::CComObject<COPOSGestureControl>::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$CComObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z
??_E?$CComObject@VCOPOSGestureControl@@@ATL@@W3AEPAXI@Z ENDP ; [thunk]:ATL::CComObject<COPOSGestureControl>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?destroy@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAXPAPAUIConnectionPoint@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?destroy@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAXPAPAUIConnectionPoint@@@Z PROC ; ATL::_CopyInterface<IConnectionPoint>::destroy, COMDAT

; 5457 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 5458 : 		if (*p)

  00004	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00007	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000a	74 1b		 je	 SHORT $LN1@destroy

; 5459 : 		{
; 5460 : 			(*p)->Release();

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0000f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00011	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 12		 mov	 edx, DWORD PTR [edx]
  00018	8b f4		 mov	 esi, esp
  0001a	51		 push	 ecx
  0001b	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001e	ff d0		 call	 eax
  00020	3b f4		 cmp	 esi, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@destroy:

; 5461 : 		}
; 5462 : 	}

  00027	5e		 pop	 esi
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
?destroy@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAXPAPAUIConnectionPoint@@@Z ENDP ; ATL::_CopyInterface<IConnectionPoint>::destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?init@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAXPAPAUIConnectionPoint@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?init@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAXPAPAUIConnectionPoint@@@Z PROC ; ATL::_CopyInterface<IConnectionPoint>::init, COMDAT

; 5455 : 	static void init(T** ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?init@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAXPAPAUIConnectionPoint@@@Z ENDP ; ATL::_CopyInterface<IConnectionPoint>::init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?copy@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAJPAPAUIConnectionPoint@@PBQAU3@@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
___atl_condVal$1 = -4					; size = 4
_p1$ = 8						; size = 4
_p2$ = 12						; size = 4
?copy@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAJPAPAUIConnectionPoint@@PBQAU3@@Z PROC ; ATL::_CopyInterface<IConnectionPoint>::copy, COMDAT

; 5448 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@copy:

; 5449 : 		ATLENSURE(p1 != NULL && p2 != NULL);

  00015	83 7d 08 00	 cmp	 DWORD PTR _p1$[ebp], 0
  00019	74 0f		 je	 SHORT $LN11@copy
  0001b	83 7d 0c 00	 cmp	 DWORD PTR _p2$[ebp], 0
  0001f	74 09		 je	 SHORT $LN11@copy
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN12@copy
$LN11@copy:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN12@copy:
  00031	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]
  00034	89 45 fc	 mov	 DWORD PTR ___atl_condVal$1[ebp], eax
$LN7@copy:
  00037	83 7d fc 00	 cmp	 DWORD PTR ___atl_condVal$1[ebp], 0
  0003b	75 26		 jne	 SHORT $LN5@copy
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00047	6a 00		 push	 0
  00049	68 49 15 00 00	 push	 5449			; 00001549H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00053	6a 02		 push	 2
  00055	e8 00 00 00 00	 call	 __CrtDbgReportW
  0005a	83 c4 18	 add	 esp, 24			; 00000018H
  0005d	83 f8 01	 cmp	 eax, 1
  00060	75 01		 jne	 SHORT $LN5@copy
  00062	cc		 int	 3
$LN5@copy:
  00063	33 d2		 xor	 edx, edx
  00065	75 d0		 jne	 SHORT $LN7@copy
  00067	83 7d fc 00	 cmp	 DWORD PTR ___atl_condVal$1[ebp], 0
  0006b	75 0a		 jne	 SHORT $LN2@copy
  0006d	68 05 40 00 80	 push	 -2147467259		; 80004005H
  00072	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@copy:
  00077	33 c0		 xor	 eax, eax
  00079	75 9a		 jne	 SHORT $LN4@copy

; 5450 : 		*p1 = *p2;

  0007b	8b 4d 08	 mov	 ecx, DWORD PTR _p1$[ebp]
  0007e	8b 55 0c	 mov	 edx, DWORD PTR _p2$[ebp]
  00081	8b 02		 mov	 eax, DWORD PTR [edx]
  00083	89 01		 mov	 DWORD PTR [ecx], eax

; 5451 : 		if (*p1)

  00085	8b 4d 08	 mov	 ecx, DWORD PTR _p1$[ebp]
  00088	83 39 00	 cmp	 DWORD PTR [ecx], 0
  0008b	74 1b		 je	 SHORT $LN9@copy

; 5452 : 			(*p1)->AddRef();

  0008d	8b 55 08	 mov	 edx, DWORD PTR _p1$[ebp]
  00090	8b 02		 mov	 eax, DWORD PTR [edx]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _p1$[ebp]
  00095	8b 11		 mov	 edx, DWORD PTR [ecx]
  00097	8b 00		 mov	 eax, DWORD PTR [eax]
  00099	8b f4		 mov	 esi, esp
  0009b	52		 push	 edx
  0009c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0009f	ff d1		 call	 ecx
  000a1	3b f4		 cmp	 esi, esp
  000a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN9@copy:

; 5453 : 		return S_OK;

  000a8	33 c0		 xor	 eax, eax
$LN10@copy:

; 5454 : 	}

  000aa	5e		 pop	 esi
  000ab	83 c4 08	 add	 esp, 8
  000ae	3b ec		 cmp	 ebp, esp
  000b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c3		 ret	 0
?copy@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAJPAPAUIConnectionPoint@@PBQAU3@@Z ENDP ; ATL::_CopyInterface<IConnectionPoint>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAE@XZ ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::~CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 1c		 push	 28			; 0000001cH
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_G?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z
_TEXT	SEGMENT
tv166 = -24						; size = 4
tv85 = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_p$ = -8						; size = 4
_hRes$ = -4						; size = 4
_pp$ = 8						; size = 4
?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CreateInstance, COMDAT

; 2963 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2964 : 	ATLASSERT(pp != NULL);

  0001e	83 7d 08 00	 cmp	 DWORD PTR _pp$[ebp], 0
  00022	75 26		 jne	 SHORT $LN8@CreateInst
  00024	68 00 00 00 00	 push	 OFFSET $SG198495
  00029	68 00 00 00 00	 push	 OFFSET $SG198496
  0002e	6a 00		 push	 0
  00030	68 94 0b 00 00	 push	 2964			; 00000b94H
  00035	68 00 00 00 00	 push	 OFFSET $SG198497
  0003a	6a 02		 push	 2
  0003c	e8 00 00 00 00	 call	 __CrtDbgReportW
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN8@CreateInst
  00049	cc		 int	 3
$LN8@CreateInst:

; 2965 : 	if (pp == NULL)

  0004a	83 7d 08 00	 cmp	 DWORD PTR _pp$[ebp], 0
  0004e	75 0a		 jne	 SHORT $LN2@CreateInst

; 2966 : 		return E_POINTER;

  00050	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00055	e9 f6 00 00 00	 jmp	 $LN1@CreateInst
$LN2@CreateInst:

; 2967 : 	*pp = NULL;

  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _pp$[ebp]
  0005d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 2968 : 
; 2969 : 	HRESULT hRes = E_OUTOFMEMORY;

  00063	c7 45 fc 0e 00
	07 80		 mov	 DWORD PTR _hRes$[ebp], -2147024882 ; 8007000eH

; 2970 : 	CComObject<Base>* p = NULL;

  0006a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], 0

; 2971 : 	ATLTRY(p = _ATL_NEW CComObject<Base>())

  00071	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00076	6a 1c		 push	 28			; 0000001cH
  00078	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  0007d	83 c4 08	 add	 esp, 8
  00080	89 45 f4	 mov	 DWORD PTR $T2[ebp], eax
  00083	83 7d f4 00	 cmp	 DWORD PTR $T2[ebp], 0
  00087	74 0f		 je	 SHORT $LN9@CreateInst
  00089	6a 00		 push	 0
  0008b	8b 4d f4	 mov	 ecx, DWORD PTR $T2[ebp]
  0008e	e8 00 00 00 00	 call	 ??0?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >
  00093	89 45 ec	 mov	 DWORD PTR tv85[ebp], eax
  00096	eb 07		 jmp	 SHORT $LN10@CreateInst
$LN9@CreateInst:
  00098	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@CreateInst:
  0009f	8b 55 ec	 mov	 edx, DWORD PTR tv85[ebp]
  000a2	89 55 f8	 mov	 DWORD PTR _p$[ebp], edx

; 2972 : 	if (p != NULL)

  000a5	83 7d f8 00	 cmp	 DWORD PTR _p$[ebp], 0
  000a9	0f 84 96 00 00
	00		 je	 $LN3@CreateInst

; 2973 : 	{
; 2974 : 		p->SetVoid(NULL);

  000af	6a 00		 push	 0
  000b1	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000b4	83 c1 18	 add	 ecx, 24			; 00000018H
  000b7	e8 00 00 00 00	 call	 ?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z ; ATL::CComObjectRootBase::SetVoid

; 2975 : 		p->InternalFinalConstructAddRef();

  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000bf	83 c1 18	 add	 ecx, 24			; 00000018H
  000c2	e8 00 00 00 00	 call	 ?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructAddRef

; 2976 : 		hRes = p->_AtlInitialConstruct();

  000c7	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000ca	83 c1 18	 add	 ecx, 24			; 00000018H
  000cd	e8 00 00 00 00	 call	 ?_AtlInitialConstruct@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEJXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::_AtlInitialConstruct
  000d2	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax

; 2977 : 		if (SUCCEEDED(hRes))

  000d5	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  000d9	7c 0e		 jl	 SHORT $LN4@CreateInst

; 2978 : 			hRes = p->FinalConstruct();

  000db	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000de	83 c1 18	 add	 ecx, 24			; 00000018H
  000e1	e8 00 00 00 00	 call	 ?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::FinalConstruct
  000e6	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN4@CreateInst:

; 2979 : 		if (SUCCEEDED(hRes))

  000e9	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  000ed	7c 0e		 jl	 SHORT $LN5@CreateInst

; 2980 : 			hRes = p->_AtlFinalConstruct();

  000ef	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000f2	83 c1 18	 add	 ecx, 24			; 00000018H
  000f5	e8 00 00 00 00	 call	 ?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::_AtlFinalConstruct
  000fa	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN5@CreateInst:

; 2981 : 		p->InternalFinalConstructRelease();

  000fd	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  00100	83 c1 18	 add	 ecx, 24			; 00000018H
  00103	e8 00 00 00 00	 call	 ?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructRelease

; 2982 : 		if (hRes != S_OK)

  00108	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  0010c	74 37		 je	 SHORT $LN3@CreateInst

; 2983 : 		{
; 2984 : 			delete p;

  0010e	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  00111	89 45 f0	 mov	 DWORD PTR $T1[ebp], eax
  00114	83 7d f0 00	 cmp	 DWORD PTR $T1[ebp], 0
  00118	74 1d		 je	 SHORT $LN11@CreateInst
  0011a	8b f4		 mov	 esi, esp
  0011c	6a 01		 push	 1
  0011e	8b 4d f0	 mov	 ecx, DWORD PTR $T1[ebp]
  00121	8b 11		 mov	 edx, DWORD PTR [ecx]
  00123	8b 4d f0	 mov	 ecx, DWORD PTR $T1[ebp]
  00126	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00129	ff d0		 call	 eax
  0012b	3b f4		 cmp	 esi, esp
  0012d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00132	89 45 e8	 mov	 DWORD PTR tv166[ebp], eax
  00135	eb 07		 jmp	 SHORT $LN12@CreateInst
$LN11@CreateInst:
  00137	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN12@CreateInst:

; 2985 : 			p = NULL;

  0013e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], 0
$LN3@CreateInst:

; 2986 : 		}
; 2987 : 	}
; 2988 : 	*pp = p;

  00145	8b 4d 08	 mov	 ecx, DWORD PTR _pp$[ebp]
  00148	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  0014b	89 11		 mov	 DWORD PTR [ecx], edx

; 2989 : 	return hRes;

  0014d	8b 45 fc	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@CreateInst:

; 2990 : }

  00150	5e		 pop	 esi
  00151	83 c4 18	 add	 esp, 24			; 00000018H
  00154	3b ec		 cmp	 ebp, esp
  00156	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015b	8b e5		 mov	 esp, ebp
  0015d	5d		 pop	 ebp
  0015e	c2 04 00	 ret	 4
?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CreateInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::QueryInterface, COMDAT

; 2947 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2948 : 		return this->_InternalQueryInterface(iid, ppvObject);

  00003	8b 45 10	 mov	 eax, DWORD PTR _ppvObject$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _iid$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_InternalQueryInterface

; 2949 : 	}

  00013	3b ec		 cmp	 ebp, esp
  00015	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001a	5d		 pop	 ebp
  0001b	c2 0c 00	 ret	 12			; 0000000cH
?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
tv84 = -24						; size = 4
$T1 = -20						; size = 4
_lock$2 = -9						; size = 1
_l$ = -4						; size = 4
_this$ = 8						; size = 4
?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::Release, COMDAT

; 2933 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2934 : 		ULONG l = this->InternalRelease();

  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 18	 add	 ecx, 24			; 00000018H
  00024	e8 00 00 00 00	 call	 ?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease
  00029	89 45 fc	 mov	 DWORD PTR _l$[ebp], eax

; 2935 : 		if (l == 0)

  0002c	83 7d fc 00	 cmp	 DWORD PTR _l$[ebp], 0
  00030	75 40		 jne	 SHORT $LN2@Release

; 2936 : 		{
; 2937 : 			// Lock the module to avoid DLL unload when destruction of member variables take a long time
; 2938 : 			ModuleLockHelper lock;

  00032	8d 4d f7	 lea	 ecx, DWORD PTR _lock$2[ebp]
  00035	e8 00 00 00 00	 call	 ??0ModuleLockHelper@ATL@@QAE@XZ ; ATL::ModuleLockHelper::ModuleLockHelper

; 2939 : 			delete this;

  0003a	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  00040	83 7d ec 00	 cmp	 DWORD PTR $T1[ebp], 0
  00044	74 1d		 je	 SHORT $LN4@Release
  00046	8b f4		 mov	 esi, esp
  00048	6a 01		 push	 1
  0004a	8b 4d ec	 mov	 ecx, DWORD PTR $T1[ebp]
  0004d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004f	8b 4d ec	 mov	 ecx, DWORD PTR $T1[ebp]
  00052	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00055	ff d0		 call	 eax
  00057	3b f4		 cmp	 esi, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	89 45 e8	 mov	 DWORD PTR tv84[ebp], eax
  00061	eb 07		 jmp	 SHORT $LN5@Release
$LN4@Release:
  00063	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN5@Release:

; 2940 : 		}

  0006a	8d 4d f7	 lea	 ecx, DWORD PTR _lock$2[ebp]
  0006d	e8 00 00 00 00	 call	 ??1ModuleLockHelper@ATL@@QAE@XZ ; ATL::ModuleLockHelper::~ModuleLockHelper
$LN2@Release:

; 2941 : 		return l;

  00072	8b 45 fc	 mov	 eax, DWORD PTR _l$[ebp]

; 2942 : 	}

  00075	52		 push	 edx
  00076	8b cd		 mov	 ecx, ebp
  00078	50		 push	 eax
  00079	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@Release
  0007f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00084	58		 pop	 eax
  00085	5a		 pop	 edx
  00086	5e		 pop	 esi
  00087	83 c4 18	 add	 esp, 24			; 00000018H
  0008a	3b ec		 cmp	 ebp, esp
  0008c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c2 04 00	 ret	 4
  00097	90		 npad	 1
$LN8@Release:
  00098	01 00 00 00	 DD	 1
  0009c	00 00 00 00	 DD	 $LN7@Release
$LN7@Release:
  000a0	f7 ff ff ff	 DD	 -9			; fffffff7H
  000a4	01 00 00 00	 DD	 1
  000a8	00 00 00 00	 DD	 $LN6@Release
$LN6@Release:
  000ac	6c		 DB	 108			; 0000006cH
  000ad	6f		 DB	 111			; 0000006fH
  000ae	63		 DB	 99			; 00000063H
  000af	6b		 DB	 107			; 0000006bH
  000b0	00		 DB	 0
?Release@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?AddRef@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::AddRef, COMDAT

; 2929 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2930 : 		return this->InternalAddRef();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00006	83 c1 18	 add	 ecx, 24			; 00000018H
  00009	e8 00 00 00 00	 call	 ?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef

; 2931 : 	}

  0000e	3b ec		 cmp	 ebp, esp
  00010	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?AddRef@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAE@XZ PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::~CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >, COMDAT
; _this$ = ecx

; 2918 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@

; 2919 : 		this->m_dwRef = -(LONG_MAX/2);

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	c7 41 18 01 00
	00 c0		 mov	 DWORD PTR [ecx+24], -1073741823 ; c0000001H

; 2920 : 		this->FinalRelease();

  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	83 c1 18	 add	 ecx, 24			; 00000018H
  00028	e8 00 00 00 00	 call	 ?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::FinalRelease

; 2921 : #if defined(_ATL_DEBUG_INTERFACES) && !defined(_ATL_STATIC_LIB_IMPL)
; 2922 : 		_AtlDebugInterfacesModule.DeleteNonAddRefThunk(_GetRawUnknown());
; 2923 : #endif
; 2924 : 		_pAtlModule->Unlock();

  0002d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  00033	8b 02		 mov	 eax, DWORD PTR [edx]
  00035	8b f4		 mov	 esi, esp
  00037	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  0003d	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00040	ff d2		 call	 edx
  00042	3b f4		 cmp	 esi, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2925 : 	}

  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ??1?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@UAE@XZ
  00051	5e		 pop	 esi
  00052	83 c4 04	 add	 esp, 4
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
??1?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAE@XZ ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::~CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??0?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >, COMDAT
; _this$ = ecx

; 2911 : 	CComObject(_In_opt_ void* = NULL)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2912 : 	{

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ??0?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@

; 2913 : 		_pAtlModule->Lock();

  00020	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	8b f4		 mov	 esi, esp
  0002a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  00030	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00033	ff d0		 call	 eax
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2914 : 	}

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5e		 pop	 esi
  00040	83 c4 04	 add	 esp, 4
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
??0?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@UAE@XZ PROC ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::~CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 18	 add	 ecx, 24			; 00000018H
  00014	e8 00 00 00 00	 call	 ??1?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::~CComObjectRootEx<ATL::CComSingleThreadModel>
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??1?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAE@XZ ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::~CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
??1?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@UAE@XZ ENDP ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::~CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ PROC ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QAE@XZ ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 18	 add	 ecx, 24			; 00000018H
  0001c	e8 00 00 00 00	 call	 ??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??0?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ ENDP ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT
?_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ PROC ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_GetEntries, COMDAT

; 5671 : 	BEGIN_COM_MAP(_CComEnum)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 5672 : 		COM_INTERFACE_ENTRY_IID(*piid, _CComEnumBase)
; 5673 : 	END_COM_MAP()

  00003	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00008	c1 e0 00	 shl	 eax, 0
  0000b	05 00 00 00 00	 add	 eax, OFFSET ?_entries@?1??_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B ; `ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_GetEntries'::`2'::_entries
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ENDP ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_GetEntries
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iid$ = 8						; size = 4
_ppvObject$ = 12					; size = 4
?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z PROC ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_InternalQueryInterface, COMDAT
; _this$ = ecx

; 5671 : 	BEGIN_COM_MAP(_CComEnum)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _ppvObject$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _iid$[ebp]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ?_GetEntries@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_GetEntries
  0001b	50		 push	 eax
  0001c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001f	52		 push	 edx
  00020	e8 00 00 00 00	 call	 ?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z ; ATL::CComObjectRootBase::InternalQueryInterface
  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 08 00	 ret	 8
?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z ENDP ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_InternalQueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Init@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QAEJPAUtagCONNECTDATA@@0PAUIUnknown@@W4CComEnumFlags@2@@Z
_TEXT	SEGMENT
tv140 = -28						; size = 4
$T1 = -24						; size = 4
$T2 = -20						; size = 4
_p$3 = -16						; size = 4
_hr$4 = -12						; size = 4
_i$5 = -8						; size = 4
_this$ = -4						; size = 4
_begin$ = 8						; size = 4
_end$ = 12						; size = 4
_pUnk$ = 16						; size = 4
_flags$ = 20						; size = 4
?Init@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QAEJPAUtagCONNECTDATA@@0PAUIUnknown@@W4CComEnumFlags@2@@Z PROC ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Init, COMDAT
; _this$ = ecx

; 5627 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00011	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00014	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00017	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001a	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001d	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00020	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5628 : 	if (flags == AtlFlagCopy)

  00023	83 7d 14 03	 cmp	 DWORD PTR _flags$[ebp], 3
  00027	0f 85 64 01 00
	00		 jne	 $LN10@Init
$LN4@Init:

; 5629 : 	{
; 5630 : 		ATLASSUME(m_begin == NULL); //Init called twice?

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00034	74 26		 je	 SHORT $LN2@Init
  00036	68 00 00 00 00	 push	 OFFSET $SG198471
  0003b	68 00 00 00 00	 push	 OFFSET $SG198472
  00040	6a 00		 push	 0
  00042	68 fe 15 00 00	 push	 5630			; 000015feH
  00047	68 00 00 00 00	 push	 OFFSET $SG198473
  0004c	6a 02		 push	 2
  0004e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00053	83 c4 18	 add	 esp, 24			; 00000018H
  00056	83 f8 01	 cmp	 eax, 1
  00059	75 01		 jne	 SHORT $LN2@Init
  0005b	cc		 int	 3
$LN2@Init:
  0005c	33 d2		 xor	 edx, edx
  0005e	75 cd		 jne	 SHORT $LN4@Init

; 5631 : 		ATLTRY(m_begin = _ATL_NEW T[end-begin])

  00060	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00065	8b 45 0c	 mov	 eax, DWORD PTR _end$[ebp]
  00068	2b 45 08	 sub	 eax, DWORD PTR _begin$[ebp]
  0006b	c1 f8 03	 sar	 eax, 3
  0006e	33 c9		 xor	 ecx, ecx
  00070	ba 08 00 00 00	 mov	 edx, 8
  00075	f7 e2		 mul	 edx
  00077	0f 90 c1	 seto	 cl
  0007a	f7 d9		 neg	 ecx
  0007c	0b c8		 or	 ecx, eax
  0007e	51		 push	 ecx
  0007f	e8 00 00 00 00	 call	 ??_U@YAPAXIABUnothrow_t@std@@@Z ; operator new[]
  00084	83 c4 08	 add	 esp, 8
  00087	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
  0008a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	8b 4d ec	 mov	 ecx, DWORD PTR $T2[ebp]
  00090	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 5632 : 		m_iter = m_begin;

  00093	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00096	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00099	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0009c	89 4a 10	 mov	 DWORD PTR [edx+16], ecx

; 5633 : 		if (m_begin == NULL)

  0009f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a2	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  000a6	75 0a		 jne	 SHORT $LN12@Init

; 5634 : 			return E_OUTOFMEMORY;

  000a8	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  000ad	e9 17 01 00 00	 jmp	 $LN1@Init
$LN12@Init:

; 5635 : 		for (T* i=begin; i != end; i++)

  000b2	8b 45 08	 mov	 eax, DWORD PTR _begin$[ebp]
  000b5	89 45 f8	 mov	 DWORD PTR _i$5[ebp], eax
  000b8	eb 09		 jmp	 SHORT $LN7@Init
$LN5@Init:
  000ba	8b 4d f8	 mov	 ecx, DWORD PTR _i$5[ebp]
  000bd	83 c1 08	 add	 ecx, 8
  000c0	89 4d f8	 mov	 DWORD PTR _i$5[ebp], ecx
$LN7@Init:
  000c3	8b 55 f8	 mov	 edx, DWORD PTR _i$5[ebp]
  000c6	3b 55 0c	 cmp	 edx, DWORD PTR _end$[ebp]
  000c9	0f 84 a8 00 00
	00		 je	 $LN6@Init

; 5636 : 		{
; 5637 : 			Copy::init(m_iter);

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	51		 push	 ecx
  000d6	e8 00 00 00 00	 call	 ?init@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPAUtagCONNECTDATA@@@Z ; ATL::_Copy<tagCONNECTDATA>::init
  000db	83 c4 04	 add	 esp, 4

; 5638 : 			HRESULT hr = Copy::copy(m_iter, i);

  000de	8b 55 f8	 mov	 edx, DWORD PTR _i$5[ebp]
  000e1	52		 push	 edx
  000e2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e5	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e8	51		 push	 ecx
  000e9	e8 00 00 00 00	 call	 ?copy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAJPAUtagCONNECTDATA@@PBU3@@Z ; ATL::_Copy<tagCONNECTDATA>::copy
  000ee	83 c4 08	 add	 esp, 8
  000f1	89 45 f4	 mov	 DWORD PTR _hr$4[ebp], eax

; 5639 : 			if (FAILED(hr))

  000f4	83 7d f4 00	 cmp	 DWORD PTR _hr$4[ebp], 0
  000f8	7d 69		 jge	 SHORT $LN13@Init

; 5640 : 			{
; 5641 : 				T* p = m_begin;

  000fa	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000fd	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00100	89 45 f0	 mov	 DWORD PTR _p$3[ebp], eax
$LN8@Init:

; 5642 : 				while (p < m_iter)

  00103	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00106	8b 55 f0	 mov	 edx, DWORD PTR _p$3[ebp]
  00109	3b 51 10	 cmp	 edx, DWORD PTR [ecx+16]
  0010c	73 1d		 jae	 SHORT $LN9@Init

; 5643 : 					Copy::destroy(p++);

  0010e	8b 45 f0	 mov	 eax, DWORD PTR _p$3[ebp]
  00111	89 45 e4	 mov	 DWORD PTR tv140[ebp], eax
  00114	8b 4d f0	 mov	 ecx, DWORD PTR _p$3[ebp]
  00117	83 c1 08	 add	 ecx, 8
  0011a	89 4d f0	 mov	 DWORD PTR _p$3[ebp], ecx
  0011d	8b 55 e4	 mov	 edx, DWORD PTR tv140[ebp]
  00120	52		 push	 edx
  00121	e8 00 00 00 00	 call	 ?destroy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPAUtagCONNECTDATA@@@Z ; ATL::_Copy<tagCONNECTDATA>::destroy
  00126	83 c4 04	 add	 esp, 4
  00129	eb d8		 jmp	 SHORT $LN8@Init
$LN9@Init:

; 5644 : 				delete [] m_begin;

  0012b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0012e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00131	89 4d e8	 mov	 DWORD PTR $T1[ebp], ecx
  00134	8b 55 e8	 mov	 edx, DWORD PTR $T1[ebp]
  00137	52		 push	 edx
  00138	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0013d	83 c4 04	 add	 esp, 4

; 5645 : 				m_begin = m_end = m_iter = NULL;

  00140	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00143	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
  0014a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00154	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00157	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 5646 : 				return hr;

  0015e	8b 45 f4	 mov	 eax, DWORD PTR _hr$4[ebp]
  00161	eb 66		 jmp	 SHORT $LN1@Init
$LN13@Init:

; 5647 : 			}
; 5648 : 			m_iter++;

  00163	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00166	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00169	83 c1 08	 add	 ecx, 8
  0016c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0016f	89 4a 10	 mov	 DWORD PTR [edx+16], ecx

; 5649 : 		}

  00172	e9 43 ff ff ff	 jmp	 $LN5@Init
$LN6@Init:

; 5650 : 		m_end = m_begin + (end-begin);

  00177	8b 45 0c	 mov	 eax, DWORD PTR _end$[ebp]
  0017a	2b 45 08	 sub	 eax, DWORD PTR _begin$[ebp]
  0017d	c1 f8 03	 sar	 eax, 3
  00180	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00183	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00186	8d 04 c2	 lea	 eax, DWORD PTR [edx+eax*8]
  00189	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0018c	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 5651 : 	}

  0018f	eb 12		 jmp	 SHORT $LN11@Init
$LN10@Init:

; 5652 : 	else
; 5653 : 	{
; 5654 : 		m_begin = begin;

  00191	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00194	8b 45 08	 mov	 eax, DWORD PTR _begin$[ebp]
  00197	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 5655 : 		m_end = end;

  0019a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0019d	8b 55 0c	 mov	 edx, DWORD PTR _end$[ebp]
  001a0	89 51 0c	 mov	 DWORD PTR [ecx+12], edx
$LN11@Init:

; 5656 : 	}
; 5657 : 	m_spUnk = pUnk;

  001a3	8b 45 10	 mov	 eax, DWORD PTR _pUnk$[ebp]
  001a6	50		 push	 eax
  001a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001aa	83 c1 04	 add	 ecx, 4
  001ad	e8 00 00 00 00	 call	 ??4?$CComPtr@UIUnknown@@@ATL@@QAEPAUIUnknown@@PAU2@@Z ; ATL::CComPtr<IUnknown>::operator=

; 5658 : 	m_iter = m_begin;

  001b2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001b8	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001bb	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 5659 : 	m_dwFlags = flags;

  001be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001c1	8b 55 14	 mov	 edx, DWORD PTR _flags$[ebp]
  001c4	89 51 14	 mov	 DWORD PTR [ecx+20], edx

; 5660 : 	return S_OK;

  001c7	33 c0		 xor	 eax, eax
$LN1@Init:

; 5661 : }

  001c9	83 c4 1c	 add	 esp, 28			; 0000001cH
  001cc	3b ec		 cmp	 ebp, esp
  001ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001d3	8b e5		 mov	 esp, ebp
  001d5	5d		 pop	 ebp
  001d6	c2 10 00	 ret	 16			; 00000010H
?Init@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QAEJPAUtagCONNECTDATA@@0PAUIUnknown@@W4CComEnumFlags@2@@Z ENDP ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJPAPAUIEnumConnections@@@Z
_TEXT	SEGMENT
tv163 = -44						; size = 4
tv128 = -40						; size = 4
$T1 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -24						; size = 4
$T5 = -20						; size = 4
_p$6 = -12						; size = 4
_hRes$ = -4						; size = 4
_this$ = 8						; size = 4
_ppEnum$ = 12						; size = 4
?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJPAPAUIEnumConnections@@@Z PROC ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Clone, COMDAT

; 5596 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0000b	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0

; 5597 : 	typedef CComObject<CComEnum<Base, piid, T, Copy> > _class;
; 5598 : 	HRESULT hRes = E_POINTER;

  0001e	c7 45 fc 03 40
	00 80		 mov	 DWORD PTR _hRes$[ebp], -2147467261 ; 80004003H

; 5599 : 	if (ppEnum != NULL)

  00025	83 7d 0c 00	 cmp	 DWORD PTR _ppEnum$[ebp], 0
  00029	0f 84 03 01 00
	00		 je	 $LN2@Clone

; 5600 : 	{
; 5601 : 		*ppEnum = NULL;

  0002f	8b 45 0c	 mov	 eax, DWORD PTR _ppEnum$[ebp]
  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 5602 : 		_class* p;
; 5603 : 		hRes = _class::CreateInstance(&p);

  00038	8d 4d f4	 lea	 ecx, DWORD PTR _p$6[ebp]
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CreateInstance
  00041	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax

; 5604 : 		if (SUCCEEDED(hRes))

  00044	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00048	0f 8c e4 00 00
	00		 jl	 $LN2@Clone

; 5605 : 		{
; 5606 : 			// If this object has ownership of the data then we need to keep it around
; 5607 : 			hRes = p->Init(m_begin, m_end, (m_dwFlags & BitOwn) ? this : m_spUnk);

  0004e	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00051	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00054	83 e0 02	 and	 eax, 2
  00057	74 15		 je	 SHORT $LN7@Clone
  00059	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	51		 push	 ecx
  0005d	8d 4d e8	 lea	 ecx, DWORD PTR $T4[ebp]
  00060	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
  00065	83 4d dc 01	 or	 DWORD PTR $T1[ebp], 1
  00069	89 45 d8	 mov	 DWORD PTR tv128[ebp], eax
  0006c	eb 16		 jmp	 SHORT $LN8@Clone
$LN7@Clone:
  0006e	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00071	83 c2 04	 add	 edx, 4
  00074	52		 push	 edx
  00075	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  00078	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QAE@ABV01@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
  0007d	83 4d dc 02	 or	 DWORD PTR $T1[ebp], 2
  00081	89 45 d8	 mov	 DWORD PTR tv128[ebp], eax
$LN8@Clone:
  00084	8b 45 d8	 mov	 eax, DWORD PTR tv128[ebp]
  00087	89 45 ec	 mov	 DWORD PTR $T5[ebp], eax
  0008a	6a 00		 push	 0
  0008c	8b 4d ec	 mov	 ecx, DWORD PTR $T5[ebp]
  0008f	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0009b	52		 push	 edx
  0009c	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000a2	51		 push	 ecx
  000a3	8b 4d f4	 mov	 ecx, DWORD PTR _p$6[ebp]
  000a6	e8 00 00 00 00	 call	 ?Init@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QAEJPAUtagCONNECTDATA@@0PAUIUnknown@@W4CComEnumFlags@2@@Z ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Init
  000ab	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
  000ae	8b 55 dc	 mov	 edx, DWORD PTR $T1[ebp]
  000b1	83 e2 02	 and	 edx, 2
  000b4	74 0c		 je	 SHORT $LN11@Clone
  000b6	83 65 dc fd	 and	 DWORD PTR $T1[ebp], -3	; fffffffdH
  000ba	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  000bd	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
$LN11@Clone:
  000c2	8b 45 dc	 mov	 eax, DWORD PTR $T1[ebp]
  000c5	83 e0 01	 and	 eax, 1
  000c8	74 0c		 je	 SHORT $LN12@Clone
  000ca	83 65 dc fe	 and	 DWORD PTR $T1[ebp], -2	; fffffffeH
  000ce	8d 4d e8	 lea	 ecx, DWORD PTR $T4[ebp]
  000d1	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
$LN12@Clone:

; 5608 : 			if (SUCCEEDED(hRes))

  000d6	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  000da	7c 20		 jl	 SHORT $LN4@Clone

; 5609 : 			{
; 5610 : 				p->m_iter = m_iter;

  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _p$6[ebp]
  000df	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  000e2	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000e5	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 5611 : 				hRes = p->_InternalQueryInterface(*piid, (void**)ppEnum);

  000e8	8b 4d 0c	 mov	 ecx, DWORD PTR _ppEnum$[ebp]
  000eb	51		 push	 ecx
  000ec	68 00 00 00 00	 push	 OFFSET __GUID_b196b287_bab4_101a_b69c_00aa00341d07
  000f1	8b 4d f4	 mov	 ecx, DWORD PTR _p$6[ebp]
  000f4	e8 00 00 00 00	 call	 ?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_InternalQueryInterface
  000f9	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN4@Clone:

; 5612 : 			}
; 5613 : 			if (FAILED(hRes))

  000fc	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00100	7d 30		 jge	 SHORT $LN2@Clone

; 5614 : 				delete p;

  00102	8b 55 f4	 mov	 edx, DWORD PTR _p$6[ebp]
  00105	89 55 e0	 mov	 DWORD PTR $T2[ebp], edx
  00108	83 7d e0 00	 cmp	 DWORD PTR $T2[ebp], 0
  0010c	74 1d		 je	 SHORT $LN9@Clone
  0010e	8b f4		 mov	 esi, esp
  00110	6a 01		 push	 1
  00112	8b 45 e0	 mov	 eax, DWORD PTR $T2[ebp]
  00115	8b 10		 mov	 edx, DWORD PTR [eax]
  00117	8b 4d e0	 mov	 ecx, DWORD PTR $T2[ebp]
  0011a	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0011d	ff d0		 call	 eax
  0011f	3b f4		 cmp	 esi, esp
  00121	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00126	89 45 d4	 mov	 DWORD PTR tv163[ebp], eax
  00129	eb 07		 jmp	 SHORT $LN2@Clone
$LN9@Clone:
  0012b	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR tv163[ebp], 0
$LN2@Clone:

; 5615 : 		}
; 5616 : 	}
; 5617 : 
; 5618 : 	return hRes;

  00132	8b 45 fc	 mov	 eax, DWORD PTR _hRes$[ebp]

; 5619 : }

  00135	52		 push	 edx
  00136	8b cd		 mov	 ecx, ebp
  00138	50		 push	 eax
  00139	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN15@Clone
  0013f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00144	58		 pop	 eax
  00145	5a		 pop	 edx
  00146	5f		 pop	 edi
  00147	5e		 pop	 esi
  00148	83 c4 2c	 add	 esp, 44			; 0000002cH
  0014b	3b ec		 cmp	 ebp, esp
  0014d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00152	8b e5		 mov	 esp, ebp
  00154	5d		 pop	 ebp
  00155	c2 08 00	 ret	 8
$LN15@Clone:
  00158	01 00 00 00	 DD	 1
  0015c	00 00 00 00	 DD	 $LN14@Clone
$LN14@Clone:
  00160	f4 ff ff ff	 DD	 -12			; fffffff4H
  00164	04 00 00 00	 DD	 4
  00168	00 00 00 00	 DD	 $LN13@Clone
$LN13@Clone:
  0016c	70		 DB	 112			; 00000070H
  0016d	00		 DB	 0
?Clone@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJPAPAUIEnumConnections@@@Z ENDP ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Clone
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Reset@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Reset@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJXZ PROC ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Reset, COMDAT

; 5512 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 5513 : 		m_iter = m_begin;

  00003	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00009	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000c	89 50 10	 mov	 DWORD PTR [eax+16], edx

; 5514 : 		return S_OK;

  0000f	33 c0		 xor	 eax, eax

; 5515 : 	}

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?Reset@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJXZ ENDP ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Skip@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJK@Z
_TEXT	SEGMENT
tv75 = -16						; size = 4
tv69 = -12						; size = 4
_nSkip$ = -8						; size = 4
_nRem$ = -4						; size = 4
_this$ = 8						; size = 4
_celt$ = 12						; size = 4
?Skip@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJK@Z PROC ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Skip, COMDAT

; 5586 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 5587 : 	ULONG nRem = ULONG(m_end - m_iter);

  00017	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00020	2b 51 10	 sub	 edx, DWORD PTR [ecx+16]
  00023	c1 fa 03	 sar	 edx, 3
  00026	89 55 fc	 mov	 DWORD PTR _nRem$[ebp], edx

; 5588 : 	ULONG nSkip = (celt > nRem) ? nRem : celt;

  00029	8b 45 0c	 mov	 eax, DWORD PTR _celt$[ebp]
  0002c	3b 45 fc	 cmp	 eax, DWORD PTR _nRem$[ebp]
  0002f	76 08		 jbe	 SHORT $LN3@Skip
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _nRem$[ebp]
  00034	89 4d f4	 mov	 DWORD PTR tv69[ebp], ecx
  00037	eb 06		 jmp	 SHORT $LN4@Skip
$LN3@Skip:
  00039	8b 55 0c	 mov	 edx, DWORD PTR _celt$[ebp]
  0003c	89 55 f4	 mov	 DWORD PTR tv69[ebp], edx
$LN4@Skip:
  0003f	8b 45 f4	 mov	 eax, DWORD PTR tv69[ebp]
  00042	89 45 f8	 mov	 DWORD PTR _nSkip$[ebp], eax

; 5589 : 	m_iter += nSkip;

  00045	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0004b	8b 45 f8	 mov	 eax, DWORD PTR _nSkip$[ebp]
  0004e	8d 0c c2	 lea	 ecx, DWORD PTR [edx+eax*8]
  00051	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00054	89 4a 10	 mov	 DWORD PTR [edx+16], ecx

; 5590 : 	return (celt == nSkip) ? S_OK : S_FALSE;

  00057	8b 45 0c	 mov	 eax, DWORD PTR _celt$[ebp]
  0005a	3b 45 f8	 cmp	 eax, DWORD PTR _nSkip$[ebp]
  0005d	75 09		 jne	 SHORT $LN5@Skip
  0005f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
  00066	eb 07		 jmp	 SHORT $LN6@Skip
$LN5@Skip:
  00068	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv75[ebp], 1
$LN6@Skip:
  0006f	8b 45 f0	 mov	 eax, DWORD PTR tv75[ebp]

; 5591 : }

  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
?Skip@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJK@Z ENDP ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Skip
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Next@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJKPAUtagCONNECTDATA@@PAK@Z
_TEXT	SEGMENT
tv92 = -32						; size = 4
tv83 = -28						; size = 4
tv80 = -24						; size = 4
_hr$1 = -20						; size = 4
_pelt$ = -16						; size = 4
_nMin$ = -12						; size = 4
_hRes$ = -8						; size = 4
_nRem$ = -4						; size = 4
_this$ = 8						; size = 4
_celt$ = 12						; size = 4
_rgelt$ = 16						; size = 4
_pceltFetched$ = 20					; size = 4
?Next@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJKPAUtagCONNECTDATA@@PAK@Z PROC ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Next, COMDAT

; 5552 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000e	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00011	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00014	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00017	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001a	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001d	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00020	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 5553 : 	if (pceltFetched != NULL)

  00023	83 7d 14 00	 cmp	 DWORD PTR _pceltFetched$[ebp], 0
  00027	74 09		 je	 SHORT $LN6@Next

; 5554 : 		*pceltFetched = 0;

  00029	8b 45 14	 mov	 eax, DWORD PTR _pceltFetched$[ebp]
  0002c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN6@Next:

; 5555 : 	if (rgelt == NULL || (celt > 1 && pceltFetched == NULL))

  00032	83 7d 10 00	 cmp	 DWORD PTR _rgelt$[ebp], 0
  00036	74 0c		 je	 SHORT $LN8@Next
  00038	83 7d 0c 01	 cmp	 DWORD PTR _celt$[ebp], 1
  0003c	76 10		 jbe	 SHORT $LN7@Next
  0003e	83 7d 14 00	 cmp	 DWORD PTR _pceltFetched$[ebp], 0
  00042	75 0a		 jne	 SHORT $LN7@Next
$LN8@Next:

; 5556 : 		return E_POINTER;

  00044	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00049	e9 07 01 00 00	 jmp	 $LN1@Next
$LN7@Next:

; 5557 : 	if (m_begin == NULL || m_end == NULL || m_iter == NULL)

  0004e	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00055	74 12		 je	 SHORT $LN10@Next
  00057	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0005a	83 7a 0c 00	 cmp	 DWORD PTR [edx+12], 0
  0005e	74 09		 je	 SHORT $LN10@Next
  00060	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00063	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00067	75 0a		 jne	 SHORT $LN9@Next
$LN10@Next:

; 5558 : 		return E_FAIL;

  00069	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  0006e	e9 e2 00 00 00	 jmp	 $LN1@Next
$LN9@Next:

; 5559 : 	ULONG nRem = (ULONG)(m_end - m_iter);

  00073	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00079	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0007c	2b 42 10	 sub	 eax, DWORD PTR [edx+16]
  0007f	c1 f8 03	 sar	 eax, 3
  00082	89 45 fc	 mov	 DWORD PTR _nRem$[ebp], eax

; 5560 : 	HRESULT hRes = S_OK;

  00085	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hRes$[ebp], 0

; 5561 : 	if (nRem < celt)

  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _nRem$[ebp]
  0008f	3b 4d 0c	 cmp	 ecx, DWORD PTR _celt$[ebp]
  00092	73 07		 jae	 SHORT $LN11@Next

; 5562 : 		hRes = S_FALSE;

  00094	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _hRes$[ebp], 1
$LN11@Next:

; 5563 : 	ULONG nMin = celt < nRem ? celt : nRem ;

  0009b	8b 55 0c	 mov	 edx, DWORD PTR _celt$[ebp]
  0009e	3b 55 fc	 cmp	 edx, DWORD PTR _nRem$[ebp]
  000a1	73 08		 jae	 SHORT $LN16@Next
  000a3	8b 45 0c	 mov	 eax, DWORD PTR _celt$[ebp]
  000a6	89 45 e8	 mov	 DWORD PTR tv80[ebp], eax
  000a9	eb 06		 jmp	 SHORT $LN17@Next
$LN16@Next:
  000ab	8b 4d fc	 mov	 ecx, DWORD PTR _nRem$[ebp]
  000ae	89 4d e8	 mov	 DWORD PTR tv80[ebp], ecx
$LN17@Next:
  000b1	8b 55 e8	 mov	 edx, DWORD PTR tv80[ebp]
  000b4	89 55 f4	 mov	 DWORD PTR _nMin$[ebp], edx

; 5564 : 	if (pceltFetched != NULL)

  000b7	83 7d 14 00	 cmp	 DWORD PTR _pceltFetched$[ebp], 0
  000bb	74 08		 je	 SHORT $LN12@Next

; 5565 : 		*pceltFetched = nMin;

  000bd	8b 45 14	 mov	 eax, DWORD PTR _pceltFetched$[ebp]
  000c0	8b 4d f4	 mov	 ecx, DWORD PTR _nMin$[ebp]
  000c3	89 08		 mov	 DWORD PTR [eax], ecx
$LN12@Next:

; 5566 : 	T* pelt = rgelt;

  000c5	8b 55 10	 mov	 edx, DWORD PTR _rgelt$[ebp]
  000c8	89 55 f0	 mov	 DWORD PTR _pelt$[ebp], edx
$LN2@Next:

; 5567 : 	while(nMin--)

  000cb	8b 45 f4	 mov	 eax, DWORD PTR _nMin$[ebp]
  000ce	89 45 e4	 mov	 DWORD PTR tv83[ebp], eax
  000d1	8b 4d f4	 mov	 ecx, DWORD PTR _nMin$[ebp]
  000d4	83 e9 01	 sub	 ecx, 1
  000d7	89 4d f4	 mov	 DWORD PTR _nMin$[ebp], ecx
  000da	83 7d e4 00	 cmp	 DWORD PTR tv83[ebp], 0
  000de	74 72		 je	 SHORT $LN3@Next

; 5568 : 	{
; 5569 : 		HRESULT hr = Copy::copy(pelt, m_iter);

  000e0	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  000e3	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000e6	50		 push	 eax
  000e7	8b 4d f0	 mov	 ecx, DWORD PTR _pelt$[ebp]
  000ea	51		 push	 ecx
  000eb	e8 00 00 00 00	 call	 ?copy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAJPAUtagCONNECTDATA@@PBU3@@Z ; ATL::_Copy<tagCONNECTDATA>::copy
  000f0	83 c4 08	 add	 esp, 8
  000f3	89 45 ec	 mov	 DWORD PTR _hr$1[ebp], eax

; 5570 : 		if (FAILED(hr))

  000f6	83 7d ec 00	 cmp	 DWORD PTR _hr$1[ebp], 0
  000fa	7d 39		 jge	 SHORT $LN13@Next
$LN4@Next:

; 5571 : 		{
; 5572 : 			while (rgelt < pelt)

  000fc	8b 55 10	 mov	 edx, DWORD PTR _rgelt$[ebp]
  000ff	3b 55 f0	 cmp	 edx, DWORD PTR _pelt$[ebp]
  00102	73 1d		 jae	 SHORT $LN5@Next

; 5573 : 				Copy::destroy(rgelt++);

  00104	8b 45 10	 mov	 eax, DWORD PTR _rgelt$[ebp]
  00107	89 45 e0	 mov	 DWORD PTR tv92[ebp], eax
  0010a	8b 4d 10	 mov	 ecx, DWORD PTR _rgelt$[ebp]
  0010d	83 c1 08	 add	 ecx, 8
  00110	89 4d 10	 mov	 DWORD PTR _rgelt$[ebp], ecx
  00113	8b 55 e0	 mov	 edx, DWORD PTR tv92[ebp]
  00116	52		 push	 edx
  00117	e8 00 00 00 00	 call	 ?destroy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPAUtagCONNECTDATA@@@Z ; ATL::_Copy<tagCONNECTDATA>::destroy
  0011c	83 c4 04	 add	 esp, 4
  0011f	eb db		 jmp	 SHORT $LN4@Next
$LN5@Next:

; 5574 : 			if (pceltFetched != NULL)

  00121	83 7d 14 00	 cmp	 DWORD PTR _pceltFetched$[ebp], 0
  00125	74 09		 je	 SHORT $LN14@Next

; 5575 : 				*pceltFetched = 0;

  00127	8b 45 14	 mov	 eax, DWORD PTR _pceltFetched$[ebp]
  0012a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN14@Next:

; 5576 : 			return hr;

  00130	8b 45 ec	 mov	 eax, DWORD PTR _hr$1[ebp]
  00133	eb 20		 jmp	 SHORT $LN1@Next
$LN13@Next:

; 5577 : 		}
; 5578 : 		pelt++;

  00135	8b 4d f0	 mov	 ecx, DWORD PTR _pelt$[ebp]
  00138	83 c1 08	 add	 ecx, 8
  0013b	89 4d f0	 mov	 DWORD PTR _pelt$[ebp], ecx

; 5579 : 		m_iter++;

  0013e	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00141	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00144	83 c0 08	 add	 eax, 8
  00147	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 5580 : 	}

  0014d	e9 79 ff ff ff	 jmp	 $LN2@Next
$LN3@Next:

; 5581 : 	return hRes;

  00152	8b 45 f8	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@Next:

; 5582 : }

  00155	83 c4 20	 add	 esp, 32			; 00000020H
  00158	3b ec		 cmp	 ebp, esp
  0015a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015f	8b e5		 mov	 esp, ebp
  00161	5d		 pop	 ebp
  00162	c2 10 00	 ret	 16			; 00000010H
?Next@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAGJKPAUtagCONNECTDATA@@PAK@Z ENDP ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Next
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
$T1 = -12						; size = 4
_p$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAE@XZ PROC ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::~CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >, COMDAT
; _this$ = ecx

; 5538 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5539 : 	if (m_dwFlags & BitOwn)

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00024	83 e1 02	 and	 ecx, 2
  00027	74 42		 je	 SHORT $LN1@CComEnumIm

; 5540 : 	{
; 5541 : 		for (T* p = m_begin; p != m_end; p++)

  00029	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0002f	89 45 f8	 mov	 DWORD PTR _p$2[ebp], eax
  00032	eb 09		 jmp	 SHORT $LN4@CComEnumIm
$LN2@CComEnumIm:
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _p$2[ebp]
  00037	83 c1 08	 add	 ecx, 8
  0003a	89 4d f8	 mov	 DWORD PTR _p$2[ebp], ecx
$LN4@CComEnumIm:
  0003d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00040	8b 45 f8	 mov	 eax, DWORD PTR _p$2[ebp]
  00043	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  00046	74 0e		 je	 SHORT $LN3@CComEnumIm

; 5542 : 			Copy::destroy(p);

  00048	8b 4d f8	 mov	 ecx, DWORD PTR _p$2[ebp]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?destroy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPAUtagCONNECTDATA@@@Z ; ATL::_Copy<tagCONNECTDATA>::destroy
  00051	83 c4 04	 add	 esp, 4
  00054	eb de		 jmp	 SHORT $LN2@CComEnumIm
$LN3@CComEnumIm:

; 5543 : 		delete [] m_begin;

  00056	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00059	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0005c	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR $T1[ebp]
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00068	83 c4 04	 add	 esp, 4
$LN1@CComEnumIm:

; 5544 : 	}
; 5545 : }

  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	83 c1 04	 add	 ecx, 4
  00071	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
  00076	83 c4 0c	 add	 esp, 12			; 0000000cH
  00079	3b ec		 cmp	 ebp, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
??1?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@UAE@XZ ENDP ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::~CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??0?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QAE@XZ PROC ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >, COMDAT
; _this$ = ecx

; 5499 : 	CComEnumImpl()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5500 : 	{

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0IEnumConnections@@QAE@XZ
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 04	 add	 ecx, 4
  0001c	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 5501 : 		m_begin = m_end = m_iter = NULL;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 5502 : 		m_dwFlags = 0;

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 5503 : 	}

  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	83 c4 04	 add	 esp, 4
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??0?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??__E?pConnMap@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@0PBU_ATL_CONNMAP_ENTRY@2@B@@YAXXZ
text$di	SEGMENT
??__E?pConnMap@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@0PBU_ATL_CONNMAP_ENTRY@2@B@@YAXXZ PROC ; `dynamic initializer for 'ATL::IConnectionPointContainerImpl<COPOSGestureControl>::pConnMap'', COMDAT

; 6573 : __declspec(selectany) const ATL::_ATL_CONNMAP_ENTRY* IConnectionPointContainerImpl<T>::pConnMap = T::GetConnMap(NULL);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a 00		 push	 0
  00005	e8 00 00 00 00	 call	 ?GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z ; COPOSGestureControl::GetConnMap
  0000a	83 c4 04	 add	 esp, 4
  0000d	a3 00 00 00 00	 mov	 DWORD PTR ?pConnMap@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@0PBU_ATL_CONNMAP_ENTRY@2@B, eax ; ATL::IConnectionPointContainerImpl<COPOSGestureControl>::pConnMap
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__E?pConnMap@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@0PBU_ATL_CONNMAP_ENTRY@2@B@@YAXXZ ENDP ; `dynamic initializer for 'ATL::IConnectionPointContainerImpl<COPOSGestureControl>::pConnMap''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ??$?2G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAPAXIPAG@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_p$ = 12						; size = 4
??$?2G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAPAXIPAG@Z PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::operator new<unsigned short>, COMDAT

; 281  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 282  : 			return p;

  00003	8b 45 0c	 mov	 eax, DWORD PTR _p$[ebp]

; 283  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$?2G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAPAXIPAG@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::operator new<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@ABG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__t$ = 8						; size = 4
??0Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@ABG@Z PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::Wrapper, COMDAT
; _this$ = ecx

; 275  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 274  : 		Wrapper(_In_ const T& _t) : t(_t)

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR __t$[ebp]
  00014	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00017	66 89 10	 mov	 WORD PTR [eax], dx

; 276  : 		}

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??0Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@ABG@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::Wrapper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ??$?2PA_W@?$Wrapper@PA_W@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPA_W@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_p$ = 12						; size = 4
??$?2PA_W@?$Wrapper@PA_W@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPA_W@Z PROC ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Wrapper<wchar_t *>::operator new<wchar_t *>, COMDAT

; 498  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 499  : 			return p;

  00003	8b 45 0c	 mov	 eax, DWORD PTR _p$[ebp]

; 500  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$?2PA_W@?$Wrapper@PA_W@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPA_W@Z ENDP ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Wrapper<wchar_t *>::operator new<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0?$Wrapper@PA_W@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__t$ = 8						; size = 4
??0?$Wrapper@PA_W@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQA_W@Z PROC ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Wrapper<wchar_t *>::Wrapper<wchar_t *>, COMDAT
; _this$ = ecx

; 492  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 491  : 		Wrapper(_In_ const T& _t) : t(_t)

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR __t$[ebp]
  00014	8b 11		 mov	 edx, DWORD PTR [ecx]
  00016	89 10		 mov	 DWORD PTR [eax], edx

; 493  : 		}

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$Wrapper@PA_W@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQA_W@Z ENDP ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Wrapper<wchar_t *>::Wrapper<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?GetWndExStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_dwExStyle$ = 8						; size = 4
?GetWndExStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z PROC ; ATL::CWinTraits<1442840576,0>::GetWndExStyle, COMDAT

; 3187 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 3188 : 		return dwExStyle == 0 ? t_dwExStyle : dwExStyle;

  0000b	83 7d 08 00	 cmp	 DWORD PTR _dwExStyle$[ebp], 0
  0000f	75 09		 jne	 SHORT $LN3@GetWndExSt
  00011	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv65[ebp], 0
  00018	eb 06		 jmp	 SHORT $LN4@GetWndExSt
$LN3@GetWndExSt:
  0001a	8b 45 08	 mov	 eax, DWORD PTR _dwExStyle$[ebp]
  0001d	89 45 fc	 mov	 DWORD PTR tv65[ebp], eax
$LN4@GetWndExSt:
  00020	8b 45 fc	 mov	 eax, DWORD PTR tv65[ebp]

; 3189 : 	}

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?GetWndExStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z ENDP ; ATL::CWinTraits<1442840576,0>::GetWndExStyle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?GetWndStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_dwStyle$ = 8						; size = 4
?GetWndStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z PROC ; ATL::CWinTraits<1442840576,0>::GetWndStyle, COMDAT

; 3183 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 3184 : 		return dwStyle == 0 ? t_dwStyle : dwStyle;

  0000b	83 7d 08 00	 cmp	 DWORD PTR _dwStyle$[ebp], 0
  0000f	75 09		 jne	 SHORT $LN3@GetWndStyl
  00011	c7 45 fc 00 00
	00 56		 mov	 DWORD PTR tv65[ebp], 1442840576 ; 56000000H
  00018	eb 06		 jmp	 SHORT $LN4@GetWndStyl
$LN3@GetWndStyl:
  0001a	8b 45 08	 mov	 eax, DWORD PTR _dwStyle$[ebp]
  0001d	89 45 fc	 mov	 DWORD PTR tv65[ebp], eax
$LN4@GetWndStyl:
  00020	8b 45 fc	 mov	 eax, DWORD PTR tv65[ebp]

; 3185 : 	}

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?GetWndStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z ENDP ; ATL::CWinTraits<1442840576,0>::GetWndStyle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$CComObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CComObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z PROC ; ATL::CComObject<COPOSGestureControl>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComObject@VCOPOSGestureControl@@@ATL@@UAE@XZ ; ATL::CComObject<COPOSGestureControl>::~CComObject<COPOSGestureControl>
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 11		 je	 SHORT $LN2@scalar
  0001e	68 94 01 00 00	 push	 404			; 00000194H
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	51		 push	 ecx
  00027	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002c	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	83 c4 04	 add	 esp, 4
  00035	3b ec		 cmp	 ebp, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
??_G?$CComObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z ENDP ; ATL::CComObject<COPOSGestureControl>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z PROC ; ATL::CComObject<COPOSGestureControl>::QueryInterface, COMDAT

; 2947 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2948 : 		return this->_InternalQueryInterface(iid, ppvObject);

  00003	8b 45 10	 mov	 eax, DWORD PTR _ppvObject$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _iid$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_InternalQueryInterface@COPOSGestureControl@@QAEJABU_GUID@@PAPAX@Z ; COPOSGestureControl::_InternalQueryInterface

; 2949 : 	}

  00013	3b ec		 cmp	 ebp, esp
  00015	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001a	5d		 pop	 ebp
  0001b	c2 0c 00	 ret	 12			; 0000000cH
?QueryInterface@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::CComObject<COPOSGestureControl>::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ
_TEXT	SEGMENT
tv85 = -24						; size = 4
$T1 = -20						; size = 4
_lock$2 = -9						; size = 1
_l$ = -4						; size = 4
_this$ = 8						; size = 4
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ PROC ; ATL::CComObject<COPOSGestureControl>::Release, COMDAT

; 2933 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2934 : 		ULONG l = this->InternalRelease();

  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00027	e8 00 00 00 00	 call	 ?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease
  0002c	89 45 fc	 mov	 DWORD PTR _l$[ebp], eax

; 2935 : 		if (l == 0)

  0002f	83 7d fc 00	 cmp	 DWORD PTR _l$[ebp], 0
  00033	75 43		 jne	 SHORT $LN2@Release

; 2936 : 		{
; 2937 : 			// Lock the module to avoid DLL unload when destruction of member variables take a long time
; 2938 : 			ModuleLockHelper lock;

  00035	8d 4d f7	 lea	 ecx, DWORD PTR _lock$2[ebp]
  00038	e8 00 00 00 00	 call	 ??0ModuleLockHelper@ATL@@QAE@XZ ; ATL::ModuleLockHelper::ModuleLockHelper

; 2939 : 			delete this;

  0003d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00040	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  00043	83 7d ec 00	 cmp	 DWORD PTR $T1[ebp], 0
  00047	74 20		 je	 SHORT $LN4@Release
  00049	8b f4		 mov	 esi, esp
  0004b	6a 01		 push	 1
  0004d	8b 4d ec	 mov	 ecx, DWORD PTR $T1[ebp]
  00050	83 c1 04	 add	 ecx, 4
  00053	8b 55 ec	 mov	 edx, DWORD PTR $T1[ebp]
  00056	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	ff d2		 call	 edx
  0005d	3b f4		 cmp	 esi, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	89 45 e8	 mov	 DWORD PTR tv85[ebp], eax
  00067	eb 07		 jmp	 SHORT $LN5@Release
$LN4@Release:
  00069	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN5@Release:

; 2940 : 		}

  00070	8d 4d f7	 lea	 ecx, DWORD PTR _lock$2[ebp]
  00073	e8 00 00 00 00	 call	 ??1ModuleLockHelper@ATL@@QAE@XZ ; ATL::ModuleLockHelper::~ModuleLockHelper
$LN2@Release:

; 2941 : 		return l;

  00078	8b 45 fc	 mov	 eax, DWORD PTR _l$[ebp]

; 2942 : 	}

  0007b	52		 push	 edx
  0007c	8b cd		 mov	 ecx, ebp
  0007e	50		 push	 eax
  0007f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@Release
  00085	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0008a	58		 pop	 eax
  0008b	5a		 pop	 edx
  0008c	5e		 pop	 esi
  0008d	83 c4 18	 add	 esp, 24			; 00000018H
  00090	3b ec		 cmp	 ebp, esp
  00092	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
  0009d	0f 1f 00	 npad	 3
$LN8@Release:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN7@Release
$LN7@Release:
  000a8	f7 ff ff ff	 DD	 -9			; fffffff7H
  000ac	01 00 00 00	 DD	 1
  000b0	00 00 00 00	 DD	 $LN6@Release
$LN6@Release:
  000b4	6c		 DB	 108			; 0000006cH
  000b5	6f		 DB	 111			; 0000006fH
  000b6	63		 DB	 99			; 00000063H
  000b7	6b		 DB	 107			; 0000006bH
  000b8	00		 DB	 0
?Release@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ENDP ; ATL::CComObject<COPOSGestureControl>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ PROC ; ATL::CComObject<COPOSGestureControl>::AddRef, COMDAT

; 2929 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2930 : 		return this->InternalAddRef();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00006	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  0000c	e8 00 00 00 00	 call	 ?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef

; 2931 : 	}

  00011	3b ec		 cmp	 ebp, esp
  00013	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?AddRef@?$CComObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ENDP ; ATL::CComObject<COPOSGestureControl>::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1?$CComObject@VCOPOSGestureControl@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComObject@VCOPOSGestureControl@@@ATL@@UAE@XZ PROC	; ATL::CComObject<COPOSGestureControl>::~CComObject<COPOSGestureControl>, COMDAT
; _this$ = ecx

; 2918 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6BCComControlBase@1@@
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	c7 42 4c 00 00
	00 00		 mov	 DWORD PTR [edx+76], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@1@@
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 40 70 00 00
	00 00		 mov	 DWORD PTR [eax+112], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStreamInitImpl@VCOPOSGestureControl@@@1@@
  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	c7 41 74 00 00
	00 00		 mov	 DWORD PTR [ecx+116], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleControlImpl@VCOPOSGestureControl@@@1@@
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	c7 42 78 00 00
	00 00		 mov	 DWORD PTR [edx+120], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleObjectImpl@VCOPOSGestureControl@@@1@@
  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	c7 40 7c 00 00
	00 00		 mov	 DWORD PTR [eax+124], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@1@@
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	c7 81 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+128], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IViewObjectExImpl@VCOPOSGestureControl@@@1@@
  00061	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00064	c7 82 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+132], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@1@@
  0006e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00071	c7 80 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+136], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@1@@
  0007b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	c7 81 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+140], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStorageImpl@VCOPOSGestureControl@@@1@@
  00088	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008b	c7 82 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+144], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@1@@
  00095	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00098	c7 80 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+148], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IQuickActivateImpl@VCOPOSGestureControl@@@1@@
  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	c7 81 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+152], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IDataObjectImpl@VCOPOSGestureControl@@@1@@
  000af	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b2	c7 82 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+156], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@
  000bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	c7 80 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+160], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@1@@
  000c9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cc	c7 81 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+168], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IPropertyNotifySinkCP@VCOPOSGestureControl@@VCComDynamicUnkArray@ATL@@@1@@
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	c7 82 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+180], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@@

; 2919 : 		this->m_dwRef = -(LONG_MAX/2);

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	c7 80 e0 00 00
	00 01 00 00 c0	 mov	 DWORD PTR [eax+224], -1073741823 ; c0000001H

; 2920 : 		this->FinalRelease();

  000f0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000f9	e8 00 00 00 00	 call	 ?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::FinalRelease

; 2921 : #if defined(_ATL_DEBUG_INTERFACES) && !defined(_ATL_STATIC_LIB_IMPL)
; 2922 : 		_AtlDebugInterfacesModule.DeleteNonAddRefThunk(_GetRawUnknown());
; 2923 : #endif
; 2924 : 		_pAtlModule->Unlock();

  000fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  00104	8b 11		 mov	 edx, DWORD PTR [ecx]
  00106	8b f4		 mov	 esi, esp
  00108	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  0010e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00111	ff d0		 call	 eax
  00113	3b f4		 cmp	 esi, esp
  00115	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2925 : 	}

  0011a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011d	e8 00 00 00 00	 call	 ??1COPOSGestureControl@@UAE@XZ ; COPOSGestureControl::~COPOSGestureControl
  00122	5e		 pop	 esi
  00123	83 c4 04	 add	 esp, 4
  00126	3b ec		 cmp	 ebp, esp
  00128	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012d	8b e5		 mov	 esp, ebp
  0012f	5d		 pop	 ebp
  00130	c3		 ret	 0
??1?$CComObject@VCOPOSGestureControl@@@ATL@@UAE@XZ ENDP	; ATL::CComObject<COPOSGestureControl>::~CComObject<COPOSGestureControl>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??0?$CComObject@VCOPOSGestureControl@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$CComObject@VCOPOSGestureControl@@@ATL@@QAE@PAX@Z PROC ; ATL::CComObject<COPOSGestureControl>::CComObject<COPOSGestureControl>, COMDAT
; _this$ = ecx

; 2911 : 	CComObject(_In_opt_ void* = NULL)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2912 : 	{

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ??0COPOSGestureControl@@QAE@XZ ; COPOSGestureControl::COPOSGestureControl
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6BCComControlBase@1@@
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	c7 42 4c 00 00
	00 00		 mov	 DWORD PTR [edx+76], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@1@@
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	c7 40 70 00 00
	00 00		 mov	 DWORD PTR [eax+112], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStreamInitImpl@VCOPOSGestureControl@@@1@@
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	c7 41 74 00 00
	00 00		 mov	 DWORD PTR [ecx+116], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleControlImpl@VCOPOSGestureControl@@@1@@
  00048	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	c7 42 78 00 00
	00 00		 mov	 DWORD PTR [edx+120], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleObjectImpl@VCOPOSGestureControl@@@1@@
  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 7c 00 00
	00 00		 mov	 DWORD PTR [eax+124], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@1@@
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	c7 81 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+128], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IViewObjectExImpl@VCOPOSGestureControl@@@1@@
  00069	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006c	c7 82 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+132], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@1@@
  00076	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00079	c7 80 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+136], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@1@@
  00083	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	c7 81 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+140], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStorageImpl@VCOPOSGestureControl@@@1@@
  00090	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00093	c7 82 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+144], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@1@@
  0009d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a0	c7 80 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+148], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IQuickActivateImpl@VCOPOSGestureControl@@@1@@
  000aa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	c7 81 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+152], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IDataObjectImpl@VCOPOSGestureControl@@@1@@
  000b7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ba	c7 82 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+156], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@
  000c4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	c7 80 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+160], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@1@@
  000d1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	c7 81 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+168], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$IPropertyNotifySinkCP@VCOPOSGestureControl@@VCComDynamicUnkArray@ATL@@@1@@
  000de	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e1	c7 82 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+180], OFFSET ??_7?$CComObject@VCOPOSGestureControl@@@ATL@@6B?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@@

; 2913 : 		_pAtlModule->Lock();

  000eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  000f0	8b 10		 mov	 edx, DWORD PTR [eax]
  000f2	8b f4		 mov	 esi, esp
  000f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  000fa	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000fd	ff d0		 call	 eax
  000ff	3b f4		 cmp	 esi, esp
  00101	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2914 : 	}

  00106	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00109	5e		 pop	 esi
  0010a	83 c4 04	 add	 esp, 4
  0010d	3b ec		 cmp	 ebp, esp
  0010f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00114	8b e5		 mov	 esp, ebp
  00116	5d		 pop	 ebp
  00117	c2 04 00	 ret	 4
??0?$CComObject@VCOPOSGestureControl@@@ATL@@QAE@PAX@Z ENDP ; ATL::CComObject<COPOSGestureControl>::CComObject<COPOSGestureControl>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z PROC ; ATL::CComAggObject<COPOSGestureControl>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAE@XZ ; ATL::CComAggObject<COPOSGestureControl>::~CComAggObject<COPOSGestureControl>
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 11		 je	 SHORT $LN2@scalar
  0001e	68 9c 01 00 00	 push	 412			; 0000019cH
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	51		 push	 ecx
  00027	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002c	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	83 c4 04	 add	 esp, 4
  00035	3b ec		 cmp	 ebp, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
??_G?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z ENDP ; ATL::CComAggObject<COPOSGestureControl>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z PROC ; ATL::CComContainedObject<COPOSGestureControl>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 11		 je	 SHORT $LN2@scalar
  0001e	68 94 01 00 00	 push	 404			; 00000194H
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	51		 push	 ecx
  00027	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002c	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	83 c4 04	 add	 esp, 4
  00035	3b ec		 cmp	 ebp, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
??_G?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAEPAXI@Z ENDP ; ATL::CComContainedObject<COPOSGestureControl>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAE@XZ PROC ; ATL::CComContainedObject<COPOSGestureControl>::~CComContainedObject<COPOSGestureControl>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1COPOSGestureControl@@UAE@XZ ; COPOSGestureControl::~COPOSGestureControl
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAE@XZ ENDP ; ATL::CComContainedObject<COPOSGestureControl>::~CComContainedObject<COPOSGestureControl>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z PROC ; ATL::CComContainedObject<COPOSGestureControl>::QueryInterface, COMDAT

; 3310 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3311 : 		return this->OuterQueryInterface(iid, ppvObject);

  00003	8b 45 10	 mov	 eax, DWORD PTR _ppvObject$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _iid$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00014	e8 00 00 00 00	 call	 ?OuterQueryInterface@CComObjectRootBase@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComObjectRootBase::OuterQueryInterface

; 3312 : 	}

  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	5d		 pop	 ebp
  00021	c2 0c 00	 ret	 12			; 0000000cH
?QueryInterface@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::CComContainedObject<COPOSGestureControl>::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ PROC ; ATL::CComContainedObject<COPOSGestureControl>::Release, COMDAT

; 3304 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3305 : 		return this->OuterRelease();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00006	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  0000c	e8 00 00 00 00	 call	 ?OuterRelease@CComObjectRootBase@ATL@@QAEKXZ ; ATL::CComObjectRootBase::OuterRelease

; 3306 : 	}

  00011	3b ec		 cmp	 ebp, esp
  00013	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?Release@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ENDP ; ATL::CComContainedObject<COPOSGestureControl>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ PROC ; ATL::CComContainedObject<COPOSGestureControl>::AddRef, COMDAT

; 3300 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3301 : 		return this->OuterAddRef();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00006	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  0000c	e8 00 00 00 00	 call	 ?OuterAddRef@CComObjectRootBase@ATL@@QAEKXZ ; ATL::CComObjectRootBase::OuterAddRef

; 3302 : 	}

  00011	3b ec		 cmp	 ebp, esp
  00013	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?AddRef@?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ENDP ; ATL::CComContainedObject<COPOSGestureControl>::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??0?$CComContainedObject@VCOPOSGestureControl@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pv$ = 8						; size = 4
??0?$CComContainedObject@VCOPOSGestureControl@@@ATL@@QAE@PAX@Z PROC ; ATL::CComContainedObject<COPOSGestureControl>::CComContainedObject<COPOSGestureControl>, COMDAT
; _this$ = ecx

; 3287 : 	CComContainedObject(_In_opt_ void* pv)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3288 : 	{

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0COPOSGestureControl@@QAE@XZ ; COPOSGestureControl::COPOSGestureControl
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6BCComControlBase@1@@
  00029	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002c	c7 42 4c 00 00
	00 00		 mov	 DWORD PTR [edx+76], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@1@@
  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 70 00 00
	00 00		 mov	 DWORD PTR [eax+112], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStreamInitImpl@VCOPOSGestureControl@@@1@@
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	c7 41 74 00 00
	00 00		 mov	 DWORD PTR [ecx+116], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IOleControlImpl@VCOPOSGestureControl@@@1@@
  00047	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004a	c7 42 78 00 00
	00 00		 mov	 DWORD PTR [edx+120], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IOleObjectImpl@VCOPOSGestureControl@@@1@@
  00051	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00054	c7 40 7c 00 00
	00 00		 mov	 DWORD PTR [eax+124], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@1@@
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	c7 81 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+128], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IViewObjectExImpl@VCOPOSGestureControl@@@1@@
  00068	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	c7 82 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+132], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@1@@
  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	c7 80 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+136], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@1@@
  00082	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	c7 81 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+140], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IPersistStorageImpl@VCOPOSGestureControl@@@1@@
  0008f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00092	c7 82 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+144], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@1@@
  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	c7 80 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+148], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IQuickActivateImpl@VCOPOSGestureControl@@@1@@
  000a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	c7 81 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+152], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IDataObjectImpl@VCOPOSGestureControl@@@1@@
  000b6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b9	c7 82 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+156], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c6	c7 80 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+160], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@1@@
  000d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	c7 81 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+168], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$IPropertyNotifySinkCP@VCOPOSGestureControl@@VCComDynamicUnkArray@ATL@@@1@@
  000dd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e0	c7 82 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+180], OFFSET ??_7?$CComContainedObject@VCOPOSGestureControl@@@ATL@@6B?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@@

; 3289 : 		this->m_pOuterUnknown = (IUnknown*)pv;

  000ea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ed	8b 4d 08	 mov	 ecx, DWORD PTR _pv$[ebp]
  000f0	89 88 e0 00 00
	00		 mov	 DWORD PTR [eax+224], ecx

; 3290 : 	}

  000f6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f9	83 c4 04	 add	 esp, 4
  000fc	3b ec		 cmp	 ebp, esp
  000fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c2 04 00	 ret	 4
??0?$CComContainedObject@VCOPOSGestureControl@@@ATL@@QAE@PAX@Z ENDP ; ATL::CComContainedObject<COPOSGestureControl>::CComContainedObject<COPOSGestureControl>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?QueryInterface@?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_hRes$ = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z PROC ; ATL::CComAggObject<COPOSGestureControl>::QueryInterface, COMDAT

; 3400 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 3401 : 		ATLASSERT(ppvObject != NULL);

  0000c	83 7d 10 00	 cmp	 DWORD PTR _ppvObject$[ebp], 0
  00010	75 26		 jne	 SHORT $LN6@QueryInter
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@IINBGKAE@?$AAp?$AAp?$AAv?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0001c	6a 00		 push	 0
  0001e	68 49 0d 00 00	 push	 3401			; 00000d49H
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00028	6a 02		 push	 2
  0002a	e8 00 00 00 00	 call	 __CrtDbgReportW
  0002f	83 c4 18	 add	 esp, 24			; 00000018H
  00032	83 f8 01	 cmp	 eax, 1
  00035	75 01		 jne	 SHORT $LN6@QueryInter
  00037	cc		 int	 3
$LN6@QueryInter:

; 3402 : 		if (ppvObject == NULL)

  00038	83 7d 10 00	 cmp	 DWORD PTR _ppvObject$[ebp], 0
  0003c	75 07		 jne	 SHORT $LN2@QueryInter

; 3403 : 			return E_POINTER;

  0003e	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00043	eb 57		 jmp	 SHORT $LN1@QueryInter
$LN2@QueryInter:

; 3404 : 		*ppvObject = NULL;

  00045	8b 4d 10	 mov	 ecx, DWORD PTR _ppvObject$[ebp]
  00048	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 3405 : 
; 3406 : 		HRESULT hRes = S_OK;

  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _hRes$[ebp], 0

; 3407 : 		if (InlineIsEqualUnknown(iid))

  00055	8b 55 0c	 mov	 edx, DWORD PTR _iid$[ebp]
  00058	52		 push	 edx
  00059	e8 00 00 00 00	 call	 ?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z ; ATL::InlineIsEqualUnknown
  0005e	85 c0		 test	 eax, eax
  00060	74 21		 je	 SHORT $LN3@QueryInter

; 3408 : 		{
; 3409 : 			*ppvObject = (void*)(IUnknown*)this;

  00062	8b 45 10	 mov	 eax, DWORD PTR _ppvObject$[ebp]
  00065	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 08		 mov	 DWORD PTR [eax], ecx

; 3410 : 			AddRef();

  0006a	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0006d	8b 02		 mov	 eax, DWORD PTR [edx]
  0006f	8b f4		 mov	 esi, esp
  00071	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	51		 push	 ecx
  00075	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00078	ff d2		 call	 edx
  0007a	3b f4		 cmp	 esi, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 3411 : #if defined(_ATL_DEBUG_INTERFACES) && !defined(_ATL_STATIC_LIB_IMPL)
; 3412 : 			_AtlDebugInterfacesModule.AddThunk((IUnknown**)ppvObject, (LPCTSTR)contained::_GetEntries()[-1].dw, iid);
; 3413 : #endif // _ATL_DEBUG_INTERFACES
; 3414 : 		}

  00081	eb 16		 jmp	 SHORT $LN4@QueryInter
$LN3@QueryInter:

; 3415 : 		else
; 3416 : 			hRes = m_contained._InternalQueryInterface(iid, ppvObject);

  00083	8b 45 10	 mov	 eax, DWORD PTR _ppvObject$[ebp]
  00086	50		 push	 eax
  00087	8b 4d 0c	 mov	 ecx, DWORD PTR _iid$[ebp]
  0008a	51		 push	 ecx
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	83 c1 08	 add	 ecx, 8
  00091	e8 00 00 00 00	 call	 ?_InternalQueryInterface@COPOSGestureControl@@QAEJABU_GUID@@PAPAX@Z ; COPOSGestureControl::_InternalQueryInterface
  00096	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN4@QueryInter:

; 3417 : 		return hRes;

  00099	8b 45 fc	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@QueryInter:

; 3418 : 	}

  0009c	5e		 pop	 esi
  0009d	83 c4 04	 add	 esp, 4
  000a0	3b ec		 cmp	 ebp, esp
  000a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 0c 00	 ret	 12			; 0000000cH
?QueryInterface@?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::CComAggObject<COPOSGestureControl>::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Release@?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAGKXZ
_TEXT	SEGMENT
tv80 = -24						; size = 4
$T1 = -20						; size = 4
_lock$2 = -9						; size = 1
_l$ = -4						; size = 4
_this$ = 8						; size = 4
?Release@?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAGKXZ PROC ; ATL::CComAggObject<COPOSGestureControl>::Release, COMDAT

; 3388 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3389 : 		ULONG l = this->InternalRelease();

  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 04	 add	 ecx, 4
  00024	e8 00 00 00 00	 call	 ?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease
  00029	89 45 fc	 mov	 DWORD PTR _l$[ebp], eax

; 3390 : 		if (l == 0)

  0002c	83 7d fc 00	 cmp	 DWORD PTR _l$[ebp], 0
  00030	75 40		 jne	 SHORT $LN2@Release

; 3391 : 		{
; 3392 : 			ModuleLockHelper lock;

  00032	8d 4d f7	 lea	 ecx, DWORD PTR _lock$2[ebp]
  00035	e8 00 00 00 00	 call	 ??0ModuleLockHelper@ATL@@QAE@XZ ; ATL::ModuleLockHelper::ModuleLockHelper

; 3393 : 			delete this;

  0003a	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  00040	83 7d ec 00	 cmp	 DWORD PTR $T1[ebp], 0
  00044	74 1d		 je	 SHORT $LN4@Release
  00046	8b f4		 mov	 esi, esp
  00048	6a 01		 push	 1
  0004a	8b 4d ec	 mov	 ecx, DWORD PTR $T1[ebp]
  0004d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004f	8b 4d ec	 mov	 ecx, DWORD PTR $T1[ebp]
  00052	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00055	ff d0		 call	 eax
  00057	3b f4		 cmp	 esi, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	89 45 e8	 mov	 DWORD PTR tv80[ebp], eax
  00061	eb 07		 jmp	 SHORT $LN5@Release
$LN4@Release:
  00063	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN5@Release:

; 3394 : 		}

  0006a	8d 4d f7	 lea	 ecx, DWORD PTR _lock$2[ebp]
  0006d	e8 00 00 00 00	 call	 ??1ModuleLockHelper@ATL@@QAE@XZ ; ATL::ModuleLockHelper::~ModuleLockHelper
$LN2@Release:

; 3395 : 		return l;

  00072	8b 45 fc	 mov	 eax, DWORD PTR _l$[ebp]

; 3396 : 	}

  00075	52		 push	 edx
  00076	8b cd		 mov	 ecx, ebp
  00078	50		 push	 eax
  00079	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@Release
  0007f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00084	58		 pop	 eax
  00085	5a		 pop	 edx
  00086	5e		 pop	 esi
  00087	83 c4 18	 add	 esp, 24			; 00000018H
  0008a	3b ec		 cmp	 ebp, esp
  0008c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c2 04 00	 ret	 4
  00097	90		 npad	 1
$LN8@Release:
  00098	01 00 00 00	 DD	 1
  0009c	00 00 00 00	 DD	 $LN7@Release
$LN7@Release:
  000a0	f7 ff ff ff	 DD	 -9			; fffffff7H
  000a4	01 00 00 00	 DD	 1
  000a8	00 00 00 00	 DD	 $LN6@Release
$LN6@Release:
  000ac	6c		 DB	 108			; 0000006cH
  000ad	6f		 DB	 111			; 0000006fH
  000ae	63		 DB	 99			; 00000063H
  000af	6b		 DB	 107			; 0000006bH
  000b0	00		 DB	 0
?Release@?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ENDP ; ATL::CComAggObject<COPOSGestureControl>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?AddRef@?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAGKXZ PROC ; ATL::CComAggObject<COPOSGestureControl>::AddRef, COMDAT

; 3384 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3385 : 		return this->InternalAddRef();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00006	83 c1 04	 add	 ecx, 4
  00009	e8 00 00 00 00	 call	 ?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef

; 3386 : 	}

  0000e	3b ec		 cmp	 ebp, esp
  00010	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?AddRef@?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAGKXZ ENDP ; ATL::CComAggObject<COPOSGestureControl>::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAE@XZ PROC ; ATL::CComAggObject<COPOSGestureControl>::~CComAggObject<COPOSGestureControl>, COMDAT
; _this$ = ecx

; 3374 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CComAggObject@VCOPOSGestureControl@@@ATL@@6B@

; 3375 : 		this->m_dwRef = -(LONG_MAX/2);

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	c7 41 04 01 00
	00 c0		 mov	 DWORD PTR [ecx+4], -1073741823 ; c0000001H

; 3376 : 		FinalRelease();

  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?FinalRelease@?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAEXXZ ; ATL::CComAggObject<COPOSGestureControl>::FinalRelease

; 3377 : #if defined(_ATL_DEBUG_INTERFACES) && !defined(_ATL_STATIC_LIB_IMPL)
; 3378 : 		_AtlDebugInterfacesModule.DeleteNonAddRefThunk(this);
; 3379 : #endif
; 3380 : 		_pAtlModule->Unlock();

  0002a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  00030	8b 02		 mov	 eax, DWORD PTR [edx]
  00032	8b f4		 mov	 esi, esp
  00034	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  0003a	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0003d	ff d2		 call	 edx
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 3381 : 	}

  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	83 c1 08	 add	 ecx, 8
  0004c	e8 00 00 00 00	 call	 ??1?$CComContainedObject@VCOPOSGestureControl@@@ATL@@UAE@XZ
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	83 c1 04	 add	 ecx, 4
  00057	e8 00 00 00 00	 call	 ??1?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::~CComObjectRootEx<ATL::CComSingleThreadModel>
  0005c	5e		 pop	 esi
  0005d	83 c4 04	 add	 esp, 4
  00060	3b ec		 cmp	 ebp, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
??1?$CComAggObject@VCOPOSGestureControl@@@ATL@@UAE@XZ ENDP ; ATL::CComAggObject<COPOSGestureControl>::~CComAggObject<COPOSGestureControl>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?FinalRelease@?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FinalRelease@?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAEXXZ PROC ; ATL::CComAggObject<COPOSGestureControl>::FinalRelease, COMDAT
; _this$ = ecx

; 3367 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3368 : 		_MyCComObjectRootEx::FinalRelease();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 04	 add	 ecx, 4
  00014	e8 00 00 00 00	 call	 ?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::FinalRelease

; 3369 : 		m_contained.FinalRelease();

  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	81 c1 e8 00 00
	00		 add	 ecx, 232		; 000000e8H
  00022	e8 00 00 00 00	 call	 ?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::FinalRelease

; 3370 : 	}

  00027	83 c4 04	 add	 esp, 4
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?FinalRelease@?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAEXXZ ENDP ; ATL::CComAggObject<COPOSGestureControl>::FinalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?FinalConstruct@?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FinalConstruct@?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAEJXZ PROC ; ATL::CComAggObject<COPOSGestureControl>::FinalConstruct, COMDAT
; _this$ = ecx

; 3362 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3363 : 		_MyCComObjectRootEx::FinalConstruct();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 04	 add	 ecx, 4
  00014	e8 00 00 00 00	 call	 ?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::FinalConstruct

; 3364 : 		return m_contained.FinalConstruct();

  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	83 c1 08	 add	 ecx, 8
  0001f	e8 00 00 00 00	 call	 ?FinalConstruct@COPOSGestureControl@@QAEJXZ ; COPOSGestureControl::FinalConstruct

; 3365 : 	}

  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?FinalConstruct@?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAEJXZ ENDP ; ATL::CComAggObject<COPOSGestureControl>::FinalConstruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?_AtlInitialConstruct@?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
?_AtlInitialConstruct@?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAEJXZ PROC ; ATL::CComAggObject<COPOSGestureControl>::_AtlInitialConstruct, COMDAT
; _this$ = ecx

; 3351 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3352 : 		HRESULT hr = m_contained._AtlInitialConstruct();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	81 c1 e8 00 00
	00		 add	 ecx, 232		; 000000e8H
  00020	e8 00 00 00 00	 call	 ?_AtlInitialConstruct@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEJXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::_AtlInitialConstruct
  00025	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3353 : 		if (SUCCEEDED(hr))

  00028	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0002c	7c 0e		 jl	 SHORT $LN2@AtlInitial

; 3354 : 		{
; 3355 : 			hr = _MyCComObjectRootEx::_AtlInitialConstruct();

  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 04	 add	 ecx, 4
  00034	e8 00 00 00 00	 call	 ?_AtlInitialConstruct@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEJXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::_AtlInitialConstruct
  00039	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN2@AtlInitial:

; 3356 : 		}
; 3357 : 		return hr;

  0003c	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]

; 3358 : 	}

  0003f	83 c4 08	 add	 esp, 8
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?_AtlInitialConstruct@?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAEJXZ ENDP ; ATL::CComAggObject<COPOSGestureControl>::_AtlInitialConstruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??0?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pv$ = 8						; size = 4
??0?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAE@PAX@Z PROC ; ATL::CComAggObject<COPOSGestureControl>::CComAggObject<COPOSGestureControl>, COMDAT
; _this$ = ecx

; 3347 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ??0IUnknown@@QAE@XZ
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	83 c1 04	 add	 ecx, 4
  0001d	e8 00 00 00 00	 call	 ??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CComAggObject@VCOPOSGestureControl@@@ATL@@6B@

; 3346 : 		m_contained(pv)

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _pv$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 c1 08	 add	 ecx, 8
  00035	e8 00 00 00 00	 call	 ??0?$CComContainedObject@VCOPOSGestureControl@@@ATL@@QAE@PAX@Z ; ATL::CComContainedObject<COPOSGestureControl>::CComContainedObject<COPOSGestureControl>

; 3348 : 		_pAtlModule->Lock();

  0003a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  00040	8b 02		 mov	 eax, DWORD PTR [edx]
  00042	8b f4		 mov	 esi, esp
  00044	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  0004a	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0004d	ff d2		 call	 edx
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 3349 : 	}

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	5e		 pop	 esi
  0005a	83 c4 04	 add	 esp, 4
  0005d	3b ec		 cmp	 ebp, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c2 04 00	 ret	 4
??0?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAE@PAX@Z ENDP ; ATL::CComAggObject<COPOSGestureControl>::CComAggObject<COPOSGestureControl>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlAddThrow@K@ATL@@YAKKK@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_tResult$ = -8						; size = 4
_tLeft$ = 8						; size = 4
_tRight$ = 12						; size = 4
??$AtlAddThrow@K@ATL@@YAKKK@Z PROC			; ATL::AtlAddThrow<unsigned long>, COMDAT

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 194  : 	T tResult;
; 195  : 	HRESULT hr=AtlAdd(&tResult, tLeft, tRight);

  00017	8b 45 0c	 mov	 eax, DWORD PTR _tRight$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _tLeft$[ebp]
  0001e	51		 push	 ecx
  0001f	8d 55 f8	 lea	 edx, DWORD PTR _tResult$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$AtlAdd@K@ATL@@YAJPAKKK@Z ; ATL::AtlAdd<unsigned long>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002b	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax

; 196  : 	if(FAILED(hr))

  0002e	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00032	7d 09		 jge	 SHORT $LN2@AtlAddThro

; 197  : 	{
; 198  : 		AtlThrow(hr);

  00034	8b 45 f0	 mov	 eax, DWORD PTR _hr$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@AtlAddThro:

; 199  : 	}
; 200  : 	return tResult;

  0003d	8b 45 f8	 mov	 eax, DWORD PTR _tResult$[ebp]
$LN3@AtlAddThro:

; 201  : }

  00040	52		 push	 edx
  00041	8b cd		 mov	 ecx, ebp
  00043	50		 push	 eax
  00044	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@AtlAddThro
  0004a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004f	58		 pop	 eax
  00050	5a		 pop	 edx
  00051	83 c4 10	 add	 esp, 16			; 00000010H
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
  0005f	90		 npad	 1
$LN6@AtlAddThro:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN5@AtlAddThro
$LN5@AtlAddThro:
  00068	f8 ff ff ff	 DD	 -8			; fffffff8H
  0006c	04 00 00 00	 DD	 4
  00070	00 00 00 00	 DD	 $LN4@AtlAddThro
$LN4@AtlAddThro:
  00074	74		 DB	 116			; 00000074H
  00075	52		 DB	 82			; 00000052H
  00076	65		 DB	 101			; 00000065H
  00077	73		 DB	 115			; 00000073H
  00078	75		 DB	 117			; 00000075H
  00079	6c		 DB	 108			; 0000006cH
  0007a	74		 DB	 116			; 00000074H
  0007b	00		 DB	 0
??$AtlAddThrow@K@ATL@@YAKKK@Z ENDP			; ATL::AtlAddThrow<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ PROC ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData, COMDAT
; _this$ = ecx

; 666  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 667  : 			return (this + 1);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 08	 add	 eax, 8

; 668  : 		}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiplyThrow@I@ATL@@YAIII@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_tResult$ = -8						; size = 4
_tLeft$ = 8						; size = 4
_tRight$ = 12						; size = 4
??$AtlMultiplyThrow@I@ATL@@YAIII@Z PROC			; ATL::AtlMultiplyThrow<unsigned int>, COMDAT

; 179  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 180  : 	T tResult;
; 181  : 	HRESULT hr=AtlMultiply(&tResult, tLeft, tRight);

  00017	8b 45 0c	 mov	 eax, DWORD PTR _tRight$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _tLeft$[ebp]
  0001e	51		 push	 ecx
  0001f	8d 55 f8	 lea	 edx, DWORD PTR _tResult$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$AtlMultiply@I@ATL@@YAJPAIII@Z ; ATL::AtlMultiply<unsigned int>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002b	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax

; 182  : 	if(FAILED(hr))

  0002e	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00032	7d 09		 jge	 SHORT $LN2@AtlMultipl

; 183  : 	{
; 184  : 		AtlThrow(hr);

  00034	8b 45 f0	 mov	 eax, DWORD PTR _hr$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@AtlMultipl:

; 185  : 	}
; 186  : 	return tResult;

  0003d	8b 45 f8	 mov	 eax, DWORD PTR _tResult$[ebp]
$LN3@AtlMultipl:

; 187  : }

  00040	52		 push	 edx
  00041	8b cd		 mov	 ecx, ebp
  00043	50		 push	 eax
  00044	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@AtlMultipl
  0004a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004f	58		 pop	 eax
  00050	5a		 pop	 edx
  00051	83 c4 10	 add	 esp, 16			; 00000010H
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
  0005f	90		 npad	 1
$LN6@AtlMultipl:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN5@AtlMultipl
$LN5@AtlMultipl:
  00068	f8 ff ff ff	 DD	 -8			; fffffff8H
  0006c	04 00 00 00	 DD	 4
  00070	00 00 00 00	 DD	 $LN4@AtlMultipl
$LN4@AtlMultipl:
  00074	74		 DB	 116			; 00000074H
  00075	52		 DB	 82			; 00000052H
  00076	65		 DB	 101			; 00000065H
  00077	73		 DB	 115			; 00000073H
  00078	75		 DB	 117			; 00000075H
  00079	6c		 DB	 108			; 0000006cH
  0007a	74		 DB	 116			; 00000074H
  0007b	00		 DB	 0
??$AtlMultiplyThrow@I@ATL@@YAIII@Z ENDP			; ATL::AtlMultiplyThrow<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAE@XZ ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::~CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 1c		 push	 28			; 0000001cH
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_G?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z
_TEXT	SEGMENT
tv166 = -24						; size = 4
tv85 = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_p$ = -8						; size = 4
_hRes$ = -4						; size = 4
_pp$ = 8						; size = 4
?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::CreateInstance, COMDAT

; 2963 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2964 : 	ATLASSERT(pp != NULL);

  0001e	83 7d 08 00	 cmp	 DWORD PTR _pp$[ebp], 0
  00022	75 26		 jne	 SHORT $LN8@CreateInst
  00024	68 00 00 00 00	 push	 OFFSET $SG198320
  00029	68 00 00 00 00	 push	 OFFSET $SG198321
  0002e	6a 00		 push	 0
  00030	68 94 0b 00 00	 push	 2964			; 00000b94H
  00035	68 00 00 00 00	 push	 OFFSET $SG198322
  0003a	6a 02		 push	 2
  0003c	e8 00 00 00 00	 call	 __CrtDbgReportW
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN8@CreateInst
  00049	cc		 int	 3
$LN8@CreateInst:

; 2965 : 	if (pp == NULL)

  0004a	83 7d 08 00	 cmp	 DWORD PTR _pp$[ebp], 0
  0004e	75 0a		 jne	 SHORT $LN2@CreateInst

; 2966 : 		return E_POINTER;

  00050	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00055	e9 f6 00 00 00	 jmp	 $LN1@CreateInst
$LN2@CreateInst:

; 2967 : 	*pp = NULL;

  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _pp$[ebp]
  0005d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 2968 : 
; 2969 : 	HRESULT hRes = E_OUTOFMEMORY;

  00063	c7 45 fc 0e 00
	07 80		 mov	 DWORD PTR _hRes$[ebp], -2147024882 ; 8007000eH

; 2970 : 	CComObject<Base>* p = NULL;

  0006a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], 0

; 2971 : 	ATLTRY(p = _ATL_NEW CComObject<Base>())

  00071	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00076	6a 1c		 push	 28			; 0000001cH
  00078	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  0007d	83 c4 08	 add	 esp, 8
  00080	89 45 f4	 mov	 DWORD PTR $T2[ebp], eax
  00083	83 7d f4 00	 cmp	 DWORD PTR $T2[ebp], 0
  00087	74 0f		 je	 SHORT $LN9@CreateInst
  00089	6a 00		 push	 0
  0008b	8b 4d f4	 mov	 ecx, DWORD PTR $T2[ebp]
  0008e	e8 00 00 00 00	 call	 ??0?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >
  00093	89 45 ec	 mov	 DWORD PTR tv85[ebp], eax
  00096	eb 07		 jmp	 SHORT $LN10@CreateInst
$LN9@CreateInst:
  00098	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@CreateInst:
  0009f	8b 55 ec	 mov	 edx, DWORD PTR tv85[ebp]
  000a2	89 55 f8	 mov	 DWORD PTR _p$[ebp], edx

; 2972 : 	if (p != NULL)

  000a5	83 7d f8 00	 cmp	 DWORD PTR _p$[ebp], 0
  000a9	0f 84 96 00 00
	00		 je	 $LN3@CreateInst

; 2973 : 	{
; 2974 : 		p->SetVoid(NULL);

  000af	6a 00		 push	 0
  000b1	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000b4	83 c1 18	 add	 ecx, 24			; 00000018H
  000b7	e8 00 00 00 00	 call	 ?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z ; ATL::CComObjectRootBase::SetVoid

; 2975 : 		p->InternalFinalConstructAddRef();

  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000bf	83 c1 18	 add	 ecx, 24			; 00000018H
  000c2	e8 00 00 00 00	 call	 ?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructAddRef

; 2976 : 		hRes = p->_AtlInitialConstruct();

  000c7	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000ca	83 c1 18	 add	 ecx, 24			; 00000018H
  000cd	e8 00 00 00 00	 call	 ?_AtlInitialConstruct@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEJXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::_AtlInitialConstruct
  000d2	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax

; 2977 : 		if (SUCCEEDED(hRes))

  000d5	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  000d9	7c 0e		 jl	 SHORT $LN4@CreateInst

; 2978 : 			hRes = p->FinalConstruct();

  000db	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000de	83 c1 18	 add	 ecx, 24			; 00000018H
  000e1	e8 00 00 00 00	 call	 ?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::FinalConstruct
  000e6	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN4@CreateInst:

; 2979 : 		if (SUCCEEDED(hRes))

  000e9	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  000ed	7c 0e		 jl	 SHORT $LN5@CreateInst

; 2980 : 			hRes = p->_AtlFinalConstruct();

  000ef	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000f2	83 c1 18	 add	 ecx, 24			; 00000018H
  000f5	e8 00 00 00 00	 call	 ?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::_AtlFinalConstruct
  000fa	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN5@CreateInst:

; 2981 : 		p->InternalFinalConstructRelease();

  000fd	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  00100	83 c1 18	 add	 ecx, 24			; 00000018H
  00103	e8 00 00 00 00	 call	 ?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructRelease

; 2982 : 		if (hRes != S_OK)

  00108	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  0010c	74 37		 je	 SHORT $LN3@CreateInst

; 2983 : 		{
; 2984 : 			delete p;

  0010e	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  00111	89 45 f0	 mov	 DWORD PTR $T1[ebp], eax
  00114	83 7d f0 00	 cmp	 DWORD PTR $T1[ebp], 0
  00118	74 1d		 je	 SHORT $LN11@CreateInst
  0011a	8b f4		 mov	 esi, esp
  0011c	6a 01		 push	 1
  0011e	8b 4d f0	 mov	 ecx, DWORD PTR $T1[ebp]
  00121	8b 11		 mov	 edx, DWORD PTR [ecx]
  00123	8b 4d f0	 mov	 ecx, DWORD PTR $T1[ebp]
  00126	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00129	ff d0		 call	 eax
  0012b	3b f4		 cmp	 esi, esp
  0012d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00132	89 45 e8	 mov	 DWORD PTR tv166[ebp], eax
  00135	eb 07		 jmp	 SHORT $LN12@CreateInst
$LN11@CreateInst:
  00137	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN12@CreateInst:

; 2985 : 			p = NULL;

  0013e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], 0
$LN3@CreateInst:

; 2986 : 		}
; 2987 : 	}
; 2988 : 	*pp = p;

  00145	8b 4d 08	 mov	 ecx, DWORD PTR _pp$[ebp]
  00148	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  0014b	89 11		 mov	 DWORD PTR [ecx], edx

; 2989 : 	return hRes;

  0014d	8b 45 fc	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@CreateInst:

; 2990 : }

  00150	5e		 pop	 esi
  00151	83 c4 18	 add	 esp, 24			; 00000018H
  00154	3b ec		 cmp	 ebp, esp
  00156	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015b	8b e5		 mov	 esp, ebp
  0015d	5d		 pop	 ebp
  0015e	c2 04 00	 ret	 4
?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::CreateInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::QueryInterface, COMDAT

; 2947 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2948 : 		return this->_InternalQueryInterface(iid, ppvObject);

  00003	8b 45 10	 mov	 eax, DWORD PTR _ppvObject$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _iid$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_InternalQueryInterface@?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::_InternalQueryInterface

; 2949 : 	}

  00013	3b ec		 cmp	 ebp, esp
  00015	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001a	5d		 pop	 ebp
  0001b	c2 0c 00	 ret	 12			; 0000000cH
?QueryInterface@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Release@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
tv84 = -24						; size = 4
$T1 = -20						; size = 4
_lock$2 = -9						; size = 1
_l$ = -4						; size = 4
_this$ = 8						; size = 4
?Release@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::Release, COMDAT

; 2933 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2934 : 		ULONG l = this->InternalRelease();

  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 18	 add	 ecx, 24			; 00000018H
  00024	e8 00 00 00 00	 call	 ?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease
  00029	89 45 fc	 mov	 DWORD PTR _l$[ebp], eax

; 2935 : 		if (l == 0)

  0002c	83 7d fc 00	 cmp	 DWORD PTR _l$[ebp], 0
  00030	75 40		 jne	 SHORT $LN2@Release

; 2936 : 		{
; 2937 : 			// Lock the module to avoid DLL unload when destruction of member variables take a long time
; 2938 : 			ModuleLockHelper lock;

  00032	8d 4d f7	 lea	 ecx, DWORD PTR _lock$2[ebp]
  00035	e8 00 00 00 00	 call	 ??0ModuleLockHelper@ATL@@QAE@XZ ; ATL::ModuleLockHelper::ModuleLockHelper

; 2939 : 			delete this;

  0003a	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  00040	83 7d ec 00	 cmp	 DWORD PTR $T1[ebp], 0
  00044	74 1d		 je	 SHORT $LN4@Release
  00046	8b f4		 mov	 esi, esp
  00048	6a 01		 push	 1
  0004a	8b 4d ec	 mov	 ecx, DWORD PTR $T1[ebp]
  0004d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004f	8b 4d ec	 mov	 ecx, DWORD PTR $T1[ebp]
  00052	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00055	ff d0		 call	 eax
  00057	3b f4		 cmp	 esi, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	89 45 e8	 mov	 DWORD PTR tv84[ebp], eax
  00061	eb 07		 jmp	 SHORT $LN5@Release
$LN4@Release:
  00063	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN5@Release:

; 2940 : 		}

  0006a	8d 4d f7	 lea	 ecx, DWORD PTR _lock$2[ebp]
  0006d	e8 00 00 00 00	 call	 ??1ModuleLockHelper@ATL@@QAE@XZ ; ATL::ModuleLockHelper::~ModuleLockHelper
$LN2@Release:

; 2941 : 		return l;

  00072	8b 45 fc	 mov	 eax, DWORD PTR _l$[ebp]

; 2942 : 	}

  00075	52		 push	 edx
  00076	8b cd		 mov	 ecx, ebp
  00078	50		 push	 eax
  00079	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@Release
  0007f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00084	58		 pop	 eax
  00085	5a		 pop	 edx
  00086	5e		 pop	 esi
  00087	83 c4 18	 add	 esp, 24			; 00000018H
  0008a	3b ec		 cmp	 ebp, esp
  0008c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c2 04 00	 ret	 4
  00097	90		 npad	 1
$LN8@Release:
  00098	01 00 00 00	 DD	 1
  0009c	00 00 00 00	 DD	 $LN7@Release
$LN7@Release:
  000a0	f7 ff ff ff	 DD	 -9			; fffffff7H
  000a4	01 00 00 00	 DD	 1
  000a8	00 00 00 00	 DD	 $LN6@Release
$LN6@Release:
  000ac	6c		 DB	 108			; 0000006cH
  000ad	6f		 DB	 111			; 0000006fH
  000ae	63		 DB	 99			; 00000063H
  000af	6b		 DB	 107			; 0000006bH
  000b0	00		 DB	 0
?Release@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?AddRef@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::AddRef, COMDAT

; 2929 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2930 : 		return this->InternalAddRef();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00006	83 c1 18	 add	 ecx, 24			; 00000018H
  00009	e8 00 00 00 00	 call	 ?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef

; 2931 : 	}

  0000e	3b ec		 cmp	 ebp, esp
  00010	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?AddRef@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAE@XZ PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::~CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >, COMDAT
; _this$ = ecx

; 2918 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@

; 2919 : 		this->m_dwRef = -(LONG_MAX/2);

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	c7 41 18 01 00
	00 c0		 mov	 DWORD PTR [ecx+24], -1073741823 ; c0000001H

; 2920 : 		this->FinalRelease();

  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	83 c1 18	 add	 ecx, 24			; 00000018H
  00028	e8 00 00 00 00	 call	 ?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::FinalRelease

; 2921 : #if defined(_ATL_DEBUG_INTERFACES) && !defined(_ATL_STATIC_LIB_IMPL)
; 2922 : 		_AtlDebugInterfacesModule.DeleteNonAddRefThunk(_GetRawUnknown());
; 2923 : #endif
; 2924 : 		_pAtlModule->Unlock();

  0002d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  00033	8b 02		 mov	 eax, DWORD PTR [edx]
  00035	8b f4		 mov	 esi, esp
  00037	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  0003d	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00040	ff d2		 call	 edx
  00042	3b f4		 cmp	 esi, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2925 : 	}

  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ??1?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@UAE@XZ
  00051	5e		 pop	 esi
  00052	83 c4 04	 add	 esp, 4
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
??1?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAE@XZ ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::~CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??0?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z PROC ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >, COMDAT
; _this$ = ecx

; 2911 : 	CComObject(_In_opt_ void* = NULL)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2912 : 	{

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ??0?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@

; 2913 : 		_pAtlModule->Lock();

  00020	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	8b f4		 mov	 esi, esp
  0002a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  00030	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00033	ff d0		 call	 eax
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2914 : 	}

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5e		 pop	 esi
  00040	83 c4 04	 add	 esp, 4
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
??0?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z ENDP ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@UAE@XZ PROC ; ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::~CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 18	 add	 ecx, 24			; 00000018H
  00014	e8 00 00 00 00	 call	 ??1?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::~CComObjectRootEx<ATL::CComSingleThreadModel>
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??1?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAE@XZ ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::~CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
??1?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@UAE@XZ ENDP ; ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::~CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ PROC ; ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@QAE@XZ ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 18	 add	 ecx, 24			; 00000018H
  0001c	e8 00 00 00 00	 call	 ??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??0?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ ENDP ; ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?_GetEntries@?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT
?_GetEntries@?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ PROC ; ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::_GetEntries, COMDAT

; 5671 : 	BEGIN_COM_MAP(_CComEnum)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 5672 : 		COM_INTERFACE_ENTRY_IID(*piid, _CComEnumBase)
; 5673 : 	END_COM_MAP()

  00003	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00008	c1 e0 00	 shl	 eax, 0
  0000b	05 00 00 00 00	 add	 eax, OFFSET ?_entries@?1??_GetEntries@?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B ; `ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::_GetEntries'::`2'::_entries
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?_GetEntries@?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ENDP ; ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::_GetEntries
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?_InternalQueryInterface@?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iid$ = 8						; size = 4
_ppvObject$ = 12					; size = 4
?_InternalQueryInterface@?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z PROC ; ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::_InternalQueryInterface, COMDAT
; _this$ = ecx

; 5671 : 	BEGIN_COM_MAP(_CComEnum)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _ppvObject$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _iid$[ebp]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ?_GetEntries@?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ; ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::_GetEntries
  0001b	50		 push	 eax
  0001c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001f	52		 push	 edx
  00020	e8 00 00 00 00	 call	 ?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z ; ATL::CComObjectRootBase::InternalQueryInterface
  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 08 00	 ret	 8
?_InternalQueryInterface@?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z ENDP ; ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::_InternalQueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Init@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@QAEJPAPAUIConnectionPoint@@0PAUIUnknown@@W4CComEnumFlags@2@@Z
_TEXT	SEGMENT
tv140 = -28						; size = 4
$T1 = -24						; size = 4
$T2 = -20						; size = 4
_p$3 = -16						; size = 4
_hr$4 = -12						; size = 4
_i$5 = -8						; size = 4
_this$ = -4						; size = 4
_begin$ = 8						; size = 4
_end$ = 12						; size = 4
_pUnk$ = 16						; size = 4
_flags$ = 20						; size = 4
?Init@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@QAEJPAPAUIConnectionPoint@@0PAUIUnknown@@W4CComEnumFlags@2@@Z PROC ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::Init, COMDAT
; _this$ = ecx

; 5627 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00011	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00014	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00017	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001a	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001d	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00020	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5628 : 	if (flags == AtlFlagCopy)

  00023	83 7d 14 03	 cmp	 DWORD PTR _flags$[ebp], 3
  00027	0f 85 64 01 00
	00		 jne	 $LN10@Init
$LN4@Init:

; 5629 : 	{
; 5630 : 		ATLASSUME(m_begin == NULL); //Init called twice?

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00034	74 26		 je	 SHORT $LN2@Init
  00036	68 00 00 00 00	 push	 OFFSET $SG198090
  0003b	68 00 00 00 00	 push	 OFFSET $SG198091
  00040	6a 00		 push	 0
  00042	68 fe 15 00 00	 push	 5630			; 000015feH
  00047	68 00 00 00 00	 push	 OFFSET $SG198092
  0004c	6a 02		 push	 2
  0004e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00053	83 c4 18	 add	 esp, 24			; 00000018H
  00056	83 f8 01	 cmp	 eax, 1
  00059	75 01		 jne	 SHORT $LN2@Init
  0005b	cc		 int	 3
$LN2@Init:
  0005c	33 d2		 xor	 edx, edx
  0005e	75 cd		 jne	 SHORT $LN4@Init

; 5631 : 		ATLTRY(m_begin = _ATL_NEW T[end-begin])

  00060	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00065	8b 45 0c	 mov	 eax, DWORD PTR _end$[ebp]
  00068	2b 45 08	 sub	 eax, DWORD PTR _begin$[ebp]
  0006b	c1 f8 02	 sar	 eax, 2
  0006e	33 c9		 xor	 ecx, ecx
  00070	ba 04 00 00 00	 mov	 edx, 4
  00075	f7 e2		 mul	 edx
  00077	0f 90 c1	 seto	 cl
  0007a	f7 d9		 neg	 ecx
  0007c	0b c8		 or	 ecx, eax
  0007e	51		 push	 ecx
  0007f	e8 00 00 00 00	 call	 ??_U@YAPAXIABUnothrow_t@std@@@Z ; operator new[]
  00084	83 c4 08	 add	 esp, 8
  00087	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
  0008a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	8b 4d ec	 mov	 ecx, DWORD PTR $T2[ebp]
  00090	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 5632 : 		m_iter = m_begin;

  00093	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00096	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00099	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0009c	89 4a 10	 mov	 DWORD PTR [edx+16], ecx

; 5633 : 		if (m_begin == NULL)

  0009f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a2	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  000a6	75 0a		 jne	 SHORT $LN12@Init

; 5634 : 			return E_OUTOFMEMORY;

  000a8	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  000ad	e9 17 01 00 00	 jmp	 $LN1@Init
$LN12@Init:

; 5635 : 		for (T* i=begin; i != end; i++)

  000b2	8b 45 08	 mov	 eax, DWORD PTR _begin$[ebp]
  000b5	89 45 f8	 mov	 DWORD PTR _i$5[ebp], eax
  000b8	eb 09		 jmp	 SHORT $LN7@Init
$LN5@Init:
  000ba	8b 4d f8	 mov	 ecx, DWORD PTR _i$5[ebp]
  000bd	83 c1 04	 add	 ecx, 4
  000c0	89 4d f8	 mov	 DWORD PTR _i$5[ebp], ecx
$LN7@Init:
  000c3	8b 55 f8	 mov	 edx, DWORD PTR _i$5[ebp]
  000c6	3b 55 0c	 cmp	 edx, DWORD PTR _end$[ebp]
  000c9	0f 84 a8 00 00
	00		 je	 $LN6@Init

; 5636 : 		{
; 5637 : 			Copy::init(m_iter);

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	51		 push	 ecx
  000d6	e8 00 00 00 00	 call	 ?init@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAXPAPAUIConnectionPoint@@@Z ; ATL::_CopyInterface<IConnectionPoint>::init
  000db	83 c4 04	 add	 esp, 4

; 5638 : 			HRESULT hr = Copy::copy(m_iter, i);

  000de	8b 55 f8	 mov	 edx, DWORD PTR _i$5[ebp]
  000e1	52		 push	 edx
  000e2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e5	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e8	51		 push	 ecx
  000e9	e8 00 00 00 00	 call	 ?copy@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAJPAPAUIConnectionPoint@@PBQAU3@@Z ; ATL::_CopyInterface<IConnectionPoint>::copy
  000ee	83 c4 08	 add	 esp, 8
  000f1	89 45 f4	 mov	 DWORD PTR _hr$4[ebp], eax

; 5639 : 			if (FAILED(hr))

  000f4	83 7d f4 00	 cmp	 DWORD PTR _hr$4[ebp], 0
  000f8	7d 69		 jge	 SHORT $LN13@Init

; 5640 : 			{
; 5641 : 				T* p = m_begin;

  000fa	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000fd	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00100	89 45 f0	 mov	 DWORD PTR _p$3[ebp], eax
$LN8@Init:

; 5642 : 				while (p < m_iter)

  00103	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00106	8b 55 f0	 mov	 edx, DWORD PTR _p$3[ebp]
  00109	3b 51 10	 cmp	 edx, DWORD PTR [ecx+16]
  0010c	73 1d		 jae	 SHORT $LN9@Init

; 5643 : 					Copy::destroy(p++);

  0010e	8b 45 f0	 mov	 eax, DWORD PTR _p$3[ebp]
  00111	89 45 e4	 mov	 DWORD PTR tv140[ebp], eax
  00114	8b 4d f0	 mov	 ecx, DWORD PTR _p$3[ebp]
  00117	83 c1 04	 add	 ecx, 4
  0011a	89 4d f0	 mov	 DWORD PTR _p$3[ebp], ecx
  0011d	8b 55 e4	 mov	 edx, DWORD PTR tv140[ebp]
  00120	52		 push	 edx
  00121	e8 00 00 00 00	 call	 ?destroy@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAXPAPAUIConnectionPoint@@@Z ; ATL::_CopyInterface<IConnectionPoint>::destroy
  00126	83 c4 04	 add	 esp, 4
  00129	eb d8		 jmp	 SHORT $LN8@Init
$LN9@Init:

; 5644 : 				delete [] m_begin;

  0012b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0012e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00131	89 4d e8	 mov	 DWORD PTR $T1[ebp], ecx
  00134	8b 55 e8	 mov	 edx, DWORD PTR $T1[ebp]
  00137	52		 push	 edx
  00138	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0013d	83 c4 04	 add	 esp, 4

; 5645 : 				m_begin = m_end = m_iter = NULL;

  00140	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00143	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
  0014a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00154	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00157	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 5646 : 				return hr;

  0015e	8b 45 f4	 mov	 eax, DWORD PTR _hr$4[ebp]
  00161	eb 66		 jmp	 SHORT $LN1@Init
$LN13@Init:

; 5647 : 			}
; 5648 : 			m_iter++;

  00163	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00166	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00169	83 c1 04	 add	 ecx, 4
  0016c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0016f	89 4a 10	 mov	 DWORD PTR [edx+16], ecx

; 5649 : 		}

  00172	e9 43 ff ff ff	 jmp	 $LN5@Init
$LN6@Init:

; 5650 : 		m_end = m_begin + (end-begin);

  00177	8b 45 0c	 mov	 eax, DWORD PTR _end$[ebp]
  0017a	2b 45 08	 sub	 eax, DWORD PTR _begin$[ebp]
  0017d	c1 f8 02	 sar	 eax, 2
  00180	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00183	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00186	8d 04 82	 lea	 eax, DWORD PTR [edx+eax*4]
  00189	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0018c	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 5651 : 	}

  0018f	eb 12		 jmp	 SHORT $LN11@Init
$LN10@Init:

; 5652 : 	else
; 5653 : 	{
; 5654 : 		m_begin = begin;

  00191	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00194	8b 45 08	 mov	 eax, DWORD PTR _begin$[ebp]
  00197	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 5655 : 		m_end = end;

  0019a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0019d	8b 55 0c	 mov	 edx, DWORD PTR _end$[ebp]
  001a0	89 51 0c	 mov	 DWORD PTR [ecx+12], edx
$LN11@Init:

; 5656 : 	}
; 5657 : 	m_spUnk = pUnk;

  001a3	8b 45 10	 mov	 eax, DWORD PTR _pUnk$[ebp]
  001a6	50		 push	 eax
  001a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001aa	83 c1 04	 add	 ecx, 4
  001ad	e8 00 00 00 00	 call	 ??4?$CComPtr@UIUnknown@@@ATL@@QAEPAUIUnknown@@PAU2@@Z ; ATL::CComPtr<IUnknown>::operator=

; 5658 : 	m_iter = m_begin;

  001b2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001b8	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001bb	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 5659 : 	m_dwFlags = flags;

  001be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001c1	8b 55 14	 mov	 edx, DWORD PTR _flags$[ebp]
  001c4	89 51 14	 mov	 DWORD PTR [ecx+20], edx

; 5660 : 	return S_OK;

  001c7	33 c0		 xor	 eax, eax
$LN1@Init:

; 5661 : }

  001c9	83 c4 1c	 add	 esp, 28			; 0000001cH
  001cc	3b ec		 cmp	 ebp, esp
  001ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001d3	8b e5		 mov	 esp, ebp
  001d5	5d		 pop	 ebp
  001d6	c2 10 00	 ret	 16			; 00000010H
?Init@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@QAEJPAPAUIConnectionPoint@@0PAUIUnknown@@W4CComEnumFlags@2@@Z ENDP ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Clone@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJPAPAUIEnumConnectionPoints@@@Z
_TEXT	SEGMENT
tv163 = -44						; size = 4
tv128 = -40						; size = 4
$T1 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -24						; size = 4
$T5 = -20						; size = 4
_p$6 = -12						; size = 4
_hRes$ = -4						; size = 4
_this$ = 8						; size = 4
_ppEnum$ = 12						; size = 4
?Clone@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJPAPAUIEnumConnectionPoints@@@Z PROC ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::Clone, COMDAT

; 5596 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0000b	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0

; 5597 : 	typedef CComObject<CComEnum<Base, piid, T, Copy> > _class;
; 5598 : 	HRESULT hRes = E_POINTER;

  0001e	c7 45 fc 03 40
	00 80		 mov	 DWORD PTR _hRes$[ebp], -2147467261 ; 80004003H

; 5599 : 	if (ppEnum != NULL)

  00025	83 7d 0c 00	 cmp	 DWORD PTR _ppEnum$[ebp], 0
  00029	0f 84 03 01 00
	00		 je	 $LN2@Clone

; 5600 : 	{
; 5601 : 		*ppEnum = NULL;

  0002f	8b 45 0c	 mov	 eax, DWORD PTR _ppEnum$[ebp]
  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 5602 : 		_class* p;
; 5603 : 		hRes = _class::CreateInstance(&p);

  00038	8d 4d f4	 lea	 ecx, DWORD PTR _p$6[ebp]
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ?CreateInstance@?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::CreateInstance
  00041	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax

; 5604 : 		if (SUCCEEDED(hRes))

  00044	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00048	0f 8c e4 00 00
	00		 jl	 $LN2@Clone

; 5605 : 		{
; 5606 : 			// If this object has ownership of the data then we need to keep it around
; 5607 : 			hRes = p->Init(m_begin, m_end, (m_dwFlags & BitOwn) ? this : m_spUnk);

  0004e	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00051	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00054	83 e0 02	 and	 eax, 2
  00057	74 15		 je	 SHORT $LN7@Clone
  00059	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	51		 push	 ecx
  0005d	8d 4d e8	 lea	 ecx, DWORD PTR $T4[ebp]
  00060	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
  00065	83 4d dc 01	 or	 DWORD PTR $T1[ebp], 1
  00069	89 45 d8	 mov	 DWORD PTR tv128[ebp], eax
  0006c	eb 16		 jmp	 SHORT $LN8@Clone
$LN7@Clone:
  0006e	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00071	83 c2 04	 add	 edx, 4
  00074	52		 push	 edx
  00075	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  00078	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QAE@ABV01@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
  0007d	83 4d dc 02	 or	 DWORD PTR $T1[ebp], 2
  00081	89 45 d8	 mov	 DWORD PTR tv128[ebp], eax
$LN8@Clone:
  00084	8b 45 d8	 mov	 eax, DWORD PTR tv128[ebp]
  00087	89 45 ec	 mov	 DWORD PTR $T5[ebp], eax
  0008a	6a 00		 push	 0
  0008c	8b 4d ec	 mov	 ecx, DWORD PTR $T5[ebp]
  0008f	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0009b	52		 push	 edx
  0009c	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000a2	51		 push	 ecx
  000a3	8b 4d f4	 mov	 ecx, DWORD PTR _p$6[ebp]
  000a6	e8 00 00 00 00	 call	 ?Init@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@QAEJPAPAUIConnectionPoint@@0PAUIUnknown@@W4CComEnumFlags@2@@Z ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::Init
  000ab	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
  000ae	8b 55 dc	 mov	 edx, DWORD PTR $T1[ebp]
  000b1	83 e2 02	 and	 edx, 2
  000b4	74 0c		 je	 SHORT $LN11@Clone
  000b6	83 65 dc fd	 and	 DWORD PTR $T1[ebp], -3	; fffffffdH
  000ba	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp]
  000bd	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
$LN11@Clone:
  000c2	8b 45 dc	 mov	 eax, DWORD PTR $T1[ebp]
  000c5	83 e0 01	 and	 eax, 1
  000c8	74 0c		 je	 SHORT $LN12@Clone
  000ca	83 65 dc fe	 and	 DWORD PTR $T1[ebp], -2	; fffffffeH
  000ce	8d 4d e8	 lea	 ecx, DWORD PTR $T4[ebp]
  000d1	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
$LN12@Clone:

; 5608 : 			if (SUCCEEDED(hRes))

  000d6	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  000da	7c 20		 jl	 SHORT $LN4@Clone

; 5609 : 			{
; 5610 : 				p->m_iter = m_iter;

  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _p$6[ebp]
  000df	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  000e2	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000e5	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 5611 : 				hRes = p->_InternalQueryInterface(*piid, (void**)ppEnum);

  000e8	8b 4d 0c	 mov	 ecx, DWORD PTR _ppEnum$[ebp]
  000eb	51		 push	 ecx
  000ec	68 00 00 00 00	 push	 OFFSET __GUID_b196b285_bab4_101a_b69c_00aa00341d07
  000f1	8b 4d f4	 mov	 ecx, DWORD PTR _p$6[ebp]
  000f4	e8 00 00 00 00	 call	 ?_InternalQueryInterface@?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel>::_InternalQueryInterface
  000f9	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN4@Clone:

; 5612 : 			}
; 5613 : 			if (FAILED(hRes))

  000fc	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00100	7d 30		 jge	 SHORT $LN2@Clone

; 5614 : 				delete p;

  00102	8b 55 f4	 mov	 edx, DWORD PTR _p$6[ebp]
  00105	89 55 e0	 mov	 DWORD PTR $T2[ebp], edx
  00108	83 7d e0 00	 cmp	 DWORD PTR $T2[ebp], 0
  0010c	74 1d		 je	 SHORT $LN9@Clone
  0010e	8b f4		 mov	 esi, esp
  00110	6a 01		 push	 1
  00112	8b 45 e0	 mov	 eax, DWORD PTR $T2[ebp]
  00115	8b 10		 mov	 edx, DWORD PTR [eax]
  00117	8b 4d e0	 mov	 ecx, DWORD PTR $T2[ebp]
  0011a	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0011d	ff d0		 call	 eax
  0011f	3b f4		 cmp	 esi, esp
  00121	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00126	89 45 d4	 mov	 DWORD PTR tv163[ebp], eax
  00129	eb 07		 jmp	 SHORT $LN2@Clone
$LN9@Clone:
  0012b	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR tv163[ebp], 0
$LN2@Clone:

; 5615 : 		}
; 5616 : 	}
; 5617 : 
; 5618 : 	return hRes;

  00132	8b 45 fc	 mov	 eax, DWORD PTR _hRes$[ebp]

; 5619 : }

  00135	52		 push	 edx
  00136	8b cd		 mov	 ecx, ebp
  00138	50		 push	 eax
  00139	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN15@Clone
  0013f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00144	58		 pop	 eax
  00145	5a		 pop	 edx
  00146	5f		 pop	 edi
  00147	5e		 pop	 esi
  00148	83 c4 2c	 add	 esp, 44			; 0000002cH
  0014b	3b ec		 cmp	 ebp, esp
  0014d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00152	8b e5		 mov	 esp, ebp
  00154	5d		 pop	 ebp
  00155	c2 08 00	 ret	 8
$LN15@Clone:
  00158	01 00 00 00	 DD	 1
  0015c	00 00 00 00	 DD	 $LN14@Clone
$LN14@Clone:
  00160	f4 ff ff ff	 DD	 -12			; fffffff4H
  00164	04 00 00 00	 DD	 4
  00168	00 00 00 00	 DD	 $LN13@Clone
$LN13@Clone:
  0016c	70		 DB	 112			; 00000070H
  0016d	00		 DB	 0
?Clone@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJPAPAUIEnumConnectionPoints@@@Z ENDP ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::Clone
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Reset@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Reset@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJXZ PROC ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::Reset, COMDAT

; 5512 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 5513 : 		m_iter = m_begin;

  00003	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00009	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000c	89 50 10	 mov	 DWORD PTR [eax+16], edx

; 5514 : 		return S_OK;

  0000f	33 c0		 xor	 eax, eax

; 5515 : 	}

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?Reset@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJXZ ENDP ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::Reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Skip@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJK@Z
_TEXT	SEGMENT
tv75 = -16						; size = 4
tv69 = -12						; size = 4
_nSkip$ = -8						; size = 4
_nRem$ = -4						; size = 4
_this$ = 8						; size = 4
_celt$ = 12						; size = 4
?Skip@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJK@Z PROC ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::Skip, COMDAT

; 5586 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 5587 : 	ULONG nRem = ULONG(m_end - m_iter);

  00017	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00020	2b 51 10	 sub	 edx, DWORD PTR [ecx+16]
  00023	c1 fa 02	 sar	 edx, 2
  00026	89 55 fc	 mov	 DWORD PTR _nRem$[ebp], edx

; 5588 : 	ULONG nSkip = (celt > nRem) ? nRem : celt;

  00029	8b 45 0c	 mov	 eax, DWORD PTR _celt$[ebp]
  0002c	3b 45 fc	 cmp	 eax, DWORD PTR _nRem$[ebp]
  0002f	76 08		 jbe	 SHORT $LN3@Skip
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _nRem$[ebp]
  00034	89 4d f4	 mov	 DWORD PTR tv69[ebp], ecx
  00037	eb 06		 jmp	 SHORT $LN4@Skip
$LN3@Skip:
  00039	8b 55 0c	 mov	 edx, DWORD PTR _celt$[ebp]
  0003c	89 55 f4	 mov	 DWORD PTR tv69[ebp], edx
$LN4@Skip:
  0003f	8b 45 f4	 mov	 eax, DWORD PTR tv69[ebp]
  00042	89 45 f8	 mov	 DWORD PTR _nSkip$[ebp], eax

; 5589 : 	m_iter += nSkip;

  00045	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0004b	8b 45 f8	 mov	 eax, DWORD PTR _nSkip$[ebp]
  0004e	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  00051	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00054	89 4a 10	 mov	 DWORD PTR [edx+16], ecx

; 5590 : 	return (celt == nSkip) ? S_OK : S_FALSE;

  00057	8b 45 0c	 mov	 eax, DWORD PTR _celt$[ebp]
  0005a	3b 45 f8	 cmp	 eax, DWORD PTR _nSkip$[ebp]
  0005d	75 09		 jne	 SHORT $LN5@Skip
  0005f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
  00066	eb 07		 jmp	 SHORT $LN6@Skip
$LN5@Skip:
  00068	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv75[ebp], 1
$LN6@Skip:
  0006f	8b 45 f0	 mov	 eax, DWORD PTR tv75[ebp]

; 5591 : }

  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
?Skip@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJK@Z ENDP ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::Skip
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Next@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJKPAPAUIConnectionPoint@@PAK@Z
_TEXT	SEGMENT
tv92 = -32						; size = 4
tv83 = -28						; size = 4
tv80 = -24						; size = 4
_hr$1 = -20						; size = 4
_pelt$ = -16						; size = 4
_nMin$ = -12						; size = 4
_hRes$ = -8						; size = 4
_nRem$ = -4						; size = 4
_this$ = 8						; size = 4
_celt$ = 12						; size = 4
_rgelt$ = 16						; size = 4
_pceltFetched$ = 20					; size = 4
?Next@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJKPAPAUIConnectionPoint@@PAK@Z PROC ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::Next, COMDAT

; 5552 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000e	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00011	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00014	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00017	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001a	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001d	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00020	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 5553 : 	if (pceltFetched != NULL)

  00023	83 7d 14 00	 cmp	 DWORD PTR _pceltFetched$[ebp], 0
  00027	74 09		 je	 SHORT $LN6@Next

; 5554 : 		*pceltFetched = 0;

  00029	8b 45 14	 mov	 eax, DWORD PTR _pceltFetched$[ebp]
  0002c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN6@Next:

; 5555 : 	if (rgelt == NULL || (celt > 1 && pceltFetched == NULL))

  00032	83 7d 10 00	 cmp	 DWORD PTR _rgelt$[ebp], 0
  00036	74 0c		 je	 SHORT $LN8@Next
  00038	83 7d 0c 01	 cmp	 DWORD PTR _celt$[ebp], 1
  0003c	76 10		 jbe	 SHORT $LN7@Next
  0003e	83 7d 14 00	 cmp	 DWORD PTR _pceltFetched$[ebp], 0
  00042	75 0a		 jne	 SHORT $LN7@Next
$LN8@Next:

; 5556 : 		return E_POINTER;

  00044	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00049	e9 07 01 00 00	 jmp	 $LN1@Next
$LN7@Next:

; 5557 : 	if (m_begin == NULL || m_end == NULL || m_iter == NULL)

  0004e	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00055	74 12		 je	 SHORT $LN10@Next
  00057	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0005a	83 7a 0c 00	 cmp	 DWORD PTR [edx+12], 0
  0005e	74 09		 je	 SHORT $LN10@Next
  00060	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00063	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00067	75 0a		 jne	 SHORT $LN9@Next
$LN10@Next:

; 5558 : 		return E_FAIL;

  00069	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  0006e	e9 e2 00 00 00	 jmp	 $LN1@Next
$LN9@Next:

; 5559 : 	ULONG nRem = (ULONG)(m_end - m_iter);

  00073	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00079	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0007c	2b 42 10	 sub	 eax, DWORD PTR [edx+16]
  0007f	c1 f8 02	 sar	 eax, 2
  00082	89 45 fc	 mov	 DWORD PTR _nRem$[ebp], eax

; 5560 : 	HRESULT hRes = S_OK;

  00085	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hRes$[ebp], 0

; 5561 : 	if (nRem < celt)

  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _nRem$[ebp]
  0008f	3b 4d 0c	 cmp	 ecx, DWORD PTR _celt$[ebp]
  00092	73 07		 jae	 SHORT $LN11@Next

; 5562 : 		hRes = S_FALSE;

  00094	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _hRes$[ebp], 1
$LN11@Next:

; 5563 : 	ULONG nMin = celt < nRem ? celt : nRem ;

  0009b	8b 55 0c	 mov	 edx, DWORD PTR _celt$[ebp]
  0009e	3b 55 fc	 cmp	 edx, DWORD PTR _nRem$[ebp]
  000a1	73 08		 jae	 SHORT $LN16@Next
  000a3	8b 45 0c	 mov	 eax, DWORD PTR _celt$[ebp]
  000a6	89 45 e8	 mov	 DWORD PTR tv80[ebp], eax
  000a9	eb 06		 jmp	 SHORT $LN17@Next
$LN16@Next:
  000ab	8b 4d fc	 mov	 ecx, DWORD PTR _nRem$[ebp]
  000ae	89 4d e8	 mov	 DWORD PTR tv80[ebp], ecx
$LN17@Next:
  000b1	8b 55 e8	 mov	 edx, DWORD PTR tv80[ebp]
  000b4	89 55 f4	 mov	 DWORD PTR _nMin$[ebp], edx

; 5564 : 	if (pceltFetched != NULL)

  000b7	83 7d 14 00	 cmp	 DWORD PTR _pceltFetched$[ebp], 0
  000bb	74 08		 je	 SHORT $LN12@Next

; 5565 : 		*pceltFetched = nMin;

  000bd	8b 45 14	 mov	 eax, DWORD PTR _pceltFetched$[ebp]
  000c0	8b 4d f4	 mov	 ecx, DWORD PTR _nMin$[ebp]
  000c3	89 08		 mov	 DWORD PTR [eax], ecx
$LN12@Next:

; 5566 : 	T* pelt = rgelt;

  000c5	8b 55 10	 mov	 edx, DWORD PTR _rgelt$[ebp]
  000c8	89 55 f0	 mov	 DWORD PTR _pelt$[ebp], edx
$LN2@Next:

; 5567 : 	while(nMin--)

  000cb	8b 45 f4	 mov	 eax, DWORD PTR _nMin$[ebp]
  000ce	89 45 e4	 mov	 DWORD PTR tv83[ebp], eax
  000d1	8b 4d f4	 mov	 ecx, DWORD PTR _nMin$[ebp]
  000d4	83 e9 01	 sub	 ecx, 1
  000d7	89 4d f4	 mov	 DWORD PTR _nMin$[ebp], ecx
  000da	83 7d e4 00	 cmp	 DWORD PTR tv83[ebp], 0
  000de	74 72		 je	 SHORT $LN3@Next

; 5568 : 	{
; 5569 : 		HRESULT hr = Copy::copy(pelt, m_iter);

  000e0	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  000e3	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000e6	50		 push	 eax
  000e7	8b 4d f0	 mov	 ecx, DWORD PTR _pelt$[ebp]
  000ea	51		 push	 ecx
  000eb	e8 00 00 00 00	 call	 ?copy@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAJPAPAUIConnectionPoint@@PBQAU3@@Z ; ATL::_CopyInterface<IConnectionPoint>::copy
  000f0	83 c4 08	 add	 esp, 8
  000f3	89 45 ec	 mov	 DWORD PTR _hr$1[ebp], eax

; 5570 : 		if (FAILED(hr))

  000f6	83 7d ec 00	 cmp	 DWORD PTR _hr$1[ebp], 0
  000fa	7d 39		 jge	 SHORT $LN13@Next
$LN4@Next:

; 5571 : 		{
; 5572 : 			while (rgelt < pelt)

  000fc	8b 55 10	 mov	 edx, DWORD PTR _rgelt$[ebp]
  000ff	3b 55 f0	 cmp	 edx, DWORD PTR _pelt$[ebp]
  00102	73 1d		 jae	 SHORT $LN5@Next

; 5573 : 				Copy::destroy(rgelt++);

  00104	8b 45 10	 mov	 eax, DWORD PTR _rgelt$[ebp]
  00107	89 45 e0	 mov	 DWORD PTR tv92[ebp], eax
  0010a	8b 4d 10	 mov	 ecx, DWORD PTR _rgelt$[ebp]
  0010d	83 c1 04	 add	 ecx, 4
  00110	89 4d 10	 mov	 DWORD PTR _rgelt$[ebp], ecx
  00113	8b 55 e0	 mov	 edx, DWORD PTR tv92[ebp]
  00116	52		 push	 edx
  00117	e8 00 00 00 00	 call	 ?destroy@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAXPAPAUIConnectionPoint@@@Z ; ATL::_CopyInterface<IConnectionPoint>::destroy
  0011c	83 c4 04	 add	 esp, 4
  0011f	eb db		 jmp	 SHORT $LN4@Next
$LN5@Next:

; 5574 : 			if (pceltFetched != NULL)

  00121	83 7d 14 00	 cmp	 DWORD PTR _pceltFetched$[ebp], 0
  00125	74 09		 je	 SHORT $LN14@Next

; 5575 : 				*pceltFetched = 0;

  00127	8b 45 14	 mov	 eax, DWORD PTR _pceltFetched$[ebp]
  0012a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN14@Next:

; 5576 : 			return hr;

  00130	8b 45 ec	 mov	 eax, DWORD PTR _hr$1[ebp]
  00133	eb 20		 jmp	 SHORT $LN1@Next
$LN13@Next:

; 5577 : 		}
; 5578 : 		pelt++;

  00135	8b 4d f0	 mov	 ecx, DWORD PTR _pelt$[ebp]
  00138	83 c1 04	 add	 ecx, 4
  0013b	89 4d f0	 mov	 DWORD PTR _pelt$[ebp], ecx

; 5579 : 		m_iter++;

  0013e	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00141	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00144	83 c0 04	 add	 eax, 4
  00147	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 5580 : 	}

  0014d	e9 79 ff ff ff	 jmp	 $LN2@Next
$LN3@Next:

; 5581 : 	return hRes;

  00152	8b 45 f8	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@Next:

; 5582 : }

  00155	83 c4 20	 add	 esp, 32			; 00000020H
  00158	3b ec		 cmp	 ebp, esp
  0015a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015f	8b e5		 mov	 esp, ebp
  00161	5d		 pop	 ebp
  00162	c2 10 00	 ret	 16			; 00000010H
?Next@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAGJKPAPAUIConnectionPoint@@PAK@Z ENDP ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::Next
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
$T1 = -12						; size = 4
_p$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAE@XZ PROC ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::~CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >, COMDAT
; _this$ = ecx

; 5538 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5539 : 	if (m_dwFlags & BitOwn)

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00024	83 e1 02	 and	 ecx, 2
  00027	74 42		 je	 SHORT $LN1@CComEnumIm

; 5540 : 	{
; 5541 : 		for (T* p = m_begin; p != m_end; p++)

  00029	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0002f	89 45 f8	 mov	 DWORD PTR _p$2[ebp], eax
  00032	eb 09		 jmp	 SHORT $LN4@CComEnumIm
$LN2@CComEnumIm:
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _p$2[ebp]
  00037	83 c1 04	 add	 ecx, 4
  0003a	89 4d f8	 mov	 DWORD PTR _p$2[ebp], ecx
$LN4@CComEnumIm:
  0003d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00040	8b 45 f8	 mov	 eax, DWORD PTR _p$2[ebp]
  00043	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  00046	74 0e		 je	 SHORT $LN3@CComEnumIm

; 5542 : 			Copy::destroy(p);

  00048	8b 4d f8	 mov	 ecx, DWORD PTR _p$2[ebp]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?destroy@?$_CopyInterface@UIConnectionPoint@@@ATL@@SAXPAPAUIConnectionPoint@@@Z ; ATL::_CopyInterface<IConnectionPoint>::destroy
  00051	83 c4 04	 add	 esp, 4
  00054	eb de		 jmp	 SHORT $LN2@CComEnumIm
$LN3@CComEnumIm:

; 5543 : 		delete [] m_begin;

  00056	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00059	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0005c	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR $T1[ebp]
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00068	83 c4 04	 add	 esp, 4
$LN1@CComEnumIm:

; 5544 : 	}
; 5545 : }

  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	83 c1 04	 add	 ecx, 4
  00071	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
  00076	83 c4 0c	 add	 esp, 12			; 0000000cH
  00079	3b ec		 cmp	 ebp, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
??1?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@UAE@XZ ENDP ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::~CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??0?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@QAE@XZ PROC ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >, COMDAT
; _this$ = ecx

; 5499 : 	CComEnumImpl()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5500 : 	{

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0IEnumConnectionPoints@@QAE@XZ
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 04	 add	 ecx, 4
  0001c	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 5501 : 		m_begin = m_end = m_iter = NULL;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 5502 : 		m_dwFlags = 0;

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 5503 : 	}

  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	83 c4 04	 add	 esp, 4
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??0?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAEPAXI@Z PROC ; ATL::CComObjectCached<ATL::CComClassFactory>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAE@XZ ; ATL::CComObjectCached<ATL::CComClassFactory>::~CComObjectCached<ATL::CComClassFactory>
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 28		 push	 40			; 00000028H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_G?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAEPAXI@Z ENDP ; ATL::CComObjectCached<ATL::CComClassFactory>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?QueryInterface@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z PROC ; ATL::CComObjectCached<ATL::CComClassFactory>::QueryInterface, COMDAT

; 3037 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3038 : 		return this->_InternalQueryInterface(iid, ppvObject);

  00003	8b 45 10	 mov	 eax, DWORD PTR _ppvObject$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _iid$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_InternalQueryInterface@CComClassFactory@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComClassFactory::_InternalQueryInterface

; 3039 : 	}

  00013	3b ec		 cmp	 ebp, esp
  00015	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001a	5d		 pop	 ebp
  0001b	c2 0c 00	 ret	 12			; 0000000cH
?QueryInterface@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::CComObjectCached<ATL::CComClassFactory>::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Release@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
tv81 = -12						; size = 4
$T1 = -8						; size = 4
_l$ = -4						; size = 4
_this$ = 8						; size = 4
?Release@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ PROC ; ATL::CComObjectCached<ATL::CComClassFactory>::Release, COMDAT

; 3025 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 3026 : 		ULONG l = this->InternalRelease();

  0001c	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 04	 add	 ecx, 4
  00022	e8 00 00 00 00	 call	 ?InternalRelease@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalRelease
  00027	89 45 fc	 mov	 DWORD PTR _l$[ebp], eax

; 3027 : 		if (l == 0)

  0002a	83 7d fc 00	 cmp	 DWORD PTR _l$[ebp], 0
  0002e	75 32		 jne	 SHORT $LN2@Release

; 3028 : 			delete this;

  00030	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00033	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  00036	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  0003a	74 1d		 je	 SHORT $LN6@Release
  0003c	8b f4		 mov	 esi, esp
  0003e	6a 01		 push	 1
  00040	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00043	8b 11		 mov	 edx, DWORD PTR [ecx]
  00045	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00048	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f4	 mov	 DWORD PTR tv81[ebp], eax
  00057	eb 07		 jmp	 SHORT $LN7@Release
$LN6@Release:
  00059	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN7@Release:
  00060	eb 22		 jmp	 SHORT $LN3@Release
$LN2@Release:

; 3029 : 		else if (l == 1)

  00062	83 7d fc 01	 cmp	 DWORD PTR _l$[ebp], 1
  00066	75 1c		 jne	 SHORT $LN3@Release

; 3030 : 			_pAtlModule->Unlock();

  00068	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  0006e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00070	8b f4		 mov	 esi, esp
  00072	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  00078	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0007b	ff d0		 call	 eax
  0007d	3b f4		 cmp	 esi, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Release:

; 3031 : 		return l;

  00084	8b 45 fc	 mov	 eax, DWORD PTR _l$[ebp]

; 3032 : 	}

  00087	5e		 pop	 esi
  00088	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008b	3b ec		 cmp	 ebp, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 04 00	 ret	 4
?Release@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComObjectCached<ATL::CComClassFactory>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?AddRef@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_l$ = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ PROC ; ATL::CComObjectCached<ATL::CComClassFactory>::AddRef, COMDAT

; 3018 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 3019 : 		ULONG l = this->InternalAddRef();

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 04	 add	 ecx, 4
  00012	e8 00 00 00 00	 call	 ?InternalAddRef@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalAddRef
  00017	89 45 fc	 mov	 DWORD PTR _l$[ebp], eax

; 3020 : 		if (l == 2)

  0001a	83 7d fc 02	 cmp	 DWORD PTR _l$[ebp], 2
  0001e	75 1b		 jne	 SHORT $LN2@AddRef

; 3021 : 			_pAtlModule->Lock();

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  00025	8b 10		 mov	 edx, DWORD PTR [eax]
  00027	8b f4		 mov	 esi, esp
  00029	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  0002f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00032	ff d0		 call	 eax
  00034	3b f4		 cmp	 esi, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@AddRef:

; 3022 : 		return l;

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _l$[ebp]

; 3023 : 	}

  0003e	5e		 pop	 esi
  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?AddRef@?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComObjectCached<ATL::CComClassFactory>::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAE@XZ PROC ; ATL::CComObjectCached<ATL::CComClassFactory>::~CComObjectCached<ATL::CComClassFactory>, COMDAT
; _this$ = ecx

; 3008 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@6B@

; 3009 : 		this->m_dwRef = -(LONG_MAX/2);

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	c7 41 04 01 00
	00 c0		 mov	 DWORD PTR [ecx+4], -1073741823 ; c0000001H

; 3010 : 		this->FinalRelease();

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 04	 add	 ecx, 4
  00027	e8 00 00 00 00	 call	 ?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::FinalRelease

; 3011 : #if defined(_ATL_DEBUG_INTERFACES) && !defined(_ATL_STATIC_LIB_IMPL)
; 3012 : 		_AtlDebugInterfacesModule.DeleteNonAddRefThunk(_GetRawUnknown());
; 3013 : #endif
; 3014 : 	}

  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ??1CComClassFactory@ATL@@UAE@XZ ; ATL::CComClassFactory::~CComClassFactory
  00034	83 c4 04	 add	 esp, 4
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??1?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@UAE@XZ ENDP ; ATL::CComObjectCached<ATL::CComClassFactory>::~CComObjectCached<ATL::CComClassFactory>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??0?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@QAE@PAX@Z PROC ; ATL::CComObjectCached<ATL::CComClassFactory>::CComObjectCached<ATL::CComClassFactory>, COMDAT
; _this$ = ecx

; 3002 : 	CComObjectCached(_In_opt_ void* = NULL)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3003 : 	{

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0CComClassFactory@ATL@@QAE@XZ
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@6B@

; 3004 : 	}

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@QAE@PAX@Z ENDP ; ATL::CComObjectCached<ATL::CComClassFactory>::CComObjectCached<ATL::CComClassFactory>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?CreateInstance@?$CComCreator@V?$CComAggObject@VCOPOSGestureControl@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv165 = -24						; size = 4
tv85 = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_p$ = -8						; size = 4
_hRes$ = -4						; size = 4
_pv$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?CreateInstance@?$CComCreator@V?$CComAggObject@VCOPOSGestureControl@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z PROC ; ATL::CComCreator<ATL::CComAggObject<COPOSGestureControl> >::CreateInstance, COMDAT

; 1994 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 1995 : 		ATLASSERT(ppv != NULL);

  0001e	83 7d 10 00	 cmp	 DWORD PTR _ppv$[ebp], 0
  00022	75 26		 jne	 SHORT $LN9@CreateInst
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@MNKGOHDN@?$AAp?$AAp?$AAv?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0002e	6a 00		 push	 0
  00030	68 cb 07 00 00	 push	 1995			; 000007cbH
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0003a	6a 02		 push	 2
  0003c	e8 00 00 00 00	 call	 __CrtDbgReportW
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN9@CreateInst
  00049	cc		 int	 3
$LN9@CreateInst:

; 1996 : 		if (ppv == NULL)

  0004a	83 7d 10 00	 cmp	 DWORD PTR _ppv$[ebp], 0
  0004e	75 0a		 jne	 SHORT $LN2@CreateInst

; 1997 : 			return E_POINTER;

  00050	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00055	e9 0f 01 00 00	 jmp	 $LN1@CreateInst
$LN2@CreateInst:

; 1998 : 		*ppv = NULL;

  0005a	8b 4d 10	 mov	 ecx, DWORD PTR _ppv$[ebp]
  0005d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 1999 : 
; 2000 : 		HRESULT hRes = E_OUTOFMEMORY;

  00063	c7 45 fc 0e 00
	07 80		 mov	 DWORD PTR _hRes$[ebp], -2147024882 ; 8007000eH

; 2001 : 		T1* p = NULL;

  0006a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], 0

; 2002 : 
; 2003 : ATLPREFAST_SUPPRESS(6014 28197)
; 2004 : 		/* prefast noise VSW 489981 */
; 2005 : 		ATLTRY(p = _ATL_NEW T1(pv))

  00071	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00076	68 9c 01 00 00	 push	 412			; 0000019cH
  0007b	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00080	83 c4 08	 add	 esp, 8
  00083	89 45 f4	 mov	 DWORD PTR $T2[ebp], eax
  00086	83 7d f4 00	 cmp	 DWORD PTR $T2[ebp], 0
  0008a	74 11		 je	 SHORT $LN10@CreateInst
  0008c	8b 55 08	 mov	 edx, DWORD PTR _pv$[ebp]
  0008f	52		 push	 edx
  00090	8b 4d f4	 mov	 ecx, DWORD PTR $T2[ebp]
  00093	e8 00 00 00 00	 call	 ??0?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAE@PAX@Z ; ATL::CComAggObject<COPOSGestureControl>::CComAggObject<COPOSGestureControl>
  00098	89 45 ec	 mov	 DWORD PTR tv85[ebp], eax
  0009b	eb 07		 jmp	 SHORT $LN11@CreateInst
$LN10@CreateInst:
  0009d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN11@CreateInst:
  000a4	8b 45 ec	 mov	 eax, DWORD PTR tv85[ebp]
  000a7	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax

; 2006 : ATLPREFAST_UNSUPPRESS()
; 2007 : 
; 2008 : 		if (p != NULL)

  000aa	83 7d f8 00	 cmp	 DWORD PTR _p$[ebp], 0
  000ae	0f 84 b2 00 00
	00		 je	 $LN3@CreateInst

; 2009 : 		{
; 2010 : 			p->SetVoid(pv);

  000b4	8b 4d 08	 mov	 ecx, DWORD PTR _pv$[ebp]
  000b7	51		 push	 ecx
  000b8	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000bb	83 c1 04	 add	 ecx, 4
  000be	e8 00 00 00 00	 call	 ?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z ; ATL::CComObjectRootBase::SetVoid

; 2011 : 			p->InternalFinalConstructAddRef();

  000c3	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000c6	83 c1 04	 add	 ecx, 4
  000c9	e8 00 00 00 00	 call	 ?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructAddRef

; 2012 : 			hRes = p->_AtlInitialConstruct();

  000ce	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000d1	e8 00 00 00 00	 call	 ?_AtlInitialConstruct@?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::CComAggObject<COPOSGestureControl>::_AtlInitialConstruct
  000d6	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax

; 2013 : 			if (SUCCEEDED(hRes))

  000d9	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  000dd	7c 0b		 jl	 SHORT $LN4@CreateInst

; 2014 : 				hRes = p->FinalConstruct();

  000df	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000e2	e8 00 00 00 00	 call	 ?FinalConstruct@?$CComAggObject@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::CComAggObject<COPOSGestureControl>::FinalConstruct
  000e7	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN4@CreateInst:

; 2015 : 			if (SUCCEEDED(hRes))

  000ea	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  000ee	7c 0e		 jl	 SHORT $LN5@CreateInst

; 2016 : 				hRes = p->_AtlFinalConstruct();

  000f0	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000f3	83 c1 04	 add	 ecx, 4
  000f6	e8 00 00 00 00	 call	 ?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::_AtlFinalConstruct
  000fb	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN5@CreateInst:

; 2017 : 			p->InternalFinalConstructRelease();

  000fe	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  00101	83 c1 04	 add	 ecx, 4
  00104	e8 00 00 00 00	 call	 ?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructRelease

; 2018 : 			if (hRes == S_OK)

  00109	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  0010d	75 21		 jne	 SHORT $LN6@CreateInst

; 2019 : 			{
; 2020 : 				hRes = p->QueryInterface(riid, ppv);

  0010f	8b f4		 mov	 esi, esp
  00111	8b 55 10	 mov	 edx, DWORD PTR _ppv$[ebp]
  00114	52		 push	 edx
  00115	8b 45 0c	 mov	 eax, DWORD PTR _riid$[ebp]
  00118	50		 push	 eax
  00119	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  0011c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0011e	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  00121	50		 push	 eax
  00122	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00124	ff d1		 call	 ecx
  00126	3b f4		 cmp	 esi, esp
  00128	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012d	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN6@CreateInst:

; 2021 : 				_Analysis_assume_(hRes == S_OK || FAILED(hRes));
; 2022 : 			}
; 2023 : 			if (hRes != S_OK)

  00130	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00134	74 30		 je	 SHORT $LN3@CreateInst

; 2024 : 				delete p;

  00136	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  00139	89 55 f0	 mov	 DWORD PTR $T1[ebp], edx
  0013c	83 7d f0 00	 cmp	 DWORD PTR $T1[ebp], 0
  00140	74 1d		 je	 SHORT $LN12@CreateInst
  00142	8b f4		 mov	 esi, esp
  00144	6a 01		 push	 1
  00146	8b 45 f0	 mov	 eax, DWORD PTR $T1[ebp]
  00149	8b 10		 mov	 edx, DWORD PTR [eax]
  0014b	8b 4d f0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014e	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00151	ff d0		 call	 eax
  00153	3b f4		 cmp	 esi, esp
  00155	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015a	89 45 e8	 mov	 DWORD PTR tv165[ebp], eax
  0015d	eb 07		 jmp	 SHORT $LN3@CreateInst
$LN12@CreateInst:
  0015f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv165[ebp], 0
$LN3@CreateInst:

; 2025 : 		}
; 2026 : 		return hRes;

  00166	8b 45 fc	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@CreateInst:

; 2027 : 	}

  00169	5e		 pop	 esi
  0016a	83 c4 18	 add	 esp, 24			; 00000018H
  0016d	3b ec		 cmp	 ebp, esp
  0016f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00174	8b e5		 mov	 esp, ebp
  00176	5d		 pop	 ebp
  00177	c2 0c 00	 ret	 12			; 0000000cH
?CreateInstance@?$CComCreator@V?$CComAggObject@VCOPOSGestureControl@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ENDP ; ATL::CComCreator<ATL::CComAggObject<COPOSGestureControl> >::CreateInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?CreateInstance@?$CComCreator@V?$CComObject@VCOPOSGestureControl@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv178 = -24						; size = 4
tv85 = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_p$ = -8						; size = 4
_hRes$ = -4						; size = 4
_pv$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?CreateInstance@?$CComCreator@V?$CComObject@VCOPOSGestureControl@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z PROC ; ATL::CComCreator<ATL::CComObject<COPOSGestureControl> >::CreateInstance, COMDAT

; 1994 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 1995 : 		ATLASSERT(ppv != NULL);

  0001e	83 7d 10 00	 cmp	 DWORD PTR _ppv$[ebp], 0
  00022	75 26		 jne	 SHORT $LN9@CreateInst
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@MNKGOHDN@?$AAp?$AAp?$AAv?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0002e	6a 00		 push	 0
  00030	68 cb 07 00 00	 push	 1995			; 000007cbH
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0003a	6a 02		 push	 2
  0003c	e8 00 00 00 00	 call	 __CrtDbgReportW
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN9@CreateInst
  00049	cc		 int	 3
$LN9@CreateInst:

; 1996 : 		if (ppv == NULL)

  0004a	83 7d 10 00	 cmp	 DWORD PTR _ppv$[ebp], 0
  0004e	75 0a		 jne	 SHORT $LN2@CreateInst

; 1997 : 			return E_POINTER;

  00050	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00055	e9 18 01 00 00	 jmp	 $LN1@CreateInst
$LN2@CreateInst:

; 1998 : 		*ppv = NULL;

  0005a	8b 4d 10	 mov	 ecx, DWORD PTR _ppv$[ebp]
  0005d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 1999 : 
; 2000 : 		HRESULT hRes = E_OUTOFMEMORY;

  00063	c7 45 fc 0e 00
	07 80		 mov	 DWORD PTR _hRes$[ebp], -2147024882 ; 8007000eH

; 2001 : 		T1* p = NULL;

  0006a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], 0

; 2002 : 
; 2003 : ATLPREFAST_SUPPRESS(6014 28197)
; 2004 : 		/* prefast noise VSW 489981 */
; 2005 : 		ATLTRY(p = _ATL_NEW T1(pv))

  00071	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00076	68 94 01 00 00	 push	 404			; 00000194H
  0007b	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00080	83 c4 08	 add	 esp, 8
  00083	89 45 f4	 mov	 DWORD PTR $T2[ebp], eax
  00086	83 7d f4 00	 cmp	 DWORD PTR $T2[ebp], 0
  0008a	74 11		 je	 SHORT $LN10@CreateInst
  0008c	8b 55 08	 mov	 edx, DWORD PTR _pv$[ebp]
  0008f	52		 push	 edx
  00090	8b 4d f4	 mov	 ecx, DWORD PTR $T2[ebp]
  00093	e8 00 00 00 00	 call	 ??0?$CComObject@VCOPOSGestureControl@@@ATL@@QAE@PAX@Z ; ATL::CComObject<COPOSGestureControl>::CComObject<COPOSGestureControl>
  00098	89 45 ec	 mov	 DWORD PTR tv85[ebp], eax
  0009b	eb 07		 jmp	 SHORT $LN11@CreateInst
$LN10@CreateInst:
  0009d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN11@CreateInst:
  000a4	8b 45 ec	 mov	 eax, DWORD PTR tv85[ebp]
  000a7	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax

; 2006 : ATLPREFAST_UNSUPPRESS()
; 2007 : 
; 2008 : 		if (p != NULL)

  000aa	83 7d f8 00	 cmp	 DWORD PTR _p$[ebp], 0
  000ae	0f 84 bb 00 00
	00		 je	 $LN3@CreateInst

; 2009 : 		{
; 2010 : 			p->SetVoid(pv);

  000b4	8b 4d 08	 mov	 ecx, DWORD PTR _pv$[ebp]
  000b7	51		 push	 ecx
  000b8	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000bb	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000c1	e8 00 00 00 00	 call	 ?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z ; ATL::CComObjectRootBase::SetVoid

; 2011 : 			p->InternalFinalConstructAddRef();

  000c6	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000c9	e8 00 00 00 00	 call	 ?InternalFinalConstructAddRef@COPOSGestureControl@@QAEXXZ ; COPOSGestureControl::InternalFinalConstructAddRef

; 2012 : 			hRes = p->_AtlInitialConstruct();

  000ce	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000d1	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000d7	e8 00 00 00 00	 call	 ?_AtlInitialConstruct@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEJXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::_AtlInitialConstruct
  000dc	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax

; 2013 : 			if (SUCCEEDED(hRes))

  000df	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  000e3	7c 0b		 jl	 SHORT $LN4@CreateInst

; 2014 : 				hRes = p->FinalConstruct();

  000e5	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000e8	e8 00 00 00 00	 call	 ?FinalConstruct@COPOSGestureControl@@QAEJXZ ; COPOSGestureControl::FinalConstruct
  000ed	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN4@CreateInst:

; 2015 : 			if (SUCCEEDED(hRes))

  000f0	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  000f4	7c 11		 jl	 SHORT $LN5@CreateInst

; 2016 : 				hRes = p->_AtlFinalConstruct();

  000f6	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000f9	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000ff	e8 00 00 00 00	 call	 ?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::_AtlFinalConstruct
  00104	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN5@CreateInst:

; 2017 : 			p->InternalFinalConstructRelease();

  00107	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  0010a	e8 00 00 00 00	 call	 ?InternalFinalConstructRelease@COPOSGestureControl@@QAEXXZ ; COPOSGestureControl::InternalFinalConstructRelease

; 2018 : 			if (hRes == S_OK)

  0010f	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00113	75 21		 jne	 SHORT $LN6@CreateInst

; 2019 : 			{
; 2020 : 				hRes = p->QueryInterface(riid, ppv);

  00115	8b f4		 mov	 esi, esp
  00117	8b 55 10	 mov	 edx, DWORD PTR _ppv$[ebp]
  0011a	52		 push	 edx
  0011b	8b 45 0c	 mov	 eax, DWORD PTR _riid$[ebp]
  0011e	50		 push	 eax
  0011f	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  00122	8b 11		 mov	 edx, DWORD PTR [ecx]
  00124	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  00127	50		 push	 eax
  00128	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0012a	ff d1		 call	 ecx
  0012c	3b f4		 cmp	 esi, esp
  0012e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00133	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN6@CreateInst:

; 2021 : 				_Analysis_assume_(hRes == S_OK || FAILED(hRes));
; 2022 : 			}
; 2023 : 			if (hRes != S_OK)

  00136	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  0013a	74 33		 je	 SHORT $LN3@CreateInst

; 2024 : 				delete p;

  0013c	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  0013f	89 55 f0	 mov	 DWORD PTR $T1[ebp], edx
  00142	83 7d f0 00	 cmp	 DWORD PTR $T1[ebp], 0
  00146	74 20		 je	 SHORT $LN12@CreateInst
  00148	8b f4		 mov	 esi, esp
  0014a	6a 01		 push	 1
  0014c	8b 4d f0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014f	83 c1 04	 add	 ecx, 4
  00152	8b 45 f0	 mov	 eax, DWORD PTR $T1[ebp]
  00155	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00158	8b 02		 mov	 eax, DWORD PTR [edx]
  0015a	ff d0		 call	 eax
  0015c	3b f4		 cmp	 esi, esp
  0015e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00163	89 45 e8	 mov	 DWORD PTR tv178[ebp], eax
  00166	eb 07		 jmp	 SHORT $LN3@CreateInst
$LN12@CreateInst:
  00168	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv178[ebp], 0
$LN3@CreateInst:

; 2025 : 		}
; 2026 : 		return hRes;

  0016f	8b 45 fc	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@CreateInst:

; 2027 : 	}

  00172	5e		 pop	 esi
  00173	83 c4 18	 add	 esp, 24			; 00000018H
  00176	3b ec		 cmp	 ebp, esp
  00178	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0017d	8b e5		 mov	 esp, ebp
  0017f	5d		 pop	 ebp
  00180	c2 0c 00	 ret	 12			; 0000000cH
?CreateInstance@?$CComCreator@V?$CComObject@VCOPOSGestureControl@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ENDP ; ATL::CComCreator<ATL::CComObject<COPOSGestureControl> >::CreateInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControl.cpp
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_dwReason$ = 12						; size = 4
___formal$ = 16						; size = 4
_DllMain@12 PROC

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 51   :     if (dwReason == DLL_PROCESS_ATTACH)

  00004	83 7d 0c 01	 cmp	 DWORD PTR _dwReason$[ebp], 1
  00008	75 2d		 jne	 SHORT $LN2@DllMain

; 52   :     {
; 53   :         _Module.Init(ObjectMap, hInstance, &LIBID_OposGestureControl_CCO);

  0000a	68 00 00 00 00	 push	 OFFSET _LIBID_OposGestureControl_CCO
  0000f	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00012	50		 push	 eax
  00013	68 00 00 00 00	 push	 OFFSET ?ObjectMap@@3PAU_ATL_OBJMAP_ENTRY30@ATL@@A
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET ?_Module@@3VCComModule@ATL@@A ; _Module
  0001d	e8 00 00 00 00	 call	 ?Init@CComModule@ATL@@QAEJPAU_ATL_OBJMAP_ENTRY30@2@PAUHINSTANCE__@@PBU_GUID@@@Z ; ATL::CComModule::Init

; 54   :         DisableThreadLibraryCalls(hInstance);

  00022	8b f4		 mov	 esi, esp
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _hInstance$[ebp]
  00027	51		 push	 ecx
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DisableThreadLibraryCalls@4
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 55   :     }

  00035	eb 10		 jmp	 SHORT $LN3@DllMain
$LN2@DllMain:

; 56   :     else if (dwReason == DLL_PROCESS_DETACH)

  00037	83 7d 0c 00	 cmp	 DWORD PTR _dwReason$[ebp], 0
  0003b	75 0a		 jne	 SHORT $LN3@DllMain

; 57   :         _Module.Term();

  0003d	b9 00 00 00 00	 mov	 ecx, OFFSET ?_Module@@3VCComModule@ATL@@A ; _Module
  00042	e8 00 00 00 00	 call	 ?Term@CComModule@ATL@@QAEXXZ ; ATL::CComModule::Term
$LN3@DllMain:

; 58   :     return TRUE;    // ok

  00047	b8 01 00 00 00	 mov	 eax, 1

; 59   : }

  0004c	5e		 pop	 esi
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	5d		 pop	 ebp
  00055	c2 0c 00	 ret	 12			; 0000000cH
_DllMain@12 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?CreateInstance@?$CComCreator2@V?$CComCreator@V?$CComObject@VCOPOSGestureControl@@@ATL@@@ATL@@V?$CComCreator@V?$CComAggObject@VCOPOSGestureControl@@@ATL@@@2@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv83 = -4						; size = 4
_pv$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?CreateInstance@?$CComCreator2@V?$CComCreator@V?$CComObject@VCOPOSGestureControl@@@ATL@@@ATL@@V?$CComCreator@V?$CComAggObject@VCOPOSGestureControl@@@ATL@@@2@@ATL@@SGJPAXABU_GUID@@PAPAX@Z PROC ; ATL::CComCreator2<ATL::CComCreator<ATL::CComObject<COPOSGestureControl> >,ATL::CComCreator<ATL::CComAggObject<COPOSGestureControl> > >::CreateInstance, COMDAT

; 2096 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 2097 : 		ATLASSERT(ppv != NULL);

  0000b	83 7d 10 00	 cmp	 DWORD PTR _ppv$[ebp], 0
  0000f	75 26		 jne	 SHORT $LN3@CreateInst
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@MNKGOHDN@?$AAp?$AAp?$AAv?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0001b	6a 00		 push	 0
  0001d	68 31 08 00 00	 push	 2097			; 00000831H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00027	6a 02		 push	 2
  00029	e8 00 00 00 00	 call	 __CrtDbgReportW
  0002e	83 c4 18	 add	 esp, 24			; 00000018H
  00031	83 f8 01	 cmp	 eax, 1
  00034	75 01		 jne	 SHORT $LN3@CreateInst
  00036	cc		 int	 3
$LN3@CreateInst:

; 2098 : 
; 2099 : 		return (pv == NULL) ?

  00037	83 7d 08 00	 cmp	 DWORD PTR _pv$[ebp], 0
  0003b	75 14		 jne	 SHORT $LN4@CreateInst
  0003d	8b 4d 10	 mov	 ecx, DWORD PTR _ppv$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 0c	 mov	 edx, DWORD PTR _riid$[ebp]
  00044	52		 push	 edx
  00045	6a 00		 push	 0
  00047	e8 00 00 00 00	 call	 ?CreateInstance@?$CComCreator@V?$CComObject@VCOPOSGestureControl@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ; ATL::CComCreator<ATL::CComObject<COPOSGestureControl> >::CreateInstance
  0004c	89 45 fc	 mov	 DWORD PTR tv83[ebp], eax
  0004f	eb 14		 jmp	 SHORT $LN5@CreateInst
$LN4@CreateInst:
  00051	8b 45 10	 mov	 eax, DWORD PTR _ppv$[ebp]
  00054	50		 push	 eax
  00055	8b 4d 0c	 mov	 ecx, DWORD PTR _riid$[ebp]
  00058	51		 push	 ecx
  00059	8b 55 08	 mov	 edx, DWORD PTR _pv$[ebp]
  0005c	52		 push	 edx
  0005d	e8 00 00 00 00	 call	 ?CreateInstance@?$CComCreator@V?$CComAggObject@VCOPOSGestureControl@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ; ATL::CComCreator<ATL::CComAggObject<COPOSGestureControl> >::CreateInstance
  00062	89 45 fc	 mov	 DWORD PTR tv83[ebp], eax
$LN5@CreateInst:
  00065	8b 45 fc	 mov	 eax, DWORD PTR tv83[ebp]

; 2100 : 			T1::CreateInstance(NULL, riid, ppv) :
; 2101 : 			T2::CreateInstance(pv, riid, ppv);
; 2102 : 	}

  00068	83 c4 04	 add	 esp, 4
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 0c 00	 ret	 12			; 0000000cH
?CreateInstance@?$CComCreator2@V?$CComCreator@V?$CComObject@VCOPOSGestureControl@@@ATL@@@ATL@@V?$CComCreator@V?$CComAggObject@VCOPOSGestureControl@@@ATL@@@2@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ENDP ; ATL::CComCreator2<ATL::CComCreator<ATL::CComObject<COPOSGestureControl> >,ATL::CComCreator<ATL::CComAggObject<COPOSGestureControl> > >::CreateInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv177 = -24						; size = 4
tv85 = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_p$ = -8						; size = 4
_hRes$ = -4						; size = 4
_pv$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z PROC ; ATL::CComCreator<ATL::CComObjectCached<ATL::CComClassFactory> >::CreateInstance, COMDAT

; 1994 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 1995 : 		ATLASSERT(ppv != NULL);

  0001e	83 7d 10 00	 cmp	 DWORD PTR _ppv$[ebp], 0
  00022	75 26		 jne	 SHORT $LN9@CreateInst
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@MNKGOHDN@?$AAp?$AAp?$AAv?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0002e	6a 00		 push	 0
  00030	68 cb 07 00 00	 push	 1995			; 000007cbH
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0003a	6a 02		 push	 2
  0003c	e8 00 00 00 00	 call	 __CrtDbgReportW
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN9@CreateInst
  00049	cc		 int	 3
$LN9@CreateInst:

; 1996 : 		if (ppv == NULL)

  0004a	83 7d 10 00	 cmp	 DWORD PTR _ppv$[ebp], 0
  0004e	75 0a		 jne	 SHORT $LN2@CreateInst

; 1997 : 			return E_POINTER;

  00050	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00055	e9 0f 01 00 00	 jmp	 $LN1@CreateInst
$LN2@CreateInst:

; 1998 : 		*ppv = NULL;

  0005a	8b 4d 10	 mov	 ecx, DWORD PTR _ppv$[ebp]
  0005d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 1999 : 
; 2000 : 		HRESULT hRes = E_OUTOFMEMORY;

  00063	c7 45 fc 0e 00
	07 80		 mov	 DWORD PTR _hRes$[ebp], -2147024882 ; 8007000eH

; 2001 : 		T1* p = NULL;

  0006a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], 0

; 2002 : 
; 2003 : ATLPREFAST_SUPPRESS(6014 28197)
; 2004 : 		/* prefast noise VSW 489981 */
; 2005 : 		ATLTRY(p = _ATL_NEW T1(pv))

  00071	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00076	6a 28		 push	 40			; 00000028H
  00078	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  0007d	83 c4 08	 add	 esp, 8
  00080	89 45 f4	 mov	 DWORD PTR $T2[ebp], eax
  00083	83 7d f4 00	 cmp	 DWORD PTR $T2[ebp], 0
  00087	74 11		 je	 SHORT $LN10@CreateInst
  00089	8b 55 08	 mov	 edx, DWORD PTR _pv$[ebp]
  0008c	52		 push	 edx
  0008d	8b 4d f4	 mov	 ecx, DWORD PTR $T2[ebp]
  00090	e8 00 00 00 00	 call	 ??0?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComObjectCached<ATL::CComClassFactory>::CComObjectCached<ATL::CComClassFactory>
  00095	89 45 ec	 mov	 DWORD PTR tv85[ebp], eax
  00098	eb 07		 jmp	 SHORT $LN11@CreateInst
$LN10@CreateInst:
  0009a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN11@CreateInst:
  000a1	8b 45 ec	 mov	 eax, DWORD PTR tv85[ebp]
  000a4	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax

; 2006 : ATLPREFAST_UNSUPPRESS()
; 2007 : 
; 2008 : 		if (p != NULL)

  000a7	83 7d f8 00	 cmp	 DWORD PTR _p$[ebp], 0
  000ab	0f 84 b5 00 00
	00		 je	 $LN3@CreateInst

; 2009 : 		{
; 2010 : 			p->SetVoid(pv);

  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _pv$[ebp]
  000b4	51		 push	 ecx
  000b5	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000b8	e8 00 00 00 00	 call	 ?SetVoid@CComClassFactory@ATL@@QAEXPAX@Z ; ATL::CComClassFactory::SetVoid

; 2011 : 			p->InternalFinalConstructAddRef();

  000bd	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000c0	83 c1 04	 add	 ecx, 4
  000c3	e8 00 00 00 00	 call	 ?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructAddRef

; 2012 : 			hRes = p->_AtlInitialConstruct();

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000cb	83 c1 04	 add	 ecx, 4
  000ce	e8 00 00 00 00	 call	 ?_AtlInitialConstruct@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEJXZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::_AtlInitialConstruct
  000d3	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax

; 2013 : 			if (SUCCEEDED(hRes))

  000d6	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  000da	7c 0e		 jl	 SHORT $LN4@CreateInst

; 2014 : 				hRes = p->FinalConstruct();

  000dc	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000df	83 c1 04	 add	 ecx, 4
  000e2	e8 00 00 00 00	 call	 ?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::FinalConstruct
  000e7	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN4@CreateInst:

; 2015 : 			if (SUCCEEDED(hRes))

  000ea	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  000ee	7c 0e		 jl	 SHORT $LN5@CreateInst

; 2016 : 				hRes = p->_AtlFinalConstruct();

  000f0	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  000f3	83 c1 04	 add	 ecx, 4
  000f6	e8 00 00 00 00	 call	 ?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::_AtlFinalConstruct
  000fb	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN5@CreateInst:

; 2017 : 			p->InternalFinalConstructRelease();

  000fe	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  00101	83 c1 04	 add	 ecx, 4
  00104	e8 00 00 00 00	 call	 ?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructRelease

; 2018 : 			if (hRes == S_OK)

  00109	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  0010d	75 21		 jne	 SHORT $LN6@CreateInst

; 2019 : 			{
; 2020 : 				hRes = p->QueryInterface(riid, ppv);

  0010f	8b f4		 mov	 esi, esp
  00111	8b 55 10	 mov	 edx, DWORD PTR _ppv$[ebp]
  00114	52		 push	 edx
  00115	8b 45 0c	 mov	 eax, DWORD PTR _riid$[ebp]
  00118	50		 push	 eax
  00119	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  0011c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0011e	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  00121	50		 push	 eax
  00122	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00124	ff d1		 call	 ecx
  00126	3b f4		 cmp	 esi, esp
  00128	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012d	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN6@CreateInst:

; 2021 : 				_Analysis_assume_(hRes == S_OK || FAILED(hRes));
; 2022 : 			}
; 2023 : 			if (hRes != S_OK)

  00130	83 7d fc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00134	74 30		 je	 SHORT $LN3@CreateInst

; 2024 : 				delete p;

  00136	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  00139	89 55 f0	 mov	 DWORD PTR $T1[ebp], edx
  0013c	83 7d f0 00	 cmp	 DWORD PTR $T1[ebp], 0
  00140	74 1d		 je	 SHORT $LN12@CreateInst
  00142	8b f4		 mov	 esi, esp
  00144	6a 01		 push	 1
  00146	8b 45 f0	 mov	 eax, DWORD PTR $T1[ebp]
  00149	8b 10		 mov	 edx, DWORD PTR [eax]
  0014b	8b 4d f0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014e	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00151	ff d0		 call	 eax
  00153	3b f4		 cmp	 esi, esp
  00155	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015a	89 45 e8	 mov	 DWORD PTR tv177[ebp], eax
  0015d	eb 07		 jmp	 SHORT $LN3@CreateInst
$LN12@CreateInst:
  0015f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv177[ebp], 0
$LN3@CreateInst:

; 2025 : 		}
; 2026 : 		return hRes;

  00166	8b 45 fc	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@CreateInst:

; 2027 : 	}

  00169	5e		 pop	 esi
  0016a	83 c4 18	 add	 esp, 24			; 00000018H
  0016d	3b ec		 cmp	 ebp, esp
  0016f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00174	8b e5		 mov	 esp, ebp
  00176	5d		 pop	 ebp
  00177	c2 0c 00	 ret	 12			; 0000000cH
?CreateInstance@?$CComCreator@V?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ENDP ; ATL::CComCreator<ATL::CComObjectCached<ATL::CComClassFactory> >::CreateInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F_Module@@YAXXZ
text$yd	SEGMENT
??__F_Module@@YAXXZ PROC				; `dynamic atexit destructor for '_Module'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_Module@@3VCComModule@ATL@@A ; _Module
  00008	e8 00 00 00 00	 call	 ??1CComModule@ATL@@UAE@XZ ; ATL::CComModule::~CComModule
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??__F_Module@@YAXXZ ENDP				; `dynamic atexit destructor for '_Module''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControl.cpp
;	COMDAT ??__E_Module@@YAXXZ
text$di	SEGMENT
??__E_Module@@YAXXZ PROC				; `dynamic initializer for '_Module'', COMDAT

; 39   : CComModule _Module;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_Module@@3VCComModule@ATL@@A ; _Module
  00008	e8 00 00 00 00	 call	 ??0CComModule@ATL@@QAE@XZ ; ATL::CComModule::CComModule
  0000d	68 00 00 00 00	 push	 OFFSET ??__F_Module@@YAXXZ ; `dynamic atexit destructor for '_Module''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	3b ec		 cmp	 ebp, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??__E_Module@@YAXXZ ENDP				; `dynamic initializer for '_Module''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlEvent.h
;	COMDAT ?DoEvent@COPOSGestureControl@@IAEXIIJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Msg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?DoEvent@COPOSGestureControl@@IAEXIIJ@Z PROC		; COPOSGestureControl::DoEvent, COMDAT
; _this$ = ecx

; 428  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 429  :         // Restrict access of the following code to one thread at a time.
; 430  :         ::WaitForSingleObject( _Event_DoEventMutex, INFINITE );

  0000f	8b f4		 mov	 esi, esp
  00011	6a ff		 push	 -1
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 88 80 01 00
	00		 mov	 ecx, DWORD PTR [eax+384]
  0001c	51		 push	 ecx
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  00023	3b f4		 cmp	 esi, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 431  :         DOTRACEV( ( _T("+DoEvent: Msg 0x%X"), Msg ) );

  0002a	8b 55 08	 mov	 edx, DWORD PTR _Msg$[ebp]
  0002d	52		 push	 edx
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@BBHLCHLH@?$AA?$CL?$AAD?$AAo?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAM?$AAs?$AAg?$AA?5?$AA0@
  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?WriteTrace@COPOSGestureControl@@QAAXPB_WZZ ; COPOSGestureControl::WriteTrace
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 
; 433  :         // Clear the delivered flag.
; 434  :         _Event_bEventDelivered = false;

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	c6 81 7b 01 00
	00 00		 mov	 BYTE PTR [ecx+379], 0
$LN4@DoEvent:

; 435  : 
; 436  :         // Loop until delivered or events become illegal.
; 437  :         //   Can only execute more than once if events are frozen.
; 438  :         for (;;)
; 439  :         {
; 440  :             // The following two items must be in this order to avoid race
; 441  :             //   condition with "PreCloseRelease":
; 442  :             //  - Reset the event that the event function will use to tell us it is done.
; 443  :             ::ResetEvent( _Event_FiringDoneEvent );

  00049	8b f4		 mov	 esi, esp
  0004b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004e	8b 82 7c 01 00
	00		 mov	 eax, DWORD PTR [edx+380]
  00054	50		 push	 eax
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ResetEvent@4
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 444  :             // If events are not legal (release/close has been done),
; 445  :             //   then break out.
; 446  :             if ( ! _Event_bEventsLegal )

  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	0f b6 91 79 01
	00 00		 movzx	 edx, BYTE PTR [ecx+377]
  0006c	85 d2		 test	 edx, edx
  0006e	75 05		 jne	 SHORT $LN5@DoEvent

; 447  :                 break;

  00070	e9 85 00 00 00	 jmp	 $LN3@DoEvent
$LN5@DoEvent:

; 448  : 
; 449  :             // Post an event message to the event window.
; 450  :             DOTRACEV( ( _T("*DoEvent: Posting event firing message") ) );

  00075	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@NLBACKII@?$AA?$CK?$AAD?$AAo?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAP?$AAo?$AAs?$AAt?$AAi@
  0007a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ?WriteTrace@COPOSGestureControl@@QAAXPB_WZZ ; COPOSGestureControl::WriteTrace
  00083	83 c4 08	 add	 esp, 8

; 451  :             ::PostMessage( _Event_hEventWnd, Msg, wParam, lParam );

  00086	8b f4		 mov	 esi, esp
  00088	8b 4d 10	 mov	 ecx, DWORD PTR _lParam$[ebp]
  0008b	51		 push	 ecx
  0008c	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  0008f	52		 push	 edx
  00090	8b 45 08	 mov	 eax, DWORD PTR _Msg$[ebp]
  00093	50		 push	 eax
  00094	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00097	8b 91 84 01 00
	00		 mov	 edx, DWORD PTR [ecx+388]
  0009d	52		 push	 edx
  0009e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageW@16
  000a4	3b f4		 cmp	 esi, esp
  000a6	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 452  : 
; 453  :             // Wait for the event handler to finish (or for the exception case of
; 454  :             //   Release or Close called).
; 455  :             ::WaitForSingleObject( _Event_FiringDoneEvent, INFINITE );

  000ab	8b f4		 mov	 esi, esp
  000ad	6a ff		 push	 -1
  000af	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b2	8b 88 7c 01 00
	00		 mov	 ecx, DWORD PTR [eax+380]
  000b8	51		 push	 ecx
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  000bf	3b f4		 cmp	 esi, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 456  : 
; 457  :             // If the message was delivered, then break out: done!
; 458  :             //
; 459  :             // If events are now illegal, then Close or Release occurred during the
; 460  :             // event firing, so bail out -- the delivery may or may not have occurred.
; 461  :             // Either the Close or Release function was called by the event handler
; 462  :             // (in which case we generated an exception), or Close or Release was
; 463  :             // called before our event function message handler got control.
; 464  :             //
; 465  :             if ( _Event_bEventDelivered || ! _Event_bEventsLegal )

  000c6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c9	0f b6 82 7b 01
	00 00		 movzx	 eax, BYTE PTR [edx+379]
  000d0	85 c0		 test	 eax, eax
  000d2	75 0e		 jne	 SHORT $LN7@DoEvent
  000d4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	0f b6 91 79 01
	00 00		 movzx	 edx, BYTE PTR [ecx+377]
  000de	85 d2		 test	 edx, edx
  000e0	75 02		 jne	 SHORT $LN6@DoEvent
$LN7@DoEvent:

; 466  :                 break;

  000e2	eb 16		 jmp	 SHORT $LN3@DoEvent
$LN6@DoEvent:

; 467  : 
; 468  :             // If events legal but not delivered, then either the container or app
; 469  :             //   has frozen them.  Could have used events to trigger when to retry,
; 470  :             //   but since this should be an uncommon situation, we'll just sleep
; 471  :             //   for a short while, then retry.
; 472  :             Sleep( 100 );                   // Wait 1/10 second.

  000e4	8b f4		 mov	 esi, esp
  000e6	6a 64		 push	 100			; 00000064H
  000e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Sleep@4
  000ee	3b f4		 cmp	 esi, esp
  000f0	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 473  :         }

  000f5	e9 4f ff ff ff	 jmp	 $LN4@DoEvent
$LN3@DoEvent:

; 474  : 
; 475  :         // Allow other threads.
; 476  :         DOTRACEV( ( _T("-DoEvent: Msg 0x%X"), Msg ) );

  000fa	8b 45 08	 mov	 eax, DWORD PTR _Msg$[ebp]
  000fd	50		 push	 eax
  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@IKKLCHHJ@?$AA?9?$AAD?$AAo?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAM?$AAs?$AAg?$AA?5?$AA0@
  00103	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00106	51		 push	 ecx
  00107	e8 00 00 00 00	 call	 ?WriteTrace@COPOSGestureControl@@QAAXPB_WZZ ; COPOSGestureControl::WriteTrace
  0010c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 477  :         ::ReleaseMutex( _Event_DoEventMutex );

  0010f	8b f4		 mov	 esi, esp
  00111	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00114	8b 82 80 01 00
	00		 mov	 eax, DWORD PTR [edx+384]
  0011a	50		 push	 eax
  0011b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseMutex@4
  00121	3b f4		 cmp	 esi, esp
  00123	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 478  :     }

  00128	5e		 pop	 esi
  00129	83 c4 04	 add	 esp, 4
  0012c	3b ec		 cmp	 ebp, esp
  0012e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00133	8b e5		 mov	 esp, ebp
  00135	5d		 pop	 ebp
  00136	c2 0c 00	 ret	 12			; 0000000cH
?DoEvent@COPOSGestureControl@@IAEXIIJ@Z ENDP		; COPOSGestureControl::DoEvent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlEvent.h
;	COMDAT ?SOStatusUpdate@COPOSGestureControl@@MAGJJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Data$ = 12						; size = 4
?SOStatusUpdate@COPOSGestureControl@@MAGJJ@Z PROC	; COPOSGestureControl::SOStatusUpdate, COMDAT

; 376  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 377  :         DOTRACEV( ( _T("+StatusUpdateEvent: Data %d"), Data ) );

  00004	8b 45 0c	 mov	 eax, DWORD PTR _Data$[ebp]
  00007	50		 push	 eax
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_1DI@OMBDAFMJ@?$AA?$CL?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAE?$AAv@
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?WriteTrace@COPOSGestureControl@@QAAXPB_WZZ ; COPOSGestureControl::WriteTrace
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH

; 378  : 
; 379  :         if ( _Event_ControlThreadID == GetCurrentThreadId() )

  00019	8b f4		 mov	 esi, esp
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentThreadId@0
  00021	3b f4		 cmp	 esi, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	39 82 74 01 00
	00		 cmp	 DWORD PTR [edx+372], eax
  00031	75 14		 jne	 SHORT $LN2@SOStatusUp

; 380  :             CProxy_IOPOSEvents< COPOSGestureControl >::Fire_StatusUpdateEvent( Data );

  00033	8b 45 0c	 mov	 eax, DWORD PTR _Data$[ebp]
  00036	50		 push	 eax
  00037	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  00040	e8 00 00 00 00	 call	 ?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJ@Z ; CProxy_IOPOSEvents<COPOSGestureControl>::Fire_StatusUpdateEvent
  00045	eb 13		 jmp	 SHORT $LN3@SOStatusUp
$LN2@SOStatusUp:

; 381  :         else
; 382  :             DoEvent( WMU_STATUS_UPDATE_EVENT, Data, 0 );

  00047	6a 00		 push	 0
  00049	8b 4d 0c	 mov	 ecx, DWORD PTR _Data$[ebp]
  0004c	51		 push	 ecx
  0004d	68 68 04 00 00	 push	 1128			; 00000468H
  00052	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?DoEvent@COPOSGestureControl@@IAEXIIJ@Z ; COPOSGestureControl::DoEvent
$LN3@SOStatusUp:

; 383  : 
; 384  :         DOTRACEV( ( _T("-StatusUpdateEvent") ) );

  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@NFFONGGK@?$AA?9?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAE?$AAv@
  0005f	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00062	52		 push	 edx
  00063	e8 00 00 00 00	 call	 ?WriteTrace@COPOSGestureControl@@QAAXPB_WZZ ; COPOSGestureControl::WriteTrace
  00068	83 c4 08	 add	 esp, 8

; 385  :         return S_OK;

  0006b	33 c0		 xor	 eax, eax

; 386  :     }

  0006d	5e		 pop	 esi
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
?SOStatusUpdate@COPOSGestureControl@@MAGJJ@Z ENDP	; COPOSGestureControl::SOStatusUpdate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlEvent.h
;	COMDAT ?SOOutputComplete@COPOSGestureControl@@MAGJJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_OutputID$ = 12						; size = 4
?SOOutputComplete@COPOSGestureControl@@MAGJJ@Z PROC	; COPOSGestureControl::SOOutputComplete, COMDAT

; 361  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 362  :         DOTRACEV( ( _T("+OutputCompleteEvent: OutputID %d"), OutputID ) );

  00004	8b 45 0c	 mov	 eax, DWORD PTR _OutputID$[ebp]
  00007	50		 push	 eax
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@DPNPCNOD@?$AA?$CL?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe@
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?WriteTrace@COPOSGestureControl@@QAAXPB_WZZ ; COPOSGestureControl::WriteTrace
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH

; 363  : 
; 364  :         if ( _Event_ControlThreadID == GetCurrentThreadId() )

  00019	8b f4		 mov	 esi, esp
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentThreadId@0
  00021	3b f4		 cmp	 esi, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	39 82 74 01 00
	00		 cmp	 DWORD PTR [edx+372], eax
  00031	75 14		 jne	 SHORT $LN2@SOOutputCo

; 365  :             CProxy_IOPOSEvents< COPOSGestureControl >::Fire_OutputCompleteEvent( OutputID );

  00033	8b 45 0c	 mov	 eax, DWORD PTR _OutputID$[ebp]
  00036	50		 push	 eax
  00037	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  00040	e8 00 00 00 00	 call	 ?Fire_OutputCompleteEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJ@Z ; CProxy_IOPOSEvents<COPOSGestureControl>::Fire_OutputCompleteEvent
  00045	eb 13		 jmp	 SHORT $LN3@SOOutputCo
$LN2@SOOutputCo:

; 366  :         else
; 367  :             DoEvent( WMU_OUTPUT_COMPLETE_EVENT, OutputID, 0 );

  00047	6a 00		 push	 0
  00049	8b 4d 0c	 mov	 ecx, DWORD PTR _OutputID$[ebp]
  0004c	51		 push	 ecx
  0004d	68 67 04 00 00	 push	 1127			; 00000467H
  00052	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?DoEvent@COPOSGestureControl@@IAEXIIJ@Z ; COPOSGestureControl::DoEvent
$LN3@SOOutputCo:

; 368  : 
; 369  :         DOTRACEV( ( _T("-OutputCompleteEvent") ) );

  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@BBCBFAGA@?$AA?9?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe@
  0005f	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00062	52		 push	 edx
  00063	e8 00 00 00 00	 call	 ?WriteTrace@COPOSGestureControl@@QAAXPB_WZZ ; COPOSGestureControl::WriteTrace
  00068	83 c4 08	 add	 esp, 8

; 370  :         return S_OK;

  0006b	33 c0		 xor	 eax, eax

; 371  :     }

  0006d	5e		 pop	 esi
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
?SOOutputComplete@COPOSGestureControl@@MAGJJ@Z ENDP	; COPOSGestureControl::SOOutputComplete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlEvent.h
;	COMDAT ?SOError@COPOSGestureControl@@MAGJJJJPAJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ResultCode$ = 12					; size = 4
_ResultCodeExtended$ = 16				; size = 4
_ErrorLocus$ = 20					; size = 4
_pErrorResponse$ = 24					; size = 4
?SOError@COPOSGestureControl@@MAGJJJJPAJ@Z PROC		; COPOSGestureControl::SOError, COMDAT

; 340  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 341  :         DOTRACEV( ( _T("+ErrorEvent: RC %d, RCExt %d (0x%X), Locus %d, Response %d"), \

  00004	8b 45 18	 mov	 eax, DWORD PTR _pErrorResponse$[ebp]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	51		 push	 ecx
  0000a	8b 55 14	 mov	 edx, DWORD PTR _ErrorLocus$[ebp]
  0000d	52		 push	 edx
  0000e	8b 45 10	 mov	 eax, DWORD PTR _ResultCodeExtended$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 10	 mov	 ecx, DWORD PTR _ResultCodeExtended$[ebp]
  00015	51		 push	 ecx
  00016	8b 55 0c	 mov	 edx, DWORD PTR _ResultCode$[ebp]
  00019	52		 push	 edx
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_1HG@FBPJDKIH@?$AA?$CL?$AAE?$AAr?$AAr?$AAo?$AAr?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAR?$AAC@
  0001f	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ?WriteTrace@COPOSGestureControl@@QAAXPB_WZZ ; COPOSGestureControl::WriteTrace
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH

; 342  :             ResultCode, ResultCodeExtended, ResultCodeExtended, ErrorLocus, *pErrorResponse ) );
; 343  : 
; 344  :         if ( _Event_ControlThreadID == GetCurrentThreadId() )

  0002b	8b f4		 mov	 esi, esp
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentThreadId@0
  00033	3b f4		 cmp	 esi, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	39 81 74 01 00
	00		 cmp	 DWORD PTR [ecx+372], eax
  00043	75 20		 jne	 SHORT $LN2@SOError

; 345  :             CProxy_IOPOSEvents< COPOSGestureControl >::Fire_ErrorEvent( ResultCode, ResultCodeExtended,

  00045	8b 55 18	 mov	 edx, DWORD PTR _pErrorResponse$[ebp]
  00048	52		 push	 edx
  00049	8b 45 14	 mov	 eax, DWORD PTR _ErrorLocus$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d 10	 mov	 ecx, DWORD PTR _ResultCodeExtended$[ebp]
  00050	51		 push	 ecx
  00051	8b 55 0c	 mov	 edx, DWORD PTR _ResultCode$[ebp]
  00054	52		 push	 edx
  00055	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  0005e	e8 00 00 00 00	 call	 ?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJJJPAJ@Z ; CProxy_IOPOSEvents<COPOSGestureControl>::Fire_ErrorEvent
  00063	eb 2d		 jmp	 SHORT $LN3@SOError
$LN2@SOError:

; 346  :                     ErrorLocus, pErrorResponse );
; 347  :         else
; 348  :         {
; 349  :             _Event_Err_ErrorLocus = ErrorLocus;

  00065	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 4d 14	 mov	 ecx, DWORD PTR _ErrorLocus$[ebp]
  0006b	89 88 8c 01 00
	00		 mov	 DWORD PTR [eax+396], ecx

; 350  :             _Event_Err_pErrorResponse = pErrorResponse;

  00071	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00074	8b 45 18	 mov	 eax, DWORD PTR _pErrorResponse$[ebp]
  00077	89 82 90 01 00
	00		 mov	 DWORD PTR [edx+400], eax

; 351  :             DoEvent( WMU_ERROR_EVENT, ResultCode, ResultCodeExtended );

  0007d	8b 4d 10	 mov	 ecx, DWORD PTR _ResultCodeExtended$[ebp]
  00080	51		 push	 ecx
  00081	8b 55 0c	 mov	 edx, DWORD PTR _ResultCode$[ebp]
  00084	52		 push	 edx
  00085	68 66 04 00 00	 push	 1126			; 00000466H
  0008a	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	e8 00 00 00 00	 call	 ?DoEvent@COPOSGestureControl@@IAEXIIJ@Z ; COPOSGestureControl::DoEvent
$LN3@SOError:

; 352  :         }
; 353  : 
; 354  :         DOTRACEV( ( _T("-ErrorEvent: Response %d"), *pErrorResponse ) );

  00092	8b 45 18	 mov	 eax, DWORD PTR _pErrorResponse$[ebp]
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	51		 push	 ecx
  00098	68 00 00 00 00	 push	 OFFSET ??_C@_1DC@PMEACJIH@?$AA?9?$AAE?$AAr?$AAr?$AAo?$AAr?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAR?$AAe@
  0009d	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  000a0	52		 push	 edx
  000a1	e8 00 00 00 00	 call	 ?WriteTrace@COPOSGestureControl@@QAAXPB_WZZ ; COPOSGestureControl::WriteTrace
  000a6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 355  :         return S_OK;

  000a9	33 c0		 xor	 eax, eax

; 356  :     }

  000ab	5e		 pop	 esi
  000ac	3b ec		 cmp	 ebp, esp
  000ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b3	5d		 pop	 ebp
  000b4	c2 14 00	 ret	 20			; 00000014H
?SOError@COPOSGestureControl@@MAGJJJJPAJ@Z ENDP		; COPOSGestureControl::SOError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlEvent.h
;	COMDAT ?SODirectIO@COPOSGestureControl@@MAGJJPAJPAPA_W@Z
_TEXT	SEGMENT
$T1 = -52						; size = 4
_nStrLen$ = -48						; size = 4
_DIOStr$ = -40						; size = 24
_hr$ = -8						; size = 4
_this$ = 8						; size = 4
_EventNumber$ = 12					; size = 4
_pData$ = 16						; size = 4
_pString$ = 20						; size = 4
?SODirectIO@COPOSGestureControl@@MAGJJPAJPAPA_W@Z PROC	; COPOSGestureControl::SODirectIO, COMDAT

; 304  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d cc	 lea	 edi, DWORD PTR [ebp-52]
  0000b	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd

; 305  :     #ifdef _DEBUG
; 306  :         DOTRACEV( ( _T("+DirectIOEvent: Event %d (0x%X), Data %d (0x%X)"), \

  00017	8b 45 10	 mov	 eax, DWORD PTR _pData$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	51		 push	 ecx
  0001d	8b 55 10	 mov	 edx, DWORD PTR _pData$[ebp]
  00020	8b 02		 mov	 eax, DWORD PTR [edx]
  00022	50		 push	 eax
  00023	8b 4d 0c	 mov	 ecx, DWORD PTR _EventNumber$[ebp]
  00026	51		 push	 ecx
  00027	8b 55 0c	 mov	 edx, DWORD PTR _EventNumber$[ebp]
  0002a	52		 push	 edx
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1GA@DMLHJIOB@?$AA?$CL?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3@
  00030	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?WriteTrace@COPOSGestureControl@@QAAXPB_WZZ ; COPOSGestureControl::WriteTrace
  00039	83 c4 18	 add	 esp, 24			; 00000018H

; 307  :             EventNumber, EventNumber, *pData, *pData ) );
; 308  :         DOTRACESTRINGV( _T("    String."), *pString );

  0003c	8b 4d 14	 mov	 ecx, DWORD PTR _pString$[ebp]
  0003f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00041	52		 push	 edx
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_1BI@KGBJECC@?$AA?5?$AA?5?$AA?5?$AA?5?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4@
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?WriteTraceString@COPOSGestureControl@@QAEXPB_WPA_W@Z ; COPOSGestureControl::WriteTraceString

; 309  :         HRESULT hr;
; 310  :         OposVariant DIOStr;

  0004f	8d 4d d8	 lea	 ecx, DWORD PTR _DIOStr$[ebp]
  00052	e8 00 00 00 00	 call	 ??0OposVariant@@QAE@XZ	; OposVariant::OposVariant

; 311  :         DIOStr.SetBSTR_Copy( *pString, hr );

  00057	8d 45 f8	 lea	 eax, DWORD PTR _hr$[ebp]
  0005a	50		 push	 eax
  0005b	8b 4d 14	 mov	 ecx, DWORD PTR _pString$[ebp]
  0005e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00060	52		 push	 edx
  00061	8d 4d d8	 lea	 ecx, DWORD PTR _DIOStr$[ebp]
  00064	e8 00 00 00 00	 call	 ?SetBSTR_Copy@OposVariant@@QAEXPA_WAAJ@Z ; OposVariant::SetBSTR_Copy

; 312  :     #endif
; 313  : 
; 314  :         if ( _Event_ControlThreadID == GetCurrentThreadId() )

  00069	8b f4		 mov	 esi, esp
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentThreadId@0
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	39 81 74 01 00
	00		 cmp	 DWORD PTR [ecx+372], eax
  00081	75 1c		 jne	 SHORT $LN2@SODirectIO

; 315  :             CProxy_IOPOSEvents< COPOSGestureControl >::Fire_DirectIOEvent( EventNumber, pData, pString );

  00083	8b 55 14	 mov	 edx, DWORD PTR _pString$[ebp]
  00086	52		 push	 edx
  00087	8b 45 10	 mov	 eax, DWORD PTR _pData$[ebp]
  0008a	50		 push	 eax
  0008b	8b 4d 0c	 mov	 ecx, DWORD PTR _EventNumber$[ebp]
  0008e	51		 push	 ecx
  0008f	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  00098	e8 00 00 00 00	 call	 ?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJPAJPAPA_W@Z ; CProxy_IOPOSEvents<COPOSGestureControl>::Fire_DirectIOEvent
  0009d	eb 21		 jmp	 SHORT $LN3@SODirectIO
$LN2@SODirectIO:

; 316  :         else
; 317  :         {
; 318  :             _Event_DIO_pString = pString;

  0009f	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  000a2	8b 45 14	 mov	 eax, DWORD PTR _pString$[ebp]
  000a5	89 82 88 01 00
	00		 mov	 DWORD PTR [edx+392], eax

; 319  :             DoEvent( WMU_DIRECT_IO_EVENT, EventNumber, (LPARAM) pData );

  000ab	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  000ae	51		 push	 ecx
  000af	8b 55 0c	 mov	 edx, DWORD PTR _EventNumber$[ebp]
  000b2	52		 push	 edx
  000b3	68 65 04 00 00	 push	 1125			; 00000465H
  000b8	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	e8 00 00 00 00	 call	 ?DoEvent@COPOSGestureControl@@IAEXIIJ@Z ; COPOSGestureControl::DoEvent
$LN3@SODirectIO:

; 320  :         }
; 321  : 
; 322  :     #ifdef _DEBUG
; 323  :         UINT nStrLen = ::SysStringByteLen( DIOStr.bstrVal );

  000c0	8b f4		 mov	 esi, esp
  000c2	8b 45 e0	 mov	 eax, DWORD PTR _DIOStr$[ebp+8]
  000c5	50		 push	 eax
  000c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysStringByteLen@4
  000cc	3b f4		 cmp	 esi, esp
  000ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d3	89 45 d0	 mov	 DWORD PTR _nStrLen$[ebp], eax

; 324  :         if ( nStrLen == ::SysStringByteLen( *pString ) &&

  000d6	8b f4		 mov	 esi, esp
  000d8	8b 4d 14	 mov	 ecx, DWORD PTR _pString$[ebp]
  000db	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dd	52		 push	 edx
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysStringByteLen@4
  000e4	3b f4		 cmp	 esi, esp
  000e6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000eb	39 45 d0	 cmp	 DWORD PTR _nStrLen$[ebp], eax
  000ee	75 39		 jne	 SHORT $LN4@SODirectIO
  000f0	8b 45 d0	 mov	 eax, DWORD PTR _nStrLen$[ebp]
  000f3	50		 push	 eax
  000f4	8b 4d 14	 mov	 ecx, DWORD PTR _pString$[ebp]
  000f7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f9	52		 push	 edx
  000fa	8b 45 e0	 mov	 eax, DWORD PTR _DIOStr$[ebp+8]
  000fd	50		 push	 eax
  000fe	e8 00 00 00 00	 call	 _memcmp
  00103	83 c4 0c	 add	 esp, 12			; 0000000cH
  00106	85 c0		 test	 eax, eax
  00108	75 1f		 jne	 SHORT $LN4@SODirectIO

; 325  :              0 == ::memcmp( DIOStr.bstrVal, *pString, nStrLen ) )
; 326  :             DOTRACEV( ( _T("-DirectIOEvent: Data %d (0x%X); String Unchanged"), *pData, *pData ) );

  0010a	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0010d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010f	52		 push	 edx
  00110	8b 45 10	 mov	 eax, DWORD PTR _pData$[ebp]
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	51		 push	 ecx
  00116	68 00 00 00 00	 push	 OFFSET ??_C@_1GC@IKMABJEN@?$AA?9?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3@
  0011b	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0011e	52		 push	 edx
  0011f	e8 00 00 00 00	 call	 ?WriteTrace@COPOSGestureControl@@QAAXPB_WZZ ; COPOSGestureControl::WriteTrace
  00124	83 c4 10	 add	 esp, 16			; 00000010H
  00127	eb 30		 jmp	 SHORT $LN5@SODirectIO
$LN4@SODirectIO:

; 327  :         else
; 328  :         {
; 329  :             DOTRACEV( ( _T("-DirectIOEvent: Data %d (0x%X)"), *pData, *pData ) );

  00129	8b 45 10	 mov	 eax, DWORD PTR _pData$[ebp]
  0012c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012e	51		 push	 ecx
  0012f	8b 55 10	 mov	 edx, DWORD PTR _pData$[ebp]
  00132	8b 02		 mov	 eax, DWORD PTR [edx]
  00134	50		 push	 eax
  00135	68 00 00 00 00	 push	 OFFSET ??_C@_1DO@FFEJMENC@?$AA?9?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3@
  0013a	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0013d	51		 push	 ecx
  0013e	e8 00 00 00 00	 call	 ?WriteTrace@COPOSGestureControl@@QAAXPB_WZZ ; COPOSGestureControl::WriteTrace
  00143	83 c4 10	 add	 esp, 16			; 00000010H

; 330  :             DOTRACESTRINGV( _T("    String."), *pString );

  00146	8b 55 14	 mov	 edx, DWORD PTR _pString$[ebp]
  00149	8b 02		 mov	 eax, DWORD PTR [edx]
  0014b	50		 push	 eax
  0014c	68 00 00 00 00	 push	 OFFSET ??_C@_1BI@KGBJECC@?$AA?5?$AA?5?$AA?5?$AA?5?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4@
  00151	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00154	e8 00 00 00 00	 call	 ?WriteTraceString@COPOSGestureControl@@QAEXPB_WPA_W@Z ; COPOSGestureControl::WriteTraceString
$LN5@SODirectIO:

; 331  :         }
; 332  :     #endif
; 333  :         return S_OK;

  00159	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
  00160	8d 4d d8	 lea	 ecx, DWORD PTR _DIOStr$[ebp]
  00163	e8 00 00 00 00	 call	 ??1OposVariant@@QAE@XZ	; OposVariant::~OposVariant
  00168	8b 45 cc	 mov	 eax, DWORD PTR $T1[ebp]

; 334  :     }

  0016b	52		 push	 edx
  0016c	8b cd		 mov	 ecx, ebp
  0016e	50		 push	 eax
  0016f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@SODirectIO
  00175	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0017a	58		 pop	 eax
  0017b	5a		 pop	 edx
  0017c	5f		 pop	 edi
  0017d	5e		 pop	 esi
  0017e	83 c4 34	 add	 esp, 52			; 00000034H
  00181	3b ec		 cmp	 ebp, esp
  00183	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00188	8b e5		 mov	 esp, ebp
  0018a	5d		 pop	 ebp
  0018b	c2 10 00	 ret	 16			; 00000010H
  0018e	66 90		 npad	 2
$LN10@SODirectIO:
  00190	02 00 00 00	 DD	 2
  00194	00 00 00 00	 DD	 $LN9@SODirectIO
$LN9@SODirectIO:
  00198	f8 ff ff ff	 DD	 -8			; fffffff8H
  0019c	04 00 00 00	 DD	 4
  001a0	00 00 00 00	 DD	 $LN7@SODirectIO
  001a4	d8 ff ff ff	 DD	 -40			; ffffffd8H
  001a8	18 00 00 00	 DD	 24			; 00000018H
  001ac	00 00 00 00	 DD	 $LN8@SODirectIO
$LN8@SODirectIO:
  001b0	44		 DB	 68			; 00000044H
  001b1	49		 DB	 73			; 00000049H
  001b2	4f		 DB	 79			; 0000004fH
  001b3	53		 DB	 83			; 00000053H
  001b4	74		 DB	 116			; 00000074H
  001b5	72		 DB	 114			; 00000072H
  001b6	00		 DB	 0
$LN7@SODirectIO:
  001b7	68		 DB	 104			; 00000068H
  001b8	72		 DB	 114			; 00000072H
  001b9	00		 DB	 0
?SODirectIO@COPOSGestureControl@@MAGJJPAJPAPA_W@Z ENDP	; COPOSGestureControl::SODirectIO
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlEvent.h
;	COMDAT ?SODataDummy@COPOSGestureControl@@MAGJJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Status$ = 12						; size = 4
?SODataDummy@COPOSGestureControl@@MAGJJ@Z PROC		; COPOSGestureControl::SODataDummy, COMDAT

; 297  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 298  :         return E_NOTIMPL;

  00003	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H

; 299  :     }

  00008	5d		 pop	 ebp
  00009	c2 08 00	 ret	 8
?SODataDummy@COPOSGestureControl@@MAGJJ@Z ENDP		; COPOSGestureControl::SODataDummy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlImpl.h
;	COMDAT ?_GetViewStatus@COPOSGestureControl@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_GetViewStatus@COPOSGestureControl@@QAEKXZ PROC	; COPOSGestureControl::_GetViewStatus, COMDAT
; _this$ = ecx

; 279  :     DECLARE_VIEW_STATUS(VIEWSTATUS_SOLIDBKGND | VIEWSTATUS_OPAQUE)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b8 03 00 00 00	 mov	 eax, 3
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?_GetViewStatus@COPOSGestureControl@@QAEKXZ ENDP	; COPOSGestureControl::_GetViewStatus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlImpl.h
;	COMDAT ?ProcessWindowMessage@COPOSGestureControl@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT
tv64 = -20						; size = 4
$T1 = -16						; size = 8
_bHandled$ = -8						; size = 4
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_lResult$ = 24						; size = 4
_dwMsgMapID$ = 28					; size = 4
?ProcessWindowMessage@COPOSGestureControl@@UAEHPAUHWND__@@IIJAAJK@Z PROC ; COPOSGestureControl::ProcessWindowMessage, COMDAT
; _this$ = ecx

; 273  : BEGIN_MSG_MAP(COPOSGestureControl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _bHandled$[ebp], 1
  00024	8b 45 1c	 mov	 eax, DWORD PTR _dwMsgMapID$[ebp]
  00027	89 45 ec	 mov	 DWORD PTR tv64[ebp], eax
  0002a	83 7d ec 00	 cmp	 DWORD PTR tv64[ebp], 0
  0002e	74 02		 je	 SHORT $LN4@ProcessWin
  00030	eb 55		 jmp	 SHORT $LN7@ProcessWin
$LN4@ProcessWin:

; 274  :     CHAIN_MSG_MAP(CComControl<COPOSGestureControl>)

  00032	6a 00		 push	 0
  00034	8b 4d 18	 mov	 ecx, DWORD PTR _lResult$[ebp]
  00037	51		 push	 ecx
  00038	8b 55 14	 mov	 edx, DWORD PTR _lParam$[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  00043	51		 push	 ecx
  00044	8b 55 08	 mov	 edx, DWORD PTR _hWnd$[ebp]
  00047	52		 push	 edx
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?ProcessWindowMessage@?$CComControl@VCOPOSGestureControl@@V?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UAEHPAUHWND__@@IIJAAJK@Z ; ATL::CComControl<COPOSGestureControl,ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >::ProcessWindowMessage
  00050	85 c0		 test	 eax, eax
  00052	74 0a		 je	 SHORT $LN5@ProcessWin
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	e9 86 00 00 00	 jmp	 $LN1@ProcessWin
$LN5@ProcessWin:

; 275  :     DEFAULT_REFLECTION_HANDLER()

  0005e	8b 45 18	 mov	 eax, DWORD PTR _lResult$[ebp]
  00061	50		 push	 eax
  00062	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00065	51		 push	 ecx
  00066	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  00069	52		 push	 edx
  0006a	8b 45 0c	 mov	 eax, DWORD PTR _uMsg$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  00071	51		 push	 ecx
  00072	e8 00 00 00 00	 call	 ?DefaultReflectionHandler@?$CWindowImplRoot@VCWindow@ATL@@@ATL@@SAHPAUHWND__@@IIJAAJ@Z ; ATL::CWindowImplRoot<ATL::CWindow>::DefaultReflectionHandler
  00077	83 c4 14	 add	 esp, 20			; 00000014H
  0007a	85 c0		 test	 eax, eax
  0007c	74 07		 je	 SHORT $LN6@ProcessWin
  0007e	b8 01 00 00 00	 mov	 eax, 1
  00083	eb 5f		 jmp	 SHORT $LN1@ProcessWin
$LN6@ProcessWin:
  00085	eb 5b		 jmp	 SHORT $LN2@ProcessWin
$LN7@ProcessWin:

; 276  : END_MSG_MAP()

  00087	8b 55 1c	 mov	 edx, DWORD PTR _dwMsgMapID$[ebp]
  0008a	52		 push	 edx
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_1DK@DAANONID@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe@
  00090	6a 00		 push	 0
  00092	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  00097	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<32,0>::operator unsigned int
  0009c	50		 push	 eax
  0009d	68 14 01 00 00	 push	 276			; 00000114H
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@ECLACHDO@C?3?2Develop?2OPOS?9CCO?2zGestureCon@
  000a7	8d 4d f0	 lea	 ecx, DWORD PTR $T1[ebp]
  000aa	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000b5	83 c4 14	 add	 esp, 20			; 00000014H
  000b8	33 c0		 xor	 eax, eax
  000ba	75 26		 jne	 SHORT $LN2@ProcessWin
  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  000c1	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000c6	6a 00		 push	 0
  000c8	68 14 01 00 00	 push	 276			; 00000114H
  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_1HC@PBALCFGB@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  000d2	6a 02		 push	 2
  000d4	e8 00 00 00 00	 call	 __CrtDbgReportW
  000d9	83 c4 18	 add	 esp, 24			; 00000018H
  000dc	83 f8 01	 cmp	 eax, 1
  000df	75 01		 jne	 SHORT $LN2@ProcessWin
  000e1	cc		 int	 3
$LN2@ProcessWin:
  000e2	33 c0		 xor	 eax, eax
$LN1@ProcessWin:
  000e4	83 c4 14	 add	 esp, 20			; 00000014H
  000e7	3b ec		 cmp	 ebp, esp
  000e9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ee	8b e5		 mov	 esp, ebp
  000f0	5d		 pop	 ebp
  000f1	c2 18 00	 ret	 24			; 00000018H
?ProcessWindowMessage@COPOSGestureControl@@UAEHPAUHWND__@@IIJAAJK@Z ENDP ; COPOSGestureControl::ProcessWindowMessage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlImpl.h
;	COMDAT ?GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z
_TEXT	SEGMENT
tv128 = -16						; size = 4
tv89 = -12						; size = 4
tv81 = -8						; size = 4
tv74 = -4						; size = 4
_pnEntries$ = 8						; size = 4
?GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z PROC ; COPOSGestureControl::GetConnMap, COMDAT

; 267  : BEGIN_CONNECTION_POINT_MAP(COPOSGestureControl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR __tls_index
  0001c	64 8b 0d 00 00
	00 00		 mov	 ecx, DWORD PTR fs:__tls_array
  00023	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z@4HA ; `COPOSGestureControl::GetConnMap'::`2'::$TSS0
  0002b	3b 82 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[edx]
  00031	0f 8e d9 00 00
	00		 jle	 $LN2@GetConnMap
  00037	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z@4HA ; `COPOSGestureControl::GetConnMap'::`2'::$TSS0
  0003c	e8 00 00 00 00	 call	 __Init_thread_header
  00041	83 c4 04	 add	 esp, 4
  00044	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z@4HA, -1 ; `COPOSGestureControl::GetConnMap'::`2'::$TSS0
  0004b	0f 85 bf 00 00
	00		 jne	 $LN2@GetConnMap

; 268  :     CONNECTION_POINT_ENTRY(IID_IPropertyNotifySink)

  00051	b9 08 00 00 00	 mov	 ecx, 8
  00056	85 c9		 test	 ecx, ecx
  00058	74 10		 je	 SHORT $LN5@GetConnMap
  0005a	ba 08 00 00 00	 mov	 edx, 8
  0005f	81 c2 a8 00 00
	00		 add	 edx, 168		; 000000a8H
  00065	89 55 fc	 mov	 DWORD PTR tv74[ebp], edx
  00068	eb 07		 jmp	 SHORT $LN6@GetConnMap
$LN5@GetConnMap:
  0006a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN6@GetConnMap:
  00071	b8 08 00 00 00	 mov	 eax, 8
  00076	85 c0		 test	 eax, eax
  00078	74 10		 je	 SHORT $LN7@GetConnMap
  0007a	b9 08 00 00 00	 mov	 ecx, 8
  0007f	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00085	89 4d f8	 mov	 DWORD PTR tv81[ebp], ecx
  00088	eb 07		 jmp	 SHORT $LN8@GetConnMap
$LN7@GetConnMap:
  0008a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN8@GetConnMap:
  00091	8b 55 fc	 mov	 edx, DWORD PTR tv74[ebp]
  00094	83 ea 08	 sub	 edx, 8
  00097	8b 45 f8	 mov	 eax, DWORD PTR tv81[ebp]
  0009a	83 e8 08	 sub	 eax, 8
  0009d	2b d0		 sub	 edx, eax
  0009f	89 15 00 00 00
	00		 mov	 DWORD PTR ?_entries@?1??GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z@4QBU34@B, edx

; 269  :     CONNECTION_POINT_ENTRY(DIID__IOPOSGestureControlEvents)

  000a5	b9 08 00 00 00	 mov	 ecx, 8
  000aa	85 c9		 test	 ecx, ecx
  000ac	74 10		 je	 SHORT $LN9@GetConnMap
  000ae	ba 08 00 00 00	 mov	 edx, 8
  000b3	81 c2 b4 00 00
	00		 add	 edx, 180		; 000000b4H
  000b9	89 55 f4	 mov	 DWORD PTR tv89[ebp], edx
  000bc	eb 07		 jmp	 SHORT $LN10@GetConnMap
$LN9@GetConnMap:
  000be	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN10@GetConnMap:
  000c5	b8 08 00 00 00	 mov	 eax, 8
  000ca	85 c0		 test	 eax, eax
  000cc	74 10		 je	 SHORT $LN11@GetConnMap
  000ce	b9 08 00 00 00	 mov	 ecx, 8
  000d3	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  000d9	89 4d f0	 mov	 DWORD PTR tv128[ebp], ecx
  000dc	eb 07		 jmp	 SHORT $LN12@GetConnMap
$LN11@GetConnMap:
  000de	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN12@GetConnMap:
  000e5	8b 55 f4	 mov	 edx, DWORD PTR tv89[ebp]
  000e8	83 ea 08	 sub	 edx, 8
  000eb	8b 45 f0	 mov	 eax, DWORD PTR tv128[ebp]
  000ee	83 e8 08	 sub	 eax, 8
  000f1	2b d0		 sub	 edx, eax
  000f3	89 15 04 00 00
	00		 mov	 DWORD PTR ?_entries@?1??GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z@4QBU34@B+4, edx

; 270  : END_CONNECTION_POINT_MAP()

  000f9	c7 05 08 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?_entries@?1??GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z@4QBU34@B+8, -1
  00103	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z@4HA ; `COPOSGestureControl::GetConnMap'::`2'::$TSS0
  00108	e8 00 00 00 00	 call	 __Init_thread_footer
  0010d	83 c4 04	 add	 esp, 4
$LN2@GetConnMap:
  00110	83 7d 08 00	 cmp	 DWORD PTR _pnEntries$[ebp], 0
  00114	74 09		 je	 SHORT $LN3@GetConnMap
  00116	8b 4d 08	 mov	 ecx, DWORD PTR _pnEntries$[ebp]
  00119	c7 01 02 00 00
	00		 mov	 DWORD PTR [ecx], 2
$LN3@GetConnMap:
  0011f	b8 00 00 00 00	 mov	 eax, OFFSET ?_entries@?1??GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z@4QBU34@B ; `COPOSGestureControl::GetConnMap'::`2'::_entries
  00124	83 c4 10	 add	 esp, 16			; 00000010H
  00127	3b ec		 cmp	 ebp, esp
  00129	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012e	8b e5		 mov	 esp, ebp
  00130	5d		 pop	 ebp
  00131	c3		 ret	 0
?GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z ENDP ; COPOSGestureControl::GetConnMap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlImpl.h
;	COMDAT ?GetPropertyMap@COPOSGestureControl@@SAPBUATL_PROPMAP_ENTRY@ATL@@XZ
_TEXT	SEGMENT
?GetPropertyMap@COPOSGestureControl@@SAPBUATL_PROPMAP_ENTRY@ATL@@XZ PROC ; COPOSGestureControl::GetPropertyMap, COMDAT

; 261  : BEGIN_PROP_MAP(COPOSGestureControl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  :     PROP_DATA_ENTRY("_cx", m_sizeExtent.cx, VT_UI4)
; 263  :     PROP_DATA_ENTRY("_cy", m_sizeExtent.cy, VT_UI4)
; 264  : END_PROP_MAP()

  00003	b8 00 00 00 00	 mov	 eax, OFFSET ?pPropMap@?1??GetPropertyMap@COPOSGestureControl@@SAPBUATL_PROPMAP_ENTRY@ATL@@XZ@4QBU34@B ; `COPOSGestureControl::GetPropertyMap'::`2'::pPropMap
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetPropertyMap@COPOSGestureControl@@SAPBUATL_PROPMAP_ENTRY@ATL@@XZ ENDP ; COPOSGestureControl::GetPropertyMap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlImpl.h
;	COMDAT ?_GetEntries@COPOSGestureControl@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ
_TEXT	SEGMENT
?_GetEntries@COPOSGestureControl@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ PROC ; COPOSGestureControl::_GetEntries, COMDAT

; 231  : BEGIN_COM_MAP(COPOSGestureControl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 232  :     //  Map COM dispatch to the current interface implementation.
; 233  :     COM_INTERFACE_ENTRY_IID(IID_IDispatch, IOPOSGestureControl)
; 234  :     //   Map each COM interface to the current interface implementation.
; 235  :     COM_INTERFACE_ENTRY_IID(IID_IOPOSGestureControl, IOPOSGestureControl)
; 236  :     COM_INTERFACE_ENTRY_IID(IID_IOPOSGestureControl_1_16, IOPOSGestureControl)
; 237  : 
; 238  :     COM_INTERFACE_ENTRY(IViewObjectEx)
; 239  :     COM_INTERFACE_ENTRY(IViewObject2)
; 240  :     COM_INTERFACE_ENTRY(IViewObject)
; 241  :     COM_INTERFACE_ENTRY(IOleInPlaceObjectWindowless)
; 242  :     COM_INTERFACE_ENTRY(IOleInPlaceObject)
; 243  :     COM_INTERFACE_ENTRY2(IOleWindow, IOleInPlaceObjectWindowless)
; 244  :     COM_INTERFACE_ENTRY(IOleInPlaceActiveObject)
; 245  :     COM_INTERFACE_ENTRY(IOleControl)
; 246  :     COM_INTERFACE_ENTRY(IOleObject)
; 247  :     COM_INTERFACE_ENTRY(IPersistStreamInit)
; 248  :     COM_INTERFACE_ENTRY2(IPersist, IPersistStreamInit)
; 249  :     COM_INTERFACE_ENTRY(IConnectionPointContainer)
; 250  :     COM_INTERFACE_ENTRY(ISpecifyPropertyPages)
; 251  :     COM_INTERFACE_ENTRY(IQuickActivate)
; 252  :     COM_INTERFACE_ENTRY(IPersistStorage)
; 253  :     COM_INTERFACE_ENTRY(IDataObject)
; 254  :     COM_INTERFACE_ENTRY(IProvideClassInfo)
; 255  :     COM_INTERFACE_ENTRY(IProvideClassInfo2)
; 256  :     COM_INTERFACE_ENTRY(IObjectSafety)
; 257  :     COM_INTERFACE_ENTRY_IMPL(IConnectionPointContainer)
; 258  : END_COM_MAP()

  00003	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00008	c1 e0 00	 shl	 eax, 0
  0000b	05 00 00 00 00	 add	 eax, OFFSET ?_entries@?1??_GetEntries@COPOSGestureControl@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B ; `COPOSGestureControl::_GetEntries'::`2'::_entries
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?_GetEntries@COPOSGestureControl@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ ENDP ; COPOSGestureControl::_GetEntries
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlImpl.h
;	COMDAT ?_InternalQueryInterface@COPOSGestureControl@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iid$ = 8						; size = 4
_ppvObject$ = 12					; size = 4
?_InternalQueryInterface@COPOSGestureControl@@QAEJABU_GUID@@PAPAX@Z PROC ; COPOSGestureControl::_InternalQueryInterface, COMDAT
; _this$ = ecx

; 231  : BEGIN_COM_MAP(COPOSGestureControl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _ppvObject$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _iid$[ebp]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ?_GetEntries@COPOSGestureControl@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ ; COPOSGestureControl::_GetEntries
  0001b	50		 push	 eax
  0001c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001f	52		 push	 edx
  00020	e8 00 00 00 00	 call	 ?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z ; ATL::CComObjectRootBase::InternalQueryInterface
  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 08 00	 ret	 8
?_InternalQueryInterface@COPOSGestureControl@@QAEJABU_GUID@@PAPAX@Z ENDP ; COPOSGestureControl::_InternalQueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlImpl.h
;	COMDAT ?GetUnknown@COPOSGestureControl@@QAEPAUIUnknown@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnknown@COPOSGestureControl@@QAEPAUIUnknown@@XZ PROC ; COPOSGestureControl::GetUnknown, COMDAT
; _this$ = ecx

; 231  : BEGIN_COM_MAP(COPOSGestureControl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_GetRawUnknown@COPOSGestureControl@@QAEPAUIUnknown@@XZ ; COPOSGestureControl::_GetRawUnknown
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?GetUnknown@COPOSGestureControl@@QAEPAUIUnknown@@XZ ENDP ; COPOSGestureControl::GetUnknown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlImpl.h
;	COMDAT ?_GetRawUnknown@COPOSGestureControl@@QAEPAUIUnknown@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_GetRawUnknown@COPOSGestureControl@@QAEPAUIUnknown@@XZ PROC ; COPOSGestureControl::_GetRawUnknown, COMDAT
; _this$ = ecx

; 231  : BEGIN_COM_MAP(COPOSGestureControl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	e8 00 00 00 00	 call	 ?_GetEntries@COPOSGestureControl@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ ; COPOSGestureControl::_GetEntries
  00013	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00018	6b d1 00	 imul	 edx, ecx, 0
  0001b	83 7c 10 08 01	 cmp	 DWORD PTR [eax+edx+8], 1
  00020	74 26		 je	 SHORT $LN3@GetRawUnkn
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_1HC@JLHBDINH@?$AA_?$AAG?$AAe?$AAt?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?$CI?$AA?$CJ?$AA?$FL?$AA0@
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0002c	6a 00		 push	 0
  0002e	68 e7 00 00 00	 push	 231			; 000000e7H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_1HC@PBALCFGB@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00038	6a 02		 push	 2
  0003a	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003f	83 c4 18	 add	 esp, 24			; 00000018H
  00042	83 f8 01	 cmp	 eax, 1
  00045	75 01		 jne	 SHORT $LN3@GetRawUnkn
  00047	cc		 int	 3
$LN3@GetRawUnkn:
  00048	e8 00 00 00 00	 call	 ?_GetEntries@COPOSGestureControl@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ ; COPOSGestureControl::_GetEntries
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00053	8b c1		 mov	 eax, ecx
  00055	83 c4 04	 add	 esp, 4
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
?_GetRawUnknown@COPOSGestureControl@@QAEPAUIUnknown@@XZ ENDP ; COPOSGestureControl::_GetRawUnknown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlImpl.h
;	COMDAT ?InternalFinalConstructRelease@COPOSGestureControl@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InternalFinalConstructRelease@COPOSGestureControl@@QAEXXZ PROC ; COPOSGestureControl::InternalFinalConstructRelease, COMDAT
; _this$ = ecx

; 228  : DECLARE_PROTECT_FINAL_CONSTRUCT()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00017	e8 00 00 00 00	 call	 ?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?InternalFinalConstructRelease@COPOSGestureControl@@QAEXXZ ENDP ; COPOSGestureControl::InternalFinalConstructRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlImpl.h
;	COMDAT ?InternalFinalConstructAddRef@COPOSGestureControl@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InternalFinalConstructAddRef@COPOSGestureControl@@QAEXXZ PROC ; COPOSGestureControl::InternalFinalConstructAddRef, COMDAT
; _this$ = ecx

; 228  : DECLARE_PROTECT_FINAL_CONSTRUCT()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00017	e8 00 00 00 00	 call	 ?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?InternalFinalConstructAddRef@COPOSGestureControl@@QAEXXZ ENDP ; COPOSGestureControl::InternalFinalConstructAddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlImpl.h
;	COMDAT ?UpdateRegistry@COPOSGestureControl@@SGJH@Z
_TEXT	SEGMENT
_bRegister$ = 8						; size = 4
?UpdateRegistry@COPOSGestureControl@@SGJH@Z PROC	; COPOSGestureControl::UpdateRegistry, COMDAT

; 226  : DECLARE_REGISTRY_RESOURCEID(IDR_OPOSGESTURECONTROL)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a 00		 push	 0
  00005	8b 45 08	 mov	 eax, DWORD PTR _bRegister$[ebp]
  00008	50		 push	 eax
  00009	6a 66		 push	 102			; 00000066H
  0000b	68 00 00 00 00	 push	 OFFSET ?_Module@@3VCComModule@ATL@@A ; _Module
  00010	e8 00 00 00 00	 call	 ?UpdateRegistryFromResource@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CComModule::UpdateRegistryFromResource
  00015	3b ec		 cmp	 ebp, esp
  00017	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?UpdateRegistry@COPOSGestureControl@@SGJH@Z ENDP	; COPOSGestureControl::UpdateRegistry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlCP.h
;	COMDAT ?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@IAEXPAUIUnknown@@PAVOposVariant@@IAAJPB_WJ@Z
_TEXT	SEGMENT
_hRC$1 = -48						; size = 4
_DispID$ = -40						; size = 4
_DispParms$ = -28					; size = 16
_pNameOrig$ = -8					; size = 4
_this$ = -4						; size = 4
_pUnkSink$ = 8						; size = 4
_rgvarg$ = 12						; size = 4
_cArgs$ = 16						; size = 4
_FirstDispID$ = 20					; size = 4
_pName$ = 24						; size = 4
_MyDispID$ = 28						; size = 4
?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@IAEXPAUIUnknown@@PAVOposVariant@@IAAJPB_WJ@Z PROC ; CProxy_IOPOSEvents<COPOSGestureControl>::FireTheEvent, COMDAT
; _this$ = ecx

; 183  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d d0	 lea	 edi, DWORD PTR [ebp-48]
  0000c	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 184  :         IFDEBUG( const OLECHAR* pNameOrig = pName );

  0001c	8b 45 18	 mov	 eax, DWORD PTR _pName$[ebp]
  0001f	89 45 f8	 mov	 DWORD PTR _pNameOrig$[ebp], eax

; 185  : 
; 186  :         // Declare and initialize the dispatch parameters and dispatch ID.
; 187  :         OposDispParms DispParms( rgvarg, cArgs );

  00022	8b 4d 10	 mov	 ecx, DWORD PTR _cArgs$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 0c	 mov	 edx, DWORD PTR _rgvarg$[ebp]
  00029	52		 push	 edx
  0002a	8d 4d e4	 lea	 ecx, DWORD PTR _DispParms$[ebp]
  0002d	e8 00 00 00 00	 call	 ??0OposDispParms@@QAE@PAVOposVariant@@H@Z ; OposDispParms::OposDispParms

; 188  :         DISPID DispID = FirstDispID;

  00032	8b 45 14	 mov	 eax, DWORD PTR _FirstDispID$[ebp]
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	89 4d d8	 mov	 DWORD PTR _DispID$[ebp], ecx

; 189  :         // If not first connection (not likely for our controls!) or first dispatch ID not yet looked up...
; 190  :         if ( _nCOConnectionIndex != 0 || FirstDispID < 0 )

  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	83 7a 20 00	 cmp	 DWORD PTR [edx+32], 0
  00041	75 08		 jne	 SHORT $LN3@FireTheEve
  00043	8b 45 14	 mov	 eax, DWORD PTR _FirstDispID$[ebp]
  00046	83 38 00	 cmp	 DWORD PTR [eax], 0
  00049	7d 66		 jge	 SHORT $LN2@FireTheEve
$LN3@FireTheEve:

; 191  :         {
; 192  :             // Get the dispatch ID of the event we want to call.
; 193  :             //   If not implemented, then assume that client used typelib to use our default DispIDs.
; 194  :             //   If other failure, the can't fire.
; 195  :             HRESULT hRC = _pCPDispatch->GetIDsOfNames( IID_NULL, const_cast<OLECHAR**>(&pName), 1, LOCALE_USER_DEFAULT, &DispID );

  0004b	8b f4		 mov	 esi, esp
  0004d	8d 4d d8	 lea	 ecx, DWORD PTR _DispID$[ebp]
  00050	51		 push	 ecx
  00051	68 00 04 00 00	 push	 1024			; 00000400H
  00056	6a 01		 push	 1
  00058	8d 55 18	 lea	 edx, DWORD PTR _pName$[ebp]
  0005b	52		 push	 edx
  0005c	68 00 00 00 00	 push	 OFFSET _GUID_NULL
  00061	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00064	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00067	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006a	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0006d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0006f	50		 push	 eax
  00070	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00073	ff d2		 call	 edx
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	89 45 d0	 mov	 DWORD PTR _hRC$1[ebp], eax

; 196  :             if ( hRC == E_NOTIMPL )

  0007f	81 7d d0 01 40
	00 80		 cmp	 DWORD PTR _hRC$1[ebp], -2147467263 ; 80004001H
  00086	75 08		 jne	 SHORT $LN4@FireTheEve

; 197  :                 DispID = MyDispID;

  00088	8b 45 1c	 mov	 eax, DWORD PTR _MyDispID$[ebp]
  0008b	89 45 d8	 mov	 DWORD PTR _DispID$[ebp], eax
  0008e	eb 10		 jmp	 SHORT $LN5@FireTheEve
$LN4@FireTheEve:

; 198  :             else if ( hRC != S_OK )

  00090	83 7d d0 00	 cmp	 DWORD PTR _hRC$1[ebp], 0
  00094	74 0a		 je	 SHORT $LN5@FireTheEve

; 199  :                 return;

  00096	8d 4d e4	 lea	 ecx, DWORD PTR _DispParms$[ebp]
  00099	e8 00 00 00 00	 call	 ??1OposDispParms@@QAE@XZ ; OposDispParms::~OposDispParms
  0009e	eb 70		 jmp	 SHORT $LN1@FireTheEve
$LN5@FireTheEve:

; 200  :             // If first connection, then save in cache for next time.
; 201  :             if ( _nCOConnectionIndex == 0 )

  000a0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	83 79 20 00	 cmp	 DWORD PTR [ecx+32], 0
  000a7	75 08		 jne	 SHORT $LN2@FireTheEve

; 202  :                 FirstDispID = DispID;

  000a9	8b 55 14	 mov	 edx, DWORD PTR _FirstDispID$[ebp]
  000ac	8b 45 d8	 mov	 eax, DWORD PTR _DispID$[ebp]
  000af	89 02		 mov	 DWORD PTR [edx], eax
$LN2@FireTheEve:

; 203  :         }
; 204  :         // Call the event.
; 205  :         IFDEBUG( _pOposControl->DOTRACEV( ( _T("*FireTheEvent: Delivering %ls; Sink 0x%X; DispID %d"), pNameOrig, pUnkSink, DispID ) ) );

  000b1	8b 4d d8	 mov	 ecx, DWORD PTR _DispID$[ebp]
  000b4	51		 push	 ecx
  000b5	8b 55 08	 mov	 edx, DWORD PTR _pUnkSink$[ebp]
  000b8	52		 push	 edx
  000b9	8b 45 f8	 mov	 eax, DWORD PTR _pNameOrig$[ebp]
  000bc	50		 push	 eax
  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_1GI@CMBOLMBG@?$AA?$CK?$AAF?$AAi?$AAr?$AAe?$AAT?$AAh?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5@
  000c2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  000c8	52		 push	 edx
  000c9	e8 00 00 00 00	 call	 ?WriteTrace@COPOSGestureControl@@QAAXPB_WZZ ; COPOSGestureControl::WriteTrace
  000ce	83 c4 14	 add	 esp, 20			; 00000014H

; 206  :         _pCPDispatch->Invoke( DispID, IID_NULL, LOCALE_USER_DEFAULT, DISPATCH_METHOD, &DispParms, NULL, NULL, NULL );

  000d1	8b f4		 mov	 esi, esp
  000d3	6a 00		 push	 0
  000d5	6a 00		 push	 0
  000d7	6a 00		 push	 0
  000d9	8d 45 e4	 lea	 eax, DWORD PTR _DispParms$[ebp]
  000dc	50		 push	 eax
  000dd	6a 01		 push	 1
  000df	68 00 04 00 00	 push	 1024			; 00000400H
  000e4	68 00 00 00 00	 push	 OFFSET _GUID_NULL
  000e9	8b 4d d8	 mov	 ecx, DWORD PTR _DispID$[ebp]
  000ec	51		 push	 ecx
  000ed	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000f0	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  000f3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  000f9	8b 00		 mov	 eax, DWORD PTR [eax]
  000fb	52		 push	 edx
  000fc	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000ff	ff d1		 call	 ecx
  00101	3b f4		 cmp	 esi, esp
  00103	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 207  :     }

  00108	8d 4d e4	 lea	 ecx, DWORD PTR _DispParms$[ebp]
  0010b	e8 00 00 00 00	 call	 ??1OposDispParms@@QAE@XZ ; OposDispParms::~OposDispParms
$LN1@FireTheEve:
  00110	52		 push	 edx
  00111	8b cd		 mov	 ecx, ebp
  00113	50		 push	 eax
  00114	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@FireTheEve
  0011a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0011f	58		 pop	 eax
  00120	5a		 pop	 edx
  00121	5f		 pop	 edi
  00122	5e		 pop	 esi
  00123	83 c4 30	 add	 esp, 48			; 00000030H
  00126	3b ec		 cmp	 ebp, esp
  00128	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012d	8b e5		 mov	 esp, ebp
  0012f	5d		 pop	 ebp
  00130	c2 18 00	 ret	 24			; 00000018H
  00133	90		 npad	 1
$LN12@FireTheEve:
  00134	02 00 00 00	 DD	 2
  00138	00 00 00 00	 DD	 $LN11@FireTheEve
$LN11@FireTheEve:
  0013c	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00140	10 00 00 00	 DD	 16			; 00000010H
  00144	00 00 00 00	 DD	 $LN9@FireTheEve
  00148	d8 ff ff ff	 DD	 -40			; ffffffd8H
  0014c	04 00 00 00	 DD	 4
  00150	00 00 00 00	 DD	 $LN10@FireTheEve
$LN10@FireTheEve:
  00154	44		 DB	 68			; 00000044H
  00155	69		 DB	 105			; 00000069H
  00156	73		 DB	 115			; 00000073H
  00157	70		 DB	 112			; 00000070H
  00158	49		 DB	 73			; 00000049H
  00159	44		 DB	 68			; 00000044H
  0015a	00		 DB	 0
$LN9@FireTheEve:
  0015b	44		 DB	 68			; 00000044H
  0015c	69		 DB	 105			; 00000069H
  0015d	73		 DB	 115			; 00000073H
  0015e	70		 DB	 112			; 00000070H
  0015f	50		 DB	 80			; 00000050H
  00160	61		 DB	 97			; 00000061H
  00161	72		 DB	 114			; 00000072H
  00162	6d		 DB	 109			; 0000006dH
  00163	73		 DB	 115			; 00000073H
  00164	00		 DB	 0
?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@IAEXPAUIUnknown@@PAVOposVariant@@IAAJPB_WJ@Z ENDP ; CProxy_IOPOSEvents<COPOSGestureControl>::FireTheEvent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlCP.h
;	COMDAT ?Unadvise@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@UAGJK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_dwCookie$ = 12						; size = 4
?Unadvise@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@UAGJK@Z PROC ; CProxy_IOPOSEvents<COPOSGestureControl>::Unadvise, COMDAT

; 163  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 164  :         _pOposControl->DOTRACEV( ( _T("*Unadvise: Cookie 0x%X"), dwCookie ) );

  00003	8b 45 0c	 mov	 eax, DWORD PTR _dwCookie$[ebp]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@NKNAIIAP@?$AA?$CK?$AAU?$AAn?$AAa?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?3?$AA?5?$AAC?$AAo?$AAo?$AAk@
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  00012	52		 push	 edx
  00013	e8 00 00 00 00	 call	 ?WriteTrace@COPOSGestureControl@@QAAXPB_WZZ ; COPOSGestureControl::WriteTrace
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 165  :         return IConnectionPointImpl<T, &DIID__IOPOSGestureControlEvents, CComDynamicUnkArray>::Unadvise(dwCookie);

  0001b	8b 45 0c	 mov	 eax, DWORD PTR _dwCookie$[ebp]
  0001e	50		 push	 eax
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	51		 push	 ecx
  00023	e8 00 00 00 00	 call	 ?Unadvise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJK@Z ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::Unadvise

; 166  :     }

  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
?Unadvise@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@UAGJK@Z ENDP ; CProxy_IOPOSEvents<COPOSGestureControl>::Unadvise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlCP.h
;	COMDAT ?Advise@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@UAGJPAUIUnknown@@PAK@Z
_TEXT	SEGMENT
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_pUnkSink$ = 12						; size = 4
_pdwCookie$ = 16					; size = 4
?Advise@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@UAGJPAUIUnknown@@PAK@Z PROC ; CProxy_IOPOSEvents<COPOSGestureControl>::Advise, COMDAT

; 156  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 157  :         HRESULT hr = IConnectionPointImpl<T, &DIID__IOPOSGestureControlEvents, CComDynamicUnkArray>::Advise( pUnkSink, pdwCookie );

  0000b	8b 45 10	 mov	 eax, DWORD PTR _pdwCookie$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR _pUnkSink$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00016	52		 push	 edx
  00017	e8 00 00 00 00	 call	 ?Advise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAUIUnknown@@PAK@Z ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::Advise
  0001c	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 158  :         _pOposControl->DOTRACEV( ( _T("*Advise: Sink 0x%X; Cookie 0x%X"), pUnkSink, *pdwCookie ) );

  0001f	8b 45 10	 mov	 eax, DWORD PTR _pdwCookie$[ebp]
  00022	8b 08		 mov	 ecx, DWORD PTR [eax]
  00024	51		 push	 ecx
  00025	8b 55 0c	 mov	 edx, DWORD PTR _pUnkSink$[ebp]
  00028	52		 push	 edx
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_1EA@IMKHEMDJ@?$AA?$CK?$AAA?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?3?$AA?5?$AAS?$AAi?$AAn?$AAk?$AA?5?$AA0@
  0002e	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00034	51		 push	 ecx
  00035	e8 00 00 00 00	 call	 ?WriteTrace@COPOSGestureControl@@QAAXPB_WZZ ; COPOSGestureControl::WriteTrace
  0003a	83 c4 10	 add	 esp, 16			; 00000010H

; 159  :         return hr;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]

; 160  :     }

  00040	83 c4 04	 add	 esp, 4
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 0c 00	 ret	 12			; 0000000cH
?Advise@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@UAGJPAUIUnknown@@PAK@Z ENDP ; CProxy_IOPOSEvents<COPOSGestureControl>::Advise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlCP.h
;	COMDAT ?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJ@Z
_TEXT	SEGMENT
tv68 = -60						; size = 4
_sp$1 = -52						; size = 4
_nConnections$ = -44					; size = 4
_var$ = -36						; size = 24
_pT$ = -8						; size = 4
_this$ = -4						; size = 4
_Data$ = 8						; size = 4
?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJ@Z PROC ; CProxy_IOPOSEvents<COPOSGestureControl>::Fire_StatusUpdateEvent, COMDAT
; _this$ = ecx

; 123  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  0000b	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 124  :         T* pT = static_cast<T*>(this);

  0001b	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001f	74 0d		 je	 SHORT $LN7@Fire_Statu
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	2d b4 00 00 00	 sub	 eax, 180		; 000000b4H
  00029	89 45 c4	 mov	 DWORD PTR tv68[ebp], eax
  0002c	eb 07		 jmp	 SHORT $LN8@Fire_Statu
$LN7@Fire_Statu:
  0002e	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN8@Fire_Statu:
  00035	8b 4d c4	 mov	 ecx, DWORD PTR tv68[ebp]
  00038	89 4d f8	 mov	 DWORD PTR _pT$[ebp], ecx

; 125  :         OposVariant var;

  0003b	8d 4d dc	 lea	 ecx, DWORD PTR _var$[ebp]
  0003e	e8 00 00 00 00	 call	 ??0OposVariant@@QAE@XZ	; OposVariant::OposVariant

; 126  :         int nConnections = m_vec.GetSize();

  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	83 c1 04	 add	 ecx, 4
  00049	e8 00 00 00 00	 call	 ?GetSize@CComDynamicUnkArray@ATL@@QBEHXZ ; ATL::CComDynamicUnkArray::GetSize
  0004e	89 45 d4	 mov	 DWORD PTR _nConnections$[ebp], eax

; 127  : 
; 128  :         for (_nCOConnectionIndex = 0; _nCOConnectionIndex < nConnections; _nCOConnectionIndex++)

  00051	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00054	c7 42 20 00 00
	00 00		 mov	 DWORD PTR [edx+32], 0
  0005b	eb 0f		 jmp	 SHORT $LN4@Fire_Statu
$LN2@Fire_Statu:
  0005d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00060	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00063	83 c1 01	 add	 ecx, 1
  00066	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00069	89 4a 20	 mov	 DWORD PTR [edx+32], ecx
$LN4@Fire_Statu:
  0006c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00072	3b 4d d4	 cmp	 ecx, DWORD PTR _nConnections$[ebp]
  00075	0f 8d 87 00 00
	00		 jge	 $LN3@Fire_Statu

; 129  :         {
; 130  :             pT->Lock();

  0007b	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0007e	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00084	e8 00 00 00 00	 call	 ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock

; 131  :             CComPtr<IUnknown> sp = m_vec.GetAt(_nCOConnectionIndex);

  00089	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008c	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0008f	50		 push	 eax
  00090	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	83 c1 04	 add	 ecx, 4
  00096	e8 00 00 00 00	 call	 ?GetAt@CComDynamicUnkArray@ATL@@QAEPAUIUnknown@@H@Z ; ATL::CComDynamicUnkArray::GetAt
  0009b	50		 push	 eax
  0009c	8d 4d cc	 lea	 ecx, DWORD PTR _sp$1[ebp]
  0009f	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 132  :             pT->Unlock();

  000a4	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  000a7	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000ad	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 133  :             _pCPDispatch = reinterpret_cast<IDispatch*>(sp.p);

  000b2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	8b 55 cc	 mov	 edx, DWORD PTR _sp$1[ebp]
  000b8	89 51 24	 mov	 DWORD PTR [ecx+36], edx

; 134  :             if (_pCPDispatch != NULL)

  000bb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000be	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  000c2	74 31		 je	 SHORT $LN5@Fire_Statu

; 135  :             {
; 136  :                 var.SetLONG( Data );

  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _Data$[ebp]
  000c7	51		 push	 ecx
  000c8	8d 4d dc	 lea	 ecx, DWORD PTR _var$[ebp]
  000cb	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QAEXJ@Z ; OposVariant::SetLONG

; 137  :                 FireTheEvent( FEUNKNOWN &var, 1, _DIDStatus, L"StatusUpdateEvent", 5 );

  000d0	6a 05		 push	 5
  000d2	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@PGFMOFKI@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe@
  000d7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000da	83 c2 1c	 add	 edx, 28			; 0000001cH
  000dd	52		 push	 edx
  000de	6a 01		 push	 1
  000e0	8d 45 dc	 lea	 eax, DWORD PTR _var$[ebp]
  000e3	50		 push	 eax
  000e4	8d 4d cc	 lea	 ecx, DWORD PTR _sp$1[ebp]
  000e7	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
  000ec	50		 push	 eax
  000ed	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f0	e8 00 00 00 00	 call	 ?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@IAEXPAUIUnknown@@PAVOposVariant@@IAAJPB_WJ@Z ; CProxy_IOPOSEvents<COPOSGestureControl>::FireTheEvent
$LN5@Fire_Statu:

; 138  :             }
; 139  :         }

  000f5	8d 4d cc	 lea	 ecx, DWORD PTR _sp$1[ebp]
  000f8	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
  000fd	e9 5b ff ff ff	 jmp	 $LN2@Fire_Statu
$LN3@Fire_Statu:

; 140  :     }

  00102	8d 4d dc	 lea	 ecx, DWORD PTR _var$[ebp]
  00105	e8 00 00 00 00	 call	 ??1OposVariant@@QAE@XZ	; OposVariant::~OposVariant
  0010a	52		 push	 edx
  0010b	8b cd		 mov	 ecx, ebp
  0010d	50		 push	 eax
  0010e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@Fire_Statu
  00114	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00119	58		 pop	 eax
  0011a	5a		 pop	 edx
  0011b	5f		 pop	 edi
  0011c	83 c4 3c	 add	 esp, 60			; 0000003cH
  0011f	3b ec		 cmp	 ebp, esp
  00121	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 04 00	 ret	 4
$LN12@Fire_Statu:
  0012c	02 00 00 00	 DD	 2
  00130	00 00 00 00	 DD	 $LN11@Fire_Statu
$LN11@Fire_Statu:
  00134	dc ff ff ff	 DD	 -36			; ffffffdcH
  00138	18 00 00 00	 DD	 24			; 00000018H
  0013c	00 00 00 00	 DD	 $LN9@Fire_Statu
  00140	cc ff ff ff	 DD	 -52			; ffffffccH
  00144	04 00 00 00	 DD	 4
  00148	00 00 00 00	 DD	 $LN10@Fire_Statu
$LN10@Fire_Statu:
  0014c	73		 DB	 115			; 00000073H
  0014d	70		 DB	 112			; 00000070H
  0014e	00		 DB	 0
$LN9@Fire_Statu:
  0014f	76		 DB	 118			; 00000076H
  00150	61		 DB	 97			; 00000061H
  00151	72		 DB	 114			; 00000072H
  00152	00		 DB	 0
?Fire_StatusUpdateEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJ@Z ENDP ; CProxy_IOPOSEvents<COPOSGestureControl>::Fire_StatusUpdateEvent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlCP.h
;	COMDAT ?Fire_OutputCompleteEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJ@Z
_TEXT	SEGMENT
tv68 = -60						; size = 4
_sp$1 = -52						; size = 4
_nConnections$ = -44					; size = 4
_var$ = -36						; size = 24
_pT$ = -8						; size = 4
_this$ = -4						; size = 4
_OutputID$ = 8						; size = 4
?Fire_OutputCompleteEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJ@Z PROC ; CProxy_IOPOSEvents<COPOSGestureControl>::Fire_OutputCompleteEvent, COMDAT
; _this$ = ecx

; 101  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  0000b	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 102  :         T* pT = static_cast<T*>(this);

  0001b	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001f	74 0d		 je	 SHORT $LN7@Fire_Outpu
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	2d b4 00 00 00	 sub	 eax, 180		; 000000b4H
  00029	89 45 c4	 mov	 DWORD PTR tv68[ebp], eax
  0002c	eb 07		 jmp	 SHORT $LN8@Fire_Outpu
$LN7@Fire_Outpu:
  0002e	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN8@Fire_Outpu:
  00035	8b 4d c4	 mov	 ecx, DWORD PTR tv68[ebp]
  00038	89 4d f8	 mov	 DWORD PTR _pT$[ebp], ecx

; 103  :         OposVariant var;

  0003b	8d 4d dc	 lea	 ecx, DWORD PTR _var$[ebp]
  0003e	e8 00 00 00 00	 call	 ??0OposVariant@@QAE@XZ	; OposVariant::OposVariant

; 104  :         int nConnections = m_vec.GetSize();

  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	83 c1 04	 add	 ecx, 4
  00049	e8 00 00 00 00	 call	 ?GetSize@CComDynamicUnkArray@ATL@@QBEHXZ ; ATL::CComDynamicUnkArray::GetSize
  0004e	89 45 d4	 mov	 DWORD PTR _nConnections$[ebp], eax

; 105  : 
; 106  :         for (_nCOConnectionIndex = 0; _nCOConnectionIndex < nConnections; _nCOConnectionIndex++)

  00051	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00054	c7 42 20 00 00
	00 00		 mov	 DWORD PTR [edx+32], 0
  0005b	eb 0f		 jmp	 SHORT $LN4@Fire_Outpu
$LN2@Fire_Outpu:
  0005d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00060	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00063	83 c1 01	 add	 ecx, 1
  00066	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00069	89 4a 20	 mov	 DWORD PTR [edx+32], ecx
$LN4@Fire_Outpu:
  0006c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00072	3b 4d d4	 cmp	 ecx, DWORD PTR _nConnections$[ebp]
  00075	0f 8d 87 00 00
	00		 jge	 $LN3@Fire_Outpu

; 107  :         {
; 108  :             pT->Lock();

  0007b	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0007e	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00084	e8 00 00 00 00	 call	 ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock

; 109  :             CComPtr<IUnknown> sp = m_vec.GetAt(_nCOConnectionIndex);

  00089	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008c	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0008f	50		 push	 eax
  00090	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	83 c1 04	 add	 ecx, 4
  00096	e8 00 00 00 00	 call	 ?GetAt@CComDynamicUnkArray@ATL@@QAEPAUIUnknown@@H@Z ; ATL::CComDynamicUnkArray::GetAt
  0009b	50		 push	 eax
  0009c	8d 4d cc	 lea	 ecx, DWORD PTR _sp$1[ebp]
  0009f	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 110  :             pT->Unlock();

  000a4	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  000a7	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000ad	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 111  :             _pCPDispatch = reinterpret_cast<IDispatch*>(sp.p);

  000b2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	8b 55 cc	 mov	 edx, DWORD PTR _sp$1[ebp]
  000b8	89 51 24	 mov	 DWORD PTR [ecx+36], edx

; 112  :             if (_pCPDispatch != NULL)

  000bb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000be	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  000c2	74 31		 je	 SHORT $LN5@Fire_Outpu

; 113  :             {
; 114  :                 var.SetLONG( OutputID );

  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _OutputID$[ebp]
  000c7	51		 push	 ecx
  000c8	8d 4d dc	 lea	 ecx, DWORD PTR _var$[ebp]
  000cb	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QAEXJ@Z ; OposVariant::SetLONG

; 115  :                 FireTheEvent( FEUNKNOWN &var, 1, _DIDOutput, L"OutputCompleteEvent", 4 );

  000d0	6a 04		 push	 4
  000d2	68 00 00 00 00	 push	 OFFSET ??_C@_1CI@HLBJDONE@?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AAE@
  000d7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000da	83 c2 18	 add	 edx, 24			; 00000018H
  000dd	52		 push	 edx
  000de	6a 01		 push	 1
  000e0	8d 45 dc	 lea	 eax, DWORD PTR _var$[ebp]
  000e3	50		 push	 eax
  000e4	8d 4d cc	 lea	 ecx, DWORD PTR _sp$1[ebp]
  000e7	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
  000ec	50		 push	 eax
  000ed	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f0	e8 00 00 00 00	 call	 ?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@IAEXPAUIUnknown@@PAVOposVariant@@IAAJPB_WJ@Z ; CProxy_IOPOSEvents<COPOSGestureControl>::FireTheEvent
$LN5@Fire_Outpu:

; 116  :             }
; 117  :         }

  000f5	8d 4d cc	 lea	 ecx, DWORD PTR _sp$1[ebp]
  000f8	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
  000fd	e9 5b ff ff ff	 jmp	 $LN2@Fire_Outpu
$LN3@Fire_Outpu:

; 118  :     }

  00102	8d 4d dc	 lea	 ecx, DWORD PTR _var$[ebp]
  00105	e8 00 00 00 00	 call	 ??1OposVariant@@QAE@XZ	; OposVariant::~OposVariant
  0010a	52		 push	 edx
  0010b	8b cd		 mov	 ecx, ebp
  0010d	50		 push	 eax
  0010e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@Fire_Outpu
  00114	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00119	58		 pop	 eax
  0011a	5a		 pop	 edx
  0011b	5f		 pop	 edi
  0011c	83 c4 3c	 add	 esp, 60			; 0000003cH
  0011f	3b ec		 cmp	 ebp, esp
  00121	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 04 00	 ret	 4
$LN12@Fire_Outpu:
  0012c	02 00 00 00	 DD	 2
  00130	00 00 00 00	 DD	 $LN11@Fire_Outpu
$LN11@Fire_Outpu:
  00134	dc ff ff ff	 DD	 -36			; ffffffdcH
  00138	18 00 00 00	 DD	 24			; 00000018H
  0013c	00 00 00 00	 DD	 $LN9@Fire_Outpu
  00140	cc ff ff ff	 DD	 -52			; ffffffccH
  00144	04 00 00 00	 DD	 4
  00148	00 00 00 00	 DD	 $LN10@Fire_Outpu
$LN10@Fire_Outpu:
  0014c	73		 DB	 115			; 00000073H
  0014d	70		 DB	 112			; 00000070H
  0014e	00		 DB	 0
$LN9@Fire_Outpu:
  0014f	76		 DB	 118			; 00000076H
  00150	61		 DB	 97			; 00000061H
  00151	72		 DB	 114			; 00000072H
  00152	00		 DB	 0
?Fire_OutputCompleteEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJ@Z ENDP ; CProxy_IOPOSEvents<COPOSGestureControl>::Fire_OutputCompleteEvent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlCP.h
;	COMDAT ?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJJJPAJ@Z
_TEXT	SEGMENT
tv68 = -148						; size = 4
_hr$1 = -140						; size = 4
_sp$2 = -128						; size = 4
_nConnections$ = -120					; size = 4
_vars$ = -112						; size = 96
_pT$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ResultCode$ = 8					; size = 4
_ResultCodeExtended$ = 12				; size = 4
_ErrorLocus$ = 16					; size = 4
_pErrorResponse$ = 20					; size = 4
?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJJJPAJ@Z PROC ; CProxy_IOPOSEvents<COPOSGestureControl>::Fire_ErrorEvent, COMDAT
; _this$ = ecx

; 75   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 00 00
	00		 sub	 esp, 148		; 00000094H
  00009	57		 push	 edi
  0000a	51		 push	 ecx
  0000b	8d bd 6c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-148]
  00011	b9 25 00 00 00	 mov	 ecx, 37			; 00000025H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	59		 pop	 ecx
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00028	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 76   :         T* pT = static_cast<T*>(this);

  0002b	83 7d f8 00	 cmp	 DWORD PTR _this$[ebp], 0
  0002f	74 10		 je	 SHORT $LN7@Fire_Error
  00031	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00034	2d b4 00 00 00	 sub	 eax, 180		; 000000b4H
  00039	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv68[ebp], eax
  0003f	eb 0a		 jmp	 SHORT $LN8@Fire_Error
$LN7@Fire_Error:
  00041	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
$LN8@Fire_Error:
  0004b	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv68[ebp]
  00051	89 4d f4	 mov	 DWORD PTR _pT$[ebp], ecx

; 77   :         OposVariant vars[4];

  00054	68 00 00 00 00	 push	 OFFSET ??0OposVariant@@QAE@XZ ; OposVariant::OposVariant
  00059	6a 04		 push	 4
  0005b	6a 18		 push	 24			; 00000018H
  0005d	8d 55 90	 lea	 edx, DWORD PTR _vars$[ebp]
  00060	52		 push	 edx
  00061	e8 00 00 00 00	 call	 ??_H@YGXPAXIIP6EPAX0@Z@Z

; 78   :         int nConnections = m_vec.GetSize();

  00066	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	83 c1 04	 add	 ecx, 4
  0006c	e8 00 00 00 00	 call	 ?GetSize@CComDynamicUnkArray@ATL@@QBEHXZ ; ATL::CComDynamicUnkArray::GetSize
  00071	89 45 88	 mov	 DWORD PTR _nConnections$[ebp], eax

; 79   : 
; 80   :         for (_nCOConnectionIndex = 0; _nCOConnectionIndex < nConnections; _nCOConnectionIndex++)

  00074	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0
  0007e	eb 0f		 jmp	 SHORT $LN4@Fire_Error
$LN2@Fire_Error:
  00080	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00086	83 c2 01	 add	 edx, 1
  00089	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	89 50 20	 mov	 DWORD PTR [eax+32], edx
$LN4@Fire_Error:
  0008f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00095	3b 55 88	 cmp	 edx, DWORD PTR _nConnections$[ebp]
  00098	0f 8d d5 00 00
	00		 jge	 $LN3@Fire_Error

; 81   :         {
; 82   :             pT->Lock();

  0009e	8b 4d f4	 mov	 ecx, DWORD PTR _pT$[ebp]
  000a1	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000a7	e8 00 00 00 00	 call	 ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock

; 83   :             CComPtr<IUnknown> sp = m_vec.GetAt(_nCOConnectionIndex);

  000ac	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000af	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000b2	51		 push	 ecx
  000b3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	83 c1 04	 add	 ecx, 4
  000b9	e8 00 00 00 00	 call	 ?GetAt@CComDynamicUnkArray@ATL@@QAEPAUIUnknown@@H@Z ; ATL::CComDynamicUnkArray::GetAt
  000be	50		 push	 eax
  000bf	8d 4d 80	 lea	 ecx, DWORD PTR _sp$2[ebp]
  000c2	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 84   :             pT->Unlock();

  000c7	8b 4d f4	 mov	 ecx, DWORD PTR _pT$[ebp]
  000ca	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000d0	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 85   :             _pCPDispatch = reinterpret_cast<IDispatch*>(sp.p);

  000d5	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000d8	8b 45 80	 mov	 eax, DWORD PTR _sp$2[ebp]
  000db	89 42 24	 mov	 DWORD PTR [edx+36], eax

; 86   :             if (_pCPDispatch != NULL)

  000de	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	83 79 24 00	 cmp	 DWORD PTR [ecx+36], 0
  000e5	74 7f		 je	 SHORT $LN5@Fire_Error

; 87   :             {
; 88   :                 HRESULT hr;
; 89   :                 vars[3].SetLONG( ResultCode );

  000e7	8b 55 08	 mov	 edx, DWORD PTR _ResultCode$[ebp]
  000ea	52		 push	 edx
  000eb	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000f0	6b c8 03	 imul	 ecx, eax, 3
  000f3	8d 4c 0d 90	 lea	 ecx, DWORD PTR _vars$[ebp+ecx]
  000f7	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QAEXJ@Z ; OposVariant::SetLONG

; 90   :                 vars[2].SetLONG( ResultCodeExtended );

  000fc	8b 55 0c	 mov	 edx, DWORD PTR _ResultCodeExtended$[ebp]
  000ff	52		 push	 edx
  00100	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00105	d1 e0		 shl	 eax, 1
  00107	8d 4c 05 90	 lea	 ecx, DWORD PTR _vars$[ebp+eax]
  0010b	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QAEXJ@Z ; OposVariant::SetLONG

; 91   :                 vars[1].SetLONG( ErrorLocus );

  00110	8b 4d 10	 mov	 ecx, DWORD PTR _ErrorLocus$[ebp]
  00113	51		 push	 ecx
  00114	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00119	c1 e2 00	 shl	 edx, 0
  0011c	8d 4c 15 90	 lea	 ecx, DWORD PTR _vars$[ebp+edx]
  00120	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QAEXJ@Z ; OposVariant::SetLONG

; 92   :                 vars[0].SetLONG_Ptr( pErrorResponse, hr );

  00125	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _hr$1[ebp]
  0012b	50		 push	 eax
  0012c	8b 4d 14	 mov	 ecx, DWORD PTR _pErrorResponse$[ebp]
  0012f	51		 push	 ecx
  00130	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00135	6b c2 00	 imul	 eax, edx, 0
  00138	8d 4c 05 90	 lea	 ecx, DWORD PTR _vars$[ebp+eax]
  0013c	e8 00 00 00 00	 call	 ?SetLONG_Ptr@OposVariant@@QAEXPAJAAJ@Z ; OposVariant::SetLONG_Ptr

; 93   :                 FireTheEvent( FEUNKNOWN vars, 4, _DIDError, L"ErrorEvent", 3 );

  00141	6a 03		 push	 3
  00143	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@LODEBHDD@?$AAE?$AAr?$AAr?$AAo?$AAr?$AAE?$AAv?$AAe?$AAn?$AAt@
  00148	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014b	83 c1 14	 add	 ecx, 20			; 00000014H
  0014e	51		 push	 ecx
  0014f	6a 04		 push	 4
  00151	8d 55 90	 lea	 edx, DWORD PTR _vars$[ebp]
  00154	52		 push	 edx
  00155	8d 4d 80	 lea	 ecx, DWORD PTR _sp$2[ebp]
  00158	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
  0015d	50		 push	 eax
  0015e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00161	e8 00 00 00 00	 call	 ?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@IAEXPAUIUnknown@@PAVOposVariant@@IAAJPB_WJ@Z ; CProxy_IOPOSEvents<COPOSGestureControl>::FireTheEvent
$LN5@Fire_Error:

; 94   :             }
; 95   :         }

  00166	8d 4d 80	 lea	 ecx, DWORD PTR _sp$2[ebp]
  00169	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
  0016e	e9 0d ff ff ff	 jmp	 $LN2@Fire_Error
$LN3@Fire_Error:

; 96   :     }

  00173	68 00 00 00 00	 push	 OFFSET ??1OposVariant@@QAE@XZ ; OposVariant::~OposVariant
  00178	6a 04		 push	 4
  0017a	6a 18		 push	 24			; 00000018H
  0017c	8d 45 90	 lea	 eax, DWORD PTR _vars$[ebp]
  0017f	50		 push	 eax
  00180	e8 00 00 00 00	 call	 ??_I@YGXPAXIIP6EX0@Z@Z
  00185	52		 push	 edx
  00186	8b cd		 mov	 ecx, ebp
  00188	50		 push	 eax
  00189	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Fire_Error
  0018f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00194	58		 pop	 eax
  00195	5a		 pop	 edx
  00196	5f		 pop	 edi
  00197	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019a	33 cd		 xor	 ecx, ebp
  0019c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a1	81 c4 94 00 00
	00		 add	 esp, 148		; 00000094H
  001a7	3b ec		 cmp	 ebp, esp
  001a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ae	8b e5		 mov	 esp, ebp
  001b0	5d		 pop	 ebp
  001b1	c2 10 00	 ret	 16			; 00000010H
$LN13@Fire_Error:
  001b4	03 00 00 00	 DD	 3
  001b8	00 00 00 00	 DD	 $LN12@Fire_Error
$LN12@Fire_Error:
  001bc	90 ff ff ff	 DD	 -112			; ffffff90H
  001c0	60 00 00 00	 DD	 96			; 00000060H
  001c4	00 00 00 00	 DD	 $LN9@Fire_Error
  001c8	80 ff ff ff	 DD	 -128			; ffffff80H
  001cc	04 00 00 00	 DD	 4
  001d0	00 00 00 00	 DD	 $LN10@Fire_Error
  001d4	74 ff ff ff	 DD	 -140			; ffffff74H
  001d8	04 00 00 00	 DD	 4
  001dc	00 00 00 00	 DD	 $LN11@Fire_Error
$LN11@Fire_Error:
  001e0	68		 DB	 104			; 00000068H
  001e1	72		 DB	 114			; 00000072H
  001e2	00		 DB	 0
$LN10@Fire_Error:
  001e3	73		 DB	 115			; 00000073H
  001e4	70		 DB	 112			; 00000070H
  001e5	00		 DB	 0
$LN9@Fire_Error:
  001e6	76		 DB	 118			; 00000076H
  001e7	61		 DB	 97			; 00000061H
  001e8	72		 DB	 114			; 00000072H
  001e9	73		 DB	 115			; 00000073H
  001ea	00		 DB	 0
?Fire_ErrorEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJJJPAJ@Z ENDP ; CProxy_IOPOSEvents<COPOSGestureControl>::Fire_ErrorEvent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControlCP.h
;	COMDAT ?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJPAJPAPA_W@Z
_TEXT	SEGMENT
tv68 = -124						; size = 4
_hr$1 = -116						; size = 4
_sp$2 = -104						; size = 4
_nConnections$ = -96					; size = 4
_vars$ = -88						; size = 72
_pT$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_EventNumber$ = 8					; size = 4
_pData$ = 12						; size = 4
_pString$ = 16						; size = 4
?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJPAJPAPA_W@Z PROC ; CProxy_IOPOSEvents<COPOSGestureControl>::Fire_DirectIOEvent, COMDAT
; _this$ = ecx

; 50   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d 84	 lea	 edi, DWORD PTR [ebp-124]
  0000b	b9 1f 00 00 00	 mov	 ecx, 31			; 0000001fH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 51   :         T* pT = static_cast<T*>(this);

  00025	83 7d f8 00	 cmp	 DWORD PTR _this$[ebp], 0
  00029	74 0d		 je	 SHORT $LN7@Fire_Direc
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	2d b4 00 00 00	 sub	 eax, 180		; 000000b4H
  00033	89 45 84	 mov	 DWORD PTR tv68[ebp], eax
  00036	eb 07		 jmp	 SHORT $LN8@Fire_Direc
$LN7@Fire_Direc:
  00038	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN8@Fire_Direc:
  0003f	8b 4d 84	 mov	 ecx, DWORD PTR tv68[ebp]
  00042	89 4d f4	 mov	 DWORD PTR _pT$[ebp], ecx

; 52   :         OposVariant vars[3];

  00045	68 00 00 00 00	 push	 OFFSET ??0OposVariant@@QAE@XZ ; OposVariant::OposVariant
  0004a	6a 03		 push	 3
  0004c	6a 18		 push	 24			; 00000018H
  0004e	8d 55 a8	 lea	 edx, DWORD PTR _vars$[ebp]
  00051	52		 push	 edx
  00052	e8 00 00 00 00	 call	 ??_H@YGXPAXIIP6EPAX0@Z@Z

; 53   :         int nConnections = m_vec.GetSize();

  00057	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	83 c1 04	 add	 ecx, 4
  0005d	e8 00 00 00 00	 call	 ?GetSize@CComDynamicUnkArray@ATL@@QBEHXZ ; ATL::CComDynamicUnkArray::GetSize
  00062	89 45 a0	 mov	 DWORD PTR _nConnections$[ebp], eax

; 54   : 
; 55   :         for (_nCOConnectionIndex = 0; _nCOConnectionIndex < nConnections; _nCOConnectionIndex++)

  00065	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0
  0006f	eb 0f		 jmp	 SHORT $LN4@Fire_Direc
$LN2@Fire_Direc:
  00071	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00077	83 c2 01	 add	 edx, 1
  0007a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	89 50 20	 mov	 DWORD PTR [eax+32], edx
$LN4@Fire_Direc:
  00080	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00086	3b 55 a0	 cmp	 edx, DWORD PTR _nConnections$[ebp]
  00089	0f 8d c1 00 00
	00		 jge	 $LN3@Fire_Direc

; 56   :         {
; 57   :             pT->Lock();

  0008f	8b 4d f4	 mov	 ecx, DWORD PTR _pT$[ebp]
  00092	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00098	e8 00 00 00 00	 call	 ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock

; 58   :             CComPtr<IUnknown> sp = m_vec.GetAt(_nCOConnectionIndex);

  0009d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a0	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000a3	51		 push	 ecx
  000a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a7	83 c1 04	 add	 ecx, 4
  000aa	e8 00 00 00 00	 call	 ?GetAt@CComDynamicUnkArray@ATL@@QAEPAUIUnknown@@H@Z ; ATL::CComDynamicUnkArray::GetAt
  000af	50		 push	 eax
  000b0	8d 4d 98	 lea	 ecx, DWORD PTR _sp$2[ebp]
  000b3	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 59   :             pT->Unlock();

  000b8	8b 4d f4	 mov	 ecx, DWORD PTR _pT$[ebp]
  000bb	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000c1	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 60   :             _pCPDispatch = reinterpret_cast<IDispatch*>(sp.p);

  000c6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000c9	8b 45 98	 mov	 eax, DWORD PTR _sp$2[ebp]
  000cc	89 42 24	 mov	 DWORD PTR [edx+36], eax

; 61   :             if (_pCPDispatch != NULL)

  000cf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	83 79 24 00	 cmp	 DWORD PTR [ecx+36], 0
  000d6	74 6b		 je	 SHORT $LN5@Fire_Direc

; 62   :             {
; 63   :                 HRESULT hr;
; 64   :                 vars[2].SetLONG( EventNumber );

  000d8	8b 55 08	 mov	 edx, DWORD PTR _EventNumber$[ebp]
  000db	52		 push	 edx
  000dc	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000e1	d1 e0		 shl	 eax, 1
  000e3	8d 4c 05 a8	 lea	 ecx, DWORD PTR _vars$[ebp+eax]
  000e7	e8 00 00 00 00	 call	 ?SetLONG@OposVariant@@QAEXJ@Z ; OposVariant::SetLONG

; 65   :                 vars[1].SetLONG_Ptr( pData, hr );

  000ec	8d 4d 8c	 lea	 ecx, DWORD PTR _hr$1[ebp]
  000ef	51		 push	 ecx
  000f0	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000f3	52		 push	 edx
  000f4	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000f9	c1 e0 00	 shl	 eax, 0
  000fc	8d 4c 05 a8	 lea	 ecx, DWORD PTR _vars$[ebp+eax]
  00100	e8 00 00 00 00	 call	 ?SetLONG_Ptr@OposVariant@@QAEXPAJAAJ@Z ; OposVariant::SetLONG_Ptr

; 66   :                 vars[0].SetBSTR_InOutPtr( pString, hr );

  00105	8d 4d 8c	 lea	 ecx, DWORD PTR _hr$1[ebp]
  00108	51		 push	 ecx
  00109	8b 55 10	 mov	 edx, DWORD PTR _pString$[ebp]
  0010c	52		 push	 edx
  0010d	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00112	6b c8 00	 imul	 ecx, eax, 0
  00115	8d 4c 0d a8	 lea	 ecx, DWORD PTR _vars$[ebp+ecx]
  00119	e8 00 00 00 00	 call	 ?SetBSTR_InOutPtr@OposVariant@@QAE_NPAPA_WAAJ@Z ; OposVariant::SetBSTR_InOutPtr

; 67   :                 FireTheEvent( FEUNKNOWN vars, 3, _DIDDirectIO, L"DirectIOEvent", 2 );

  0011e	6a 02		 push	 2
  00120	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@CBGEBBBJ@?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAI?$AAO?$AAE?$AAv?$AAe?$AAn?$AAt@
  00125	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00128	83 c2 10	 add	 edx, 16			; 00000010H
  0012b	52		 push	 edx
  0012c	6a 03		 push	 3
  0012e	8d 45 a8	 lea	 eax, DWORD PTR _vars$[ebp]
  00131	50		 push	 eax
  00132	8d 4d 98	 lea	 ecx, DWORD PTR _sp$2[ebp]
  00135	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
  0013a	50		 push	 eax
  0013b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013e	e8 00 00 00 00	 call	 ?FireTheEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@IAEXPAUIUnknown@@PAVOposVariant@@IAAJPB_WJ@Z ; CProxy_IOPOSEvents<COPOSGestureControl>::FireTheEvent
$LN5@Fire_Direc:

; 68   :             }
; 69   :         }

  00143	8d 4d 98	 lea	 ecx, DWORD PTR _sp$2[ebp]
  00146	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
  0014b	e9 21 ff ff ff	 jmp	 $LN2@Fire_Direc
$LN3@Fire_Direc:

; 70   :     }

  00150	68 00 00 00 00	 push	 OFFSET ??1OposVariant@@QAE@XZ ; OposVariant::~OposVariant
  00155	6a 03		 push	 3
  00157	6a 18		 push	 24			; 00000018H
  00159	8d 4d a8	 lea	 ecx, DWORD PTR _vars$[ebp]
  0015c	51		 push	 ecx
  0015d	e8 00 00 00 00	 call	 ??_I@YGXPAXIIP6EX0@Z@Z
  00162	52		 push	 edx
  00163	8b cd		 mov	 ecx, ebp
  00165	50		 push	 eax
  00166	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Fire_Direc
  0016c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00171	58		 pop	 eax
  00172	5a		 pop	 edx
  00173	5f		 pop	 edi
  00174	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00177	33 cd		 xor	 ecx, ebp
  00179	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0017e	83 c4 7c	 add	 esp, 124		; 0000007cH
  00181	3b ec		 cmp	 ebp, esp
  00183	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00188	8b e5		 mov	 esp, ebp
  0018a	5d		 pop	 ebp
  0018b	c2 0c 00	 ret	 12			; 0000000cH
  0018e	66 90		 npad	 2
$LN13@Fire_Direc:
  00190	03 00 00 00	 DD	 3
  00194	00 00 00 00	 DD	 $LN12@Fire_Direc
$LN12@Fire_Direc:
  00198	a8 ff ff ff	 DD	 -88			; ffffffa8H
  0019c	48 00 00 00	 DD	 72			; 00000048H
  001a0	00 00 00 00	 DD	 $LN9@Fire_Direc
  001a4	98 ff ff ff	 DD	 -104			; ffffff98H
  001a8	04 00 00 00	 DD	 4
  001ac	00 00 00 00	 DD	 $LN10@Fire_Direc
  001b0	8c ff ff ff	 DD	 -116			; ffffff8cH
  001b4	04 00 00 00	 DD	 4
  001b8	00 00 00 00	 DD	 $LN11@Fire_Direc
$LN11@Fire_Direc:
  001bc	68		 DB	 104			; 00000068H
  001bd	72		 DB	 114			; 00000072H
  001be	00		 DB	 0
$LN10@Fire_Direc:
  001bf	73		 DB	 115			; 00000073H
  001c0	70		 DB	 112			; 00000070H
  001c1	00		 DB	 0
$LN9@Fire_Direc:
  001c2	76		 DB	 118			; 00000076H
  001c3	61		 DB	 97			; 00000061H
  001c4	72		 DB	 114			; 00000072H
  001c5	73		 DB	 115			; 00000073H
  001c6	00		 DB	 0
?Fire_DirectIOEvent@?$CProxy_IOPOSEvents@VCOPOSGestureControl@@@@QAEXJPAJPAPA_W@Z ENDP ; CProxy_IOPOSEvents<COPOSGestureControl>::Fire_DirectIOEvent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?EnumConnections@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIEnumConnections@@@Z
_TEXT	SEGMENT
tv210 = -56						; size = 4
tv150 = -52						; size = 4
tv81 = -48						; size = 4
tv75 = -44						; size = 4
$T1 = -40						; size = 4
$T2 = -36						; size = 4
$T3 = -32						; size = 4
$T4 = -28						; size = 4
_hRes$ = -24						; size = 4
_pp$5 = -20						; size = 4
_pend$ = -16						; size = 4
_pcd$ = -12						; size = 4
_pT$ = -8						; size = 4
_pEnum$ = -4						; size = 4
_this$ = 8						; size = 4
_ppEnum$ = 12						; size = 4
?EnumConnections@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIEnumConnections@@@Z PROC ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::EnumConnections, COMDAT

; 6412 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d c8	 lea	 edi, DWORD PTR [ebp-56]
  0000b	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd

; 6413 : 	if (ppEnum == NULL)

  00017	83 7d 0c 00	 cmp	 DWORD PTR _ppEnum$[ebp], 0
  0001b	75 0a		 jne	 SHORT $LN5@EnumConnec

; 6414 : 		return E_POINTER;

  0001d	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00022	e9 0a 02 00 00	 jmp	 $LN1@EnumConnec
$LN5@EnumConnec:

; 6415 : 	*ppEnum = NULL;

  00027	8b 45 0c	 mov	 eax, DWORD PTR _ppEnum$[ebp]
  0002a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 6416 : 	CComObject<CComEnumConnections>* pEnum = NULL;

  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pEnum$[ebp], 0

; 6417 : 	pEnum = _ATL_NEW CComObject<CComEnumConnections>;

  00037	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0003c	6a 1c		 push	 28			; 0000001cH
  0003e	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00043	83 c4 08	 add	 esp, 8
  00046	89 45 e4	 mov	 DWORD PTR $T4[ebp], eax
  00049	83 7d e4 00	 cmp	 DWORD PTR $T4[ebp], 0
  0004d	74 0f		 je	 SHORT $LN11@EnumConnec
  0004f	6a 00		 push	 0
  00051	8b 4d e4	 mov	 ecx, DWORD PTR $T4[ebp]
  00054	e8 00 00 00 00	 call	 ??0?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >
  00059	89 45 d4	 mov	 DWORD PTR tv75[ebp], eax
  0005c	eb 07		 jmp	 SHORT $LN12@EnumConnec
$LN11@EnumConnec:
  0005e	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN12@EnumConnec:
  00065	8b 4d d4	 mov	 ecx, DWORD PTR tv75[ebp]
  00068	89 4d fc	 mov	 DWORD PTR _pEnum$[ebp], ecx

; 6418 : 	if (pEnum == NULL)

  0006b	83 7d fc 00	 cmp	 DWORD PTR _pEnum$[ebp], 0
  0006f	75 0a		 jne	 SHORT $LN6@EnumConnec

; 6419 : 		return E_OUTOFMEMORY;

  00071	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  00076	e9 b6 01 00 00	 jmp	 $LN1@EnumConnec
$LN6@EnumConnec:

; 6420 : 	T* pT = static_cast<T*>(this);

  0007b	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0007f	74 0e		 je	 SHORT $LN13@EnumConnec
  00081	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00084	81 ea b4 00 00
	00		 sub	 edx, 180		; 000000b4H
  0008a	89 55 d0	 mov	 DWORD PTR tv81[ebp], edx
  0008d	eb 07		 jmp	 SHORT $LN14@EnumConnec
$LN13@EnumConnec:
  0008f	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN14@EnumConnec:
  00096	8b 45 d0	 mov	 eax, DWORD PTR tv81[ebp]
  00099	89 45 f8	 mov	 DWORD PTR _pT$[ebp], eax

; 6421 : 	pT->Lock();

  0009c	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0009f	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000a5	e8 00 00 00 00	 call	 ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock

; 6422 : 	CONNECTDATA* pcd = NULL;

  000aa	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pcd$[ebp], 0

; 6423 : 	pcd = _ATL_NEW CONNECTDATA[m_vec.end()-m_vec.begin()];

  000b1	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  000b6	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  000b9	83 c1 04	 add	 ecx, 4
  000bc	e8 00 00 00 00	 call	 ?end@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::end
  000c1	8b f0		 mov	 esi, eax
  000c3	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	83 c1 04	 add	 ecx, 4
  000c9	e8 00 00 00 00	 call	 ?begin@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::begin
  000ce	2b f0		 sub	 esi, eax
  000d0	c1 fe 02	 sar	 esi, 2
  000d3	33 c9		 xor	 ecx, ecx
  000d5	8b c6		 mov	 eax, esi
  000d7	ba 08 00 00 00	 mov	 edx, 8
  000dc	f7 e2		 mul	 edx
  000de	0f 90 c1	 seto	 cl
  000e1	f7 d9		 neg	 ecx
  000e3	0b c8		 or	 ecx, eax
  000e5	51		 push	 ecx
  000e6	e8 00 00 00 00	 call	 ??_U@YAPAXIABUnothrow_t@std@@@Z ; operator new[]
  000eb	83 c4 08	 add	 esp, 8
  000ee	89 45 e0	 mov	 DWORD PTR $T3[ebp], eax
  000f1	8b 45 e0	 mov	 eax, DWORD PTR $T3[ebp]
  000f4	89 45 f4	 mov	 DWORD PTR _pcd$[ebp], eax

; 6424 : 	if (pcd == NULL)

  000f7	83 7d f4 00	 cmp	 DWORD PTR _pcd$[ebp], 0
  000fb	75 48		 jne	 SHORT $LN7@EnumConnec

; 6425 : 	{
; 6426 : 		delete pEnum;

  000fd	8b 4d fc	 mov	 ecx, DWORD PTR _pEnum$[ebp]
  00100	89 4d dc	 mov	 DWORD PTR $T2[ebp], ecx
  00103	83 7d dc 00	 cmp	 DWORD PTR $T2[ebp], 0
  00107	74 1d		 je	 SHORT $LN15@EnumConnec
  00109	8b f4		 mov	 esi, esp
  0010b	6a 01		 push	 1
  0010d	8b 55 dc	 mov	 edx, DWORD PTR $T2[ebp]
  00110	8b 02		 mov	 eax, DWORD PTR [edx]
  00112	8b 4d dc	 mov	 ecx, DWORD PTR $T2[ebp]
  00115	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00118	ff d2		 call	 edx
  0011a	3b f4		 cmp	 esi, esp
  0011c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00121	89 45 cc	 mov	 DWORD PTR tv150[ebp], eax
  00124	eb 07		 jmp	 SHORT $LN16@EnumConnec
$LN15@EnumConnec:
  00126	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN16@EnumConnec:

; 6427 : 		pT->Unlock();

  0012d	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  00130	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00136	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 6428 : 		return E_OUTOFMEMORY;

  0013b	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  00140	e9 ec 00 00 00	 jmp	 $LN1@EnumConnec
$LN7@EnumConnec:

; 6429 : 	}
; 6430 : 	CONNECTDATA* pend = pcd;

  00145	8b 45 f4	 mov	 eax, DWORD PTR _pcd$[ebp]
  00148	89 45 f0	 mov	 DWORD PTR _pend$[ebp], eax

; 6431 : 	// Copy the valid CONNECTDATA's
; 6432 : 	for (IUnknown** pp = m_vec.begin();pp<m_vec.end();pp++)

  0014b	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0014e	83 c1 04	 add	 ecx, 4
  00151	e8 00 00 00 00	 call	 ?begin@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::begin
  00156	89 45 ec	 mov	 DWORD PTR _pp$5[ebp], eax
  00159	eb 09		 jmp	 SHORT $LN4@EnumConnec
$LN2@EnumConnec:
  0015b	8b 4d ec	 mov	 ecx, DWORD PTR _pp$5[ebp]
  0015e	83 c1 04	 add	 ecx, 4
  00161	89 4d ec	 mov	 DWORD PTR _pp$5[ebp], ecx
$LN4@EnumConnec:
  00164	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00167	83 c1 04	 add	 ecx, 4
  0016a	e8 00 00 00 00	 call	 ?end@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::end
  0016f	39 45 ec	 cmp	 DWORD PTR _pp$5[ebp], eax
  00172	73 4e		 jae	 SHORT $LN3@EnumConnec

; 6433 : 	{
; 6434 : 		if (*pp != NULL)

  00174	8b 55 ec	 mov	 edx, DWORD PTR _pp$5[ebp]
  00177	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0017a	74 44		 je	 SHORT $LN8@EnumConnec

; 6435 : 		{
; 6436 : 			(*pp)->AddRef();

  0017c	8b 45 ec	 mov	 eax, DWORD PTR _pp$5[ebp]
  0017f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00181	8b 55 ec	 mov	 edx, DWORD PTR _pp$5[ebp]
  00184	8b 02		 mov	 eax, DWORD PTR [edx]
  00186	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00188	8b f4		 mov	 esi, esp
  0018a	50		 push	 eax
  0018b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0018e	ff d2		 call	 edx
  00190	3b f4		 cmp	 esi, esp
  00192	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 6437 : 			pend->pUnk = *pp;

  00197	8b 45 f0	 mov	 eax, DWORD PTR _pend$[ebp]
  0019a	8b 4d ec	 mov	 ecx, DWORD PTR _pp$5[ebp]
  0019d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0019f	89 10		 mov	 DWORD PTR [eax], edx

; 6438 : 			pend->dwCookie = m_vec.GetCookie(pp);

  001a1	8b 45 ec	 mov	 eax, DWORD PTR _pp$5[ebp]
  001a4	50		 push	 eax
  001a5	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  001a8	83 c1 04	 add	 ecx, 4
  001ab	51		 push	 ecx
  001ac	e8 00 00 00 00	 call	 ?GetCookie@CComDynamicUnkArray@ATL@@QAGKPAPAUIUnknown@@@Z ; ATL::CComDynamicUnkArray::GetCookie
  001b1	8b 55 f0	 mov	 edx, DWORD PTR _pend$[ebp]
  001b4	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 6439 : 			pend++;

  001b7	8b 45 f0	 mov	 eax, DWORD PTR _pend$[ebp]
  001ba	83 c0 08	 add	 eax, 8
  001bd	89 45 f0	 mov	 DWORD PTR _pend$[ebp], eax
$LN8@EnumConnec:

; 6440 : 		}
; 6441 : 	}

  001c0	eb 99		 jmp	 SHORT $LN2@EnumConnec
$LN3@EnumConnec:

; 6442 : 	// don't copy the data, but transfer ownership to it
; 6443 : 	pEnum->Init(pcd, pend, NULL, AtlFlagTakeOwnership);

  001c2	6a 02		 push	 2
  001c4	6a 00		 push	 0
  001c6	8b 4d f0	 mov	 ecx, DWORD PTR _pend$[ebp]
  001c9	51		 push	 ecx
  001ca	8b 55 f4	 mov	 edx, DWORD PTR _pcd$[ebp]
  001cd	52		 push	 edx
  001ce	8b 4d fc	 mov	 ecx, DWORD PTR _pEnum$[ebp]
  001d1	e8 00 00 00 00	 call	 ?Init@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QAEJPAUtagCONNECTDATA@@0PAUIUnknown@@W4CComEnumFlags@2@@Z ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Init

; 6444 : 	pT->Unlock();

  001d6	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  001d9	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  001df	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 6445 : 	HRESULT hRes = pEnum->_InternalQueryInterface(__uuidof(IEnumConnections), (void**)ppEnum);

  001e4	8b 45 0c	 mov	 eax, DWORD PTR _ppEnum$[ebp]
  001e7	50		 push	 eax
  001e8	68 00 00 00 00	 push	 OFFSET __GUID_b196b287_bab4_101a_b69c_00aa00341d07
  001ed	8b 4d fc	 mov	 ecx, DWORD PTR _pEnum$[ebp]
  001f0	e8 00 00 00 00	 call	 ?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_InternalQueryInterface
  001f5	89 45 e8	 mov	 DWORD PTR _hRes$[ebp], eax

; 6446 : 	if (FAILED(hRes))

  001f8	83 7d e8 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  001fc	7d 30		 jge	 SHORT $LN9@EnumConnec

; 6447 : 		delete pEnum;

  001fe	8b 4d fc	 mov	 ecx, DWORD PTR _pEnum$[ebp]
  00201	89 4d d8	 mov	 DWORD PTR $T1[ebp], ecx
  00204	83 7d d8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00208	74 1d		 je	 SHORT $LN17@EnumConnec
  0020a	8b f4		 mov	 esi, esp
  0020c	6a 01		 push	 1
  0020e	8b 55 d8	 mov	 edx, DWORD PTR $T1[ebp]
  00211	8b 02		 mov	 eax, DWORD PTR [edx]
  00213	8b 4d d8	 mov	 ecx, DWORD PTR $T1[ebp]
  00216	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00219	ff d2		 call	 edx
  0021b	3b f4		 cmp	 esi, esp
  0021d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00222	89 45 c8	 mov	 DWORD PTR tv210[ebp], eax
  00225	eb 07		 jmp	 SHORT $LN9@EnumConnec
$LN17@EnumConnec:
  00227	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR tv210[ebp], 0
$LN9@EnumConnec:

; 6448 : 	return hRes;

  0022e	8b 45 e8	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@EnumConnec:

; 6449 : }

  00231	5f		 pop	 edi
  00232	5e		 pop	 esi
  00233	83 c4 38	 add	 esp, 56			; 00000038H
  00236	3b ec		 cmp	 ebp, esp
  00238	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023d	8b e5		 mov	 esp, ebp
  0023f	5d		 pop	 ebp
  00240	c2 08 00	 ret	 8
?EnumConnections@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIEnumConnections@@@Z ENDP ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::EnumConnections
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Unadvise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJK@Z
_TEXT	SEGMENT
tv84 = -20						; size = 4
tv68 = -16						; size = 4
_hRes$ = -12						; size = 4
_p$ = -8						; size = 4
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_dwCookie$ = 12						; size = 4
?Unadvise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJK@Z PROC ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::Unadvise, COMDAT

; 6397 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 6398 : 	T* pT = static_cast<T*>(this);

  0001b	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001f	74 0d		 je	 SHORT $LN4@Unadvise
  00021	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00024	2d b4 00 00 00	 sub	 eax, 180		; 000000b4H
  00029	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  0002c	eb 07		 jmp	 SHORT $LN5@Unadvise
$LN4@Unadvise:
  0002e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN5@Unadvise:
  00035	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00038	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 6399 : 	pT->Lock();

  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  0003e	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00044	e8 00 00 00 00	 call	 ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock

; 6400 : 	IUnknown* p = m_vec.GetUnknown(dwCookie);

  00049	8b 55 0c	 mov	 edx, DWORD PTR _dwCookie$[ebp]
  0004c	52		 push	 edx
  0004d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 c0 04	 add	 eax, 4
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?GetUnknown@CComDynamicUnkArray@ATL@@QAGPAUIUnknown@@K@Z ; ATL::CComDynamicUnkArray::GetUnknown
  00059	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax

; 6401 : 	HRESULT hRes = m_vec.Remove(dwCookie) ? S_OK : CONNECT_E_NOCONNECTION;

  0005c	8b 4d 0c	 mov	 ecx, DWORD PTR _dwCookie$[ebp]
  0005f	51		 push	 ecx
  00060	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 04	 add	 ecx, 4
  00066	e8 00 00 00 00	 call	 ?Remove@CComDynamicUnkArray@ATL@@QAEHK@Z ; ATL::CComDynamicUnkArray::Remove
  0006b	85 c0		 test	 eax, eax
  0006d	74 09		 je	 SHORT $LN6@Unadvise
  0006f	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
  00076	eb 07		 jmp	 SHORT $LN7@Unadvise
$LN6@Unadvise:
  00078	c7 45 ec 00 02
	04 80		 mov	 DWORD PTR tv84[ebp], -2147220992 ; 80040200H
$LN7@Unadvise:
  0007f	8b 55 ec	 mov	 edx, DWORD PTR tv84[ebp]
  00082	89 55 f4	 mov	 DWORD PTR _hRes$[ebp], edx

; 6402 : 	pT->Unlock();

  00085	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00088	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  0008e	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 6403 : 	if (hRes == S_OK && p != NULL)

  00093	83 7d f4 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00097	75 1d		 jne	 SHORT $LN2@Unadvise
  00099	83 7d f8 00	 cmp	 DWORD PTR _p$[ebp], 0
  0009d	74 17		 je	 SHORT $LN2@Unadvise

; 6404 : 		p->Release();

  0009f	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  000a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a4	8b f4		 mov	 esi, esp
  000a6	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  000a9	52		 push	 edx
  000aa	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000ad	ff d0		 call	 eax
  000af	3b f4		 cmp	 esi, esp
  000b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Unadvise:

; 6405 : 	return hRes;

  000b6	8b 45 f4	 mov	 eax, DWORD PTR _hRes$[ebp]

; 6406 : }

  000b9	5e		 pop	 esi
  000ba	83 c4 14	 add	 esp, 20			; 00000014H
  000bd	3b ec		 cmp	 ebp, esp
  000bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c2 08 00	 ret	 8
?Unadvise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJK@Z ENDP ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::Unadvise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Advise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAUIUnknown@@PAK@Z
_TEXT	SEGMENT
tv94 = -56						; size = 4
tv68 = -52						; size = 4
_iid$ = -44						; size = 16
_hRes$ = -24						; size = 4
_p$ = -16						; size = 4
_pT$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_pUnkSink$ = 12						; size = 4
_pdwCookie$ = 16					; size = 4
?Advise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAUIUnknown@@PAK@Z PROC ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::Advise, COMDAT

; 6368 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d c8	 lea	 edi, DWORD PTR [ebp-56]
  0000b	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 6369 : 	T* pT = static_cast<T*>(this);

  00021	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00025	74 0d		 je	 SHORT $LN11@Advise
  00027	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	2d b4 00 00 00	 sub	 eax, 180		; 000000b4H
  0002f	89 45 cc	 mov	 DWORD PTR tv68[ebp], eax
  00032	eb 07		 jmp	 SHORT $LN12@Advise
$LN11@Advise:
  00034	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN12@Advise:
  0003b	8b 4d cc	 mov	 ecx, DWORD PTR tv68[ebp]
  0003e	89 4d f8	 mov	 DWORD PTR _pT$[ebp], ecx

; 6370 : 	IUnknown* p = NULL;

  00041	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], 0

; 6371 : 	HRESULT hRes = S_OK;

  00048	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _hRes$[ebp], 0

; 6372 : 	if (pdwCookie != NULL)

  0004f	83 7d 10 00	 cmp	 DWORD PTR _pdwCookie$[ebp], 0
  00053	74 09		 je	 SHORT $LN2@Advise

; 6373 : 		*pdwCookie = 0;

  00055	8b 55 10	 mov	 edx, DWORD PTR _pdwCookie$[ebp]
  00058	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
$LN2@Advise:

; 6374 : 	if (pUnkSink == NULL || pdwCookie == NULL)

  0005e	83 7d 0c 00	 cmp	 DWORD PTR _pUnkSink$[ebp], 0
  00062	74 06		 je	 SHORT $LN4@Advise
  00064	83 7d 10 00	 cmp	 DWORD PTR _pdwCookie$[ebp], 0
  00068	75 0a		 jne	 SHORT $LN3@Advise
$LN4@Advise:

; 6375 : 		return E_POINTER;

  0006a	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0006f	e9 d1 00 00 00	 jmp	 $LN1@Advise
$LN3@Advise:

; 6376 : 	IID iid;
; 6377 : 	GetConnectionInterface(&iid);

  00074	8b f4		 mov	 esi, esp
  00076	8d 45 d4	 lea	 eax, DWORD PTR _iid$[ebp]
  00079	50		 push	 eax
  0007a	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007f	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00082	50		 push	 eax
  00083	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00086	ff d1		 call	 ecx
  00088	3b f4		 cmp	 esi, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 6378 : 	hRes = pUnkSink->QueryInterface(iid, (void**)&p);

  0008f	8b f4		 mov	 esi, esp
  00091	8d 55 f0	 lea	 edx, DWORD PTR _p$[ebp]
  00094	52		 push	 edx
  00095	8d 45 d4	 lea	 eax, DWORD PTR _iid$[ebp]
  00098	50		 push	 eax
  00099	8b 4d 0c	 mov	 ecx, DWORD PTR _pUnkSink$[ebp]
  0009c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009e	8b 45 0c	 mov	 eax, DWORD PTR _pUnkSink$[ebp]
  000a1	50		 push	 eax
  000a2	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000a4	ff d1		 call	 ecx
  000a6	3b f4		 cmp	 esi, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ad	89 45 e8	 mov	 DWORD PTR _hRes$[ebp], eax

; 6379 : 	if (SUCCEEDED(hRes))

  000b0	83 7d e8 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  000b4	7c 6d		 jl	 SHORT $LN5@Advise

; 6380 : 	{
; 6381 : 		pT->Lock();

  000b6	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  000b9	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000bf	e8 00 00 00 00	 call	 ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock

; 6382 : 		*pdwCookie = m_vec.Add(p);

  000c4	8b 55 f0	 mov	 edx, DWORD PTR _p$[ebp]
  000c7	52		 push	 edx
  000c8	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	83 c1 04	 add	 ecx, 4
  000ce	e8 00 00 00 00	 call	 ?Add@CComDynamicUnkArray@ATL@@QAEKPAUIUnknown@@@Z ; ATL::CComDynamicUnkArray::Add
  000d3	8b 4d 10	 mov	 ecx, DWORD PTR _pdwCookie$[ebp]
  000d6	89 01		 mov	 DWORD PTR [ecx], eax

; 6383 : 		hRes = (*pdwCookie != NULL) ? S_OK : CONNECT_E_ADVISELIMIT;

  000d8	8b 55 10	 mov	 edx, DWORD PTR _pdwCookie$[ebp]
  000db	83 3a 00	 cmp	 DWORD PTR [edx], 0
  000de	74 09		 je	 SHORT $LN13@Advise
  000e0	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
  000e7	eb 07		 jmp	 SHORT $LN14@Advise
$LN13@Advise:
  000e9	c7 45 c8 01 02
	04 80		 mov	 DWORD PTR tv94[ebp], -2147220991 ; 80040201H
$LN14@Advise:
  000f0	8b 45 c8	 mov	 eax, DWORD PTR tv94[ebp]
  000f3	89 45 e8	 mov	 DWORD PTR _hRes$[ebp], eax

; 6384 : 		pT->Unlock();

  000f6	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  000f9	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000ff	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 6385 : 		if (hRes != S_OK)

  00104	83 7d e8 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00108	74 17		 je	 SHORT $LN7@Advise

; 6386 : 			p->Release();

  0010a	8b 4d f0	 mov	 ecx, DWORD PTR _p$[ebp]
  0010d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010f	8b f4		 mov	 esi, esp
  00111	8b 45 f0	 mov	 eax, DWORD PTR _p$[ebp]
  00114	50		 push	 eax
  00115	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00118	ff d1		 call	 ecx
  0011a	3b f4		 cmp	 esi, esp
  0011c	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN7@Advise:

; 6387 : 	}

  00121	eb 10		 jmp	 SHORT $LN6@Advise
$LN5@Advise:

; 6388 : 	else if (hRes == E_NOINTERFACE)

  00123	81 7d e8 02 40
	00 80		 cmp	 DWORD PTR _hRes$[ebp], -2147467262 ; 80004002H
  0012a	75 07		 jne	 SHORT $LN6@Advise

; 6389 : 		hRes = CONNECT_E_CANNOTCONNECT;

  0012c	c7 45 e8 02 02
	04 80		 mov	 DWORD PTR _hRes$[ebp], -2147220990 ; 80040202H
$LN6@Advise:

; 6390 : 	if (FAILED(hRes))

  00133	83 7d e8 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00137	7d 09		 jge	 SHORT $LN9@Advise

; 6391 : 		*pdwCookie = 0;

  00139	8b 55 10	 mov	 edx, DWORD PTR _pdwCookie$[ebp]
  0013c	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
$LN9@Advise:

; 6392 : 	return hRes;

  00142	8b 45 e8	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@Advise:

; 6393 : }

  00145	52		 push	 edx
  00146	8b cd		 mov	 ecx, ebp
  00148	50		 push	 eax
  00149	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN18@Advise
  0014f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00154	58		 pop	 eax
  00155	5a		 pop	 edx
  00156	5f		 pop	 edi
  00157	5e		 pop	 esi
  00158	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0015b	33 cd		 xor	 ecx, ebp
  0015d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00162	83 c4 38	 add	 esp, 56			; 00000038H
  00165	3b ec		 cmp	 ebp, esp
  00167	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016c	8b e5		 mov	 esp, ebp
  0016e	5d		 pop	 ebp
  0016f	c2 0c 00	 ret	 12			; 0000000cH
  00172	66 90		 npad	 2
$LN18@Advise:
  00174	02 00 00 00	 DD	 2
  00178	00 00 00 00	 DD	 $LN17@Advise
$LN17@Advise:
  0017c	f0 ff ff ff	 DD	 -16			; fffffff0H
  00180	04 00 00 00	 DD	 4
  00184	00 00 00 00	 DD	 $LN15@Advise
  00188	d4 ff ff ff	 DD	 -44			; ffffffd4H
  0018c	10 00 00 00	 DD	 16			; 00000010H
  00190	00 00 00 00	 DD	 $LN16@Advise
$LN16@Advise:
  00194	69		 DB	 105			; 00000069H
  00195	69		 DB	 105			; 00000069H
  00196	64		 DB	 100			; 00000064H
  00197	00		 DB	 0
$LN15@Advise:
  00198	70		 DB	 112			; 00000070H
  00199	00		 DB	 0
?Advise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAUIUnknown@@PAK@Z ENDP ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::Advise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIConnectionPointContainer@@@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_ppCPC$ = 12						; size = 4
?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIConnectionPointContainer@@@Z PROC ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::GetConnectionPointContainer, COMDAT

; 6338 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 6339 : 		T* pT = static_cast<T*>(this);

  00015	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00019	74 0d		 je	 SHORT $LN3@GetConnect
  0001b	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	2d b4 00 00 00	 sub	 eax, 180		; 000000b4H
  00023	89 45 f8	 mov	 DWORD PTR tv68[ebp], eax
  00026	eb 07		 jmp	 SHORT $LN4@GetConnect
$LN3@GetConnect:
  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@GetConnect:
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR tv68[ebp]
  00032	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 6340 : 		// No need to check ppCPC for NULL since QI will do that for us
; 6341 : 		return pT->QueryInterface(__uuidof(IConnectionPointContainer), (void**)ppCPC);

  00035	8b f4		 mov	 esi, esp
  00037	8b 55 0c	 mov	 edx, DWORD PTR _ppCPC$[ebp]
  0003a	52		 push	 edx
  0003b	68 00 00 00 00	 push	 OFFSET __GUID_b196b284_bab4_101a_b69c_00aa00341d07
  00040	8b 45 fc	 mov	 eax, DWORD PTR _pT$[ebp]
  00043	8b 08		 mov	 ecx, DWORD PTR [eax]
  00045	8b 55 fc	 mov	 edx, DWORD PTR _pT$[ebp]
  00048	52		 push	 edx
  00049	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 6342 : 	}

  00054	5e		 pop	 esi
  00055	83 c4 08	 add	 esp, 8
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 08 00	 ret	 8
?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIConnectionPointContainer@@@Z ENDP ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::GetConnectionPointContainer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAU_GUID@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_piid2$ = 12						; size = 4
?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAU_GUID@@@Z PROC ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::GetConnectionInterface, COMDAT

; 6330 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 6331 : 		if (piid2 == NULL)

  00003	83 7d 0c 00	 cmp	 DWORD PTR _piid2$[ebp], 0
  00007	75 07		 jne	 SHORT $LN2@GetConnect

; 6332 : 			return E_POINTER;

  00009	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0000e	eb 28		 jmp	 SHORT $LN1@GetConnect
$LN2@GetConnect:

; 6333 : 		*piid2 = *piid;

  00010	8b 45 0c	 mov	 eax, DWORD PTR _piid2$[ebp]
  00013	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _DIID__IOPOSGestureControlEvents
  00019	89 08		 mov	 DWORD PTR [eax], ecx
  0001b	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _DIID__IOPOSGestureControlEvents+4
  00021	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00024	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _DIID__IOPOSGestureControlEvents+8
  0002a	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0002d	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _DIID__IOPOSGestureControlEvents+12
  00033	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 6334 : 		return S_OK;

  00036	33 c0		 xor	 eax, eax
$LN1@GetConnect:

; 6335 : 	}

  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAU_GUID@@@Z ENDP ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::GetConnectionInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z PROC ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::_LocCPQueryInterface, COMDAT

; 6308 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 6309 : #ifndef _ATL_OLEDB_CONFORMANCE_TESTS
; 6310 : 		ATLASSERT(ppvObject != NULL);

  00004	83 7d 10 00	 cmp	 DWORD PTR _ppvObject$[ebp], 0
  00008	75 26		 jne	 SHORT $LN7@LocCPQuery
  0000a	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@IINBGKAE@?$AAp?$AAp?$AAv?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00014	6a 00		 push	 0
  00016	68 a6 18 00 00	 push	 6310			; 000018a6H
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00020	6a 02		 push	 2
  00022	e8 00 00 00 00	 call	 __CrtDbgReportW
  00027	83 c4 18	 add	 esp, 24			; 00000018H
  0002a	83 f8 01	 cmp	 eax, 1
  0002d	75 01		 jne	 SHORT $LN7@LocCPQuery
  0002f	cc		 int	 3
$LN7@LocCPQuery:

; 6311 : #endif
; 6312 : 		if (ppvObject == NULL)

  00030	83 7d 10 00	 cmp	 DWORD PTR _ppvObject$[ebp], 0
  00034	75 07		 jne	 SHORT $LN2@LocCPQuery

; 6313 : 			return E_POINTER;

  00036	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0003b	eb 55		 jmp	 SHORT $LN1@LocCPQuery
$LN2@LocCPQuery:

; 6314 : 		*ppvObject = NULL;

  0003d	8b 4d 10	 mov	 ecx, DWORD PTR _ppvObject$[ebp]
  00040	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 6315 : 
; 6316 : 		if (InlineIsEqualGUID(riid, __uuidof(IConnectionPoint)) || InlineIsEqualUnknown(riid))

  00046	68 00 00 00 00	 push	 OFFSET __GUID_b196b286_bab4_101a_b69c_00aa00341d07
  0004b	8b 55 0c	 mov	 edx, DWORD PTR _riid$[ebp]
  0004e	52		 push	 edx
  0004f	e8 00 00 00 00	 call	 _InlineIsEqualGUID
  00054	83 c4 08	 add	 esp, 8
  00057	85 c0		 test	 eax, eax
  00059	75 0d		 jne	 SHORT $LN5@LocCPQuery
  0005b	8b 45 0c	 mov	 eax, DWORD PTR _riid$[ebp]
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z ; ATL::InlineIsEqualUnknown
  00064	85 c0		 test	 eax, eax
  00066	74 25		 je	 SHORT $LN3@LocCPQuery
$LN5@LocCPQuery:

; 6317 : 		{
; 6318 : 			*ppvObject = this;

  00068	8b 4d 10	 mov	 ecx, DWORD PTR _ppvObject$[ebp]
  0006b	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0006e	89 11		 mov	 DWORD PTR [ecx], edx

; 6319 : 			this->AddRef();

  00070	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 08		 mov	 ecx, DWORD PTR [eax]
  00075	8b f4		 mov	 esi, esp
  00077	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0007a	52		 push	 edx
  0007b	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0007e	ff d0		 call	 eax
  00080	3b f4		 cmp	 esi, esp
  00082	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 6320 : #if defined(_ATL_DEBUG_INTERFACES) && !defined(_ATL_STATIC_LIB_IMPL)
; 6321 : 			_AtlDebugInterfacesModule.AddThunk((IUnknown**)ppvObject, _T("IConnectionPointImpl"), riid);
; 6322 : #endif // _ATL_DEBUG_INTERFACES
; 6323 : 			return S_OK;

  00087	33 c0		 xor	 eax, eax
  00089	eb 07		 jmp	 SHORT $LN1@LocCPQuery

; 6324 : 		}

  0008b	eb 05		 jmp	 SHORT $LN1@LocCPQuery
$LN3@LocCPQuery:

; 6325 : 		else
; 6326 : 			return E_NOINTERFACE;

  0008d	b8 02 40 00 80	 mov	 eax, -2147467262	; 80004002H
$LN1@LocCPQuery:

; 6327 : 	}

  00092	5e		 pop	 esi
  00093	3b ec		 cmp	 ebp, esp
  00095	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009a	5d		 pop	 ebp
  0009b	c2 0c 00	 ret	 12			; 0000000cH
?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?DIID__IOPOSGestureControlEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::IConnectionPointImpl<COPOSGestureControl,&DIID__IOPOSGestureControlEvents,ATL::CComDynamicUnkArray>::_LocCPQueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetObjectDescription@?$CComCoClass@VCOPOSGestureControl@@$1?CLSID_OPOSGestureControl@@3U_GUID@@B@ATL@@SGPB_WXZ
_TEXT	SEGMENT
?GetObjectDescription@?$CComCoClass@VCOPOSGestureControl@@$1?CLSID_OPOSGestureControl@@3U_GUID@@B@ATL@@SGPB_WXZ PROC ; ATL::CComCoClass<COPOSGestureControl,&CLSID_OPOSGestureControl>::GetObjectDescription, COMDAT

; 4014 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4015 : 		return NULL;

  00003	33 c0		 xor	 eax, eax

; 4016 : 	}

  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
?GetObjectDescription@?$CComCoClass@VCOPOSGestureControl@@$1?CLSID_OPOSGestureControl@@3U_GUID@@B@ATL@@SGPB_WXZ ENDP ; ATL::CComCoClass<COPOSGestureControl,&CLSID_OPOSGestureControl>::GetObjectDescription
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetObjectCLSID@?$CComCoClass@VCOPOSGestureControl@@$1?CLSID_OPOSGestureControl@@3U_GUID@@B@ATL@@SGABU_GUID@@XZ
_TEXT	SEGMENT
?GetObjectCLSID@?$CComCoClass@VCOPOSGestureControl@@$1?CLSID_OPOSGestureControl@@3U_GUID@@B@ATL@@SGABU_GUID@@XZ PROC ; ATL::CComCoClass<COPOSGestureControl,&CLSID_OPOSGestureControl>::GetObjectCLSID, COMDAT

; 4010 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4011 : 		return *pclsid;

  00003	b8 00 00 00 00	 mov	 eax, OFFSET _CLSID_OPOSGestureControl

; 4012 : 	}

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetObjectCLSID@?$CComCoClass@VCOPOSGestureControl@@$1?CLSID_OPOSGestureControl@@3U_GUID@@B@ATL@@SGABU_GUID@@XZ ENDP ; ATL::CComCoClass<COPOSGestureControl,&CLSID_OPOSGestureControl>::GetObjectCLSID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?EnumConnections@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIEnumConnections@@@Z
_TEXT	SEGMENT
tv210 = -56						; size = 4
tv150 = -52						; size = 4
tv81 = -48						; size = 4
tv75 = -44						; size = 4
$T1 = -40						; size = 4
$T2 = -36						; size = 4
$T3 = -32						; size = 4
$T4 = -28						; size = 4
_hRes$ = -24						; size = 4
_pp$5 = -20						; size = 4
_pend$ = -16						; size = 4
_pcd$ = -12						; size = 4
_pT$ = -8						; size = 4
_pEnum$ = -4						; size = 4
_this$ = 8						; size = 4
_ppEnum$ = 12						; size = 4
?EnumConnections@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIEnumConnections@@@Z PROC ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::EnumConnections, COMDAT

; 6412 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d c8	 lea	 edi, DWORD PTR [ebp-56]
  0000b	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd

; 6413 : 	if (ppEnum == NULL)

  00017	83 7d 0c 00	 cmp	 DWORD PTR _ppEnum$[ebp], 0
  0001b	75 0a		 jne	 SHORT $LN5@EnumConnec

; 6414 : 		return E_POINTER;

  0001d	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00022	e9 0a 02 00 00	 jmp	 $LN1@EnumConnec
$LN5@EnumConnec:

; 6415 : 	*ppEnum = NULL;

  00027	8b 45 0c	 mov	 eax, DWORD PTR _ppEnum$[ebp]
  0002a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 6416 : 	CComObject<CComEnumConnections>* pEnum = NULL;

  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pEnum$[ebp], 0

; 6417 : 	pEnum = _ATL_NEW CComObject<CComEnumConnections>;

  00037	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0003c	6a 1c		 push	 28			; 0000001cH
  0003e	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00043	83 c4 08	 add	 esp, 8
  00046	89 45 e4	 mov	 DWORD PTR $T4[ebp], eax
  00049	83 7d e4 00	 cmp	 DWORD PTR $T4[ebp], 0
  0004d	74 0f		 je	 SHORT $LN11@EnumConnec
  0004f	6a 00		 push	 0
  00051	8b 4d e4	 mov	 ecx, DWORD PTR $T4[ebp]
  00054	e8 00 00 00 00	 call	 ??0?$CComObject@V?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel> >
  00059	89 45 d4	 mov	 DWORD PTR tv75[ebp], eax
  0005c	eb 07		 jmp	 SHORT $LN12@EnumConnec
$LN11@EnumConnec:
  0005e	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN12@EnumConnec:
  00065	8b 4d d4	 mov	 ecx, DWORD PTR tv75[ebp]
  00068	89 4d fc	 mov	 DWORD PTR _pEnum$[ebp], ecx

; 6418 : 	if (pEnum == NULL)

  0006b	83 7d fc 00	 cmp	 DWORD PTR _pEnum$[ebp], 0
  0006f	75 0a		 jne	 SHORT $LN6@EnumConnec

; 6419 : 		return E_OUTOFMEMORY;

  00071	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  00076	e9 b6 01 00 00	 jmp	 $LN1@EnumConnec
$LN6@EnumConnec:

; 6420 : 	T* pT = static_cast<T*>(this);

  0007b	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0007f	74 0e		 je	 SHORT $LN13@EnumConnec
  00081	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00084	81 ea a8 00 00
	00		 sub	 edx, 168		; 000000a8H
  0008a	89 55 d0	 mov	 DWORD PTR tv81[ebp], edx
  0008d	eb 07		 jmp	 SHORT $LN14@EnumConnec
$LN13@EnumConnec:
  0008f	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN14@EnumConnec:
  00096	8b 45 d0	 mov	 eax, DWORD PTR tv81[ebp]
  00099	89 45 f8	 mov	 DWORD PTR _pT$[ebp], eax

; 6421 : 	pT->Lock();

  0009c	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0009f	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000a5	e8 00 00 00 00	 call	 ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock

; 6422 : 	CONNECTDATA* pcd = NULL;

  000aa	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pcd$[ebp], 0

; 6423 : 	pcd = _ATL_NEW CONNECTDATA[m_vec.end()-m_vec.begin()];

  000b1	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  000b6	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  000b9	83 c1 04	 add	 ecx, 4
  000bc	e8 00 00 00 00	 call	 ?end@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::end
  000c1	8b f0		 mov	 esi, eax
  000c3	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	83 c1 04	 add	 ecx, 4
  000c9	e8 00 00 00 00	 call	 ?begin@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::begin
  000ce	2b f0		 sub	 esi, eax
  000d0	c1 fe 02	 sar	 esi, 2
  000d3	33 c9		 xor	 ecx, ecx
  000d5	8b c6		 mov	 eax, esi
  000d7	ba 08 00 00 00	 mov	 edx, 8
  000dc	f7 e2		 mul	 edx
  000de	0f 90 c1	 seto	 cl
  000e1	f7 d9		 neg	 ecx
  000e3	0b c8		 or	 ecx, eax
  000e5	51		 push	 ecx
  000e6	e8 00 00 00 00	 call	 ??_U@YAPAXIABUnothrow_t@std@@@Z ; operator new[]
  000eb	83 c4 08	 add	 esp, 8
  000ee	89 45 e0	 mov	 DWORD PTR $T3[ebp], eax
  000f1	8b 45 e0	 mov	 eax, DWORD PTR $T3[ebp]
  000f4	89 45 f4	 mov	 DWORD PTR _pcd$[ebp], eax

; 6424 : 	if (pcd == NULL)

  000f7	83 7d f4 00	 cmp	 DWORD PTR _pcd$[ebp], 0
  000fb	75 48		 jne	 SHORT $LN7@EnumConnec

; 6425 : 	{
; 6426 : 		delete pEnum;

  000fd	8b 4d fc	 mov	 ecx, DWORD PTR _pEnum$[ebp]
  00100	89 4d dc	 mov	 DWORD PTR $T2[ebp], ecx
  00103	83 7d dc 00	 cmp	 DWORD PTR $T2[ebp], 0
  00107	74 1d		 je	 SHORT $LN15@EnumConnec
  00109	8b f4		 mov	 esi, esp
  0010b	6a 01		 push	 1
  0010d	8b 55 dc	 mov	 edx, DWORD PTR $T2[ebp]
  00110	8b 02		 mov	 eax, DWORD PTR [edx]
  00112	8b 4d dc	 mov	 ecx, DWORD PTR $T2[ebp]
  00115	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00118	ff d2		 call	 edx
  0011a	3b f4		 cmp	 esi, esp
  0011c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00121	89 45 cc	 mov	 DWORD PTR tv150[ebp], eax
  00124	eb 07		 jmp	 SHORT $LN16@EnumConnec
$LN15@EnumConnec:
  00126	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN16@EnumConnec:

; 6427 : 		pT->Unlock();

  0012d	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  00130	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00136	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 6428 : 		return E_OUTOFMEMORY;

  0013b	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  00140	e9 ec 00 00 00	 jmp	 $LN1@EnumConnec
$LN7@EnumConnec:

; 6429 : 	}
; 6430 : 	CONNECTDATA* pend = pcd;

  00145	8b 45 f4	 mov	 eax, DWORD PTR _pcd$[ebp]
  00148	89 45 f0	 mov	 DWORD PTR _pend$[ebp], eax

; 6431 : 	// Copy the valid CONNECTDATA's
; 6432 : 	for (IUnknown** pp = m_vec.begin();pp<m_vec.end();pp++)

  0014b	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0014e	83 c1 04	 add	 ecx, 4
  00151	e8 00 00 00 00	 call	 ?begin@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::begin
  00156	89 45 ec	 mov	 DWORD PTR _pp$5[ebp], eax
  00159	eb 09		 jmp	 SHORT $LN4@EnumConnec
$LN2@EnumConnec:
  0015b	8b 4d ec	 mov	 ecx, DWORD PTR _pp$5[ebp]
  0015e	83 c1 04	 add	 ecx, 4
  00161	89 4d ec	 mov	 DWORD PTR _pp$5[ebp], ecx
$LN4@EnumConnec:
  00164	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00167	83 c1 04	 add	 ecx, 4
  0016a	e8 00 00 00 00	 call	 ?end@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::end
  0016f	39 45 ec	 cmp	 DWORD PTR _pp$5[ebp], eax
  00172	73 4e		 jae	 SHORT $LN3@EnumConnec

; 6433 : 	{
; 6434 : 		if (*pp != NULL)

  00174	8b 55 ec	 mov	 edx, DWORD PTR _pp$5[ebp]
  00177	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0017a	74 44		 je	 SHORT $LN8@EnumConnec

; 6435 : 		{
; 6436 : 			(*pp)->AddRef();

  0017c	8b 45 ec	 mov	 eax, DWORD PTR _pp$5[ebp]
  0017f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00181	8b 55 ec	 mov	 edx, DWORD PTR _pp$5[ebp]
  00184	8b 02		 mov	 eax, DWORD PTR [edx]
  00186	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00188	8b f4		 mov	 esi, esp
  0018a	50		 push	 eax
  0018b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0018e	ff d2		 call	 edx
  00190	3b f4		 cmp	 esi, esp
  00192	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 6437 : 			pend->pUnk = *pp;

  00197	8b 45 f0	 mov	 eax, DWORD PTR _pend$[ebp]
  0019a	8b 4d ec	 mov	 ecx, DWORD PTR _pp$5[ebp]
  0019d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0019f	89 10		 mov	 DWORD PTR [eax], edx

; 6438 : 			pend->dwCookie = m_vec.GetCookie(pp);

  001a1	8b 45 ec	 mov	 eax, DWORD PTR _pp$5[ebp]
  001a4	50		 push	 eax
  001a5	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  001a8	83 c1 04	 add	 ecx, 4
  001ab	51		 push	 ecx
  001ac	e8 00 00 00 00	 call	 ?GetCookie@CComDynamicUnkArray@ATL@@QAGKPAPAUIUnknown@@@Z ; ATL::CComDynamicUnkArray::GetCookie
  001b1	8b 55 f0	 mov	 edx, DWORD PTR _pend$[ebp]
  001b4	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 6439 : 			pend++;

  001b7	8b 45 f0	 mov	 eax, DWORD PTR _pend$[ebp]
  001ba	83 c0 08	 add	 eax, 8
  001bd	89 45 f0	 mov	 DWORD PTR _pend$[ebp], eax
$LN8@EnumConnec:

; 6440 : 		}
; 6441 : 	}

  001c0	eb 99		 jmp	 SHORT $LN2@EnumConnec
$LN3@EnumConnec:

; 6442 : 	// don't copy the data, but transfer ownership to it
; 6443 : 	pEnum->Init(pcd, pend, NULL, AtlFlagTakeOwnership);

  001c2	6a 02		 push	 2
  001c4	6a 00		 push	 0
  001c6	8b 4d f0	 mov	 ecx, DWORD PTR _pend$[ebp]
  001c9	51		 push	 ecx
  001ca	8b 55 f4	 mov	 edx, DWORD PTR _pcd$[ebp]
  001cd	52		 push	 edx
  001ce	8b 4d fc	 mov	 ecx, DWORD PTR _pEnum$[ebp]
  001d1	e8 00 00 00 00	 call	 ?Init@?$CComEnumImpl@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@QAEJPAUtagCONNECTDATA@@0PAUIUnknown@@W4CComEnumFlags@2@@Z ; ATL::CComEnumImpl<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA> >::Init

; 6444 : 	pT->Unlock();

  001d6	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  001d9	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  001df	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 6445 : 	HRESULT hRes = pEnum->_InternalQueryInterface(__uuidof(IEnumConnections), (void**)ppEnum);

  001e4	8b 45 0c	 mov	 eax, DWORD PTR _ppEnum$[ebp]
  001e7	50		 push	 eax
  001e8	68 00 00 00 00	 push	 OFFSET __GUID_b196b287_bab4_101a_b69c_00aa00341d07
  001ed	8b 4d fc	 mov	 ecx, DWORD PTR _pEnum$[ebp]
  001f0	e8 00 00 00 00	 call	 ?_InternalQueryInterface@?$CComEnum@UIEnumConnections@@$1?_GUID_b196b287_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComEnum<IEnumConnections,&_GUID_b196b287_bab4_101a_b69c_00aa00341d07,tagCONNECTDATA,ATL::_Copy<tagCONNECTDATA>,ATL::CComSingleThreadModel>::_InternalQueryInterface
  001f5	89 45 e8	 mov	 DWORD PTR _hRes$[ebp], eax

; 6446 : 	if (FAILED(hRes))

  001f8	83 7d e8 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  001fc	7d 30		 jge	 SHORT $LN9@EnumConnec

; 6447 : 		delete pEnum;

  001fe	8b 4d fc	 mov	 ecx, DWORD PTR _pEnum$[ebp]
  00201	89 4d d8	 mov	 DWORD PTR $T1[ebp], ecx
  00204	83 7d d8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00208	74 1d		 je	 SHORT $LN17@EnumConnec
  0020a	8b f4		 mov	 esi, esp
  0020c	6a 01		 push	 1
  0020e	8b 55 d8	 mov	 edx, DWORD PTR $T1[ebp]
  00211	8b 02		 mov	 eax, DWORD PTR [edx]
  00213	8b 4d d8	 mov	 ecx, DWORD PTR $T1[ebp]
  00216	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00219	ff d2		 call	 edx
  0021b	3b f4		 cmp	 esi, esp
  0021d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00222	89 45 c8	 mov	 DWORD PTR tv210[ebp], eax
  00225	eb 07		 jmp	 SHORT $LN9@EnumConnec
$LN17@EnumConnec:
  00227	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR tv210[ebp], 0
$LN9@EnumConnec:

; 6448 : 	return hRes;

  0022e	8b 45 e8	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@EnumConnec:

; 6449 : }

  00231	5f		 pop	 edi
  00232	5e		 pop	 esi
  00233	83 c4 38	 add	 esp, 56			; 00000038H
  00236	3b ec		 cmp	 ebp, esp
  00238	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023d	8b e5		 mov	 esp, ebp
  0023f	5d		 pop	 ebp
  00240	c2 08 00	 ret	 8
?EnumConnections@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIEnumConnections@@@Z ENDP ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::EnumConnections
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Unadvise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJK@Z
_TEXT	SEGMENT
tv84 = -20						; size = 4
tv68 = -16						; size = 4
_hRes$ = -12						; size = 4
_p$ = -8						; size = 4
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_dwCookie$ = 12						; size = 4
?Unadvise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJK@Z PROC ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::Unadvise, COMDAT

; 6397 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 6398 : 	T* pT = static_cast<T*>(this);

  0001b	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001f	74 0d		 je	 SHORT $LN4@Unadvise
  00021	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00024	2d a8 00 00 00	 sub	 eax, 168		; 000000a8H
  00029	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  0002c	eb 07		 jmp	 SHORT $LN5@Unadvise
$LN4@Unadvise:
  0002e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN5@Unadvise:
  00035	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00038	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 6399 : 	pT->Lock();

  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  0003e	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00044	e8 00 00 00 00	 call	 ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock

; 6400 : 	IUnknown* p = m_vec.GetUnknown(dwCookie);

  00049	8b 55 0c	 mov	 edx, DWORD PTR _dwCookie$[ebp]
  0004c	52		 push	 edx
  0004d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 c0 04	 add	 eax, 4
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?GetUnknown@CComDynamicUnkArray@ATL@@QAGPAUIUnknown@@K@Z ; ATL::CComDynamicUnkArray::GetUnknown
  00059	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax

; 6401 : 	HRESULT hRes = m_vec.Remove(dwCookie) ? S_OK : CONNECT_E_NOCONNECTION;

  0005c	8b 4d 0c	 mov	 ecx, DWORD PTR _dwCookie$[ebp]
  0005f	51		 push	 ecx
  00060	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 04	 add	 ecx, 4
  00066	e8 00 00 00 00	 call	 ?Remove@CComDynamicUnkArray@ATL@@QAEHK@Z ; ATL::CComDynamicUnkArray::Remove
  0006b	85 c0		 test	 eax, eax
  0006d	74 09		 je	 SHORT $LN6@Unadvise
  0006f	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
  00076	eb 07		 jmp	 SHORT $LN7@Unadvise
$LN6@Unadvise:
  00078	c7 45 ec 00 02
	04 80		 mov	 DWORD PTR tv84[ebp], -2147220992 ; 80040200H
$LN7@Unadvise:
  0007f	8b 55 ec	 mov	 edx, DWORD PTR tv84[ebp]
  00082	89 55 f4	 mov	 DWORD PTR _hRes$[ebp], edx

; 6402 : 	pT->Unlock();

  00085	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00088	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  0008e	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 6403 : 	if (hRes == S_OK && p != NULL)

  00093	83 7d f4 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00097	75 1d		 jne	 SHORT $LN2@Unadvise
  00099	83 7d f8 00	 cmp	 DWORD PTR _p$[ebp], 0
  0009d	74 17		 je	 SHORT $LN2@Unadvise

; 6404 : 		p->Release();

  0009f	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  000a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a4	8b f4		 mov	 esi, esp
  000a6	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  000a9	52		 push	 edx
  000aa	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000ad	ff d0		 call	 eax
  000af	3b f4		 cmp	 esi, esp
  000b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Unadvise:

; 6405 : 	return hRes;

  000b6	8b 45 f4	 mov	 eax, DWORD PTR _hRes$[ebp]

; 6406 : }

  000b9	5e		 pop	 esi
  000ba	83 c4 14	 add	 esp, 20			; 00000014H
  000bd	3b ec		 cmp	 ebp, esp
  000bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c2 08 00	 ret	 8
?Unadvise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJK@Z ENDP ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::Unadvise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Advise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAUIUnknown@@PAK@Z
_TEXT	SEGMENT
tv94 = -56						; size = 4
tv68 = -52						; size = 4
_iid$ = -44						; size = 16
_hRes$ = -24						; size = 4
_p$ = -16						; size = 4
_pT$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_pUnkSink$ = 12						; size = 4
_pdwCookie$ = 16					; size = 4
?Advise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAUIUnknown@@PAK@Z PROC ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::Advise, COMDAT

; 6368 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d c8	 lea	 edi, DWORD PTR [ebp-56]
  0000b	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 6369 : 	T* pT = static_cast<T*>(this);

  00021	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00025	74 0d		 je	 SHORT $LN11@Advise
  00027	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	2d a8 00 00 00	 sub	 eax, 168		; 000000a8H
  0002f	89 45 cc	 mov	 DWORD PTR tv68[ebp], eax
  00032	eb 07		 jmp	 SHORT $LN12@Advise
$LN11@Advise:
  00034	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN12@Advise:
  0003b	8b 4d cc	 mov	 ecx, DWORD PTR tv68[ebp]
  0003e	89 4d f8	 mov	 DWORD PTR _pT$[ebp], ecx

; 6370 : 	IUnknown* p = NULL;

  00041	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], 0

; 6371 : 	HRESULT hRes = S_OK;

  00048	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _hRes$[ebp], 0

; 6372 : 	if (pdwCookie != NULL)

  0004f	83 7d 10 00	 cmp	 DWORD PTR _pdwCookie$[ebp], 0
  00053	74 09		 je	 SHORT $LN2@Advise

; 6373 : 		*pdwCookie = 0;

  00055	8b 55 10	 mov	 edx, DWORD PTR _pdwCookie$[ebp]
  00058	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
$LN2@Advise:

; 6374 : 	if (pUnkSink == NULL || pdwCookie == NULL)

  0005e	83 7d 0c 00	 cmp	 DWORD PTR _pUnkSink$[ebp], 0
  00062	74 06		 je	 SHORT $LN4@Advise
  00064	83 7d 10 00	 cmp	 DWORD PTR _pdwCookie$[ebp], 0
  00068	75 0a		 jne	 SHORT $LN3@Advise
$LN4@Advise:

; 6375 : 		return E_POINTER;

  0006a	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0006f	e9 d1 00 00 00	 jmp	 $LN1@Advise
$LN3@Advise:

; 6376 : 	IID iid;
; 6377 : 	GetConnectionInterface(&iid);

  00074	8b f4		 mov	 esi, esp
  00076	8d 45 d4	 lea	 eax, DWORD PTR _iid$[ebp]
  00079	50		 push	 eax
  0007a	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007f	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00082	50		 push	 eax
  00083	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00086	ff d1		 call	 ecx
  00088	3b f4		 cmp	 esi, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 6378 : 	hRes = pUnkSink->QueryInterface(iid, (void**)&p);

  0008f	8b f4		 mov	 esi, esp
  00091	8d 55 f0	 lea	 edx, DWORD PTR _p$[ebp]
  00094	52		 push	 edx
  00095	8d 45 d4	 lea	 eax, DWORD PTR _iid$[ebp]
  00098	50		 push	 eax
  00099	8b 4d 0c	 mov	 ecx, DWORD PTR _pUnkSink$[ebp]
  0009c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009e	8b 45 0c	 mov	 eax, DWORD PTR _pUnkSink$[ebp]
  000a1	50		 push	 eax
  000a2	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000a4	ff d1		 call	 ecx
  000a6	3b f4		 cmp	 esi, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ad	89 45 e8	 mov	 DWORD PTR _hRes$[ebp], eax

; 6379 : 	if (SUCCEEDED(hRes))

  000b0	83 7d e8 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  000b4	7c 6d		 jl	 SHORT $LN5@Advise

; 6380 : 	{
; 6381 : 		pT->Lock();

  000b6	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  000b9	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000bf	e8 00 00 00 00	 call	 ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock

; 6382 : 		*pdwCookie = m_vec.Add(p);

  000c4	8b 55 f0	 mov	 edx, DWORD PTR _p$[ebp]
  000c7	52		 push	 edx
  000c8	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	83 c1 04	 add	 ecx, 4
  000ce	e8 00 00 00 00	 call	 ?Add@CComDynamicUnkArray@ATL@@QAEKPAUIUnknown@@@Z ; ATL::CComDynamicUnkArray::Add
  000d3	8b 4d 10	 mov	 ecx, DWORD PTR _pdwCookie$[ebp]
  000d6	89 01		 mov	 DWORD PTR [ecx], eax

; 6383 : 		hRes = (*pdwCookie != NULL) ? S_OK : CONNECT_E_ADVISELIMIT;

  000d8	8b 55 10	 mov	 edx, DWORD PTR _pdwCookie$[ebp]
  000db	83 3a 00	 cmp	 DWORD PTR [edx], 0
  000de	74 09		 je	 SHORT $LN13@Advise
  000e0	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
  000e7	eb 07		 jmp	 SHORT $LN14@Advise
$LN13@Advise:
  000e9	c7 45 c8 01 02
	04 80		 mov	 DWORD PTR tv94[ebp], -2147220991 ; 80040201H
$LN14@Advise:
  000f0	8b 45 c8	 mov	 eax, DWORD PTR tv94[ebp]
  000f3	89 45 e8	 mov	 DWORD PTR _hRes$[ebp], eax

; 6384 : 		pT->Unlock();

  000f6	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  000f9	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000ff	e8 00 00 00 00	 call	 ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock

; 6385 : 		if (hRes != S_OK)

  00104	83 7d e8 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00108	74 17		 je	 SHORT $LN7@Advise

; 6386 : 			p->Release();

  0010a	8b 4d f0	 mov	 ecx, DWORD PTR _p$[ebp]
  0010d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010f	8b f4		 mov	 esi, esp
  00111	8b 45 f0	 mov	 eax, DWORD PTR _p$[ebp]
  00114	50		 push	 eax
  00115	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00118	ff d1		 call	 ecx
  0011a	3b f4		 cmp	 esi, esp
  0011c	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN7@Advise:

; 6387 : 	}

  00121	eb 10		 jmp	 SHORT $LN6@Advise
$LN5@Advise:

; 6388 : 	else if (hRes == E_NOINTERFACE)

  00123	81 7d e8 02 40
	00 80		 cmp	 DWORD PTR _hRes$[ebp], -2147467262 ; 80004002H
  0012a	75 07		 jne	 SHORT $LN6@Advise

; 6389 : 		hRes = CONNECT_E_CANNOTCONNECT;

  0012c	c7 45 e8 02 02
	04 80		 mov	 DWORD PTR _hRes$[ebp], -2147220990 ; 80040202H
$LN6@Advise:

; 6390 : 	if (FAILED(hRes))

  00133	83 7d e8 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00137	7d 09		 jge	 SHORT $LN9@Advise

; 6391 : 		*pdwCookie = 0;

  00139	8b 55 10	 mov	 edx, DWORD PTR _pdwCookie$[ebp]
  0013c	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
$LN9@Advise:

; 6392 : 	return hRes;

  00142	8b 45 e8	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@Advise:

; 6393 : }

  00145	52		 push	 edx
  00146	8b cd		 mov	 ecx, ebp
  00148	50		 push	 eax
  00149	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN18@Advise
  0014f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00154	58		 pop	 eax
  00155	5a		 pop	 edx
  00156	5f		 pop	 edi
  00157	5e		 pop	 esi
  00158	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0015b	33 cd		 xor	 ecx, ebp
  0015d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00162	83 c4 38	 add	 esp, 56			; 00000038H
  00165	3b ec		 cmp	 ebp, esp
  00167	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016c	8b e5		 mov	 esp, ebp
  0016e	5d		 pop	 ebp
  0016f	c2 0c 00	 ret	 12			; 0000000cH
  00172	66 90		 npad	 2
$LN18@Advise:
  00174	02 00 00 00	 DD	 2
  00178	00 00 00 00	 DD	 $LN17@Advise
$LN17@Advise:
  0017c	f0 ff ff ff	 DD	 -16			; fffffff0H
  00180	04 00 00 00	 DD	 4
  00184	00 00 00 00	 DD	 $LN15@Advise
  00188	d4 ff ff ff	 DD	 -44			; ffffffd4H
  0018c	10 00 00 00	 DD	 16			; 00000010H
  00190	00 00 00 00	 DD	 $LN16@Advise
$LN16@Advise:
  00194	69		 DB	 105			; 00000069H
  00195	69		 DB	 105			; 00000069H
  00196	64		 DB	 100			; 00000064H
  00197	00		 DB	 0
$LN15@Advise:
  00198	70		 DB	 112			; 00000070H
  00199	00		 DB	 0
?Advise@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAUIUnknown@@PAK@Z ENDP ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::Advise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIConnectionPointContainer@@@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_ppCPC$ = 12						; size = 4
?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIConnectionPointContainer@@@Z PROC ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::GetConnectionPointContainer, COMDAT

; 6338 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 6339 : 		T* pT = static_cast<T*>(this);

  00015	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00019	74 0d		 je	 SHORT $LN3@GetConnect
  0001b	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	2d a8 00 00 00	 sub	 eax, 168		; 000000a8H
  00023	89 45 f8	 mov	 DWORD PTR tv68[ebp], eax
  00026	eb 07		 jmp	 SHORT $LN4@GetConnect
$LN3@GetConnect:
  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@GetConnect:
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR tv68[ebp]
  00032	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 6340 : 		// No need to check ppCPC for NULL since QI will do that for us
; 6341 : 		return pT->QueryInterface(__uuidof(IConnectionPointContainer), (void**)ppCPC);

  00035	8b f4		 mov	 esi, esp
  00037	8b 55 0c	 mov	 edx, DWORD PTR _ppCPC$[ebp]
  0003a	52		 push	 edx
  0003b	68 00 00 00 00	 push	 OFFSET __GUID_b196b284_bab4_101a_b69c_00aa00341d07
  00040	8b 45 fc	 mov	 eax, DWORD PTR _pT$[ebp]
  00043	8b 08		 mov	 ecx, DWORD PTR [eax]
  00045	8b 55 fc	 mov	 edx, DWORD PTR _pT$[ebp]
  00048	52		 push	 edx
  00049	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 6342 : 	}

  00054	5e		 pop	 esi
  00055	83 c4 08	 add	 esp, 8
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 08 00	 ret	 8
?GetConnectionPointContainer@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAPAUIConnectionPointContainer@@@Z ENDP ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::GetConnectionPointContainer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAU_GUID@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_piid2$ = 12						; size = 4
?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAU_GUID@@@Z PROC ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::GetConnectionInterface, COMDAT

; 6330 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 6331 : 		if (piid2 == NULL)

  00003	83 7d 0c 00	 cmp	 DWORD PTR _piid2$[ebp], 0
  00007	75 07		 jne	 SHORT $LN2@GetConnect

; 6332 : 			return E_POINTER;

  00009	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0000e	eb 28		 jmp	 SHORT $LN1@GetConnect
$LN2@GetConnect:

; 6333 : 		*piid2 = *piid;

  00010	8b 45 0c	 mov	 eax, DWORD PTR _piid2$[ebp]
  00013	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _IID_IPropertyNotifySink
  00019	89 08		 mov	 DWORD PTR [eax], ecx
  0001b	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _IID_IPropertyNotifySink+4
  00021	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00024	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _IID_IPropertyNotifySink+8
  0002a	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0002d	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _IID_IPropertyNotifySink+12
  00033	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 6334 : 		return S_OK;

  00036	33 c0		 xor	 eax, eax
$LN1@GetConnect:

; 6335 : 	}

  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?GetConnectionInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJPAU_GUID@@@Z ENDP ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::GetConnectionInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z PROC ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::_LocCPQueryInterface, COMDAT

; 6308 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 6309 : #ifndef _ATL_OLEDB_CONFORMANCE_TESTS
; 6310 : 		ATLASSERT(ppvObject != NULL);

  00004	83 7d 10 00	 cmp	 DWORD PTR _ppvObject$[ebp], 0
  00008	75 26		 jne	 SHORT $LN7@LocCPQuery
  0000a	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@IINBGKAE@?$AAp?$AAp?$AAv?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00014	6a 00		 push	 0
  00016	68 a6 18 00 00	 push	 6310			; 000018a6H
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00020	6a 02		 push	 2
  00022	e8 00 00 00 00	 call	 __CrtDbgReportW
  00027	83 c4 18	 add	 esp, 24			; 00000018H
  0002a	83 f8 01	 cmp	 eax, 1
  0002d	75 01		 jne	 SHORT $LN7@LocCPQuery
  0002f	cc		 int	 3
$LN7@LocCPQuery:

; 6311 : #endif
; 6312 : 		if (ppvObject == NULL)

  00030	83 7d 10 00	 cmp	 DWORD PTR _ppvObject$[ebp], 0
  00034	75 07		 jne	 SHORT $LN2@LocCPQuery

; 6313 : 			return E_POINTER;

  00036	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0003b	eb 55		 jmp	 SHORT $LN1@LocCPQuery
$LN2@LocCPQuery:

; 6314 : 		*ppvObject = NULL;

  0003d	8b 4d 10	 mov	 ecx, DWORD PTR _ppvObject$[ebp]
  00040	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 6315 : 
; 6316 : 		if (InlineIsEqualGUID(riid, __uuidof(IConnectionPoint)) || InlineIsEqualUnknown(riid))

  00046	68 00 00 00 00	 push	 OFFSET __GUID_b196b286_bab4_101a_b69c_00aa00341d07
  0004b	8b 55 0c	 mov	 edx, DWORD PTR _riid$[ebp]
  0004e	52		 push	 edx
  0004f	e8 00 00 00 00	 call	 _InlineIsEqualGUID
  00054	83 c4 08	 add	 esp, 8
  00057	85 c0		 test	 eax, eax
  00059	75 0d		 jne	 SHORT $LN5@LocCPQuery
  0005b	8b 45 0c	 mov	 eax, DWORD PTR _riid$[ebp]
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z ; ATL::InlineIsEqualUnknown
  00064	85 c0		 test	 eax, eax
  00066	74 25		 je	 SHORT $LN3@LocCPQuery
$LN5@LocCPQuery:

; 6317 : 		{
; 6318 : 			*ppvObject = this;

  00068	8b 4d 10	 mov	 ecx, DWORD PTR _ppvObject$[ebp]
  0006b	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0006e	89 11		 mov	 DWORD PTR [ecx], edx

; 6319 : 			this->AddRef();

  00070	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 08		 mov	 ecx, DWORD PTR [eax]
  00075	8b f4		 mov	 esi, esp
  00077	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0007a	52		 push	 edx
  0007b	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0007e	ff d0		 call	 eax
  00080	3b f4		 cmp	 esi, esp
  00082	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 6320 : #if defined(_ATL_DEBUG_INTERFACES) && !defined(_ATL_STATIC_LIB_IMPL)
; 6321 : 			_AtlDebugInterfacesModule.AddThunk((IUnknown**)ppvObject, _T("IConnectionPointImpl"), riid);
; 6322 : #endif // _ATL_DEBUG_INTERFACES
; 6323 : 			return S_OK;

  00087	33 c0		 xor	 eax, eax
  00089	eb 07		 jmp	 SHORT $LN1@LocCPQuery

; 6324 : 		}

  0008b	eb 05		 jmp	 SHORT $LN1@LocCPQuery
$LN3@LocCPQuery:

; 6325 : 		else
; 6326 : 			return E_NOINTERFACE;

  0008d	b8 02 40 00 80	 mov	 eax, -2147467262	; 80004002H
$LN1@LocCPQuery:

; 6327 : 	}

  00092	5e		 pop	 esi
  00093	3b ec		 cmp	 ebp, esp
  00095	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009a	5d		 pop	 ebp
  0009b	c2 0c 00	 ret	 12			; 0000000cH
?_LocCPQueryInterface@?$IConnectionPointImpl@VCOPOSGestureControl@@$1?IID_IPropertyNotifySink@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::IConnectionPointImpl<COPOSGestureControl,&IID_IPropertyNotifySink,ATL::CComDynamicUnkArray>::_LocCPQueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?SetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@UAGJABU_GUID@@KK@Z
_TEXT	SEGMENT
tv83 = -36						; size = 4
tv78 = -32						; size = 4
$T1 = -28						; size = 8
_dwNewSafety$ = -20					; size = 4
_pUnk$ = -12						; size = 4
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_dwOptionSetMask$ = 16					; size = 4
_dwEnabledOptions$ = 20					; size = 4
?SetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@UAGJABU_GUID@@KK@Z PROC ; ATL::IObjectSafetyImpl<COPOSGestureControl,3>::SetInterfaceSafetyOptions, COMDAT

; 3704 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00012	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00015	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00018	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00021	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00024	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3705 : 		ATLTRACE(atlTraceControls,2,_T("IObjectSafetyImpl::SetInterfaceSafetyOptions\n"));

  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1FM@CLKMPFGJ@?$AAI?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAS?$AAa?$AAf?$AAe?$AAt?$AAy?$AAI?$AAm@
  0002c	6a 02		 push	 2
  0002e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00033	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00038	50		 push	 eax
  00039	68 79 0e 00 00	 push	 3705			; 00000e79H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00043	8d 4d e4	 lea	 ecx, DWORD PTR $T1[ebp]
  00046	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00051	83 c4 10	 add	 esp, 16			; 00000010H

; 3706 : 		T* pT = static_cast<T*>(this);

  00054	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00058	74 0d		 je	 SHORT $LN7@SetInterfa
  0005a	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	2d a0 00 00 00	 sub	 eax, 160		; 000000a0H
  00062	89 45 e0	 mov	 DWORD PTR tv78[ebp], eax
  00065	eb 07		 jmp	 SHORT $LN8@SetInterfa
$LN7@SetInterfa:
  00067	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN8@SetInterfa:
  0006e	8b 4d e0	 mov	 ecx, DWORD PTR tv78[ebp]
  00071	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 3707 : 		IUnknown* pUnk = NULL;

  00074	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pUnk$[ebp], 0

; 3708 : 
; 3709 : 		// Check if we support the interface and return E_NOINTEFACE if we don't
; 3710 : 		if (FAILED(pT->GetUnknown()->QueryInterface(riid, (void**)&pUnk)))

  0007b	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  0007e	e8 00 00 00 00	 call	 ?GetUnknown@COPOSGestureControl@@QAEPAUIUnknown@@XZ ; COPOSGestureControl::GetUnknown
  00083	89 45 dc	 mov	 DWORD PTR tv83[ebp], eax
  00086	8b f4		 mov	 esi, esp
  00088	8d 55 f4	 lea	 edx, DWORD PTR _pUnk$[ebp]
  0008b	52		 push	 edx
  0008c	8b 45 0c	 mov	 eax, DWORD PTR _riid$[ebp]
  0008f	50		 push	 eax
  00090	8b 4d dc	 mov	 ecx, DWORD PTR tv83[ebp]
  00093	51		 push	 ecx
  00094	8b 55 dc	 mov	 edx, DWORD PTR tv83[ebp]
  00097	8b 02		 mov	 eax, DWORD PTR [edx]
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	ff d1		 call	 ecx
  0009d	3b f4		 cmp	 esi, esp
  0009f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a4	85 c0		 test	 eax, eax
  000a6	7d 07		 jge	 SHORT $LN2@SetInterfa

; 3711 : 			return E_NOINTERFACE;

  000a8	b8 02 40 00 80	 mov	 eax, -2147467262	; 80004002H
  000ad	eb 77		 jmp	 SHORT $LN1@SetInterfa
$LN2@SetInterfa:

; 3712 : 		pUnk->Release();	// Release the interface we just acquired

  000af	8b 55 f4	 mov	 edx, DWORD PTR _pUnk$[ebp]
  000b2	8b 02		 mov	 eax, DWORD PTR [edx]
  000b4	8b f4		 mov	 esi, esp
  000b6	8b 4d f4	 mov	 ecx, DWORD PTR _pUnk$[ebp]
  000b9	51		 push	 ecx
  000ba	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000bd	ff d2		 call	 edx
  000bf	3b f4		 cmp	 esi, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 3713 : 
; 3714 : 		// If we are asked to set options we don't support then fail
; 3715 : 		if (dwOptionSetMask & ~dwSupportedSafety)

  000c6	8b 45 10	 mov	 eax, DWORD PTR _dwOptionSetMask$[ebp]
  000c9	83 e0 fc	 and	 eax, -4			; fffffffcH
  000cc	74 07		 je	 SHORT $LN3@SetInterfa

; 3716 : 			return E_FAIL;

  000ce	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  000d3	eb 51		 jmp	 SHORT $LN1@SetInterfa
$LN3@SetInterfa:

; 3717 : 
; 3718 : 		DWORD dwNewSafety = (m_dwCurrentSafety & ~dwOptionSetMask) | (dwOptionSetMask & dwEnabledOptions);

  000d5	8b 4d 10	 mov	 ecx, DWORD PTR _dwOptionSetMask$[ebp]
  000d8	f7 d1		 not	 ecx
  000da	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  000dd	23 4a 04	 and	 ecx, DWORD PTR [edx+4]
  000e0	8b 45 10	 mov	 eax, DWORD PTR _dwOptionSetMask$[ebp]
  000e3	23 45 14	 and	 eax, DWORD PTR _dwEnabledOptions$[ebp]
  000e6	0b c8		 or	 ecx, eax
  000e8	89 4d ec	 mov	 DWORD PTR _dwNewSafety$[ebp], ecx

; 3719 : 
; 3720 : 		if (m_dwCurrentSafety == dwNewSafety)

  000eb	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  000ee	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000f1	3b 55 ec	 cmp	 edx, DWORD PTR _dwNewSafety$[ebp]
  000f4	75 04		 jne	 SHORT $LN4@SetInterfa

; 3721 : 		{
; 3722 : 			return S_OK;

  000f6	33 c0		 xor	 eax, eax
  000f8	eb 2c		 jmp	 SHORT $LN1@SetInterfa
$LN4@SetInterfa:

; 3723 : 		}
; 3724 : 
; 3725 : 		if (!FAccessAllowed())

  000fa	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 10		 mov	 edx, DWORD PTR [eax]
  000ff	8b f4		 mov	 esi, esp
  00101	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00104	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00107	ff d0		 call	 eax
  00109	3b f4		 cmp	 esi, esp
  0010b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00110	85 c0		 test	 eax, eax
  00112	75 07		 jne	 SHORT $LN5@SetInterfa

; 3726 : 		{
; 3727 : 			return E_ACCESSDENIED;

  00114	b8 05 00 07 80	 mov	 eax, -2147024891	; 80070005H
  00119	eb 0b		 jmp	 SHORT $LN1@SetInterfa
$LN5@SetInterfa:

; 3728 : 		}
; 3729 : 		// Set the safety options we have been asked to
; 3730 : 		m_dwCurrentSafety = dwNewSafety;

  0011b	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	8b 55 ec	 mov	 edx, DWORD PTR _dwNewSafety$[ebp]
  00121	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 3731 : 
; 3732 : 		return S_OK;

  00124	33 c0		 xor	 eax, eax
$LN1@SetInterfa:

; 3733 : 	}

  00126	52		 push	 edx
  00127	8b cd		 mov	 ecx, ebp
  00129	50		 push	 eax
  0012a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@SetInterfa
  00130	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00135	58		 pop	 eax
  00136	5a		 pop	 edx
  00137	5e		 pop	 esi
  00138	83 c4 24	 add	 esp, 36			; 00000024H
  0013b	3b ec		 cmp	 ebp, esp
  0013d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00142	8b e5		 mov	 esp, ebp
  00144	5d		 pop	 ebp
  00145	c2 10 00	 ret	 16			; 00000010H
$LN11@SetInterfa:
  00148	01 00 00 00	 DD	 1
  0014c	00 00 00 00	 DD	 $LN10@SetInterfa
$LN10@SetInterfa:
  00150	f4 ff ff ff	 DD	 -12			; fffffff4H
  00154	04 00 00 00	 DD	 4
  00158	00 00 00 00	 DD	 $LN9@SetInterfa
$LN9@SetInterfa:
  0015c	70		 DB	 112			; 00000070H
  0015d	55		 DB	 85			; 00000055H
  0015e	6e		 DB	 110			; 0000006eH
  0015f	6b		 DB	 107			; 0000006bH
  00160	00		 DB	 0
?SetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@UAGJABU_GUID@@KK@Z ENDP ; ATL::IObjectSafetyImpl<COPOSGestureControl,3>::SetInterfaceSafetyOptions
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@UAGJABU_GUID@@PAK1@Z
_TEXT	SEGMENT
tv85 = -36						; size = 4
tv78 = -32						; size = 4
$T1 = -28						; size = 8
_pUnk$ = -16						; size = 4
_hr$ = -8						; size = 4
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_pdwSupportedOptions$ = 16				; size = 4
_pdwEnabledOptions$ = 20				; size = 4
?GetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@UAGJABU_GUID@@PAK1@Z PROC ; ATL::IObjectSafetyImpl<COPOSGestureControl,3>::GetInterfaceSafetyOptions, COMDAT

; 3667 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00012	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00015	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00018	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00021	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00024	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3668 : 		ATLTRACE(atlTraceControls,2,_T("IObjectSafetyImpl::GetInterfaceSafetyOptions\n"));

  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1FM@DHGAMINB@?$AAI?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAS?$AAa?$AAf?$AAe?$AAt?$AAy?$AAI?$AAm@
  0002c	6a 02		 push	 2
  0002e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00033	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00038	50		 push	 eax
  00039	68 54 0e 00 00	 push	 3668			; 00000e54H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00043	8d 4d e4	 lea	 ecx, DWORD PTR $T1[ebp]
  00046	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00051	83 c4 10	 add	 esp, 16			; 00000010H

; 3669 : 		T* pT = static_cast<T*>(this);

  00054	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00058	74 0d		 je	 SHORT $LN9@GetInterfa
  0005a	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	2d a0 00 00 00	 sub	 eax, 160		; 000000a0H
  00062	89 45 e0	 mov	 DWORD PTR tv78[ebp], eax
  00065	eb 07		 jmp	 SHORT $LN10@GetInterfa
$LN9@GetInterfa:
  00067	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN10@GetInterfa:
  0006e	8b 4d e0	 mov	 ecx, DWORD PTR tv78[ebp]
  00071	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 3670 : 		if (pdwSupportedOptions == NULL || pdwEnabledOptions == NULL)

  00074	83 7d 10 00	 cmp	 DWORD PTR _pdwSupportedOptions$[ebp], 0
  00078	74 06		 je	 SHORT $LN3@GetInterfa
  0007a	83 7d 14 00	 cmp	 DWORD PTR _pdwEnabledOptions$[ebp], 0
  0007e	75 0a		 jne	 SHORT $LN2@GetInterfa
$LN3@GetInterfa:

; 3671 : 			return E_POINTER;

  00080	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00085	e9 a0 00 00 00	 jmp	 $LN1@GetInterfa
$LN2@GetInterfa:

; 3672 : 
; 3673 : 		HRESULT hr;
; 3674 : 		IUnknown* pUnk = NULL;

  0008a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pUnk$[ebp], 0

; 3675 : 		// Check if we support this interface
; 3676 : 		hr = pT->GetUnknown()->QueryInterface(riid, (void**)&pUnk);

  00091	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00094	e8 00 00 00 00	 call	 ?GetUnknown@COPOSGestureControl@@QAEPAUIUnknown@@XZ ; COPOSGestureControl::GetUnknown
  00099	89 45 dc	 mov	 DWORD PTR tv85[ebp], eax
  0009c	8b f4		 mov	 esi, esp
  0009e	8d 55 f0	 lea	 edx, DWORD PTR _pUnk$[ebp]
  000a1	52		 push	 edx
  000a2	8b 45 0c	 mov	 eax, DWORD PTR _riid$[ebp]
  000a5	50		 push	 eax
  000a6	8b 4d dc	 mov	 ecx, DWORD PTR tv85[ebp]
  000a9	51		 push	 ecx
  000aa	8b 55 dc	 mov	 edx, DWORD PTR tv85[ebp]
  000ad	8b 02		 mov	 eax, DWORD PTR [edx]
  000af	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b1	ff d1		 call	 ecx
  000b3	3b f4		 cmp	 esi, esp
  000b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ba	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3677 : 		if (SUCCEEDED(hr))

  000bd	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000c1	7c 52		 jl	 SHORT $LN4@GetInterfa

; 3678 : 		{
; 3679 : 			// We support this interface so set the safety options accordingly
; 3680 : 			pUnk->Release();	// Release the interface we just acquired

  000c3	8b 55 f0	 mov	 edx, DWORD PTR _pUnk$[ebp]
  000c6	8b 02		 mov	 eax, DWORD PTR [edx]
  000c8	8b f4		 mov	 esi, esp
  000ca	8b 4d f0	 mov	 ecx, DWORD PTR _pUnk$[ebp]
  000cd	51		 push	 ecx
  000ce	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000d1	ff d2		 call	 edx
  000d3	3b f4		 cmp	 esi, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 3681 : 			*pdwSupportedOptions = dwSupportedSafety;

  000da	8b 45 10	 mov	 eax, DWORD PTR _pdwSupportedOptions$[ebp]
  000dd	c7 00 03 00 00
	00		 mov	 DWORD PTR [eax], 3

; 3682 : 
; 3683 : 			if (FAccessAllowed())

  000e3	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  000e6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e8	8b f4		 mov	 esi, esp
  000ea	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000f0	ff d0		 call	 eax
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f9	85 c0		 test	 eax, eax
  000fb	74 0d		 je	 SHORT $LN6@GetInterfa

; 3684 : 			{
; 3685 : 				*pdwEnabledOptions   = m_dwCurrentSafety;

  000fd	8b 4d 14	 mov	 ecx, DWORD PTR _pdwEnabledOptions$[ebp]
  00100	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00106	89 01		 mov	 DWORD PTR [ecx], eax

; 3686 : 			}

  00108	eb 09		 jmp	 SHORT $LN7@GetInterfa
$LN6@GetInterfa:

; 3687 : 			else
; 3688 : 			{
; 3689 : 				*pdwEnabledOptions   = 0;

  0010a	8b 4d 14	 mov	 ecx, DWORD PTR _pdwEnabledOptions$[ebp]
  0010d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$LN7@GetInterfa:

; 3690 : 			}
; 3691 : 		}

  00113	eb 12		 jmp	 SHORT $LN5@GetInterfa
$LN4@GetInterfa:

; 3692 : 		else
; 3693 : 		{
; 3694 : 			// We don't support this interface
; 3695 : 			*pdwSupportedOptions = 0;

  00115	8b 55 10	 mov	 edx, DWORD PTR _pdwSupportedOptions$[ebp]
  00118	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 3696 : 			*pdwEnabledOptions   = 0;

  0011e	8b 45 14	 mov	 eax, DWORD PTR _pdwEnabledOptions$[ebp]
  00121	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN5@GetInterfa:

; 3697 : 		}
; 3698 : 		return hr;

  00127	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
$LN1@GetInterfa:

; 3699 : 	}

  0012a	52		 push	 edx
  0012b	8b cd		 mov	 ecx, ebp
  0012d	50		 push	 eax
  0012e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@GetInterfa
  00134	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00139	58		 pop	 eax
  0013a	5a		 pop	 edx
  0013b	5e		 pop	 esi
  0013c	83 c4 24	 add	 esp, 36			; 00000024H
  0013f	3b ec		 cmp	 ebp, esp
  00141	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00146	8b e5		 mov	 esp, ebp
  00148	5d		 pop	 ebp
  00149	c2 10 00	 ret	 16			; 00000010H
$LN13@GetInterfa:
  0014c	01 00 00 00	 DD	 1
  00150	00 00 00 00	 DD	 $LN12@GetInterfa
$LN12@GetInterfa:
  00154	f0 ff ff ff	 DD	 -16			; fffffff0H
  00158	04 00 00 00	 DD	 4
  0015c	00 00 00 00	 DD	 $LN11@GetInterfa
$LN11@GetInterfa:
  00160	70		 DB	 112			; 00000070H
  00161	55		 DB	 85			; 00000055H
  00162	6e		 DB	 110			; 0000006eH
  00163	6b		 DB	 107			; 0000006bH
  00164	00		 DB	 0
?GetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@UAGJABU_GUID@@PAK1@Z ENDP ; ATL::IObjectSafetyImpl<COPOSGestureControl,3>::GetInterfaceSafetyOptions
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?FAccessAllowed@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@MAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FAccessAllowed@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@MAEHXZ PROC ; ATL::IObjectSafetyImpl<COPOSGestureControl,3>::FAccessAllowed, COMDAT
; _this$ = ecx

; 3652 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3653 : 		return TRUE;

  0000e	b8 01 00 00 00	 mov	 eax, 1

; 3654 : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?FAccessAllowed@?$IObjectSafetyImpl@VCOPOSGestureControl@@$02@ATL@@MAEHXZ ENDP ; ATL::IObjectSafetyImpl<COPOSGestureControl,3>::FAccessAllowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetGUID@?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJKPAU_GUID@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_dwGuidKind$ = 12					; size = 4
_pGUID$ = 16						; size = 4
?GetGUID@?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJKPAU_GUID@@@Z PROC ; ATL::IProvideClassInfo2Impl<&CLSID_OPOSGestureControl,&DIID__IOPOSGestureControlEvents,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::GetGUID, COMDAT

; 5255 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 5256 : 		if (pGUID == NULL)

  00003	83 7d 10 00	 cmp	 DWORD PTR _pGUID$[ebp], 0
  00007	75 07		 jne	 SHORT $LN2@GetGUID

; 5257 : 		{
; 5258 : 			return E_POINTER;

  00009	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0000e	eb 69		 jmp	 SHORT $LN1@GetGUID
$LN2@GetGUID:

; 5259 : 		}
; 5260 : 		*pGUID = GUID_NULL;

  00010	8b 45 10	 mov	 eax, DWORD PTR _pGUID$[ebp]
  00013	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_NULL
  00019	89 08		 mov	 DWORD PTR [eax], ecx
  0001b	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_NULL+4
  00021	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00024	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_NULL+8
  0002a	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0002d	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_NULL+12
  00033	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 5261 : 		if(dwGuidKind!=GUIDKIND_DEFAULT_SOURCE_DISP_IID)

  00036	83 7d 0c 01	 cmp	 DWORD PTR _dwGuidKind$[ebp], 1
  0003a	74 07		 je	 SHORT $LN3@GetGUID

; 5262 : 		{
; 5263 : 			return E_INVALIDARG;

  0003c	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00041	eb 36		 jmp	 SHORT $LN1@GetGUID
$LN3@GetGUID:

; 5264 : 		}
; 5265 : 		if (psrcid != NULL)

  00043	b8 00 00 00 00	 mov	 eax, OFFSET _DIID__IOPOSGestureControlEvents
  00048	85 c0		 test	 eax, eax
  0004a	74 28		 je	 SHORT $LN4@GetGUID

; 5266 : 		{
; 5267 : 			*pGUID = *psrcid;

  0004c	8b 4d 10	 mov	 ecx, DWORD PTR _pGUID$[ebp]
  0004f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _DIID__IOPOSGestureControlEvents
  00055	89 11		 mov	 DWORD PTR [ecx], edx
  00057	a1 04 00 00 00	 mov	 eax, DWORD PTR _DIID__IOPOSGestureControlEvents+4
  0005c	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0005f	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _DIID__IOPOSGestureControlEvents+8
  00065	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00068	a1 0c 00 00 00	 mov	 eax, DWORD PTR _DIID__IOPOSGestureControlEvents+12
  0006d	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 5268 : 			return S_OK;

  00070	33 c0		 xor	 eax, eax
  00072	eb 05		 jmp	 SHORT $LN1@GetGUID
$LN4@GetGUID:

; 5269 : 		}
; 5270 : 		return E_FAIL;

  00074	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
$LN1@GetGUID:

; 5271 : 	}

  00079	5d		 pop	 ebp
  0007a	c2 0c 00	 ret	 12			; 0000000cH
?GetGUID@?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJKPAU_GUID@@@Z ENDP ; ATL::IProvideClassInfo2Impl<&CLSID_OPOSGestureControl,&DIID__IOPOSGestureControlEvents,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::GetGUID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetClassInfoW@?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAPAUITypeInfo@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pptinfo$ = 12						; size = 4
?GetClassInfoW@?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAPAUITypeInfo@@@Z PROC ; ATL::IProvideClassInfo2Impl<&CLSID_OPOSGestureControl,&DIID__IOPOSGestureControlEvents,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::GetClassInfoW, COMDAT

; 5249 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 5250 : 		return _tih.GetTypeInfo(0, LANG_NEUTRAL, pptinfo);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _pptinfo$[ebp]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET ?_tih@?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A ; ATL::IProvideClassInfo2Impl<&CLSID_OPOSGestureControl,&DIID__IOPOSGestureControlEvents,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::_tih
  00010	e8 00 00 00 00	 call	 ?GetTypeInfo@CComTypeInfoHolder@ATL@@QAEJIKPAPAUITypeInfo@@@Z ; ATL::CComTypeInfoHolder::GetTypeInfo

; 5251 : 	}

  00015	3b ec		 cmp	 ebp, esp
  00017	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001c	5d		 pop	 ebp
  0001d	c2 08 00	 ret	 8
?GetClassInfoW@?$IProvideClassInfo2Impl@$1?CLSID_OPOSGestureControl@@3U_GUID@@B$1?DIID__IOPOSGestureControlEvents@@3U2@B$1?LIBID_OposGestureControl_CCO@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAPAUITypeInfo@@@Z ENDP ; ATL::IProvideClassInfo2Impl<&CLSID_OPOSGestureControl,&DIID__IOPOSGestureControlEvents,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::GetClassInfoW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?EnumDAdvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumSTATDATA@@@Z
_TEXT	SEGMENT
tv153 = -20						; size = 4
tv89 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_ppenumAdvise$ = 12					; size = 4
?EnumDAdvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumSTATDATA@@@Z PROC ; ATL::IDataObjectImpl<COPOSGestureControl>::EnumDAdvise, COMDAT

; 3614 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3615 : 		ATLTRACE(atlTraceControls,2,_T("IDataObjectImpl::EnumDAdvise\n"));

  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@FNLPENOI@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
  00020	6a 02		 push	 2
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00027	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  0002c	50		 push	 eax
  0002d	68 1f 0e 00 00	 push	 3615			; 00000e1fH
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00037	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00045	83 c4 10	 add	 esp, 16			; 00000010H

; 3616 : 		ATLASSERT(ppenumAdvise != NULL);

  00048	83 7d 0c 00	 cmp	 DWORD PTR _ppenumAdvise$[ebp], 0
  0004c	75 26		 jne	 SHORT $LN5@EnumDAdvis
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@PHHHDEOE@?$AAp?$AAp?$AAe?$AAn?$AAu?$AAm?$AAA?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?5?$AA?$CB?$AA?$DN@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00058	6a 00		 push	 0
  0005a	68 20 0e 00 00	 push	 3616			; 00000e20H
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00064	6a 02		 push	 2
  00066	e8 00 00 00 00	 call	 __CrtDbgReportW
  0006b	83 c4 18	 add	 esp, 24			; 00000018H
  0006e	83 f8 01	 cmp	 eax, 1
  00071	75 01		 jne	 SHORT $LN5@EnumDAdvis
  00073	cc		 int	 3
$LN5@EnumDAdvis:

; 3617 : 		if (ppenumAdvise == NULL)

  00074	83 7d 0c 00	 cmp	 DWORD PTR _ppenumAdvise$[ebp], 0
  00078	75 07		 jne	 SHORT $LN2@EnumDAdvis

; 3618 : 			return E_POINTER;

  0007a	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0007f	eb 6e		 jmp	 SHORT $LN1@EnumDAdvis
$LN2@EnumDAdvis:

; 3619 : 		*ppenumAdvise = NULL;

  00081	8b 4d 0c	 mov	 ecx, DWORD PTR _ppenumAdvise$[ebp]
  00084	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 3620 : 
; 3621 : 		T* pT = static_cast<T*>(this);

  0008a	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0008e	74 0e		 je	 SHORT $LN6@EnumDAdvis
  00090	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00093	81 ea 98 00 00
	00		 sub	 edx, 152		; 00000098H
  00099	89 55 f0	 mov	 DWORD PTR tv89[ebp], edx
  0009c	eb 07		 jmp	 SHORT $LN7@EnumDAdvis
$LN6@EnumDAdvis:
  0009e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN7@EnumDAdvis:
  000a5	8b 45 f0	 mov	 eax, DWORD PTR tv89[ebp]
  000a8	89 45 fc	 mov	 DWORD PTR _pT$[ebp], eax

; 3622 : 		if (pT->m_spDataAdviseHolder != NULL)

  000ab	6a 00		 push	 0
  000ad	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  000b0	83 c1 0c	 add	 ecx, 12			; 0000000cH
  000b3	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBE_NPAUIDataAdviseHolder@@@Z ; ATL::CComPtrBase<IDataAdviseHolder>::operator!=
  000b8	0f b6 c8	 movzx	 ecx, al
  000bb	85 c9		 test	 ecx, ecx
  000bd	74 2b		 je	 SHORT $LN3@EnumDAdvis

; 3623 : 			return pT->m_spDataAdviseHolder->EnumAdvise(ppenumAdvise);

  000bf	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  000c2	83 c1 0c	 add	 ecx, 12			; 0000000cH
  000c5	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDataAdviseHolder@@@1@XZ ; ATL::CComPtrBase<IDataAdviseHolder>::operator->
  000ca	89 45 ec	 mov	 DWORD PTR tv153[ebp], eax
  000cd	8b f4		 mov	 esi, esp
  000cf	8b 55 0c	 mov	 edx, DWORD PTR _ppenumAdvise$[ebp]
  000d2	52		 push	 edx
  000d3	8b 45 ec	 mov	 eax, DWORD PTR tv153[ebp]
  000d6	50		 push	 eax
  000d7	8b 4d ec	 mov	 ecx, DWORD PTR tv153[ebp]
  000da	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dc	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000df	ff d0		 call	 eax
  000e1	3b f4		 cmp	 esi, esp
  000e3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e8	eb 05		 jmp	 SHORT $LN1@EnumDAdvis
$LN3@EnumDAdvis:

; 3624 : 		return E_FAIL;

  000ea	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
$LN1@EnumDAdvis:

; 3625 : 	}

  000ef	5e		 pop	 esi
  000f0	83 c4 14	 add	 esp, 20			; 00000014H
  000f3	3b ec		 cmp	 ebp, esp
  000f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fa	8b e5		 mov	 esp, ebp
  000fc	5d		 pop	 ebp
  000fd	c2 08 00	 ret	 8
?EnumDAdvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumSTATDATA@@@Z ENDP ; ATL::IDataObjectImpl<COPOSGestureControl>::EnumDAdvise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?DUnadvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z
_TEXT	SEGMENT
tv142 = -24						; size = 4
tv78 = -20						; size = 4
$T1 = -16						; size = 8
_hr$ = -8						; size = 4
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_dwConnection$ = 12					; size = 4
?DUnadvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z PROC ; ATL::IDataObjectImpl<COPOSGestureControl>::DUnadvise, COMDAT

; 3602 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3603 : 		ATLTRACE(atlTraceControls,2,_T("IDataObjectImpl::DUnadvise\n"));

  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_1DI@BLCCNEGF@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
  00023	6a 02		 push	 2
  00025	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  0002a	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  0002f	50		 push	 eax
  00030	68 13 0e 00 00	 push	 3603			; 00000e13H
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0003a	8d 4d f0	 lea	 ecx, DWORD PTR $T1[ebp]
  0003d	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00048	83 c4 10	 add	 esp, 16			; 00000010H

; 3604 : 		T* pT = static_cast<T*>(this);

  0004b	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0004f	74 0d		 je	 SHORT $LN5@DUnadvise
  00051	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00054	2d 98 00 00 00	 sub	 eax, 152		; 00000098H
  00059	89 45 ec	 mov	 DWORD PTR tv78[ebp], eax
  0005c	eb 07		 jmp	 SHORT $LN6@DUnadvise
$LN5@DUnadvise:
  0005e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN6@DUnadvise:
  00065	8b 4d ec	 mov	 ecx, DWORD PTR tv78[ebp]
  00068	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 3605 : 		HRESULT hr = S_OK;

  0006b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 3606 : 		if (pT->m_spDataAdviseHolder == NULL)

  00072	6a 00		 push	 0
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00077	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0007a	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBE_NPAUIDataAdviseHolder@@@Z ; ATL::CComPtrBase<IDataAdviseHolder>::operator==
  0007f	0f b6 d0	 movzx	 edx, al
  00082	85 d2		 test	 edx, edx
  00084	74 09		 je	 SHORT $LN2@DUnadvise

; 3607 : 			hr = OLE_E_NOCONNECTION;

  00086	c7 45 f8 04 00
	04 80		 mov	 DWORD PTR _hr$[ebp], -2147221500 ; 80040004H
  0008d	eb 2c		 jmp	 SHORT $LN3@DUnadvise
$LN2@DUnadvise:

; 3608 : 		else
; 3609 : 			hr = pT->m_spDataAdviseHolder->Unadvise(dwConnection);

  0008f	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00092	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00095	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDataAdviseHolder@@@1@XZ ; ATL::CComPtrBase<IDataAdviseHolder>::operator->
  0009a	89 45 e8	 mov	 DWORD PTR tv142[ebp], eax
  0009d	8b f4		 mov	 esi, esp
  0009f	8b 45 0c	 mov	 eax, DWORD PTR _dwConnection$[ebp]
  000a2	50		 push	 eax
  000a3	8b 4d e8	 mov	 ecx, DWORD PTR tv142[ebp]
  000a6	51		 push	 ecx
  000a7	8b 55 e8	 mov	 edx, DWORD PTR tv142[ebp]
  000aa	8b 02		 mov	 eax, DWORD PTR [edx]
  000ac	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000af	ff d1		 call	 ecx
  000b1	3b f4		 cmp	 esi, esp
  000b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b8	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN3@DUnadvise:

; 3610 : 		return hr;

  000bb	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]

; 3611 : 	}

  000be	5e		 pop	 esi
  000bf	83 c4 18	 add	 esp, 24			; 00000018H
  000c2	3b ec		 cmp	 ebp, esp
  000c4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c2 08 00	 ret	 8
?DUnadvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z ENDP ; ATL::IDataObjectImpl<COPOSGestureControl>::DUnadvise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?DAdvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@KPAUIAdviseSink@@PAK@Z
_TEXT	SEGMENT
tv156 = -24						; size = 4
tv78 = -20						; size = 4
$T1 = -16						; size = 8
_hr$ = -8						; size = 4
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_pformatetc$ = 12					; size = 4
_advf$ = 16						; size = 4
_pAdvSink$ = 20						; size = 4
_pdwConnection$ = 24					; size = 4
?DAdvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@KPAUIAdviseSink@@PAK@Z PROC ; ATL::IDataObjectImpl<COPOSGestureControl>::DAdvise, COMDAT

; 3589 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3590 : 		ATLTRACE(atlTraceControls,2,_T("IDataObjectImpl::DAdvise\n"));

  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_1DE@GIJAFMDC@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
  00023	6a 02		 push	 2
  00025	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  0002a	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  0002f	50		 push	 eax
  00030	68 06 0e 00 00	 push	 3590			; 00000e06H
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0003a	8d 4d f0	 lea	 ecx, DWORD PTR $T1[ebp]
  0003d	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00048	83 c4 10	 add	 esp, 16			; 00000010H

; 3591 : 		T* pT = static_cast<T*>(this);

  0004b	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0004f	74 0d		 je	 SHORT $LN5@DAdvise
  00051	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00054	2d 98 00 00 00	 sub	 eax, 152		; 00000098H
  00059	89 45 ec	 mov	 DWORD PTR tv78[ebp], eax
  0005c	eb 07		 jmp	 SHORT $LN6@DAdvise
$LN5@DAdvise:
  0005e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN6@DAdvise:
  00065	8b 4d ec	 mov	 ecx, DWORD PTR tv78[ebp]
  00068	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 3592 : 		HRESULT hr = S_OK;

  0006b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 3593 : 		if (pT->m_spDataAdviseHolder == NULL)

  00072	6a 00		 push	 0
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00077	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0007a	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBE_NPAUIDataAdviseHolder@@@Z ; ATL::CComPtrBase<IDataAdviseHolder>::operator==
  0007f	0f b6 d0	 movzx	 edx, al
  00082	85 d2		 test	 edx, edx
  00084	74 1e		 je	 SHORT $LN2@DAdvise

; 3594 : 			hr = CreateDataAdviseHolder(&pT->m_spDataAdviseHolder);

  00086	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00089	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0008c	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QAEPAPAUIDataAdviseHolder@@XZ ; ATL::CComPtrBase<IDataAdviseHolder>::operator&
  00091	8b f4		 mov	 esi, esp
  00093	50		 push	 eax
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateDataAdviseHolder@4
  0009a	3b f4		 cmp	 esi, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN2@DAdvise:

; 3595 : 
; 3596 : 		if (hr == S_OK)

  000a4	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000a8	75 3c		 jne	 SHORT $LN3@DAdvise

; 3597 : 			hr = pT->m_spDataAdviseHolder->Advise((IDataObject*)this, pformatetc, advf, pAdvSink, pdwConnection);

  000aa	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  000ad	83 c1 0c	 add	 ecx, 12			; 0000000cH
  000b0	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDataAdviseHolder@@@1@XZ ; ATL::CComPtrBase<IDataAdviseHolder>::operator->
  000b5	89 45 e8	 mov	 DWORD PTR tv156[ebp], eax
  000b8	8b f4		 mov	 esi, esp
  000ba	8b 45 18	 mov	 eax, DWORD PTR _pdwConnection$[ebp]
  000bd	50		 push	 eax
  000be	8b 4d 14	 mov	 ecx, DWORD PTR _pAdvSink$[ebp]
  000c1	51		 push	 ecx
  000c2	8b 55 10	 mov	 edx, DWORD PTR _advf$[ebp]
  000c5	52		 push	 edx
  000c6	8b 45 0c	 mov	 eax, DWORD PTR _pformatetc$[ebp]
  000c9	50		 push	 eax
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	51		 push	 ecx
  000ce	8b 55 e8	 mov	 edx, DWORD PTR tv156[ebp]
  000d1	52		 push	 edx
  000d2	8b 45 e8	 mov	 eax, DWORD PTR tv156[ebp]
  000d5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d7	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  000da	ff d2		 call	 edx
  000dc	3b f4		 cmp	 esi, esp
  000de	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e3	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN3@DAdvise:

; 3598 : 
; 3599 : 		return hr;

  000e6	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]

; 3600 : 	}

  000e9	5e		 pop	 esi
  000ea	83 c4 18	 add	 esp, 24			; 00000018H
  000ed	3b ec		 cmp	 ebp, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c2 14 00	 ret	 20			; 00000014H
?DAdvise@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@KPAUIAdviseSink@@PAK@Z ENDP ; ATL::IDataObjectImpl<COPOSGestureControl>::DAdvise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?EnumFormatEtc@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPAUIEnumFORMATETC@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?EnumFormatEtc@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPAUIEnumFORMATETC@@@Z PROC ; ATL::IDataObjectImpl<COPOSGestureControl>::EnumFormatEtc, COMDAT

; 3581 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@EnumFormat:

; 3582 : 		ATLTRACENOTIMPL(_T("IDataObjectImpl::EnumFormatEtc"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1DO@IJEOKODF@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 fe 0d 00 00	 push	 3582			; 00000dfeH
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@EnumFormat
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@EnumFormat
$LN1@EnumFormat:

; 3583 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 0c 00	 ret	 12			; 0000000cH
?EnumFormatEtc@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPAUIEnumFORMATETC@@@Z ENDP ; ATL::IDataObjectImpl<COPOSGestureControl>::EnumFormatEtc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?SetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@H@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?SetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@H@Z PROC ; ATL::IDataObjectImpl<COPOSGestureControl>::SetData, COMDAT

; 3575 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@SetData:

; 3576 : 		ATLTRACENOTIMPL(_T("IDataObjectImpl::SetData"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1DC@EJMOFAGB@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 f8 0d 00 00	 push	 3576			; 00000df8H
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@SetData
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@SetData
$LN1@SetData:

; 3577 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 10 00	 ret	 16			; 00000010H
?SetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@H@Z ENDP ; ATL::IDataObjectImpl<COPOSGestureControl>::SetData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetCanonicalFormatEtc@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@0@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?GetCanonicalFormatEtc@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@0@Z PROC ; ATL::IDataObjectImpl<COPOSGestureControl>::GetCanonicalFormatEtc, COMDAT

; 3568 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@GetCanonic:

; 3569 : 		ATLTRACENOTIMPL(_T("IDataObjectImpl::GetCanonicalFormatEtc"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@CPLAMLOM@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 f1 0d 00 00	 push	 3569			; 00000df1H
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@GetCanonic
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@GetCanonic
$LN1@GetCanonic:

; 3570 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 0c 00	 ret	 12			; 0000000cH
?GetCanonicalFormatEtc@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@0@Z ENDP ; ATL::IDataObjectImpl<COPOSGestureControl>::GetCanonicalFormatEtc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?QueryGetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?QueryGetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@@Z PROC ; ATL::IDataObjectImpl<COPOSGestureControl>::QueryGetData, COMDAT

; 3562 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@QueryGetDa:

; 3563 : 		ATLTRACENOTIMPL(_T("IDataObjectImpl::QueryGetData"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@BPNENJGE@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 eb 0d 00 00	 push	 3563			; 00000debH
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@QueryGetDa
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@QueryGetDa
$LN1@QueryGetDa:

; 3564 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
?QueryGetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@@Z ENDP ; ATL::IDataObjectImpl<COPOSGestureControl>::QueryGetData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetDataHere@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?GetDataHere@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z PROC ; ATL::IDataObjectImpl<COPOSGestureControl>::GetDataHere, COMDAT

; 3558 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@GetDataHer:

; 3559 : 		ATLTRACENOTIMPL(_T("IDataObjectImpl::GetDataHere"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1DK@IIMKPHM@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 e7 0d 00 00	 push	 3559			; 00000de7H
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@GetDataHer
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@GetDataHer
$LN1@GetDataHer:

; 3560 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 0c 00	 ret	 12			; 0000000cH
?GetDataHere@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z ENDP ; ATL::IDataObjectImpl<COPOSGestureControl>::GetDataHere
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
_TEXT	SEGMENT
tv78 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_pformatetcIn$ = 12					; size = 4
_pmedium$ = 16						; size = 4
?GetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z PROC ; ATL::IDataObjectImpl<COPOSGestureControl>::GetData, COMDAT

; 3550 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3551 : 		ATLTRACE(atlTraceControls,2,_T("IDataObjectImpl::GetData\n"));

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_1DE@FNDLCJKG@?$AAI?$AAD?$AAa?$AAt?$AAa?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl@
  0001c	6a 02		 push	 2
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00023	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00028	50		 push	 eax
  00029	68 df 0d 00 00	 push	 3551			; 00000ddfH
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00033	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00036	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00041	83 c4 10	 add	 esp, 16			; 00000010H

; 3552 : 		T* pT = (T*) this;

  00044	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00048	74 0d		 je	 SHORT $LN3@GetData
  0004a	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	2d 98 00 00 00	 sub	 eax, 152		; 00000098H
  00052	89 45 f0	 mov	 DWORD PTR tv78[ebp], eax
  00055	eb 07		 jmp	 SHORT $LN4@GetData
$LN3@GetData:
  00057	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@GetData:
  0005e	8b 4d f0	 mov	 ecx, DWORD PTR tv78[ebp]
  00061	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 3553 : 		return pT->IDataObject_GetData(pformatetcIn, pmedium);

  00064	8b 55 10	 mov	 edx, DWORD PTR _pmedium$[ebp]
  00067	52		 push	 edx
  00068	8b 45 0c	 mov	 eax, DWORD PTR _pformatetcIn$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  0006f	83 c1 04	 add	 ecx, 4
  00072	e8 00 00 00 00	 call	 ?IDataObject_GetData@CComControlBase@ATL@@QAEJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z ; ATL::CComControlBase::IDataObject_GetData

; 3554 : 	}

  00077	83 c4 10	 add	 esp, 16			; 00000010H
  0007a	3b ec		 cmp	 ebp, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 0c 00	 ret	 12			; 0000000cH
?GetData@?$IDataObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z ENDP ; ATL::IDataObjectImpl<COPOSGestureControl>::GetData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetContentExtent@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagSIZE@@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_pSize$ = 12						; size = 4
?GetContentExtent@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagSIZE@@@Z PROC ; ATL::IQuickActivateImpl<COPOSGestureControl>::GetContentExtent, COMDAT

; 2184 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2185 : 		T* pT = static_cast<T*>(this);

  00017	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001b	74 0d		 je	 SHORT $LN3@GetContent
  0001d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00020	2d 94 00 00 00	 sub	 eax, 148		; 00000094H
  00025	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00028	eb 07		 jmp	 SHORT $LN4@GetContent
$LN3@GetContent:
  0002a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@GetContent:
  00031	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00034	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 2186 : 		ATLTRACE(atlTraceControls,2,_T("IQuickActivateImpl::GetContentExtent\n"));

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_1EM@OECHILCB@?$AAI?$AAQ?$AAu?$AAi?$AAc?$AAk?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAI@
  0003c	6a 02		 push	 2
  0003e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00043	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00048	50		 push	 eax
  00049	68 8a 08 00 00	 push	 2186			; 0000088aH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00053	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00056	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00061	83 c4 10	 add	 esp, 16			; 00000010H

; 2187 : 		return pT->IOleObjectImpl<T>::GetExtent(DVASPECT_CONTENT, pSize);

  00064	8b 55 0c	 mov	 edx, DWORD PTR _pSize$[ebp]
  00067	52		 push	 edx
  00068	6a 01		 push	 1
  0006a	8b 45 fc	 mov	 eax, DWORD PTR _pT$[ebp]
  0006d	83 c0 78	 add	 eax, 120		; 00000078H
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 ?GetExtent@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUtagSIZE@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::GetExtent

; 2188 : 	}

  00076	83 c4 10	 add	 esp, 16			; 00000010H
  00079	3b ec		 cmp	 ebp, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 08 00	 ret	 8
?GetContentExtent@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagSIZE@@@Z ENDP ; ATL::IQuickActivateImpl<COPOSGestureControl>::GetContentExtent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?SetContentExtent@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagSIZE@@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_pSize$ = 12						; size = 4
?SetContentExtent@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagSIZE@@@Z PROC ; ATL::IQuickActivateImpl<COPOSGestureControl>::SetContentExtent, COMDAT

; 2178 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2179 : 		T* pT = static_cast<T*>(this);

  00017	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001b	74 0d		 je	 SHORT $LN3@SetContent
  0001d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00020	2d 94 00 00 00	 sub	 eax, 148		; 00000094H
  00025	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00028	eb 07		 jmp	 SHORT $LN4@SetContent
$LN3@SetContent:
  0002a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@SetContent:
  00031	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00034	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 2180 : 		ATLTRACE(atlTraceControls,2,_T("IQuickActivateImpl::SetContentExtent\n"));

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_1EM@DNDGLBOK@?$AAI?$AAQ?$AAu?$AAi?$AAc?$AAk?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAI@
  0003c	6a 02		 push	 2
  0003e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00043	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00048	50		 push	 eax
  00049	68 84 08 00 00	 push	 2180			; 00000884H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00053	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00056	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00061	83 c4 10	 add	 esp, 16			; 00000010H

; 2181 : 		return pT->IOleObjectImpl<T>::SetExtent(DVASPECT_CONTENT, pSize);

  00064	8b 55 0c	 mov	 edx, DWORD PTR _pSize$[ebp]
  00067	52		 push	 edx
  00068	6a 01		 push	 1
  0006a	8b 45 fc	 mov	 eax, DWORD PTR _pT$[ebp]
  0006d	83 c0 78	 add	 eax, 120		; 00000078H
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 ?SetExtent@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUtagSIZE@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::SetExtent

; 2182 : 	}

  00076	83 c4 10	 add	 esp, 16			; 00000010H
  00079	3b ec		 cmp	 ebp, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 08 00	 ret	 8
?SetContentExtent@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagSIZE@@@Z ENDP ; ATL::IQuickActivateImpl<COPOSGestureControl>::SetContentExtent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?QuickActivate@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagQACONTAINER@@PAUtagQACONTROL@@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_pQACont$ = 12						; size = 4
_pQACtrl$ = 16						; size = 4
?QuickActivate@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagQACONTAINER@@PAUtagQACONTROL@@@Z PROC ; ATL::IQuickActivateImpl<COPOSGestureControl>::QuickActivate, COMDAT

; 2157 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2158 : 		T* pT = static_cast<T*>(this);

  00017	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001b	74 0d		 je	 SHORT $LN3@QuickActiv
  0001d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00020	2d 94 00 00 00	 sub	 eax, 148		; 00000094H
  00025	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00028	eb 07		 jmp	 SHORT $LN4@QuickActiv
$LN3@QuickActiv:
  0002a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@QuickActiv:
  00031	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00034	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 2159 : 		ATLTRACE(atlTraceControls,2,_T("IQuickActivateImpl::QuickActivate\n"));

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@OOLJNHOI@?$AAI?$AAQ?$AAu?$AAi?$AAc?$AAk?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAI@
  0003c	6a 02		 push	 2
  0003e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00043	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00048	50		 push	 eax
  00049	68 6f 08 00 00	 push	 2159			; 0000086fH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00053	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00056	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00061	83 c4 10	 add	 esp, 16			; 00000010H

; 2160 : 		__if_exists(T::m_clrForeColor)
; 2161 : 		{
; 2162 : 			pT->m_clrForeColor = pQACont->colorFore;
; 2163 : 		}
; 2164 : 		__if_exists(T::m_clrBackColor)
; 2165 : 		{
; 2166 : 			pT->m_clrBackColor = pQACont->colorBack;
; 2167 : 		}
; 2168 : 		__if_exists(T::m_nAppearance)
; 2169 : 		{
; 2170 : 			// If you've declared m_nAppearance as something other than
; 2171 : 			// 'short', you'll need to typedef AppearanceType to that type
; 2172 : 			// in your derived class T.
; 2173 : 			pT->m_nAppearance = static_cast<typename T::AppearanceType>(pQACont->dwAppearance);
; 2174 : 		}
; 2175 : 		return pT->IQuickActivate_QuickActivate(pQACont, pQACtrl);

  00064	8b 55 10	 mov	 edx, DWORD PTR _pQACtrl$[ebp]
  00067	52		 push	 edx
  00068	8b 45 0c	 mov	 eax, DWORD PTR _pQACont$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  0006f	83 c1 04	 add	 ecx, 4
  00072	e8 00 00 00 00	 call	 ?IQuickActivate_QuickActivate@CComControlBase@ATL@@QAEJPAUtagQACONTAINER@@PAUtagQACONTROL@@@Z ; ATL::CComControlBase::IQuickActivate_QuickActivate

; 2176 : 	}

  00077	83 c4 10	 add	 esp, 16			; 00000010H
  0007a	3b ec		 cmp	 ebp, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 0c 00	 ret	 12			; 0000000cH
?QuickActivate@?$IQuickActivateImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagQACONTAINER@@PAUtagQACONTROL@@@Z ENDP ; ATL::IQuickActivateImpl<COPOSGestureControl>::QuickActivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetPagesHelper@?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@ATL@@IAEJPAUtagCAUUID@@PBUATL_PROPMAP_ENTRY@2@@Z
_TEXT	SEGMENT
_j$1 = -20						; size = 4
_bFound$2 = -16						; size = 4
_i$ = -12						; size = 4
_nCnt$ = -8						; size = 4
_this$ = -4						; size = 4
_pPages$ = 8						; size = 4
_pMap$ = 12						; size = 4
?GetPagesHelper@?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@ATL@@IAEJPAUtagCAUUID@@PBUATL_PROPMAP_ENTRY@2@@Z PROC ; ATL::ISpecifyPropertyPagesImpl<COPOSGestureControl>::GetPagesHelper, COMDAT
; _this$ = ecx

; 5884 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5885 : 		if (pPages == NULL)

  0001e	83 7d 08 00	 cmp	 DWORD PTR _pPages$[ebp], 0
  00022	75 0a		 jne	 SHORT $LN11@GetPagesHe

; 5886 : 			return E_POINTER;

  00024	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00029	e9 c0 01 00 00	 jmp	 $LN1@GetPagesHe
$LN11@GetPagesHe:

; 5887 : 		ATLASSERT(pMap != NULL);

  0002e	83 7d 0c 00	 cmp	 DWORD PTR _pMap$[ebp], 0
  00032	75 26		 jne	 SHORT $LN21@GetPagesHe
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@FKGJCHLP@?$AAp?$AAM?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0003e	6a 00		 push	 0
  00040	68 ff 16 00 00	 push	 5887			; 000016ffH
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0004a	6a 02		 push	 2
  0004c	e8 00 00 00 00	 call	 __CrtDbgReportW
  00051	83 c4 18	 add	 esp, 24			; 00000018H
  00054	83 f8 01	 cmp	 eax, 1
  00057	75 01		 jne	 SHORT $LN21@GetPagesHe
  00059	cc		 int	 3
$LN21@GetPagesHe:

; 5888 : 		if (pMap == NULL)

  0005a	83 7d 0c 00	 cmp	 DWORD PTR _pMap$[ebp], 0
  0005e	75 0a		 jne	 SHORT $LN12@GetPagesHe

; 5889 : 			return E_POINTER;

  00060	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00065	e9 84 01 00 00	 jmp	 $LN1@GetPagesHe
$LN12@GetPagesHe:

; 5890 : 
; 5891 : 		int nCnt = 0;

  0006a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nCnt$[ebp], 0

; 5892 : 		int i;
; 5893 : 		// Get count of unique pages to alloc the array
; 5894 : ATLPREFAST_SUPPRESS(6385) // Invalid data accessing
; 5895 : 		for (i = 0; pMap[i].pclsidPropPage != NULL; i++)

  00071	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00078	eb 09		 jmp	 SHORT $LN4@GetPagesHe
$LN2@GetPagesHe:
  0007a	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  0007d	83 c1 01	 add	 ecx, 1
  00080	89 4d f4	 mov	 DWORD PTR _i$[ebp], ecx
$LN4@GetPagesHe:
  00083	6b 55 f4 24	 imul	 edx, DWORD PTR _i$[ebp], 36
  00087	8b 45 0c	 mov	 eax, DWORD PTR _pMap$[ebp]
  0008a	83 7c 10 04 00	 cmp	 DWORD PTR [eax+edx+4], 0
  0008f	74 38		 je	 SHORT $LN3@GetPagesHe

; 5896 : ATLPREFAST_UNSUPPRESS()
; 5897 : 		{
; 5898 : 			// only allow non data entry types
; 5899 : 			if (pMap[i].vt == 0)

  00091	6b 4d f4 24	 imul	 ecx, DWORD PTR _i$[ebp], 36
  00095	8b 55 0c	 mov	 edx, DWORD PTR _pMap$[ebp]
  00098	0f b7 44 0a 20	 movzx	 eax, WORD PTR [edx+ecx+32]
  0009d	85 c0		 test	 eax, eax
  0009f	75 26		 jne	 SHORT $LN13@GetPagesHe

; 5900 : 			{
; 5901 : 				// Does this property have a page?  CLSID_NULL means it does not
; 5902 : 				if (!InlineIsEqualGUID(*pMap[i].pclsidPropPage, CLSID_NULL))

  000a1	68 00 00 00 00	 push	 OFFSET _GUID_NULL
  000a6	6b 4d f4 24	 imul	 ecx, DWORD PTR _i$[ebp], 36
  000aa	8b 55 0c	 mov	 edx, DWORD PTR _pMap$[ebp]
  000ad	8b 44 0a 04	 mov	 eax, DWORD PTR [edx+ecx+4]
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 _InlineIsEqualGUID
  000b7	83 c4 08	 add	 esp, 8
  000ba	85 c0		 test	 eax, eax
  000bc	75 09		 jne	 SHORT $LN13@GetPagesHe

; 5903 : 					nCnt++;

  000be	8b 4d f8	 mov	 ecx, DWORD PTR _nCnt$[ebp]
  000c1	83 c1 01	 add	 ecx, 1
  000c4	89 4d f8	 mov	 DWORD PTR _nCnt$[ebp], ecx
$LN13@GetPagesHe:

; 5904 : 			}
; 5905 : 		}

  000c7	eb b1		 jmp	 SHORT $LN2@GetPagesHe
$LN3@GetPagesHe:

; 5906 : 		pPages->pElems = (GUID*) ::ATL::AtlCoTaskMemCAlloc(nCnt, static_cast<ULONG>(sizeof(CLSID)));

  000c9	6a 10		 push	 16			; 00000010H
  000cb	8b 55 f8	 mov	 edx, DWORD PTR _nCnt$[ebp]
  000ce	52		 push	 edx
  000cf	e8 00 00 00 00	 call	 ?AtlCoTaskMemCAlloc@ATL@@YAPAXKK@Z ; ATL::AtlCoTaskMemCAlloc
  000d4	83 c4 08	 add	 esp, 8
  000d7	8b 4d 08	 mov	 ecx, DWORD PTR _pPages$[ebp]
  000da	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 5907 : 		if (pPages->pElems == NULL)

  000dd	8b 55 08	 mov	 edx, DWORD PTR _pPages$[ebp]
  000e0	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  000e4	75 0a		 jne	 SHORT $LN15@GetPagesHe

; 5908 : 			return E_OUTOFMEMORY;

  000e6	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  000eb	e9 fe 00 00 00	 jmp	 $LN1@GetPagesHe
$LN15@GetPagesHe:

; 5909 : 		// reset count of items we have added to the array
; 5910 : 		nCnt = 0;

  000f0	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nCnt$[ebp], 0

; 5911 : 		for (i = 0; pMap[i].pclsidPropPage != NULL; i++)

  000f7	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  000fe	eb 09		 jmp	 SHORT $LN7@GetPagesHe
$LN5@GetPagesHe:
  00100	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  00103	83 c0 01	 add	 eax, 1
  00106	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax
$LN7@GetPagesHe:
  00109	6b 4d f4 24	 imul	 ecx, DWORD PTR _i$[ebp], 36
  0010d	8b 55 0c	 mov	 edx, DWORD PTR _pMap$[ebp]
  00110	83 7c 0a 04 00	 cmp	 DWORD PTR [edx+ecx+4], 0
  00115	0f 84 c9 00 00
	00		 je	 $LN6@GetPagesHe

; 5912 : 		{
; 5913 : 			// only allow non data entry types
; 5914 : 			if (pMap[i].vt == 0)

  0011b	6b 45 f4 24	 imul	 eax, DWORD PTR _i$[ebp], 36
  0011f	8b 4d 0c	 mov	 ecx, DWORD PTR _pMap$[ebp]
  00122	0f b7 54 01 20	 movzx	 edx, WORD PTR [ecx+eax+32]
  00127	85 d2		 test	 edx, edx
  00129	0f 85 b0 00 00
	00		 jne	 $LN16@GetPagesHe

; 5915 : 			{
; 5916 : 				// Does this property have a page?  CLSID_NULL means it does not
; 5917 : 				if (!InlineIsEqualGUID(*pMap[i].pclsidPropPage, CLSID_NULL))

  0012f	68 00 00 00 00	 push	 OFFSET _GUID_NULL
  00134	6b 45 f4 24	 imul	 eax, DWORD PTR _i$[ebp], 36
  00138	8b 4d 0c	 mov	 ecx, DWORD PTR _pMap$[ebp]
  0013b	8b 54 01 04	 mov	 edx, DWORD PTR [ecx+eax+4]
  0013f	52		 push	 edx
  00140	e8 00 00 00 00	 call	 _InlineIsEqualGUID
  00145	83 c4 08	 add	 esp, 8
  00148	85 c0		 test	 eax, eax
  0014a	0f 85 8f 00 00
	00		 jne	 $LN16@GetPagesHe

; 5918 : 				{
; 5919 : 					BOOL bFound = FALSE;

  00150	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _bFound$2[ebp], 0

; 5920 : 					// Search through array we are building up to see
; 5921 : 					// if it is already in there
; 5922 : 					for (int j=0; j<nCnt; j++)

  00157	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _j$1[ebp], 0
  0015e	eb 09		 jmp	 SHORT $LN10@GetPagesHe
$LN8@GetPagesHe:
  00160	8b 45 ec	 mov	 eax, DWORD PTR _j$1[ebp]
  00163	83 c0 01	 add	 eax, 1
  00166	89 45 ec	 mov	 DWORD PTR _j$1[ebp], eax
$LN10@GetPagesHe:
  00169	8b 4d ec	 mov	 ecx, DWORD PTR _j$1[ebp]
  0016c	3b 4d f8	 cmp	 ecx, DWORD PTR _nCnt$[ebp]
  0016f	7d 30		 jge	 SHORT $LN9@GetPagesHe

; 5923 : 					{
; 5924 : 						if (InlineIsEqualGUID(*(pMap[i].pclsidPropPage), pPages->pElems[j]))

  00171	8b 55 ec	 mov	 edx, DWORD PTR _j$1[ebp]
  00174	c1 e2 04	 shl	 edx, 4
  00177	8b 45 08	 mov	 eax, DWORD PTR _pPages$[ebp]
  0017a	03 50 04	 add	 edx, DWORD PTR [eax+4]
  0017d	52		 push	 edx
  0017e	6b 4d f4 24	 imul	 ecx, DWORD PTR _i$[ebp], 36
  00182	8b 55 0c	 mov	 edx, DWORD PTR _pMap$[ebp]
  00185	8b 44 0a 04	 mov	 eax, DWORD PTR [edx+ecx+4]
  00189	50		 push	 eax
  0018a	e8 00 00 00 00	 call	 _InlineIsEqualGUID
  0018f	83 c4 08	 add	 esp, 8
  00192	85 c0		 test	 eax, eax
  00194	74 09		 je	 SHORT $LN18@GetPagesHe

; 5925 : 						{
; 5926 : 							// It's already there, so no need to add it again
; 5927 : 							bFound = TRUE;

  00196	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _bFound$2[ebp], 1

; 5928 : 							break;

  0019d	eb 02		 jmp	 SHORT $LN9@GetPagesHe
$LN18@GetPagesHe:

; 5929 : 						}
; 5930 : 					}

  0019f	eb bf		 jmp	 SHORT $LN8@GetPagesHe
$LN9@GetPagesHe:

; 5931 : 					// If we didn't find it in there then add it
; 5932 : 					if (!bFound)

  001a1	83 7d f0 00	 cmp	 DWORD PTR _bFound$2[ebp], 0
  001a5	75 38		 jne	 SHORT $LN16@GetPagesHe

; 5933 : 						pPages->pElems[nCnt++] = *pMap[i].pclsidPropPage;

  001a7	6b 4d f4 24	 imul	 ecx, DWORD PTR _i$[ebp], 36
  001ab	8b 55 0c	 mov	 edx, DWORD PTR _pMap$[ebp]
  001ae	8b 45 f8	 mov	 eax, DWORD PTR _nCnt$[ebp]
  001b1	c1 e0 04	 shl	 eax, 4
  001b4	8b 75 08	 mov	 esi, DWORD PTR _pPages$[ebp]
  001b7	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  001ba	03 f0		 add	 esi, eax
  001bc	8b 4c 0a 04	 mov	 ecx, DWORD PTR [edx+ecx+4]
  001c0	8b 11		 mov	 edx, DWORD PTR [ecx]
  001c2	89 16		 mov	 DWORD PTR [esi], edx
  001c4	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001c7	89 46 04	 mov	 DWORD PTR [esi+4], eax
  001ca	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  001cd	89 56 08	 mov	 DWORD PTR [esi+8], edx
  001d0	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  001d3	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  001d6	8b 4d f8	 mov	 ecx, DWORD PTR _nCnt$[ebp]
  001d9	83 c1 01	 add	 ecx, 1
  001dc	89 4d f8	 mov	 DWORD PTR _nCnt$[ebp], ecx
$LN16@GetPagesHe:

; 5934 : 				}
; 5935 : 			}
; 5936 : 		}

  001df	e9 1c ff ff ff	 jmp	 $LN5@GetPagesHe
$LN6@GetPagesHe:

; 5937 : 		pPages->cElems = nCnt;

  001e4	8b 55 08	 mov	 edx, DWORD PTR _pPages$[ebp]
  001e7	8b 45 f8	 mov	 eax, DWORD PTR _nCnt$[ebp]
  001ea	89 02		 mov	 DWORD PTR [edx], eax

; 5938 : 		return S_OK;

  001ec	33 c0		 xor	 eax, eax
$LN1@GetPagesHe:

; 5939 : 	}

  001ee	5e		 pop	 esi
  001ef	83 c4 14	 add	 esp, 20			; 00000014H
  001f2	3b ec		 cmp	 ebp, esp
  001f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f9	8b e5		 mov	 esp, ebp
  001fb	5d		 pop	 ebp
  001fc	c2 08 00	 ret	 8
?GetPagesHelper@?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@ATL@@IAEJPAUtagCAUUID@@PBUATL_PROPMAP_ENTRY@2@@Z ENDP ; ATL::ISpecifyPropertyPagesImpl<COPOSGestureControl>::GetPagesHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetPages@?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagCAUUID@@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_pMap$ = -4						; size = 4
_this$ = 8						; size = 4
_pPages$ = 12						; size = 4
?GetPages@?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagCAUUID@@@Z PROC ; ATL::ISpecifyPropertyPagesImpl<COPOSGestureControl>::GetPages, COMDAT

; 5875 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 5876 : 		ATLTRACE(atlTraceCOM, 2, _T("ISpecifyPropertyPagesImpl::GetPages\n"));

  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_1EK@IMECMPEJ@?$AAI?$AAS?$AAp?$AAe?$AAc?$AAi?$AAf?$AAy?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt@
  00020	6a 02		 push	 2
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00027	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  0002c	50		 push	 eax
  0002d	68 f4 16 00 00	 push	 5876			; 000016f4H
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00037	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00045	83 c4 10	 add	 esp, 16			; 00000010H

; 5877 : 		const ATL_PROPMAP_ENTRY* pMap = T::GetPropertyMap();

  00048	e8 00 00 00 00	 call	 ?GetPropertyMap@COPOSGestureControl@@SAPBUATL_PROPMAP_ENTRY@ATL@@XZ ; COPOSGestureControl::GetPropertyMap
  0004d	89 45 fc	 mov	 DWORD PTR _pMap$[ebp], eax

; 5878 : 		return GetPagesHelper(pPages, pMap);

  00050	8b 45 fc	 mov	 eax, DWORD PTR _pMap$[ebp]
  00053	50		 push	 eax
  00054	8b 4d 0c	 mov	 ecx, DWORD PTR _pPages$[ebp]
  00057	51		 push	 ecx
  00058	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?GetPagesHelper@?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@ATL@@IAEJPAUtagCAUUID@@PBUATL_PROPMAP_ENTRY@2@@Z ; ATL::ISpecifyPropertyPagesImpl<COPOSGestureControl>::GetPagesHelper

; 5879 : 	}

  00060	83 c4 0c	 add	 esp, 12			; 0000000cH
  00063	3b ec		 cmp	 ebp, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 08 00	 ret	 8
?GetPages@?$ISpecifyPropertyPagesImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagCAUUID@@@Z ENDP ; ATL::ISpecifyPropertyPagesImpl<COPOSGestureControl>::GetPages
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?IPSI_GetIPersistStreamInit@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@AAEPAUIPersistStreamInit@@XZ
_TEXT	SEGMENT
tv73 = -28						; size = 4
tv68 = -24						; size = 4
_p$ = -16						; size = 4
_pT$ = -8						; size = 4
_this$ = -4						; size = 4
?IPSI_GetIPersistStreamInit@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@AAEPAUIPersistStreamInit@@XZ PROC ; ATL::IPersistStorageImpl<COPOSGestureControl>::IPSI_GetIPersistStreamInit, COMDAT
; _this$ = ecx

; 835  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000f	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00012	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00015	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00018	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001b	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001e	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00021	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 836  : 	T* pT = static_cast<T*>(this);

  00024	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  00028	74 0d		 je	 SHORT $LN4@IPSI_GetIP
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	2d 8c 00 00 00	 sub	 eax, 140		; 0000008cH
  00032	89 45 e8	 mov	 DWORD PTR tv68[ebp], eax
  00035	eb 07		 jmp	 SHORT $LN5@IPSI_GetIP
$LN4@IPSI_GetIP:
  00037	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN5@IPSI_GetIP:
  0003e	8b 4d e8	 mov	 ecx, DWORD PTR tv68[ebp]
  00041	89 4d f8	 mov	 DWORD PTR _pT$[ebp], ecx

; 837  : 	IPersistStreamInit* p = NULL;

  00044	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], 0

; 838  : 	if (FAILED(pT->GetUnknown()->QueryInterface(__uuidof(IPersistStreamInit), (void**)&p)))

  0004b	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetUnknown@COPOSGestureControl@@QAEPAUIUnknown@@XZ ; COPOSGestureControl::GetUnknown
  00053	89 45 e4	 mov	 DWORD PTR tv73[ebp], eax
  00056	8b f4		 mov	 esi, esp
  00058	8d 55 f0	 lea	 edx, DWORD PTR _p$[ebp]
  0005b	52		 push	 edx
  0005c	68 00 00 00 00	 push	 OFFSET __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
  00061	8b 45 e4	 mov	 eax, DWORD PTR tv73[ebp]
  00064	50		 push	 eax
  00065	8b 4d e4	 mov	 ecx, DWORD PTR tv73[ebp]
  00068	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006a	8b 02		 mov	 eax, DWORD PTR [edx]
  0006c	ff d0		 call	 eax
  0006e	3b f4		 cmp	 esi, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	85 c0		 test	 eax, eax
  00077	7d 11		 jge	 SHORT $LN2@IPSI_GetIP

; 839  : 		pT->_InternalQueryInterface(__uuidof(IPersistStreamInit), (void**)&p);

  00079	8d 4d f0	 lea	 ecx, DWORD PTR _p$[ebp]
  0007c	51		 push	 ecx
  0007d	68 00 00 00 00	 push	 OFFSET __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
  00082	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  00085	e8 00 00 00 00	 call	 ?_InternalQueryInterface@COPOSGestureControl@@QAEJABU_GUID@@PAPAX@Z ; COPOSGestureControl::_InternalQueryInterface
$LN2@IPSI_GetIP:

; 840  : 	return p;

  0008a	8b 45 f0	 mov	 eax, DWORD PTR _p$[ebp]

; 841  : }

  0008d	52		 push	 edx
  0008e	8b cd		 mov	 ecx, ebp
  00090	50		 push	 eax
  00091	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@IPSI_GetIP
  00097	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0009c	58		 pop	 eax
  0009d	5a		 pop	 edx
  0009e	5e		 pop	 esi
  0009f	83 c4 1c	 add	 esp, 28			; 0000001cH
  000a2	3b ec		 cmp	 ebp, esp
  000a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c3		 ret	 0
  000ad	0f 1f 00	 npad	 3
$LN8@IPSI_GetIP:
  000b0	01 00 00 00	 DD	 1
  000b4	00 00 00 00	 DD	 $LN7@IPSI_GetIP
$LN7@IPSI_GetIP:
  000b8	f0 ff ff ff	 DD	 -16			; fffffff0H
  000bc	04 00 00 00	 DD	 4
  000c0	00 00 00 00	 DD	 $LN6@IPSI_GetIP
$LN6@IPSI_GetIP:
  000c4	70		 DB	 112			; 00000070H
  000c5	00		 DB	 0
?IPSI_GetIPersistStreamInit@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@AAEPAUIPersistStreamInit@@XZ ENDP ; ATL::IPersistStorageImpl<COPOSGestureControl>::IPSI_GetIPersistStreamInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?HandsOffStorage@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
?HandsOffStorage@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ PROC ; ATL::IPersistStorageImpl<COPOSGestureControl>::HandsOffStorage, COMDAT

; 825  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 826  : 		ATLTRACE(atlTraceCOM, 2, _T("IPersistStorageImpl::HandsOffStorage\n"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1EM@MKDPAIHC@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@
  00019	6a 02		 push	 2
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00020	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00025	50		 push	 eax
  00026	68 3a 03 00 00	 push	 826			; 0000033aH
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00030	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00033	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003e	83 c4 10	 add	 esp, 16			; 00000010H

; 827  : 		return S_OK;

  00041	33 c0		 xor	 eax, eax

; 828  : 	}

  00043	83 c4 08	 add	 esp, 8
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 04 00	 ret	 4
?HandsOffStorage@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ENDP ; ATL::IPersistStorageImpl<COPOSGestureControl>::HandsOffStorage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?SaveCompleted@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?SaveCompleted@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z PROC ; ATL::IPersistStorageImpl<COPOSGestureControl>::SaveCompleted, COMDAT

; 820  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 821  : 		ATLTRACE(atlTraceCOM, 2, _T("IPersistStorageImpl::SaveCompleted\n"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1EI@KGLFIEKA@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@
  00019	6a 02		 push	 2
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00020	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00025	50		 push	 eax
  00026	68 35 03 00 00	 push	 821			; 00000335H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00030	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00033	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003e	83 c4 10	 add	 esp, 16			; 00000010H

; 822  : 		return S_OK;

  00041	33 c0		 xor	 eax, eax

; 823  : 	}

  00043	83 c4 08	 add	 esp, 8
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 08 00	 ret	 8
?SaveCompleted@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z ENDP ; ATL::IPersistStorageImpl<COPOSGestureControl>::SaveCompleted
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Save@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@H@Z
_TEXT	SEGMENT
tv156 = -44						; size = 4
$T1 = -40						; size = 4
$T2 = -36						; size = 8
_spStream$3 = -24					; size = 4
_hr$ = -16						; size = 4
_p$ = -8						; size = 4
_this$ = 8						; size = 4
_pStorage$ = 12						; size = 4
_fSameAsLoad$ = 16					; size = 4
?Save@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@H@Z PROC ; ATL::IPersistStorageImpl<COPOSGestureControl>::Save, COMDAT

; 800  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0000b	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd

; 801  : 		ATLTRACE(atlTraceCOM, 2, _T("IPersistStorageImpl::Save\n"));

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@LDJFMFDF@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@
  0001c	6a 02		 push	 2
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00023	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00028	50		 push	 eax
  00029	68 21 03 00 00	 push	 801			; 00000321H
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00033	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00036	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00041	83 c4 10	 add	 esp, 16			; 00000010H

; 802  : 		if (pStorage == NULL)

  00044	83 7d 0c 00	 cmp	 DWORD PTR _pStorage$[ebp], 0
  00048	75 0a		 jne	 SHORT $LN2@Save

; 803  : 			return E_INVALIDARG;

  0004a	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  0004f	e9 b7 00 00 00	 jmp	 $LN1@Save
$LN2@Save:

; 804  : 		CComPtr<IPersistStreamInit> p;

  00054	8d 4d f8	 lea	 ecx, DWORD PTR _p$[ebp]
  00057	e8 00 00 00 00	 call	 ??0?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ ; ATL::CComPtr<IPersistStreamInit>::CComPtr<IPersistStreamInit>

; 805  : 		p.p = IPSI_GetIPersistStreamInit();

  0005c	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	e8 00 00 00 00	 call	 ?IPSI_GetIPersistStreamInit@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@AAEPAUIPersistStreamInit@@XZ ; ATL::IPersistStorageImpl<COPOSGestureControl>::IPSI_GetIPersistStreamInit
  00064	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax

; 806  : 		HRESULT hr = E_FAIL;

  00067	c7 45 f0 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H

; 807  : 		if (p != NULL)

  0006e	6a 00		 push	 0
  00070	8d 4d f8	 lea	 ecx, DWORD PTR _p$[ebp]
  00073	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBE_NPAUIPersistStreamInit@@@Z ; ATL::CComPtrBase<IPersistStreamInit>::operator!=
  00078	0f b6 c0	 movzx	 eax, al
  0007b	85 c0		 test	 eax, eax
  0007d	74 7b		 je	 SHORT $LN3@Save

; 808  : 		{
; 809  : 			CComPtr<IStream> spStream;

  0007f	8d 4d e8	 lea	 ecx, DWORD PTR _spStream$3[ebp]
  00082	e8 00 00 00 00	 call	 ??0?$CComPtr@UIStream@@@ATL@@QAE@XZ ; ATL::CComPtr<IStream>::CComPtr<IStream>

; 810  : 			static LPCOLESTR vszContents = OLESTR("Contents");
; 811  : 			hr = pStorage->CreateStream(vszContents,

  00087	8d 4d e8	 lea	 ecx, DWORD PTR _spStream$3[ebp]
  0008a	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator&
  0008f	8b f4		 mov	 esi, esp
  00091	50		 push	 eax
  00092	6a 00		 push	 0
  00094	6a 00		 push	 0
  00096	68 12 10 00 00	 push	 4114			; 00001012H
  0009b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?vszContents@?6??Save@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@H@Z@4PB_WB ; `ATL::IPersistStorageImpl<COPOSGestureControl>::Save'::`7'::vszContents
  000a1	51		 push	 ecx
  000a2	8b 55 0c	 mov	 edx, DWORD PTR _pStorage$[ebp]
  000a5	8b 02		 mov	 eax, DWORD PTR [edx]
  000a7	8b 4d 0c	 mov	 ecx, DWORD PTR _pStorage$[ebp]
  000aa	51		 push	 ecx
  000ab	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000ae	ff d2		 call	 edx
  000b0	3b f4		 cmp	 esi, esp
  000b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b7	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax

; 812  : 				STGM_READWRITE | STGM_SHARE_EXCLUSIVE | STGM_CREATE,
; 813  : 				0, 0, &spStream);
; 814  : 			if (SUCCEEDED(hr))

  000ba	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000be	7c 32		 jl	 SHORT $LN4@Save

; 815  : 				hr = p->Save(spStream, fSameAsLoad);

  000c0	8d 4d f8	 lea	 ecx, DWORD PTR _p$[ebp]
  000c3	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStreamInit@@@1@XZ ; ATL::CComPtrBase<IPersistStreamInit>::operator->
  000c8	89 45 d4	 mov	 DWORD PTR tv156[ebp], eax
  000cb	8b f4		 mov	 esi, esp
  000cd	8b 45 10	 mov	 eax, DWORD PTR _fSameAsLoad$[ebp]
  000d0	50		 push	 eax
  000d1	8d 4d e8	 lea	 ecx, DWORD PTR _spStream$3[ebp]
  000d4	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator IStream *
  000d9	50		 push	 eax
  000da	8b 4d d4	 mov	 ecx, DWORD PTR tv156[ebp]
  000dd	51		 push	 ecx
  000de	8b 55 d4	 mov	 edx, DWORD PTR tv156[ebp]
  000e1	8b 02		 mov	 eax, DWORD PTR [edx]
  000e3	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000e6	ff d1		 call	 ecx
  000e8	3b f4		 cmp	 esi, esp
  000ea	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ef	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax
$LN4@Save:

; 816  : 		}

  000f2	8d 4d e8	 lea	 ecx, DWORD PTR _spStream$3[ebp]
  000f5	e8 00 00 00 00	 call	 ??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
$LN3@Save:

; 817  : 		return hr;

  000fa	8b 55 f0	 mov	 edx, DWORD PTR _hr$[ebp]
  000fd	89 55 d8	 mov	 DWORD PTR $T1[ebp], edx
  00100	8d 4d f8	 lea	 ecx, DWORD PTR _p$[ebp]
  00103	e8 00 00 00 00	 call	 ??1?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ
  00108	8b 45 d8	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@Save:

; 818  : 	}

  0010b	52		 push	 edx
  0010c	8b cd		 mov	 ecx, ebp
  0010e	50		 push	 eax
  0010f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@Save
  00115	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0011a	58		 pop	 eax
  0011b	5a		 pop	 edx
  0011c	5f		 pop	 edi
  0011d	5e		 pop	 esi
  0011e	83 c4 2c	 add	 esp, 44			; 0000002cH
  00121	3b ec		 cmp	 ebp, esp
  00123	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00128	8b e5		 mov	 esp, ebp
  0012a	5d		 pop	 ebp
  0012b	c2 0c 00	 ret	 12			; 0000000cH
  0012e	66 90		 npad	 2
$LN9@Save:
  00130	02 00 00 00	 DD	 2
  00134	00 00 00 00	 DD	 $LN8@Save
$LN8@Save:
  00138	f8 ff ff ff	 DD	 -8			; fffffff8H
  0013c	04 00 00 00	 DD	 4
  00140	00 00 00 00	 DD	 $LN6@Save
  00144	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00148	04 00 00 00	 DD	 4
  0014c	00 00 00 00	 DD	 $LN7@Save
$LN7@Save:
  00150	73		 DB	 115			; 00000073H
  00151	70		 DB	 112			; 00000070H
  00152	53		 DB	 83			; 00000053H
  00153	74		 DB	 116			; 00000074H
  00154	72		 DB	 114			; 00000072H
  00155	65		 DB	 101			; 00000065H
  00156	61		 DB	 97			; 00000061H
  00157	6d		 DB	 109			; 0000006dH
  00158	00		 DB	 0
$LN6@Save:
  00159	70		 DB	 112			; 00000070H
  0015a	00		 DB	 0
?Save@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@H@Z ENDP ; ATL::IPersistStorageImpl<COPOSGestureControl>::Save
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Load@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z
_TEXT	SEGMENT
tv156 = -44						; size = 4
$T1 = -40						; size = 4
$T2 = -36						; size = 8
_spStream$3 = -24					; size = 4
_hr$ = -16						; size = 4
_p$ = -8						; size = 4
_this$ = 8						; size = 4
_pStorage$ = 12						; size = 4
?Load@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z PROC ; ATL::IPersistStorageImpl<COPOSGestureControl>::Load, COMDAT

; 782  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0000b	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd

; 783  : 		ATLTRACE(atlTraceCOM, 2, _T("IPersistStorageImpl::Load\n"));

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@GOPCGMJM@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@
  0001c	6a 02		 push	 2
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00023	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00028	50		 push	 eax
  00029	68 0f 03 00 00	 push	 783			; 0000030fH
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00033	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00036	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00041	83 c4 10	 add	 esp, 16			; 00000010H

; 784  : 		if (pStorage == NULL)

  00044	83 7d 0c 00	 cmp	 DWORD PTR _pStorage$[ebp], 0
  00048	75 0a		 jne	 SHORT $LN2@Load

; 785  : 			return E_INVALIDARG;

  0004a	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  0004f	e9 ae 00 00 00	 jmp	 $LN1@Load
$LN2@Load:

; 786  : 		CComPtr<IPersistStreamInit> p;

  00054	8d 4d f8	 lea	 ecx, DWORD PTR _p$[ebp]
  00057	e8 00 00 00 00	 call	 ??0?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ ; ATL::CComPtr<IPersistStreamInit>::CComPtr<IPersistStreamInit>

; 787  : 		p.p = IPSI_GetIPersistStreamInit();

  0005c	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	e8 00 00 00 00	 call	 ?IPSI_GetIPersistStreamInit@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@AAEPAUIPersistStreamInit@@XZ ; ATL::IPersistStorageImpl<COPOSGestureControl>::IPSI_GetIPersistStreamInit
  00064	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax

; 788  : 		HRESULT hr = E_FAIL;

  00067	c7 45 f0 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H

; 789  : 		if (p != NULL)

  0006e	6a 00		 push	 0
  00070	8d 4d f8	 lea	 ecx, DWORD PTR _p$[ebp]
  00073	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBE_NPAUIPersistStreamInit@@@Z ; ATL::CComPtrBase<IPersistStreamInit>::operator!=
  00078	0f b6 c0	 movzx	 eax, al
  0007b	85 c0		 test	 eax, eax
  0007d	74 72		 je	 SHORT $LN3@Load

; 790  : 		{
; 791  : 			CComPtr<IStream> spStream;

  0007f	8d 4d e8	 lea	 ecx, DWORD PTR _spStream$3[ebp]
  00082	e8 00 00 00 00	 call	 ??0?$CComPtr@UIStream@@@ATL@@QAE@XZ ; ATL::CComPtr<IStream>::CComPtr<IStream>

; 792  : 			hr = pStorage->OpenStream(OLESTR("Contents"), NULL,

  00087	8d 4d e8	 lea	 ecx, DWORD PTR _spStream$3[ebp]
  0008a	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator&
  0008f	8b f4		 mov	 esi, esp
  00091	50		 push	 eax
  00092	6a 00		 push	 0
  00094	6a 10		 push	 16			; 00000010H
  00096	6a 00		 push	 0
  00098	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ENICKDH@?$AAC?$AAo?$AAn?$AAt?$AAe?$AAn?$AAt?$AAs@
  0009d	8b 4d 0c	 mov	 ecx, DWORD PTR _pStorage$[ebp]
  000a0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a2	8b 45 0c	 mov	 eax, DWORD PTR _pStorage$[ebp]
  000a5	50		 push	 eax
  000a6	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  000a9	ff d1		 call	 ecx
  000ab	3b f4		 cmp	 esi, esp
  000ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b2	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax

; 793  : 				STGM_DIRECT | STGM_SHARE_EXCLUSIVE, 0, &spStream);
; 794  : 			if (SUCCEEDED(hr))

  000b5	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000b9	7c 2e		 jl	 SHORT $LN4@Load

; 795  : 				hr = p->Load(spStream);

  000bb	8d 4d f8	 lea	 ecx, DWORD PTR _p$[ebp]
  000be	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStreamInit@@@1@XZ ; ATL::CComPtrBase<IPersistStreamInit>::operator->
  000c3	89 45 d4	 mov	 DWORD PTR tv156[ebp], eax
  000c6	8d 4d e8	 lea	 ecx, DWORD PTR _spStream$3[ebp]
  000c9	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator IStream *
  000ce	8b f4		 mov	 esi, esp
  000d0	50		 push	 eax
  000d1	8b 55 d4	 mov	 edx, DWORD PTR tv156[ebp]
  000d4	52		 push	 edx
  000d5	8b 45 d4	 mov	 eax, DWORD PTR tv156[ebp]
  000d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000da	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000dd	ff d2		 call	 edx
  000df	3b f4		 cmp	 esi, esp
  000e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e6	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax
$LN4@Load:

; 796  : 		}

  000e9	8d 4d e8	 lea	 ecx, DWORD PTR _spStream$3[ebp]
  000ec	e8 00 00 00 00	 call	 ??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
$LN3@Load:

; 797  : 		return hr;

  000f1	8b 45 f0	 mov	 eax, DWORD PTR _hr$[ebp]
  000f4	89 45 d8	 mov	 DWORD PTR $T1[ebp], eax
  000f7	8d 4d f8	 lea	 ecx, DWORD PTR _p$[ebp]
  000fa	e8 00 00 00 00	 call	 ??1?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ
  000ff	8b 45 d8	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@Load:

; 798  : 	}

  00102	52		 push	 edx
  00103	8b cd		 mov	 ecx, ebp
  00105	50		 push	 eax
  00106	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@Load
  0010c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00111	58		 pop	 eax
  00112	5a		 pop	 edx
  00113	5f		 pop	 edi
  00114	5e		 pop	 esi
  00115	83 c4 2c	 add	 esp, 44			; 0000002cH
  00118	3b ec		 cmp	 ebp, esp
  0011a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011f	8b e5		 mov	 esp, ebp
  00121	5d		 pop	 ebp
  00122	c2 08 00	 ret	 8
  00125	0f 1f 00	 npad	 3
$LN9@Load:
  00128	02 00 00 00	 DD	 2
  0012c	00 00 00 00	 DD	 $LN8@Load
$LN8@Load:
  00130	f8 ff ff ff	 DD	 -8			; fffffff8H
  00134	04 00 00 00	 DD	 4
  00138	00 00 00 00	 DD	 $LN6@Load
  0013c	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00140	04 00 00 00	 DD	 4
  00144	00 00 00 00	 DD	 $LN7@Load
$LN7@Load:
  00148	73		 DB	 115			; 00000073H
  00149	70		 DB	 112			; 00000070H
  0014a	53		 DB	 83			; 00000053H
  0014b	74		 DB	 116			; 00000074H
  0014c	72		 DB	 114			; 00000072H
  0014d	65		 DB	 101			; 00000065H
  0014e	61		 DB	 97			; 00000061H
  0014f	6d		 DB	 109			; 0000006dH
  00150	00		 DB	 0
$LN6@Load:
  00151	70		 DB	 112			; 00000070H
  00152	00		 DB	 0
?Load@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z ENDP ; ATL::IPersistStorageImpl<COPOSGestureControl>::Load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?InitNew@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z
_TEXT	SEGMENT
tv140 = -32						; size = 4
tv134 = -28						; size = 4
$T1 = -24						; size = 4
$T2 = -20						; size = 8
_p$ = -8						; size = 4
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?InitNew@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z PROC ; ATL::IPersistStorageImpl<COPOSGestureControl>::InitNew, COMDAT

; 775  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00012	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00015	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00018	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001b	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001e	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00021	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 776  : 		ATLTRACE(atlTraceCOM, 2, _T("IPersistStorageImpl::InitNew\n"));

  00024	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@FLFDKDNG@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@
  00029	6a 02		 push	 2
  0002b	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00030	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00035	50		 push	 eax
  00036	68 08 03 00 00	 push	 776			; 00000308H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00040	8d 4d ec	 lea	 ecx, DWORD PTR $T2[ebp]
  00043	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0004e	83 c4 10	 add	 esp, 16			; 00000010H

; 777  : 		CComPtr<IPersistStreamInit> p;

  00051	8d 4d f8	 lea	 ecx, DWORD PTR _p$[ebp]
  00054	e8 00 00 00 00	 call	 ??0?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ ; ATL::CComPtr<IPersistStreamInit>::CComPtr<IPersistStreamInit>

; 778  : 		p.p = IPSI_GetIPersistStreamInit();

  00059	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?IPSI_GetIPersistStreamInit@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@AAEPAUIPersistStreamInit@@XZ ; ATL::IPersistStorageImpl<COPOSGestureControl>::IPSI_GetIPersistStreamInit
  00061	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax

; 779  : 		return (p != NULL) ? p->InitNew() : E_FAIL;

  00064	6a 00		 push	 0
  00066	8d 4d f8	 lea	 ecx, DWORD PTR _p$[ebp]
  00069	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBE_NPAUIPersistStreamInit@@@Z ; ATL::CComPtrBase<IPersistStreamInit>::operator!=
  0006e	0f b6 c0	 movzx	 eax, al
  00071	85 c0		 test	 eax, eax
  00073	74 27		 je	 SHORT $LN3@InitNew
  00075	8d 4d f8	 lea	 ecx, DWORD PTR _p$[ebp]
  00078	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStreamInit@@@1@XZ ; ATL::CComPtrBase<IPersistStreamInit>::operator->
  0007d	89 45 e4	 mov	 DWORD PTR tv134[ebp], eax
  00080	8b 4d e4	 mov	 ecx, DWORD PTR tv134[ebp]
  00083	8b 11		 mov	 edx, DWORD PTR [ecx]
  00085	8b f4		 mov	 esi, esp
  00087	8b 45 e4	 mov	 eax, DWORD PTR tv134[ebp]
  0008a	50		 push	 eax
  0008b	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  0008e	ff d1		 call	 ecx
  00090	3b f4		 cmp	 esi, esp
  00092	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00097	89 45 e0	 mov	 DWORD PTR tv140[ebp], eax
  0009a	eb 07		 jmp	 SHORT $LN4@InitNew
$LN3@InitNew:
  0009c	c7 45 e0 05 40
	00 80		 mov	 DWORD PTR tv140[ebp], -2147467259 ; 80004005H
$LN4@InitNew:
  000a3	8b 55 e0	 mov	 edx, DWORD PTR tv140[ebp]
  000a6	89 55 e8	 mov	 DWORD PTR $T1[ebp], edx
  000a9	8d 4d f8	 lea	 ecx, DWORD PTR _p$[ebp]
  000ac	e8 00 00 00 00	 call	 ??1?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ
  000b1	8b 45 e8	 mov	 eax, DWORD PTR $T1[ebp]

; 780  : 	}

  000b4	52		 push	 edx
  000b5	8b cd		 mov	 ecx, ebp
  000b7	50		 push	 eax
  000b8	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@InitNew
  000be	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000c3	58		 pop	 eax
  000c4	5a		 pop	 edx
  000c5	5e		 pop	 esi
  000c6	83 c4 20	 add	 esp, 32			; 00000020H
  000c9	3b ec		 cmp	 ebp, esp
  000cb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d0	8b e5		 mov	 esp, ebp
  000d2	5d		 pop	 ebp
  000d3	c2 08 00	 ret	 8
  000d6	66 90		 npad	 2
$LN7@InitNew:
  000d8	01 00 00 00	 DD	 1
  000dc	00 00 00 00	 DD	 $LN6@InitNew
$LN6@InitNew:
  000e0	f8 ff ff ff	 DD	 -8			; fffffff8H
  000e4	04 00 00 00	 DD	 4
  000e8	00 00 00 00	 DD	 $LN5@InitNew
$LN5@InitNew:
  000ec	70		 DB	 112			; 00000070H
  000ed	00		 DB	 0
?InitNew@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStorage@@@Z ENDP ; ATL::IPersistStorageImpl<COPOSGestureControl>::InitNew
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?IsDirty@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
_TEXT	SEGMENT
tv140 = -32						; size = 4
tv134 = -28						; size = 4
$T1 = -24						; size = 4
$T2 = -20						; size = 8
_p$ = -8						; size = 4
_this$ = 8						; size = 4
?IsDirty@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ PROC ; ATL::IPersistStorageImpl<COPOSGestureControl>::IsDirty, COMDAT

; 768  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00012	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00015	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00018	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001b	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001e	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00021	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 769  : 		ATLTRACE(atlTraceCOM, 2, _T("IPersistStorageImpl::IsDirty\n"));

  00024	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@KEMDAJPD@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@
  00029	6a 02		 push	 2
  0002b	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00030	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00035	50		 push	 eax
  00036	68 01 03 00 00	 push	 769			; 00000301H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00040	8d 4d ec	 lea	 ecx, DWORD PTR $T2[ebp]
  00043	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0004e	83 c4 10	 add	 esp, 16			; 00000010H

; 770  : 		CComPtr<IPersistStreamInit> p;

  00051	8d 4d f8	 lea	 ecx, DWORD PTR _p$[ebp]
  00054	e8 00 00 00 00	 call	 ??0?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ ; ATL::CComPtr<IPersistStreamInit>::CComPtr<IPersistStreamInit>

; 771  : 		p.p = IPSI_GetIPersistStreamInit();

  00059	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?IPSI_GetIPersistStreamInit@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@AAEPAUIPersistStreamInit@@XZ ; ATL::IPersistStorageImpl<COPOSGestureControl>::IPSI_GetIPersistStreamInit
  00061	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax

; 772  : 		return (p != NULL) ? p->IsDirty() : E_FAIL;

  00064	6a 00		 push	 0
  00066	8d 4d f8	 lea	 ecx, DWORD PTR _p$[ebp]
  00069	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBE_NPAUIPersistStreamInit@@@Z ; ATL::CComPtrBase<IPersistStreamInit>::operator!=
  0006e	0f b6 c0	 movzx	 eax, al
  00071	85 c0		 test	 eax, eax
  00073	74 27		 je	 SHORT $LN3@IsDirty
  00075	8d 4d f8	 lea	 ecx, DWORD PTR _p$[ebp]
  00078	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStreamInit@@@1@XZ ; ATL::CComPtrBase<IPersistStreamInit>::operator->
  0007d	89 45 e4	 mov	 DWORD PTR tv134[ebp], eax
  00080	8b 4d e4	 mov	 ecx, DWORD PTR tv134[ebp]
  00083	8b 11		 mov	 edx, DWORD PTR [ecx]
  00085	8b f4		 mov	 esi, esp
  00087	8b 45 e4	 mov	 eax, DWORD PTR tv134[ebp]
  0008a	50		 push	 eax
  0008b	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  0008e	ff d1		 call	 ecx
  00090	3b f4		 cmp	 esi, esp
  00092	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00097	89 45 e0	 mov	 DWORD PTR tv140[ebp], eax
  0009a	eb 07		 jmp	 SHORT $LN4@IsDirty
$LN3@IsDirty:
  0009c	c7 45 e0 05 40
	00 80		 mov	 DWORD PTR tv140[ebp], -2147467259 ; 80004005H
$LN4@IsDirty:
  000a3	8b 55 e0	 mov	 edx, DWORD PTR tv140[ebp]
  000a6	89 55 e8	 mov	 DWORD PTR $T1[ebp], edx
  000a9	8d 4d f8	 lea	 ecx, DWORD PTR _p$[ebp]
  000ac	e8 00 00 00 00	 call	 ??1?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ
  000b1	8b 45 e8	 mov	 eax, DWORD PTR $T1[ebp]

; 773  : 	}

  000b4	52		 push	 edx
  000b5	8b cd		 mov	 ecx, ebp
  000b7	50		 push	 eax
  000b8	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@IsDirty
  000be	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000c3	58		 pop	 eax
  000c4	5a		 pop	 edx
  000c5	5e		 pop	 esi
  000c6	83 c4 20	 add	 esp, 32			; 00000020H
  000c9	3b ec		 cmp	 ebp, esp
  000cb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d0	8b e5		 mov	 esp, ebp
  000d2	5d		 pop	 ebp
  000d3	c2 04 00	 ret	 4
  000d6	66 90		 npad	 2
$LN7@IsDirty:
  000d8	01 00 00 00	 DD	 1
  000dc	00 00 00 00	 DD	 $LN6@IsDirty
$LN6@IsDirty:
  000e0	f8 ff ff ff	 DD	 -8			; fffffff8H
  000e4	04 00 00 00	 DD	 4
  000e8	00 00 00 00	 DD	 $LN5@IsDirty
$LN5@IsDirty:
  000ec	70		 DB	 112			; 00000070H
  000ed	00		 DB	 0
?IsDirty@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ENDP ; ATL::IPersistStorageImpl<COPOSGestureControl>::IsDirty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetClassID@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
_pClassID$ = 12						; size = 4
?GetClassID@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z PROC ; ATL::IPersistStorageImpl<COPOSGestureControl>::GetClassID, COMDAT

; 758  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 759  : 		ATLTRACE(atlTraceCOM, 2, _T("IPersistStorageImpl::GetClassID\n"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1EC@CBCJOIPD@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe@
  00019	6a 02		 push	 2
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00020	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00025	50		 push	 eax
  00026	68 f7 02 00 00	 push	 759			; 000002f7H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00030	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00033	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003e	83 c4 10	 add	 esp, 16			; 00000010H

; 760  : 		if (pClassID == NULL)

  00041	83 7d 0c 00	 cmp	 DWORD PTR _pClassID$[ebp], 0
  00045	75 07		 jne	 SHORT $LN2@GetClassID

; 761  : 			return E_POINTER;

  00047	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0004c	eb 20		 jmp	 SHORT $LN1@GetClassID
$LN2@GetClassID:

; 762  : 		*pClassID = T::GetObjectCLSID();

  0004e	e8 00 00 00 00	 call	 ?GetObjectCLSID@?$CComCoClass@VCOPOSGestureControl@@$1?CLSID_OPOSGestureControl@@3U_GUID@@B@ATL@@SGABU_GUID@@XZ ; ATL::CComCoClass<COPOSGestureControl,&CLSID_OPOSGestureControl>::GetObjectCLSID
  00053	8b 4d 0c	 mov	 ecx, DWORD PTR _pClassID$[ebp]
  00056	8b 10		 mov	 edx, DWORD PTR [eax]
  00058	89 11		 mov	 DWORD PTR [ecx], edx
  0005a	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0005d	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  00060	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00063	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00066	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00069	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 763  : 		return S_OK;

  0006c	33 c0		 xor	 eax, eax
$LN1@GetClassID:

; 764  : 	}

  0006e	83 c4 08	 add	 esp, 8
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
?GetClassID@?$IPersistStorageImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z ENDP ; ATL::IPersistStorageImpl<COPOSGestureControl>::GetClassID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?FindConnectionPoint@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAUIConnectionPoint@@@Z
_TEXT	SEGMENT
_pCP$1 = -44						; size = 4
_pFunc$2 = -40						; size = 4
_iid$ = -32						; size = 16
_pEntry$ = -12						; size = 4
_hRes$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppCP$ = 16						; size = 4
?FindConnectionPoint@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAUIConnectionPoint@@@Z PROC ; ATL::IConnectionPointContainerImpl<COPOSGestureControl>::FindConnectionPoint, COMDAT

; 6538 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0000b	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 6539 : 		if (ppCP == NULL)

  00021	83 7d 10 00	 cmp	 DWORD PTR _ppCP$[ebp], 0
  00025	75 0a		 jne	 SHORT $LN4@FindConnec

; 6540 : 			return E_POINTER;

  00027	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0002c	e9 cb 00 00 00	 jmp	 $LN1@FindConnec
$LN4@FindConnec:

; 6541 : 		*ppCP = NULL;

  00031	8b 45 10	 mov	 eax, DWORD PTR _ppCP$[ebp]
  00034	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 6542 : 		HRESULT hRes = CONNECT_E_NOCONNECTION;

  0003a	c7 45 f8 00 02
	04 80		 mov	 DWORD PTR _hRes$[ebp], -2147220992 ; 80040200H

; 6543 : 		const _ATL_CONNMAP_ENTRY* pEntry = pConnMap;

  00041	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pConnMap@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@0PBU_ATL_CONNMAP_ENTRY@2@B ; ATL::IConnectionPointContainerImpl<COPOSGestureControl>::pConnMap
  00047	89 4d f4	 mov	 DWORD PTR _pEntry$[ebp], ecx
$LN2@FindConnec:

; 6544 : 		IID iid;
; 6545 : 		while (pEntry->dwOffset != (DWORD_PTR)-1)

  0004a	8b 55 f4	 mov	 edx, DWORD PTR _pEntry$[ebp]
  0004d	83 3a ff	 cmp	 DWORD PTR [edx], -1
  00050	0f 84 a3 00 00
	00		 je	 $LN3@FindConnec

; 6546 : 		{
; 6547 : 			if (pEntry->dwOffset == (DWORD_PTR)-2)

  00056	8b 45 f4	 mov	 eax, DWORD PTR _pEntry$[ebp]
  00059	83 38 fe	 cmp	 DWORD PTR [eax], -2	; fffffffeH
  0005c	75 27		 jne	 SHORT $LN5@FindConnec

; 6548 : 			{
; 6549 : 				pEntry++;

  0005e	8b 4d f4	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  00061	83 c1 04	 add	 ecx, 4
  00064	89 4d f4	 mov	 DWORD PTR _pEntry$[ebp], ecx

; 6550 : 				const _ATL_CONNMAP_ENTRY* (*pFunc)(int*) =  (const _ATL_CONNMAP_ENTRY* (*)(int*))(pEntry->dwOffset);

  00067	8b 55 f4	 mov	 edx, DWORD PTR _pEntry$[ebp]
  0006a	8b 02		 mov	 eax, DWORD PTR [edx]
  0006c	89 45 d8	 mov	 DWORD PTR _pFunc$2[ebp], eax

; 6551 : 				pEntry = pFunc(NULL);

  0006f	8b f4		 mov	 esi, esp
  00071	6a 00		 push	 0
  00073	ff 55 d8	 call	 DWORD PTR _pFunc$2[ebp]
  00076	83 c4 04	 add	 esp, 4
  00079	3b f4		 cmp	 esi, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	89 45 f4	 mov	 DWORD PTR _pEntry$[ebp], eax

; 6552 : 				continue;

  00083	eb c5		 jmp	 SHORT $LN2@FindConnec
$LN5@FindConnec:

; 6553 : 			}
; 6554 : 			IConnectionPoint* pCP =

  00085	8b 4d f4	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  00088	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0008b	03 11		 add	 edx, DWORD PTR [ecx]
  0008d	89 55 d4	 mov	 DWORD PTR _pCP$1[ebp], edx

; 6555 : 				(IConnectionPoint*)((INT_PTR)this+pEntry->dwOffset);
; 6556 : 			if (SUCCEEDED(pCP->GetConnectionInterface(&iid)) &&

  00090	8b f4		 mov	 esi, esp
  00092	8d 45 e0	 lea	 eax, DWORD PTR _iid$[ebp]
  00095	50		 push	 eax
  00096	8b 4d d4	 mov	 ecx, DWORD PTR _pCP$1[ebp]
  00099	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009b	8b 45 d4	 mov	 eax, DWORD PTR _pCP$1[ebp]
  0009e	50		 push	 eax
  0009f	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  000a2	ff d1		 call	 ecx
  000a4	3b f4		 cmp	 esi, esp
  000a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ab	85 c0		 test	 eax, eax
  000ad	7c 3c		 jl	 SHORT $LN6@FindConnec
  000af	8d 55 e0	 lea	 edx, DWORD PTR _iid$[ebp]
  000b2	52		 push	 edx
  000b3	8b 45 0c	 mov	 eax, DWORD PTR _riid$[ebp]
  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 _InlineIsEqualGUID
  000bc	83 c4 08	 add	 esp, 8
  000bf	85 c0		 test	 eax, eax
  000c1	74 28		 je	 SHORT $LN6@FindConnec

; 6557 : 				InlineIsEqualGUID(riid, iid))
; 6558 : 			{
; 6559 : 				*ppCP = pCP;

  000c3	8b 4d 10	 mov	 ecx, DWORD PTR _ppCP$[ebp]
  000c6	8b 55 d4	 mov	 edx, DWORD PTR _pCP$1[ebp]
  000c9	89 11		 mov	 DWORD PTR [ecx], edx

; 6560 : 				pCP->AddRef();

  000cb	8b 45 d4	 mov	 eax, DWORD PTR _pCP$1[ebp]
  000ce	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d0	8b f4		 mov	 esi, esp
  000d2	8b 55 d4	 mov	 edx, DWORD PTR _pCP$1[ebp]
  000d5	52		 push	 edx
  000d6	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000d9	ff d0		 call	 eax
  000db	3b f4		 cmp	 esi, esp
  000dd	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 6561 : 				hRes = S_OK;

  000e2	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hRes$[ebp], 0

; 6562 : 				break;

  000e9	eb 0e		 jmp	 SHORT $LN3@FindConnec
$LN6@FindConnec:

; 6563 : 			}
; 6564 : 			pEntry++;

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  000ee	83 c1 04	 add	 ecx, 4
  000f1	89 4d f4	 mov	 DWORD PTR _pEntry$[ebp], ecx

; 6565 : 		}

  000f4	e9 51 ff ff ff	 jmp	 $LN2@FindConnec
$LN3@FindConnec:

; 6566 : 		return hRes;

  000f9	8b 45 f8	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@FindConnec:

; 6567 : 	}

  000fc	52		 push	 edx
  000fd	8b cd		 mov	 ecx, ebp
  000ff	50		 push	 eax
  00100	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@FindConnec
  00106	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0010b	58		 pop	 eax
  0010c	5a		 pop	 edx
  0010d	5f		 pop	 edi
  0010e	5e		 pop	 esi
  0010f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00112	33 cd		 xor	 ecx, ebp
  00114	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00119	83 c4 2c	 add	 esp, 44			; 0000002cH
  0011c	3b ec		 cmp	 ebp, esp
  0011e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00123	8b e5		 mov	 esp, ebp
  00125	5d		 pop	 ebp
  00126	c2 0c 00	 ret	 12			; 0000000cH
  00129	0f 1f 00	 npad	 3
$LN11@FindConnec:
  0012c	01 00 00 00	 DD	 1
  00130	00 00 00 00	 DD	 $LN10@FindConnec
$LN10@FindConnec:
  00134	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00138	10 00 00 00	 DD	 16			; 00000010H
  0013c	00 00 00 00	 DD	 $LN9@FindConnec
$LN9@FindConnec:
  00140	69		 DB	 105			; 00000069H
  00141	69		 DB	 105			; 00000069H
  00142	64		 DB	 100			; 00000064H
  00143	00		 DB	 0
?FindConnectionPoint@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@UAGJABU_GUID@@PAPAUIConnectionPoint@@@Z ENDP ; ATL::IConnectionPointContainerImpl<COPOSGestureControl>::FindConnectionPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?EnumConnectionPoints@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumConnectionPoints@@@Z
_TEXT	SEGMENT
tv239 = -160						; size = 4
tv217 = -156						; size = 4
tv169 = -152						; size = 4
tv157 = -148						; size = 4
tv153 = -144						; size = 4
tv244 = -140						; size = 4
tv145 = -136						; size = 4
tv129 = -132						; size = 4
tv78 = -128						; size = 4
__$AllocaPad$$ = -120					; size = 4
$T1 = -112						; size = 4
$T2 = -108						; size = 4
$T3 = -104						; size = 4
$T4 = -100						; size = 4
$T5 = -96						; size = 4
$T6 = -92						; size = 4
$T7 = -88						; size = 4
$T8 = -84						; size = 4
$T9 = -80						; size = 4
$T10 = -76						; size = 4
$T11 = -72						; size = 4
_hRes$ = -68						; size = 4
_pFunc$12 = -64						; size = 4
_pEntry$ = -60						; size = 4
_i$ = -56						; size = 4
_ppCP$ = -52						; size = 4
_hr$ = -48						; size = 4
_nBytes$ = -40						; size = 4
__AtlSafeAllocaManager$ = -28				; size = 4
_nCPCount$ = -16					; size = 4
_pEnum$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_ppEnum$ = 12						; size = 4
?EnumConnectionPoints@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumConnectionPoints@@@Z PROC ; ATL::IConnectionPointContainerImpl<COPOSGestureControl>::EnumConnectionPoints, COMDAT

; 6469 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 60 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-160]
  00011	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00027	c7 45 88 00 00
	00 00		 mov	 DWORD PTR __$AllocaPad$$[ebp], 0

; 6470 : 		if (ppEnum == NULL)

  0002e	83 7d 0c 00	 cmp	 DWORD PTR _ppEnum$[ebp], 0
  00032	75 0a		 jne	 SHORT $LN4@EnumConnec

; 6471 : 			return E_POINTER;

  00034	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00039	e9 54 03 00 00	 jmp	 $LN1@EnumConnec
$LN4@EnumConnec:

; 6472 : 		*ppEnum = NULL;

  0003e	8b 45 0c	 mov	 eax, DWORD PTR _ppEnum$[ebp]
  00041	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 6473 : 
; 6474 : 		CComEnumConnectionPoints* pEnum = _ATL_NEW CComObject<CComEnumConnectionPoints>;

  00047	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0004c	6a 1c		 push	 28			; 0000001cH
  0004e	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00053	83 c4 08	 add	 esp, 8
  00056	89 45 b8	 mov	 DWORD PTR $T11[ebp], eax
  00059	83 7d b8 00	 cmp	 DWORD PTR $T11[ebp], 0
  0005d	74 0f		 je	 SHORT $LN14@EnumConnec
  0005f	6a 00		 push	 0
  00061	8b 4d b8	 mov	 ecx, DWORD PTR $T11[ebp]
  00064	e8 00 00 00 00	 call	 ??0?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint>,ATL::CComSingleThreadModel> >
  00069	89 45 80	 mov	 DWORD PTR tv78[ebp], eax
  0006c	eb 07		 jmp	 SHORT $LN15@EnumConnec
$LN14@EnumConnec:
  0006e	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN15@EnumConnec:
  00075	8b 4d 80	 mov	 ecx, DWORD PTR tv78[ebp]
  00078	89 4d f8	 mov	 DWORD PTR _pEnum$[ebp], ecx

; 6475 : 		if (pEnum == NULL)

  0007b	83 7d f8 00	 cmp	 DWORD PTR _pEnum$[ebp], 0
  0007f	75 0a		 jne	 SHORT $LN5@EnumConnec

; 6476 : 			return E_OUTOFMEMORY;

  00081	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  00086	e9 07 03 00 00	 jmp	 $LN1@EnumConnec
$LN5@EnumConnec:

; 6477 : 
; 6478 : 		int nCPCount;
; 6479 : 		T::GetConnMap(&nCPCount);

  0008b	8d 55 f0	 lea	 edx, DWORD PTR _nCPCount$[ebp]
  0008e	52		 push	 edx
  0008f	e8 00 00 00 00	 call	 ?GetConnMap@COPOSGestureControl@@SAPBU_ATL_CONNMAP_ENTRY@ATL@@PAH@Z ; COPOSGestureControl::GetConnMap
  00094	83 c4 04	 add	 esp, 4

; 6480 : 
; 6481 : 		// allocate an initialize a vector of connection point object pointers
; 6482 : 		USES_ATL_SAFE_ALLOCA;

  00097	8d 4d e4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0009a	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>

; 6483 : 		if ((nCPCount < 0) || (nCPCount > (INT_MAX / sizeof(IConnectionPoint*))))

  0009f	83 7d f0 00	 cmp	 DWORD PTR _nCPCount$[ebp], 0
  000a3	7c 09		 jl	 SHORT $LN7@EnumConnec
  000a5	81 7d f0 ff ff
	ff 1f		 cmp	 DWORD PTR _nCPCount$[ebp], 536870911 ; 1fffffffH
  000ac	76 4d		 jbe	 SHORT $LN6@EnumConnec
$LN7@EnumConnec:

; 6484 : 		{
; 6485 : 			delete pEnum;

  000ae	8b 45 f8	 mov	 eax, DWORD PTR _pEnum$[ebp]
  000b1	89 45 b4	 mov	 DWORD PTR $T10[ebp], eax
  000b4	83 7d b4 00	 cmp	 DWORD PTR $T10[ebp], 0
  000b8	74 20		 je	 SHORT $LN16@EnumConnec
  000ba	8b f4		 mov	 esi, esp
  000bc	6a 01		 push	 1
  000be	8b 4d b4	 mov	 ecx, DWORD PTR $T10[ebp]
  000c1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c3	8b 4d b4	 mov	 ecx, DWORD PTR $T10[ebp]
  000c6	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  000c9	ff d0		 call	 eax
  000cb	3b f4		 cmp	 esi, esp
  000cd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d2	89 85 7c ff ff
	ff		 mov	 DWORD PTR tv129[ebp], eax
  000d8	eb 0a		 jmp	 SHORT $LN17@EnumConnec
$LN16@EnumConnec:
  000da	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv129[ebp], 0
$LN17@EnumConnec:

; 6486 : 			return E_OUTOFMEMORY;

  000e4	c7 45 b0 0e 00
	07 80		 mov	 DWORD PTR $T9[ebp], -2147024882 ; 8007000eH
  000eb	8d 4d e4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  000ee	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  000f3	8b 45 b0	 mov	 eax, DWORD PTR $T9[ebp]
  000f6	e9 97 02 00 00	 jmp	 $LN1@EnumConnec
$LN6@EnumConnec:

; 6487 : 		}
; 6488 : 
; 6489 : 		size_t nBytes=0;

  000fb	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _nBytes$[ebp], 0

; 6490 : 		HRESULT hr=S_OK;

  00102	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 6491 : 		if( FAILED(hr=::ATL::AtlMultiply(&nBytes, sizeof(IConnectionPoint*), static_cast<size_t>(nCPCount))))

  00109	8b 4d f0	 mov	 ecx, DWORD PTR _nCPCount$[ebp]
  0010c	51		 push	 ecx
  0010d	6a 04		 push	 4
  0010f	8d 55 d8	 lea	 edx, DWORD PTR _nBytes$[ebp]
  00112	52		 push	 edx
  00113	e8 00 00 00 00	 call	 ??$AtlMultiply@I@ATL@@YAJPAIII@Z ; ATL::AtlMultiply<unsigned int>
  00118	83 c4 0c	 add	 esp, 12			; 0000000cH
  0011b	89 45 d0	 mov	 DWORD PTR _hr$[ebp], eax
  0011e	83 7d d0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00122	7d 4c		 jge	 SHORT $LN8@EnumConnec

; 6492 : 		{
; 6493 : 			delete pEnum;

  00124	8b 45 f8	 mov	 eax, DWORD PTR _pEnum$[ebp]
  00127	89 45 ac	 mov	 DWORD PTR $T8[ebp], eax
  0012a	83 7d ac 00	 cmp	 DWORD PTR $T8[ebp], 0
  0012e	74 20		 je	 SHORT $LN18@EnumConnec
  00130	8b f4		 mov	 esi, esp
  00132	6a 01		 push	 1
  00134	8b 4d ac	 mov	 ecx, DWORD PTR $T8[ebp]
  00137	8b 11		 mov	 edx, DWORD PTR [ecx]
  00139	8b 4d ac	 mov	 ecx, DWORD PTR $T8[ebp]
  0013c	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0013f	ff d0		 call	 eax
  00141	3b f4		 cmp	 esi, esp
  00143	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00148	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv145[ebp], eax
  0014e	eb 0a		 jmp	 SHORT $LN19@EnumConnec
$LN18@EnumConnec:
  00150	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv145[ebp], 0
$LN19@EnumConnec:

; 6494 : 			return hr;

  0015a	8b 4d d0	 mov	 ecx, DWORD PTR _hr$[ebp]
  0015d	89 4d a8	 mov	 DWORD PTR $T7[ebp], ecx
  00160	8d 4d e4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00163	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00168	8b 45 a8	 mov	 eax, DWORD PTR $T7[ebp]
  0016b	e9 22 02 00 00	 jmp	 $LN1@EnumConnec
$LN8@EnumConnec:

; 6495 : 		}
; 6496 : 		IConnectionPoint** ppCP = (IConnectionPoint**)_ATL_SAFE_ALLOCA(nBytes, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  00170	81 7d d8 00 04
	00 00		 cmp	 DWORD PTR _nBytes$[ebp], 1024 ; 00000400H
  00177	77 5a		 ja	 SHORT $LN20@EnumConnec
  00179	8b 55 d8	 mov	 edx, DWORD PTR _nBytes$[ebp]
  0017c	52		 push	 edx
  0017d	e8 00 00 00 00	 call	 ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
  00182	83 c4 04	 add	 esp, 4
  00185	0f b6 c0	 movzx	 eax, al
  00188	85 c0		 test	 eax, eax
  0018a	74 47		 je	 SHORT $LN20@EnumConnec
  0018c	8b 4d d8	 mov	 ecx, DWORD PTR _nBytes$[ebp]
  0018f	83 c1 24	 add	 ecx, 36			; 00000024H
  00192	89 8d 74 ff ff
	ff		 mov	 DWORD PTR tv244[ebp], ecx
  00198	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv244[ebp]
  0019e	e8 00 00 00 00	 call	 __alloca_probe_16
  001a3	89 a5 70 ff ff
	ff		 mov	 DWORD PTR tv153[ebp], esp
  001a9	8d 55 88	 lea	 edx, DWORD PTR __$AllocaPad$$[ebp]
  001ac	52		 push	 edx
  001ad	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR tv244[ebp]
  001b3	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR tv153[ebp]
  001b9	e8 00 00 00 00	 call	 @_RTC_AllocaHelper@12
  001be	83 85 70 ff ff
	ff 20		 add	 DWORD PTR tv153[ebp], 32 ; 00000020H
  001c5	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR tv153[ebp]
  001cb	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv157[ebp], eax
  001d1	eb 12		 jmp	 SHORT $LN21@EnumConnec
$LN20@EnumConnec:
  001d3	8b 4d d8	 mov	 ecx, DWORD PTR _nBytes$[ebp]
  001d6	51		 push	 ecx
  001d7	8d 4d e4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  001da	e8 00 00 00 00	 call	 ?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
  001df	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv157[ebp], eax
$LN21@EnumConnec:
  001e5	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR tv157[ebp]
  001eb	89 55 cc	 mov	 DWORD PTR _ppCP$[ebp], edx

; 6497 : 		if (ppCP == NULL)

  001ee	83 7d cc 00	 cmp	 DWORD PTR _ppCP$[ebp], 0
  001f2	75 4d		 jne	 SHORT $LN9@EnumConnec

; 6498 : 		{
; 6499 : 			delete pEnum;

  001f4	8b 45 f8	 mov	 eax, DWORD PTR _pEnum$[ebp]
  001f7	89 45 a4	 mov	 DWORD PTR $T6[ebp], eax
  001fa	83 7d a4 00	 cmp	 DWORD PTR $T6[ebp], 0
  001fe	74 20		 je	 SHORT $LN22@EnumConnec
  00200	8b f4		 mov	 esi, esp
  00202	6a 01		 push	 1
  00204	8b 4d a4	 mov	 ecx, DWORD PTR $T6[ebp]
  00207	8b 11		 mov	 edx, DWORD PTR [ecx]
  00209	8b 4d a4	 mov	 ecx, DWORD PTR $T6[ebp]
  0020c	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0020f	ff d0		 call	 eax
  00211	3b f4		 cmp	 esi, esp
  00213	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00218	89 85 68 ff ff
	ff		 mov	 DWORD PTR tv169[ebp], eax
  0021e	eb 0a		 jmp	 SHORT $LN23@EnumConnec
$LN22@EnumConnec:
  00220	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv169[ebp], 0
$LN23@EnumConnec:

; 6500 : 			return E_OUTOFMEMORY;

  0022a	c7 45 a0 0e 00
	07 80		 mov	 DWORD PTR $T5[ebp], -2147024882 ; 8007000eH
  00231	8d 4d e4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00234	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00239	8b 45 a0	 mov	 eax, DWORD PTR $T5[ebp]
  0023c	e9 51 01 00 00	 jmp	 $LN1@EnumConnec
$LN9@EnumConnec:

; 6501 : 		}
; 6502 : 
; 6503 : 		int i = 0;

  00241	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0

; 6504 : 		const _ATL_CONNMAP_ENTRY* pEntry = pConnMap;

  00248	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pConnMap@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@0PBU_ATL_CONNMAP_ENTRY@2@B ; ATL::IConnectionPointContainerImpl<COPOSGestureControl>::pConnMap
  0024e	89 4d c4	 mov	 DWORD PTR _pEntry$[ebp], ecx
$LN2@EnumConnec:

; 6505 : 		while (pEntry->dwOffset != (DWORD_PTR)-1)

  00251	8b 55 c4	 mov	 edx, DWORD PTR _pEntry$[ebp]
  00254	83 3a ff	 cmp	 DWORD PTR [edx], -1
  00257	74 54		 je	 SHORT $LN3@EnumConnec

; 6506 : 		{
; 6507 : 			if (pEntry->dwOffset == (DWORD_PTR)-2)

  00259	8b 45 c4	 mov	 eax, DWORD PTR _pEntry$[ebp]
  0025c	83 38 fe	 cmp	 DWORD PTR [eax], -2	; fffffffeH
  0025f	75 27		 jne	 SHORT $LN10@EnumConnec

; 6508 : 			{
; 6509 : 				pEntry++;

  00261	8b 4d c4	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  00264	83 c1 04	 add	 ecx, 4
  00267	89 4d c4	 mov	 DWORD PTR _pEntry$[ebp], ecx

; 6510 : 				const _ATL_CONNMAP_ENTRY* (*pFunc)(int*) =  (const _ATL_CONNMAP_ENTRY* (*)(int*))(pEntry->dwOffset);

  0026a	8b 55 c4	 mov	 edx, DWORD PTR _pEntry$[ebp]
  0026d	8b 02		 mov	 eax, DWORD PTR [edx]
  0026f	89 45 c0	 mov	 DWORD PTR _pFunc$12[ebp], eax

; 6511 : 				pEntry = pFunc(NULL);

  00272	8b f4		 mov	 esi, esp
  00274	6a 00		 push	 0
  00276	ff 55 c0	 call	 DWORD PTR _pFunc$12[ebp]
  00279	83 c4 04	 add	 esp, 4
  0027c	3b f4		 cmp	 esi, esp
  0027e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00283	89 45 c4	 mov	 DWORD PTR _pEntry$[ebp], eax

; 6512 : 				continue;

  00286	eb c9		 jmp	 SHORT $LN2@EnumConnec
$LN10@EnumConnec:

; 6513 : 			}
; 6514 : 			ppCP[i++] = (IConnectionPoint*)((INT_PTR)this+pEntry->dwOffset);

  00288	8b 4d c4	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  0028b	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0028e	03 11		 add	 edx, DWORD PTR [ecx]
  00290	8b 45 c8	 mov	 eax, DWORD PTR _i$[ebp]
  00293	8b 4d cc	 mov	 ecx, DWORD PTR _ppCP$[ebp]
  00296	89 14 81	 mov	 DWORD PTR [ecx+eax*4], edx
  00299	8b 55 c8	 mov	 edx, DWORD PTR _i$[ebp]
  0029c	83 c2 01	 add	 edx, 1
  0029f	89 55 c8	 mov	 DWORD PTR _i$[ebp], edx

; 6515 : 			pEntry++;

  002a2	8b 45 c4	 mov	 eax, DWORD PTR _pEntry$[ebp]
  002a5	83 c0 04	 add	 eax, 4
  002a8	89 45 c4	 mov	 DWORD PTR _pEntry$[ebp], eax

; 6516 : 		}

  002ab	eb a4		 jmp	 SHORT $LN2@EnumConnec
$LN3@EnumConnec:

; 6517 : 
; 6518 : 		// copy the pointers: they will AddRef this object
; 6519 : 		HRESULT hRes = pEnum->Init((IConnectionPoint**)&ppCP[0],

  002ad	6a 03		 push	 3
  002af	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  002b2	51		 push	 ecx
  002b3	8b 55 f0	 mov	 edx, DWORD PTR _nCPCount$[ebp]
  002b6	8b 45 cc	 mov	 eax, DWORD PTR _ppCP$[ebp]
  002b9	8d 0c 90	 lea	 ecx, DWORD PTR [eax+edx*4]
  002bc	51		 push	 ecx
  002bd	ba 04 00 00 00	 mov	 edx, 4
  002c2	6b c2 00	 imul	 eax, edx, 0
  002c5	03 45 cc	 add	 eax, DWORD PTR _ppCP$[ebp]
  002c8	50		 push	 eax
  002c9	8b 4d f8	 mov	 ecx, DWORD PTR _pEnum$[ebp]
  002cc	e8 00 00 00 00	 call	 ?Init@?$CComEnumImpl@UIEnumConnectionPoints@@$1?_GUID_b196b285_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@QAEJPAPAUIConnectionPoint@@0PAUIUnknown@@W4CComEnumFlags@2@@Z ; ATL::CComEnumImpl<IEnumConnectionPoints,&_GUID_b196b285_bab4_101a_b69c_00aa00341d07,IConnectionPoint *,ATL::_CopyInterface<IConnectionPoint> >::Init
  002d1	89 45 bc	 mov	 DWORD PTR _hRes$[ebp], eax

; 6520 : 			(IConnectionPoint**)&ppCP[nCPCount],
; 6521 : 			static_cast<IConnectionPointContainer*>(this), AtlFlagCopy);
; 6522 : 		if (FAILED(hRes))

  002d4	83 7d bc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  002d8	7d 49		 jge	 SHORT $LN11@EnumConnec

; 6523 : 		{
; 6524 : 			delete pEnum;

  002da	8b 4d f8	 mov	 ecx, DWORD PTR _pEnum$[ebp]
  002dd	89 4d 9c	 mov	 DWORD PTR $T4[ebp], ecx
  002e0	83 7d 9c 00	 cmp	 DWORD PTR $T4[ebp], 0
  002e4	74 20		 je	 SHORT $LN24@EnumConnec
  002e6	8b f4		 mov	 esi, esp
  002e8	6a 01		 push	 1
  002ea	8b 55 9c	 mov	 edx, DWORD PTR $T4[ebp]
  002ed	8b 02		 mov	 eax, DWORD PTR [edx]
  002ef	8b 4d 9c	 mov	 ecx, DWORD PTR $T4[ebp]
  002f2	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  002f5	ff d2		 call	 edx
  002f7	3b f4		 cmp	 esi, esp
  002f9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002fe	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv217[ebp], eax
  00304	eb 0a		 jmp	 SHORT $LN25@EnumConnec
$LN24@EnumConnec:
  00306	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv217[ebp], 0
$LN25@EnumConnec:

; 6525 : 			return hRes;

  00310	8b 45 bc	 mov	 eax, DWORD PTR _hRes$[ebp]
  00313	89 45 98	 mov	 DWORD PTR $T3[ebp], eax
  00316	8d 4d e4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00319	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  0031e	8b 45 98	 mov	 eax, DWORD PTR $T3[ebp]
  00321	eb 6f		 jmp	 SHORT $LN1@EnumConnec
$LN11@EnumConnec:

; 6526 : 		}
; 6527 : 		hRes = pEnum->QueryInterface(__uuidof(IEnumConnectionPoints), (void**)ppEnum);

  00323	8b f4		 mov	 esi, esp
  00325	8b 4d 0c	 mov	 ecx, DWORD PTR _ppEnum$[ebp]
  00328	51		 push	 ecx
  00329	68 00 00 00 00	 push	 OFFSET __GUID_b196b285_bab4_101a_b69c_00aa00341d07
  0032e	8b 55 f8	 mov	 edx, DWORD PTR _pEnum$[ebp]
  00331	8b 02		 mov	 eax, DWORD PTR [edx]
  00333	8b 4d f8	 mov	 ecx, DWORD PTR _pEnum$[ebp]
  00336	51		 push	 ecx
  00337	8b 10		 mov	 edx, DWORD PTR [eax]
  00339	ff d2		 call	 edx
  0033b	3b f4		 cmp	 esi, esp
  0033d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00342	89 45 bc	 mov	 DWORD PTR _hRes$[ebp], eax

; 6528 : 		if (FAILED(hRes))

  00345	83 7d bc 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00349	7d 36		 jge	 SHORT $LN12@EnumConnec

; 6529 : 			delete pEnum;

  0034b	8b 45 f8	 mov	 eax, DWORD PTR _pEnum$[ebp]
  0034e	89 45 94	 mov	 DWORD PTR $T2[ebp], eax
  00351	83 7d 94 00	 cmp	 DWORD PTR $T2[ebp], 0
  00355	74 20		 je	 SHORT $LN26@EnumConnec
  00357	8b f4		 mov	 esi, esp
  00359	6a 01		 push	 1
  0035b	8b 4d 94	 mov	 ecx, DWORD PTR $T2[ebp]
  0035e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00360	8b 4d 94	 mov	 ecx, DWORD PTR $T2[ebp]
  00363	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00366	ff d0		 call	 eax
  00368	3b f4		 cmp	 esi, esp
  0036a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0036f	89 85 60 ff ff
	ff		 mov	 DWORD PTR tv239[ebp], eax
  00375	eb 0a		 jmp	 SHORT $LN12@EnumConnec
$LN26@EnumConnec:
  00377	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv239[ebp], 0
$LN12@EnumConnec:

; 6530 : 
; 6531 : 		return hRes;

  00381	8b 4d bc	 mov	 ecx, DWORD PTR _hRes$[ebp]
  00384	89 4d 90	 mov	 DWORD PTR $T1[ebp], ecx
  00387	8d 4d e4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0038a	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  0038f	8b 45 90	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@EnumConnec:

; 6532 : 	}

  00392	52		 push	 edx
  00393	8b cd		 mov	 ecx, ebp
  00395	50		 push	 eax
  00396	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN34@EnumConnec
  0039c	ff 75 88	 push	 DWORD PTR __$AllocaPad$$[ebp]
  0039f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars2@12
  003a4	58		 pop	 eax
  003a5	5a		 pop	 edx
  003a6	8d a5 58 ff ff
	ff		 lea	 esp, DWORD PTR [ebp-168]
  003ac	5f		 pop	 edi
  003ad	5e		 pop	 esi
  003ae	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003b1	33 cd		 xor	 ecx, ebp
  003b3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003b8	8b e5		 mov	 esp, ebp
  003ba	5d		 pop	 ebp
  003bb	c2 08 00	 ret	 8
  003be	66 90		 npad	 2
$LN34@EnumConnec:
  003c0	04 00 00 00	 DD	 4
  003c4	00 00 00 00	 DD	 $LN33@EnumConnec
$LN33@EnumConnec:
  003c8	f0 ff ff ff	 DD	 -16			; fffffff0H
  003cc	04 00 00 00	 DD	 4
  003d0	00 00 00 00	 DD	 $LN29@EnumConnec
  003d4	e4 ff ff ff	 DD	 -28			; ffffffe4H
  003d8	04 00 00 00	 DD	 4
  003dc	00 00 00 00	 DD	 $LN30@EnumConnec
  003e0	d8 ff ff ff	 DD	 -40			; ffffffd8H
  003e4	04 00 00 00	 DD	 4
  003e8	00 00 00 00	 DD	 $LN31@EnumConnec
  003ec	88 ff ff ff	 DD	 -120			; ffffff88H
  003f0	04 00 00 00	 DD	 4
  003f4	00 00 00 00	 DD	 $LN32@EnumConnec
$LN32@EnumConnec:
  003f8	5f		 DB	 95			; 0000005fH
  003f9	24		 DB	 36			; 00000024H
  003fa	41		 DB	 65			; 00000041H
  003fb	6c		 DB	 108			; 0000006cH
  003fc	6c		 DB	 108			; 0000006cH
  003fd	6f		 DB	 111			; 0000006fH
  003fe	63		 DB	 99			; 00000063H
  003ff	61		 DB	 97			; 00000061H
  00400	50		 DB	 80			; 00000050H
  00401	61		 DB	 97			; 00000061H
  00402	64		 DB	 100			; 00000064H
  00403	24		 DB	 36			; 00000024H
  00404	00		 DB	 0
$LN31@EnumConnec:
  00405	6e		 DB	 110			; 0000006eH
  00406	42		 DB	 66			; 00000042H
  00407	79		 DB	 121			; 00000079H
  00408	74		 DB	 116			; 00000074H
  00409	65		 DB	 101			; 00000065H
  0040a	73		 DB	 115			; 00000073H
  0040b	00		 DB	 0
$LN30@EnumConnec:
  0040c	5f		 DB	 95			; 0000005fH
  0040d	41		 DB	 65			; 00000041H
  0040e	74		 DB	 116			; 00000074H
  0040f	6c		 DB	 108			; 0000006cH
  00410	53		 DB	 83			; 00000053H
  00411	61		 DB	 97			; 00000061H
  00412	66		 DB	 102			; 00000066H
  00413	65		 DB	 101			; 00000065H
  00414	41		 DB	 65			; 00000041H
  00415	6c		 DB	 108			; 0000006cH
  00416	6c		 DB	 108			; 0000006cH
  00417	6f		 DB	 111			; 0000006fH
  00418	63		 DB	 99			; 00000063H
  00419	61		 DB	 97			; 00000061H
  0041a	4d		 DB	 77			; 0000004dH
  0041b	61		 DB	 97			; 00000061H
  0041c	6e		 DB	 110			; 0000006eH
  0041d	61		 DB	 97			; 00000061H
  0041e	67		 DB	 103			; 00000067H
  0041f	65		 DB	 101			; 00000065H
  00420	72		 DB	 114			; 00000072H
  00421	00		 DB	 0
$LN29@EnumConnec:
  00422	6e		 DB	 110			; 0000006eH
  00423	43		 DB	 67			; 00000043H
  00424	50		 DB	 80			; 00000050H
  00425	43		 DB	 67			; 00000043H
  00426	6f		 DB	 111			; 0000006fH
  00427	75		 DB	 117			; 00000075H
  00428	6e		 DB	 110			; 0000006eH
  00429	74		 DB	 116			; 00000074H
  0042a	00		 DB	 0
?EnumConnectionPoints@?$IConnectionPointContainerImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumConnectionPoints@@@Z ENDP ; ATL::IConnectionPointContainerImpl<COPOSGestureControl>::EnumConnectionPoints
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetDropTarget@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIDropTarget@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?GetDropTarget@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIDropTarget@@@Z PROC ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::GetDropTarget, COMDAT

; 3367 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@GetDropTar:

; 3368 : 		ATLTRACENOTIMPL(_T("IOleInPlaceObjectWindowlessImpl::GetDropTarget"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1FO@FOAHOGK@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 28 0d 00 00	 push	 3368			; 00000d28H
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@GetDropTar
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@GetDropTar
$LN1@GetDropTar:

; 3369 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
?GetDropTarget@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIDropTarget@@@Z ENDP ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::GetDropTarget
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnWindowMessage@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJIIJPAJ@Z
_TEXT	SEGMENT
tv169 = -72						; size = 4
tv78 = -68						; size = 4
$T1 = -64						; size = 8
_b$ = -56						; size = 4
_pOldMsg$ = -52						; size = 4
_message$ = -44						; size = 36
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_msg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_plResult$ = 24						; size = 4
?OnWindowMessage@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJIIJPAJ@Z PROC ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::OnWindowMessage, COMDAT

; 3353 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d b8	 lea	 edi, DWORD PTR [ebp-72]
  0000b	b9 12 00 00 00	 mov	 ecx, 18			; 00000012H
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd

; 3354 : 		ATLTRACE(atlTraceControls,2,_T("IOleInPlaceObjectWindowlessImpl::OnWindowMessage\n"));

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_1GE@GOJAGBD@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@
  0001c	6a 02		 push	 2
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00023	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00028	50		 push	 eax
  00029	68 1a 0d 00 00	 push	 3354			; 00000d1aH
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00033	8d 4d c0	 lea	 ecx, DWORD PTR $T1[ebp]
  00036	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00041	83 c4 10	 add	 esp, 16			; 00000010H

; 3355 : 		T* pT = static_cast<T*>(this);

  00044	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00048	74 0d		 je	 SHORT $LN3@OnWindowMe
  0004a	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	2d 84 00 00 00	 sub	 eax, 132		; 00000084H
  00052	89 45 bc	 mov	 DWORD PTR tv78[ebp], eax
  00055	eb 07		 jmp	 SHORT $LN4@OnWindowMe
$LN3@OnWindowMe:
  00057	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@OnWindowMe:
  0005e	8b 4d bc	 mov	 ecx, DWORD PTR tv78[ebp]
  00061	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 3356 : 		_ATL_MSG message(NULL, msg, wParam, lParam);

  00064	6a 01		 push	 1
  00066	8b 55 14	 mov	 edx, DWORD PTR _lParam$[ebp]
  00069	52		 push	 edx
  0006a	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d 0c	 mov	 ecx, DWORD PTR _msg$[ebp]
  00071	51		 push	 ecx
  00072	6a 00		 push	 0
  00074	8d 4d d4	 lea	 ecx, DWORD PTR _message$[ebp]
  00077	e8 00 00 00 00	 call	 ??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z ; ATL::_ATL_MSG::_ATL_MSG

; 3357 : 		const _ATL_MSG* pOldMsg = pT->m_pCurrentMsg;

  0007c	8b 55 fc	 mov	 edx, DWORD PTR _pT$[ebp]
  0007f	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  00082	89 45 cc	 mov	 DWORD PTR _pOldMsg$[ebp], eax

; 3358 : 		pT->m_pCurrentMsg = &message;

  00085	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00088	8d 55 d4	 lea	 edx, DWORD PTR _message$[ebp]
  0008b	89 51 64	 mov	 DWORD PTR [ecx+100], edx

; 3359 : 		BOOL b = pT->ProcessWindowMessage(pT->m_hWnd, msg, wParam, lParam, *plResult);

  0008e	8b f4		 mov	 esi, esp
  00090	6a 00		 push	 0
  00092	8b 45 18	 mov	 eax, DWORD PTR _plResult$[ebp]
  00095	50		 push	 eax
  00096	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00099	51		 push	 ecx
  0009a	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  0009d	52		 push	 edx
  0009e	8b 45 0c	 mov	 eax, DWORD PTR _msg$[ebp]
  000a1	50		 push	 eax
  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  000a5	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  000a8	52		 push	 edx
  000a9	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  000ac	83 c1 4c	 add	 ecx, 76			; 0000004cH
  000af	8b 45 fc	 mov	 eax, DWORD PTR _pT$[ebp]
  000b2	8b 50 4c	 mov	 edx, DWORD PTR [eax+76]
  000b5	8b 02		 mov	 eax, DWORD PTR [edx]
  000b7	ff d0		 call	 eax
  000b9	3b f4		 cmp	 esi, esp
  000bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c0	89 45 c8	 mov	 DWORD PTR _b$[ebp], eax

; 3360 : 		// restore saved value for the current message
; 3361 : 		ATLASSERT(pT->m_pCurrentMsg == &message);

  000c3	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  000c6	8d 55 d4	 lea	 edx, DWORD PTR _message$[ebp]
  000c9	39 51 64	 cmp	 DWORD PTR [ecx+100], edx
  000cc	74 26		 je	 SHORT $LN5@OnWindowMe
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@IDHMCPFB@?$AAp?$AAT?$AA?9?$AA?$DO?$AAm?$AA_?$AAp?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM@
  000d3	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000d8	6a 00		 push	 0
  000da	68 21 0d 00 00	 push	 3361			; 00000d21H
  000df	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000e4	6a 02		 push	 2
  000e6	e8 00 00 00 00	 call	 __CrtDbgReportW
  000eb	83 c4 18	 add	 esp, 24			; 00000018H
  000ee	83 f8 01	 cmp	 eax, 1
  000f1	75 01		 jne	 SHORT $LN5@OnWindowMe
  000f3	cc		 int	 3
$LN5@OnWindowMe:

; 3362 : 		pT->m_pCurrentMsg = pOldMsg;

  000f4	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  000f7	8b 55 cc	 mov	 edx, DWORD PTR _pOldMsg$[ebp]
  000fa	89 51 64	 mov	 DWORD PTR [ecx+100], edx

; 3363 : 		return b ? S_OK : S_FALSE;

  000fd	83 7d c8 00	 cmp	 DWORD PTR _b$[ebp], 0
  00101	74 09		 je	 SHORT $LN6@OnWindowMe
  00103	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv169[ebp], 0
  0010a	eb 07		 jmp	 SHORT $LN7@OnWindowMe
$LN6@OnWindowMe:
  0010c	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv169[ebp], 1
$LN7@OnWindowMe:
  00113	8b 45 b8	 mov	 eax, DWORD PTR tv169[ebp]

; 3364 : 	}

  00116	52		 push	 edx
  00117	8b cd		 mov	 ecx, ebp
  00119	50		 push	 eax
  0011a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@OnWindowMe
  00120	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00125	58		 pop	 eax
  00126	5a		 pop	 edx
  00127	5f		 pop	 edi
  00128	5e		 pop	 esi
  00129	83 c4 48	 add	 esp, 72			; 00000048H
  0012c	3b ec		 cmp	 ebp, esp
  0012e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00133	8b e5		 mov	 esp, ebp
  00135	5d		 pop	 ebp
  00136	c2 14 00	 ret	 20			; 00000014H
  00139	0f 1f 00	 npad	 3
$LN10@OnWindowMe:
  0013c	01 00 00 00	 DD	 1
  00140	00 00 00 00	 DD	 $LN9@OnWindowMe
$LN9@OnWindowMe:
  00144	d4 ff ff ff	 DD	 -44			; ffffffd4H
  00148	24 00 00 00	 DD	 36			; 00000024H
  0014c	00 00 00 00	 DD	 $LN8@OnWindowMe
$LN8@OnWindowMe:
  00150	6d		 DB	 109			; 0000006dH
  00151	65		 DB	 101			; 00000065H
  00152	73		 DB	 115			; 00000073H
  00153	73		 DB	 115			; 00000073H
  00154	61		 DB	 97			; 00000061H
  00155	67		 DB	 103			; 00000067H
  00156	65		 DB	 101			; 00000065H
  00157	00		 DB	 0
?OnWindowMessage@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJIIJPAJ@Z ENDP ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::OnWindowMessage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?ReactivateAndUndo@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
?ReactivateAndUndo@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ PROC ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::ReactivateAndUndo, COMDAT

; 3342 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@Reactivate:

; 3343 : 		ATLTRACENOTIMPL(_T("IOleInPlaceObjectWindowlessImpl::ReactivateAndUndo"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1GG@CPMHNPED@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 0f 0d 00 00	 push	 3343			; 00000d0fH
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@Reactivate
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@Reactivate
$LN1@Reactivate:

; 3344 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 04 00	 ret	 4
?ReactivateAndUndo@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ENDP ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::ReactivateAndUndo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?SetObjectRects@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPBUtagRECT@@0@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_prcPos$ = 12						; size = 4
_prcClip$ = 16						; size = 4
?SetObjectRects@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPBUtagRECT@@0@Z PROC ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::SetObjectRects, COMDAT

; 3336 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3337 : 		T* pT = static_cast<T*>(this);

  00017	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001b	74 0d		 je	 SHORT $LN3@SetObjectR
  0001d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00020	2d 84 00 00 00	 sub	 eax, 132		; 00000084H
  00025	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00028	eb 07		 jmp	 SHORT $LN4@SetObjectR
$LN3@SetObjectR:
  0002a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@SetObjectR:
  00031	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00034	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 3338 : 		ATLTRACE(atlTraceControls,2,_T("IOleInPlaceObjectWindowlessImpl::SetObjectRects\n"));

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_1GC@NABMBGNB@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@
  0003c	6a 02		 push	 2
  0003e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00043	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00048	50		 push	 eax
  00049	68 0a 0d 00 00	 push	 3338			; 00000d0aH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00053	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00056	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00061	83 c4 10	 add	 esp, 16			; 00000010H

; 3339 : 		return pT->IOleInPlaceObject_SetObjectRects(prcPos, prcClip);

  00064	8b 55 10	 mov	 edx, DWORD PTR _prcClip$[ebp]
  00067	52		 push	 edx
  00068	8b 45 0c	 mov	 eax, DWORD PTR _prcPos$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  0006f	83 c1 04	 add	 ecx, 4
  00072	e8 00 00 00 00	 call	 ?IOleInPlaceObject_SetObjectRects@CComControlBase@ATL@@QAEJPBUtagRECT@@0@Z ; ATL::CComControlBase::IOleInPlaceObject_SetObjectRects

; 3340 : 	}

  00077	83 c4 10	 add	 esp, 16			; 00000010H
  0007a	3b ec		 cmp	 ebp, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 0c 00	 ret	 12			; 0000000cH
?SetObjectRects@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPBUtagRECT@@0@Z ENDP ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::SetObjectRects
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?UIDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
_TEXT	SEGMENT
tv68 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
?UIDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ PROC ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::UIDeactivate, COMDAT

; 3328 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3329 : 		T* pT = static_cast<T*>(this);

  00017	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001b	74 0d		 je	 SHORT $LN3@UIDeactiva
  0001d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00020	2d 84 00 00 00	 sub	 eax, 132		; 00000084H
  00025	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00028	eb 07		 jmp	 SHORT $LN4@UIDeactiva
$LN3@UIDeactiva:
  0002a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@UIDeactiva:
  00031	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00034	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 3330 : 		ATLTRACE(atlTraceControls,2,_T("IOleInPlaceObjectWindowlessImpl::UIDeactivate\n"));

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_1FO@KFPABBGF@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@
  0003c	6a 02		 push	 2
  0003e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00043	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00048	50		 push	 eax
  00049	68 02 0d 00 00	 push	 3330			; 00000d02H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00053	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00056	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00061	83 c4 10	 add	 esp, 16			; 00000010H

; 3331 : 		return pT->IOleInPlaceObject_UIDeactivate();

  00064	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00067	83 c1 04	 add	 ecx, 4
  0006a	e8 00 00 00 00	 call	 ?IOleInPlaceObject_UIDeactivate@CComControlBase@ATL@@QAEJXZ ; ATL::CComControlBase::IOleInPlaceObject_UIDeactivate

; 3332 : 	}

  0006f	83 c4 10	 add	 esp, 16			; 00000010H
  00072	3b ec		 cmp	 ebp, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 04 00	 ret	 4
?UIDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ENDP ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::UIDeactivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?InPlaceDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
_TEXT	SEGMENT
tv68 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
?InPlaceDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ PROC ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::InPlaceDeactivate, COMDAT

; 3322 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3323 : 		T* pT = static_cast<T*>(this);

  00017	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001b	74 0d		 je	 SHORT $LN3@InPlaceDea
  0001d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00020	2d 84 00 00 00	 sub	 eax, 132		; 00000084H
  00025	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00028	eb 07		 jmp	 SHORT $LN4@InPlaceDea
$LN3@InPlaceDea:
  0002a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@InPlaceDea:
  00031	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00034	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 3324 : 		ATLTRACE(atlTraceControls,2,_T("IOleInPlaceObjectWindowlessImpl::InPlaceDeactivate\n"));

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_1GI@FLFGNCEO@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@
  0003c	6a 02		 push	 2
  0003e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00043	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00048	50		 push	 eax
  00049	68 fc 0c 00 00	 push	 3324			; 00000cfcH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00053	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00056	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00061	83 c4 10	 add	 esp, 16			; 00000010H

; 3325 : 		return pT->IOleInPlaceObject_InPlaceDeactivate();

  00064	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00067	83 c1 04	 add	 ecx, 4
  0006a	e8 00 00 00 00	 call	 ?IOleInPlaceObject_InPlaceDeactivate@CComControlBase@ATL@@QAEJXZ ; ATL::CComControlBase::IOleInPlaceObject_InPlaceDeactivate

; 3326 : 	}

  0006f	83 c4 10	 add	 esp, 16			; 00000010H
  00072	3b ec		 cmp	 ebp, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 04 00	 ret	 4
?InPlaceDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ENDP ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::InPlaceDeactivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z PROC ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::ContextSensitiveHelp, COMDAT

; 3315 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@ContextSen:

; 3316 : 		ATLTRACENOTIMPL(_T("IOleInPlaceObjectWindowlessImpl::ContextSensitiveHelp"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1GM@OCHIALO@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 f4 0c 00 00	 push	 3316			; 00000cf4H
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@ContextSen
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@ContextSen
$LN1@ContextSen:

; 3317 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z ENDP ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::ContextSensitiveHelp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetWindow@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUHWND__@@@Z
_TEXT	SEGMENT
tv95 = -24						; size = 4
tv78 = -20						; size = 4
$T1 = -16						; size = 8
_hRes$ = -8						; size = 4
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_phwnd$ = 12						; size = 4
?GetWindow@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUHWND__@@@Z PROC ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::GetWindow, COMDAT

; 3299 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3300 : 		ATLTRACE(atlTraceControls,2,_T("IOleInPlaceObjectWindowlessImpl::GetWindow\n"));

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_1FI@POCNNILF@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAO?$AAb?$AAj?$AAe@
  00022	6a 02		 push	 2
  00024	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00029	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  0002e	50		 push	 eax
  0002f	68 e4 0c 00 00	 push	 3300			; 00000ce4H
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00039	8d 4d f0	 lea	 ecx, DWORD PTR $T1[ebp]
  0003c	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00047	83 c4 10	 add	 esp, 16			; 00000010H

; 3301 : 		T* pT = static_cast<T*>(this);

  0004a	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0004e	74 0d		 je	 SHORT $LN5@GetWindow
  00050	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00053	2d 84 00 00 00	 sub	 eax, 132		; 00000084H
  00058	89 45 ec	 mov	 DWORD PTR tv78[ebp], eax
  0005b	eb 07		 jmp	 SHORT $LN6@GetWindow
$LN5@GetWindow:
  0005d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN6@GetWindow:
  00064	8b 4d ec	 mov	 ecx, DWORD PTR tv78[ebp]
  00067	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 3302 : 		HRESULT hRes = E_POINTER;

  0006a	c7 45 f8 03 40
	00 80		 mov	 DWORD PTR _hRes$[ebp], -2147467261 ; 80004003H

; 3303 : 
; 3304 : 		if (pT->m_bWasOnceWindowless)

  00071	8b 55 fc	 mov	 edx, DWORD PTR _pT$[ebp]
  00074	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  00077	c1 e8 08	 shr	 eax, 8
  0007a	83 e0 01	 and	 eax, 1
  0007d	74 07		 je	 SHORT $LN2@GetWindow

; 3305 : 			return E_FAIL;

  0007f	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00084	eb 32		 jmp	 SHORT $LN1@GetWindow
$LN2@GetWindow:

; 3306 : 
; 3307 : 		if (phwnd != NULL)

  00086	83 7d 0c 00	 cmp	 DWORD PTR _phwnd$[ebp], 0
  0008a	74 29		 je	 SHORT $LN3@GetWindow

; 3308 : 		{
; 3309 : 			*phwnd = pT->m_hWnd;

  0008c	8b 4d 0c	 mov	 ecx, DWORD PTR _phwnd$[ebp]
  0008f	8b 55 fc	 mov	 edx, DWORD PTR _pT$[ebp]
  00092	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  00095	89 01		 mov	 DWORD PTR [ecx], eax

; 3310 : 			hRes = (*phwnd == NULL) ? E_UNEXPECTED : S_OK;

  00097	8b 4d 0c	 mov	 ecx, DWORD PTR _phwnd$[ebp]
  0009a	83 39 00	 cmp	 DWORD PTR [ecx], 0
  0009d	75 09		 jne	 SHORT $LN7@GetWindow
  0009f	c7 45 e8 ff ff
	00 80		 mov	 DWORD PTR tv95[ebp], -2147418113 ; 8000ffffH
  000a6	eb 07		 jmp	 SHORT $LN8@GetWindow
$LN7@GetWindow:
  000a8	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN8@GetWindow:
  000af	8b 55 e8	 mov	 edx, DWORD PTR tv95[ebp]
  000b2	89 55 f8	 mov	 DWORD PTR _hRes$[ebp], edx
$LN3@GetWindow:

; 3311 : 		}
; 3312 : 		return hRes;

  000b5	8b 45 f8	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@GetWindow:

; 3313 : 	}

  000b8	83 c4 18	 add	 esp, 24			; 00000018H
  000bb	3b ec		 cmp	 ebp, esp
  000bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c2 08 00	 ret	 8
?GetWindow@?$IOleInPlaceObjectWindowlessImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUHWND__@@@Z ENDP ; ATL::IOleInPlaceObjectWindowlessImpl<COPOSGestureControl>::GetWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetNaturalExtent@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUHDC__@@PAUtagExtentInfo@@PAUtagSIZE@@@Z
_TEXT	SEGMENT
tv132 = -20						; size = 4
$T1 = -16						; size = 8
_pT$ = -8						; size = 4
_hRes$ = -4						; size = 4
_this$ = 8						; size = 4
_dwAspect$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
_pExtentInfo$ = 28					; size = 4
_psizel$ = 32						; size = 4
?GetNaturalExtent@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUHDC__@@PAUtagExtentInfo@@PAUtagSIZE@@@Z PROC ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetNaturalExtent, COMDAT

; 3263 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3264 : 		ATLTRACE(atlTraceControls,2,_T("IViewObjectExImpl::GetNaturalExtent\n"));

  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_1EK@BJGNOKFG@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
  0001f	6a 02		 push	 2
  00021	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00026	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  0002b	50		 push	 eax
  0002c	68 c0 0c 00 00	 push	 3264			; 00000cc0H
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00036	8d 4d f0	 lea	 ecx, DWORD PTR $T1[ebp]
  00039	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00044	83 c4 10	 add	 esp, 16			; 00000010H

; 3265 : 		ATLASSERT(pExtentInfo != NULL);

  00047	83 7d 1c 00	 cmp	 DWORD PTR _pExtentInfo$[ebp], 0
  0004b	75 26		 jne	 SHORT $LN7@GetNatural
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_1CC@BNJDLDIH@?$AAp?$AAE?$AAx?$AAt?$AAe?$AAn?$AAt?$AAI?$AAn?$AAf?$AAo?$AA?5?$AA?$CB?$AA?$DN?$AA?5@
  00052	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00057	6a 00		 push	 0
  00059	68 c1 0c 00 00	 push	 3265			; 00000cc1H
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00063	6a 02		 push	 2
  00065	e8 00 00 00 00	 call	 __CrtDbgReportW
  0006a	83 c4 18	 add	 esp, 24			; 00000018H
  0006d	83 f8 01	 cmp	 eax, 1
  00070	75 01		 jne	 SHORT $LN7@GetNatural
  00072	cc		 int	 3
$LN7@GetNatural:

; 3266 : 		ATLASSERT(psizel != NULL);

  00073	83 7d 20 00	 cmp	 DWORD PTR _psizel$[ebp], 0
  00077	75 26		 jne	 SHORT $LN8@GetNatural
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_1BI@JBIFBCLO@?$AAp?$AAs?$AAi?$AAz?$AAe?$AAl?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00083	6a 00		 push	 0
  00085	68 c2 0c 00 00	 push	 3266			; 00000cc2H
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0008f	6a 02		 push	 2
  00091	e8 00 00 00 00	 call	 __CrtDbgReportW
  00096	83 c4 18	 add	 esp, 24			; 00000018H
  00099	83 f8 01	 cmp	 eax, 1
  0009c	75 01		 jne	 SHORT $LN8@GetNatural
  0009e	cc		 int	 3
$LN8@GetNatural:

; 3267 : 		if ((pExtentInfo == NULL) || (psizel == NULL))

  0009f	83 7d 1c 00	 cmp	 DWORD PTR _pExtentInfo$[ebp], 0
  000a3	74 06		 je	 SHORT $LN3@GetNatural
  000a5	83 7d 20 00	 cmp	 DWORD PTR _psizel$[ebp], 0
  000a9	75 07		 jne	 SHORT $LN2@GetNatural
$LN3@GetNatural:

; 3268 : 			return E_POINTER;

  000ab	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  000b0	eb 52		 jmp	 SHORT $LN1@GetNatural
$LN2@GetNatural:

; 3269 : 
; 3270 : 		HRESULT hRes = E_FAIL;

  000b2	c7 45 fc 05 40
	00 80		 mov	 DWORD PTR _hRes$[ebp], -2147467259 ; 80004005H

; 3271 : 		T* pT = static_cast<T*>(this);

  000b9	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  000bd	74 0e		 je	 SHORT $LN9@GetNatural
  000bf	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  000c2	81 ea 80 00 00
	00		 sub	 edx, 128		; 00000080H
  000c8	89 55 ec	 mov	 DWORD PTR tv132[ebp], edx
  000cb	eb 07		 jmp	 SHORT $LN10@GetNatural
$LN9@GetNatural:
  000cd	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN10@GetNatural:
  000d4	8b 45 ec	 mov	 eax, DWORD PTR tv132[ebp]
  000d7	89 45 f8	 mov	 DWORD PTR _pT$[ebp], eax

; 3272 : 		if (dwAspect == DVASPECT_CONTENT)

  000da	83 7d 0c 01	 cmp	 DWORD PTR _dwAspect$[ebp], 1
  000de	75 21		 jne	 SHORT $LN4@GetNatural

; 3273 : 		{
; 3274 : 			if (pExtentInfo->dwExtentMode == DVEXTENT_CONTENT)

  000e0	8b 4d 1c	 mov	 ecx, DWORD PTR _pExtentInfo$[ebp]
  000e3	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000e7	75 18		 jne	 SHORT $LN4@GetNatural

; 3275 : 			{
; 3276 : 				*psizel = pT->m_sizeNatural;

  000e9	8b 55 f8	 mov	 edx, DWORD PTR _pT$[ebp]
  000ec	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000ef	8b 4a 24	 mov	 ecx, DWORD PTR [edx+36]
  000f2	8b 55 20	 mov	 edx, DWORD PTR _psizel$[ebp]
  000f5	89 02		 mov	 DWORD PTR [edx], eax
  000f7	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 3277 : 				hRes = S_OK;

  000fa	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _hRes$[ebp], 0
$LN4@GetNatural:

; 3278 : 			}
; 3279 : 		}
; 3280 : 		return hRes;

  00101	8b 45 fc	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@GetNatural:

; 3281 : 	}

  00104	83 c4 14	 add	 esp, 20			; 00000014H
  00107	3b ec		 cmp	 ebp, esp
  00109	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010e	8b e5		 mov	 esp, ebp
  00110	5d		 pop	 ebp
  00111	c2 1c 00	 ret	 28			; 0000001cH
?GetNaturalExtent@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUHDC__@@PAUtagExtentInfo@@PAUtagSIZE@@@Z ENDP ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetNaturalExtent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?QueryHitRect@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPBUtagRECT@@0JPAK@Z
_TEXT	SEGMENT
tv91 = -48						; size = 4
$T1 = -44						; size = 8
$T2 = -36						; size = 8
_rc$3 = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_dwAspect$ = 12						; size = 4
_pRectBounds$ = 16					; size = 4
_prcLoc$ = 20						; size = 4
___formal$ = 24						; size = 4
_pHitResult$ = 28					; size = 4
?QueryHitRect@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPBUtagRECT@@0JPAK@Z PROC ; ATL::IViewObjectExImpl<COPOSGestureControl>::QueryHitRect, COMDAT

; 3240 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d d0	 lea	 edi, DWORD PTR [ebp-48]
  0000b	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 3241 : 		ATLTRACE(atlTraceControls,2,_T("IViewObjectExImpl::QueryHitRect\n"));

  00021	68 00 00 00 00	 push	 OFFSET ??_C@_1EC@OOPFCKPJ@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
  00026	6a 02		 push	 2
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  0002d	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00032	50		 push	 eax
  00033	68 a9 0c 00 00	 push	 3241			; 00000ca9H
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0003d	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00040	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0004b	83 c4 10	 add	 esp, 16			; 00000010H

; 3242 : 		ATLASSERT(pHitResult != NULL);

  0004e	83 7d 1c 00	 cmp	 DWORD PTR _pHitResult$[ebp], 0
  00052	75 26		 jne	 SHORT $LN5@QueryHitRe
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@PALDCHIG@?$AAp?$AAH?$AAi?$AAt?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0005e	6a 00		 push	 0
  00060	68 aa 0c 00 00	 push	 3242			; 00000caaH
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0006a	6a 02		 push	 2
  0006c	e8 00 00 00 00	 call	 __CrtDbgReportW
  00071	83 c4 18	 add	 esp, 24			; 00000018H
  00074	83 f8 01	 cmp	 eax, 1
  00077	75 01		 jne	 SHORT $LN5@QueryHitRe
  00079	cc		 int	 3
$LN5@QueryHitRe:

; 3243 : 		if (pHitResult == NULL)

  0007a	83 7d 1c 00	 cmp	 DWORD PTR _pHitResult$[ebp], 0
  0007e	75 07		 jne	 SHORT $LN2@QueryHitRe

; 3244 : 			return E_POINTER;

  00080	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00085	eb 7c		 jmp	 SHORT $LN1@QueryHitRe
$LN2@QueryHitRe:

; 3245 : 
; 3246 : 		if (dwAspect == DVASPECT_CONTENT)

  00087	83 7d 0c 01	 cmp	 DWORD PTR _dwAspect$[ebp], 1
  0008b	75 3b		 jne	 SHORT $LN3@QueryHitRe

; 3247 : 		{
; 3248 : 			RECT rc;
; 3249 : 			*pHitResult = UnionRect(&rc, pRectBounds, prcLoc) ? HITRESULT_HIT : HITRESULT_OUTSIDE;

  0008d	8b f4		 mov	 esi, esp
  0008f	8b 4d 14	 mov	 ecx, DWORD PTR _prcLoc$[ebp]
  00092	51		 push	 ecx
  00093	8b 55 10	 mov	 edx, DWORD PTR _pRectBounds$[ebp]
  00096	52		 push	 edx
  00097	8d 45 e8	 lea	 eax, DWORD PTR _rc$3[ebp]
  0009a	50		 push	 eax
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UnionRect@12
  000a1	3b f4		 cmp	 esi, esp
  000a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a8	85 c0		 test	 eax, eax
  000aa	74 09		 je	 SHORT $LN6@QueryHitRe
  000ac	c7 45 d0 03 00
	00 00		 mov	 DWORD PTR tv91[ebp], 3
  000b3	eb 07		 jmp	 SHORT $LN7@QueryHitRe
$LN6@QueryHitRe:
  000b5	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
$LN7@QueryHitRe:
  000bc	8b 4d 1c	 mov	 ecx, DWORD PTR _pHitResult$[ebp]
  000bf	8b 55 d0	 mov	 edx, DWORD PTR tv91[ebp]
  000c2	89 11		 mov	 DWORD PTR [ecx], edx

; 3250 : 			return S_OK;

  000c4	33 c0		 xor	 eax, eax
  000c6	eb 3b		 jmp	 SHORT $LN1@QueryHitRe
$LN3@QueryHitRe:

; 3251 : 		}
; 3252 : 		*pHitResult = NULL;

  000c8	8b 45 1c	 mov	 eax, DWORD PTR _pHitResult$[ebp]
  000cb	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 3253 : 		ATLTRACE(atlTraceControls,2,_T("Wrong DVASPECT\n"));

  000d1	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@PEBIMLJG@?$AAW?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAD?$AAV?$AAA?$AAS?$AAP?$AAE?$AAC?$AAT?$AA?6@
  000d6	6a 02		 push	 2
  000d8	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  000dd	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  000e2	50		 push	 eax
  000e3	68 b5 0c 00 00	 push	 3253			; 00000cb5H
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000ed	8d 4d d4	 lea	 ecx, DWORD PTR $T1[ebp]
  000f0	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000fb	83 c4 10	 add	 esp, 16			; 00000010H

; 3254 : 		return E_FAIL;

  000fe	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
$LN1@QueryHitRe:

; 3255 : 	}

  00103	52		 push	 edx
  00104	8b cd		 mov	 ecx, ebp
  00106	50		 push	 eax
  00107	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@QueryHitRe
  0010d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00112	58		 pop	 eax
  00113	5a		 pop	 edx
  00114	5f		 pop	 edi
  00115	5e		 pop	 esi
  00116	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00119	33 cd		 xor	 ecx, ebp
  0011b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00120	83 c4 30	 add	 esp, 48			; 00000030H
  00123	3b ec		 cmp	 ebp, esp
  00125	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012a	8b e5		 mov	 esp, ebp
  0012c	5d		 pop	 ebp
  0012d	c2 18 00	 ret	 24			; 00000018H
$LN10@QueryHitRe:
  00130	01 00 00 00	 DD	 1
  00134	00 00 00 00	 DD	 $LN9@QueryHitRe
$LN9@QueryHitRe:
  00138	e8 ff ff ff	 DD	 -24			; ffffffe8H
  0013c	10 00 00 00	 DD	 16			; 00000010H
  00140	00 00 00 00	 DD	 $LN8@QueryHitRe
$LN8@QueryHitRe:
  00144	72		 DB	 114			; 00000072H
  00145	63		 DB	 99			; 00000063H
  00146	00		 DB	 0
?QueryHitRect@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPBUtagRECT@@0JPAK@Z ENDP ; ATL::IViewObjectExImpl<COPOSGestureControl>::QueryHitRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?QueryHitPoint@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPBUtagRECT@@UtagPOINT@@JPAK@Z
_TEXT	SEGMENT
tv90 = -20						; size = 4
$T1 = -16						; size = 8
$T2 = -8						; size = 8
_this$ = 8						; size = 4
_dwAspect$ = 12						; size = 4
_pRectBounds$ = 16					; size = 4
_ptlLoc$ = 20						; size = 8
___formal$ = 28						; size = 4
_pHitResult$ = 32					; size = 4
?QueryHitPoint@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPBUtagRECT@@UtagPOINT@@JPAK@Z PROC ; ATL::IViewObjectExImpl<COPOSGestureControl>::QueryHitPoint, COMDAT

; 3219 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3220 : 		ATLTRACE(atlTraceControls,2,_T("IViewObjectExImpl::QueryHitPoint\n"));

  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@LBFAGAOE@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
  00020	6a 02		 push	 2
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00027	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  0002c	50		 push	 eax
  0002d	68 94 0c 00 00	 push	 3220			; 00000c94H
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00037	8d 4d f8	 lea	 ecx, DWORD PTR $T2[ebp]
  0003a	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00045	83 c4 10	 add	 esp, 16			; 00000010H

; 3221 : 		ATLASSERT(pHitResult != NULL);

  00048	83 7d 20 00	 cmp	 DWORD PTR _pHitResult$[ebp], 0
  0004c	75 26		 jne	 SHORT $LN5@QueryHitPo
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@PALDCHIG@?$AAp?$AAH?$AAi?$AAt?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00058	6a 00		 push	 0
  0005a	68 95 0c 00 00	 push	 3221			; 00000c95H
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00064	6a 02		 push	 2
  00066	e8 00 00 00 00	 call	 __CrtDbgReportW
  0006b	83 c4 18	 add	 esp, 24			; 00000018H
  0006e	83 f8 01	 cmp	 eax, 1
  00071	75 01		 jne	 SHORT $LN5@QueryHitPo
  00073	cc		 int	 3
$LN5@QueryHitPo:

; 3222 : 		if (pHitResult == NULL)

  00074	83 7d 20 00	 cmp	 DWORD PTR _pHitResult$[ebp], 0
  00078	75 07		 jne	 SHORT $LN2@QueryHitPo

; 3223 : 			return E_POINTER;

  0007a	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0007f	eb 7c		 jmp	 SHORT $LN1@QueryHitPo
$LN2@QueryHitPo:

; 3224 : 
; 3225 : 		if (dwAspect == DVASPECT_CONTENT)

  00081	83 7d 0c 01	 cmp	 DWORD PTR _dwAspect$[ebp], 1
  00085	75 3b		 jne	 SHORT $LN3@QueryHitPo

; 3226 : 		{
; 3227 : 			*pHitResult = PtInRect(pRectBounds, ptlLoc) ? HITRESULT_HIT : HITRESULT_OUTSIDE;

  00087	8b f4		 mov	 esi, esp
  00089	8b 4d 18	 mov	 ecx, DWORD PTR _ptlLoc$[ebp+4]
  0008c	51		 push	 ecx
  0008d	8b 55 14	 mov	 edx, DWORD PTR _ptlLoc$[ebp]
  00090	52		 push	 edx
  00091	8b 45 10	 mov	 eax, DWORD PTR _pRectBounds$[ebp]
  00094	50		 push	 eax
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  0009b	3b f4		 cmp	 esi, esp
  0009d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a2	85 c0		 test	 eax, eax
  000a4	74 09		 je	 SHORT $LN6@QueryHitPo
  000a6	c7 45 ec 03 00
	00 00		 mov	 DWORD PTR tv90[ebp], 3
  000ad	eb 07		 jmp	 SHORT $LN7@QueryHitPo
$LN6@QueryHitPo:
  000af	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN7@QueryHitPo:
  000b6	8b 4d 20	 mov	 ecx, DWORD PTR _pHitResult$[ebp]
  000b9	8b 55 ec	 mov	 edx, DWORD PTR tv90[ebp]
  000bc	89 11		 mov	 DWORD PTR [ecx], edx

; 3228 : 			return S_OK;

  000be	33 c0		 xor	 eax, eax
  000c0	eb 3b		 jmp	 SHORT $LN1@QueryHitPo
$LN3@QueryHitPo:

; 3229 : 		}
; 3230 : 		*pHitResult = NULL;

  000c2	8b 45 20	 mov	 eax, DWORD PTR _pHitResult$[ebp]
  000c5	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 3231 : 		ATLTRACE(atlTraceControls,2,_T("Wrong DVASPECT\n"));

  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@PEBIMLJG@?$AAW?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAD?$AAV?$AAA?$AAS?$AAP?$AAE?$AAC?$AAT?$AA?6@
  000d0	6a 02		 push	 2
  000d2	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  000d7	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  000dc	50		 push	 eax
  000dd	68 9f 0c 00 00	 push	 3231			; 00000c9fH
  000e2	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000e7	8d 4d f0	 lea	 ecx, DWORD PTR $T1[ebp]
  000ea	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000f5	83 c4 10	 add	 esp, 16			; 00000010H

; 3232 : 		return E_FAIL;

  000f8	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
$LN1@QueryHitPo:

; 3233 : 	}

  000fd	5e		 pop	 esi
  000fe	83 c4 14	 add	 esp, 20			; 00000014H
  00101	3b ec		 cmp	 ebp, esp
  00103	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00108	8b e5		 mov	 esp, ebp
  0010a	5d		 pop	 ebp
  0010b	c2 1c 00	 ret	 28			; 0000001cH
?QueryHitPoint@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPBUtagRECT@@UtagPOINT@@JPAK@Z ENDP ; ATL::IViewObjectExImpl<COPOSGestureControl>::QueryHitPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetViewStatus@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJPAK@Z
_TEXT	SEGMENT
tv89 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_pdwStatus$ = 12					; size = 4
?GetViewStatus@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJPAK@Z PROC ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetViewStatus, COMDAT

; 3203 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3204 : 		ATLTRACE(atlTraceControls,2,_T("IViewObjectExImpl::GetViewStatus\n"));

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@ICFBLIPC@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
  0001c	6a 02		 push	 2
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00023	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00028	50		 push	 eax
  00029	68 84 0c 00 00	 push	 3204			; 00000c84H
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00033	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00036	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00041	83 c4 10	 add	 esp, 16			; 00000010H

; 3205 : 		ATLASSERT(pdwStatus != NULL);

  00044	83 7d 0c 00	 cmp	 DWORD PTR _pdwStatus$[ebp], 0
  00048	75 26		 jne	 SHORT $LN4@GetViewSta
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@EONKKIBB@?$AAp?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00054	6a 00		 push	 0
  00056	68 85 0c 00 00	 push	 3205			; 00000c85H
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00060	6a 02		 push	 2
  00062	e8 00 00 00 00	 call	 __CrtDbgReportW
  00067	83 c4 18	 add	 esp, 24			; 00000018H
  0006a	83 f8 01	 cmp	 eax, 1
  0006d	75 01		 jne	 SHORT $LN4@GetViewSta
  0006f	cc		 int	 3
$LN4@GetViewSta:

; 3206 : 		if (pdwStatus == NULL)

  00070	83 7d 0c 00	 cmp	 DWORD PTR _pdwStatus$[ebp], 0
  00074	75 07		 jne	 SHORT $LN2@GetViewSta

; 3207 : 			return E_POINTER;

  00076	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0007b	eb 30		 jmp	 SHORT $LN1@GetViewSta
$LN2@GetViewSta:

; 3208 : 
; 3209 : 		T* pT = static_cast<T*>(this);

  0007d	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00081	74 0e		 je	 SHORT $LN5@GetViewSta
  00083	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	81 e9 80 00 00
	00		 sub	 ecx, 128		; 00000080H
  0008c	89 4d f0	 mov	 DWORD PTR tv89[ebp], ecx
  0008f	eb 07		 jmp	 SHORT $LN6@GetViewSta
$LN5@GetViewSta:
  00091	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN6@GetViewSta:
  00098	8b 55 f0	 mov	 edx, DWORD PTR tv89[ebp]
  0009b	89 55 fc	 mov	 DWORD PTR _pT$[ebp], edx

; 3210 : 		*pdwStatus = pT->_GetViewStatus();

  0009e	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  000a1	e8 00 00 00 00	 call	 ?_GetViewStatus@COPOSGestureControl@@QAEKXZ ; COPOSGestureControl::_GetViewStatus
  000a6	8b 4d 0c	 mov	 ecx, DWORD PTR _pdwStatus$[ebp]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 3211 : 		return S_OK;

  000ab	33 c0		 xor	 eax, eax
$LN1@GetViewSta:

; 3212 : 	}

  000ad	83 c4 10	 add	 esp, 16			; 00000010H
  000b0	3b ec		 cmp	 ebp, esp
  000b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c2 08 00	 ret	 8
?GetViewStatus@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJPAK@Z ENDP ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetViewStatus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetRect@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAU_RECTL@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?GetRect@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAU_RECTL@@@Z PROC ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetRect, COMDAT

; 3198 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@GetRect:

; 3199 : 		ATLTRACENOTIMPL(_T("IViewObjectExImpl::GetRect"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@HMMPEHJO@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 7f 0c 00 00	 push	 3199			; 00000c7fH
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@GetRect
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@GetRect
$LN1@GetRect:

; 3200 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 0c 00	 ret	 12			; 0000000cH
?GetRect@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAU_RECTL@@@Z ENDP ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetExtent@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUtagSIZE@@@Z
_TEXT	SEGMENT
tv89 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
_lpsizel$ = 24						; size = 4
?GetExtent@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUtagSIZE@@@Z PROC ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetExtent, COMDAT

; 3182 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3183 : 		ATLTRACE(atlTraceControls,2,_T("IViewObjectExImpl::GetExtent\n"));

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@POGPOFEN@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
  0001c	6a 02		 push	 2
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00023	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00028	50		 push	 eax
  00029	68 6f 0c 00 00	 push	 3183			; 00000c6fH
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00033	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00036	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00041	83 c4 10	 add	 esp, 16			; 00000010H

; 3184 : 		ATLASSERT(lpsizel != NULL);

  00044	83 7d 18 00	 cmp	 DWORD PTR _lpsizel$[ebp], 0
  00048	75 26		 jne	 SHORT $LN4@GetExtent
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@KJBKAKFM@?$AAl?$AAp?$AAs?$AAi?$AAz?$AAe?$AAl?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00054	6a 00		 push	 0
  00056	68 70 0c 00 00	 push	 3184			; 00000c70H
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00060	6a 02		 push	 2
  00062	e8 00 00 00 00	 call	 __CrtDbgReportW
  00067	83 c4 18	 add	 esp, 24			; 00000018H
  0006a	83 f8 01	 cmp	 eax, 1
  0006d	75 01		 jne	 SHORT $LN4@GetExtent
  0006f	cc		 int	 3
$LN4@GetExtent:

; 3185 : 		if (lpsizel == NULL)

  00070	83 7d 18 00	 cmp	 DWORD PTR _lpsizel$[ebp], 0
  00074	75 07		 jne	 SHORT $LN2@GetExtent

; 3186 : 			return E_POINTER;

  00076	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0007b	eb 34		 jmp	 SHORT $LN1@GetExtent
$LN2@GetExtent:

; 3187 : 
; 3188 : 		T* pT = static_cast<T*>(this);

  0007d	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00081	74 0e		 je	 SHORT $LN5@GetExtent
  00083	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	81 e9 80 00 00
	00		 sub	 ecx, 128		; 00000080H
  0008c	89 4d f0	 mov	 DWORD PTR tv89[ebp], ecx
  0008f	eb 07		 jmp	 SHORT $LN6@GetExtent
$LN5@GetExtent:
  00091	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN6@GetExtent:
  00098	8b 55 f0	 mov	 edx, DWORD PTR tv89[ebp]
  0009b	89 55 fc	 mov	 DWORD PTR _pT$[ebp], edx

; 3189 : 		*lpsizel = pT->m_sizeExtent;

  0009e	8b 45 fc	 mov	 eax, DWORD PTR _pT$[ebp]
  000a1	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000a4	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  000a7	8b 45 18	 mov	 eax, DWORD PTR _lpsizel$[ebp]
  000aa	89 08		 mov	 DWORD PTR [eax], ecx
  000ac	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 3190 : 		return S_OK;

  000af	33 c0		 xor	 eax, eax
$LN1@GetExtent:

; 3191 : 	}

  000b1	83 c4 10	 add	 esp, 16			; 00000010H
  000b4	3b ec		 cmp	 ebp, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c2 14 00	 ret	 20			; 00000014H
?GetExtent@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUtagSIZE@@@Z ENDP ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetExtent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetAdvise@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJPAK0PAPAUIAdviseSink@@@Z
_TEXT	SEGMENT
tv89 = -20						; size = 4
$T1 = -16						; size = 8
_pT$2 = -8						; size = 4
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
_ppAdvSink$ = 20					; size = 4
?GetAdvise@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJPAK0PAPAUIAdviseSink@@@Z PROC ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetAdvise, COMDAT

; 3159 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3160 : 		ATLTRACE(atlTraceControls,2,_T("IViewObjectExImpl::GetAdvise\n"));

  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LPCKIPFO@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
  00020	6a 02		 push	 2
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00027	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  0002c	50		 push	 eax
  0002d	68 58 0c 00 00	 push	 3160			; 00000c58H
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00037	8d 4d f0	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00045	83 c4 10	 add	 esp, 16			; 00000010H

; 3161 : 		ATLASSERT(ppAdvSink != NULL);

  00048	83 7d 14 00	 cmp	 DWORD PTR _ppAdvSink$[ebp], 0
  0004c	75 26		 jne	 SHORT $LN5@GetAdvise
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@NDBFONFF@?$AAp?$AAp?$AAA?$AAd?$AAv?$AAS?$AAi?$AAn?$AAk?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00058	6a 00		 push	 0
  0005a	68 59 0c 00 00	 push	 3161			; 00000c59H
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00064	6a 02		 push	 2
  00066	e8 00 00 00 00	 call	 __CrtDbgReportW
  0006b	83 c4 18	 add	 esp, 24			; 00000018H
  0006e	83 f8 01	 cmp	 eax, 1
  00071	75 01		 jne	 SHORT $LN5@GetAdvise
  00073	cc		 int	 3
$LN5@GetAdvise:

; 3162 : 
; 3163 : 		HRESULT hr = E_POINTER;

  00074	c7 45 fc 03 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467261 ; 80004003H

; 3164 : 		if (ppAdvSink != NULL)

  0007b	83 7d 14 00	 cmp	 DWORD PTR _ppAdvSink$[ebp], 0
  0007f	74 64		 je	 SHORT $LN2@GetAdvise

; 3165 : 		{
; 3166 : 			T* pT = static_cast<T*>(this);

  00081	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00085	74 0e		 je	 SHORT $LN6@GetAdvise
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	81 e9 80 00 00
	00		 sub	 ecx, 128		; 00000080H
  00090	89 4d ec	 mov	 DWORD PTR tv89[ebp], ecx
  00093	eb 07		 jmp	 SHORT $LN7@GetAdvise
$LN6@GetAdvise:
  00095	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN7@GetAdvise:
  0009c	8b 55 ec	 mov	 edx, DWORD PTR tv89[ebp]
  0009f	89 55 f8	 mov	 DWORD PTR _pT$2[ebp], edx

; 3167 : 			*ppAdvSink = pT->m_spAdviseSink;

  000a2	8b 4d f8	 mov	 ecx, DWORD PTR _pT$2[ebp]
  000a5	83 c1 18	 add	 ecx, 24			; 00000018H
  000a8	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAUIAdviseSink@@XZ ; ATL::CComPtrBase<IAdviseSink>::operator IAdviseSink *
  000ad	8b 4d 14	 mov	 ecx, DWORD PTR _ppAdvSink$[ebp]
  000b0	89 01		 mov	 DWORD PTR [ecx], eax

; 3168 : 			if (pT->m_spAdviseSink)

  000b2	8b 4d f8	 mov	 ecx, DWORD PTR _pT$2[ebp]
  000b5	83 c1 18	 add	 ecx, 24			; 00000018H
  000b8	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAUIAdviseSink@@XZ ; ATL::CComPtrBase<IAdviseSink>::operator IAdviseSink *
  000bd	85 c0		 test	 eax, eax
  000bf	74 1d		 je	 SHORT $LN3@GetAdvise

; 3169 : 				pT->m_spAdviseSink.p->AddRef();

  000c1	8b 55 f8	 mov	 edx, DWORD PTR _pT$2[ebp]
  000c4	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  000c7	8b 4d f8	 mov	 ecx, DWORD PTR _pT$2[ebp]
  000ca	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  000cd	8b 00		 mov	 eax, DWORD PTR [eax]
  000cf	8b f4		 mov	 esi, esp
  000d1	52		 push	 edx
  000d2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d5	ff d1		 call	 ecx
  000d7	3b f4		 cmp	 esi, esp
  000d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@GetAdvise:

; 3170 : 			hr = S_OK;

  000de	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
$LN2@GetAdvise:

; 3171 : 		}
; 3172 : 		return hr;

  000e5	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]

; 3173 : 	}

  000e8	5e		 pop	 esi
  000e9	83 c4 14	 add	 esp, 20			; 00000014H
  000ec	3b ec		 cmp	 ebp, esp
  000ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f3	8b e5		 mov	 esp, ebp
  000f5	5d		 pop	 ebp
  000f6	c2 10 00	 ret	 16			; 00000010H
?GetAdvise@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJPAK0PAPAUIAdviseSink@@@Z ENDP ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetAdvise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?SetAdvise@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKKPAUIAdviseSink@@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
_pAdvSink$ = 20						; size = 4
?SetAdvise@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKKPAUIAdviseSink@@@Z PROC ; ATL::IViewObjectExImpl<COPOSGestureControl>::SetAdvise, COMDAT

; 3149 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3150 : 		T* pT = static_cast<T*>(this);

  00017	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001b	74 0d		 je	 SHORT $LN3@SetAdvise
  0001d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00020	2d 80 00 00 00	 sub	 eax, 128		; 00000080H
  00025	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00028	eb 07		 jmp	 SHORT $LN4@SetAdvise
$LN3@SetAdvise:
  0002a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@SetAdvise:
  00031	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00034	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 3151 : 		ATLTRACE(atlTraceControls,2,_T("IViewObjectExImpl::SetAdvise\n"));

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@EKHMFGBP@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
  0003c	6a 02		 push	 2
  0003e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00043	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00048	50		 push	 eax
  00049	68 4f 0c 00 00	 push	 3151			; 00000c4fH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00053	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00056	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00061	83 c4 10	 add	 esp, 16			; 00000010H

; 3152 : 		pT->m_spAdviseSink = pAdvSink;

  00064	8b 55 14	 mov	 edx, DWORD PTR _pAdvSink$[ebp]
  00067	52		 push	 edx
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  0006b	83 c1 18	 add	 ecx, 24			; 00000018H
  0006e	e8 00 00 00 00	 call	 ??4?$CComPtr@UIAdviseSink@@@ATL@@QAEPAUIAdviseSink@@PAU2@@Z ; ATL::CComPtr<IAdviseSink>::operator=

; 3153 : 		return S_OK;

  00073	33 c0		 xor	 eax, eax

; 3154 : 	}

  00075	83 c4 10	 add	 esp, 16			; 00000010H
  00078	3b ec		 cmp	 ebp, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 10 00	 ret	 16			; 00000010H
?SetAdvise@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKKPAUIAdviseSink@@@Z ENDP ; ATL::IViewObjectExImpl<COPOSGestureControl>::SetAdvise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?Unfreeze@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?Unfreeze@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z PROC ; ATL::IViewObjectExImpl<COPOSGestureControl>::Unfreeze, COMDAT

; 3142 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@Unfreeze:

; 3143 : 		ATLTRACENOTIMPL(_T("IViewObjectExImpl::Unfreeze"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1DI@BJKGFPLB@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 47 0c 00 00	 push	 3143			; 00000c47H
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@Unfreeze
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@Unfreeze
$LN1@Unfreeze:

; 3144 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
?Unfreeze@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z ENDP ; ATL::IViewObjectExImpl<COPOSGestureControl>::Unfreeze
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?Freeze@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAK@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
?Freeze@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAK@Z PROC ; ATL::IViewObjectExImpl<COPOSGestureControl>::Freeze, COMDAT

; 3138 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@Freeze:

; 3139 : 		ATLTRACENOTIMPL(_T("IViewObjectExImpl::Freeze"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1DE@PKOCJOMP@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 43 0c 00 00	 push	 3139			; 00000c43H
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@Freeze
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@Freeze
$LN1@Freeze:

; 3140 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 14 00	 ret	 20			; 00000014H
?Freeze@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAK@Z ENDP ; ATL::IViewObjectExImpl<COPOSGestureControl>::Freeze
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetColorSet@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@PAPAUtagLOGPALETTE@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 4
___formal$ = 32						; size = 4
?GetColorSet@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@PAPAUtagLOGPALETTE@@@Z PROC ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetColorSet, COMDAT

; 3130 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@GetColorSe:

; 3131 : 		ATLTRACENOTIMPL(_T("IViewObjectExImpl::GetColorSet"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1DO@OMBHOJOI@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 3b 0c 00 00	 push	 3131			; 00000c3bH
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@GetColorSe
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@GetColorSe
$LN1@GetColorSe:

; 3132 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 1c 00	 ret	 28			; 0000001cH
?GetColorSet@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@PAPAUtagLOGPALETTE@@@Z ENDP ; ATL::IViewObjectExImpl<COPOSGestureControl>::GetColorSet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?Draw@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3P6GHK@ZK@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_dwDrawAspect$ = 12					; size = 4
_lindex$ = 16						; size = 4
_pvAspect$ = 20						; size = 4
_ptd$ = 24						; size = 4
_hicTargetDev$ = 28					; size = 4
_hdcDraw$ = 32						; size = 4
_prcBounds$ = 36					; size = 4
_prcWBounds$ = 40					; size = 4
___formal$ = 44						; size = 4
___formal$ = 48						; size = 4
?Draw@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3P6GHK@ZK@Z PROC ; ATL::IViewObjectExImpl<COPOSGestureControl>::Draw, COMDAT

; 3117 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3118 : 		T* pT = static_cast<T*>(this);

  00017	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001b	74 0d		 je	 SHORT $LN3@Draw
  0001d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00020	2d 80 00 00 00	 sub	 eax, 128		; 00000080H
  00025	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00028	eb 07		 jmp	 SHORT $LN4@Draw
$LN3@Draw:
  0002a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@Draw:
  00031	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00034	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 3119 : 		ATLTRACE(atlTraceControls,2,_T("IViewObjectExImpl::Draw\n"));

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_1DC@EOPFDCAL@?$AAI?$AAV?$AAi?$AAe?$AAw?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAI?$AAm@
  0003c	6a 02		 push	 2
  0003e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00043	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00048	50		 push	 eax
  00049	68 2f 0c 00 00	 push	 3119			; 00000c2fH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00053	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00056	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00061	83 c4 10	 add	 esp, 16			; 00000010H

; 3120 : 		return pT->IViewObject_Draw(dwDrawAspect, lindex, pvAspect, ptd, hicTargetDev, hdcDraw,

  00064	8b 55 28	 mov	 edx, DWORD PTR _prcWBounds$[ebp]
  00067	52		 push	 edx
  00068	8b 45 24	 mov	 eax, DWORD PTR _prcBounds$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d 20	 mov	 ecx, DWORD PTR _hdcDraw$[ebp]
  0006f	51		 push	 ecx
  00070	8b 55 1c	 mov	 edx, DWORD PTR _hicTargetDev$[ebp]
  00073	52		 push	 edx
  00074	8b 45 18	 mov	 eax, DWORD PTR _ptd$[ebp]
  00077	50		 push	 eax
  00078	8b 4d 14	 mov	 ecx, DWORD PTR _pvAspect$[ebp]
  0007b	51		 push	 ecx
  0007c	8b 55 10	 mov	 edx, DWORD PTR _lindex$[ebp]
  0007f	52		 push	 edx
  00080	8b 45 0c	 mov	 eax, DWORD PTR _dwDrawAspect$[ebp]
  00083	50		 push	 eax
  00084	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00087	83 c1 04	 add	 ecx, 4
  0008a	e8 00 00 00 00	 call	 ?IViewObject_Draw@CComControlBase@ATL@@QAEJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3@Z ; ATL::CComControlBase::IViewObject_Draw

; 3121 : 			prcBounds, prcWBounds);
; 3122 : 	}

  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	3b ec		 cmp	 ebp, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c2 2c 00	 ret	 44			; 0000002cH
?Draw@?$IViewObjectExImpl@VCOPOSGestureControl@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3P6GHK@ZK@Z ENDP ; ATL::IViewObjectExImpl<COPOSGestureControl>::Draw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?EnableModeless@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?EnableModeless@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z PROC ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::EnableModeless, COMDAT

; 3461 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 3462 : 		ATLTRACE(atlTraceControls,2,_T("IOleInPlaceActiveObjectImpl::EnableModeless\n"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1FK@MLCEAOAF@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@
  00019	6a 02		 push	 2
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00020	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00025	50		 push	 eax
  00026	68 86 0d 00 00	 push	 3462			; 00000d86H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00030	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00033	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003e	83 c4 10	 add	 esp, 16			; 00000010H

; 3463 : 		return S_OK;

  00041	33 c0		 xor	 eax, eax

; 3464 : 	}

  00043	83 c4 08	 add	 esp, 8
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 08 00	 ret	 8
?EnableModeless@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z ENDP ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::EnableModeless
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?ResizeBorder@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?ResizeBorder@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z PROC ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::ResizeBorder, COMDAT

; 3456 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 3457 : 		ATLTRACE(atlTraceControls,2,_T("IOleInPlaceActiveObjectImpl::ResizeBorder\n"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@NONNDFDB@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@
  00019	6a 02		 push	 2
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00020	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00025	50		 push	 eax
  00026	68 81 0d 00 00	 push	 3457			; 00000d81H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00030	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00033	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003e	83 c4 10	 add	 esp, 16			; 00000010H

; 3458 : 		return S_OK;

  00041	33 c0		 xor	 eax, eax

; 3459 : 	}

  00043	83 c4 08	 add	 esp, 8
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 10 00	 ret	 16			; 00000010H
?ResizeBorder@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z ENDP ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::ResizeBorder
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnDocWindowActivate@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z
_TEXT	SEGMENT
tv78 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_fActivate$ = 12					; size = 4
?OnDocWindowActivate@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z PROC ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::OnDocWindowActivate, COMDAT

; 3445 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3446 : 		ATLTRACE(atlTraceControls,2,_T("IOleInPlaceActiveObjectImpl::OnDocWindowActivate\n"));

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_1GE@HBFPAJL@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@
  0001c	6a 02		 push	 2
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00023	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00028	50		 push	 eax
  00029	68 76 0d 00 00	 push	 3446			; 00000d76H
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00033	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00036	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00041	83 c4 10	 add	 esp, 16			; 00000010H

; 3447 : 		T* pT = static_cast<T*>(this);

  00044	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00048	74 0b		 je	 SHORT $LN4@OnDocWindo
  0004a	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 e8 7c	 sub	 eax, 124		; 0000007cH
  00050	89 45 f0	 mov	 DWORD PTR tv78[ebp], eax
  00053	eb 07		 jmp	 SHORT $LN5@OnDocWindo
$LN4@OnDocWindo:
  00055	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN5@OnDocWindo:
  0005c	8b 4d f0	 mov	 ecx, DWORD PTR tv78[ebp]
  0005f	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 3448 : 		if (fActivate == FALSE)

  00062	83 7d 0c 00	 cmp	 DWORD PTR _fActivate$[ebp], 0
  00066	75 0b		 jne	 SHORT $LN2@OnDocWindo

; 3449 : 			pT->IOleInPlaceObject_UIDeactivate();

  00068	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  0006b	83 c1 04	 add	 ecx, 4
  0006e	e8 00 00 00 00	 call	 ?IOleInPlaceObject_UIDeactivate@CComControlBase@ATL@@QAEJXZ ; ATL::CComControlBase::IOleInPlaceObject_UIDeactivate
$LN2@OnDocWindo:

; 3450 : 		return S_OK;

  00073	33 c0		 xor	 eax, eax

; 3451 : 	}

  00075	83 c4 10	 add	 esp, 16			; 00000010H
  00078	3b ec		 cmp	 ebp, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 08 00	 ret	 8
?OnDocWindowActivate@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z ENDP ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::OnDocWindowActivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnFrameWindowActivate@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnFrameWindowActivate@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z PROC ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::OnFrameWindowActivate, COMDAT

; 3440 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 3441 : 		ATLTRACE(atlTraceControls,2,_T("IOleInPlaceActiveObjectImpl::OnFrameWindowActivate\n"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1GI@CGHNFFAP@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@
  00019	6a 02		 push	 2
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00020	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00025	50		 push	 eax
  00026	68 71 0d 00 00	 push	 3441			; 00000d71H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00030	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00033	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003e	83 c4 10	 add	 esp, 16			; 00000010H

; 3442 : 		return S_OK;

  00041	33 c0		 xor	 eax, eax

; 3443 : 	}

  00043	83 c4 08	 add	 esp, 8
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 08 00	 ret	 8
?OnFrameWindowActivate@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z ENDP ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::OnFrameWindowActivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?TranslateAcceleratorW@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagMSG@@@Z
_TEXT	SEGMENT
tv182 = -92						; size = 4
tv175 = -88						; size = 4
tv78 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 8
_dwKeyMod$3 = -68					; size = 4
_spCtlSite$ = -60					; size = 4
_msg$ = -48						; size = 28
_hRet$ = -12						; size = 4
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_pMsg$ = 12						; size = 4
?TranslateAcceleratorW@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagMSG@@@Z PROC ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::TranslateAcceleratorW, COMDAT

; 3409 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d a4	 lea	 edi, DWORD PTR [ebp-92]
  0000b	b9 17 00 00 00	 mov	 ecx, 23			; 00000017H
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd

; 3410 : 		ATLTRACE(atlTraceControls,2,_T("IOleInPlaceActiveObjectImpl::TranslateAccelerator\n"));

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_1GG@KHCNGNGO@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@
  0001c	6a 02		 push	 2
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00023	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00028	50		 push	 eax
  00029	68 52 0d 00 00	 push	 3410			; 00000d52H
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00033	8d 4d b4	 lea	 ecx, DWORD PTR $T2[ebp]
  00036	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00041	83 c4 10	 add	 esp, 16			; 00000010H

; 3411 : 		T* pT = static_cast<T*>(this);

  00044	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00048	74 0b		 je	 SHORT $LN10@TranslateA
  0004a	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 e8 7c	 sub	 eax, 124		; 0000007cH
  00050	89 45 ac	 mov	 DWORD PTR tv78[ebp], eax
  00053	eb 07		 jmp	 SHORT $LN11@TranslateA
$LN10@TranslateA:
  00055	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN11@TranslateA:
  0005c	8b 4d ac	 mov	 ecx, DWORD PTR tv78[ebp]
  0005f	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 3412 : 		HRESULT hRet = S_OK;

  00062	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _hRet$[ebp], 0

; 3413 : 		MSG msg = *pMsg;

  00069	b9 07 00 00 00	 mov	 ecx, 7
  0006e	8b 75 0c	 mov	 esi, DWORD PTR _pMsg$[ebp]
  00071	8d 7d d0	 lea	 edi, DWORD PTR _msg$[ebp]
  00074	f3 a5		 rep movsd

; 3414 : 		if (pT->PreTranslateAccelerator(&msg, hRet))

  00076	8d 55 f4	 lea	 edx, DWORD PTR _hRet$[ebp]
  00079	52		 push	 edx
  0007a	8d 45 d0	 lea	 eax, DWORD PTR _msg$[ebp]
  0007d	50		 push	 eax
  0007e	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00081	83 c1 04	 add	 ecx, 4
  00084	e8 00 00 00 00	 call	 ?PreTranslateAccelerator@CComControlBase@ATL@@QAEHPAUtagMSG@@AAJ@Z ; ATL::CComControlBase::PreTranslateAccelerator
  00089	85 c0		 test	 eax, eax
  0008b	74 08		 je	 SHORT $LN2@TranslateA

; 3415 : 		{
; 3416 : 			return hRet;

  0008d	8b 45 f4	 mov	 eax, DWORD PTR _hRet$[ebp]
  00090	e9 08 01 00 00	 jmp	 $LN1@TranslateA
$LN2@TranslateA:

; 3417 : 		}
; 3418 : 
; 3419 : 		CComPtr<IOleControlSite> spCtlSite;

  00095	8d 4d c4	 lea	 ecx, DWORD PTR _spCtlSite$[ebp]
  00098	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleControlSite@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleControlSite>::CComPtr<IOleControlSite>

; 3420 : 		hRet = pT->InternalGetSite(__uuidof(IOleControlSite), (void**)&spCtlSite);

  0009d	8d 4d c4	 lea	 ecx, DWORD PTR _spCtlSite$[ebp]
  000a0	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIOleControlSite@@@ATL@@QAEPAPAUIOleControlSite@@XZ ; ATL::CComPtrBase<IOleControlSite>::operator&
  000a5	50		 push	 eax
  000a6	68 00 00 00 00	 push	 OFFSET __GUID_b196b289_bab4_101a_b69c_00aa00341d07
  000ab	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  000ae	83 c1 04	 add	 ecx, 4
  000b1	e8 00 00 00 00	 call	 ?InternalGetSite@CComControlBase@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComControlBase::InternalGetSite
  000b6	89 45 f4	 mov	 DWORD PTR _hRet$[ebp], eax

; 3421 : 		if (SUCCEEDED(hRet))

  000b9	83 7d f4 00	 cmp	 DWORD PTR _hRet$[ebp], 0
  000bd	0f 8c b3 00 00
	00		 jl	 $LN3@TranslateA

; 3422 : 		{
; 3423 : 			if (spCtlSite != NULL)

  000c3	6a 00		 push	 0
  000c5	8d 4d c4	 lea	 ecx, DWORD PTR _spCtlSite$[ebp]
  000c8	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIOleControlSite@@@ATL@@QBE_NPAUIOleControlSite@@@Z ; ATL::CComPtrBase<IOleControlSite>::operator!=
  000cd	0f b6 c8	 movzx	 ecx, al
  000d0	85 c9		 test	 ecx, ecx
  000d2	0f 84 97 00 00
	00		 je	 $LN4@TranslateA

; 3424 : 			{
; 3425 : 				DWORD dwKeyMod = 0;

  000d8	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _dwKeyMod$3[ebp], 0

; 3426 : 				if (::GetKeyState(VK_SHIFT) < 0)

  000df	8b f4		 mov	 esi, esp
  000e1	6a 10		 push	 16			; 00000010H
  000e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetKeyState@4
  000e9	3b f4		 cmp	 esi, esp
  000eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f0	0f bf d0	 movsx	 edx, ax
  000f3	85 d2		 test	 edx, edx
  000f5	7d 09		 jge	 SHORT $LN6@TranslateA

; 3427 : 					dwKeyMod += 1;	// KEYMOD_SHIFT

  000f7	8b 45 bc	 mov	 eax, DWORD PTR _dwKeyMod$3[ebp]
  000fa	83 c0 01	 add	 eax, 1
  000fd	89 45 bc	 mov	 DWORD PTR _dwKeyMod$3[ebp], eax
$LN6@TranslateA:

; 3428 : 				if (::GetKeyState(VK_CONTROL) < 0)

  00100	8b f4		 mov	 esi, esp
  00102	6a 11		 push	 17			; 00000011H
  00104	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetKeyState@4
  0010a	3b f4		 cmp	 esi, esp
  0010c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00111	0f bf c8	 movsx	 ecx, ax
  00114	85 c9		 test	 ecx, ecx
  00116	7d 09		 jge	 SHORT $LN7@TranslateA

; 3429 : 					dwKeyMod += 2;	// KEYMOD_CONTROL

  00118	8b 55 bc	 mov	 edx, DWORD PTR _dwKeyMod$3[ebp]
  0011b	83 c2 02	 add	 edx, 2
  0011e	89 55 bc	 mov	 DWORD PTR _dwKeyMod$3[ebp], edx
$LN7@TranslateA:

; 3430 : 				if (::GetKeyState(VK_MENU) < 0)

  00121	8b f4		 mov	 esi, esp
  00123	6a 12		 push	 18			; 00000012H
  00125	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetKeyState@4
  0012b	3b f4		 cmp	 esi, esp
  0012d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00132	98		 cwde
  00133	85 c0		 test	 eax, eax
  00135	7d 09		 jge	 SHORT $LN8@TranslateA

; 3431 : 					dwKeyMod += 4;	// KEYMOD_ALT

  00137	8b 4d bc	 mov	 ecx, DWORD PTR _dwKeyMod$3[ebp]
  0013a	83 c1 04	 add	 ecx, 4
  0013d	89 4d bc	 mov	 DWORD PTR _dwKeyMod$3[ebp], ecx
$LN8@TranslateA:

; 3432 : 				hRet = spCtlSite->TranslateAccelerator(&msg, dwKeyMod);

  00140	8d 4d c4	 lea	 ecx, DWORD PTR _spCtlSite$[ebp]
  00143	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleControlSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleControlSite@@@1@XZ ; ATL::CComPtrBase<IOleControlSite>::operator->
  00148	89 45 a8	 mov	 DWORD PTR tv175[ebp], eax
  0014b	8b f4		 mov	 esi, esp
  0014d	8b 55 bc	 mov	 edx, DWORD PTR _dwKeyMod$3[ebp]
  00150	52		 push	 edx
  00151	8d 45 d0	 lea	 eax, DWORD PTR _msg$[ebp]
  00154	50		 push	 eax
  00155	8b 4d a8	 mov	 ecx, DWORD PTR tv175[ebp]
  00158	51		 push	 ecx
  00159	8b 55 a8	 mov	 edx, DWORD PTR tv175[ebp]
  0015c	8b 02		 mov	 eax, DWORD PTR [edx]
  0015e	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00161	ff d1		 call	 ecx
  00163	3b f4		 cmp	 esi, esp
  00165	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016a	89 45 f4	 mov	 DWORD PTR _hRet$[ebp], eax

; 3433 : 			}

  0016d	eb 07		 jmp	 SHORT $LN3@TranslateA
$LN4@TranslateA:

; 3434 : 			else
; 3435 : 				hRet = S_FALSE;

  0016f	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _hRet$[ebp], 1
$LN3@TranslateA:

; 3436 : 		}
; 3437 : 		return (hRet == S_OK) ? S_OK : S_FALSE;

  00176	83 7d f4 00	 cmp	 DWORD PTR _hRet$[ebp], 0
  0017a	75 09		 jne	 SHORT $LN12@TranslateA
  0017c	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv182[ebp], 0
  00183	eb 07		 jmp	 SHORT $LN13@TranslateA
$LN12@TranslateA:
  00185	c7 45 a4 01 00
	00 00		 mov	 DWORD PTR tv182[ebp], 1
$LN13@TranslateA:
  0018c	8b 55 a4	 mov	 edx, DWORD PTR tv182[ebp]
  0018f	89 55 b0	 mov	 DWORD PTR $T1[ebp], edx
  00192	8d 4d c4	 lea	 ecx, DWORD PTR _spCtlSite$[ebp]
  00195	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleControlSite@@@ATL@@QAE@XZ
  0019a	8b 45 b0	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@TranslateA:

; 3438 : 	}

  0019d	52		 push	 edx
  0019e	8b cd		 mov	 ecx, ebp
  001a0	50		 push	 eax
  001a1	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN18@TranslateA
  001a7	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001ac	58		 pop	 eax
  001ad	5a		 pop	 edx
  001ae	5f		 pop	 edi
  001af	5e		 pop	 esi
  001b0	83 c4 5c	 add	 esp, 92			; 0000005cH
  001b3	3b ec		 cmp	 ebp, esp
  001b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ba	8b e5		 mov	 esp, ebp
  001bc	5d		 pop	 ebp
  001bd	c2 08 00	 ret	 8
$LN18@TranslateA:
  001c0	03 00 00 00	 DD	 3
  001c4	00 00 00 00	 DD	 $LN17@TranslateA
$LN17@TranslateA:
  001c8	f4 ff ff ff	 DD	 -12			; fffffff4H
  001cc	04 00 00 00	 DD	 4
  001d0	00 00 00 00	 DD	 $LN14@TranslateA
  001d4	d0 ff ff ff	 DD	 -48			; ffffffd0H
  001d8	1c 00 00 00	 DD	 28			; 0000001cH
  001dc	00 00 00 00	 DD	 $LN15@TranslateA
  001e0	c4 ff ff ff	 DD	 -60			; ffffffc4H
  001e4	04 00 00 00	 DD	 4
  001e8	00 00 00 00	 DD	 $LN16@TranslateA
$LN16@TranslateA:
  001ec	73		 DB	 115			; 00000073H
  001ed	70		 DB	 112			; 00000070H
  001ee	43		 DB	 67			; 00000043H
  001ef	74		 DB	 116			; 00000074H
  001f0	6c		 DB	 108			; 0000006cH
  001f1	53		 DB	 83			; 00000053H
  001f2	69		 DB	 105			; 00000069H
  001f3	74		 DB	 116			; 00000074H
  001f4	65		 DB	 101			; 00000065H
  001f5	00		 DB	 0
$LN15@TranslateA:
  001f6	6d		 DB	 109			; 0000006dH
  001f7	73		 DB	 115			; 00000073H
  001f8	67		 DB	 103			; 00000067H
  001f9	00		 DB	 0
$LN14@TranslateA:
  001fa	68		 DB	 104			; 00000068H
  001fb	52		 DB	 82			; 00000052H
  001fc	65		 DB	 101			; 00000065H
  001fd	74		 DB	 116			; 00000074H
  001fe	00		 DB	 0
?TranslateAcceleratorW@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagMSG@@@Z ENDP ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::TranslateAcceleratorW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?ContextSensitiveHelp@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?ContextSensitiveHelp@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z PROC ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::ContextSensitiveHelp, COMDAT

; 3402 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@ContextSen:

; 3403 : 		ATLTRACENOTIMPL(_T("IOleInPlaceActiveObjectImpl::ContextSensitiveHelp"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1GE@JEOLIANC@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 4b 0d 00 00	 push	 3403			; 00000d4bH
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@ContextSen
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@ContextSen
$LN1@ContextSen:

; 3404 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
?ContextSensitiveHelp@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJH@Z ENDP ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::ContextSensitiveHelp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetWindow@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUHWND__@@@Z
_TEXT	SEGMENT
tv95 = -24						; size = 4
tv78 = -20						; size = 4
$T1 = -16						; size = 8
_hRes$ = -8						; size = 4
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_phwnd$ = 12						; size = 4
?GetWindow@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUHWND__@@@Z PROC ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::GetWindow, COMDAT

; 3386 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3387 : 		ATLTRACE(atlTraceControls,2,_T("IOleInPlaceActiveObjectImpl::GetWindow\n"));

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@GCGKPCBJ@?$AAI?$AAO?$AAl?$AAe?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@
  00022	6a 02		 push	 2
  00024	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00029	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  0002e	50		 push	 eax
  0002f	68 3b 0d 00 00	 push	 3387			; 00000d3bH
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00039	8d 4d f0	 lea	 ecx, DWORD PTR $T1[ebp]
  0003c	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00047	83 c4 10	 add	 esp, 16			; 00000010H

; 3388 : 		T* pT = static_cast<T*>(this);

  0004a	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0004e	74 0b		 je	 SHORT $LN5@GetWindow
  00050	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00053	83 e8 7c	 sub	 eax, 124		; 0000007cH
  00056	89 45 ec	 mov	 DWORD PTR tv78[ebp], eax
  00059	eb 07		 jmp	 SHORT $LN6@GetWindow
$LN5@GetWindow:
  0005b	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN6@GetWindow:
  00062	8b 4d ec	 mov	 ecx, DWORD PTR tv78[ebp]
  00065	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 3389 : 		HRESULT hRes = E_POINTER;

  00068	c7 45 f8 03 40
	00 80		 mov	 DWORD PTR _hRes$[ebp], -2147467261 ; 80004003H

; 3390 : 
; 3391 : 		if (pT->m_bWasOnceWindowless)

  0006f	8b 55 fc	 mov	 edx, DWORD PTR _pT$[ebp]
  00072	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  00075	c1 e8 08	 shr	 eax, 8
  00078	83 e0 01	 and	 eax, 1
  0007b	74 07		 je	 SHORT $LN2@GetWindow

; 3392 : 			return E_FAIL;

  0007d	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00082	eb 32		 jmp	 SHORT $LN1@GetWindow
$LN2@GetWindow:

; 3393 : 
; 3394 : 		if (phwnd != NULL)

  00084	83 7d 0c 00	 cmp	 DWORD PTR _phwnd$[ebp], 0
  00088	74 29		 je	 SHORT $LN3@GetWindow

; 3395 : 		{
; 3396 : 			*phwnd = pT->m_hWnd;

  0008a	8b 4d 0c	 mov	 ecx, DWORD PTR _phwnd$[ebp]
  0008d	8b 55 fc	 mov	 edx, DWORD PTR _pT$[ebp]
  00090	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  00093	89 01		 mov	 DWORD PTR [ecx], eax

; 3397 : 			hRes = (*phwnd == NULL) ? E_UNEXPECTED : S_OK;

  00095	8b 4d 0c	 mov	 ecx, DWORD PTR _phwnd$[ebp]
  00098	83 39 00	 cmp	 DWORD PTR [ecx], 0
  0009b	75 09		 jne	 SHORT $LN7@GetWindow
  0009d	c7 45 e8 ff ff
	00 80		 mov	 DWORD PTR tv95[ebp], -2147418113 ; 8000ffffH
  000a4	eb 07		 jmp	 SHORT $LN8@GetWindow
$LN7@GetWindow:
  000a6	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN8@GetWindow:
  000ad	8b 55 e8	 mov	 edx, DWORD PTR tv95[ebp]
  000b0	89 55 f8	 mov	 DWORD PTR _hRes$[ebp], edx
$LN3@GetWindow:

; 3398 : 		}
; 3399 : 		return hRes;

  000b3	8b 45 f8	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@GetWindow:

; 3400 : 	}

  000b6	83 c4 18	 add	 esp, 24			; 00000018H
  000b9	3b ec		 cmp	 ebp, esp
  000bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 08 00	 ret	 8
?GetWindow@?$IOleInPlaceActiveObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUHWND__@@@Z ENDP ; ATL::IOleInPlaceActiveObjectImpl<COPOSGestureControl>::GetWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnPostVerbDiscardUndo@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnPostVerbDiscardUndo@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbDiscardUndo, COMDAT
; _this$ = ecx

; 2556 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2557 : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 2558 : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?OnPostVerbDiscardUndo@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbDiscardUndo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnPreVerbDiscardUndo@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnPreVerbDiscardUndo@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbDiscardUndo, COMDAT
; _this$ = ecx

; 2552 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2553 : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 2554 : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?OnPreVerbDiscardUndo@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbDiscardUndo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnPostVerbOpen@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnPostVerbOpen@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbOpen, COMDAT
; _this$ = ecx

; 2548 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2549 : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 2550 : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?OnPostVerbOpen@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbOpen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnPreVerbOpen@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnPreVerbOpen@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbOpen, COMDAT
; _this$ = ecx

; 2544 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2545 : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 2546 : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?OnPreVerbOpen@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbOpen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnPostVerbHide@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnPostVerbHide@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbHide, COMDAT
; _this$ = ecx

; 2540 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2541 : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 2542 : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?OnPostVerbHide@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbHide
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnPreVerbHide@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnPreVerbHide@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbHide, COMDAT
; _this$ = ecx

; 2536 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2537 : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 2538 : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?OnPreVerbHide@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbHide
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnPostVerbUIActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnPostVerbUIActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbUIActivate, COMDAT
; _this$ = ecx

; 2532 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2533 : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 2534 : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?OnPostVerbUIActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbUIActivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnPreVerbUIActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnPreVerbUIActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbUIActivate, COMDAT
; _this$ = ecx

; 2528 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2529 : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 2530 : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?OnPreVerbUIActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbUIActivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnPostVerbInPlaceActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnPostVerbInPlaceActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbInPlaceActivate, COMDAT
; _this$ = ecx

; 2524 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2525 : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 2526 : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?OnPostVerbInPlaceActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbInPlaceActivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnPreVerbInPlaceActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnPreVerbInPlaceActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbInPlaceActivate, COMDAT
; _this$ = ecx

; 2520 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2521 : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 2522 : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?OnPreVerbInPlaceActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbInPlaceActivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnPostVerbShow@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnPostVerbShow@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbShow, COMDAT
; _this$ = ecx

; 2516 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2517 : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 2518 : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?OnPostVerbShow@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbShow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnPreVerbShow@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnPreVerbShow@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbShow, COMDAT
; _this$ = ecx

; 2512 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2513 : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 2514 : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?OnPreVerbShow@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbShow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?SetColorScheme@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagLOGPALETTE@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?SetColorScheme@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagLOGPALETTE@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::SetColorScheme, COMDAT

; 2506 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@SetColorSc:

; 2507 : 		ATLTRACENOTIMPL(_T("IOleObjectImpl::SetColorScheme"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1DO@PBDGGEPN@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 cb 09 00 00	 push	 2507			; 000009cbH
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@SetColorSc
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@SetColorSc
$LN1@SetColorSc:

; 2508 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
?SetColorScheme@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagLOGPALETTE@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::SetColorScheme
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetMiscStatus@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAK@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
_dwAspect$ = 12						; size = 4
_pdwStatus$ = 16					; size = 4
?GetMiscStatus@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAK@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::GetMiscStatus, COMDAT

; 2501 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 2502 : 		ATLTRACE(atlTraceControls,2,_T("IOleObjectImpl::GetMiscStatus\n"));

  00015	68 00 00 00 00	 push	 OFFSET ??_C@_1DO@GENDACH@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  0001a	6a 02		 push	 2
  0001c	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00021	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00026	50		 push	 eax
  00027	68 c6 09 00 00	 push	 2502			; 000009c6H
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00031	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00034	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003f	83 c4 10	 add	 esp, 16			; 00000010H

; 2503 : 		return OleRegGetMiscStatus(T::GetObjectCLSID(), dwAspect, pdwStatus);

  00042	8b f4		 mov	 esi, esp
  00044	8b 45 10	 mov	 eax, DWORD PTR _pdwStatus$[ebp]
  00047	50		 push	 eax
  00048	8b 4d 0c	 mov	 ecx, DWORD PTR _dwAspect$[ebp]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?GetObjectCLSID@?$CComCoClass@VCOPOSGestureControl@@$1?CLSID_OPOSGestureControl@@3U_GUID@@B@ATL@@SGABU_GUID@@XZ ; ATL::CComCoClass<COPOSGestureControl,&CLSID_OPOSGestureControl>::GetObjectCLSID
  00051	50		 push	 eax
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OleRegGetMiscStatus@12
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2504 : 	}

  0005f	5e		 pop	 esi
  00060	83 c4 08	 add	 esp, 8
  00063	3b ec		 cmp	 ebp, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 0c 00	 ret	 12			; 0000000cH
?GetMiscStatus@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAK@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::GetMiscStatus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?EnumAdvise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumSTATDATA@@@Z
_TEXT	SEGMENT
tv153 = -24						; size = 4
tv68 = -20						; size = 4
$T1 = -16						; size = 8
_hRes$ = -8						; size = 4
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_ppenumAdvise$ = 12					; size = 4
?EnumAdvise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumSTATDATA@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::EnumAdvise, COMDAT

; 2485 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2486 : 		T* pT = static_cast<T*>(this);

  0001e	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00022	74 0b		 je	 SHORT $LN5@EnumAdvise
  00024	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00027	83 e8 78	 sub	 eax, 120		; 00000078H
  0002a	89 45 ec	 mov	 DWORD PTR tv68[ebp], eax
  0002d	eb 07		 jmp	 SHORT $LN6@EnumAdvise
$LN5@EnumAdvise:
  0002f	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN6@EnumAdvise:
  00036	8b 4d ec	 mov	 ecx, DWORD PTR tv68[ebp]
  00039	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 2487 : 		ATLTRACE(atlTraceControls,2,_T("IOleObjectImpl::EnumAdvise\n"));

  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1DI@IJKKKNHF@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  00041	6a 02		 push	 2
  00043	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00048	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  0004d	50		 push	 eax
  0004e	68 b7 09 00 00	 push	 2487			; 000009b7H
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00058	8d 4d f0	 lea	 ecx, DWORD PTR $T1[ebp]
  0005b	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00066	83 c4 10	 add	 esp, 16			; 00000010H

; 2488 : 		ATLASSERT(ppenumAdvise != NULL);

  00069	83 7d 0c 00	 cmp	 DWORD PTR _ppenumAdvise$[ebp], 0
  0006d	75 26		 jne	 SHORT $LN7@EnumAdvise
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@PHHHDEOE@?$AAp?$AAp?$AAe?$AAn?$AAu?$AAm?$AAA?$AAd?$AAv?$AAi?$AAs?$AAe?$AA?5?$AA?$CB?$AA?$DN@
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00079	6a 00		 push	 0
  0007b	68 b8 09 00 00	 push	 2488			; 000009b8H
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00085	6a 02		 push	 2
  00087	e8 00 00 00 00	 call	 __CrtDbgReportW
  0008c	83 c4 18	 add	 esp, 24			; 00000018H
  0008f	83 f8 01	 cmp	 eax, 1
  00092	75 01		 jne	 SHORT $LN7@EnumAdvise
  00094	cc		 int	 3
$LN7@EnumAdvise:

; 2489 : 		if (ppenumAdvise == NULL)

  00095	83 7d 0c 00	 cmp	 DWORD PTR _ppenumAdvise$[ebp], 0
  00099	75 07		 jne	 SHORT $LN2@EnumAdvise

; 2490 : 			return E_POINTER;

  0009b	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  000a0	eb 53		 jmp	 SHORT $LN1@EnumAdvise
$LN2@EnumAdvise:

; 2491 : 		*ppenumAdvise = NULL;

  000a2	8b 45 0c	 mov	 eax, DWORD PTR _ppenumAdvise$[ebp]
  000a5	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 2492 : 		HRESULT hRes = E_FAIL;

  000ab	c7 45 f8 05 40
	00 80		 mov	 DWORD PTR _hRes$[ebp], -2147467259 ; 80004005H

; 2493 : 		if (pT->m_spOleAdviseHolder != NULL)

  000b2	6a 00		 push	 0
  000b4	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  000b7	83 c1 10	 add	 ecx, 16			; 00000010H
  000ba	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBE_NPAUIOleAdviseHolder@@@Z ; ATL::CComPtrBase<IOleAdviseHolder>::operator!=
  000bf	0f b6 c8	 movzx	 ecx, al
  000c2	85 c9		 test	 ecx, ecx
  000c4	74 2c		 je	 SHORT $LN3@EnumAdvise

; 2494 : 			hRes = pT->m_spOleAdviseHolder->EnumAdvise(ppenumAdvise);

  000c6	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  000c9	83 c1 10	 add	 ecx, 16			; 00000010H
  000cc	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleAdviseHolder@@@1@XZ ; ATL::CComPtrBase<IOleAdviseHolder>::operator->
  000d1	89 45 e8	 mov	 DWORD PTR tv153[ebp], eax
  000d4	8b f4		 mov	 esi, esp
  000d6	8b 55 0c	 mov	 edx, DWORD PTR _ppenumAdvise$[ebp]
  000d9	52		 push	 edx
  000da	8b 45 e8	 mov	 eax, DWORD PTR tv153[ebp]
  000dd	50		 push	 eax
  000de	8b 4d e8	 mov	 ecx, DWORD PTR tv153[ebp]
  000e1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e3	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000e6	ff d0		 call	 eax
  000e8	3b f4		 cmp	 esi, esp
  000ea	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ef	89 45 f8	 mov	 DWORD PTR _hRes$[ebp], eax
$LN3@EnumAdvise:

; 2495 : 
; 2496 : 		return hRes;

  000f2	8b 45 f8	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@EnumAdvise:

; 2497 : 	}

  000f5	5e		 pop	 esi
  000f6	83 c4 18	 add	 esp, 24			; 00000018H
  000f9	3b ec		 cmp	 ebp, esp
  000fb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00100	8b e5		 mov	 esp, ebp
  00102	5d		 pop	 ebp
  00103	c2 08 00	 ret	 8
?EnumAdvise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumSTATDATA@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::EnumAdvise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?Unadvise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z
_TEXT	SEGMENT
tv142 = -24						; size = 4
tv68 = -20						; size = 4
$T1 = -16						; size = 8
_hRes$ = -8						; size = 4
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_dwConnection$ = 12					; size = 4
?Unadvise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::Unadvise, COMDAT

; 2476 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2477 : 		T* pT = static_cast<T*>(this);

  0001e	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00022	74 0b		 je	 SHORT $LN4@Unadvise
  00024	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00027	83 e8 78	 sub	 eax, 120		; 00000078H
  0002a	89 45 ec	 mov	 DWORD PTR tv68[ebp], eax
  0002d	eb 07		 jmp	 SHORT $LN5@Unadvise
$LN4@Unadvise:
  0002f	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN5@Unadvise:
  00036	8b 4d ec	 mov	 ecx, DWORD PTR tv68[ebp]
  00039	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 2478 : 		ATLTRACE(atlTraceControls,2,_T("IOleObjectImpl::Unadvise\n"));

  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1DE@DIPMKMJO@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  00041	6a 02		 push	 2
  00043	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00048	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  0004d	50		 push	 eax
  0004e	68 ae 09 00 00	 push	 2478			; 000009aeH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00058	8d 4d f0	 lea	 ecx, DWORD PTR $T1[ebp]
  0005b	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00066	83 c4 10	 add	 esp, 16			; 00000010H

; 2479 : 		HRESULT hRes = E_FAIL;

  00069	c7 45 f8 05 40
	00 80		 mov	 DWORD PTR _hRes$[ebp], -2147467259 ; 80004005H

; 2480 : 		if (pT->m_spOleAdviseHolder != NULL)

  00070	6a 00		 push	 0
  00072	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00075	83 c1 10	 add	 ecx, 16			; 00000010H
  00078	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBE_NPAUIOleAdviseHolder@@@Z ; ATL::CComPtrBase<IOleAdviseHolder>::operator!=
  0007d	0f b6 d0	 movzx	 edx, al
  00080	85 d2		 test	 edx, edx
  00082	74 2c		 je	 SHORT $LN2@Unadvise

; 2481 : 			hRes = pT->m_spOleAdviseHolder->Unadvise(dwConnection);

  00084	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00087	83 c1 10	 add	 ecx, 16			; 00000010H
  0008a	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleAdviseHolder@@@1@XZ ; ATL::CComPtrBase<IOleAdviseHolder>::operator->
  0008f	89 45 e8	 mov	 DWORD PTR tv142[ebp], eax
  00092	8b f4		 mov	 esi, esp
  00094	8b 45 0c	 mov	 eax, DWORD PTR _dwConnection$[ebp]
  00097	50		 push	 eax
  00098	8b 4d e8	 mov	 ecx, DWORD PTR tv142[ebp]
  0009b	51		 push	 ecx
  0009c	8b 55 e8	 mov	 edx, DWORD PTR tv142[ebp]
  0009f	8b 02		 mov	 eax, DWORD PTR [edx]
  000a1	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000a4	ff d1		 call	 ecx
  000a6	3b f4		 cmp	 esi, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ad	89 45 f8	 mov	 DWORD PTR _hRes$[ebp], eax
$LN2@Unadvise:

; 2482 : 		return hRes;

  000b0	8b 45 f8	 mov	 eax, DWORD PTR _hRes$[ebp]

; 2483 : 	}

  000b3	5e		 pop	 esi
  000b4	83 c4 18	 add	 esp, 24			; 00000018H
  000b7	3b ec		 cmp	 ebp, esp
  000b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c2 08 00	 ret	 8
?Unadvise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::Unadvise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?Advise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIAdviseSink@@PAK@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_pAdvSink$ = 12						; size = 4
_pdwConnection$ = 16					; size = 4
?Advise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIAdviseSink@@PAK@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::Advise, COMDAT

; 2470 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2471 : 		T* pT = static_cast<T*>(this);

  00017	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001b	74 0b		 je	 SHORT $LN3@Advise
  0001d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00020	83 e8 78	 sub	 eax, 120		; 00000078H
  00023	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00026	eb 07		 jmp	 SHORT $LN4@Advise
$LN3@Advise:
  00028	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@Advise:
  0002f	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00032	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 2472 : 		ATLTRACE(atlTraceControls,2,_T("IOleObjectImpl::Advise\n"));

  00035	68 00 00 00 00	 push	 OFFSET ??_C@_1DA@OJLCEIKD@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  0003a	6a 02		 push	 2
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00041	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00046	50		 push	 eax
  00047	68 a8 09 00 00	 push	 2472			; 000009a8H
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00051	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00054	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0005f	83 c4 10	 add	 esp, 16			; 00000010H

; 2473 : 		return pT->IOleObject_Advise(pAdvSink, pdwConnection);

  00062	8b 55 10	 mov	 edx, DWORD PTR _pdwConnection$[ebp]
  00065	52		 push	 edx
  00066	8b 45 0c	 mov	 eax, DWORD PTR _pAdvSink$[ebp]
  00069	50		 push	 eax
  0006a	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  0006d	83 c1 04	 add	 ecx, 4
  00070	e8 00 00 00 00	 call	 ?IOleObject_Advise@CComControlBase@ATL@@QAEJPAUIAdviseSink@@PAK@Z ; ATL::CComControlBase::IOleObject_Advise

; 2474 : 	}

  00075	83 c4 10	 add	 esp, 16			; 00000010H
  00078	3b ec		 cmp	 ebp, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 0c 00	 ret	 12			; 0000000cH
?Advise@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIAdviseSink@@PAK@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::Advise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetExtent@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUtagSIZE@@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_dwDrawAspect$ = 12					; size = 4
_psizel$ = 16						; size = 4
?GetExtent@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUtagSIZE@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::GetExtent, COMDAT

; 2457 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2458 : 		T* pT = static_cast<T*>(this);

  00017	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001b	74 0b		 je	 SHORT $LN5@GetExtent
  0001d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00020	83 e8 78	 sub	 eax, 120		; 00000078H
  00023	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00026	eb 07		 jmp	 SHORT $LN6@GetExtent
$LN5@GetExtent:
  00028	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN6@GetExtent:
  0002f	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00032	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 2459 : 		ATLTRACE(atlTraceControls,2,_T("IOleObjectImpl::GetExtent\n"));

  00035	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@IGBKGHLP@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  0003a	6a 02		 push	 2
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00041	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00046	50		 push	 eax
  00047	68 9b 09 00 00	 push	 2459			; 0000099bH
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00051	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00054	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0005f	83 c4 10	 add	 esp, 16			; 00000010H

; 2460 : 		if (dwDrawAspect != DVASPECT_CONTENT)

  00062	83 7d 0c 01	 cmp	 DWORD PTR _dwDrawAspect$[ebp], 1
  00066	74 07		 je	 SHORT $LN2@GetExtent

; 2461 : 			return E_FAIL;

  00068	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  0006d	eb 20		 jmp	 SHORT $LN1@GetExtent
$LN2@GetExtent:

; 2462 : 		if (psizel == NULL)

  0006f	83 7d 10 00	 cmp	 DWORD PTR _psizel$[ebp], 0
  00073	75 07		 jne	 SHORT $LN3@GetExtent

; 2463 : 			return E_POINTER;

  00075	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0007a	eb 13		 jmp	 SHORT $LN1@GetExtent
$LN3@GetExtent:

; 2464 : 		*psizel = pT->m_sizeExtent;

  0007c	8b 55 fc	 mov	 edx, DWORD PTR _pT$[ebp]
  0007f	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00082	8b 4a 2c	 mov	 ecx, DWORD PTR [edx+44]
  00085	8b 55 10	 mov	 edx, DWORD PTR _psizel$[ebp]
  00088	89 02		 mov	 DWORD PTR [edx], eax
  0008a	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 2465 : 		return S_OK;

  0008d	33 c0		 xor	 eax, eax
$LN1@GetExtent:

; 2466 : 	}

  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	3b ec		 cmp	 ebp, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c2 0c 00	 ret	 12			; 0000000cH
?GetExtent@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUtagSIZE@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::GetExtent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?SetExtent@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUtagSIZE@@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_dwDrawAspect$ = 12					; size = 4
_psizel$ = 16						; size = 4
?SetExtent@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUtagSIZE@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::SetExtent, COMDAT

; 2449 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2450 : 		T* pT = static_cast<T*>(this);

  00017	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001b	74 0b		 je	 SHORT $LN3@SetExtent
  0001d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00020	83 e8 78	 sub	 eax, 120		; 00000078H
  00023	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00026	eb 07		 jmp	 SHORT $LN4@SetExtent
$LN3@SetExtent:
  00028	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@SetExtent:
  0002f	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00032	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 2451 : 		ATLTRACE(atlTraceControls,2,_T("IOleObjectImpl::SetExtent\n"));

  00035	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@HDEMLOPO@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  0003a	6a 02		 push	 2
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00041	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00046	50		 push	 eax
  00047	68 93 09 00 00	 push	 2451			; 00000993H
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00051	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00054	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0005f	83 c4 10	 add	 esp, 16			; 00000010H

; 2452 : 		return pT->IOleObject_SetExtent(dwDrawAspect, psizel);

  00062	8b 55 10	 mov	 edx, DWORD PTR _psizel$[ebp]
  00065	52		 push	 edx
  00066	8b 45 0c	 mov	 eax, DWORD PTR _dwDrawAspect$[ebp]
  00069	50		 push	 eax
  0006a	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  0006d	83 c1 04	 add	 ecx, 4
  00070	e8 00 00 00 00	 call	 ?IOleObject_SetExtent@CComControlBase@ATL@@QAEJKPAUtagSIZE@@@Z ; ATL::CComControlBase::IOleObject_SetExtent

; 2453 : 	}

  00075	83 c4 10	 add	 esp, 16			; 00000010H
  00078	3b ec		 cmp	 ebp, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 0c 00	 ret	 12			; 0000000cH
?SetExtent@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUtagSIZE@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::SetExtent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetUserType@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPA_W@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
_dwFormOfType$ = 12					; size = 4
_pszUserType$ = 16					; size = 4
?GetUserType@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPA_W@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::GetUserType, COMDAT

; 2442 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 2443 : 		ATLTRACE(atlTraceControls,2,_T("IOleObjectImpl::GetUserType\n"));

  00015	68 00 00 00 00	 push	 OFFSET ??_C@_1DK@OLKKBIEP@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  0001a	6a 02		 push	 2
  0001c	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00021	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00026	50		 push	 eax
  00027	68 8b 09 00 00	 push	 2443			; 0000098bH
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00031	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00034	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003f	83 c4 10	 add	 esp, 16			; 00000010H

; 2444 : 		return OleRegGetUserType(T::GetObjectCLSID(), dwFormOfType, pszUserType);

  00042	8b f4		 mov	 esi, esp
  00044	8b 45 10	 mov	 eax, DWORD PTR _pszUserType$[ebp]
  00047	50		 push	 eax
  00048	8b 4d 0c	 mov	 ecx, DWORD PTR _dwFormOfType$[ebp]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?GetObjectCLSID@?$CComCoClass@VCOPOSGestureControl@@$1?CLSID_OPOSGestureControl@@3U_GUID@@B@ATL@@SGABU_GUID@@XZ ; ATL::CComCoClass<COPOSGestureControl,&CLSID_OPOSGestureControl>::GetObjectCLSID
  00051	50		 push	 eax
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OleRegGetUserType@12
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2445 : 	}

  0005f	5e		 pop	 esi
  00060	83 c4 08	 add	 esp, 8
  00063	3b ec		 cmp	 ebp, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 0c 00	 ret	 12			; 0000000cH
?GetUserType@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPA_W@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::GetUserType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetUserClassID@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
_pClsid$ = 12						; size = 4
?GetUserClassID@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::GetUserClassID, COMDAT

; 2431 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 2432 : 		ATLTRACE(atlTraceControls,2,_T("IOleObjectImpl::GetUserClassID\n"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1EA@KFGOFNKC@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  00019	6a 02		 push	 2
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00020	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00025	50		 push	 eax
  00026	68 80 09 00 00	 push	 2432			; 00000980H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00030	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00033	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003e	83 c4 10	 add	 esp, 16			; 00000010H

; 2433 : 		ATLASSERT(pClsid);

  00041	83 7d 0c 00	 cmp	 DWORD PTR _pClsid$[ebp], 0
  00045	75 26		 jne	 SHORT $LN4@GetUserCla
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_1O@PBGNBMDG@?$AAp?$AAC?$AAl?$AAs?$AAi?$AAd@
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00051	6a 00		 push	 0
  00053	68 81 09 00 00	 push	 2433			; 00000981H
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0005d	6a 02		 push	 2
  0005f	e8 00 00 00 00	 call	 __CrtDbgReportW
  00064	83 c4 18	 add	 esp, 24			; 00000018H
  00067	83 f8 01	 cmp	 eax, 1
  0006a	75 01		 jne	 SHORT $LN4@GetUserCla
  0006c	cc		 int	 3
$LN4@GetUserCla:

; 2434 : 		if (!pClsid)

  0006d	83 7d 0c 00	 cmp	 DWORD PTR _pClsid$[ebp], 0
  00071	75 07		 jne	 SHORT $LN2@GetUserCla

; 2435 : 			return E_POINTER;

  00073	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00078	eb 20		 jmp	 SHORT $LN1@GetUserCla
$LN2@GetUserCla:

; 2436 : 		*pClsid = T::GetObjectCLSID();

  0007a	e8 00 00 00 00	 call	 ?GetObjectCLSID@?$CComCoClass@VCOPOSGestureControl@@$1?CLSID_OPOSGestureControl@@3U_GUID@@B@ATL@@SGABU_GUID@@XZ ; ATL::CComCoClass<COPOSGestureControl,&CLSID_OPOSGestureControl>::GetObjectCLSID
  0007f	8b 4d 0c	 mov	 ecx, DWORD PTR _pClsid$[ebp]
  00082	8b 10		 mov	 edx, DWORD PTR [eax]
  00084	89 11		 mov	 DWORD PTR [ecx], edx
  00086	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00089	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  0008c	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0008f	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00092	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00095	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 2437 : 		return S_OK;

  00098	33 c0		 xor	 eax, eax
$LN1@GetUserCla:

; 2438 : 	}

  0009a	83 c4 08	 add	 esp, 8
  0009d	3b ec		 cmp	 ebp, esp
  0009f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 08 00	 ret	 8
?GetUserClassID@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::GetUserClassID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?IsUpToDate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
?IsUpToDate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::IsUpToDate, COMDAT

; 2426 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 2427 : 		ATLTRACE(atlTraceControls,2,_T("IOleObjectImpl::IsUpToDate\n"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1DI@JMCOGOPO@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  00019	6a 02		 push	 2
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00020	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00025	50		 push	 eax
  00026	68 7b 09 00 00	 push	 2427			; 0000097bH
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00030	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00033	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003e	83 c4 10	 add	 esp, 16			; 00000010H

; 2428 : 		return S_OK;

  00041	33 c0		 xor	 eax, eax

; 2429 : 	}

  00043	83 c4 08	 add	 esp, 8
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 04 00	 ret	 4
?IsUpToDate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::IsUpToDate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?Update@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
?Update@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::Update, COMDAT

; 2421 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 2422 : 		ATLTRACE(atlTraceControls,2,_T("IOleObjectImpl::Update\n"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1DA@FNILLDED@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  00019	6a 02		 push	 2
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00020	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00025	50		 push	 eax
  00026	68 76 09 00 00	 push	 2422			; 00000976H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00030	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00033	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003e	83 c4 10	 add	 esp, 16			; 00000010H

; 2423 : 		return S_OK;

  00041	33 c0		 xor	 eax, eax

; 2424 : 	}

  00043	83 c4 08	 add	 esp, 8
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 04 00	 ret	 4
?Update@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::Update
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?EnumVerbs@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumOLEVERB@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
_ppEnumOleVerb$ = 12					; size = 4
?EnumVerbs@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumOLEVERB@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::EnumVerbs, COMDAT

; 2413 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 2414 : 		ATLTRACE(atlTraceControls,2,_T("IOleObjectImpl::EnumVerbs\n"));

  00015	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@PNMFEDJ@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  0001a	6a 02		 push	 2
  0001c	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00021	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00026	50		 push	 eax
  00027	68 6e 09 00 00	 push	 2414			; 0000096eH
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00031	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00034	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003f	83 c4 10	 add	 esp, 16			; 00000010H

; 2415 : 		ATLASSERT(ppEnumOleVerb);

  00042	83 7d 0c 00	 cmp	 DWORD PTR _ppEnumOleVerb$[ebp], 0
  00046	75 26		 jne	 SHORT $LN4@EnumVerbs
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@CEHACOFH@?$AAp?$AAp?$AAE?$AAn?$AAu?$AAm?$AAO?$AAl?$AAe?$AAV?$AAe?$AAr?$AAb@
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00052	6a 00		 push	 0
  00054	68 6f 09 00 00	 push	 2415			; 0000096fH
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0005e	6a 02		 push	 2
  00060	e8 00 00 00 00	 call	 __CrtDbgReportW
  00065	83 c4 18	 add	 esp, 24			; 00000018H
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 01		 jne	 SHORT $LN4@EnumVerbs
  0006d	cc		 int	 3
$LN4@EnumVerbs:

; 2416 : 		if (!ppEnumOleVerb)

  0006e	83 7d 0c 00	 cmp	 DWORD PTR _ppEnumOleVerb$[ebp], 0
  00072	75 07		 jne	 SHORT $LN2@EnumVerbs

; 2417 : 			return E_POINTER;

  00074	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00079	eb 19		 jmp	 SHORT $LN1@EnumVerbs
$LN2@EnumVerbs:

; 2418 : 		return OleRegEnumVerbs(T::GetObjectCLSID(), ppEnumOleVerb);

  0007b	8b f4		 mov	 esi, esp
  0007d	8b 4d 0c	 mov	 ecx, DWORD PTR _ppEnumOleVerb$[ebp]
  00080	51		 push	 ecx
  00081	e8 00 00 00 00	 call	 ?GetObjectCLSID@?$CComCoClass@VCOPOSGestureControl@@$1?CLSID_OPOSGestureControl@@3U_GUID@@B@ATL@@SGABU_GUID@@XZ ; ATL::CComCoClass<COPOSGestureControl,&CLSID_OPOSGestureControl>::GetObjectCLSID
  00086	50		 push	 eax
  00087	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OleRegEnumVerbs@8
  0008d	3b f4		 cmp	 esi, esp
  0008f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@EnumVerbs:

; 2419 : 	}

  00094	5e		 pop	 esi
  00095	83 c4 08	 add	 esp, 8
  00098	3b ec		 cmp	 ebp, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c2 08 00	 ret	 8
?EnumVerbs@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIEnumOLEVERB@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::EnumVerbs
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?DoVerb@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJJPAUtagMSG@@PAUIOleClientSite@@JPAUHWND__@@PBUtagRECT@@@Z
_TEXT	SEGMENT
tv159 = -24						; size = 4
tv68 = -20						; size = 4
$T1 = -16						; size = 8
_hr$ = -8						; size = 4
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_iVerb$ = 12						; size = 4
___formal$ = 16						; size = 4
_pActiveSite$ = 20					; size = 4
___formal$ = 24						; size = 4
_hwndParent$ = 28					; size = 4
_lprcPosRect$ = 32					; size = 4
?DoVerb@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJJPAUtagMSG@@PAUIOleClientSite@@JPAUHWND__@@PBUtagRECT@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerb, COMDAT

; 2363 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2364 : 		T* pT = static_cast<T*>(this);

  0001d	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00021	74 0b		 je	 SHORT $LN16@DoVerb
  00023	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 e8 78	 sub	 eax, 120		; 00000078H
  00029	89 45 ec	 mov	 DWORD PTR tv68[ebp], eax
  0002c	eb 07		 jmp	 SHORT $LN17@DoVerb
$LN16@DoVerb:
  0002e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN17@DoVerb:
  00035	8b 4d ec	 mov	 ecx, DWORD PTR tv68[ebp]
  00038	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 2365 : 		ATLTRACE(atlTraceControls,2,_T("IOleObjectImpl::DoVerb(%d)\n"), iVerb);

  0003b	8b 55 0c	 mov	 edx, DWORD PTR _iVerb$[ebp]
  0003e	52		 push	 edx
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_1DI@MCJJDJOB@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  00044	6a 02		 push	 2
  00046	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  0004b	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00050	50		 push	 eax
  00051	68 3d 09 00 00	 push	 2365			; 0000093dH
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0005b	8d 4d f0	 lea	 ecx, DWORD PTR $T1[ebp]
  0005e	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00069	83 c4 14	 add	 esp, 20			; 00000014H

; 2366 : 		ATLASSERT(pT->m_spClientSite);

  0006c	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  0006f	83 c1 14	 add	 ecx, 20			; 00000014H
  00072	e8 00 00 00 00	 call	 ??7?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NXZ ; ATL::CComPtrBase<IOleClientSite>::operator!
  00077	0f b6 c0	 movzx	 eax, al
  0007a	85 c0		 test	 eax, eax
  0007c	74 26		 je	 SHORT $LN18@DoVerb
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@EJEJDDBA@?$AAp?$AAT?$AA?9?$AA?$DO?$AAm?$AA_?$AAs?$AAp?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAS@
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00088	6a 00		 push	 0
  0008a	68 3e 09 00 00	 push	 2366			; 0000093eH
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00094	6a 02		 push	 2
  00096	e8 00 00 00 00	 call	 __CrtDbgReportW
  0009b	83 c4 18	 add	 esp, 24			; 00000018H
  0009e	83 f8 01	 cmp	 eax, 1
  000a1	75 01		 jne	 SHORT $LN18@DoVerb
  000a3	cc		 int	 3
$LN18@DoVerb:

; 2367 : 
; 2368 : 		// We don't support getting a different site from the one passed into SetClientSite.
; 2369 : 			if (!pT->m_spClientSite.IsEqualObject(pActiveSite))

  000a4	8b 55 14	 mov	 edx, DWORD PTR _pActiveSite$[ebp]
  000a7	52		 push	 edx
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  000ab	83 c1 14	 add	 ecx, 20			; 00000014H
  000ae	e8 00 00 00 00	 call	 ?IsEqualObject@?$CComPtrBase@UIOleClientSite@@@ATL@@QAE_NPAUIUnknown@@@Z ; ATL::CComPtrBase<IOleClientSite>::IsEqualObject
  000b3	0f b6 c0	 movzx	 eax, al
  000b6	85 c0		 test	 eax, eax
  000b8	75 0a		 jne	 SHORT $LN4@DoVerb

; 2370 : 		{
; 2371 : 			return E_UNEXPECTED;

  000ba	b8 ff ff 00 80	 mov	 eax, -2147418113	; 8000ffffH
  000bf	e9 16 01 00 00	 jmp	 $LN1@DoVerb
$LN4@DoVerb:

; 2372 : 		}
; 2373 : 
; 2374 : 		HRESULT hr;
; 2375 : 		if (iVerb > 0)

  000c4	83 7d 0c 00	 cmp	 DWORD PTR _iVerb$[ebp], 0
  000c8	7e 1f		 jle	 SHORT $LN5@DoVerb

; 2376 : 		{
; 2377 : 			pT->DoVerbPrimary(lprcPosRect, hwndParent);

  000ca	8b 4d 1c	 mov	 ecx, DWORD PTR _hwndParent$[ebp]
  000cd	51		 push	 ecx
  000ce	8b 55 20	 mov	 edx, DWORD PTR _lprcPosRect$[ebp]
  000d1	52		 push	 edx
  000d2	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  000d5	83 c1 78	 add	 ecx, 120		; 00000078H
  000d8	e8 00 00 00 00	 call	 ?DoVerbPrimary@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbPrimary

; 2378 : 			hr = OLEOBJ_S_INVALIDVERB;

  000dd	c7 45 f8 80 01
	04 00		 mov	 DWORD PTR _hr$[ebp], 262528 ; 00040180H

; 2379 : 		}

  000e4	e9 ee 00 00 00	 jmp	 $LN6@DoVerb
$LN5@DoVerb:

; 2380 : 		else
; 2381 : 		{
; 2382 : 			hr = E_NOTIMPL;

  000e9	c7 45 f8 01 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467263 ; 80004001H

; 2383 : 			switch (iVerb)

  000f0	8b 45 0c	 mov	 eax, DWORD PTR _iVerb$[ebp]
  000f3	89 45 e8	 mov	 DWORD PTR tv159[ebp], eax
  000f6	8b 4d e8	 mov	 ecx, DWORD PTR tv159[ebp]
  000f9	83 c1 07	 add	 ecx, 7
  000fc	89 4d e8	 mov	 DWORD PTR tv159[ebp], ecx
  000ff	83 7d e8 07	 cmp	 DWORD PTR tv159[ebp], 7
  00103	0f 87 ce 00 00
	00		 ja	 $LN6@DoVerb
  00109	8b 55 e8	 mov	 edx, DWORD PTR tv159[ebp]
  0010c	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN19@DoVerb[edx*4]
$LN7@DoVerb:

; 2384 : 			{
; 2385 : 			case OLEIVERB_PRIMARY:
; 2386 : 				hr = pT->DoVerbPrimary(lprcPosRect, hwndParent);

  00113	8b 45 1c	 mov	 eax, DWORD PTR _hwndParent$[ebp]
  00116	50		 push	 eax
  00117	8b 4d 20	 mov	 ecx, DWORD PTR _lprcPosRect$[ebp]
  0011a	51		 push	 ecx
  0011b	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  0011e	83 c1 78	 add	 ecx, 120		; 00000078H
  00121	e8 00 00 00 00	 call	 ?DoVerbPrimary@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbPrimary
  00126	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 2387 : 				break;

  00129	e9 a9 00 00 00	 jmp	 $LN6@DoVerb
$LN8@DoVerb:

; 2388 : 			case OLEIVERB_SHOW:
; 2389 : 				hr = pT->DoVerbShow(lprcPosRect, hwndParent);

  0012e	8b 55 1c	 mov	 edx, DWORD PTR _hwndParent$[ebp]
  00131	52		 push	 edx
  00132	8b 45 20	 mov	 eax, DWORD PTR _lprcPosRect$[ebp]
  00135	50		 push	 eax
  00136	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00139	83 c1 78	 add	 ecx, 120		; 00000078H
  0013c	e8 00 00 00 00	 call	 ?DoVerbShow@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbShow
  00141	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 2390 : 				break;

  00144	e9 8e 00 00 00	 jmp	 $LN6@DoVerb
$LN9@DoVerb:

; 2391 : 			case OLEIVERB_INPLACEACTIVATE:
; 2392 : 				hr = pT->DoVerbInPlaceActivate(lprcPosRect, hwndParent);

  00149	8b 4d 1c	 mov	 ecx, DWORD PTR _hwndParent$[ebp]
  0014c	51		 push	 ecx
  0014d	8b 55 20	 mov	 edx, DWORD PTR _lprcPosRect$[ebp]
  00150	52		 push	 edx
  00151	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00154	83 c1 78	 add	 ecx, 120		; 00000078H
  00157	e8 00 00 00 00	 call	 ?DoVerbInPlaceActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbInPlaceActivate
  0015c	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 2393 : 				break;

  0015f	eb 76		 jmp	 SHORT $LN6@DoVerb
$LN10@DoVerb:

; 2394 : 			case OLEIVERB_UIACTIVATE:
; 2395 : 				hr = pT->DoVerbUIActivate(lprcPosRect, hwndParent);

  00161	8b 45 1c	 mov	 eax, DWORD PTR _hwndParent$[ebp]
  00164	50		 push	 eax
  00165	8b 4d 20	 mov	 ecx, DWORD PTR _lprcPosRect$[ebp]
  00168	51		 push	 ecx
  00169	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  0016c	83 c1 78	 add	 ecx, 120		; 00000078H
  0016f	e8 00 00 00 00	 call	 ?DoVerbUIActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbUIActivate
  00174	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 2396 : 				break;

  00177	eb 5e		 jmp	 SHORT $LN6@DoVerb
$LN11@DoVerb:

; 2397 : 			case OLEIVERB_HIDE:
; 2398 : 				hr = pT->DoVerbHide(lprcPosRect, hwndParent);

  00179	8b 55 1c	 mov	 edx, DWORD PTR _hwndParent$[ebp]
  0017c	52		 push	 edx
  0017d	8b 45 20	 mov	 eax, DWORD PTR _lprcPosRect$[ebp]
  00180	50		 push	 eax
  00181	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00184	83 c1 78	 add	 ecx, 120		; 00000078H
  00187	e8 00 00 00 00	 call	 ?DoVerbHide@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbHide
  0018c	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 2399 : 				break;

  0018f	eb 46		 jmp	 SHORT $LN6@DoVerb
$LN12@DoVerb:

; 2400 : 			case OLEIVERB_OPEN:
; 2401 : 				hr = pT->DoVerbOpen(lprcPosRect, hwndParent);

  00191	8b 4d 1c	 mov	 ecx, DWORD PTR _hwndParent$[ebp]
  00194	51		 push	 ecx
  00195	8b 55 20	 mov	 edx, DWORD PTR _lprcPosRect$[ebp]
  00198	52		 push	 edx
  00199	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  0019c	83 c1 78	 add	 ecx, 120		; 00000078H
  0019f	e8 00 00 00 00	 call	 ?DoVerbOpen@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbOpen
  001a4	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 2402 : 				break;

  001a7	eb 2e		 jmp	 SHORT $LN6@DoVerb
$LN13@DoVerb:

; 2403 : 			case OLEIVERB_DISCARDUNDOSTATE:
; 2404 : 				hr = pT->DoVerbDiscardUndo(lprcPosRect, hwndParent);

  001a9	8b 45 1c	 mov	 eax, DWORD PTR _hwndParent$[ebp]
  001ac	50		 push	 eax
  001ad	8b 4d 20	 mov	 ecx, DWORD PTR _lprcPosRect$[ebp]
  001b0	51		 push	 ecx
  001b1	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  001b4	83 c1 78	 add	 ecx, 120		; 00000078H
  001b7	e8 00 00 00 00	 call	 ?DoVerbDiscardUndo@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbDiscardUndo
  001bc	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 2405 : 				break;

  001bf	eb 16		 jmp	 SHORT $LN6@DoVerb
$LN14@DoVerb:

; 2406 : 			case OLEIVERB_PROPERTIES:
; 2407 : 				hr = pT->DoVerbProperties(lprcPosRect, hwndParent);

  001c1	8b 55 1c	 mov	 edx, DWORD PTR _hwndParent$[ebp]
  001c4	52		 push	 edx
  001c5	8b 45 20	 mov	 eax, DWORD PTR _lprcPosRect$[ebp]
  001c8	50		 push	 eax
  001c9	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  001cc	83 c1 04	 add	 ecx, 4
  001cf	e8 00 00 00 00	 call	 ?DoVerbProperties@CComControlBase@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::CComControlBase::DoVerbProperties
  001d4	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN6@DoVerb:

; 2408 : 			}
; 2409 : 		}
; 2410 : 		return hr;

  001d7	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
$LN1@DoVerb:

; 2411 : 	}

  001da	83 c4 18	 add	 esp, 24			; 00000018H
  001dd	3b ec		 cmp	 ebp, esp
  001df	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001e4	8b e5		 mov	 esp, ebp
  001e6	5d		 pop	 ebp
  001e7	c2 1c 00	 ret	 28			; 0000001cH
  001ea	66 90		 npad	 2
$LN19@DoVerb:
  001ec	00 00 00 00	 DD	 $LN14@DoVerb
  001f0	00 00 00 00	 DD	 $LN13@DoVerb
  001f4	00 00 00 00	 DD	 $LN9@DoVerb
  001f8	00 00 00 00	 DD	 $LN10@DoVerb
  001fc	00 00 00 00	 DD	 $LN11@DoVerb
  00200	00 00 00 00	 DD	 $LN12@DoVerb
  00204	00 00 00 00	 DD	 $LN8@DoVerb
  00208	00 00 00 00	 DD	 $LN7@DoVerb
?DoVerb@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJJPAUtagMSG@@PAUIOleClientSite@@JPAUHWND__@@PBUtagRECT@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerb
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?DoVerbDiscardUndo@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
_hr$ = -12						; size = 4
_pT$ = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?DoVerbDiscardUndo@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbDiscardUndo, COMDAT
; _this$ = ecx

; 2348 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2349 : 		T* pT = static_cast<T*>(this);

  0001a	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001e	74 0b		 je	 SHORT $LN4@DoVerbDisc
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	83 e8 78	 sub	 eax, 120		; 00000078H
  00026	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00029	eb 07		 jmp	 SHORT $LN5@DoVerbDisc
$LN4@DoVerbDisc:
  0002b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN5@DoVerbDisc:
  00032	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00035	89 4d f8	 mov	 DWORD PTR _pT$[ebp], ecx

; 2350 : 		HRESULT hr;
; 2351 : 		hr = pT->OnPreVerbDiscardUndo();

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0003b	83 c1 78	 add	 ecx, 120		; 00000078H
  0003e	e8 00 00 00 00	 call	 ?OnPreVerbDiscardUndo@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbDiscardUndo
  00043	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 2352 : 		if (SUCCEEDED(hr))

  00046	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0004a	7c 0e		 jl	 SHORT $LN2@DoVerbDisc

; 2353 : 			hr = pT->OnPostVerbDiscardUndo();

  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0004f	83 c1 78	 add	 ecx, 120		; 00000078H
  00052	e8 00 00 00 00	 call	 ?OnPostVerbDiscardUndo@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbDiscardUndo
  00057	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
$LN2@DoVerbDisc:

; 2354 : 		return hr;

  0005a	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]

; 2355 : 	}

  0005d	83 c4 10	 add	 esp, 16			; 00000010H
  00060	3b ec		 cmp	 ebp, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 08 00	 ret	 8
?DoVerbDiscardUndo@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbDiscardUndo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?DoVerbOpen@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
_hr$ = -12						; size = 4
_pT$ = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?DoVerbOpen@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbOpen, COMDAT
; _this$ = ecx

; 2337 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2338 : 		T* pT = static_cast<T*>(this);

  0001a	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001e	74 0b		 je	 SHORT $LN4@DoVerbOpen
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	83 e8 78	 sub	 eax, 120		; 00000078H
  00026	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00029	eb 07		 jmp	 SHORT $LN5@DoVerbOpen
$LN4@DoVerbOpen:
  0002b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN5@DoVerbOpen:
  00032	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00035	89 4d f8	 mov	 DWORD PTR _pT$[ebp], ecx

; 2339 : 		HRESULT hr;
; 2340 : 		hr = pT->OnPreVerbOpen();

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0003b	83 c1 78	 add	 ecx, 120		; 00000078H
  0003e	e8 00 00 00 00	 call	 ?OnPreVerbOpen@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbOpen
  00043	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 2341 : 		if (SUCCEEDED(hr))

  00046	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0004a	7c 0e		 jl	 SHORT $LN2@DoVerbOpen

; 2342 : 			hr = pT->OnPostVerbOpen();

  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0004f	83 c1 78	 add	 ecx, 120		; 00000078H
  00052	e8 00 00 00 00	 call	 ?OnPostVerbOpen@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbOpen
  00057	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
$LN2@DoVerbOpen:

; 2343 : 		return hr;

  0005a	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]

; 2344 : 	}

  0005d	83 c4 10	 add	 esp, 16			; 00000010H
  00060	3b ec		 cmp	 ebp, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 08 00	 ret	 8
?DoVerbOpen@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbOpen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?DoVerbHide@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
_hr$ = -12						; size = 4
_pT$ = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?DoVerbHide@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbHide, COMDAT
; _this$ = ecx

; 2321 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2322 : 		T* pT = static_cast<T*>(this);

  0001b	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001f	74 0b		 je	 SHORT $LN5@DoVerbHide
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 e8 78	 sub	 eax, 120		; 00000078H
  00027	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  0002a	eb 07		 jmp	 SHORT $LN6@DoVerbHide
$LN5@DoVerbHide:
  0002c	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN6@DoVerbHide:
  00033	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00036	89 4d f8	 mov	 DWORD PTR _pT$[ebp], ecx

; 2323 : 		HRESULT hr;
; 2324 : 		hr = pT->OnPreVerbHide();

  00039	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0003c	83 c1 78	 add	 ecx, 120		; 00000078H
  0003f	e8 00 00 00 00	 call	 ?OnPreVerbHide@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbHide
  00044	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 2325 : 		if (SUCCEEDED(hr))

  00047	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0004b	7c 45		 jl	 SHORT $LN2@DoVerbHide

; 2326 : 		{
; 2327 : 			pT->UIDeactivate();

  0004d	8b 55 f8	 mov	 edx, DWORD PTR _pT$[ebp]
  00050	81 c2 84 00 00
	00		 add	 edx, 132		; 00000084H
  00056	8b 45 f8	 mov	 eax, DWORD PTR _pT$[ebp]
  00059	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0005f	8b f4		 mov	 esi, esp
  00061	52		 push	 edx
  00062	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00065	ff d2		 call	 edx
  00067	3b f4		 cmp	 esi, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2328 : 			if (pT->m_hWnd)

  0006e	8b 45 f8	 mov	 eax, DWORD PTR _pT$[ebp]
  00071	83 78 50 00	 cmp	 DWORD PTR [eax+80], 0
  00075	74 0d		 je	 SHORT $LN3@DoVerbHide

; 2329 : 				pT->ShowWindow(SW_HIDE);

  00077	6a 00		 push	 0
  00079	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0007c	83 c1 50	 add	 ecx, 80			; 00000050H
  0007f	e8 00 00 00 00	 call	 ?ShowWindow@CWindow@ATL@@QAEHH@Z ; ATL::CWindow::ShowWindow
$LN3@DoVerbHide:

; 2330 : 			hr = pT->OnPostVerbHide();

  00084	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  00087	83 c1 78	 add	 ecx, 120		; 00000078H
  0008a	e8 00 00 00 00	 call	 ?OnPostVerbHide@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbHide
  0008f	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
$LN2@DoVerbHide:

; 2331 : 		}
; 2332 : 		return hr;

  00092	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]

; 2333 : 	}

  00095	5e		 pop	 esi
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	3b ec		 cmp	 ebp, esp
  0009b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 08 00	 ret	 8
?DoVerbHide@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbHide
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?DoVerbUIActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
_hr$ = -12						; size = 4
_pT$ = -8						; size = 4
_this$ = -4						; size = 4
_prcPosRect$ = 8					; size = 4
___formal$ = 12						; size = 4
?DoVerbUIActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbUIActivate, COMDAT
; _this$ = ecx

; 2303 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2304 : 		T* pT = static_cast<T*>(this);

  0001a	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001e	74 0b		 je	 SHORT $LN6@DoVerbUIAc
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	83 e8 78	 sub	 eax, 120		; 00000078H
  00026	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00029	eb 07		 jmp	 SHORT $LN7@DoVerbUIAc
$LN6@DoVerbUIAc:
  0002b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN7@DoVerbUIAc:
  00032	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00035	89 4d f8	 mov	 DWORD PTR _pT$[ebp], ecx

; 2305 : 		HRESULT hr = S_OK;

  00038	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 2306 : 		if (!pT->m_bUIActive)

  0003f	8b 55 f8	 mov	 edx, DWORD PTR _pT$[ebp]
  00042	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  00045	c1 e8 03	 shr	 eax, 3
  00048	83 e0 01	 and	 eax, 1
  0004b	75 3c		 jne	 SHORT $LN2@DoVerbUIAc

; 2307 : 		{
; 2308 : 			hr = pT->OnPreVerbUIActivate();

  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  00050	83 c1 78	 add	 ecx, 120		; 00000078H
  00053	e8 00 00 00 00	 call	 ?OnPreVerbUIActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbUIActivate
  00058	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 2309 : 			if (SUCCEEDED(hr))

  0005b	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0005f	7c 28		 jl	 SHORT $LN2@DoVerbUIAc

; 2310 : 			{
; 2311 : 				hr = pT->InPlaceActivate(OLEIVERB_UIACTIVATE, prcPosRect);

  00061	8b 4d 08	 mov	 ecx, DWORD PTR _prcPosRect$[ebp]
  00064	51		 push	 ecx
  00065	6a fc		 push	 -4			; fffffffcH
  00067	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0006a	83 c1 04	 add	 ecx, 4
  0006d	e8 00 00 00 00	 call	 ?InPlaceActivate@CComControlBase@ATL@@QAEJJPBUtagRECT@@@Z ; ATL::CComControlBase::InPlaceActivate
  00072	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 2312 : 				if (SUCCEEDED(hr))

  00075	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00079	7c 0e		 jl	 SHORT $LN2@DoVerbUIAc

; 2313 : 					hr = pT->OnPostVerbUIActivate();

  0007b	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0007e	83 c1 78	 add	 ecx, 120		; 00000078H
  00081	e8 00 00 00 00	 call	 ?OnPostVerbUIActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbUIActivate
  00086	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
$LN2@DoVerbUIAc:

; 2314 : 			}
; 2315 : 		}
; 2316 : 		return hr;

  00089	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]

; 2317 : 	}

  0008c	83 c4 10	 add	 esp, 16			; 00000010H
  0008f	3b ec		 cmp	 ebp, esp
  00091	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c2 08 00	 ret	 8
?DoVerbUIActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbUIActivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?DoVerbInPlaceActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
_hr$ = -12						; size = 4
_pT$ = -8						; size = 4
_this$ = -4						; size = 4
_prcPosRect$ = 8					; size = 4
___formal$ = 12						; size = 4
?DoVerbInPlaceActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbInPlaceActivate, COMDAT
; _this$ = ecx

; 2286 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2287 : 		T* pT = static_cast<T*>(this);

  0001a	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001e	74 0b		 je	 SHORT $LN6@DoVerbInPl
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	83 e8 78	 sub	 eax, 120		; 00000078H
  00026	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00029	eb 07		 jmp	 SHORT $LN7@DoVerbInPl
$LN6@DoVerbInPl:
  0002b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN7@DoVerbInPl:
  00032	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00035	89 4d f8	 mov	 DWORD PTR _pT$[ebp], ecx

; 2288 : 		HRESULT hr;
; 2289 : 		hr = pT->OnPreVerbInPlaceActivate();

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0003b	83 c1 78	 add	 ecx, 120		; 00000078H
  0003e	e8 00 00 00 00	 call	 ?OnPreVerbInPlaceActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbInPlaceActivate
  00043	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 2290 : 		if (SUCCEEDED(hr))

  00046	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0004a	7c 39		 jl	 SHORT $LN2@DoVerbInPl

; 2291 : 		{
; 2292 : 			hr = pT->InPlaceActivate(OLEIVERB_INPLACEACTIVATE, prcPosRect);

  0004c	8b 55 08	 mov	 edx, DWORD PTR _prcPosRect$[ebp]
  0004f	52		 push	 edx
  00050	6a fb		 push	 -5			; fffffffbH
  00052	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  00055	83 c1 04	 add	 ecx, 4
  00058	e8 00 00 00 00	 call	 ?InPlaceActivate@CComControlBase@ATL@@QAEJJPBUtagRECT@@@Z ; ATL::CComControlBase::InPlaceActivate
  0005d	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 2293 : 			if (SUCCEEDED(hr))

  00060	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00064	7c 0e		 jl	 SHORT $LN3@DoVerbInPl

; 2294 : 				hr = pT->OnPostVerbInPlaceActivate();

  00066	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  00069	83 c1 78	 add	 ecx, 120		; 00000078H
  0006c	e8 00 00 00 00	 call	 ?OnPostVerbInPlaceActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbInPlaceActivate
  00071	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
$LN3@DoVerbInPl:

; 2295 : 			if (SUCCEEDED(hr))

  00074	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00078	7c 0b		 jl	 SHORT $LN2@DoVerbInPl

; 2296 : 				pT->FireViewChange();

  0007a	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0007d	83 c1 04	 add	 ecx, 4
  00080	e8 00 00 00 00	 call	 ?FireViewChange@CComControlBase@ATL@@QAEJXZ ; ATL::CComControlBase::FireViewChange
$LN2@DoVerbInPl:

; 2297 : 		}
; 2298 : 		return hr;

  00085	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]

; 2299 : 	}

  00088	83 c4 10	 add	 esp, 16			; 00000010H
  0008b	3b ec		 cmp	 ebp, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 08 00	 ret	 8
?DoVerbInPlaceActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbInPlaceActivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?DoVerbShow@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
_hr$ = -12						; size = 4
_pT$ = -8						; size = 4
_this$ = -4						; size = 4
_prcPosRect$ = 8					; size = 4
___formal$ = 12						; size = 4
?DoVerbShow@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbShow, COMDAT
; _this$ = ecx

; 2271 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2272 : 		T* pT = static_cast<T*>(this);

  0001a	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001e	74 0b		 je	 SHORT $LN5@DoVerbShow
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	83 e8 78	 sub	 eax, 120		; 00000078H
  00026	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00029	eb 07		 jmp	 SHORT $LN6@DoVerbShow
$LN5@DoVerbShow:
  0002b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN6@DoVerbShow:
  00032	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00035	89 4d f8	 mov	 DWORD PTR _pT$[ebp], ecx

; 2273 : 		HRESULT hr;
; 2274 : 		hr = pT->OnPreVerbShow();

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0003b	83 c1 78	 add	 ecx, 120		; 00000078H
  0003e	e8 00 00 00 00	 call	 ?OnPreVerbShow@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPreVerbShow
  00043	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 2275 : 		if (SUCCEEDED(hr))

  00046	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0004a	7c 28		 jl	 SHORT $LN2@DoVerbShow

; 2276 : 		{
; 2277 : 			hr = pT->InPlaceActivate(OLEIVERB_SHOW, prcPosRect);

  0004c	8b 55 08	 mov	 edx, DWORD PTR _prcPosRect$[ebp]
  0004f	52		 push	 edx
  00050	6a ff		 push	 -1
  00052	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  00055	83 c1 04	 add	 ecx, 4
  00058	e8 00 00 00 00	 call	 ?InPlaceActivate@CComControlBase@ATL@@QAEJJPBUtagRECT@@@Z ; ATL::CComControlBase::InPlaceActivate
  0005d	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 2278 : 			if (SUCCEEDED(hr))

  00060	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00064	7c 0e		 jl	 SHORT $LN2@DoVerbShow

; 2279 : 				hr = pT->OnPostVerbShow();

  00066	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  00069	83 c1 78	 add	 ecx, 120		; 00000078H
  0006c	e8 00 00 00 00	 call	 ?OnPostVerbShow@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJXZ ; ATL::IOleObjectImpl<COPOSGestureControl>::OnPostVerbShow
  00071	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
$LN2@DoVerbShow:

; 2280 : 		}
; 2281 : 		return hr;

  00074	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]

; 2282 : 	}

  00077	83 c4 10	 add	 esp, 16			; 00000010H
  0007a	3b ec		 cmp	 ebp, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 08 00	 ret	 8
?DoVerbShow@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbShow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?DoVerbPrimary@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z
_TEXT	SEGMENT
tv68 = -52						; size = 4
$T1 = -48						; size = 4
$T2 = -44						; size = 4
_hRes$ = -40						; size = 4
_var$ = -32						; size = 16
_bDesignMode$ = -12					; size = 4
_pT$ = -8						; size = 4
_this$ = -4						; size = 4
_prcPosRect$ = 8					; size = 4
_hwndParent$ = 12					; size = 4
?DoVerbPrimary@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbPrimary, COMDAT
; _this$ = ecx

; 2255 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d cc	 lea	 edi, DWORD PTR [ebp-52]
  0000b	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2256 : 		T* pT = static_cast<T*>(this);

  0001b	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001f	74 0b		 je	 SHORT $LN5@DoVerbPrim
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 e8 78	 sub	 eax, 120		; 00000078H
  00027	89 45 cc	 mov	 DWORD PTR tv68[ebp], eax
  0002a	eb 07		 jmp	 SHORT $LN6@DoVerbPrim
$LN5@DoVerbPrim:
  0002c	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN6@DoVerbPrim:
  00033	8b 4d cc	 mov	 ecx, DWORD PTR tv68[ebp]
  00036	89 4d f8	 mov	 DWORD PTR _pT$[ebp], ecx

; 2257 : 		BOOL bDesignMode = FALSE;

  00039	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _bDesignMode$[ebp], 0

; 2258 : 		CComVariant var;

  00040	8d 4d e0	 lea	 ecx, DWORD PTR _var$[ebp]
  00043	e8 00 00 00 00	 call	 ??0CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::CComVariant

; 2259 : 		// if container doesn't support this property
; 2260 : 		// don't allow design mode
; 2261 : 		HRESULT hRes = pT->GetAmbientProperty(DISPID_AMBIENT_USERMODE, var);

  00048	8d 55 e0	 lea	 edx, DWORD PTR _var$[ebp]
  0004b	52		 push	 edx
  0004c	68 3b fd ff ff	 push	 -709			; fffffd3bH
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  00054	83 c1 04	 add	 ecx, 4
  00057	e8 00 00 00 00	 call	 ?GetAmbientProperty@CComControlBase@ATL@@QAEJJAAUtagVARIANT@@@Z ; ATL::CComControlBase::GetAmbientProperty
  0005c	89 45 d8	 mov	 DWORD PTR _hRes$[ebp], eax

; 2262 : 		if (SUCCEEDED(hRes) && var.vt == VT_BOOL && !var.boolVal)

  0005f	83 7d d8 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00063	7c 18		 jl	 SHORT $LN2@DoVerbPrim
  00065	0f b7 45 e0	 movzx	 eax, WORD PTR _var$[ebp]
  00069	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  0006c	75 0f		 jne	 SHORT $LN2@DoVerbPrim
  0006e	0f bf 4d e8	 movsx	 ecx, WORD PTR _var$[ebp+8]
  00072	85 c9		 test	 ecx, ecx
  00074	75 07		 jne	 SHORT $LN2@DoVerbPrim

; 2263 : 			bDesignMode = TRUE;

  00076	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _bDesignMode$[ebp], 1
$LN2@DoVerbPrim:

; 2264 : 		if (bDesignMode)

  0007d	83 7d f4 00	 cmp	 DWORD PTR _bDesignMode$[ebp], 0
  00081	74 23		 je	 SHORT $LN3@DoVerbPrim

; 2265 : 			return pT->DoVerbProperties(prcPosRect, hwndParent);

  00083	8b 55 0c	 mov	 edx, DWORD PTR _hwndParent$[ebp]
  00086	52		 push	 edx
  00087	8b 45 08	 mov	 eax, DWORD PTR _prcPosRect$[ebp]
  0008a	50		 push	 eax
  0008b	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0008e	83 c1 04	 add	 ecx, 4
  00091	e8 00 00 00 00	 call	 ?DoVerbProperties@CComControlBase@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::CComControlBase::DoVerbProperties
  00096	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  00099	8d 4d e0	 lea	 ecx, DWORD PTR _var$[ebp]
  0009c	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  000a1	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  000a4	eb 21		 jmp	 SHORT $LN1@DoVerbPrim
$LN3@DoVerbPrim:

; 2266 : 		return pT->DoVerbInPlaceActivate(prcPosRect, hwndParent);

  000a6	8b 4d 0c	 mov	 ecx, DWORD PTR _hwndParent$[ebp]
  000a9	51		 push	 ecx
  000aa	8b 55 08	 mov	 edx, DWORD PTR _prcPosRect$[ebp]
  000ad	52		 push	 edx
  000ae	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  000b1	83 c1 78	 add	 ecx, 120		; 00000078H
  000b4	e8 00 00 00 00	 call	 ?DoVerbInPlaceActivate@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbInPlaceActivate
  000b9	89 45 d0	 mov	 DWORD PTR $T1[ebp], eax
  000bc	8d 4d e0	 lea	 ecx, DWORD PTR _var$[ebp]
  000bf	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  000c4	8b 45 d0	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@DoVerbPrim:

; 2267 : 	}

  000c7	52		 push	 edx
  000c8	8b cd		 mov	 ecx, ebp
  000ca	50		 push	 eax
  000cb	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@DoVerbPrim
  000d1	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000d6	58		 pop	 eax
  000d7	5a		 pop	 edx
  000d8	5f		 pop	 edi
  000d9	83 c4 34	 add	 esp, 52			; 00000034H
  000dc	3b ec		 cmp	 ebp, esp
  000de	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c2 08 00	 ret	 8
  000e9	0f 1f 00	 npad	 3
$LN9@DoVerbPrim:
  000ec	01 00 00 00	 DD	 1
  000f0	00 00 00 00	 DD	 $LN8@DoVerbPrim
$LN8@DoVerbPrim:
  000f4	e0 ff ff ff	 DD	 -32			; ffffffe0H
  000f8	10 00 00 00	 DD	 16			; 00000010H
  000fc	00 00 00 00	 DD	 $LN7@DoVerbPrim
$LN7@DoVerbPrim:
  00100	76		 DB	 118			; 00000076H
  00101	61		 DB	 97			; 00000061H
  00102	72		 DB	 114			; 00000072H
  00103	00		 DB	 0
?DoVerbPrimary@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::DoVerbPrimary
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetClipboardData@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPAUIDataObject@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?GetClipboardData@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPAUIDataObject@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::GetClipboardData, COMDAT

; 2247 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@GetClipboa:

; 2248 : 		ATLTRACENOTIMPL(_T("IOleObjectImpl::GetClipboardData"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1EC@KDKDKHCO@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 c8 08 00 00	 push	 2248			; 000008c8H
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@GetClipboa
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@GetClipboa
$LN1@GetClipboa:

; 2249 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 0c 00	 ret	 12			; 0000000cH
?GetClipboardData@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAPAUIDataObject@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::GetClipboardData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?InitFromData@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIDataObject@@HK@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?InitFromData@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIDataObject@@HK@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::InitFromData, COMDAT

; 2241 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@InitFromDa:

; 2242 : 		ATLTRACENOTIMPL(_T("IOleObjectImpl::InitFromData"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1DK@PCFABHJP@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 c2 08 00 00	 push	 2242			; 000008c2H
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@InitFromDa
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@InitFromDa
$LN1@InitFromDa:

; 2243 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 10 00	 ret	 16			; 00000010H
?InitFromData@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIDataObject@@HK@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::InitFromData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetMoniker@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKKPAPAUIMoniker@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?GetMoniker@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKKPAPAUIMoniker@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::GetMoniker, COMDAT

; 2234 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@GetMoniker:

; 2235 : 		ATLTRACENOTIMPL(_T("IOleObjectImpl::GetMoniker"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CEIENMGG@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 bb 08 00 00	 push	 2235			; 000008bbH
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@GetMoniker
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@GetMoniker
$LN1@GetMoniker:

; 2236 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 10 00	 ret	 16			; 00000010H
?GetMoniker@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKKPAPAUIMoniker@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::GetMoniker
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?SetMoniker@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUIMoniker@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?SetMoniker@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUIMoniker@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::SetMoniker, COMDAT

; 2227 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@SetMoniker:

; 2228 : 		ATLTRACENOTIMPL(_T("IOleObjectImpl::SetMoniker"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@NBNCAFCH@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 b4 08 00 00	 push	 2228			; 000008b4H
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@SetMoniker
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@SetMoniker
$LN1@SetMoniker:

; 2229 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 0c 00	 ret	 12			; 0000000cH
?SetMoniker@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJKPAUIMoniker@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::SetMoniker
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?Close@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_dwSaveOption$ = 12					; size = 4
?Close@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::Close, COMDAT

; 2219 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2220 : 		T* pT = static_cast<T*>(this);

  00017	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001b	74 0b		 je	 SHORT $LN3@Close
  0001d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00020	83 e8 78	 sub	 eax, 120		; 00000078H
  00023	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00026	eb 07		 jmp	 SHORT $LN4@Close
$LN3@Close:
  00028	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@Close:
  0002f	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00032	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 2221 : 		ATLTRACE(atlTraceControls,2,_T("IOleObjectImpl::Close\n"));

  00035	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@MLHGCMGP@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  0003a	6a 02		 push	 2
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00041	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00046	50		 push	 eax
  00047	68 ad 08 00 00	 push	 2221			; 000008adH
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00051	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00054	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0005f	83 c4 10	 add	 esp, 16			; 00000010H

; 2222 : 		return pT->IOleObject_Close(dwSaveOption);

  00062	8b 55 0c	 mov	 edx, DWORD PTR _dwSaveOption$[ebp]
  00065	52		 push	 edx
  00066	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00069	83 c1 04	 add	 ecx, 4
  0006c	e8 00 00 00 00	 call	 ?IOleObject_Close@CComControlBase@ATL@@QAEJK@Z ; ATL::CComControlBase::IOleObject_Close

; 2223 : 	}

  00071	83 c4 10	 add	 esp, 16			; 00000010H
  00074	3b ec		 cmp	 ebp, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 08 00	 ret	 8
?Close@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJK@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::Close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?SetHostNames@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPB_W0@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?SetHostNames@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPB_W0@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::SetHostNames, COMDAT

; 2214 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 2215 : 		ATLTRACE(atlTraceControls,2,_T("IOleObjectImpl::SetHostNames\n"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@ENNHEKGE@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  00019	6a 02		 push	 2
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00020	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00025	50		 push	 eax
  00026	68 a7 08 00 00	 push	 2215			; 000008a7H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00030	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00033	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003e	83 c4 10	 add	 esp, 16			; 00000010H

; 2216 : 		return S_OK;

  00041	33 c0		 xor	 eax, eax

; 2217 : 	}

  00043	83 c4 08	 add	 esp, 8
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 0c 00	 ret	 12			; 0000000cH
?SetHostNames@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPB_W0@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::SetHostNames
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetClientSite@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIOleClientSite@@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_ppClientSite$ = 12					; size = 4
?GetClientSite@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIOleClientSite@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::GetClientSite, COMDAT

; 2206 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2207 : 		T* pT = static_cast<T*>(this);

  00017	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001b	74 0b		 je	 SHORT $LN3@GetClientS
  0001d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00020	83 e8 78	 sub	 eax, 120		; 00000078H
  00023	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00026	eb 07		 jmp	 SHORT $LN4@GetClientS
$LN3@GetClientS:
  00028	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@GetClientS:
  0002f	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00032	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 2208 : 		ATLTRACE(atlTraceControls,2,_T("IOleObjectImpl::GetClientSite\n"));

  00035	68 00 00 00 00	 push	 OFFSET ??_C@_1DO@FNGOFKPG@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  0003a	6a 02		 push	 2
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00041	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00046	50		 push	 eax
  00047	68 a0 08 00 00	 push	 2208			; 000008a0H
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00051	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00054	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0005f	83 c4 10	 add	 esp, 16			; 00000010H

; 2209 : 		return pT->IOleObject_GetClientSite(ppClientSite);

  00062	8b 55 0c	 mov	 edx, DWORD PTR _ppClientSite$[ebp]
  00065	52		 push	 edx
  00066	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00069	83 c1 04	 add	 ecx, 4
  0006c	e8 00 00 00 00	 call	 ?IOleObject_GetClientSite@CComControlBase@ATL@@QAEJPAPAUIOleClientSite@@@Z ; ATL::CComControlBase::IOleObject_GetClientSite

; 2210 : 	}

  00071	83 c4 10	 add	 esp, 16			; 00000010H
  00074	3b ec		 cmp	 ebp, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 08 00	 ret	 8
?GetClientSite@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAPAUIOleClientSite@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::GetClientSite
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?SetClientSite@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIOleClientSite@@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_pClientSite$ = 12					; size = 4
?SetClientSite@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIOleClientSite@@@Z PROC ; ATL::IOleObjectImpl<COPOSGestureControl>::SetClientSite, COMDAT

; 2200 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2201 : 		T* pT = static_cast<T*>(this);

  00017	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001b	74 0b		 je	 SHORT $LN3@SetClientS
  0001d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00020	83 e8 78	 sub	 eax, 120		; 00000078H
  00023	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00026	eb 07		 jmp	 SHORT $LN4@SetClientS
$LN3@SetClientS:
  00028	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@SetClientS:
  0002f	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00032	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 2202 : 		ATLTRACE(atlTraceControls,2,_T("IOleObjectImpl::SetClientSite\n"));

  00035	68 00 00 00 00	 push	 OFFSET ??_C@_1DO@NMABOKNE@?$AAI?$AAO?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?3@
  0003a	6a 02		 push	 2
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00041	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00046	50		 push	 eax
  00047	68 9a 08 00 00	 push	 2202			; 0000089aH
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00051	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00054	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0005f	83 c4 10	 add	 esp, 16			; 00000010H

; 2203 : 		return pT->IOleObject_SetClientSite(pClientSite);

  00062	8b 55 0c	 mov	 edx, DWORD PTR _pClientSite$[ebp]
  00065	52		 push	 edx
  00066	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00069	83 c1 04	 add	 ecx, 4
  0006c	e8 00 00 00 00	 call	 ?IOleObject_SetClientSite@CComControlBase@ATL@@QAEJPAUIOleClientSite@@@Z ; ATL::CComControlBase::IOleObject_SetClientSite

; 2204 : 	}

  00071	83 c4 10	 add	 esp, 16			; 00000010H
  00074	3b ec		 cmp	 ebp, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 08 00	 ret	 8
?SetClientSite@?$IOleObjectImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIOleClientSite@@@Z ENDP ; ATL::IOleObjectImpl<COPOSGestureControl>::SetClientSite
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnAmbientPropertyChange@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJJ@Z
_TEXT	SEGMENT
$T1 = -16						; size = 8
$T2 = -8						; size = 8
_this$ = 8						; size = 4
_dispid$ = 12						; size = 4
?OnAmbientPropertyChange@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJJ@Z PROC ; ATL::IOleControlImpl<COPOSGestureControl>::OnAmbientPropertyChange, COMDAT

; 2128 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 2129 : 		UNREFERENCED_PARAMETER(dispid);
; 2130 : 		ATLTRACE(atlTraceControls,2,_T("IOleControlImpl::OnAmbientPropertyChange\n"));

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_1FE@LCIFNEAD@?$AAI?$AAO?$AAl?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAI?$AAm?$AAp?$AAl@
  0001c	6a 02		 push	 2
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00023	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00028	50		 push	 eax
  00029	68 52 08 00 00	 push	 2130			; 00000852H
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00033	8d 4d f8	 lea	 ecx, DWORD PTR $T2[ebp]
  00036	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00041	83 c4 10	 add	 esp, 16			; 00000010H

; 2131 : 		ATLTRACE(atlTraceControls,2,_T(" -- DISPID = %d\n"), dispid);

  00044	8b 45 0c	 mov	 eax, DWORD PTR _dispid$[ebp]
  00047	50		 push	 eax
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_1CC@GHJDDODE@?$AA?5?$AA?9?$AA?9?$AA?5?$AAD?$AAI?$AAS?$AAP?$AAI?$AAD?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd@
  0004d	6a 02		 push	 2
  0004f	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00054	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00059	50		 push	 eax
  0005a	68 53 08 00 00	 push	 2131			; 00000853H
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00064	8d 4d f0	 lea	 ecx, DWORD PTR $T1[ebp]
  00067	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00072	83 c4 14	 add	 esp, 20			; 00000014H

; 2132 : 		return S_OK;

  00075	33 c0		 xor	 eax, eax

; 2133 : 	}

  00077	83 c4 10	 add	 esp, 16			; 00000010H
  0007a	3b ec		 cmp	 ebp, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 08 00	 ret	 8
?OnAmbientPropertyChange@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJJ@Z ENDP ; ATL::IOleControlImpl<COPOSGestureControl>::OnAmbientPropertyChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnMnemonic@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagMSG@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnMnemonic@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagMSG@@@Z PROC ; ATL::IOleControlImpl<COPOSGestureControl>::OnMnemonic, COMDAT

; 2124 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@OnMnemonic:

; 2125 : 		ATLTRACENOTIMPL(_T("IOleControlImpl::OnMnemonic"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1DI@HLJHBFHB@?$AAI?$AAO?$AAl?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAI?$AAm?$AAp?$AAl@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 4d 08 00 00	 push	 2125			; 0000084dH
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@OnMnemonic
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@OnMnemonic
$LN1@OnMnemonic:

; 2126 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
?OnMnemonic@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagMSG@@@Z ENDP ; ATL::IOleControlImpl<COPOSGestureControl>::OnMnemonic
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetControlInfo@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagCONTROLINFO@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?GetControlInfo@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagCONTROLINFO@@@Z PROC ; ATL::IOleControlImpl<COPOSGestureControl>::GetControlInfo, COMDAT

; 2120 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@GetControl:

; 2121 : 		ATLTRACENOTIMPL(_T("IOleControlImpl::GetControlInfo"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1EA@IFIKFMIO@?$AAI?$AAO?$AAl?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAI?$AAm?$AAp?$AAl@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@CCMKDBOJ@?$AAA?$AAT?$AAL?$AA?3?$AA?5?$AA?$CF?$AAT?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm@
  0001e	6a 00		 push	 0
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00025	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
  0002a	50		 push	 eax
  0002b	68 49 08 00 00	 push	 2121			; 00000849H
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00035	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00038	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00043	83 c4 14	 add	 esp, 20			; 00000014H
  00046	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
  0004b	eb 04		 jmp	 SHORT $LN1@GetControl
  0004d	33 c0		 xor	 eax, eax
  0004f	75 c3		 jne	 SHORT $LN4@GetControl
$LN1@GetControl:

; 2122 : 	}

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
?GetControlInfo@?$IOleControlImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUtagCONTROLINFO@@@Z ENDP ; ATL::IOleControlImpl<COPOSGestureControl>::GetControlInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?IPersistStreamInit_Save@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@QAEJPAUIStream@@HPBUATL_PROPMAP_ENTRY@2@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
_hr$ = -12						; size = 4
_pT$ = -8						; size = 4
_this$ = -4						; size = 4
_pStm$ = 8						; size = 4
_fClearDirty$ = 12					; size = 4
_pMap$ = 16						; size = 4
?IPersistStreamInit_Save@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@QAEJPAUIStream@@HPBUATL_PROPMAP_ENTRY@2@@Z PROC ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::IPersistStreamInit_Save, COMDAT
; _this$ = ecx

; 736  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 737  : 		T* pT = static_cast<T*>(this);

  0001a	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001e	74 0b		 je	 SHORT $LN4@IPersistSt
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	83 e8 70	 sub	 eax, 112		; 00000070H
  00026	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00029	eb 07		 jmp	 SHORT $LN5@IPersistSt
$LN4@IPersistSt:
  0002b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN5@IPersistSt:
  00032	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00035	89 4d f8	 mov	 DWORD PTR _pT$[ebp], ecx

; 738  : 		HRESULT hr;
; 739  : 		hr = AtlIPersistStreamInit_Save(pStm, fClearDirty, pMap, pT, pT->GetUnknown());

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0003b	e8 00 00 00 00	 call	 ?GetUnknown@COPOSGestureControl@@QAEPAUIUnknown@@XZ ; COPOSGestureControl::GetUnknown
  00040	50		 push	 eax
  00041	8b 55 f8	 mov	 edx, DWORD PTR _pT$[ebp]
  00044	52		 push	 edx
  00045	8b 45 10	 mov	 eax, DWORD PTR _pMap$[ebp]
  00048	50		 push	 eax
  00049	8b 4d 0c	 mov	 ecx, DWORD PTR _fClearDirty$[ebp]
  0004c	51		 push	 ecx
  0004d	8b 55 08	 mov	 edx, DWORD PTR _pStm$[ebp]
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?AtlIPersistStreamInit_Save@ATL@@YGJPAUIStream@@HPBUATL_PROPMAP_ENTRY@1@PAXPAUIUnknown@@@Z ; ATL::AtlIPersistStreamInit_Save
  00056	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 740  : 		if (fClearDirty && SUCCEEDED(hr))

  00059	83 7d 0c 00	 cmp	 DWORD PTR _fClearDirty$[ebp], 0
  0005d	74 18		 je	 SHORT $LN2@IPersistSt
  0005f	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00063	7c 12		 jl	 SHORT $LN2@IPersistSt

; 741  : 		{
; 742  : 			pT->m_bRequiresSave=FALSE;

  00065	8b 45 f8	 mov	 eax, DWORD PTR _pT$[ebp]
  00068	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0006b	81 e1 7f ff ff
	ff		 and	 ecx, -129		; ffffff7fH
  00071	8b 55 f8	 mov	 edx, DWORD PTR _pT$[ebp]
  00074	89 4a 48	 mov	 DWORD PTR [edx+72], ecx
$LN2@IPersistSt:

; 743  : 		}
; 744  : 		return hr;

  00077	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]

; 745  : 
; 746  : 	}

  0007a	83 c4 10	 add	 esp, 16			; 00000010H
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 0c 00	 ret	 12			; 0000000cH
?IPersistStreamInit_Save@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@QAEJPAUIStream@@HPBUATL_PROPMAP_ENTRY@2@@Z ENDP ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::IPersistStreamInit_Save
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?IPersistStreamInit_Load@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@QAEJPAUIStream@@PBUATL_PROPMAP_ENTRY@2@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
_hr$ = -12						; size = 4
_pT$ = -8						; size = 4
_this$ = -4						; size = 4
_pStm$ = 8						; size = 4
_pMap$ = 12						; size = 4
?IPersistStreamInit_Load@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@QAEJPAUIStream@@PBUATL_PROPMAP_ENTRY@2@@Z PROC ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::IPersistStreamInit_Load, COMDAT
; _this$ = ecx

; 724  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 725  : 		T* pT = static_cast<T*>(this);

  0001a	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001e	74 0b		 je	 SHORT $LN4@IPersistSt
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	83 e8 70	 sub	 eax, 112		; 00000070H
  00026	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00029	eb 07		 jmp	 SHORT $LN5@IPersistSt
$LN4@IPersistSt:
  0002b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN5@IPersistSt:
  00032	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00035	89 4d f8	 mov	 DWORD PTR _pT$[ebp], ecx

; 726  : 		HRESULT hr = AtlIPersistStreamInit_Load(pStm, pMap, pT, pT->GetUnknown());

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0003b	e8 00 00 00 00	 call	 ?GetUnknown@COPOSGestureControl@@QAEPAUIUnknown@@XZ ; COPOSGestureControl::GetUnknown
  00040	50		 push	 eax
  00041	8b 55 f8	 mov	 edx, DWORD PTR _pT$[ebp]
  00044	52		 push	 edx
  00045	8b 45 0c	 mov	 eax, DWORD PTR _pMap$[ebp]
  00048	50		 push	 eax
  00049	8b 4d 08	 mov	 ecx, DWORD PTR _pStm$[ebp]
  0004c	51		 push	 ecx
  0004d	e8 00 00 00 00	 call	 ?AtlIPersistStreamInit_Load@ATL@@YGJPAUIStream@@PBUATL_PROPMAP_ENTRY@1@PAXPAUIUnknown@@@Z ; ATL::AtlIPersistStreamInit_Load
  00052	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 727  : 		if (SUCCEEDED(hr))

  00055	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00059	7c 11		 jl	 SHORT $LN2@IPersistSt

; 728  : 			pT->m_bRequiresSave = FALSE;

  0005b	8b 55 f8	 mov	 edx, DWORD PTR _pT$[ebp]
  0005e	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  00061	25 7f ff ff ff	 and	 eax, -129		; ffffff7fH
  00066	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  00069	89 41 48	 mov	 DWORD PTR [ecx+72], eax
$LN2@IPersistSt:

; 729  : 		return hr;

  0006c	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]

; 730  : 
; 731  : 	}

  0006f	83 c4 10	 add	 esp, 16			; 00000010H
  00072	3b ec		 cmp	 ebp, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 08 00	 ret	 8
?IPersistStreamInit_Load@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@QAEJPAUIStream@@PBUATL_PROPMAP_ENTRY@2@@Z ENDP ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::IPersistStreamInit_Load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?InitNew@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
_TEXT	SEGMENT
tv78 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
?InitNew@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ PROC ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::InitNew, COMDAT

; 714  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 715  : 		ATLTRACE(atlTraceCOM, 2, _T("IPersistStreamInitImpl::InitNew\n"));

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_1EC@OBJBCLBJ@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@
  0001c	6a 02		 push	 2
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00023	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00028	50		 push	 eax
  00029	68 cb 02 00 00	 push	 715			; 000002cbH
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00033	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00036	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00041	83 c4 10	 add	 esp, 16			; 00000010H

; 716  : 		T* pT = static_cast<T*>(this);

  00044	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00048	74 0b		 je	 SHORT $LN3@InitNew
  0004a	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 e8 70	 sub	 eax, 112		; 00000070H
  00050	89 45 f0	 mov	 DWORD PTR tv78[ebp], eax
  00053	eb 07		 jmp	 SHORT $LN4@InitNew
$LN3@InitNew:
  00055	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@InitNew:
  0005c	8b 4d f0	 mov	 ecx, DWORD PTR tv78[ebp]
  0005f	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 717  : 		pT->m_bRequiresSave = TRUE;

  00062	8b 55 fc	 mov	 edx, DWORD PTR _pT$[ebp]
  00065	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  00068	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00070	89 41 48	 mov	 DWORD PTR [ecx+72], eax

; 718  : 		return S_OK;

  00073	33 c0		 xor	 eax, eax

; 719  : 	}

  00075	83 c4 10	 add	 esp, 16			; 00000010H
  00078	3b ec		 cmp	 ebp, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
?InitNew@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ENDP ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::InitNew
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetSizeMax@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAT_ULARGE_INTEGER@@@Z
_TEXT	SEGMENT
tv218 = -180						; size = 4
tv202 = -176						; size = 4
tv168 = -172						; size = 4
tv93 = -168						; size = 4
tv68 = -164						; size = 4
$T1 = -160						; size = 4
$T2 = -156						; size = 8
$T3 = -148						; size = 8
$T4 = -140						; size = 8
$T5 = -132						; size = 8
$T6 = -124						; size = 4
$T7 = -120						; size = 4
$T8 = -116						; size = 8
___atl_condVal$9 = -108					; size = 4
_var$10 = -100						; size = 16
_bstr$11 = -80						; size = 4
___atl_condVal$12 = -76					; size = 4
_pData$13 = -72						; size = 4
_nVarSize$14 = -64					; size = 8
_i$15 = -52						; size = 4
_piidOld$ = -48						; size = 4
_pDispatch$ = -40					; size = 4
_nSize$ = -28						; size = 8
___atl_condVal$16 = -16					; size = 4
_pMap$ = -12						; size = 4
_pT$ = -8						; size = 4
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_pcbSize$ = 12						; size = 4
?GetSizeMax@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAT_ULARGE_INTEGER@@@Z PROC ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::GetSizeMax, COMDAT

; 621  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 4c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-180]
  00011	b9 2d 00 00 00	 mov	 ecx, 45			; 0000002dH
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd

; 622  : 		HRESULT hr = S_OK;

  0001d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 623  : 		T* pT = static_cast<T*>(this);

  00024	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00028	74 0e		 je	 SHORT $LN29@GetSizeMax
  0002a	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 e8 70	 sub	 eax, 112		; 00000070H
  00030	89 85 5c ff ff
	ff		 mov	 DWORD PTR tv68[ebp], eax
  00036	eb 0a		 jmp	 SHORT $LN30@GetSizeMax
$LN29@GetSizeMax:
  00038	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
$LN30@GetSizeMax:
  00042	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv68[ebp]
  00048	89 4d f8	 mov	 DWORD PTR _pT$[ebp], ecx

; 624  : 		ATLTRACE(atlTraceCOM, 2, _T("IPersistStreamInitImpl::GetSizeMax\n"));

  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_1EI@OFMICAKH@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@
  00050	6a 02		 push	 2
  00052	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00057	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  0005c	50		 push	 eax
  0005d	68 70 02 00 00	 push	 624			; 00000270H
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00067	8d 4d 8c	 lea	 ecx, DWORD PTR $T8[ebp]
  0006a	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00075	83 c4 10	 add	 esp, 16			; 00000010H

; 625  : 
; 626  : 		ATLASSERT(pcbSize != NULL);

  00078	83 7d 0c 00	 cmp	 DWORD PTR _pcbSize$[ebp], 0
  0007c	75 26		 jne	 SHORT $LN31@GetSizeMax
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@EKMOGOFM@?$AAp?$AAc?$AAb?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00088	6a 00		 push	 0
  0008a	68 72 02 00 00	 push	 626			; 00000272H
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00094	6a 02		 push	 2
  00096	e8 00 00 00 00	 call	 __CrtDbgReportW
  0009b	83 c4 18	 add	 esp, 24			; 00000018H
  0009e	83 f8 01	 cmp	 eax, 1
  000a1	75 01		 jne	 SHORT $LN31@GetSizeMax
  000a3	cc		 int	 3
$LN31@GetSizeMax:

; 627  : 		if (pcbSize == NULL)

  000a4	83 7d 0c 00	 cmp	 DWORD PTR _pcbSize$[ebp], 0
  000a8	75 0a		 jne	 SHORT $LN14@GetSizeMax

; 628  : 		{
; 629  : 			return E_POINTER;

  000aa	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  000af	e9 3a 04 00 00	 jmp	 $LN1@GetSizeMax
$LN14@GetSizeMax:

; 630  : 		}
; 631  : 
; 632  : 		const ATL_PROPMAP_ENTRY* pMap = T::GetPropertyMap();

  000b4	e8 00 00 00 00	 call	 ?GetPropertyMap@COPOSGestureControl@@SAPBUATL_PROPMAP_ENTRY@ATL@@XZ ; COPOSGestureControl::GetPropertyMap
  000b9	89 45 f4	 mov	 DWORD PTR _pMap$[ebp], eax
$LN4@GetSizeMax:

; 633  : 		ATLENSURE_RETURN(pMap != NULL);

  000bc	83 7d f4 00	 cmp	 DWORD PTR _pMap$[ebp], 0
  000c0	74 0c		 je	 SHORT $LN32@GetSizeMax
  000c2	c7 85 58 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv93[ebp], 1
  000cc	eb 0a		 jmp	 SHORT $LN33@GetSizeMax
$LN32@GetSizeMax:
  000ce	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv93[ebp], 0
$LN33@GetSizeMax:
  000d8	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR tv93[ebp]
  000de	89 45 f0	 mov	 DWORD PTR ___atl_condVal$16[ebp], eax
  000e1	83 7d f0 00	 cmp	 DWORD PTR ___atl_condVal$16[ebp], 0
  000e5	75 26		 jne	 SHORT $LN34@GetSizeMax
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000f1	6a 00		 push	 0
  000f3	68 79 02 00 00	 push	 633			; 00000279H
  000f8	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  000fd	6a 02		 push	 2
  000ff	e8 00 00 00 00	 call	 __CrtDbgReportW
  00104	83 c4 18	 add	 esp, 24			; 00000018H
  00107	83 f8 01	 cmp	 eax, 1
  0010a	75 01		 jne	 SHORT $LN34@GetSizeMax
  0010c	cc		 int	 3
$LN34@GetSizeMax:
  0010d	83 7d f0 00	 cmp	 DWORD PTR ___atl_condVal$16[ebp], 0
  00111	75 0a		 jne	 SHORT $LN2@GetSizeMax
  00113	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00118	e9 d1 03 00 00	 jmp	 $LN1@GetSizeMax
$LN2@GetSizeMax:
  0011d	33 d2		 xor	 edx, edx
  0011f	75 9b		 jne	 SHORT $LN4@GetSizeMax

; 634  : 
; 635  : 		// Start the size with the size of the ATL version we write out.
; 636  : 		ULARGE_INTEGER nSize;
; 637  : 		nSize.QuadPart = sizeof(DWORD);

  00121	33 c0		 xor	 eax, eax
  00123	c7 45 e4 04 00
	00 00		 mov	 DWORD PTR _nSize$[ebp], 4
  0012a	89 45 e8	 mov	 DWORD PTR _nSize$[ebp+4], eax

; 638  : 
; 639  : 		CComPtr<IDispatch> pDispatch;

  0012d	8d 4d d8	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  00130	e8 00 00 00 00	 call	 ??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ ; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>

; 640  : 		const IID* piidOld = NULL;

  00135	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _piidOld$[ebp], 0

; 641  : 		for (int i = 0; pMap[i].pclsidPropPage != NULL; i++)

  0013c	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _i$15[ebp], 0
  00143	eb 09		 jmp	 SHORT $LN7@GetSizeMax
$LN5@GetSizeMax:
  00145	8b 4d cc	 mov	 ecx, DWORD PTR _i$15[ebp]
  00148	83 c1 01	 add	 ecx, 1
  0014b	89 4d cc	 mov	 DWORD PTR _i$15[ebp], ecx
$LN7@GetSizeMax:
  0014e	6b 55 cc 24	 imul	 edx, DWORD PTR _i$15[ebp], 36
  00152	8b 45 f4	 mov	 eax, DWORD PTR _pMap$[ebp]
  00155	83 7c 10 04 00	 cmp	 DWORD PTR [eax+edx+4], 0
  0015a	0f 84 69 03 00
	00		 je	 $LN6@GetSizeMax

; 642  : 		{
; 643  : 			ULARGE_INTEGER nVarSize;
; 644  : 			nVarSize.QuadPart = 0;

  00160	0f 57 c0	 xorps	 xmm0, xmm0
  00163	66 0f 13 45 c0	 movlpd	 QWORD PTR _nVarSize$14[ebp], xmm0

; 645  : 
; 646  : 			if (pMap[i].szDesc == NULL)

  00168	6b 4d cc 24	 imul	 ecx, DWORD PTR _i$15[ebp], 36
  0016c	8b 55 f4	 mov	 edx, DWORD PTR _pMap$[ebp]
  0016f	83 3c 0a 00	 cmp	 DWORD PTR [edx+ecx], 0
  00173	75 02		 jne	 SHORT $LN16@GetSizeMax

; 647  : 			{
; 648  : 				continue;

  00175	eb ce		 jmp	 SHORT $LN5@GetSizeMax
$LN16@GetSizeMax:

; 649  : 			}
; 650  : 
; 651  : 			// check if raw data entry
; 652  : 			if (pMap[i].dwSizeData != 0)

  00177	6b 45 cc 24	 imul	 eax, DWORD PTR _i$15[ebp], 36
  0017b	8b 4d f4	 mov	 ecx, DWORD PTR _pMap$[ebp]
  0017e	83 7c 01 1c 00	 cmp	 DWORD PTR [ecx+eax+28], 0
  00183	0f 84 da 00 00
	00		 je	 $LN17@GetSizeMax

; 653  : 			{
; 654  : 				//Calculate stream size for BSTRs special case
; 655  : 				if (pMap[i].vt == VT_BSTR)

  00189	6b 55 cc 24	 imul	 edx, DWORD PTR _i$15[ebp], 36
  0018d	8b 45 f4	 mov	 eax, DWORD PTR _pMap$[ebp]
  00190	0f b7 4c 10 20	 movzx	 ecx, WORD PTR [eax+edx+32]
  00195	83 f9 08	 cmp	 ecx, 8
  00198	0f 85 b2 00 00
	00		 jne	 $LN19@GetSizeMax

; 656  : 				{
; 657  : 					void* pData = (void*) (pMap[i].dwOffsetData + (DWORD_PTR)pT);

  0019e	6b 55 cc 24	 imul	 edx, DWORD PTR _i$15[ebp], 36
  001a2	8b 45 f4	 mov	 eax, DWORD PTR _pMap$[ebp]
  001a5	8b 4c 10 18	 mov	 ecx, DWORD PTR [eax+edx+24]
  001a9	03 4d f8	 add	 ecx, DWORD PTR _pT$[ebp]
  001ac	89 4d b8	 mov	 DWORD PTR _pData$13[ebp], ecx
$LN10@GetSizeMax:

; 658  : 					ATLENSURE_RETURN( pData >= (void*)(DWORD_PTR)pMap[i].dwOffsetData

  001af	6b 55 cc 24	 imul	 edx, DWORD PTR _i$15[ebp], 36
  001b3	8b 45 f4	 mov	 eax, DWORD PTR _pMap$[ebp]
  001b6	8b 4d b8	 mov	 ecx, DWORD PTR _pData$13[ebp]
  001b9	3b 4c 10 18	 cmp	 ecx, DWORD PTR [eax+edx+24]
  001bd	72 14		 jb	 SHORT $LN35@GetSizeMax
  001bf	8b 55 b8	 mov	 edx, DWORD PTR _pData$13[ebp]
  001c2	3b 55 f8	 cmp	 edx, DWORD PTR _pT$[ebp]
  001c5	72 0c		 jb	 SHORT $LN35@GetSizeMax
  001c7	c7 85 54 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv168[ebp], 1
  001d1	eb 0a		 jmp	 SHORT $LN36@GetSizeMax
$LN35@GetSizeMax:
  001d3	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv168[ebp], 0
$LN36@GetSizeMax:
  001dd	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR tv168[ebp]
  001e3	89 45 b4	 mov	 DWORD PTR ___atl_condVal$12[ebp], eax
  001e6	83 7d b4 00	 cmp	 DWORD PTR ___atl_condVal$12[ebp], 0
  001ea	75 26		 jne	 SHORT $LN37@GetSizeMax
  001ec	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  001f1	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  001f6	6a 00		 push	 0
  001f8	68 93 02 00 00	 push	 659			; 00000293H
  001fd	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00202	6a 02		 push	 2
  00204	e8 00 00 00 00	 call	 __CrtDbgReportW
  00209	83 c4 18	 add	 esp, 24			; 00000018H
  0020c	83 f8 01	 cmp	 eax, 1
  0020f	75 01		 jne	 SHORT $LN37@GetSizeMax
  00211	cc		 int	 3
$LN37@GetSizeMax:
  00212	83 7d b4 00	 cmp	 DWORD PTR ___atl_condVal$12[ebp], 0
  00216	75 17		 jne	 SHORT $LN8@GetSizeMax
  00218	c7 45 88 05 40
	00 80		 mov	 DWORD PTR $T7[ebp], -2147467259 ; 80004005H
  0021f	8d 4d d8	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  00222	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  00227	8b 45 88	 mov	 eax, DWORD PTR $T7[ebp]
  0022a	e9 bf 02 00 00	 jmp	 $LN1@GetSizeMax
$LN8@GetSizeMax:
  0022f	33 d2		 xor	 edx, edx
  00231	0f 85 78 ff ff
	ff		 jne	 $LN10@GetSizeMax

; 659  : 									&& pData >= (void*)(DWORD_PTR)pT );
; 660  : 					BSTR bstr = *reinterpret_cast<BSTR*>(pData);

  00237	8b 45 b8	 mov	 eax, DWORD PTR _pData$13[ebp]
  0023a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0023c	89 4d b0	 mov	 DWORD PTR _bstr$11[ebp], ecx

; 661  : 
; 662  : 					nVarSize.LowPart = CComBSTR::GetStreamSize(bstr);

  0023f	8b 55 b0	 mov	 edx, DWORD PTR _bstr$11[ebp]
  00242	52		 push	 edx
  00243	e8 00 00 00 00	 call	 ?GetStreamSize@CComBSTR@ATL@@SAKPA_W@Z ; ATL::CComBSTR::GetStreamSize
  00248	83 c4 04	 add	 esp, 4
  0024b	89 45 c0	 mov	 DWORD PTR _nVarSize$14[ebp], eax

; 663  : 				}

  0024e	eb 0e		 jmp	 SHORT $LN20@GetSizeMax
$LN19@GetSizeMax:

; 664  : 				else
; 665  : 				{
; 666  : 					nVarSize.LowPart = pMap[i].dwSizeData;

  00250	6b 45 cc 24	 imul	 eax, DWORD PTR _i$15[ebp], 36
  00254	8b 4d f4	 mov	 ecx, DWORD PTR _pMap$[ebp]
  00257	8b 54 01 1c	 mov	 edx, DWORD PTR [ecx+eax+28]
  0025b	89 55 c0	 mov	 DWORD PTR _nVarSize$14[ebp], edx
$LN20@GetSizeMax:

; 667  : 				}
; 668  : 			}

  0025e	e9 06 02 00 00	 jmp	 $LN18@GetSizeMax
$LN17@GetSizeMax:

; 669  : 			else
; 670  : 			{
; 671  : 				CComVariant var;

  00263	8d 4d 9c	 lea	 ecx, DWORD PTR _var$10[ebp]
  00266	e8 00 00 00 00	 call	 ??0CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::CComVariant

; 672  : 				if (pMap[i].piidDispatch != piidOld)

  0026b	6b 45 cc 24	 imul	 eax, DWORD PTR _i$15[ebp], 36
  0026f	8b 4d f4	 mov	 ecx, DWORD PTR _pMap$[ebp]
  00272	8b 54 01 08	 mov	 edx, DWORD PTR [ecx+eax+8]
  00276	3b 55 d0	 cmp	 edx, DWORD PTR _piidOld$[ebp]
  00279	0f 84 25 01 00
	00		 je	 $LN22@GetSizeMax

; 673  : 				{
; 674  : 					pDispatch.Release();

  0027f	8d 4d d8	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  00282	e8 00 00 00 00	 call	 ?Release@?$CComPtrBase@UIDispatch@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IDispatch>::Release
$LN13@GetSizeMax:

; 675  : 					ATLENSURE_RETURN(pMap[i].piidDispatch);

  00287	6b 45 cc 24	 imul	 eax, DWORD PTR _i$15[ebp], 36
  0028b	8b 4d f4	 mov	 ecx, DWORD PTR _pMap$[ebp]
  0028e	83 7c 01 08 00	 cmp	 DWORD PTR [ecx+eax+8], 0
  00293	74 0c		 je	 SHORT $LN38@GetSizeMax
  00295	c7 85 50 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv202[ebp], 1
  0029f	eb 0a		 jmp	 SHORT $LN39@GetSizeMax
$LN38@GetSizeMax:
  002a1	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv202[ebp], 0
$LN39@GetSizeMax:
  002ab	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR tv202[ebp]
  002b1	89 55 94	 mov	 DWORD PTR ___atl_condVal$9[ebp], edx
  002b4	83 7d 94 00	 cmp	 DWORD PTR ___atl_condVal$9[ebp], 0
  002b8	75 26		 jne	 SHORT $LN40@GetSizeMax
  002ba	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  002bf	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  002c4	6a 00		 push	 0
  002c6	68 a3 02 00 00	 push	 675			; 000002a3H
  002cb	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  002d0	6a 02		 push	 2
  002d2	e8 00 00 00 00	 call	 __CrtDbgReportW
  002d7	83 c4 18	 add	 esp, 24			; 00000018H
  002da	83 f8 01	 cmp	 eax, 1
  002dd	75 01		 jne	 SHORT $LN40@GetSizeMax
  002df	cc		 int	 3
$LN40@GetSizeMax:
  002e0	83 7d 94 00	 cmp	 DWORD PTR ___atl_condVal$9[ebp], 0
  002e4	75 1f		 jne	 SHORT $LN11@GetSizeMax
  002e6	c7 45 84 05 40
	00 80		 mov	 DWORD PTR $T6[ebp], -2147467259 ; 80004005H
  002ed	8d 4d 9c	 lea	 ecx, DWORD PTR _var$10[ebp]
  002f0	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  002f5	8d 4d d8	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  002f8	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  002fd	8b 45 84	 mov	 eax, DWORD PTR $T6[ebp]
  00300	e9 e9 01 00 00	 jmp	 $LN1@GetSizeMax
$LN11@GetSizeMax:
  00305	33 c9		 xor	 ecx, ecx
  00307	0f 85 7a ff ff
	ff		 jne	 $LN13@GetSizeMax

; 676  : 
; 677  : 					hr = pT->GetUnknown()->QueryInterface(*pMap[i].piidDispatch, (void**)&pDispatch);

  0030d	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  00310	e8 00 00 00 00	 call	 ?GetUnknown@COPOSGestureControl@@QAEPAUIUnknown@@XZ ; COPOSGestureControl::GetUnknown
  00315	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv218[ebp], eax
  0031b	8d 4d d8	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  0031e	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ ; ATL::CComPtrBase<IDispatch>::operator&
  00323	8b f4		 mov	 esi, esp
  00325	50		 push	 eax
  00326	6b 55 cc 24	 imul	 edx, DWORD PTR _i$15[ebp], 36
  0032a	8b 45 f4	 mov	 eax, DWORD PTR _pMap$[ebp]
  0032d	8b 4c 10 08	 mov	 ecx, DWORD PTR [eax+edx+8]
  00331	51		 push	 ecx
  00332	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR tv218[ebp]
  00338	52		 push	 edx
  00339	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR tv218[ebp]
  0033f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00341	8b 11		 mov	 edx, DWORD PTR [ecx]
  00343	ff d2		 call	 edx
  00345	3b f4		 cmp	 esi, esp
  00347	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0034c	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 678  : 					if (FAILED(hr))

  0034f	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00353	7d 41		 jge	 SHORT $LN24@GetSizeMax

; 679  : 					{
; 680  : 						ATLTRACE(atlTraceCOM, 0, _T("Failed to get a dispatch pointer for property #%i\n"), i);

  00355	8b 45 cc	 mov	 eax, DWORD PTR _i$15[ebp]
  00358	50		 push	 eax
  00359	68 00 00 00 00	 push	 OFFSET ??_C@_1GG@DILCHCCF@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAa@
  0035e	6a 00		 push	 0
  00360	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00365	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  0036a	50		 push	 eax
  0036b	68 a8 02 00 00	 push	 680			; 000002a8H
  00370	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00375	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  0037b	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00380	50		 push	 eax
  00381	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00386	83 c4 14	 add	 esp, 20			; 00000014H

; 681  : 						break;

  00389	8d 4d 9c	 lea	 ecx, DWORD PTR _var$10[ebp]
  0038c	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  00391	e9 33 01 00 00	 jmp	 $LN6@GetSizeMax
$LN24@GetSizeMax:

; 682  : 					}
; 683  : 					piidOld = pMap[i].piidDispatch;

  00396	6b 4d cc 24	 imul	 ecx, DWORD PTR _i$15[ebp], 36
  0039a	8b 55 f4	 mov	 edx, DWORD PTR _pMap$[ebp]
  0039d	8b 44 0a 08	 mov	 eax, DWORD PTR [edx+ecx+8]
  003a1	89 45 d0	 mov	 DWORD PTR _piidOld$[ebp], eax
$LN22@GetSizeMax:

; 684  : 				}
; 685  : 
; 686  : 				hr = pDispatch.GetProperty(pMap[i].dispid, &var);

  003a4	8d 4d 9c	 lea	 ecx, DWORD PTR _var$10[ebp]
  003a7	51		 push	 ecx
  003a8	6b 55 cc 24	 imul	 edx, DWORD PTR _i$15[ebp], 36
  003ac	8b 45 f4	 mov	 eax, DWORD PTR _pMap$[ebp]
  003af	8b 4c 10 14	 mov	 ecx, DWORD PTR [eax+edx+20]
  003b3	51		 push	 ecx
  003b4	8d 4d d8	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  003b7	e8 00 00 00 00	 call	 ?GetProperty@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@@Z ; ATL::CComPtr<IDispatch>::GetProperty
  003bc	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 687  : 				if (FAILED(hr))

  003bf	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  003c3	7d 49		 jge	 SHORT $LN25@GetSizeMax

; 688  : 				{
; 689  : 					ATLTRACE(atlTraceCOM, 0, _T("Invoked failed on DISPID %x\n"), pMap[i].dispid);

  003c5	6b 55 cc 24	 imul	 edx, DWORD PTR _i$15[ebp], 36
  003c9	8b 45 f4	 mov	 eax, DWORD PTR _pMap$[ebp]
  003cc	8b 4c 10 14	 mov	 ecx, DWORD PTR [eax+edx+20]
  003d0	51		 push	 ecx
  003d1	68 00 00 00 00	 push	 OFFSET ??_C@_1DK@CIMELFNK@?$AAI?$AAn?$AAv?$AAo?$AAk?$AAe?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5@
  003d6	6a 00		 push	 0
  003d8	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  003dd	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  003e2	50		 push	 eax
  003e3	68 b1 02 00 00	 push	 689			; 000002b1H
  003e8	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  003ed	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  003f3	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  003f8	50		 push	 eax
  003f9	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  003fe	83 c4 14	 add	 esp, 20			; 00000014H

; 690  : 					break;

  00401	8d 4d 9c	 lea	 ecx, DWORD PTR _var$10[ebp]
  00404	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  00409	e9 bb 00 00 00	 jmp	 $LN6@GetSizeMax
$LN25@GetSizeMax:

; 691  : 				}
; 692  : 
; 693  : 				hr = var.GetSizeMax(&nVarSize);

  0040e	8d 55 c0	 lea	 edx, DWORD PTR _nVarSize$14[ebp]
  00411	52		 push	 edx
  00412	8d 4d 9c	 lea	 ecx, DWORD PTR _var$10[ebp]
  00415	e8 00 00 00 00	 call	 ?GetSizeMax@CComVariant@ATL@@QBEJPAT_ULARGE_INTEGER@@@Z ; ATL::CComVariant::GetSizeMax
  0041a	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 694  : 				if (FAILED(hr))

  0041d	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00421	7d 3e		 jge	 SHORT $LN26@GetSizeMax

; 695  : 				{
; 696  : 					ATLTRACE(atlTraceCOM, 0, _T("Failed to get size for property #%i\n"), i);

  00423	8b 45 cc	 mov	 eax, DWORD PTR _i$15[ebp]
  00426	50		 push	 eax
  00427	68 00 00 00 00	 push	 OFFSET ??_C@_1EK@BKBPFBNN@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAs@
  0042c	6a 00		 push	 0
  0042e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00433	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00438	50		 push	 eax
  00439	68 b8 02 00 00	 push	 696			; 000002b8H
  0043e	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00443	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00449	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0044e	50		 push	 eax
  0044f	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00454	83 c4 14	 add	 esp, 20			; 00000014H

; 697  : 					break;

  00457	8d 4d 9c	 lea	 ecx, DWORD PTR _var$10[ebp]
  0045a	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  0045f	eb 68		 jmp	 SHORT $LN6@GetSizeMax
$LN26@GetSizeMax:

; 698  : 				}
; 699  : 			}

  00461	8d 4d 9c	 lea	 ecx, DWORD PTR _var$10[ebp]
  00464	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
$LN18@GetSizeMax:

; 700  : 
; 701  : 			hr = AtlAdd(&nSize.QuadPart, nSize.QuadPart, nVarSize.QuadPart);

  00469	8b 4d c4	 mov	 ecx, DWORD PTR _nVarSize$14[ebp+4]
  0046c	51		 push	 ecx
  0046d	8b 55 c0	 mov	 edx, DWORD PTR _nVarSize$14[ebp]
  00470	52		 push	 edx
  00471	8b 45 e8	 mov	 eax, DWORD PTR _nSize$[ebp+4]
  00474	50		 push	 eax
  00475	8b 4d e4	 mov	 ecx, DWORD PTR _nSize$[ebp]
  00478	51		 push	 ecx
  00479	8d 55 e4	 lea	 edx, DWORD PTR _nSize$[ebp]
  0047c	52		 push	 edx
  0047d	e8 00 00 00 00	 call	 ??$AtlAdd@_K@ATL@@YAJPA_K_K1@Z ; ATL::AtlAdd<unsigned __int64>
  00482	83 c4 14	 add	 esp, 20			; 00000014H
  00485	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 702  : 			if (FAILED(hr))

  00488	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0048c	7d 36		 jge	 SHORT $LN27@GetSizeMax

; 703  : 			{
; 704  : 				ATLTRACE(atlTraceCOM, 0, _T("Result overflow after adding property #%i\n"), i);

  0048e	8b 45 cc	 mov	 eax, DWORD PTR _i$15[ebp]
  00491	50		 push	 eax
  00492	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@PECCGIAK@?$AAR?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AAo?$AAv?$AAe?$AAr?$AAf?$AAl?$AAo?$AAw@
  00497	6a 00		 push	 0
  00499	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  0049e	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  004a3	50		 push	 eax
  004a4	68 c0 02 00 00	 push	 704			; 000002c0H
  004a9	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  004ae	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  004b4	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  004b9	50		 push	 eax
  004ba	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  004bf	83 c4 14	 add	 esp, 20			; 00000014H

; 705  : 				break;

  004c2	eb 05		 jmp	 SHORT $LN6@GetSizeMax
$LN27@GetSizeMax:

; 706  : 			}
; 707  : 		}

  004c4	e9 7c fc ff ff	 jmp	 $LN5@GetSizeMax
$LN6@GetSizeMax:

; 708  : 		*pcbSize = nSize;

  004c9	8b 4d 0c	 mov	 ecx, DWORD PTR _pcbSize$[ebp]
  004cc	8b 55 e4	 mov	 edx, DWORD PTR _nSize$[ebp]
  004cf	8b 45 e8	 mov	 eax, DWORD PTR _nSize$[ebp+4]
  004d2	89 11		 mov	 DWORD PTR [ecx], edx
  004d4	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 709  : 		return hr;

  004d7	8b 4d fc	 mov	 ecx, DWORD PTR _hr$[ebp]
  004da	89 8d 60 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  004e0	8d 4d d8	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  004e3	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  004e8	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
$LN1@GetSizeMax:

; 710  : 	}

  004ee	52		 push	 edx
  004ef	8b cd		 mov	 ecx, ebp
  004f1	50		 push	 eax
  004f2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN46@GetSizeMax
  004f8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  004fd	58		 pop	 eax
  004fe	5a		 pop	 edx
  004ff	5f		 pop	 edi
  00500	5e		 pop	 esi
  00501	81 c4 b4 00 00
	00		 add	 esp, 180		; 000000b4H
  00507	3b ec		 cmp	 ebp, esp
  00509	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0050e	8b e5		 mov	 esp, ebp
  00510	5d		 pop	 ebp
  00511	c2 08 00	 ret	 8
$LN46@GetSizeMax:
  00514	04 00 00 00	 DD	 4
  00518	00 00 00 00	 DD	 $LN45@GetSizeMax
$LN45@GetSizeMax:
  0051c	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00520	08 00 00 00	 DD	 8
  00524	00 00 00 00	 DD	 $LN41@GetSizeMax
  00528	d8 ff ff ff	 DD	 -40			; ffffffd8H
  0052c	04 00 00 00	 DD	 4
  00530	00 00 00 00	 DD	 $LN42@GetSizeMax
  00534	c0 ff ff ff	 DD	 -64			; ffffffc0H
  00538	08 00 00 00	 DD	 8
  0053c	00 00 00 00	 DD	 $LN43@GetSizeMax
  00540	9c ff ff ff	 DD	 -100			; ffffff9cH
  00544	10 00 00 00	 DD	 16			; 00000010H
  00548	00 00 00 00	 DD	 $LN44@GetSizeMax
$LN44@GetSizeMax:
  0054c	76		 DB	 118			; 00000076H
  0054d	61		 DB	 97			; 00000061H
  0054e	72		 DB	 114			; 00000072H
  0054f	00		 DB	 0
$LN43@GetSizeMax:
  00550	6e		 DB	 110			; 0000006eH
  00551	56		 DB	 86			; 00000056H
  00552	61		 DB	 97			; 00000061H
  00553	72		 DB	 114			; 00000072H
  00554	53		 DB	 83			; 00000053H
  00555	69		 DB	 105			; 00000069H
  00556	7a		 DB	 122			; 0000007aH
  00557	65		 DB	 101			; 00000065H
  00558	00		 DB	 0
$LN42@GetSizeMax:
  00559	70		 DB	 112			; 00000070H
  0055a	44		 DB	 68			; 00000044H
  0055b	69		 DB	 105			; 00000069H
  0055c	73		 DB	 115			; 00000073H
  0055d	70		 DB	 112			; 00000070H
  0055e	61		 DB	 97			; 00000061H
  0055f	74		 DB	 116			; 00000074H
  00560	63		 DB	 99			; 00000063H
  00561	68		 DB	 104			; 00000068H
  00562	00		 DB	 0
$LN41@GetSizeMax:
  00563	6e		 DB	 110			; 0000006eH
  00564	53		 DB	 83			; 00000053H
  00565	69		 DB	 105			; 00000069H
  00566	7a		 DB	 122			; 0000007aH
  00567	65		 DB	 101			; 00000065H
  00568	00		 DB	 0
?GetSizeMax@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAT_ULARGE_INTEGER@@@Z ENDP ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::GetSizeMax
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Save@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStream@@H@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_pStm$ = 12						; size = 4
_fClearDirty$ = 16					; size = 4
?Save@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStream@@H@Z PROC ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::Save, COMDAT

; 615  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 616  : 		T* pT = static_cast<T*>(this);

  00017	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001b	74 0b		 je	 SHORT $LN3@Save
  0001d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00020	83 e8 70	 sub	 eax, 112		; 00000070H
  00023	89 45 f0	 mov	 DWORD PTR tv68[ebp], eax
  00026	eb 07		 jmp	 SHORT $LN4@Save
$LN3@Save:
  00028	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@Save:
  0002f	8b 4d f0	 mov	 ecx, DWORD PTR tv68[ebp]
  00032	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 617  : 		ATLTRACE(atlTraceCOM, 2, _T("IPersistStreamInitImpl::Save\n"));

  00035	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@INAJINEF@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@
  0003a	6a 02		 push	 2
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00041	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00046	50		 push	 eax
  00047	68 69 02 00 00	 push	 617			; 00000269H
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00051	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00054	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0005f	83 c4 10	 add	 esp, 16			; 00000010H

; 618  : 		return pT->IPersistStreamInit_Save(pStm, fClearDirty, T::GetPropertyMap());

  00062	e8 00 00 00 00	 call	 ?GetPropertyMap@COPOSGestureControl@@SAPBUATL_PROPMAP_ENTRY@ATL@@XZ ; COPOSGestureControl::GetPropertyMap
  00067	50		 push	 eax
  00068	8b 55 10	 mov	 edx, DWORD PTR _fClearDirty$[ebp]
  0006b	52		 push	 edx
  0006c	8b 45 0c	 mov	 eax, DWORD PTR _pStm$[ebp]
  0006f	50		 push	 eax
  00070	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  00073	83 c1 70	 add	 ecx, 112		; 00000070H
  00076	e8 00 00 00 00	 call	 ?IPersistStreamInit_Save@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@QAEJPAUIStream@@HPBUATL_PROPMAP_ENTRY@2@@Z ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::IPersistStreamInit_Save

; 619  : 	}

  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	3b ec		 cmp	 ebp, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 0c 00	 ret	 12			; 0000000cH
?Save@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStream@@H@Z ENDP ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::Save
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Load@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStream@@@Z
_TEXT	SEGMENT
tv78 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_pStm$ = 12						; size = 4
?Load@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStream@@@Z PROC ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::Load, COMDAT

; 608  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 609  : 		ATLTRACE(atlTraceCOM, 2, _T("IPersistStreamInitImpl::Load\n"));

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@FAGOCEOM@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@
  0001c	6a 02		 push	 2
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00023	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00028	50		 push	 eax
  00029	68 61 02 00 00	 push	 609			; 00000261H
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00033	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00036	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00041	83 c4 10	 add	 esp, 16			; 00000010H

; 610  : 
; 611  : 		T* pT = static_cast<T*>(this);

  00044	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  00048	74 0b		 je	 SHORT $LN3@Load
  0004a	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 e8 70	 sub	 eax, 112		; 00000070H
  00050	89 45 f0	 mov	 DWORD PTR tv78[ebp], eax
  00053	eb 07		 jmp	 SHORT $LN4@Load
$LN3@Load:
  00055	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@Load:
  0005c	8b 4d f0	 mov	 ecx, DWORD PTR tv78[ebp]
  0005f	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 612  : 		return pT->IPersistStreamInit_Load(pStm, T::GetPropertyMap());

  00062	e8 00 00 00 00	 call	 ?GetPropertyMap@COPOSGestureControl@@SAPBUATL_PROPMAP_ENTRY@ATL@@XZ ; COPOSGestureControl::GetPropertyMap
  00067	50		 push	 eax
  00068	8b 55 0c	 mov	 edx, DWORD PTR _pStm$[ebp]
  0006b	52		 push	 edx
  0006c	8b 4d fc	 mov	 ecx, DWORD PTR _pT$[ebp]
  0006f	83 c1 70	 add	 ecx, 112		; 00000070H
  00072	e8 00 00 00 00	 call	 ?IPersistStreamInit_Load@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@QAEJPAUIStream@@PBUATL_PROPMAP_ENTRY@2@@Z ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::IPersistStreamInit_Load

; 613  : 	}

  00077	83 c4 10	 add	 esp, 16			; 00000010H
  0007a	3b ec		 cmp	 ebp, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 08 00	 ret	 8
?Load@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAUIStream@@@Z ENDP ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::Load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?IsDirty@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ
_TEXT	SEGMENT
tv88 = -20						; size = 4
tv78 = -16						; size = 4
$T1 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
?IsDirty@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ PROC ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::IsDirty, COMDAT

; 602  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 603  : 		ATLTRACE(atlTraceCOM, 2, _T("IPersistStreamInitImpl::IsDirty\n"));

  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_1EC@BOABIBDM@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@
  0001f	6a 02		 push	 2
  00021	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00026	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  0002b	50		 push	 eax
  0002c	68 5b 02 00 00	 push	 603			; 0000025bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00036	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00039	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00044	83 c4 10	 add	 esp, 16			; 00000010H

; 604  : 		T* pT = static_cast<T*>(this);

  00047	83 7d 08 00	 cmp	 DWORD PTR _this$[ebp], 0
  0004b	74 0b		 je	 SHORT $LN3@IsDirty
  0004d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 e8 70	 sub	 eax, 112		; 00000070H
  00053	89 45 f0	 mov	 DWORD PTR tv78[ebp], eax
  00056	eb 07		 jmp	 SHORT $LN4@IsDirty
$LN3@IsDirty:
  00058	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@IsDirty:
  0005f	8b 4d f0	 mov	 ecx, DWORD PTR tv78[ebp]
  00062	89 4d fc	 mov	 DWORD PTR _pT$[ebp], ecx

; 605  : 		return (pT->m_bRequiresSave) ? S_OK : S_FALSE;

  00065	8b 55 fc	 mov	 edx, DWORD PTR _pT$[ebp]
  00068	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  0006b	c1 e8 07	 shr	 eax, 7
  0006e	83 e0 01	 and	 eax, 1
  00071	74 09		 je	 SHORT $LN5@IsDirty
  00073	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
  0007a	eb 07		 jmp	 SHORT $LN6@IsDirty
$LN5@IsDirty:
  0007c	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
$LN6@IsDirty:
  00083	8b 45 ec	 mov	 eax, DWORD PTR tv88[ebp]

; 606  : 	}

  00086	83 c4 14	 add	 esp, 20			; 00000014H
  00089	3b ec		 cmp	 ebp, esp
  0008b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 04 00	 ret	 4
?IsDirty@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJXZ ENDP ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::IsDirty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetClassID@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = 8						; size = 4
_pClassID$ = 12						; size = 4
?GetClassID@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z PROC ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::GetClassID, COMDAT

; 592  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 593  : 		ATLTRACE(atlTraceCOM, 2, _T("IPersistStreamInitImpl::GetClassID\n"));

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1EI@FEIMOCIK@?$AAI?$AAP?$AAe?$AAr?$AAs?$AAi?$AAs?$AAt?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAI@
  00019	6a 02		 push	 2
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00020	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00025	50		 push	 eax
  00026	68 51 02 00 00	 push	 593			; 00000251H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00030	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00033	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003e	83 c4 10	 add	 esp, 16			; 00000010H

; 594  : 		if (pClassID == NULL)

  00041	83 7d 0c 00	 cmp	 DWORD PTR _pClassID$[ebp], 0
  00045	75 07		 jne	 SHORT $LN2@GetClassID

; 595  : 			return E_POINTER;

  00047	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0004c	eb 20		 jmp	 SHORT $LN1@GetClassID
$LN2@GetClassID:

; 596  : 		*pClassID = T::GetObjectCLSID();

  0004e	e8 00 00 00 00	 call	 ?GetObjectCLSID@?$CComCoClass@VCOPOSGestureControl@@$1?CLSID_OPOSGestureControl@@3U_GUID@@B@ATL@@SGABU_GUID@@XZ ; ATL::CComCoClass<COPOSGestureControl,&CLSID_OPOSGestureControl>::GetObjectCLSID
  00053	8b 4d 0c	 mov	 ecx, DWORD PTR _pClassID$[ebp]
  00056	8b 10		 mov	 edx, DWORD PTR [eax]
  00058	89 11		 mov	 DWORD PTR [ecx], edx
  0005a	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0005d	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  00060	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00063	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00066	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00069	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 597  : 		return S_OK;

  0006c	33 c0		 xor	 eax, eax
$LN1@GetClassID:

; 598  : 	}

  0006e	83 c4 08	 add	 esp, 8
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
?GetClassID@?$IPersistStreamInitImpl@VCOPOSGestureControl@@@ATL@@UAGJPAU_GUID@@@Z ENDP ; ATL::IPersistStreamInitImpl<COPOSGestureControl>::GetClassID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?ProcessWindowMessage@?$CComControl@VCOPOSGestureControl@@V?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT
tv64 = -28						; size = 4
$T1 = -24						; size = 8
_bHandled$ = -12					; size = 4
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_lResult$ = 24						; size = 4
_dwMsgMapID$ = 28					; size = 4
?ProcessWindowMessage@?$CComControl@VCOPOSGestureControl@@V?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UAEHPAUHWND__@@IIJAAJK@Z PROC ; ATL::CComControl<COPOSGestureControl,ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >::ProcessWindowMessage, COMDAT
; _this$ = ecx

; 1636 : 	BEGIN_MSG_MAP(thisClass)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00011	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00014	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00017	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001a	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001d	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00020	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00023	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _bHandled$[ebp], 1
  0002a	8b 45 1c	 mov	 eax, DWORD PTR _dwMsgMapID$[ebp]
  0002d	89 45 e4	 mov	 DWORD PTR tv64[ebp], eax
  00030	83 7d e4 00	 cmp	 DWORD PTR tv64[ebp], 0
  00034	74 05		 je	 SHORT $LN4@ProcessWin
  00036	e9 f3 00 00 00	 jmp	 $LN13@ProcessWin
$LN4@ProcessWin:

; 1637 : 		__if_not_exists(WinBase::m_wndReflector)
; 1638 : 		{
; 1639 : 		MESSAGE_HANDLER(WM_PAINT, CComControlBase::OnPaint)

  0003b	83 7d 0c 0f	 cmp	 DWORD PTR _uMsg$[ebp], 15 ; 0000000fH
  0003f	75 37		 jne	 SHORT $LN5@ProcessWin
  00041	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _bHandled$[ebp], 1
  00048	8d 4d f4	 lea	 ecx, DWORD PTR _bHandled$[ebp]
  0004b	51		 push	 ecx
  0004c	8b 55 14	 mov	 edx, DWORD PTR _lParam$[ebp]
  0004f	52		 push	 edx
  00050	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  00053	50		 push	 eax
  00054	8b 4d 0c	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  00057	51		 push	 ecx
  00058	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	83 e9 48	 sub	 ecx, 72			; 00000048H
  0005e	e8 00 00 00 00	 call	 ?OnPaint@CComControlBase@ATL@@QAEJIIJAAH@Z ; ATL::CComControlBase::OnPaint
  00063	8b 55 18	 mov	 edx, DWORD PTR _lResult$[ebp]
  00066	89 02		 mov	 DWORD PTR [edx], eax
  00068	83 7d f4 00	 cmp	 DWORD PTR _bHandled$[ebp], 0
  0006c	74 0a		 je	 SHORT $LN5@ProcessWin
  0006e	b8 01 00 00 00	 mov	 eax, 1
  00073	e9 13 01 00 00	 jmp	 $LN1@ProcessWin
$LN5@ProcessWin:

; 1640 : 		}
; 1641 : 		MESSAGE_HANDLER(WM_SETFOCUS, CComControlBase::OnSetFocus)

  00078	83 7d 0c 07	 cmp	 DWORD PTR _uMsg$[ebp], 7
  0007c	75 37		 jne	 SHORT $LN7@ProcessWin
  0007e	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _bHandled$[ebp], 1
  00085	8d 45 f4	 lea	 eax, DWORD PTR _bHandled$[ebp]
  00088	50		 push	 eax
  00089	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  0008c	51		 push	 ecx
  0008d	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  00090	52		 push	 edx
  00091	8b 45 0c	 mov	 eax, DWORD PTR _uMsg$[ebp]
  00094	50		 push	 eax
  00095	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	83 e9 48	 sub	 ecx, 72			; 00000048H
  0009b	e8 00 00 00 00	 call	 ?OnSetFocus@CComControlBase@ATL@@QAEJIIJAAH@Z ; ATL::CComControlBase::OnSetFocus
  000a0	8b 4d 18	 mov	 ecx, DWORD PTR _lResult$[ebp]
  000a3	89 01		 mov	 DWORD PTR [ecx], eax
  000a5	83 7d f4 00	 cmp	 DWORD PTR _bHandled$[ebp], 0
  000a9	74 0a		 je	 SHORT $LN7@ProcessWin
  000ab	b8 01 00 00 00	 mov	 eax, 1
  000b0	e9 d6 00 00 00	 jmp	 $LN1@ProcessWin
$LN7@ProcessWin:

; 1642 : 		MESSAGE_HANDLER(WM_KILLFOCUS, CComControlBase::OnKillFocus)

  000b5	83 7d 0c 08	 cmp	 DWORD PTR _uMsg$[ebp], 8
  000b9	75 37		 jne	 SHORT $LN9@ProcessWin
  000bb	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _bHandled$[ebp], 1
  000c2	8d 55 f4	 lea	 edx, DWORD PTR _bHandled$[ebp]
  000c5	52		 push	 edx
  000c6	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  000c9	50		 push	 eax
  000ca	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  000cd	51		 push	 ecx
  000ce	8b 55 0c	 mov	 edx, DWORD PTR _uMsg$[ebp]
  000d1	52		 push	 edx
  000d2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	83 e9 48	 sub	 ecx, 72			; 00000048H
  000d8	e8 00 00 00 00	 call	 ?OnKillFocus@CComControlBase@ATL@@QAEJIIJAAH@Z ; ATL::CComControlBase::OnKillFocus
  000dd	8b 4d 18	 mov	 ecx, DWORD PTR _lResult$[ebp]
  000e0	89 01		 mov	 DWORD PTR [ecx], eax
  000e2	83 7d f4 00	 cmp	 DWORD PTR _bHandled$[ebp], 0
  000e6	74 0a		 je	 SHORT $LN9@ProcessWin
  000e8	b8 01 00 00 00	 mov	 eax, 1
  000ed	e9 99 00 00 00	 jmp	 $LN1@ProcessWin
$LN9@ProcessWin:

; 1643 : 		MESSAGE_HANDLER(WM_MOUSEACTIVATE, CComControlBase::OnMouseActivate)

  000f2	83 7d 0c 21	 cmp	 DWORD PTR _uMsg$[ebp], 33 ; 00000021H
  000f6	75 34		 jne	 SHORT $LN11@ProcessWin
  000f8	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _bHandled$[ebp], 1
  000ff	8d 55 f4	 lea	 edx, DWORD PTR _bHandled$[ebp]
  00102	52		 push	 edx
  00103	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  00106	50		 push	 eax
  00107	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0010a	51		 push	 ecx
  0010b	8b 55 0c	 mov	 edx, DWORD PTR _uMsg$[ebp]
  0010e	52		 push	 edx
  0010f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00112	83 e9 48	 sub	 ecx, 72			; 00000048H
  00115	e8 00 00 00 00	 call	 ?OnMouseActivate@CComControlBase@ATL@@QAEJIIJAAH@Z ; ATL::CComControlBase::OnMouseActivate
  0011a	8b 4d 18	 mov	 ecx, DWORD PTR _lResult$[ebp]
  0011d	89 01		 mov	 DWORD PTR [ecx], eax
  0011f	83 7d f4 00	 cmp	 DWORD PTR _bHandled$[ebp], 0
  00123	74 07		 je	 SHORT $LN11@ProcessWin
  00125	b8 01 00 00 00	 mov	 eax, 1
  0012a	eb 5f		 jmp	 SHORT $LN1@ProcessWin
$LN11@ProcessWin:
  0012c	eb 5b		 jmp	 SHORT $LN2@ProcessWin
$LN13@ProcessWin:

; 1644 : 		__if_exists(WinBase::m_wndReflector)
; 1645 : 		{
; 1646 : 			CHAIN_MSG_MAP(baseWinClass)
; 1647 : 		}
; 1648 : 	END_MSG_MAP()

  0012e	8b 55 1c	 mov	 edx, DWORD PTR _dwMsgMapID$[ebp]
  00131	52		 push	 edx
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_1DK@DAANONID@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe@
  00137	6a 00		 push	 0
  00139	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  0013e	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<32,0>::operator unsigned int
  00143	50		 push	 eax
  00144	68 70 06 00 00	 push	 1648			; 00000670H
  00149	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0014e	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  00151	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00156	50		 push	 eax
  00157	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0015c	83 c4 14	 add	 esp, 20			; 00000014H
  0015f	33 c0		 xor	 eax, eax
  00161	75 26		 jne	 SHORT $LN2@ProcessWin
  00163	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  00168	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0016d	6a 00		 push	 0
  0016f	68 70 06 00 00	 push	 1648			; 00000670H
  00174	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00179	6a 02		 push	 2
  0017b	e8 00 00 00 00	 call	 __CrtDbgReportW
  00180	83 c4 18	 add	 esp, 24			; 00000018H
  00183	83 f8 01	 cmp	 eax, 1
  00186	75 01		 jne	 SHORT $LN2@ProcessWin
  00188	cc		 int	 3
$LN2@ProcessWin:
  00189	33 c0		 xor	 eax, eax
$LN1@ProcessWin:
  0018b	52		 push	 edx
  0018c	8b cd		 mov	 ecx, ebp
  0018e	50		 push	 eax
  0018f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN18@ProcessWin
  00195	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0019a	58		 pop	 eax
  0019b	5a		 pop	 edx
  0019c	83 c4 1c	 add	 esp, 28			; 0000001cH
  0019f	3b ec		 cmp	 ebp, esp
  001a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a6	8b e5		 mov	 esp, ebp
  001a8	5d		 pop	 ebp
  001a9	c2 18 00	 ret	 24			; 00000018H
$LN18@ProcessWin:
  001ac	01 00 00 00	 DD	 1
  001b0	00 00 00 00	 DD	 $LN17@ProcessWin
$LN17@ProcessWin:
  001b4	f4 ff ff ff	 DD	 -12			; fffffff4H
  001b8	04 00 00 00	 DD	 4
  001bc	00 00 00 00	 DD	 $LN16@ProcessWin
$LN16@ProcessWin:
  001c0	62		 DB	 98			; 00000062H
  001c1	48		 DB	 72			; 00000048H
  001c2	61		 DB	 97			; 00000061H
  001c3	6e		 DB	 110			; 0000006eH
  001c4	64		 DB	 100			; 00000064H
  001c5	6c		 DB	 108			; 0000006cH
  001c6	65		 DB	 101			; 00000065H
  001c7	64		 DB	 100			; 00000064H
  001c8	00		 DB	 0
?ProcessWindowMessage@?$CComControl@VCOPOSGestureControl@@V?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UAEHPAUHWND__@@IIJAAJK@Z ENDP ; ATL::CComControl<COPOSGestureControl,ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >::ProcessWindowMessage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?ControlQueryInterface@?$CComControl@VCOPOSGestureControl@@V?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv73 = -16						; size = 4
tv68 = -12						; size = 4
_pT$ = -8						; size = 4
_this$ = -4						; size = 4
_iid$ = 8						; size = 4
_ppv$ = 12						; size = 4
?ControlQueryInterface@?$CComControl@VCOPOSGestureControl@@V?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UAEJABU_GUID@@PAPAX@Z PROC ; ATL::CComControl<COPOSGestureControl,ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >::ControlQueryInterface, COMDAT
; _this$ = ecx

; 1616 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1617 : 		T* pT = static_cast<T*>(this);

  0001b	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001f	74 0b		 je	 SHORT $LN3@ControlQue
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 e8 04	 sub	 eax, 4
  00027	89 45 f4	 mov	 DWORD PTR tv68[ebp], eax
  0002a	eb 07		 jmp	 SHORT $LN4@ControlQue
$LN3@ControlQue:
  0002c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@ControlQue:
  00033	8b 4d f4	 mov	 ecx, DWORD PTR tv68[ebp]
  00036	89 4d f8	 mov	 DWORD PTR _pT$[ebp], ecx

; 1618 : 		return pT->GetUnknown()->QueryInterface(iid, ppv);

  00039	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  0003c	e8 00 00 00 00	 call	 ?GetUnknown@COPOSGestureControl@@QAEPAUIUnknown@@XZ ; COPOSGestureControl::GetUnknown
  00041	89 45 f0	 mov	 DWORD PTR tv73[ebp], eax
  00044	8b f4		 mov	 esi, esp
  00046	8b 55 0c	 mov	 edx, DWORD PTR _ppv$[ebp]
  00049	52		 push	 edx
  0004a	8b 45 08	 mov	 eax, DWORD PTR _iid$[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR tv73[ebp]
  00051	51		 push	 ecx
  00052	8b 55 f0	 mov	 edx, DWORD PTR tv73[ebp]
  00055	8b 02		 mov	 eax, DWORD PTR [edx]
  00057	8b 08		 mov	 ecx, DWORD PTR [eax]
  00059	ff d1		 call	 ecx
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1619 : 	}

  00062	5e		 pop	 esi
  00063	83 c4 10	 add	 esp, 16			; 00000010H
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 08 00	 ret	 8
?ControlQueryInterface@?$CComControl@VCOPOSGestureControl@@V?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UAEJABU_GUID@@PAPAX@Z ENDP ; ATL::CComControl<COPOSGestureControl,ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >::ControlQueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?CreateControlWindow@?$CComControl@VCOPOSGestureControl@@V?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UAEPAUHWND__@@PAU3@AAUtagRECT@@@Z
_TEXT	SEGMENT
tv68 = -20						; size = 4
_pT$ = -8						; size = 4
_this$ = -4						; size = 4
_hWndParent$ = 8					; size = 4
_rcPos$ = 12						; size = 4
?CreateControlWindow@?$CComControl@VCOPOSGestureControl@@V?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UAEPAUHWND__@@PAU3@AAUtagRECT@@@Z PROC ; ATL::CComControl<COPOSGestureControl,ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >::CreateControlWindow, COMDAT
; _this$ = ecx

; 1597 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1598 : 		T* pT = static_cast<T*>(this);

  0001d	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  00021	74 0b		 je	 SHORT $LN3@CreateCont
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 e8 04	 sub	 eax, 4
  00029	89 45 ec	 mov	 DWORD PTR tv68[ebp], eax
  0002c	eb 07		 jmp	 SHORT $LN4@CreateCont
$LN3@CreateCont:
  0002e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@CreateCont:
  00035	8b 4d ec	 mov	 ecx, DWORD PTR tv68[ebp]
  00038	89 4d f8	 mov	 DWORD PTR _pT$[ebp], ecx

; 1599 : 		return pT->Create(hWndParent, rcPos);

  0003b	6a 00		 push	 0
  0003d	51		 push	 ecx
  0003e	8b cc		 mov	 ecx, esp
  00040	6a 00		 push	 0
  00042	e8 00 00 00 00	 call	 ??0_U_MENUorID@ATL@@QAE@I@Z ; ATL::_U_MENUorID::_U_MENUorID
  00047	6a 00		 push	 0
  00049	6a 00		 push	 0
  0004b	6a 00		 push	 0
  0004d	51		 push	 ecx
  0004e	8b cc		 mov	 ecx, esp
  00050	8b 55 0c	 mov	 edx, DWORD PTR _rcPos$[ebp]
  00053	52		 push	 edx
  00054	e8 00 00 00 00	 call	 ??0_U_RECT@ATL@@QAE@AAUtagRECT@@@Z ; ATL::_U_RECT::_U_RECT
  00059	8b 45 08	 mov	 eax, DWORD PTR _hWndParent$[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _pT$[ebp]
  00060	83 c1 4c	 add	 ecx, 76			; 0000004cH
  00063	e8 00 00 00 00	 call	 ?atlCreate@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PB_WKKV_U_MENUorID@2@PAX@Z ; ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::atlCreate

; 1600 : 	}

  00068	83 c4 14	 add	 esp, 20			; 00000014H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
?CreateControlWindow@?$CComControl@VCOPOSGestureControl@@V?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@@ATL@@UAEPAUHWND__@@PAU3@AAUtagRECT@@@Z ENDP ; ATL::CComControl<COPOSGestureControl,ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> > >::CreateControlWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?atlCreate@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PB_WKKV_U_MENUorID@2@PAX@Z
_TEXT	SEGMENT
_atom$ = -8						; size = 2
_this$ = -4						; size = 4
_hWndParent$ = 8					; size = 4
_rect$ = 12						; size = 4
_szWindowName$ = 16					; size = 4
_dwStyle$ = 20						; size = 4
_dwExStyle$ = 24					; size = 4
_MenuOrID$ = 28						; size = 4
_lpCreateParam$ = 32					; size = 4
?atlCreate@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PB_WKKV_U_MENUorID@2@PAX@Z PROC ; ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::atlCreate, COMDAT
; _this$ = ecx

; 3707 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3708 : 		if (T::GetWndClassInfo().m_lpszOrigName == NULL)

  00018	e8 00 00 00 00	 call	 ?GetWndClassInfo@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@SAAAU_ATL_WNDCLASSINFOW@2@XZ ; ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo
  0001d	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  00021	75 0f		 jne	 SHORT $LN2@atlCreate

; 3709 : 			T::GetWndClassInfo().m_lpszOrigName = this->GetWndClassName();

  00023	e8 00 00 00 00	 call	 ?GetWndClassName@CWindow@ATL@@SAPB_WXZ ; ATL::CWindow::GetWndClassName
  00028	8b f0		 mov	 esi, eax
  0002a	e8 00 00 00 00	 call	 ?GetWndClassInfo@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@SAAAU_ATL_WNDCLASSINFOW@2@XZ ; ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo
  0002f	89 70 30	 mov	 DWORD PTR [eax+48], esi
$LN2@atlCreate:

; 3710 : 		ATOM atom = T::GetWndClassInfo().Register(&this->m_pfnSuperWindowProc);

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	83 c0 20	 add	 eax, 32			; 00000020H
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?GetWndClassInfo@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@SAAAU_ATL_WNDCLASSINFOW@2@XZ ; ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo
  0003e	8b c8		 mov	 ecx, eax
  00040	e8 00 00 00 00	 call	 ?Register@_ATL_WNDCLASSINFOW@ATL@@QAEGPAP6GJPAUHWND__@@IIJ@Z@Z ; ATL::_ATL_WNDCLASSINFOW::Register
  00045	66 89 45 f8	 mov	 WORD PTR _atom$[ebp], ax

; 3711 : 
; 3712 : 		dwStyle = T::GetWndStyle(dwStyle);

  00049	8b 4d 14	 mov	 ecx, DWORD PTR _dwStyle$[ebp]
  0004c	51		 push	 ecx
  0004d	e8 00 00 00 00	 call	 ?GetWndStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndStyle
  00052	83 c4 04	 add	 esp, 4
  00055	89 45 14	 mov	 DWORD PTR _dwStyle$[ebp], eax

; 3713 : 		dwExStyle = T::GetWndExStyle(dwExStyle);

  00058	8b 55 18	 mov	 edx, DWORD PTR _dwExStyle$[ebp]
  0005b	52		 push	 edx
  0005c	e8 00 00 00 00	 call	 ?GetWndExStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndExStyle
  00061	83 c4 04	 add	 esp, 4
  00064	89 45 18	 mov	 DWORD PTR _dwExStyle$[ebp], eax

; 3714 : 
; 3715 : 		// set caption
; 3716 : 		if (szWindowName == NULL)

  00067	83 7d 10 00	 cmp	 DWORD PTR _szWindowName$[ebp], 0
  0006b	75 08		 jne	 SHORT $LN3@atlCreate

; 3717 : 			szWindowName = T::GetWndCaption();

  0006d	e8 00 00 00 00	 call	 ?GetWndCaption@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@SAPB_WXZ ; ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndCaption
  00072	89 45 10	 mov	 DWORD PTR _szWindowName$[ebp], eax
$LN3@atlCreate:

; 3718 : 
; 3719 : 		return CWindowImplBaseT< TBase, TWinTraits >::Create(hWndParent, rect, szWindowName,

  00075	8b 45 20	 mov	 eax, DWORD PTR _lpCreateParam$[ebp]
  00078	50		 push	 eax
  00079	0f b7 4d f8	 movzx	 ecx, WORD PTR _atom$[ebp]
  0007d	51		 push	 ecx
  0007e	8b 55 1c	 mov	 edx, DWORD PTR _MenuOrID$[ebp]
  00081	52		 push	 edx
  00082	8b 45 18	 mov	 eax, DWORD PTR _dwExStyle$[ebp]
  00085	50		 push	 eax
  00086	8b 4d 14	 mov	 ecx, DWORD PTR _dwStyle$[ebp]
  00089	51		 push	 ecx
  0008a	8b 55 10	 mov	 edx, DWORD PTR _szWindowName$[ebp]
  0008d	52		 push	 edx
  0008e	8b 45 0c	 mov	 eax, DWORD PTR _rect$[ebp]
  00091	50		 push	 eax
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _hWndParent$[ebp]
  00095	51		 push	 ecx
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	e8 00 00 00 00	 call	 ?atlCreate@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PB_WKKV_U_MENUorID@2@GPAX@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::atlCreate

; 3720 : 			dwStyle, dwExStyle, MenuOrID, atom, lpCreateParam);
; 3721 : 	}

  0009e	5e		 pop	 esi
  0009f	83 c4 08	 add	 esp, 8
  000a2	3b ec		 cmp	 ebp, esp
  000a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c2 1c 00	 ret	 28			; 0000001cH
?atlCreate@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PB_WKKV_U_MENUorID@2@PAX@Z ENDP ; ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::atlCreate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?GetWndCaption@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@SAPB_WXZ
_TEXT	SEGMENT
?GetWndCaption@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@SAPB_WXZ PROC ; ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndCaption, COMDAT

; 3695 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3696 : 		return NULL;

  00003	33 c0		 xor	 eax, eax

; 3697 : 	}

  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
?GetWndCaption@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@SAPB_WXZ ENDP ; ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndCaption
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?GetWndClassInfo@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@SAAAU_ATL_WNDCLASSINFOW@2@XZ
_TEXT	SEGMENT
?GetWndClassInfo@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@SAAAU_ATL_WNDCLASSINFOW@2@XZ PROC ; ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo, COMDAT

; 3692 : 	DECLARE_WND_CLASS2(NULL, CWindowImpl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ?wc@?1??GetWndClassInfo@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@SAAAU_ATL_WNDCLASSINFOW@3@XZ@4U43@A ; `ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo'::`2'::wc
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetWndClassInfo@?$CWindowImpl@VCOPOSGestureControl@@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@3@@ATL@@SAAAU_ATL_WNDCLASSINFOW@2@XZ ENDP ; ATL::CWindowImpl<COPOSGestureControl,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Invoke@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_dispidMember$ = 12					; size = 4
_riid$ = 16						; size = 4
_lcid$ = 20						; size = 4
_wFlags$ = 24						; size = 2
_pdispparams$ = 28					; size = 4
_pvarResult$ = 32					; size = 4
_pexcepinfo$ = 36					; size = 4
_puArgErr$ = 40						; size = 4
?Invoke@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z PROC ; ATL::IDispatchImpl<IOPOSGestureControl,&IID_IOPOSGestureControl,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::Invoke, COMDAT

; 5192 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 5193 : 		return _tih.Invoke((IDispatch*)this, dispidMember, riid, lcid,

  00003	8b 45 28	 mov	 eax, DWORD PTR _puArgErr$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 24	 mov	 ecx, DWORD PTR _pexcepinfo$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 20	 mov	 edx, DWORD PTR _pvarResult$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 1c	 mov	 eax, DWORD PTR _pdispparams$[ebp]
  00012	50		 push	 eax
  00013	0f b7 4d 18	 movzx	 ecx, WORD PTR _wFlags$[ebp]
  00017	51		 push	 ecx
  00018	8b 55 14	 mov	 edx, DWORD PTR _lcid$[ebp]
  0001b	52		 push	 edx
  0001c	8b 45 10	 mov	 eax, DWORD PTR _riid$[ebp]
  0001f	50		 push	 eax
  00020	8b 4d 0c	 mov	 ecx, DWORD PTR _dispidMember$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00027	52		 push	 edx
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET ?_tih@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A ; ATL::IDispatchImpl<IOPOSGestureControl,&IID_IOPOSGestureControl,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::_tih
  0002d	e8 00 00 00 00	 call	 ?Invoke@CComTypeInfoHolder@ATL@@QAEJPAUIDispatch@@JABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ; ATL::CComTypeInfoHolder::Invoke

; 5194 : 		wFlags, pdispparams, pvarResult, pexcepinfo, puArgErr);
; 5195 : 	}

  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	5d		 pop	 ebp
  0003a	c2 24 00	 ret	 36			; 00000024H
?Invoke@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ENDP ; ATL::IDispatchImpl<IOPOSGestureControl,&IID_IOPOSGestureControl,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::Invoke
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetIDsOfNames@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJABU_GUID@@PAPA_WIKPAJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_rgszNames$ = 16					; size = 4
_cNames$ = 20						; size = 4
_lcid$ = 24						; size = 4
_rgdispid$ = 28						; size = 4
?GetIDsOfNames@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJABU_GUID@@PAPA_WIKPAJ@Z PROC ; ATL::IDispatchImpl<IOPOSGestureControl,&IID_IOPOSGestureControl,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::GetIDsOfNames, COMDAT

; 5180 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 5181 : 		return _tih.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);

  00003	8b 45 1c	 mov	 eax, DWORD PTR _rgdispid$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 18	 mov	 ecx, DWORD PTR _lcid$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 14	 mov	 edx, DWORD PTR _cNames$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 10	 mov	 eax, DWORD PTR _rgszNames$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _riid$[ebp]
  00016	51		 push	 ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET ?_tih@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A ; ATL::IDispatchImpl<IOPOSGestureControl,&IID_IOPOSGestureControl,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::_tih
  0001c	e8 00 00 00 00	 call	 ?GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPA_WIKPAJ@Z ; ATL::CComTypeInfoHolder::GetIDsOfNames

; 5182 : 	}

  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	5d		 pop	 ebp
  00029	c2 18 00	 ret	 24			; 00000018H
?GetIDsOfNames@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJABU_GUID@@PAPA_WIKPAJ@Z ENDP ; ATL::IDispatchImpl<IOPOSGestureControl,&IID_IOPOSGestureControl,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::GetIDsOfNames
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetTypeInfo@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJIKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_itinfo$ = 12						; size = 4
_lcid$ = 16						; size = 4
_pptinfo$ = 20						; size = 4
?GetTypeInfo@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJIKPAPAUITypeInfo@@@Z PROC ; ATL::IDispatchImpl<IOPOSGestureControl,&IID_IOPOSGestureControl,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::GetTypeInfo, COMDAT

; 5171 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 5172 : 		return _tih.GetTypeInfo(itinfo, lcid, pptinfo);

  00003	8b 45 14	 mov	 eax, DWORD PTR _pptinfo$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR _lcid$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 0c	 mov	 edx, DWORD PTR _itinfo$[ebp]
  0000e	52		 push	 edx
  0000f	b9 00 00 00 00	 mov	 ecx, OFFSET ?_tih@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A ; ATL::IDispatchImpl<IOPOSGestureControl,&IID_IOPOSGestureControl,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::_tih
  00014	e8 00 00 00 00	 call	 ?GetTypeInfo@CComTypeInfoHolder@ATL@@QAEJIKPAPAUITypeInfo@@@Z ; ATL::CComTypeInfoHolder::GetTypeInfo

; 5173 : 	}

  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	5d		 pop	 ebp
  00021	c2 10 00	 ret	 16			; 00000010H
?GetTypeInfo@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJIKPAPAUITypeInfo@@@Z ENDP ; ATL::IDispatchImpl<IOPOSGestureControl,&IID_IOPOSGestureControl,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::GetTypeInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetTypeInfoCount@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pctinfo$ = 12						; size = 4
?GetTypeInfoCount@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAI@Z PROC ; ATL::IDispatchImpl<IOPOSGestureControl,&IID_IOPOSGestureControl,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::GetTypeInfoCount, COMDAT

; 5161 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 5162 : 		if (pctinfo == NULL)

  00003	83 7d 0c 00	 cmp	 DWORD PTR _pctinfo$[ebp], 0
  00007	75 07		 jne	 SHORT $LN2@GetTypeInf

; 5163 : 			return E_POINTER;

  00009	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0000e	eb 0b		 jmp	 SHORT $LN1@GetTypeInf
$LN2@GetTypeInf:

; 5164 : 		*pctinfo = 1;

  00010	8b 45 0c	 mov	 eax, DWORD PTR _pctinfo$[ebp]
  00013	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 5165 : 		return S_OK;

  00019	33 c0		 xor	 eax, eax
$LN1@GetTypeInf:

; 5166 : 	}

  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
?GetTypeInfoCount@?$IDispatchImpl@UIOPOSGestureControl@@$1?IID_IOPOSGestureControl@@3U_GUID@@B$1?LIBID_OposGestureControl_CCO@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAI@Z ENDP ; ATL::IDispatchImpl<IOPOSGestureControl,&IID_IOPOSGestureControl,&LIBID_OposGestureControl_CCO,1,0,ATL::CComTypeInfoHolder>::GetTypeInfoCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.h
;	COMDAT ?Clear@OposVariant@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@OposVariant@@QAEJXZ PROC				; OposVariant::Clear, COMDAT
; _this$ = ecx

; 79   :     HRESULT Clear() { _bNeedClear = false; return VariantClear(this); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c6 40 10 00	 mov	 BYTE PTR [eax+16], 0
  00016	8b f4		 mov	 esi, esp
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	51		 push	 ecx
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	5e		 pop	 esi
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?Clear@OposVariant@@QAEJXZ ENDP				; OposVariant::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.h
;	COMDAT ??1OposVariant@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1OposVariant@@QAE@XZ PROC				; OposVariant::~OposVariant, COMDAT
; _this$ = ecx

; 78   :     ~OposVariant() { if (_bNeedClear) Clear(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  00015	85 c9		 test	 ecx, ecx
  00017	74 08		 je	 SHORT $LN1@OposVarian
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?Clear@OposVariant@@QAEJXZ ; OposVariant::Clear
$LN1@OposVarian:
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
??1OposVariant@@QAE@XZ ENDP				; OposVariant::~OposVariant
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\OposVariant.h
;	COMDAT ??0OposVariant@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0OposVariant@@QAE@XZ PROC				; OposVariant::OposVariant, COMDAT
; _this$ = ecx

; 77   :     OposVariant() { vt = VT_EMPTY; _bNeedClear = false; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	33 c0		 xor	 eax, eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	66 89 01	 mov	 WORD PTR [ecx], ax
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	c6 42 10 00	 mov	 BYTE PTR [edx+16], 0
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??0OposVariant@@QAE@XZ ENDP				; OposVariant::OposVariant
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIDataObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIDataObject@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IDataObject>::~CComPtr<IDataObject>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIDataObject@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IDataObject>::~CComPtrBase<IDataObject>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIDataObject@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IDataObject>::~CComPtr<IDataObject>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIDataObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIDataObject@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IDataObject>::CComPtr<IDataObject>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIDataObject@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IDataObject>::CComPtrBase<IDataObject>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIDataObject@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IDataObject>::CComPtr<IDataObject>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIDataObject@@@ATL@@QAEPAPAUIDataObject@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIDataObject@@@ATL@@QAEPAPAUIDataObject@@XZ PROC ; ATL::CComPtrBase<IDataObject>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIDataObject@@@ATL@@QAEPAPAUIDataObject@@XZ ENDP ; ATL::CComPtrBase<IDataObject>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UIDataObject@@@ATL@@QBEPAUIDataObject@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIDataObject@@@ATL@@QBEPAUIDataObject@@XZ PROC ; ATL::CComPtrBase<IDataObject>::operator IDataObject *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UIDataObject@@@ATL@@QBEPAUIDataObject@@XZ ENDP ; ATL::CComPtrBase<IDataObject>::operator IDataObject *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIDataObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIDataObject@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IDataObject>::~CComPtrBase<IDataObject>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIDataObject@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IDataObject>::~CComPtrBase<IDataObject>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIDataObject@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIDataObject@@@ATL@@IAE@XZ PROC	; ATL::CComPtrBase<IDataObject>::CComPtrBase<IDataObject>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIDataObject@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IDataObject>::CComPtrBase<IDataObject>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IOleInPlaceObject>::~CComPtr<IOleInPlaceObject>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleInPlaceObject>::~CComPtrBase<IOleInPlaceObject>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IOleInPlaceObject>::~CComPtr<IOleInPlaceObject>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IOleInPlaceObject>::CComPtr<IOleInPlaceObject>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIOleInPlaceObject@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleInPlaceObject>::CComPtrBase<IOleInPlaceObject>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IOleInPlaceObject>::CComPtr<IOleInPlaceObject>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??8?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBE_NPAUIOleInPlaceObject@@@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBE_NPAUIOleInPlaceObject@@@Z PROC ; ATL::CComPtrBase<IOleInPlaceObject>::operator==, COMDAT
; _this$ = ecx

; 222  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 223  :         return p == pT;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	3b 4d 08	 cmp	 ecx, DWORD PTR _pT$[ebp]
  0001f	75 09		 jne	 SHORT $LN3@operator
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@operator:
  00031	8a 45 f8	 mov	 al, BYTE PTR tv66[ebp]

; 224  :     }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??8?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBE_NPAUIOleInPlaceObject@@@Z ENDP ; ATL::CComPtrBase<IOleInPlaceObject>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??9?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBE_NPAUIOleInPlaceObject@@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??9?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBE_NPAUIOleInPlaceObject@@@Z PROC ; ATL::CComPtrBase<IOleInPlaceObject>::operator!=, COMDAT
; _this$ = ecx

; 217  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  :         return !operator==(pT);

  00017	8b 45 08	 mov	 eax, DWORD PTR _pT$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBE_NPAUIOleInPlaceObject@@@Z ; ATL::CComPtrBase<IOleInPlaceObject>::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]

; 219  :     }

  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBE_NPAUIOleInPlaceObject@@@Z ENDP ; ATL::CComPtrBase<IOleInPlaceObject>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObject@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObject@@@1@XZ PROC ; ATL::CComPtrBase<IOleInPlaceObject>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObject@@@1@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceObject>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QAEPAPAUIOleInPlaceObject@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QAEPAPAUIOleInPlaceObject@@XZ PROC ; ATL::CComPtrBase<IOleInPlaceObject>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QAEPAPAUIOleInPlaceObject@@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceObject>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IOleInPlaceObject>::~CComPtrBase<IOleInPlaceObject>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IOleInPlaceObject>::~CComPtrBase<IOleInPlaceObject>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceObject@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIOleInPlaceObject@@@ATL@@IAE@XZ PROC	; ATL::CComPtrBase<IOleInPlaceObject>::CComPtrBase<IOleInPlaceObject>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIOleInPlaceObject@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IOleInPlaceObject>::CComPtrBase<IOleInPlaceObject>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComQIPtr@UIOleObject@@$1?_GUID_00000112_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComQIPtr@UIOleObject@@$1?_GUID_00000112_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ PROC ; ATL::CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>::~CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleObject@@@ATL@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComQIPtr@UIOleObject@@$1?_GUID_00000112_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ ENDP ; ATL::CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>::~CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??4?$CComQIPtr@UIOleObject@@$1?_GUID_00000112_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAEPAUIOleObject@@PAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??4?$CComQIPtr@UIOleObject@@$1?_GUID_00000112_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAEPAUIOleObject@@PAUIUnknown@@@Z PROC ; ATL::CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>::operator=, COMDAT
; _this$ = ecx

; 660  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 661  :         if(this->p!=lp)

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 08		 mov	 ecx, DWORD PTR [eax]
  00013	3b 4d 08	 cmp	 ecx, DWORD PTR _lp$[ebp]
  00016	74 15		 je	 SHORT $LN2@operator

; 662  :         {
; 663  :             AtlComQIPtrAssign2((IUnknown**)&this->p, lp, *piid);

  00018	68 00 00 00 00	 push	 OFFSET __GUID_00000112_0000_0000_c000_000000000046
  0001d	8b 55 08	 mov	 edx, DWORD PTR _lp$[ebp]
  00020	52		 push	 edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ?AtlComQIPtrAssign2@ATL@@YAXPAPAUIUnknown@@PAU2@ABU_GUID@@@Z ; ATL::AtlComQIPtrAssign2
  0002a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@operator:

; 664  :         }
; 665  :         return *this;

  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator IOleObject *

; 666  :     }

  00035	83 c4 04	 add	 esp, 4
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??4?$CComQIPtr@UIOleObject@@$1?_GUID_00000112_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAEPAUIOleObject@@PAUIUnknown@@@Z ENDP ; ATL::CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComQIPtr@UIOleObject@@$1?_GUID_00000112_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComQIPtr@UIOleObject@@$1?_GUID_00000112_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ PROC ; ATL::CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>::CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>, COMDAT
; _this$ = ecx

; 616  :     CComQIPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 617  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleObject@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleObject>::CComPtr<IOleObject>

; 618  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComQIPtr@UIOleObject@@$1?_GUID_00000112_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ ENDP ; ATL::CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>::CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComQIPtr@UISpecifyPropertyPages@@$1?_GUID_b196b28b_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComQIPtr@UISpecifyPropertyPages@@$1?_GUID_b196b28b_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ PROC ; ATL::CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>::~CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtr@UISpecifyPropertyPages@@@ATL@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComQIPtr@UISpecifyPropertyPages@@$1?_GUID_b196b28b_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ ENDP ; ATL::CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>::~CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??4?$CComQIPtr@UISpecifyPropertyPages@@$1?_GUID_b196b28b_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAEPAUISpecifyPropertyPages@@PAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??4?$CComQIPtr@UISpecifyPropertyPages@@$1?_GUID_b196b28b_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAEPAUISpecifyPropertyPages@@PAUIUnknown@@@Z PROC ; ATL::CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>::operator=, COMDAT
; _this$ = ecx

; 660  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 661  :         if(this->p!=lp)

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 08		 mov	 ecx, DWORD PTR [eax]
  00013	3b 4d 08	 cmp	 ecx, DWORD PTR _lp$[ebp]
  00016	74 15		 je	 SHORT $LN2@operator

; 662  :         {
; 663  :             AtlComQIPtrAssign2((IUnknown**)&this->p, lp, *piid);

  00018	68 00 00 00 00	 push	 OFFSET __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
  0001d	8b 55 08	 mov	 edx, DWORD PTR _lp$[ebp]
  00020	52		 push	 edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ?AtlComQIPtrAssign2@ATL@@YAXPAPAUIUnknown@@PAU2@ABU_GUID@@@Z ; ATL::AtlComQIPtrAssign2
  0002a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@operator:

; 664  :         }
; 665  :         return *this;

  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@QBEPAUISpecifyPropertyPages@@XZ ; ATL::CComPtrBase<ISpecifyPropertyPages>::operator ISpecifyPropertyPages *

; 666  :     }

  00035	83 c4 04	 add	 esp, 4
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??4?$CComQIPtr@UISpecifyPropertyPages@@$1?_GUID_b196b28b_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAEPAUISpecifyPropertyPages@@PAUIUnknown@@@Z ENDP ; ATL::CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComQIPtr@UISpecifyPropertyPages@@$1?_GUID_b196b28b_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComQIPtr@UISpecifyPropertyPages@@$1?_GUID_b196b28b_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ PROC ; ATL::CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>::CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>, COMDAT
; _this$ = ecx

; 616  :     CComQIPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 617  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtr@UISpecifyPropertyPages@@@ATL@@QAE@XZ ; ATL::CComPtr<ISpecifyPropertyPages>::CComPtr<ISpecifyPropertyPages>

; 618  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComQIPtr@UISpecifyPropertyPages@@$1?_GUID_b196b28b_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ ENDP ; ATL::CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>::CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UISpecifyPropertyPages@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UISpecifyPropertyPages@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<ISpecifyPropertyPages>::~CComPtr<ISpecifyPropertyPages>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ISpecifyPropertyPages>::~CComPtrBase<ISpecifyPropertyPages>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UISpecifyPropertyPages@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<ISpecifyPropertyPages>::~CComPtr<ISpecifyPropertyPages>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UISpecifyPropertyPages@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UISpecifyPropertyPages@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<ISpecifyPropertyPages>::CComPtr<ISpecifyPropertyPages>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@IAE@XZ ; ATL::CComPtrBase<ISpecifyPropertyPages>::CComPtrBase<ISpecifyPropertyPages>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UISpecifyPropertyPages@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<ISpecifyPropertyPages>::CComPtr<ISpecifyPropertyPages>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UISpecifyPropertyPages@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UISpecifyPropertyPages@@@1@XZ PROC ; ATL::CComPtrBase<ISpecifyPropertyPages>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UISpecifyPropertyPages@@@1@XZ ENDP ; ATL::CComPtrBase<ISpecifyPropertyPages>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@QBEPAUISpecifyPropertyPages@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@QBEPAUISpecifyPropertyPages@@XZ PROC ; ATL::CComPtrBase<ISpecifyPropertyPages>::operator ISpecifyPropertyPages *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@QBEPAUISpecifyPropertyPages@@XZ ENDP ; ATL::CComPtrBase<ISpecifyPropertyPages>::operator ISpecifyPropertyPages *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@QAE@XZ PROC ; ATL::CComPtrBase<ISpecifyPropertyPages>::~CComPtrBase<ISpecifyPropertyPages>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@QAE@XZ ENDP ; ATL::CComPtrBase<ISpecifyPropertyPages>::~CComPtrBase<ISpecifyPropertyPages>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@IAE@XZ PROC ; ATL::CComPtrBase<ISpecifyPropertyPages>::CComPtrBase<ISpecifyPropertyPages>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@IAE@XZ ENDP ; ATL::CComPtrBase<ISpecifyPropertyPages>::CComPtrBase<ISpecifyPropertyPages>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIPointerInactive@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIPointerInactive@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IPointerInactive>::~CComPtr<IPointerInactive>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIPointerInactive@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IPointerInactive>::~CComPtrBase<IPointerInactive>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIPointerInactive@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IPointerInactive>::~CComPtr<IPointerInactive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIPointerInactive@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIPointerInactive@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IPointerInactive>::CComPtr<IPointerInactive>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIPointerInactive@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IPointerInactive>::CComPtrBase<IPointerInactive>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIPointerInactive@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IPointerInactive>::CComPtr<IPointerInactive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??8?$CComPtrBase@UIPointerInactive@@@ATL@@QBE_NPAUIPointerInactive@@@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIPointerInactive@@@ATL@@QBE_NPAUIPointerInactive@@@Z PROC ; ATL::CComPtrBase<IPointerInactive>::operator==, COMDAT
; _this$ = ecx

; 222  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 223  :         return p == pT;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	3b 4d 08	 cmp	 ecx, DWORD PTR _pT$[ebp]
  0001f	75 09		 jne	 SHORT $LN3@operator
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@operator:
  00031	8a 45 f8	 mov	 al, BYTE PTR tv66[ebp]

; 224  :     }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??8?$CComPtrBase@UIPointerInactive@@@ATL@@QBE_NPAUIPointerInactive@@@Z ENDP ; ATL::CComPtrBase<IPointerInactive>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??9?$CComPtrBase@UIPointerInactive@@@ATL@@QBE_NPAUIPointerInactive@@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??9?$CComPtrBase@UIPointerInactive@@@ATL@@QBE_NPAUIPointerInactive@@@Z PROC ; ATL::CComPtrBase<IPointerInactive>::operator!=, COMDAT
; _this$ = ecx

; 217  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  :         return !operator==(pT);

  00017	8b 45 08	 mov	 eax, DWORD PTR _pT$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIPointerInactive@@@ATL@@QBE_NPAUIPointerInactive@@@Z ; ATL::CComPtrBase<IPointerInactive>::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]

; 219  :     }

  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$CComPtrBase@UIPointerInactive@@@ATL@@QBE_NPAUIPointerInactive@@@Z ENDP ; ATL::CComPtrBase<IPointerInactive>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIPointerInactive@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPointerInactive@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIPointerInactive@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPointerInactive@@@1@XZ PROC ; ATL::CComPtrBase<IPointerInactive>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIPointerInactive@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPointerInactive@@@1@XZ ENDP ; ATL::CComPtrBase<IPointerInactive>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIPointerInactive@@@ATL@@QAEPAPAUIPointerInactive@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIPointerInactive@@@ATL@@QAEPAPAUIPointerInactive@@XZ PROC ; ATL::CComPtrBase<IPointerInactive>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIPointerInactive@@@ATL@@QAEPAPAUIPointerInactive@@XZ ENDP ; ATL::CComPtrBase<IPointerInactive>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIPointerInactive@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIPointerInactive@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IPointerInactive>::~CComPtrBase<IPointerInactive>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIPointerInactive@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IPointerInactive>::~CComPtrBase<IPointerInactive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIPointerInactive@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIPointerInactive@@@ATL@@IAE@XZ PROC	; ATL::CComPtrBase<IPointerInactive>::CComPtrBase<IPointerInactive>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIPointerInactive@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IPointerInactive>::CComPtrBase<IPointerInactive>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComQIPtr@UIOleControlSite@@$1?_GUID_b196b289_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComQIPtr@UIOleControlSite@@$1?_GUID_b196b289_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ PROC ; ATL::CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>::~CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleControlSite@@@ATL@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComQIPtr@UIOleControlSite@@$1?_GUID_b196b289_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ ENDP ; ATL::CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>::~CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComQIPtr@UIOleControlSite@@$1?_GUID_b196b289_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComQIPtr@UIOleControlSite@@$1?_GUID_b196b289_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z PROC ; ATL::CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>::CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>, COMDAT
; _this$ = ecx

; 630  :     CComQIPtr(_Inout_opt_ IUnknown* lp) throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 631  :     {

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleControlSite@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleControlSite>::CComPtr<IOleControlSite>

; 632  :         if (lp != NULL)

  00017	83 7d 08 00	 cmp	 DWORD PTR _lp$[ebp], 0
  0001b	74 2c		 je	 SHORT $LN1@CComQIPtr

; 633  :         {
; 634  :             if (FAILED(lp->QueryInterface(*piid, (void **)&this->p)))

  0001d	8b f4		 mov	 esi, esp
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	50		 push	 eax
  00023	68 00 00 00 00	 push	 OFFSET __GUID_b196b289_bab4_101a_b69c_00aa00341d07
  00028	8b 4d 08	 mov	 ecx, DWORD PTR _lp$[ebp]
  0002b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002d	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]
  00030	50		 push	 eax
  00031	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00033	ff d1		 call	 ecx
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	85 c0		 test	 eax, eax
  0003e	7d 09		 jge	 SHORT $LN1@CComQIPtr

; 635  :                 this->p = NULL;

  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
$LN1@CComQIPtr:

; 636  :         }
; 637  :     }

  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	5e		 pop	 esi
  0004d	83 c4 04	 add	 esp, 4
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
??0?$CComQIPtr@UIOleControlSite@@$1?_GUID_b196b289_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ENDP ; ATL::CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>::CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIOleControlSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIOleControlSite@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IOleControlSite>::~CComPtr<IOleControlSite>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIOleControlSite@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleControlSite>::~CComPtrBase<IOleControlSite>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIOleControlSite@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IOleControlSite>::~CComPtr<IOleControlSite>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIOleControlSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIOleControlSite@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IOleControlSite>::CComPtr<IOleControlSite>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIOleControlSite@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleControlSite>::CComPtrBase<IOleControlSite>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIOleControlSite@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IOleControlSite>::CComPtr<IOleControlSite>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??8?$CComPtrBase@UIOleControlSite@@@ATL@@QBE_NPAUIOleControlSite@@@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIOleControlSite@@@ATL@@QBE_NPAUIOleControlSite@@@Z PROC ; ATL::CComPtrBase<IOleControlSite>::operator==, COMDAT
; _this$ = ecx

; 222  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 223  :         return p == pT;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	3b 4d 08	 cmp	 ecx, DWORD PTR _pT$[ebp]
  0001f	75 09		 jne	 SHORT $LN3@operator
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@operator:
  00031	8a 45 f8	 mov	 al, BYTE PTR tv66[ebp]

; 224  :     }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??8?$CComPtrBase@UIOleControlSite@@@ATL@@QBE_NPAUIOleControlSite@@@Z ENDP ; ATL::CComPtrBase<IOleControlSite>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??9?$CComPtrBase@UIOleControlSite@@@ATL@@QBE_NPAUIOleControlSite@@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??9?$CComPtrBase@UIOleControlSite@@@ATL@@QBE_NPAUIOleControlSite@@@Z PROC ; ATL::CComPtrBase<IOleControlSite>::operator!=, COMDAT
; _this$ = ecx

; 217  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  :         return !operator==(pT);

  00017	8b 45 08	 mov	 eax, DWORD PTR _pT$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIOleControlSite@@@ATL@@QBE_NPAUIOleControlSite@@@Z ; ATL::CComPtrBase<IOleControlSite>::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]

; 219  :     }

  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$CComPtrBase@UIOleControlSite@@@ATL@@QBE_NPAUIOleControlSite@@@Z ENDP ; ATL::CComPtrBase<IOleControlSite>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIOleControlSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleControlSite@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIOleControlSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleControlSite@@@1@XZ PROC ; ATL::CComPtrBase<IOleControlSite>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIOleControlSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleControlSite@@@1@XZ ENDP ; ATL::CComPtrBase<IOleControlSite>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIOleControlSite@@@ATL@@QAEPAPAUIOleControlSite@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIOleControlSite@@@ATL@@QAEPAPAUIOleControlSite@@XZ PROC ; ATL::CComPtrBase<IOleControlSite>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIOleControlSite@@@ATL@@QAEPAPAUIOleControlSite@@XZ ENDP ; ATL::CComPtrBase<IOleControlSite>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UIOleControlSite@@@ATL@@QBEPAUIOleControlSite@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIOleControlSite@@@ATL@@QBEPAUIOleControlSite@@XZ PROC ; ATL::CComPtrBase<IOleControlSite>::operator IOleControlSite *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UIOleControlSite@@@ATL@@QBEPAUIOleControlSite@@XZ ENDP ; ATL::CComPtrBase<IOleControlSite>::operator IOleControlSite *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIOleControlSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIOleControlSite@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IOleControlSite>::~CComPtrBase<IOleControlSite>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIOleControlSite@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IOleControlSite>::~CComPtrBase<IOleControlSite>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIOleControlSite@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIOleControlSite@@@ATL@@IAE@XZ PROC	; ATL::CComPtrBase<IOleControlSite>::CComPtrBase<IOleControlSite>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIOleControlSite@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IOleControlSite>::CComPtrBase<IOleControlSite>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??8?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBE_NPAUIOleAdviseHolder@@@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBE_NPAUIOleAdviseHolder@@@Z PROC ; ATL::CComPtrBase<IOleAdviseHolder>::operator==, COMDAT
; _this$ = ecx

; 222  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 223  :         return p == pT;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	3b 4d 08	 cmp	 ecx, DWORD PTR _pT$[ebp]
  0001f	75 09		 jne	 SHORT $LN3@operator
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@operator:
  00031	8a 45 f8	 mov	 al, BYTE PTR tv66[ebp]

; 224  :     }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??8?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBE_NPAUIOleAdviseHolder@@@Z ENDP ; ATL::CComPtrBase<IOleAdviseHolder>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??9?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBE_NPAUIOleAdviseHolder@@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??9?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBE_NPAUIOleAdviseHolder@@@Z PROC ; ATL::CComPtrBase<IOleAdviseHolder>::operator!=, COMDAT
; _this$ = ecx

; 217  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  :         return !operator==(pT);

  00017	8b 45 08	 mov	 eax, DWORD PTR _pT$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBE_NPAUIOleAdviseHolder@@@Z ; ATL::CComPtrBase<IOleAdviseHolder>::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]

; 219  :     }

  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBE_NPAUIOleAdviseHolder@@@Z ENDP ; ATL::CComPtrBase<IOleAdviseHolder>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleAdviseHolder@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleAdviseHolder@@@1@XZ PROC ; ATL::CComPtrBase<IOleAdviseHolder>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleAdviseHolder@@@1@XZ ENDP ; ATL::CComPtrBase<IOleAdviseHolder>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QAEPAPAUIOleAdviseHolder@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QAEPAPAUIOleAdviseHolder@@XZ PROC ; ATL::CComPtrBase<IOleAdviseHolder>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QAEPAPAUIOleAdviseHolder@@XZ ENDP ; ATL::CComPtrBase<IOleAdviseHolder>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBEPAUIOleAdviseHolder@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBEPAUIOleAdviseHolder@@XZ PROC ; ATL::CComPtrBase<IOleAdviseHolder>::operator IOleAdviseHolder *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBEPAUIOleAdviseHolder@@XZ ENDP ; ATL::CComPtrBase<IOleAdviseHolder>::operator IOleAdviseHolder *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??8?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBE_NPAUIDataAdviseHolder@@@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBE_NPAUIDataAdviseHolder@@@Z PROC ; ATL::CComPtrBase<IDataAdviseHolder>::operator==, COMDAT
; _this$ = ecx

; 222  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 223  :         return p == pT;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	3b 4d 08	 cmp	 ecx, DWORD PTR _pT$[ebp]
  0001f	75 09		 jne	 SHORT $LN3@operator
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@operator:
  00031	8a 45 f8	 mov	 al, BYTE PTR tv66[ebp]

; 224  :     }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??8?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBE_NPAUIDataAdviseHolder@@@Z ENDP ; ATL::CComPtrBase<IDataAdviseHolder>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??9?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBE_NPAUIDataAdviseHolder@@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??9?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBE_NPAUIDataAdviseHolder@@@Z PROC ; ATL::CComPtrBase<IDataAdviseHolder>::operator!=, COMDAT
; _this$ = ecx

; 217  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  :         return !operator==(pT);

  00017	8b 45 08	 mov	 eax, DWORD PTR _pT$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBE_NPAUIDataAdviseHolder@@@Z ; ATL::CComPtrBase<IDataAdviseHolder>::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]

; 219  :     }

  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBE_NPAUIDataAdviseHolder@@@Z ENDP ; ATL::CComPtrBase<IDataAdviseHolder>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDataAdviseHolder@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDataAdviseHolder@@@1@XZ PROC ; ATL::CComPtrBase<IDataAdviseHolder>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDataAdviseHolder@@@1@XZ ENDP ; ATL::CComPtrBase<IDataAdviseHolder>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QAEPAPAUIDataAdviseHolder@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QAEPAPAUIDataAdviseHolder@@XZ PROC ; ATL::CComPtrBase<IDataAdviseHolder>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QAEPAPAUIDataAdviseHolder@@XZ ENDP ; ATL::CComPtrBase<IDataAdviseHolder>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBEPAUIDataAdviseHolder@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBEPAUIDataAdviseHolder@@XZ PROC ; ATL::CComPtrBase<IDataAdviseHolder>::operator IDataAdviseHolder *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBEPAUIDataAdviseHolder@@XZ ENDP ; ATL::CComPtrBase<IDataAdviseHolder>::operator IDataAdviseHolder *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?Release@?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pTemp$ = -8						; size = 4
_this$ = -4						; size = 4
?Release@?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QAEXXZ PROC ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::Release, COMDAT
; _this$ = ecx

; 228  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 229  :         T* pTemp = p;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001d	89 4d f8	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 230  :         if (pTemp)

  00020	83 7d f8 00	 cmp	 DWORD PTR _pTemp$[ebp], 0
  00024	74 20		 je	 SHORT $LN1@Release

; 231  :         {
; 232  :             p = NULL;

  00026	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00029	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 233  :             pTemp->Release();

  0002f	8b 45 f8	 mov	 eax, DWORD PTR _pTemp$[ebp]
  00032	8b 08		 mov	 ecx, DWORD PTR [eax]
  00034	8b f4		 mov	 esi, esp
  00036	8b 55 f8	 mov	 edx, DWORD PTR _pTemp$[ebp]
  00039	52		 push	 edx
  0003a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0003d	ff d0		 call	 eax
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Release:

; 234  :         }
; 235  :     }

  00046	5e		 pop	 esi
  00047	83 c4 08	 add	 esp, 8
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
?Release@?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QAEXXZ ENDP ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??8?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBE_NPAUIOleInPlaceSiteWindowless@@@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBE_NPAUIOleInPlaceSiteWindowless@@@Z PROC ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator==, COMDAT
; _this$ = ecx

; 222  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 223  :         return p == pT;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	3b 4d 08	 cmp	 ecx, DWORD PTR _pT$[ebp]
  0001f	75 09		 jne	 SHORT $LN3@operator
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@operator:
  00031	8a 45 f8	 mov	 al, BYTE PTR tv66[ebp]

; 224  :     }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??8?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBE_NPAUIOleInPlaceSiteWindowless@@@Z ENDP ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??9?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBE_NPAUIOleInPlaceSiteWindowless@@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??9?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBE_NPAUIOleInPlaceSiteWindowless@@@Z PROC ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator!=, COMDAT
; _this$ = ecx

; 217  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  :         return !operator==(pT);

  00017	8b 45 08	 mov	 eax, DWORD PTR _pT$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBE_NPAUIOleInPlaceSiteWindowless@@@Z ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]

; 219  :     }

  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBE_NPAUIOleInPlaceSiteWindowless@@@Z ENDP ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??7?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
??7?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBE_NXZ PROC ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator!, COMDAT
; _this$ = ecx

; 208  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 209  :         return (p == NULL);

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001d	75 09		 jne	 SHORT $LN3@operator
  0001f	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00026	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@operator:
  0002f	8a 45 f8	 mov	 al, BYTE PTR tv66[ebp]

; 210  :     }

  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
??7?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBE_NXZ ENDP ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator!
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ PROC ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QAEPAPAUIOleInPlaceSiteWindowless@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QAEPAPAUIOleInPlaceSiteWindowless@@XZ PROC ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QAEPAPAUIOleInPlaceSiteWindowless@@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAUIOleInPlaceSiteWindowless@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAUIOleInPlaceSiteWindowless@@XZ PROC ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator IOleInPlaceSiteWindowless *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAUIOleInPlaceSiteWindowless@@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator IOleInPlaceSiteWindowless *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnDrawAdvanced@CComControlBase@ATL@@UAEJAAUATL_DRAWINFO@@@Z
_TEXT	SEGMENT
tv84 = -52						; size = 4
tv75 = -48						; size = 4
_hRes$ = -44						; size = 4
_bMetafile$ = -40					; size = 4
_rectBoundsDP$ = -32					; size = 16
_bDeleteDC$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_di$ = 8						; size = 4
?OnDrawAdvanced@CComControlBase@ATL@@UAEJAAUATL_DRAWINFO@@@Z PROC ; ATL::CComControlBase::OnDrawAdvanced, COMDAT
; _this$ = ecx

; 1528 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d cc	 lea	 edi, DWORD PTR [ebp-52]
  0000c	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00023	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1529 : 	BOOL bDeleteDC = FALSE;

  00026	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _bDeleteDC$[ebp], 0

; 1530 : 	if (di.hicTargetDev == NULL)

  0002d	8b 45 08	 mov	 eax, DWORD PTR _di$[ebp]
  00030	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00034	75 3d		 jne	 SHORT $LN2@OnDrawAdva

; 1531 : 	{
; 1532 : 		di.hicTargetDev = AtlCreateTargetDC(di.hdcDraw, di.ptd);

  00036	8b 4d 08	 mov	 ecx, DWORD PTR _di$[ebp]
  00039	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0003c	52		 push	 edx
  0003d	8b 45 08	 mov	 eax, DWORD PTR _di$[ebp]
  00040	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?AtlCreateTargetDC@ATL@@YGPAUHDC__@@PAU2@PAUtagDVTARGETDEVICE@@@Z ; ATL::AtlCreateTargetDC
  00049	8b 55 08	 mov	 edx, DWORD PTR _di$[ebp]
  0004c	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1533 : 		bDeleteDC = (di.hicTargetDev != di.hdcDraw);

  0004f	8b 45 08	 mov	 eax, DWORD PTR _di$[ebp]
  00052	8b 4d 08	 mov	 ecx, DWORD PTR _di$[ebp]
  00055	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00058	3b 51 14	 cmp	 edx, DWORD PTR [ecx+20]
  0005b	74 09		 je	 SHORT $LN7@OnDrawAdva
  0005d	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR tv75[ebp], 1
  00064	eb 07		 jmp	 SHORT $LN8@OnDrawAdva
$LN7@OnDrawAdva:
  00066	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN8@OnDrawAdva:
  0006d	8b 45 d0	 mov	 eax, DWORD PTR tv75[ebp]
  00070	89 45 f4	 mov	 DWORD PTR _bDeleteDC$[ebp], eax
$LN2@OnDrawAdva:

; 1534 : 	}
; 1535 : 	RECTL rectBoundsDP = *di.prcBounds;

  00073	8b 4d 08	 mov	 ecx, DWORD PTR _di$[ebp]
  00076	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00079	8b 02		 mov	 eax, DWORD PTR [edx]
  0007b	89 45 e0	 mov	 DWORD PTR _rectBoundsDP$[ebp], eax
  0007e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00081	89 4d e4	 mov	 DWORD PTR _rectBoundsDP$[ebp+4], ecx
  00084	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00087	89 45 e8	 mov	 DWORD PTR _rectBoundsDP$[ebp+8], eax
  0008a	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  0008d	89 4d ec	 mov	 DWORD PTR _rectBoundsDP$[ebp+12], ecx

; 1536 : 	BOOL bMetafile = GetDeviceCaps(di.hdcDraw, TECHNOLOGY) == DT_METAFILE;

  00090	8b f4		 mov	 esi, esp
  00092	6a 02		 push	 2
  00094	8b 55 08	 mov	 edx, DWORD PTR _di$[ebp]
  00097	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0009a	50		 push	 eax
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDeviceCaps@8
  000a1	3b f4		 cmp	 esi, esp
  000a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a8	83 f8 05	 cmp	 eax, 5
  000ab	75 09		 jne	 SHORT $LN9@OnDrawAdva
  000ad	c7 45 cc 01 00
	00 00		 mov	 DWORD PTR tv84[ebp], 1
  000b4	eb 07		 jmp	 SHORT $LN10@OnDrawAdva
$LN9@OnDrawAdva:
  000b6	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN10@OnDrawAdva:
  000bd	8b 4d cc	 mov	 ecx, DWORD PTR tv84[ebp]
  000c0	89 4d d8	 mov	 DWORD PTR _bMetafile$[ebp], ecx

; 1537 : 	if (!bMetafile)

  000c3	83 7d d8 00	 cmp	 DWORD PTR _bMetafile$[ebp], 0
  000c7	0f 85 8c 00 00
	00		 jne	 $LN3@OnDrawAdva

; 1538 : 	{
; 1539 : 		::LPtoDP(di.hdcDraw, (LPPOINT)&rectBoundsDP, 2);

  000cd	8b f4		 mov	 esi, esp
  000cf	6a 02		 push	 2
  000d1	8d 55 e0	 lea	 edx, DWORD PTR _rectBoundsDP$[ebp]
  000d4	52		 push	 edx
  000d5	8b 45 08	 mov	 eax, DWORD PTR _di$[ebp]
  000d8	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000db	51		 push	 ecx
  000dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LPtoDP@12
  000e2	3b f4		 cmp	 esi, esp
  000e4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1540 : 		SaveDC(di.hdcDraw);

  000e9	8b f4		 mov	 esi, esp
  000eb	8b 55 08	 mov	 edx, DWORD PTR _di$[ebp]
  000ee	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000f1	50		 push	 eax
  000f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SaveDC@4
  000f8	3b f4		 cmp	 esi, esp
  000fa	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1541 : 		SetMapMode(di.hdcDraw, MM_TEXT);

  000ff	8b f4		 mov	 esi, esp
  00101	6a 01		 push	 1
  00103	8b 4d 08	 mov	 ecx, DWORD PTR _di$[ebp]
  00106	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00109	52		 push	 edx
  0010a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetMapMode@8
  00110	3b f4		 cmp	 esi, esp
  00112	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1542 : 		SetWindowOrgEx(di.hdcDraw, 0, 0, NULL);

  00117	8b f4		 mov	 esi, esp
  00119	6a 00		 push	 0
  0011b	6a 00		 push	 0
  0011d	6a 00		 push	 0
  0011f	8b 45 08	 mov	 eax, DWORD PTR _di$[ebp]
  00122	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00125	51		 push	 ecx
  00126	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowOrgEx@16
  0012c	3b f4		 cmp	 esi, esp
  0012e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1543 : 		SetViewportOrgEx(di.hdcDraw, 0, 0, NULL);

  00133	8b f4		 mov	 esi, esp
  00135	6a 00		 push	 0
  00137	6a 00		 push	 0
  00139	6a 00		 push	 0
  0013b	8b 55 08	 mov	 edx, DWORD PTR _di$[ebp]
  0013e	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00141	50		 push	 eax
  00142	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetViewportOrgEx@16
  00148	3b f4		 cmp	 esi, esp
  0014a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1544 : 		di.bOptimize = TRUE; //since we save the DC we can do this

  0014f	8b 4d 08	 mov	 ecx, DWORD PTR _di$[ebp]
  00152	c7 41 20 01 00
	00 00		 mov	 DWORD PTR [ecx+32], 1
$LN3@OnDrawAdva:

; 1545 : 	}
; 1546 : 	di.prcBounds = &rectBoundsDP;

  00159	8b 55 08	 mov	 edx, DWORD PTR _di$[ebp]
  0015c	8d 45 e0	 lea	 eax, DWORD PTR _rectBoundsDP$[ebp]
  0015f	89 42 18	 mov	 DWORD PTR [edx+24], eax

; 1547 : 	GetZoomInfo(di);

  00162	8b 4d 08	 mov	 ecx, DWORD PTR _di$[ebp]
  00165	51		 push	 ecx
  00166	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00169	e8 00 00 00 00	 call	 ?GetZoomInfo@CComControlBase@ATL@@QAEXAAUATL_DRAWINFO@@@Z ; ATL::CComControlBase::GetZoomInfo

; 1548 : 
; 1549 : 	HRESULT hRes = OnDraw(di);

  0016e	8b f4		 mov	 esi, esp
  00170	8b 55 08	 mov	 edx, DWORD PTR _di$[ebp]
  00173	52		 push	 edx
  00174	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00177	8b 10		 mov	 edx, DWORD PTR [eax]
  00179	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017c	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0017f	ff d0		 call	 eax
  00181	3b f4		 cmp	 esi, esp
  00183	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00188	89 45 d4	 mov	 DWORD PTR _hRes$[ebp], eax

; 1550 : 	if (bDeleteDC)

  0018b	83 7d f4 00	 cmp	 DWORD PTR _bDeleteDC$[ebp], 0
  0018f	74 16		 je	 SHORT $LN4@OnDrawAdva

; 1551 : 		::DeleteDC(di.hicTargetDev);

  00191	8b f4		 mov	 esi, esp
  00193	8b 4d 08	 mov	 ecx, DWORD PTR _di$[ebp]
  00196	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00199	52		 push	 edx
  0019a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteDC@4
  001a0	3b f4		 cmp	 esi, esp
  001a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@OnDrawAdva:

; 1552 : 	if (!bMetafile)

  001a7	83 7d d8 00	 cmp	 DWORD PTR _bMetafile$[ebp], 0
  001ab	75 18		 jne	 SHORT $LN5@OnDrawAdva

; 1553 : 		RestoreDC(di.hdcDraw, -1);

  001ad	8b f4		 mov	 esi, esp
  001af	6a ff		 push	 -1
  001b1	8b 45 08	 mov	 eax, DWORD PTR _di$[ebp]
  001b4	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  001b7	51		 push	 ecx
  001b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RestoreDC@8
  001be	3b f4		 cmp	 esi, esp
  001c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@OnDrawAdva:

; 1554 : 	return hRes;

  001c5	8b 45 d4	 mov	 eax, DWORD PTR _hRes$[ebp]

; 1555 : }

  001c8	52		 push	 edx
  001c9	8b cd		 mov	 ecx, ebp
  001cb	50		 push	 eax
  001cc	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@OnDrawAdva
  001d2	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001d7	58		 pop	 eax
  001d8	5a		 pop	 edx
  001d9	5f		 pop	 edi
  001da	5e		 pop	 esi
  001db	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001de	33 cd		 xor	 ecx, ebp
  001e0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e5	83 c4 34	 add	 esp, 52			; 00000034H
  001e8	3b ec		 cmp	 ebp, esp
  001ea	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ef	8b e5		 mov	 esp, ebp
  001f1	5d		 pop	 ebp
  001f2	c2 04 00	 ret	 4
  001f5	0f 1f 00	 npad	 3
$LN13@OnDrawAdva:
  001f8	01 00 00 00	 DD	 1
  001fc	00 00 00 00	 DD	 $LN12@OnDrawAdva
$LN12@OnDrawAdva:
  00200	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00204	10 00 00 00	 DD	 16			; 00000010H
  00208	00 00 00 00	 DD	 $LN11@OnDrawAdva
$LN11@OnDrawAdva:
  0020c	72		 DB	 114			; 00000072H
  0020d	65		 DB	 101			; 00000065H
  0020e	63		 DB	 99			; 00000063H
  0020f	74		 DB	 116			; 00000074H
  00210	42		 DB	 66			; 00000042H
  00211	6f		 DB	 111			; 0000006fH
  00212	75		 DB	 117			; 00000075H
  00213	6e		 DB	 110			; 0000006eH
  00214	64		 DB	 100			; 00000064H
  00215	73		 DB	 115			; 00000073H
  00216	44		 DB	 68			; 00000044H
  00217	50		 DB	 80			; 00000050H
  00218	00		 DB	 0
?OnDrawAdvanced@CComControlBase@ATL@@UAEJAAUATL_DRAWINFO@@@Z ENDP ; ATL::CComControlBase::OnDrawAdvanced
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnPaint@CComControlBase@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT
tv70 = -180						; size = 4
_di$ = -172						; size = 60
_hdc$ = -108						; size = 4
_ps$ = -100						; size = 64
_rc$ = -28						; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_wParam$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?OnPaint@CComControlBase@ATL@@QAEJIIJAAH@Z PROC		; ATL::CComControlBase::OnPaint, COMDAT
; _this$ = ecx

; 1562 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 4c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-180]
  00012	b9 2d 00 00 00	 mov	 ecx, 45			; 0000002dH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1563 : 	RECT rc;
; 1564 : 	PAINTSTRUCT ps;
; 1565 : 
; 1566 : 	HDC hdc = (wParam != 0) ? (HDC)wParam : ::BeginPaint(m_hWndCD, &ps);

  0002c	83 7d 0c 00	 cmp	 DWORD PTR _wParam$[ebp], 0
  00030	74 0b		 je	 SHORT $LN5@OnPaint
  00032	8b 45 0c	 mov	 eax, DWORD PTR _wParam$[ebp]
  00035	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv70[ebp], eax
  0003b	eb 22		 jmp	 SHORT $LN6@OnPaint
$LN5@OnPaint:
  0003d	8b f4		 mov	 esi, esp
  0003f	8d 4d 9c	 lea	 ecx, DWORD PTR _ps$[ebp]
  00042	51		 push	 ecx
  00043	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00046	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	51		 push	 ecx
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__BeginPaint@8
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv70[ebp], eax
$LN6@OnPaint:
  0005f	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR tv70[ebp]
  00065	89 55 94	 mov	 DWORD PTR _hdc$[ebp], edx

; 1567 : 	if (hdc == NULL)

  00068	83 7d 94 00	 cmp	 DWORD PTR _hdc$[ebp], 0
  0006c	75 07		 jne	 SHORT $LN2@OnPaint

; 1568 : 		return 0;

  0006e	33 c0		 xor	 eax, eax
  00070	e9 a0 00 00 00	 jmp	 $LN1@OnPaint
$LN2@OnPaint:

; 1569 : 	::GetClientRect(m_hWndCD, &rc);

  00075	8b f4		 mov	 esi, esp
  00077	8d 45 e4	 lea	 eax, DWORD PTR _rc$[ebp]
  0007a	50		 push	 eax
  0007b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00081	8b 02		 mov	 eax, DWORD PTR [edx]
  00083	50		 push	 eax
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  0008a	3b f4		 cmp	 esi, esp
  0008c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1570 : 
; 1571 : 	ATL_DRAWINFO di;
; 1572 : 	memset(&di, 0, sizeof(di));

  00091	6a 3c		 push	 60			; 0000003cH
  00093	6a 00		 push	 0
  00095	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _di$[ebp]
  0009b	51		 push	 ecx
  0009c	e8 00 00 00 00	 call	 _memset
  000a1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1573 : 	di.cbSize = sizeof(di);

  000a4	c7 85 54 ff ff
	ff 3c 00 00 00	 mov	 DWORD PTR _di$[ebp], 60	; 0000003cH

; 1574 : 	di.dwDrawAspect = DVASPECT_CONTENT;

  000ae	c7 85 58 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _di$[ebp+4], 1

; 1575 : 	di.lindex = -1;

  000b8	c7 85 5c ff ff
	ff ff ff ff ff	 mov	 DWORD PTR _di$[ebp+8], -1

; 1576 : 	di.hdcDraw = hdc;

  000c2	8b 55 94	 mov	 edx, DWORD PTR _hdc$[ebp]
  000c5	89 95 68 ff ff
	ff		 mov	 DWORD PTR _di$[ebp+20], edx

; 1577 : 	di.prcBounds = (LPCRECTL)&rc;

  000cb	8d 45 e4	 lea	 eax, DWORD PTR _rc$[ebp]
  000ce	89 85 6c ff ff
	ff		 mov	 DWORD PTR _di$[ebp+24], eax

; 1578 : 
; 1579 : 	OnDrawAdvanced(di);

  000d4	8b f4		 mov	 esi, esp
  000d6	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _di$[ebp]
  000dc	51		 push	 ecx
  000dd	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e0	8b 02		 mov	 eax, DWORD PTR [edx]
  000e2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e5	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000e8	ff d2		 call	 edx
  000ea	3b f4		 cmp	 esi, esp
  000ec	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1580 : 	if (wParam == 0)

  000f1	83 7d 0c 00	 cmp	 DWORD PTR _wParam$[ebp], 0
  000f5	75 1c		 jne	 SHORT $LN3@OnPaint

; 1581 : 		::EndPaint(m_hWndCD, &ps);

  000f7	8b f4		 mov	 esi, esp
  000f9	8d 45 9c	 lea	 eax, DWORD PTR _ps$[ebp]
  000fc	50		 push	 eax
  000fd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00100	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00103	8b 02		 mov	 eax, DWORD PTR [edx]
  00105	50		 push	 eax
  00106	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndPaint@8
  0010c	3b f4		 cmp	 esi, esp
  0010e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@OnPaint:

; 1582 : 	return 0;

  00113	33 c0		 xor	 eax, eax
$LN1@OnPaint:

; 1583 : }

  00115	52		 push	 edx
  00116	8b cd		 mov	 ecx, ebp
  00118	50		 push	 eax
  00119	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@OnPaint
  0011f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00124	58		 pop	 eax
  00125	5a		 pop	 edx
  00126	5f		 pop	 edi
  00127	5e		 pop	 esi
  00128	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012b	33 cd		 xor	 ecx, ebp
  0012d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00132	81 c4 b4 00 00
	00		 add	 esp, 180		; 000000b4H
  00138	3b ec		 cmp	 ebp, esp
  0013a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013f	8b e5		 mov	 esp, ebp
  00141	5d		 pop	 ebp
  00142	c2 10 00	 ret	 16			; 00000010H
  00145	0f 1f 00	 npad	 3
$LN11@OnPaint:
  00148	03 00 00 00	 DD	 3
  0014c	00 00 00 00	 DD	 $LN10@OnPaint
$LN10@OnPaint:
  00150	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00154	10 00 00 00	 DD	 16			; 00000010H
  00158	00 00 00 00	 DD	 $LN7@OnPaint
  0015c	9c ff ff ff	 DD	 -100			; ffffff9cH
  00160	40 00 00 00	 DD	 64			; 00000040H
  00164	00 00 00 00	 DD	 $LN8@OnPaint
  00168	54 ff ff ff	 DD	 -172			; ffffff54H
  0016c	3c 00 00 00	 DD	 60			; 0000003cH
  00170	00 00 00 00	 DD	 $LN9@OnPaint
$LN9@OnPaint:
  00174	64		 DB	 100			; 00000064H
  00175	69		 DB	 105			; 00000069H
  00176	00		 DB	 0
$LN8@OnPaint:
  00177	70		 DB	 112			; 00000070H
  00178	73		 DB	 115			; 00000073H
  00179	00		 DB	 0
$LN7@OnPaint:
  0017a	72		 DB	 114			; 00000072H
  0017b	63		 DB	 99			; 00000063H
  0017c	00		 DB	 0
?OnPaint@CComControlBase@ATL@@QAEJIIJAAH@Z ENDP		; ATL::CComControlBase::OnPaint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?FireViewChange@CComControlBase@ATL@@QAEJXZ
_TEXT	SEGMENT
tv134 = -8						; size = 4
_this$ = -4						; size = 4
?FireViewChange@CComControlBase@ATL@@QAEJXZ PROC	; ATL::CComControlBase::FireViewChange, COMDAT
; _this$ = ecx

; 1486 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1487 : 	if (m_bInPlaceActive)

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  0001e	c1 e9 02	 shr	 ecx, 2
  00021	83 e1 01	 and	 ecx, 1
  00024	74 75		 je	 SHORT $LN2@FireViewCh

; 1488 : 	{
; 1489 : 		// Active
; 1490 : 		if (m_hWndCD != NULL)

  00026	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00029	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0002c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0002f	74 1e		 je	 SHORT $LN4@FireViewCh

; 1491 : 			::InvalidateRect(m_hWndCD, NULL, TRUE); // Window based

  00031	8b f4		 mov	 esi, esp
  00033	6a 01		 push	 1
  00035	6a 00		 push	 0
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0003d	8b 02		 mov	 eax, DWORD PTR [edx]
  0003f	50		 push	 eax
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InvalidateRect@12
  00046	3b f4		 cmp	 esi, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	eb 4a		 jmp	 SHORT $LN5@FireViewCh
$LN4@FireViewCh:

; 1492 : 		else if (m_bWndLess && m_spInPlaceSite != NULL)

  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  00055	d1 ea		 shr	 edx, 1
  00057	83 e2 01	 and	 edx, 1
  0005a	74 3d		 je	 SHORT $LN5@FireViewCh
  0005c	6a 00		 push	 0
  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 c1 04	 add	 ecx, 4
  00064	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBE_NPAUIOleInPlaceSiteWindowless@@@Z ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator!=
  00069	0f b6 c0	 movzx	 eax, al
  0006c	85 c0		 test	 eax, eax
  0006e	74 29		 je	 SHORT $LN5@FireViewCh

; 1493 : 			m_spInPlaceSite->InvalidateRect(NULL, TRUE); // Windowless

  00070	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	83 c1 04	 add	 ecx, 4
  00076	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator->
  0007b	89 45 f8	 mov	 DWORD PTR tv134[ebp], eax
  0007e	8b f4		 mov	 esi, esp
  00080	6a 01		 push	 1
  00082	6a 00		 push	 0
  00084	8b 4d f8	 mov	 ecx, DWORD PTR tv134[ebp]
  00087	51		 push	 ecx
  00088	8b 55 f8	 mov	 edx, DWORD PTR tv134[ebp]
  0008b	8b 02		 mov	 eax, DWORD PTR [edx]
  0008d	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  00090	ff d1		 call	 ecx
  00092	3b f4		 cmp	 esi, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@FireViewCh:

; 1494 : 	}

  00099	eb 0c		 jmp	 SHORT $LN3@FireViewCh
$LN2@FireViewCh:

; 1495 : 	else // Inactive
; 1496 : 		SendOnViewChange(DVASPECT_CONTENT);

  0009b	6a ff		 push	 -1
  0009d	6a 01		 push	 1
  0009f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	e8 00 00 00 00	 call	 ?SendOnViewChange@CComControlBase@ATL@@QAEJKJ@Z ; ATL::CComControlBase::SendOnViewChange
$LN3@FireViewCh:

; 1497 : 	return S_OK;

  000a7	33 c0		 xor	 eax, eax

; 1498 : }

  000a9	5e		 pop	 esi
  000aa	83 c4 08	 add	 esp, 8
  000ad	3b ec		 cmp	 ebp, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?FireViewChange@CComControlBase@ATL@@QAEJXZ ENDP	; ATL::CComControlBase::FireViewChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?IDataObject_GetData@CComControlBase@ATL@@QAEJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
_TEXT	SEGMENT
tv211 = -168						; size = 4
$T1 = -164						; size = 8
$T2 = -156						; size = 8
___atl_condVal$3 = -148					; size = 4
_pMF$ = -144						; size = 4
_hMem$ = -140						; size = 4
_hMF$ = -136						; size = 4
_di$ = -128						; size = 60
_rectl$ = -60						; size = 16
_size$ = -36						; size = 8
_sizeMetric$ = -20					; size = 8
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pformatetcIn$ = 8					; size = 4
_pmedium$ = 12						; size = 4
?IDataObject_GetData@CComControlBase@ATL@@QAEJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z PROC ; ATL::CComControlBase::IDataObject_GetData, COMDAT
; _this$ = ecx

; 1415 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a8 00 00
	00		 sub	 esp, 168		; 000000a8H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 58 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-168]
  00012	b9 2a 00 00 00	 mov	 ecx, 42			; 0000002aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1416 : 	if (pmedium == NULL)

  0002c	83 7d 0c 00	 cmp	 DWORD PTR _pmedium$[ebp], 0
  00030	75 0a		 jne	 SHORT $LN8@IDataObjec

; 1417 : 		return E_POINTER;

  00032	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00037	e9 51 03 00 00	 jmp	 $LN17@IDataObjec
$LN8@IDataObjec:

; 1418 : 	memset(pmedium, 0, sizeof(STGMEDIUM));

  0003c	6a 0c		 push	 12			; 0000000cH
  0003e	6a 00		 push	 0
  00040	8b 45 0c	 mov	 eax, DWORD PTR _pmedium$[ebp]
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 _memset
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1419 : 	ATLTRACE(atlTraceControls,2,_T("Format = %x\n"), pformatetcIn->cfFormat);

  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _pformatetcIn$[ebp]
  0004f	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00052	52		 push	 edx
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@POAAPOBL@?$AAF?$AAo?$AAr?$AAm?$AAa?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAx?$AA?6@
  00058	6a 02		 push	 2
  0005a	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  0005f	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00064	50		 push	 eax
  00065	68 8b 05 00 00	 push	 1419			; 0000058bH
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0006f	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00075	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00080	83 c4 14	 add	 esp, 20			; 00000014H

; 1420 : 	ATLTRACE(atlTraceControls,2,_T("TYMED = %x\n"), pformatetcIn->tymed);

  00083	8b 45 08	 mov	 eax, DWORD PTR _pformatetcIn$[ebp]
  00086	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00089	51		 push	 ecx
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_1BI@LHCJEHBH@?$AAT?$AAY?$AAM?$AAE?$AAD?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAx?$AA?6@
  0008f	6a 02		 push	 2
  00091	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00096	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  0009b	50		 push	 eax
  0009c	68 8c 05 00 00	 push	 1420			; 0000058cH
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a6	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  000ac	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000b7	83 c4 14	 add	 esp, 20			; 00000014H

; 1421 : 
; 1422 : 	if ((pformatetcIn->tymed & TYMED_MFPICT) == 0)

  000ba	8b 55 08	 mov	 edx, DWORD PTR _pformatetcIn$[ebp]
  000bd	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000c0	83 e0 20	 and	 eax, 32			; 00000020H
  000c3	75 0a		 jne	 SHORT $LN9@IDataObjec

; 1423 : 		return DATA_E_FORMATETC;

  000c5	b8 64 00 04 80	 mov	 eax, -2147221404	; 80040064H
  000ca	e9 be 02 00 00	 jmp	 $LN17@IDataObjec
$LN9@IDataObjec:

; 1424 : 
; 1425 : 	SIZEL sizeMetric, size;
; 1426 : 	if (m_bDrawFromNatural)

  000cf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  000d5	c1 ea 0c	 shr	 edx, 12			; 0000000cH
  000d8	83 e2 01	 and	 edx, 1
  000db	74 11		 je	 SHORT $LN10@IDataObjec

; 1427 : 		sizeMetric = m_sizeNatural;

  000dd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e0	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  000e3	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  000e6	89 4d ec	 mov	 DWORD PTR _sizeMetric$[ebp], ecx
  000e9	89 55 f0	 mov	 DWORD PTR _sizeMetric$[ebp+4], edx
  000ec	eb 0f		 jmp	 SHORT $LN11@IDataObjec
$LN10@IDataObjec:

; 1428 : 	else
; 1429 : 		sizeMetric = m_sizeExtent;

  000ee	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f1	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000f4	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  000f7	89 4d ec	 mov	 DWORD PTR _sizeMetric$[ebp], ecx
  000fa	89 55 f0	 mov	 DWORD PTR _sizeMetric$[ebp+4], edx
$LN11@IDataObjec:

; 1430 : 	if (!m_bDrawGetDataInHimetric)

  000fd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00100	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00103	c1 e9 0d	 shr	 ecx, 13			; 0000000dH
  00106	83 e1 01	 and	 ecx, 1
  00109	75 0f		 jne	 SHORT $LN12@IDataObjec

; 1431 : 		AtlHiMetricToPixel(&sizeMetric, &size);

  0010b	8d 55 dc	 lea	 edx, DWORD PTR _size$[ebp]
  0010e	52		 push	 edx
  0010f	8d 45 ec	 lea	 eax, DWORD PTR _sizeMetric$[ebp]
  00112	50		 push	 eax
  00113	e8 00 00 00 00	 call	 ?AtlHiMetricToPixel@ATL@@YGXPBUtagSIZE@@PAU2@@Z ; ATL::AtlHiMetricToPixel
  00118	eb 0c		 jmp	 SHORT $LN13@IDataObjec
$LN12@IDataObjec:

; 1432 : 	else
; 1433 : 		size = sizeMetric;

  0011a	8b 4d ec	 mov	 ecx, DWORD PTR _sizeMetric$[ebp]
  0011d	8b 55 f0	 mov	 edx, DWORD PTR _sizeMetric$[ebp+4]
  00120	89 4d dc	 mov	 DWORD PTR _size$[ebp], ecx
  00123	89 55 e0	 mov	 DWORD PTR _size$[ebp+4], edx
$LN13@IDataObjec:

; 1434 : 	RECTL rectl = {0 ,0, size.cx, size.cy};

  00126	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _rectl$[ebp], 0
  0012d	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _rectl$[ebp+4], 0
  00134	8b 45 dc	 mov	 eax, DWORD PTR _size$[ebp]
  00137	89 45 cc	 mov	 DWORD PTR _rectl$[ebp+8], eax
  0013a	8b 4d e0	 mov	 ecx, DWORD PTR _size$[ebp+4]
  0013d	89 4d d0	 mov	 DWORD PTR _rectl$[ebp+12], ecx

; 1435 : 
; 1436 : 	ATL_DRAWINFO di;
; 1437 : 	memset(&di, 0, sizeof(di));

  00140	6a 3c		 push	 60			; 0000003cH
  00142	6a 00		 push	 0
  00144	8d 55 80	 lea	 edx, DWORD PTR _di$[ebp]
  00147	52		 push	 edx
  00148	e8 00 00 00 00	 call	 _memset
  0014d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1438 : 	di.cbSize = sizeof(di);

  00150	c7 45 80 3c 00
	00 00		 mov	 DWORD PTR _di$[ebp], 60	; 0000003cH

; 1439 : 	di.dwDrawAspect = DVASPECT_CONTENT;

  00157	c7 45 84 01 00
	00 00		 mov	 DWORD PTR _di$[ebp+4], 1

; 1440 : 	di.lindex = -1;

  0015e	c7 45 88 ff ff
	ff ff		 mov	 DWORD PTR _di$[ebp+8], -1

; 1441 : 	di.ptd = NULL;

  00165	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR _di$[ebp+12], 0

; 1442 : 	di.hicTargetDev = NULL;

  0016c	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _di$[ebp+16], 0

; 1443 : 	di.prcBounds = &rectl;

  00173	8d 45 c4	 lea	 eax, DWORD PTR _rectl$[ebp]
  00176	89 45 98	 mov	 DWORD PTR _di$[ebp+24], eax

; 1444 : 	di.prcWBounds = &rectl;

  00179	8d 4d c4	 lea	 ecx, DWORD PTR _rectl$[ebp]
  0017c	89 4d 9c	 mov	 DWORD PTR _di$[ebp+28], ecx

; 1445 : 	di.bOptimize = TRUE; //we do a SaveDC/RestoreDC

  0017f	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR _di$[ebp+32], 1

; 1446 : 	di.bRectInHimetric = m_bDrawGetDataInHimetric;

  00186	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00189	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0018c	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  0018f	83 e0 01	 and	 eax, 1
  00192	89 45 a8	 mov	 DWORD PTR _di$[ebp+40], eax

; 1447 : 	// create appropriate memory metafile DC
; 1448 : 	di.hdcDraw = CreateMetaFile(NULL);

  00195	8b f4		 mov	 esi, esp
  00197	6a 00		 push	 0
  00199	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateMetaFileW@4
  0019f	3b f4		 cmp	 esi, esp
  001a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a6	89 45 94	 mov	 DWORD PTR _di$[ebp+20], eax

; 1449 : 
; 1450 : 	// create attribute DC according to pformatetcIn->ptd
; 1451 : 
; 1452 : 	SaveDC(di.hdcDraw);

  001a9	8b f4		 mov	 esi, esp
  001ab	8b 4d 94	 mov	 ecx, DWORD PTR _di$[ebp+20]
  001ae	51		 push	 ecx
  001af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SaveDC@4
  001b5	3b f4		 cmp	 esi, esp
  001b7	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1453 : 	SetWindowOrgEx(di.hdcDraw, 0, 0, NULL);

  001bc	8b f4		 mov	 esi, esp
  001be	6a 00		 push	 0
  001c0	6a 00		 push	 0
  001c2	6a 00		 push	 0
  001c4	8b 55 94	 mov	 edx, DWORD PTR _di$[ebp+20]
  001c7	52		 push	 edx
  001c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowOrgEx@16
  001ce	3b f4		 cmp	 esi, esp
  001d0	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1454 : 	SetWindowExtEx(di.hdcDraw, rectl.right, rectl.bottom, NULL);

  001d5	8b f4		 mov	 esi, esp
  001d7	6a 00		 push	 0
  001d9	8b 45 d0	 mov	 eax, DWORD PTR _rectl$[ebp+12]
  001dc	50		 push	 eax
  001dd	8b 4d cc	 mov	 ecx, DWORD PTR _rectl$[ebp+8]
  001e0	51		 push	 ecx
  001e1	8b 55 94	 mov	 edx, DWORD PTR _di$[ebp+20]
  001e4	52		 push	 edx
  001e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowExtEx@16
  001eb	3b f4		 cmp	 esi, esp
  001ed	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1455 : 	OnDrawAdvanced(di);

  001f2	8b f4		 mov	 esi, esp
  001f4	8d 45 80	 lea	 eax, DWORD PTR _di$[ebp]
  001f7	50		 push	 eax
  001f8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001fb	8b 11		 mov	 edx, DWORD PTR [ecx]
  001fd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00200	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00203	ff d0		 call	 eax
  00205	3b f4		 cmp	 esi, esp
  00207	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1456 : 	RestoreDC(di.hdcDraw, -1);

  0020c	8b f4		 mov	 esi, esp
  0020e	6a ff		 push	 -1
  00210	8b 4d 94	 mov	 ecx, DWORD PTR _di$[ebp+20]
  00213	51		 push	 ecx
  00214	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RestoreDC@8
  0021a	3b f4		 cmp	 esi, esp
  0021c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1457 : 
; 1458 : 	HMETAFILE hMF = CloseMetaFile(di.hdcDraw);

  00221	8b f4		 mov	 esi, esp
  00223	8b 55 94	 mov	 edx, DWORD PTR _di$[ebp+20]
  00226	52		 push	 edx
  00227	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseMetaFile@4
  0022d	3b f4		 cmp	 esi, esp
  0022f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00234	89 85 78 ff ff
	ff		 mov	 DWORD PTR _hMF$[ebp], eax

; 1459 : 	if (hMF == NULL)

  0023a	83 bd 78 ff ff
	ff 00		 cmp	 DWORD PTR _hMF$[ebp], 0
  00241	75 0a		 jne	 SHORT $LN14@IDataObjec

; 1460 : 		return E_UNEXPECTED;

  00243	b8 ff ff 00 80	 mov	 eax, -2147418113	; 8000ffffH
  00248	e9 40 01 00 00	 jmp	 $LN17@IDataObjec
$LN14@IDataObjec:

; 1461 : 
; 1462 : 	HGLOBAL hMem=GlobalAlloc(GMEM_SHARE | GMEM_MOVEABLE, sizeof(METAFILEPICT));

  0024d	8b f4		 mov	 esi, esp
  0024f	6a 10		 push	 16			; 00000010H
  00251	68 02 20 00 00	 push	 8194			; 00002002H
  00256	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalAlloc@8
  0025c	3b f4		 cmp	 esi, esp
  0025e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00263	89 85 74 ff ff
	ff		 mov	 DWORD PTR _hMem$[ebp], eax

; 1463 : 
; 1464 : 	if (NULL==hMem)

  00269	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR _hMem$[ebp], 0
  00270	75 20		 jne	 SHORT $LN15@IDataObjec

; 1465 : 	{
; 1466 : 		DeleteMetaFile(hMF);

  00272	8b f4		 mov	 esi, esp
  00274	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _hMF$[ebp]
  0027a	50		 push	 eax
  0027b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteMetaFile@4
  00281	3b f4		 cmp	 esi, esp
  00283	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1467 : 		return ResultFromScode(STG_E_MEDIUMFULL);

  00288	b8 70 00 03 80	 mov	 eax, -2147286928	; 80030070H
  0028d	e9 fb 00 00 00	 jmp	 $LN17@IDataObjec
$LN15@IDataObjec:

; 1468 : 	}
; 1469 : 
; 1470 : 	LPMETAFILEPICT pMF=(LPMETAFILEPICT)GlobalLock(hMem);

  00292	8b f4		 mov	 esi, esp
  00294	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _hMem$[ebp]
  0029a	51		 push	 ecx
  0029b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalLock@4
  002a1	3b f4		 cmp	 esi, esp
  002a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a8	89 85 70 ff ff
	ff		 mov	 DWORD PTR _pMF$[ebp], eax
$LN4@IDataObjec:

; 1471 : 	ATLENSURE(pMF);

  002ae	83 bd 70 ff ff
	ff 00		 cmp	 DWORD PTR _pMF$[ebp], 0
  002b5	74 0c		 je	 SHORT $LN18@IDataObjec
  002b7	c7 85 58 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv211[ebp], 1
  002c1	eb 0a		 jmp	 SHORT $LN19@IDataObjec
$LN18@IDataObjec:
  002c3	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv211[ebp], 0
$LN19@IDataObjec:
  002cd	8b 95 58 ff ff
	ff		 mov	 edx, DWORD PTR tv211[ebp]
  002d3	89 95 6c ff ff
	ff		 mov	 DWORD PTR ___atl_condVal$3[ebp], edx
$LN7@IDataObjec:
  002d9	83 bd 6c ff ff
	ff 00		 cmp	 DWORD PTR ___atl_condVal$3[ebp], 0
  002e0	75 26		 jne	 SHORT $LN5@IDataObjec
  002e2	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  002e7	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  002ec	6a 00		 push	 0
  002ee	68 bf 05 00 00	 push	 1471			; 000005bfH
  002f3	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  002f8	6a 02		 push	 2
  002fa	e8 00 00 00 00	 call	 __CrtDbgReportW
  002ff	83 c4 18	 add	 esp, 24			; 00000018H
  00302	83 f8 01	 cmp	 eax, 1
  00305	75 01		 jne	 SHORT $LN5@IDataObjec
  00307	cc		 int	 3
$LN5@IDataObjec:
  00308	33 c9		 xor	 ecx, ecx
  0030a	75 cd		 jne	 SHORT $LN7@IDataObjec
  0030c	83 bd 6c ff ff
	ff 00		 cmp	 DWORD PTR ___atl_condVal$3[ebp], 0
  00313	75 0a		 jne	 SHORT $LN2@IDataObjec
  00315	68 05 40 00 80	 push	 -2147467259		; 80004005H
  0031a	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@IDataObjec:
  0031f	33 d2		 xor	 edx, edx
  00321	75 8b		 jne	 SHORT $LN4@IDataObjec

; 1472 : 	pMF->hMF=hMF;

  00323	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _pMF$[ebp]
  00329	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _hMF$[ebp]
  0032f	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1473 : 	pMF->mm=MM_ANISOTROPIC;

  00332	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR _pMF$[ebp]
  00338	c7 02 08 00 00
	00		 mov	 DWORD PTR [edx], 8

; 1474 : 	pMF->xExt=sizeMetric.cx;

  0033e	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _pMF$[ebp]
  00344	8b 4d ec	 mov	 ecx, DWORD PTR _sizeMetric$[ebp]
  00347	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1475 : 	pMF->yExt=sizeMetric.cy;

  0034a	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR _pMF$[ebp]
  00350	8b 45 f0	 mov	 eax, DWORD PTR _sizeMetric$[ebp+4]
  00353	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1476 : 	GlobalUnlock(hMem);

  00356	8b f4		 mov	 esi, esp
  00358	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _hMem$[ebp]
  0035e	51		 push	 ecx
  0035f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalUnlock@4
  00365	3b f4		 cmp	 esi, esp
  00367	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1477 : 
; 1478 : 	pmedium->tymed = TYMED_MFPICT;

  0036c	8b 55 0c	 mov	 edx, DWORD PTR _pmedium$[ebp]
  0036f	c7 02 20 00 00
	00		 mov	 DWORD PTR [edx], 32	; 00000020H

; 1479 : 	pmedium->hGlobal = hMem;

  00375	8b 45 0c	 mov	 eax, DWORD PTR _pmedium$[ebp]
  00378	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _hMem$[ebp]
  0037e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1480 : 	pmedium->pUnkForRelease = NULL;

  00381	8b 55 0c	 mov	 edx, DWORD PTR _pmedium$[ebp]
  00384	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 1481 : 
; 1482 : 	return S_OK;

  0038b	33 c0		 xor	 eax, eax
$LN17@IDataObjec:

; 1483 : }

  0038d	52		 push	 edx
  0038e	8b cd		 mov	 ecx, ebp
  00390	50		 push	 eax
  00391	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN26@IDataObjec
  00397	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0039c	58		 pop	 eax
  0039d	5a		 pop	 edx
  0039e	5f		 pop	 edi
  0039f	5e		 pop	 esi
  003a0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003a3	33 cd		 xor	 ecx, ebp
  003a5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003aa	81 c4 a8 00 00
	00		 add	 esp, 168		; 000000a8H
  003b0	3b ec		 cmp	 ebp, esp
  003b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b7	8b e5		 mov	 esp, ebp
  003b9	5d		 pop	 ebp
  003ba	c2 08 00	 ret	 8
  003bd	0f 1f 00	 npad	 3
$LN26@IDataObjec:
  003c0	04 00 00 00	 DD	 4
  003c4	00 00 00 00	 DD	 $LN25@IDataObjec
$LN25@IDataObjec:
  003c8	ec ff ff ff	 DD	 -20			; ffffffecH
  003cc	08 00 00 00	 DD	 8
  003d0	00 00 00 00	 DD	 $LN21@IDataObjec
  003d4	dc ff ff ff	 DD	 -36			; ffffffdcH
  003d8	08 00 00 00	 DD	 8
  003dc	00 00 00 00	 DD	 $LN22@IDataObjec
  003e0	c4 ff ff ff	 DD	 -60			; ffffffc4H
  003e4	10 00 00 00	 DD	 16			; 00000010H
  003e8	00 00 00 00	 DD	 $LN23@IDataObjec
  003ec	80 ff ff ff	 DD	 -128			; ffffff80H
  003f0	3c 00 00 00	 DD	 60			; 0000003cH
  003f4	00 00 00 00	 DD	 $LN24@IDataObjec
$LN24@IDataObjec:
  003f8	64		 DB	 100			; 00000064H
  003f9	69		 DB	 105			; 00000069H
  003fa	00		 DB	 0
$LN23@IDataObjec:
  003fb	72		 DB	 114			; 00000072H
  003fc	65		 DB	 101			; 00000065H
  003fd	63		 DB	 99			; 00000063H
  003fe	74		 DB	 116			; 00000074H
  003ff	6c		 DB	 108			; 0000006cH
  00400	00		 DB	 0
$LN22@IDataObjec:
  00401	73		 DB	 115			; 00000073H
  00402	69		 DB	 105			; 00000069H
  00403	7a		 DB	 122			; 0000007aH
  00404	65		 DB	 101			; 00000065H
  00405	00		 DB	 0
$LN21@IDataObjec:
  00406	73		 DB	 115			; 00000073H
  00407	69		 DB	 105			; 00000069H
  00408	7a		 DB	 122			; 0000007aH
  00409	65		 DB	 101			; 00000065H
  0040a	4d		 DB	 77			; 0000004dH
  0040b	65		 DB	 101			; 00000065H
  0040c	74		 DB	 116			; 00000074H
  0040d	72		 DB	 114			; 00000072H
  0040e	69		 DB	 105			; 00000069H
  0040f	63		 DB	 99			; 00000063H
  00410	00		 DB	 0
?IDataObject_GetData@CComControlBase@ATL@@QAEJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z ENDP ; ATL::CComControlBase::IDataObject_GetData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?IViewObject_Draw@CComControlBase@ATL@@QAEJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3@Z
_TEXT	SEGMENT
tv175 = -120						; size = 4
$T1 = -116						; size = 8
$T2 = -108						; size = 8
$T3 = -100						; size = 8
$T4 = -92						; size = 8
$T5 = -84						; size = 8
_di$ = -72						; size = 60
_bOptimize$ = -8					; size = 4
_this$ = -4						; size = 4
_dwDrawAspect$ = 8					; size = 4
_lindex$ = 12						; size = 4
_pvAspect$ = 16						; size = 4
_ptd$ = 20						; size = 4
_hicTargetDev$ = 24					; size = 4
_hdcDraw$ = 28						; size = 4
_prcBounds$ = 32					; size = 4
_prcWBounds$ = 36					; size = 4
?IViewObject_Draw@CComControlBase@ATL@@QAEJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3@Z PROC ; ATL::CComControlBase::IViewObject_Draw, COMDAT
; _this$ = ecx

; 1353 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d 88	 lea	 edi, DWORD PTR [ebp-120]
  0000c	b9 1e 00 00 00	 mov	 ecx, 30			; 0000001eH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1354 : 	ATLTRACE(atlTraceControls,2,_T("Draw dwDrawAspect=%x lindex=%d ptd=%x hic=%x hdc=%x\n"),

  0001c	8b 45 1c	 mov	 eax, DWORD PTR _hdcDraw$[ebp]
  0001f	50		 push	 eax
  00020	8b 4d 18	 mov	 ecx, DWORD PTR _hicTargetDev$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 14	 mov	 edx, DWORD PTR _ptd$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR _lindex$[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _dwDrawAspect$[ebp]
  0002f	51		 push	 ecx
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_1GK@PEJLBIEI@?$AAD?$AAr?$AAa?$AAw?$AA?5?$AAd?$AAw?$AAD?$AAr?$AAa?$AAw?$AAA?$AAs?$AAp?$AAe@
  00035	6a 02		 push	 2
  00037	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  0003c	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00041	50		 push	 eax
  00042	68 4a 05 00 00	 push	 1354			; 0000054aH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0004c	8d 4d ac	 lea	 ecx, DWORD PTR $T5[ebp]
  0004f	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0005a	83 c4 24	 add	 esp, 36			; 00000024H

; 1355 : 		dwDrawAspect, lindex, reinterpret_cast<ULONG_PTR>(ptd),
; 1356 : 			reinterpret_cast<ULONG_PTR>(hicTargetDev), reinterpret_cast<ULONG_PTR>(hdcDraw));
; 1357 : #ifdef _DEBUG
; 1358 : 	if (prcBounds == NULL)

  0005d	83 7d 20 00	 cmp	 DWORD PTR _prcBounds$[ebp], 0
  00061	75 2f		 jne	 SHORT $LN4@IViewObjec

; 1359 : 		ATLTRACE(atlTraceControls,2,_T("\tprcBounds=NULL\n"));

  00063	68 00 00 00 00	 push	 OFFSET ??_C@_1CC@KIMLOMB@?$AA?7?$AAp?$AAr?$AAc?$AAB?$AAo?$AAu?$AAn?$AAd?$AAs?$AA?$DN?$AAN?$AAU?$AAL?$AAL@
  00068	6a 02		 push	 2
  0006a	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  0006f	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00074	50		 push	 eax
  00075	68 4f 05 00 00	 push	 1359			; 0000054fH
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0007f	8d 4d a4	 lea	 ecx, DWORD PTR $T4[ebp]
  00082	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0008d	83 c4 10	 add	 esp, 16			; 00000010H
  00090	eb 48		 jmp	 SHORT $LN5@IViewObjec
$LN4@IViewObjec:

; 1360 : 	else
; 1361 : 		ATLTRACE(atlTraceControls,2,_T("\tprcBounds=%d,%d,%d,%d\n"), prcBounds->left,

  00092	8b 55 20	 mov	 edx, DWORD PTR _prcBounds$[ebp]
  00095	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00098	50		 push	 eax
  00099	8b 4d 20	 mov	 ecx, DWORD PTR _prcBounds$[ebp]
  0009c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0009f	52		 push	 edx
  000a0	8b 45 20	 mov	 eax, DWORD PTR _prcBounds$[ebp]
  000a3	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a6	51		 push	 ecx
  000a7	8b 55 20	 mov	 edx, DWORD PTR _prcBounds$[ebp]
  000aa	8b 02		 mov	 eax, DWORD PTR [edx]
  000ac	50		 push	 eax
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_1DA@MIJFAJLJ@?$AA?7?$AAp?$AAr?$AAc?$AAB?$AAo?$AAu?$AAn?$AAd?$AAs?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?$CF@
  000b2	6a 02		 push	 2
  000b4	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  000b9	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  000be	50		 push	 eax
  000bf	68 51 05 00 00	 push	 1361			; 00000551H
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000c9	8d 4d 9c	 lea	 ecx, DWORD PTR $T3[ebp]
  000cc	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000d1	50		 push	 eax
  000d2	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000d7	83 c4 20	 add	 esp, 32			; 00000020H
$LN5@IViewObjec:

; 1362 : 			prcBounds->top, prcBounds->right, prcBounds->bottom);
; 1363 : 	if (prcWBounds == NULL)

  000da	83 7d 24 00	 cmp	 DWORD PTR _prcWBounds$[ebp], 0
  000de	75 2f		 jne	 SHORT $LN6@IViewObjec

; 1364 : 		ATLTRACE(atlTraceControls,2,_T("\tprcWBounds=NULL\n"));

  000e0	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@LIAGMDDA@?$AA?7?$AAp?$AAr?$AAc?$AAW?$AAB?$AAo?$AAu?$AAn?$AAd?$AAs?$AA?$DN?$AAN?$AAU?$AAL@
  000e5	6a 02		 push	 2
  000e7	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  000ec	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  000f1	50		 push	 eax
  000f2	68 54 05 00 00	 push	 1364			; 00000554H
  000f7	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000fc	8d 4d 94	 lea	 ecx, DWORD PTR $T2[ebp]
  000ff	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0010a	83 c4 10	 add	 esp, 16			; 00000010H
  0010d	eb 48		 jmp	 SHORT $LN7@IViewObjec
$LN6@IViewObjec:

; 1365 : 	else
; 1366 : 		ATLTRACE(atlTraceControls,2,_T("\tprcWBounds=%d,%d,%d,%d\n"), prcWBounds->left,

  0010f	8b 4d 24	 mov	 ecx, DWORD PTR _prcWBounds$[ebp]
  00112	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00115	52		 push	 edx
  00116	8b 45 24	 mov	 eax, DWORD PTR _prcWBounds$[ebp]
  00119	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0011c	51		 push	 ecx
  0011d	8b 55 24	 mov	 edx, DWORD PTR _prcWBounds$[ebp]
  00120	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00123	50		 push	 eax
  00124	8b 4d 24	 mov	 ecx, DWORD PTR _prcWBounds$[ebp]
  00127	8b 11		 mov	 edx, DWORD PTR [ecx]
  00129	52		 push	 edx
  0012a	68 00 00 00 00	 push	 OFFSET ??_C@_1DC@EMEJOIFB@?$AA?7?$AAp?$AAr?$AAc?$AAW?$AAB?$AAo?$AAu?$AAn?$AAd?$AAs?$AA?$DN?$AA?$CF?$AAd?$AA?0@
  0012f	6a 02		 push	 2
  00131	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00136	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  0013b	50		 push	 eax
  0013c	68 56 05 00 00	 push	 1366			; 00000556H
  00141	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00146	8d 4d 8c	 lea	 ecx, DWORD PTR $T1[ebp]
  00149	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0014e	50		 push	 eax
  0014f	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00154	83 c4 20	 add	 esp, 32			; 00000020H
$LN7@IViewObjec:

; 1367 : 			prcWBounds->top, prcWBounds->right, prcWBounds->bottom);
; 1368 : #endif
; 1369 : 
; 1370 : 	if (prcBounds == NULL)

  00157	83 7d 20 00	 cmp	 DWORD PTR _prcBounds$[ebp], 0
  0015b	75 20		 jne	 SHORT $LN8@IViewObjec

; 1371 : 	{
; 1372 : 		if (!m_bWndLess)

  0015d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00160	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00163	d1 e9		 shr	 ecx, 1
  00165	83 e1 01	 and	 ecx, 1
  00168	75 0a		 jne	 SHORT $LN9@IViewObjec

; 1373 : 			return E_INVALIDARG;

  0016a	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  0016f	e9 e8 00 00 00	 jmp	 $LN1@IViewObjec
$LN9@IViewObjec:

; 1374 : 		prcBounds = (RECTL*)&m_rcPos;

  00174	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00177	83 c2 2c	 add	 edx, 44			; 0000002cH
  0017a	89 55 20	 mov	 DWORD PTR _prcBounds$[ebp], edx
$LN8@IViewObjec:

; 1375 : 	}
; 1376 : 
; 1377 : 	// support the aspects required for multi-pass drawing
; 1378 : 	switch (dwDrawAspect)

  0017d	8b 45 08	 mov	 eax, DWORD PTR _dwDrawAspect$[ebp]
  00180	89 45 88	 mov	 DWORD PTR tv175[ebp], eax
  00183	83 7d 88 01	 cmp	 DWORD PTR tv175[ebp], 1
  00187	74 0e		 je	 SHORT $LN10@IViewObjec
  00189	83 7d 88 10	 cmp	 DWORD PTR tv175[ebp], 16 ; 00000010H
  0018d	74 08		 je	 SHORT $LN10@IViewObjec
  0018f	83 7d 88 20	 cmp	 DWORD PTR tv175[ebp], 32 ; 00000020H
  00193	74 02		 je	 SHORT $LN10@IViewObjec
  00195	eb 02		 jmp	 SHORT $LN11@IViewObjec
$LN10@IViewObjec:

; 1379 : 	{
; 1380 : 		case DVASPECT_CONTENT:
; 1381 : 		case DVASPECT_OPAQUE:
; 1382 : 		case DVASPECT_TRANSPARENT:
; 1383 : 			break;

  00197	eb 34		 jmp	 SHORT $LN2@IViewObjec
$LN11@IViewObjec:

; 1384 : 		default:
; 1385 : 			ATLASSERT(FALSE);

  00199	33 c9		 xor	 ecx, ecx
  0019b	75 26		 jne	 SHORT $LN15@IViewObjec
  0019d	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  001a2	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  001a7	6a 00		 push	 0
  001a9	68 69 05 00 00	 push	 1385			; 00000569H
  001ae	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  001b3	6a 02		 push	 2
  001b5	e8 00 00 00 00	 call	 __CrtDbgReportW
  001ba	83 c4 18	 add	 esp, 24			; 00000018H
  001bd	83 f8 01	 cmp	 eax, 1
  001c0	75 01		 jne	 SHORT $LN15@IViewObjec
  001c2	cc		 int	 3
$LN15@IViewObjec:

; 1386 : 			return DV_E_DVASPECT;

  001c3	b8 6b 00 04 80	 mov	 eax, -2147221397	; 8004006bH
  001c8	e9 8f 00 00 00	 jmp	 $LN1@IViewObjec
$LN2@IViewObjec:

; 1387 : 			break;
; 1388 : 	}
; 1389 : 
; 1390 : 	// make sure nobody forgets to do this
; 1391 : 	if (ptd == NULL)

  001cd	83 7d 14 00	 cmp	 DWORD PTR _ptd$[ebp], 0
  001d1	75 07		 jne	 SHORT $LN12@IViewObjec

; 1392 : 		hicTargetDev = NULL;

  001d3	c7 45 18 00 00
	00 00		 mov	 DWORD PTR _hicTargetDev$[ebp], 0
$LN12@IViewObjec:

; 1393 : 
; 1394 : 	BOOL bOptimize = FALSE;

  001da	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _bOptimize$[ebp], 0

; 1395 : 	if (pvAspect && ((DVASPECTINFO *)pvAspect)->cb >= sizeof(DVASPECTINFO))

  001e1	83 7d 10 00	 cmp	 DWORD PTR _pvAspect$[ebp], 0
  001e5	74 14		 je	 SHORT $LN13@IViewObjec
  001e7	8b 45 10	 mov	 eax, DWORD PTR _pvAspect$[ebp]
  001ea	83 38 08	 cmp	 DWORD PTR [eax], 8
  001ed	72 0c		 jb	 SHORT $LN13@IViewObjec

; 1396 : 		bOptimize = (((DVASPECTINFO *)pvAspect)->dwFlags & DVASPECTINFOFLAG_CANOPTIMIZE);

  001ef	8b 4d 10	 mov	 ecx, DWORD PTR _pvAspect$[ebp]
  001f2	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001f5	83 e2 01	 and	 edx, 1
  001f8	89 55 f8	 mov	 DWORD PTR _bOptimize$[ebp], edx
$LN13@IViewObjec:

; 1397 : 
; 1398 : 	ATL_DRAWINFO di;
; 1399 : 	memset(&di, 0, sizeof(di));

  001fb	6a 3c		 push	 60			; 0000003cH
  001fd	6a 00		 push	 0
  001ff	8d 45 b8	 lea	 eax, DWORD PTR _di$[ebp]
  00202	50		 push	 eax
  00203	e8 00 00 00 00	 call	 _memset
  00208	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1400 : 	di.cbSize = sizeof(di);

  0020b	c7 45 b8 3c 00
	00 00		 mov	 DWORD PTR _di$[ebp], 60	; 0000003cH

; 1401 : 	di.dwDrawAspect = dwDrawAspect;

  00212	8b 4d 08	 mov	 ecx, DWORD PTR _dwDrawAspect$[ebp]
  00215	89 4d bc	 mov	 DWORD PTR _di$[ebp+4], ecx

; 1402 : 	di.lindex = lindex;

  00218	8b 55 0c	 mov	 edx, DWORD PTR _lindex$[ebp]
  0021b	89 55 c0	 mov	 DWORD PTR _di$[ebp+8], edx

; 1403 : 	di.ptd = ptd;

  0021e	8b 45 14	 mov	 eax, DWORD PTR _ptd$[ebp]
  00221	89 45 c4	 mov	 DWORD PTR _di$[ebp+12], eax

; 1404 : 	di.hicTargetDev = hicTargetDev;

  00224	8b 4d 18	 mov	 ecx, DWORD PTR _hicTargetDev$[ebp]
  00227	89 4d c8	 mov	 DWORD PTR _di$[ebp+16], ecx

; 1405 : 	di.hdcDraw = hdcDraw;

  0022a	8b 55 1c	 mov	 edx, DWORD PTR _hdcDraw$[ebp]
  0022d	89 55 cc	 mov	 DWORD PTR _di$[ebp+20], edx

; 1406 : 	di.prcBounds = prcBounds;

  00230	8b 45 20	 mov	 eax, DWORD PTR _prcBounds$[ebp]
  00233	89 45 d0	 mov	 DWORD PTR _di$[ebp+24], eax

; 1407 : 	di.prcWBounds = prcWBounds;

  00236	8b 4d 24	 mov	 ecx, DWORD PTR _prcWBounds$[ebp]
  00239	89 4d d4	 mov	 DWORD PTR _di$[ebp+28], ecx

; 1408 : 	di.bOptimize = bOptimize;

  0023c	8b 55 f8	 mov	 edx, DWORD PTR _bOptimize$[ebp]
  0023f	89 55 d8	 mov	 DWORD PTR _di$[ebp+32], edx

; 1409 : 	return OnDrawAdvanced(di);

  00242	8b f4		 mov	 esi, esp
  00244	8d 45 b8	 lea	 eax, DWORD PTR _di$[ebp]
  00247	50		 push	 eax
  00248	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0024b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0024d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00250	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00253	ff d0		 call	 eax
  00255	3b f4		 cmp	 esi, esp
  00257	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@IViewObjec:

; 1410 : }

  0025c	52		 push	 edx
  0025d	8b cd		 mov	 ecx, ebp
  0025f	50		 push	 eax
  00260	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN18@IViewObjec
  00266	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0026b	58		 pop	 eax
  0026c	5a		 pop	 edx
  0026d	5f		 pop	 edi
  0026e	5e		 pop	 esi
  0026f	83 c4 78	 add	 esp, 120		; 00000078H
  00272	3b ec		 cmp	 ebp, esp
  00274	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00279	8b e5		 mov	 esp, ebp
  0027b	5d		 pop	 ebp
  0027c	c2 20 00	 ret	 32			; 00000020H
  0027f	90		 npad	 1
$LN18@IViewObjec:
  00280	01 00 00 00	 DD	 1
  00284	00 00 00 00	 DD	 $LN17@IViewObjec
$LN17@IViewObjec:
  00288	b8 ff ff ff	 DD	 -72			; ffffffb8H
  0028c	3c 00 00 00	 DD	 60			; 0000003cH
  00290	00 00 00 00	 DD	 $LN16@IViewObjec
$LN16@IViewObjec:
  00294	64		 DB	 100			; 00000064H
  00295	69		 DB	 105			; 00000069H
  00296	00		 DB	 0
?IViewObject_Draw@CComControlBase@ATL@@QAEJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3@Z ENDP ; ATL::CComControlBase::IViewObject_Draw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?IOleInPlaceObject_SetObjectRects@CComControlBase@ATL@@QAEJPBUtagRECT@@0@Z
_TEXT	SEGMENT
_size$1 = -52						; size = 8
_tempRgn$2 = -40					; size = 4
_b$3 = -36						; size = 4
_rcIXect$4 = -28					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_prcPos$ = 8						; size = 4
_prcClip$ = 12						; size = 4
?IOleInPlaceObject_SetObjectRects@CComControlBase@ATL@@QAEJPBUtagRECT@@0@Z PROC ; ATL::CComControlBase::IOleInPlaceObject_SetObjectRects, COMDAT
; _this$ = ecx

; 1277 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d c8	 lea	 edi, DWORD PTR [ebp-56]
  0000c	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00023	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1278 : 	if (prcPos == NULL || prcClip == NULL)

  00026	83 7d 08 00	 cmp	 DWORD PTR _prcPos$[ebp], 0
  0002a	74 06		 je	 SHORT $LN3@IOleInPlac
  0002c	83 7d 0c 00	 cmp	 DWORD PTR _prcClip$[ebp], 0
  00030	75 0a		 jne	 SHORT $LN2@IOleInPlac
$LN3@IOleInPlac:

; 1279 : 		return E_POINTER;

  00032	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00037	e9 1c 01 00 00	 jmp	 $LN1@IOleInPlac
$LN2@IOleInPlac:

; 1280 : 
; 1281 : 	m_rcPos = *prcPos;

  0003c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 c0 2c	 add	 eax, 44			; 0000002cH
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _prcPos$[ebp]
  00045	8b 11		 mov	 edx, DWORD PTR [ecx]
  00047	89 10		 mov	 DWORD PTR [eax], edx
  00049	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0004c	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0004f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00052	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00055	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  00058	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1282 : 	if (m_hWndCD)

  0005b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0005e	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00061	83 38 00	 cmp	 DWORD PTR [eax], 0
  00064	0f 84 ec 00 00
	00		 je	 $LN4@IOleInPlac

; 1283 : 	{
; 1284 : 		// the container wants us to clip, so figure out if we really
; 1285 : 		// need to
; 1286 : 		//
; 1287 : 		RECT rcIXect;
; 1288 : 		BOOL b = IntersectRect(&rcIXect, prcPos, prcClip);

  0006a	8b f4		 mov	 esi, esp
  0006c	8b 4d 0c	 mov	 ecx, DWORD PTR _prcClip$[ebp]
  0006f	51		 push	 ecx
  00070	8b 55 08	 mov	 edx, DWORD PTR _prcPos$[ebp]
  00073	52		 push	 edx
  00074	8d 45 e4	 lea	 eax, DWORD PTR _rcIXect$4[ebp]
  00077	50		 push	 eax
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IntersectRect@12
  0007e	3b f4		 cmp	 esi, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	89 45 dc	 mov	 DWORD PTR _b$3[ebp], eax

; 1289 : 		HRGN tempRgn = NULL;

  00088	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _tempRgn$2[ebp], 0

; 1290 : 		if (b && !EqualRect(&rcIXect, prcPos))

  0008f	83 7d dc 00	 cmp	 DWORD PTR _b$3[ebp], 0
  00093	74 55		 je	 SHORT $LN5@IOleInPlac
  00095	8b f4		 mov	 esi, esp
  00097	8b 4d 08	 mov	 ecx, DWORD PTR _prcPos$[ebp]
  0009a	51		 push	 ecx
  0009b	8d 55 e4	 lea	 edx, DWORD PTR _rcIXect$4[ebp]
  0009e	52		 push	 edx
  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EqualRect@8
  000a5	3b f4		 cmp	 esi, esp
  000a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ac	85 c0		 test	 eax, eax
  000ae	75 3a		 jne	 SHORT $LN5@IOleInPlac

; 1291 : 		{
; 1292 : 			OffsetRect(&rcIXect, -(prcPos->left), -(prcPos->top));

  000b0	8b 45 08	 mov	 eax, DWORD PTR _prcPos$[ebp]
  000b3	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000b6	f7 d9		 neg	 ecx
  000b8	8b f4		 mov	 esi, esp
  000ba	51		 push	 ecx
  000bb	8b 55 08	 mov	 edx, DWORD PTR _prcPos$[ebp]
  000be	8b 02		 mov	 eax, DWORD PTR [edx]
  000c0	f7 d8		 neg	 eax
  000c2	50		 push	 eax
  000c3	8d 4d e4	 lea	 ecx, DWORD PTR _rcIXect$4[ebp]
  000c6	51		 push	 ecx
  000c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  000cd	3b f4		 cmp	 esi, esp
  000cf	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1293 : 			tempRgn = CreateRectRgnIndirect(&rcIXect);

  000d4	8b f4		 mov	 esi, esp
  000d6	8d 55 e4	 lea	 edx, DWORD PTR _rcIXect$4[ebp]
  000d9	52		 push	 edx
  000da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateRectRgnIndirect@4
  000e0	3b f4		 cmp	 esi, esp
  000e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e7	89 45 d8	 mov	 DWORD PTR _tempRgn$2[ebp], eax
$LN5@IOleInPlac:

; 1294 : 		}
; 1295 : 
; 1296 : 		SetWindowRgn(m_hWndCD, tempRgn, TRUE);

  000ea	8b f4		 mov	 esi, esp
  000ec	6a 01		 push	 1
  000ee	8b 45 d8	 mov	 eax, DWORD PTR _tempRgn$2[ebp]
  000f1	50		 push	 eax
  000f2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f5	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  000f8	8b 02		 mov	 eax, DWORD PTR [edx]
  000fa	50		 push	 eax
  000fb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowRgn@12
  00101	3b f4		 cmp	 esi, esp
  00103	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1297 : 
; 1298 : 		// set our control's location, but don't change it's size at all
; 1299 : 		// [people for whom zooming is important should set that up here]
; 1300 : 		//
; 1301 : 		SIZEL size = {prcPos->right - prcPos->left, prcPos->bottom - prcPos->top};

  00108	8b 4d 08	 mov	 ecx, DWORD PTR _prcPos$[ebp]
  0010b	8b 55 08	 mov	 edx, DWORD PTR _prcPos$[ebp]
  0010e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00111	2b 02		 sub	 eax, DWORD PTR [edx]
  00113	89 45 cc	 mov	 DWORD PTR _size$1[ebp], eax
  00116	8b 4d 08	 mov	 ecx, DWORD PTR _prcPos$[ebp]
  00119	8b 55 08	 mov	 edx, DWORD PTR _prcPos$[ebp]
  0011c	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0011f	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00122	89 45 d0	 mov	 DWORD PTR _size$1[ebp+4], eax

; 1302 : 		SetWindowPos(m_hWndCD, NULL, prcPos->left,

  00125	8b f4		 mov	 esi, esp
  00127	6a 14		 push	 20			; 00000014H
  00129	8b 4d d0	 mov	 ecx, DWORD PTR _size$1[ebp+4]
  0012c	51		 push	 ecx
  0012d	8b 55 cc	 mov	 edx, DWORD PTR _size$1[ebp]
  00130	52		 push	 edx
  00131	8b 45 08	 mov	 eax, DWORD PTR _prcPos$[ebp]
  00134	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00137	51		 push	 ecx
  00138	8b 55 08	 mov	 edx, DWORD PTR _prcPos$[ebp]
  0013b	8b 02		 mov	 eax, DWORD PTR [edx]
  0013d	50		 push	 eax
  0013e	6a 00		 push	 0
  00140	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00143	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00146	8b 02		 mov	 eax, DWORD PTR [edx]
  00148	50		 push	 eax
  00149	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowPos@28
  0014f	3b f4		 cmp	 esi, esp
  00151	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@IOleInPlac:

; 1303 : 					 prcPos->top, size.cx, size.cy, SWP_NOZORDER | SWP_NOACTIVATE);
; 1304 : 	}
; 1305 : 
; 1306 : 	return S_OK;

  00156	33 c0		 xor	 eax, eax
$LN1@IOleInPlac:

; 1307 : }

  00158	52		 push	 edx
  00159	8b cd		 mov	 ecx, ebp
  0015b	50		 push	 eax
  0015c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@IOleInPlac
  00162	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00167	58		 pop	 eax
  00168	5a		 pop	 edx
  00169	5f		 pop	 edi
  0016a	5e		 pop	 esi
  0016b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0016e	33 cd		 xor	 ecx, ebp
  00170	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00175	83 c4 38	 add	 esp, 56			; 00000038H
  00178	3b ec		 cmp	 ebp, esp
  0017a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0017f	8b e5		 mov	 esp, ebp
  00181	5d		 pop	 ebp
  00182	c2 08 00	 ret	 8
  00185	0f 1f 00	 npad	 3
$LN10@IOleInPlac:
  00188	02 00 00 00	 DD	 2
  0018c	00 00 00 00	 DD	 $LN9@IOleInPlac
$LN9@IOleInPlac:
  00190	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00194	10 00 00 00	 DD	 16			; 00000010H
  00198	00 00 00 00	 DD	 $LN7@IOleInPlac
  0019c	cc ff ff ff	 DD	 -52			; ffffffccH
  001a0	08 00 00 00	 DD	 8
  001a4	00 00 00 00	 DD	 $LN8@IOleInPlac
$LN8@IOleInPlac:
  001a8	73		 DB	 115			; 00000073H
  001a9	69		 DB	 105			; 00000069H
  001aa	7a		 DB	 122			; 0000007aH
  001ab	65		 DB	 101			; 00000065H
  001ac	00		 DB	 0
$LN7@IOleInPlac:
  001ad	72		 DB	 114			; 00000072H
  001ae	63		 DB	 99			; 00000063H
  001af	49		 DB	 73			; 00000049H
  001b0	58		 DB	 88			; 00000058H
  001b1	65		 DB	 101			; 00000065H
  001b2	63		 DB	 99			; 00000063H
  001b3	74		 DB	 116			; 00000074H
  001b4	00		 DB	 0
?IOleInPlaceObject_SetObjectRects@CComControlBase@ATL@@QAEJPBUtagRECT@@0@Z ENDP ; ATL::CComControlBase::IOleInPlaceObject_SetObjectRects
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?IOleInPlaceObject_UIDeactivate@CComControlBase@ATL@@QAEJXZ
_TEXT	SEGMENT
tv225 = -140						; size = 4
tv208 = -136						; size = 4
tv185 = -132						; size = 4
tv147 = -128						; size = 4
tv91 = -124						; size = 4
_rcClip$1 = -116					; size = 16
_rcPos$2 = -92						; size = 16
_frameInfo$3 = -68					; size = 20
_spInPlaceUIWindow$4 = -40				; size = 4
_spInPlaceFrame$5 = -28					; size = 4
_hwndParent$ = -16					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?IOleInPlaceObject_UIDeactivate@CComControlBase@ATL@@QAEJXZ PROC ; ATL::CComControlBase::IOleInPlaceObject_UIDeactivate, COMDAT
; _this$ = ecx

; 1240 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 74 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-140]
  00012	b9 23 00 00 00	 mov	 ecx, 35			; 00000023H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1241 : 	// if we're not UIActive, not much to do.
; 1242 : 	if (!m_bUIActive)

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00032	c1 e9 03	 shr	 ecx, 3
  00035	83 e1 01	 and	 ecx, 1
  00038	75 07		 jne	 SHORT $LN2@IOleInPlac

; 1243 : 		return S_OK;

  0003a	33 c0		 xor	 eax, eax
  0003c	e9 65 01 00 00	 jmp	 $LN1@IOleInPlac
$LN2@IOleInPlac:

; 1244 : 
; 1245 : 	m_bUIActive = FALSE;

  00041	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00044	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00047	83 e0 f7	 and	 eax, -9			; fffffff7H
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	89 41 44	 mov	 DWORD PTR [ecx+68], eax

; 1246 : 
; 1247 : 	HWND hwndParent;
; 1248 : 	// This call to GetWindow is a fix for Delphi
; 1249 : 	if (m_spInPlaceSite)

  00050	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	83 c1 04	 add	 ecx, 4
  00056	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAUIOleInPlaceSiteWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator IOleInPlaceSiteWindowless *
  0005b	85 c0		 test	 eax, eax
  0005d	0f 84 41 01 00
	00		 je	 $LN3@IOleInPlac

; 1250 : 	{
; 1251 : 		if (m_spInPlaceSite->GetWindow(&hwndParent) == S_OK)

  00063	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	83 c1 04	 add	 ecx, 4
  00069	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator->
  0006e	89 45 84	 mov	 DWORD PTR tv91[ebp], eax
  00071	8b f4		 mov	 esi, esp
  00073	8d 55 f0	 lea	 edx, DWORD PTR _hwndParent$[ebp]
  00076	52		 push	 edx
  00077	8b 45 84	 mov	 eax, DWORD PTR tv91[ebp]
  0007a	50		 push	 eax
  0007b	8b 4d 84	 mov	 ecx, DWORD PTR tv91[ebp]
  0007e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00080	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00083	ff d0		 call	 eax
  00085	3b f4		 cmp	 esi, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008c	85 c0		 test	 eax, eax
  0008e	0f 85 e0 00 00
	00		 jne	 $LN4@IOleInPlac

; 1252 : 		{
; 1253 : 			// notify frame windows, if appropriate, that we're no longer ui-active.
; 1254 : 			CComPtr<IOleInPlaceFrame> spInPlaceFrame;

  00094	8d 4d e4	 lea	 ecx, DWORD PTR _spInPlaceFrame$5[ebp]
  00097	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceFrame>::CComPtr<IOleInPlaceFrame>

; 1255 : 			CComPtr<IOleInPlaceUIWindow> spInPlaceUIWindow;

  0009c	8d 4d d8	 lea	 ecx, DWORD PTR _spInPlaceUIWindow$4[ebp]
  0009f	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceUIWindow>::CComPtr<IOleInPlaceUIWindow>

; 1256 : 			OLEINPLACEFRAMEINFO frameInfo;
; 1257 : 			frameInfo.cb = sizeof(OLEINPLACEFRAMEINFO);

  000a4	c7 45 bc 14 00
	00 00		 mov	 DWORD PTR _frameInfo$3[ebp], 20 ; 00000014H

; 1258 : 			RECT rcPos, rcClip;
; 1259 : 
; 1260 : 			m_spInPlaceSite->GetWindowContext(&spInPlaceFrame,

  000ab	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	83 c1 04	 add	 ecx, 4
  000b1	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator->
  000b6	89 45 80	 mov	 DWORD PTR tv147[ebp], eax
  000b9	8b f4		 mov	 esi, esp
  000bb	8d 4d bc	 lea	 ecx, DWORD PTR _frameInfo$3[ebp]
  000be	51		 push	 ecx
  000bf	8d 55 8c	 lea	 edx, DWORD PTR _rcClip$1[ebp]
  000c2	52		 push	 edx
  000c3	8d 45 a4	 lea	 eax, DWORD PTR _rcPos$2[ebp]
  000c6	50		 push	 eax
  000c7	8d 4d d8	 lea	 ecx, DWORD PTR _spInPlaceUIWindow$4[ebp]
  000ca	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEPAPAUIOleInPlaceUIWindow@@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator&
  000cf	50		 push	 eax
  000d0	8d 4d e4	 lea	 ecx, DWORD PTR _spInPlaceFrame$5[ebp]
  000d3	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEPAPAUIOleInPlaceFrame@@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::operator&
  000d8	50		 push	 eax
  000d9	8b 4d 80	 mov	 ecx, DWORD PTR tv147[ebp]
  000dc	51		 push	 ecx
  000dd	8b 55 80	 mov	 edx, DWORD PTR tv147[ebp]
  000e0	8b 02		 mov	 eax, DWORD PTR [edx]
  000e2	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000e5	ff d1		 call	 ecx
  000e7	3b f4		 cmp	 esi, esp
  000e9	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1261 : 				&spInPlaceUIWindow, &rcPos, &rcClip, &frameInfo);
; 1262 : 			if (spInPlaceUIWindow)

  000ee	8d 4d d8	 lea	 ecx, DWORD PTR _spInPlaceUIWindow$4[ebp]
  000f1	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAUIOleInPlaceUIWindow@@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator IOleInPlaceUIWindow *
  000f6	85 c0		 test	 eax, eax
  000f8	74 2f		 je	 SHORT $LN5@IOleInPlac

; 1263 : 				spInPlaceUIWindow->SetActiveObject(NULL, NULL);

  000fa	8d 4d d8	 lea	 ecx, DWORD PTR _spInPlaceUIWindow$4[ebp]
  000fd	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceUIWindow@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator->
  00102	89 85 7c ff ff
	ff		 mov	 DWORD PTR tv185[ebp], eax
  00108	8b f4		 mov	 esi, esp
  0010a	6a 00		 push	 0
  0010c	6a 00		 push	 0
  0010e	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR tv185[ebp]
  00114	52		 push	 edx
  00115	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv185[ebp]
  0011b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011d	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00120	ff d2		 call	 edx
  00122	3b f4		 cmp	 esi, esp
  00124	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@IOleInPlac:

; 1264 : 			if (spInPlaceFrame)

  00129	8d 4d e4	 lea	 ecx, DWORD PTR _spInPlaceFrame$5[ebp]
  0012c	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAUIOleInPlaceFrame@@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::operator IOleInPlaceFrame *
  00131	85 c0		 test	 eax, eax
  00133	74 2f		 je	 SHORT $LN6@IOleInPlac

; 1265 : 				spInPlaceFrame->SetActiveObject(NULL, NULL);

  00135	8d 4d e4	 lea	 ecx, DWORD PTR _spInPlaceFrame$5[ebp]
  00138	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceFrame@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::operator->
  0013d	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv208[ebp], eax
  00143	8b f4		 mov	 esi, esp
  00145	6a 00		 push	 0
  00147	6a 00		 push	 0
  00149	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv208[ebp]
  0014f	50		 push	 eax
  00150	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv208[ebp]
  00156	8b 11		 mov	 edx, DWORD PTR [ecx]
  00158	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0015b	ff d0		 call	 eax
  0015d	3b f4		 cmp	 esi, esp
  0015f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN6@IOleInPlac:

; 1266 : 		}

  00164	8d 4d d8	 lea	 ecx, DWORD PTR _spInPlaceUIWindow$4[ebp]
  00167	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
  0016c	8d 4d e4	 lea	 ecx, DWORD PTR _spInPlaceFrame$5[ebp]
  0016f	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ
$LN4@IOleInPlac:

; 1267 : 		// we don't need to explicitly release the focus here since somebody
; 1268 : 		// else grabbing the focus is what is likely to cause us to get lose it
; 1269 : 		m_spInPlaceSite->OnUIDeactivate(FALSE);

  00174	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00177	83 c1 04	 add	 ecx, 4
  0017a	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator->
  0017f	89 85 74 ff ff
	ff		 mov	 DWORD PTR tv225[ebp], eax
  00185	8b f4		 mov	 esi, esp
  00187	6a 00		 push	 0
  00189	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv225[ebp]
  0018f	51		 push	 ecx
  00190	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR tv225[ebp]
  00196	8b 02		 mov	 eax, DWORD PTR [edx]
  00198	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0019b	ff d1		 call	 ecx
  0019d	3b f4		 cmp	 esi, esp
  0019f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@IOleInPlac:

; 1270 : 	}
; 1271 : 	return S_OK;

  001a4	33 c0		 xor	 eax, eax
$LN1@IOleInPlac:

; 1272 : }

  001a6	52		 push	 edx
  001a7	8b cd		 mov	 ecx, ebp
  001a9	50		 push	 eax
  001aa	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN15@IOleInPlac
  001b0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001b5	58		 pop	 eax
  001b6	5a		 pop	 edx
  001b7	5f		 pop	 edi
  001b8	5e		 pop	 esi
  001b9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001bc	33 cd		 xor	 ecx, ebp
  001be	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c3	81 c4 8c 00 00
	00		 add	 esp, 140		; 0000008cH
  001c9	3b ec		 cmp	 ebp, esp
  001cb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001d0	8b e5		 mov	 esp, ebp
  001d2	5d		 pop	 ebp
  001d3	c3		 ret	 0
$LN15@IOleInPlac:
  001d4	06 00 00 00	 DD	 6
  001d8	00 00 00 00	 DD	 $LN14@IOleInPlac
$LN14@IOleInPlac:
  001dc	f0 ff ff ff	 DD	 -16			; fffffff0H
  001e0	04 00 00 00	 DD	 4
  001e4	00 00 00 00	 DD	 $LN8@IOleInPlac
  001e8	e4 ff ff ff	 DD	 -28			; ffffffe4H
  001ec	04 00 00 00	 DD	 4
  001f0	00 00 00 00	 DD	 $LN9@IOleInPlac
  001f4	d8 ff ff ff	 DD	 -40			; ffffffd8H
  001f8	04 00 00 00	 DD	 4
  001fc	00 00 00 00	 DD	 $LN10@IOleInPlac
  00200	bc ff ff ff	 DD	 -68			; ffffffbcH
  00204	14 00 00 00	 DD	 20			; 00000014H
  00208	00 00 00 00	 DD	 $LN11@IOleInPlac
  0020c	a4 ff ff ff	 DD	 -92			; ffffffa4H
  00210	10 00 00 00	 DD	 16			; 00000010H
  00214	00 00 00 00	 DD	 $LN12@IOleInPlac
  00218	8c ff ff ff	 DD	 -116			; ffffff8cH
  0021c	10 00 00 00	 DD	 16			; 00000010H
  00220	00 00 00 00	 DD	 $LN13@IOleInPlac
$LN13@IOleInPlac:
  00224	72		 DB	 114			; 00000072H
  00225	63		 DB	 99			; 00000063H
  00226	43		 DB	 67			; 00000043H
  00227	6c		 DB	 108			; 0000006cH
  00228	69		 DB	 105			; 00000069H
  00229	70		 DB	 112			; 00000070H
  0022a	00		 DB	 0
$LN12@IOleInPlac:
  0022b	72		 DB	 114			; 00000072H
  0022c	63		 DB	 99			; 00000063H
  0022d	50		 DB	 80			; 00000050H
  0022e	6f		 DB	 111			; 0000006fH
  0022f	73		 DB	 115			; 00000073H
  00230	00		 DB	 0
$LN11@IOleInPlac:
  00231	66		 DB	 102			; 00000066H
  00232	72		 DB	 114			; 00000072H
  00233	61		 DB	 97			; 00000061H
  00234	6d		 DB	 109			; 0000006dH
  00235	65		 DB	 101			; 00000065H
  00236	49		 DB	 73			; 00000049H
  00237	6e		 DB	 110			; 0000006eH
  00238	66		 DB	 102			; 00000066H
  00239	6f		 DB	 111			; 0000006fH
  0023a	00		 DB	 0
$LN10@IOleInPlac:
  0023b	73		 DB	 115			; 00000073H
  0023c	70		 DB	 112			; 00000070H
  0023d	49		 DB	 73			; 00000049H
  0023e	6e		 DB	 110			; 0000006eH
  0023f	50		 DB	 80			; 00000050H
  00240	6c		 DB	 108			; 0000006cH
  00241	61		 DB	 97			; 00000061H
  00242	63		 DB	 99			; 00000063H
  00243	65		 DB	 101			; 00000065H
  00244	55		 DB	 85			; 00000055H
  00245	49		 DB	 73			; 00000049H
  00246	57		 DB	 87			; 00000057H
  00247	69		 DB	 105			; 00000069H
  00248	6e		 DB	 110			; 0000006eH
  00249	64		 DB	 100			; 00000064H
  0024a	6f		 DB	 111			; 0000006fH
  0024b	77		 DB	 119			; 00000077H
  0024c	00		 DB	 0
$LN9@IOleInPlac:
  0024d	73		 DB	 115			; 00000073H
  0024e	70		 DB	 112			; 00000070H
  0024f	49		 DB	 73			; 00000049H
  00250	6e		 DB	 110			; 0000006eH
  00251	50		 DB	 80			; 00000050H
  00252	6c		 DB	 108			; 0000006cH
  00253	61		 DB	 97			; 00000061H
  00254	63		 DB	 99			; 00000063H
  00255	65		 DB	 101			; 00000065H
  00256	46		 DB	 70			; 00000046H
  00257	72		 DB	 114			; 00000072H
  00258	61		 DB	 97			; 00000061H
  00259	6d		 DB	 109			; 0000006dH
  0025a	65		 DB	 101			; 00000065H
  0025b	00		 DB	 0
$LN8@IOleInPlac:
  0025c	68		 DB	 104			; 00000068H
  0025d	77		 DB	 119			; 00000077H
  0025e	6e		 DB	 110			; 0000006eH
  0025f	64		 DB	 100			; 00000064H
  00260	50		 DB	 80			; 00000050H
  00261	61		 DB	 97			; 00000061H
  00262	72		 DB	 114			; 00000072H
  00263	65		 DB	 101			; 00000065H
  00264	6e		 DB	 110			; 0000006eH
  00265	74		 DB	 116			; 00000074H
  00266	00		 DB	 0
?IOleInPlaceObject_UIDeactivate@CComControlBase@ATL@@QAEJXZ ENDP ; ATL::CComControlBase::IOleInPlaceObject_UIDeactivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?IOleInPlaceObject_InPlaceDeactivate@CComControlBase@ATL@@QAEJXZ
_TEXT	SEGMENT
tv202 = -40						; size = 4
tv153 = -36						; size = 4
tv95 = -32						; size = 4
$T1 = -28						; size = 8
___atl_condVal$2 = -20					; size = 4
_pIPO$3 = -12						; size = 4
_this$ = -4						; size = 4
?IOleInPlaceObject_InPlaceDeactivate@CComControlBase@ATL@@QAEJXZ PROC ; ATL::CComControlBase::IOleInPlaceObject_InPlaceDeactivate, COMDAT
; _this$ = ecx

; 1210 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d d8	 lea	 edi, DWORD PTR [ebp-40]
  0000c	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1211 : 	if (!m_bInPlaceActive)

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00022	c1 e9 02	 shr	 ecx, 2
  00025	83 e1 01	 and	 ecx, 1
  00028	75 07		 jne	 SHORT $LN8@IOleInPlac

; 1212 : 		return S_OK;

  0002a	33 c0		 xor	 eax, eax
  0002c	e9 90 01 00 00	 jmp	 $LN14@IOleInPlac
$LN8@IOleInPlac:

; 1213 : 
; 1214 : 	if(m_bUIActive) {

  00031	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00037	c1 e8 03	 shr	 eax, 3
  0003a	83 e0 01	 and	 eax, 1
  0003d	0f 84 c1 00 00
	00		 je	 $LN9@IOleInPlac

; 1215 : 		CComPtr<IOleInPlaceObject> pIPO;

  00043	8d 4d f4	 lea	 ecx, DWORD PTR _pIPO$3[ebp]
  00046	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceObject>::CComPtr<IOleInPlaceObject>

; 1216 : 		ControlQueryInterface(__uuidof(IOleInPlaceObject), (void**)&pIPO);

  0004b	8d 4d f4	 lea	 ecx, DWORD PTR _pIPO$3[ebp]
  0004e	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QAEPAPAUIOleInPlaceObject@@XZ ; ATL::CComPtrBase<IOleInPlaceObject>::operator&
  00053	8b f4		 mov	 esi, esp
  00055	50		 push	 eax
  00056	68 00 00 00 00	 push	 OFFSET __GUID_00000113_0000_0000_c000_000000000046
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00060	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00066	ff d0		 call	 eax
  00068	3b f4		 cmp	 esi, esp
  0006a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@IOleInPlac:

; 1217 : 		ATLENSURE(pIPO != NULL);

  0006f	6a 00		 push	 0
  00071	8d 4d f4	 lea	 ecx, DWORD PTR _pIPO$3[ebp]
  00074	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBE_NPAUIOleInPlaceObject@@@Z ; ATL::CComPtrBase<IOleInPlaceObject>::operator!=
  00079	0f b6 c8	 movzx	 ecx, al
  0007c	85 c9		 test	 ecx, ecx
  0007e	74 09		 je	 SHORT $LN15@IOleInPlac
  00080	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR tv95[ebp], 1
  00087	eb 07		 jmp	 SHORT $LN16@IOleInPlac
$LN15@IOleInPlac:
  00089	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN16@IOleInPlac:
  00090	8b 55 e0	 mov	 edx, DWORD PTR tv95[ebp]
  00093	89 55 ec	 mov	 DWORD PTR ___atl_condVal$2[ebp], edx
$LN7@IOleInPlac:
  00096	83 7d ec 00	 cmp	 DWORD PTR ___atl_condVal$2[ebp], 0
  0009a	75 26		 jne	 SHORT $LN5@IOleInPlac
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000a6	6a 00		 push	 0
  000a8	68 c1 04 00 00	 push	 1217			; 000004c1H
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000b2	6a 02		 push	 2
  000b4	e8 00 00 00 00	 call	 __CrtDbgReportW
  000b9	83 c4 18	 add	 esp, 24			; 00000018H
  000bc	83 f8 01	 cmp	 eax, 1
  000bf	75 01		 jne	 SHORT $LN5@IOleInPlac
  000c1	cc		 int	 3
$LN5@IOleInPlac:
  000c2	33 c9		 xor	 ecx, ecx
  000c4	75 d0		 jne	 SHORT $LN7@IOleInPlac
  000c6	83 7d ec 00	 cmp	 DWORD PTR ___atl_condVal$2[ebp], 0
  000ca	75 0a		 jne	 SHORT $LN2@IOleInPlac
  000cc	68 05 40 00 80	 push	 -2147467259		; 80004005H
  000d1	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@IOleInPlac:
  000d6	33 d2		 xor	 edx, edx
  000d8	75 95		 jne	 SHORT $LN4@IOleInPlac

; 1218 : 		pIPO->UIDeactivate();

  000da	8d 4d f4	 lea	 ecx, DWORD PTR _pIPO$3[ebp]
  000dd	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObject@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceObject>::operator->
  000e2	89 45 dc	 mov	 DWORD PTR tv153[ebp], eax
  000e5	8b 45 dc	 mov	 eax, DWORD PTR tv153[ebp]
  000e8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ea	8b f4		 mov	 esi, esp
  000ec	8b 55 dc	 mov	 edx, DWORD PTR tv153[ebp]
  000ef	52		 push	 edx
  000f0	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  000f3	ff d0		 call	 eax
  000f5	3b f4		 cmp	 esi, esp
  000f7	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1219 : 	}

  000fc	8d 4d f4	 lea	 ecx, DWORD PTR _pIPO$3[ebp]
  000ff	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ
$LN9@IOleInPlac:

; 1220 : 
; 1221 : 	m_bInPlaceActive = FALSE;

  00104	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00107	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  0010a	83 e2 fb	 and	 edx, -5			; fffffffbH
  0010d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00110	89 50 44	 mov	 DWORD PTR [eax+68], edx

; 1222 : 
; 1223 : 	// if we have a window, tell it to go away.
; 1224 : 	//
; 1225 : 	if (m_hWndCD)

  00113	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00116	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00119	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0011c	74 6d		 je	 SHORT $LN11@IOleInPlac

; 1226 : 	{
; 1227 : 		ATLTRACE(atlTraceControls,2,_T("Destroying Window\n"));

  0011e	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@KJDDPODI@?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAW?$AAi?$AAn?$AAd@
  00123	6a 02		 push	 2
  00125	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  0012a	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  0012f	50		 push	 eax
  00130	68 cb 04 00 00	 push	 1227			; 000004cbH
  00135	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0013a	8d 4d e4	 lea	 ecx, DWORD PTR $T1[ebp]
  0013d	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00142	50		 push	 eax
  00143	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00148	83 c4 10	 add	 esp, 16			; 00000010H

; 1228 : 		if (::IsWindow(m_hWndCD))

  0014b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0014e	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00151	8b f4		 mov	 esi, esp
  00153	8b 11		 mov	 edx, DWORD PTR [ecx]
  00155	52		 push	 edx
  00156	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  0015c	3b f4		 cmp	 esi, esp
  0015e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00163	85 c0		 test	 eax, eax
  00165	74 18		 je	 SHORT $LN12@IOleInPlac

; 1229 : 			DestroyWindow(m_hWndCD);

  00167	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0016a	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0016d	8b f4		 mov	 esi, esp
  0016f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00171	52		 push	 edx
  00172	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyWindow@4
  00178	3b f4		 cmp	 esi, esp
  0017a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN12@IOleInPlac:

; 1230 : 		m_hWndCD = NULL;

  0017f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00182	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00185	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$LN11@IOleInPlac:

; 1231 : 	}
; 1232 : 
; 1233 : 	if (m_spInPlaceSite)

  0018b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0018e	83 c1 04	 add	 ecx, 4
  00191	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAUIOleInPlaceSiteWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator IOleInPlaceSiteWindowless *
  00196	85 c0		 test	 eax, eax
  00198	74 25		 je	 SHORT $LN13@IOleInPlac

; 1234 : 		m_spInPlaceSite->OnInPlaceDeactivate();

  0019a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0019d	83 c1 04	 add	 ecx, 4
  001a0	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator->
  001a5	89 45 d8	 mov	 DWORD PTR tv202[ebp], eax
  001a8	8b 55 d8	 mov	 edx, DWORD PTR tv202[ebp]
  001ab	8b 02		 mov	 eax, DWORD PTR [edx]
  001ad	8b f4		 mov	 esi, esp
  001af	8b 4d d8	 mov	 ecx, DWORD PTR tv202[ebp]
  001b2	51		 push	 ecx
  001b3	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  001b6	ff d2		 call	 edx
  001b8	3b f4		 cmp	 esi, esp
  001ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN13@IOleInPlac:

; 1235 : 
; 1236 : 	return S_OK;

  001bf	33 c0		 xor	 eax, eax
$LN14@IOleInPlac:

; 1237 : }

  001c1	52		 push	 edx
  001c2	8b cd		 mov	 ecx, ebp
  001c4	50		 push	 eax
  001c5	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN20@IOleInPlac
  001cb	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001d0	58		 pop	 eax
  001d1	5a		 pop	 edx
  001d2	5f		 pop	 edi
  001d3	5e		 pop	 esi
  001d4	83 c4 28	 add	 esp, 40			; 00000028H
  001d7	3b ec		 cmp	 ebp, esp
  001d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001de	8b e5		 mov	 esp, ebp
  001e0	5d		 pop	 ebp
  001e1	c3		 ret	 0
  001e2	66 90		 npad	 2
$LN20@IOleInPlac:
  001e4	01 00 00 00	 DD	 1
  001e8	00 00 00 00	 DD	 $LN19@IOleInPlac
$LN19@IOleInPlac:
  001ec	f4 ff ff ff	 DD	 -12			; fffffff4H
  001f0	04 00 00 00	 DD	 4
  001f4	00 00 00 00	 DD	 $LN18@IOleInPlac
$LN18@IOleInPlac:
  001f8	70		 DB	 112			; 00000070H
  001f9	49		 DB	 73			; 00000049H
  001fa	50		 DB	 80			; 00000050H
  001fb	4f		 DB	 79			; 0000004fH
  001fc	00		 DB	 0
?IOleInPlaceObject_InPlaceDeactivate@CComControlBase@ATL@@QAEJXZ ENDP ; ATL::CComControlBase::IOleInPlaceObject_InPlaceDeactivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?IOleObject_SetExtent@CComControlBase@ATL@@QAEJKPAUtagSIZE@@@Z
_TEXT	SEGMENT
tv78 = -20						; size = 4
tv72 = -16						; size = 4
_bResized$ = -12					; size = 4
_bSizeMatchesNatural$ = -8				; size = 4
_this$ = -4						; size = 4
_dwDrawAspect$ = 8					; size = 4
_psizel$ = 12						; size = 4
?IOleObject_SetExtent@CComControlBase@ATL@@QAEJKPAUtagSIZE@@@Z PROC ; ATL::CComControlBase::IOleObject_SetExtent, COMDAT
; _this$ = ecx

; 1312 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1313 : 	if (dwDrawAspect != DVASPECT_CONTENT)

  0001d	83 7d 08 01	 cmp	 DWORD PTR _dwDrawAspect$[ebp], 1
  00021	74 0a		 je	 SHORT $LN2@IOleObject

; 1314 : 		return DV_E_DVASPECT;

  00023	b8 6b 00 04 80	 mov	 eax, -2147221397	; 8004006bH
  00028	e9 f7 00 00 00	 jmp	 $LN1@IOleObject
$LN2@IOleObject:

; 1315 : 	if (psizel == NULL)

  0002d	83 7d 0c 00	 cmp	 DWORD PTR _psizel$[ebp], 0
  00031	75 0a		 jne	 SHORT $LN3@IOleObject

; 1316 : 		return E_POINTER;

  00033	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00038	e9 e7 00 00 00	 jmp	 $LN1@IOleObject
$LN3@IOleObject:

; 1317 : 
; 1318 : 	BOOL bSizeMatchesNatural =

  0003d	6a 08		 push	 8
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	83 c0 1c	 add	 eax, 28			; 0000001cH
  00045	50		 push	 eax
  00046	8b 4d 0c	 mov	 ecx, DWORD PTR _psizel$[ebp]
  00049	51		 push	 ecx
  0004a	e8 00 00 00 00	 call	 _memcmp
  0004f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00052	85 c0		 test	 eax, eax
  00054	75 09		 jne	 SHORT $LN9@IOleObject
  00056	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv72[ebp], 1
  0005d	eb 07		 jmp	 SHORT $LN10@IOleObject
$LN9@IOleObject:
  0005f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN10@IOleObject:
  00066	8b 55 f0	 mov	 edx, DWORD PTR tv72[ebp]
  00069	89 55 f8	 mov	 DWORD PTR _bSizeMatchesNatural$[ebp], edx

; 1319 : 		memcmp(psizel, &m_sizeNatural, sizeof(SIZE)) == 0;
; 1320 : 
; 1321 : 	if (m_bAutoSize) //object can't do any other size

  0006c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00072	c1 e9 09	 shr	 ecx, 9
  00075	83 e1 01	 and	 ecx, 1
  00078	74 1e		 je	 SHORT $LN4@IOleObject

; 1322 : 		return (bSizeMatchesNatural) ? S_OK : E_FAIL;

  0007a	83 7d f8 00	 cmp	 DWORD PTR _bSizeMatchesNatural$[ebp], 0
  0007e	74 09		 je	 SHORT $LN11@IOleObject
  00080	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
  00087	eb 07		 jmp	 SHORT $LN12@IOleObject
$LN11@IOleObject:
  00089	c7 45 ec 05 40
	00 80		 mov	 DWORD PTR tv78[ebp], -2147467259 ; 80004005H
$LN12@IOleObject:
  00090	8b 45 ec	 mov	 eax, DWORD PTR tv78[ebp]
  00093	e9 8c 00 00 00	 jmp	 $LN1@IOleObject
$LN4@IOleObject:

; 1323 : 
; 1324 : 	BOOL bResized = FALSE;

  00098	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _bResized$[ebp], 0

; 1325 : 	if (memcmp(psizel, &m_sizeExtent, sizeof(SIZE)) != 0)

  0009f	6a 08		 push	 8
  000a1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a4	83 c2 24	 add	 edx, 36			; 00000024H
  000a7	52		 push	 edx
  000a8	8b 45 0c	 mov	 eax, DWORD PTR _psizel$[ebp]
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 _memcmp
  000b1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b4	85 c0		 test	 eax, eax
  000b6	74 18		 je	 SHORT $LN5@IOleObject

; 1326 : 	{
; 1327 : 		m_sizeExtent = *psizel;

  000b8	8b 4d 0c	 mov	 ecx, DWORD PTR _psizel$[ebp]
  000bb	8b 11		 mov	 edx, DWORD PTR [ecx]
  000bd	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	89 51 24	 mov	 DWORD PTR [ecx+36], edx
  000c6	89 41 28	 mov	 DWORD PTR [ecx+40], eax

; 1328 : 		bResized = TRUE;

  000c9	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _bResized$[ebp], 1
$LN5@IOleObject:

; 1329 : 	}
; 1330 : 	if (m_bResizeNatural && !bSizeMatchesNatural)

  000d0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d3	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  000d6	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  000d9	83 e0 01	 and	 eax, 1
  000dc	74 1e		 je	 SHORT $LN6@IOleObject
  000de	83 7d f8 00	 cmp	 DWORD PTR _bSizeMatchesNatural$[ebp], 0
  000e2	75 18		 jne	 SHORT $LN6@IOleObject

; 1331 : 	{
; 1332 : 		m_sizeNatural = *psizel;

  000e4	8b 4d 0c	 mov	 ecx, DWORD PTR _psizel$[ebp]
  000e7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e9	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000ec	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ef	89 51 1c	 mov	 DWORD PTR [ecx+28], edx
  000f2	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 1333 : 		bResized = TRUE;

  000f5	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _bResized$[ebp], 1
$LN6@IOleObject:

; 1334 : 	}
; 1335 : 
; 1336 : 	if (m_bRecomposeOnResize && bResized)

  000fc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ff	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00102	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  00105	83 e0 01	 and	 eax, 1
  00108	74 18		 je	 SHORT $LN7@IOleObject
  0010a	83 7d f4 00	 cmp	 DWORD PTR _bResized$[ebp], 0
  0010e	74 12		 je	 SHORT $LN7@IOleObject

; 1337 : 	{
; 1338 : 		SendOnDataChange();

  00110	6a 00		 push	 0
  00112	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00115	e8 00 00 00 00	 call	 ?SendOnDataChange@CComControlBase@ATL@@QAEJK@Z ; ATL::CComControlBase::SendOnDataChange

; 1339 : 		FireViewChange();

  0011a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011d	e8 00 00 00 00	 call	 ?FireViewChange@CComControlBase@ATL@@QAEJXZ ; ATL::CComControlBase::FireViewChange
$LN7@IOleObject:

; 1340 : 	}
; 1341 : 	return S_OK;

  00122	33 c0		 xor	 eax, eax
$LN1@IOleObject:

; 1342 : }

  00124	83 c4 14	 add	 esp, 20			; 00000014H
  00127	3b ec		 cmp	 ebp, esp
  00129	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012e	8b e5		 mov	 esp, ebp
  00130	5d		 pop	 ebp
  00131	c2 08 00	 ret	 8
?IOleObject_SetExtent@CComControlBase@ATL@@QAEJKPAUtagSIZE@@@Z ENDP ; ATL::CComControlBase::IOleObject_SetExtent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?IOleObject_Close@CComControlBase@ATL@@QAEJK@Z
_TEXT	SEGMENT
tv237 = -44						; size = 4
tv170 = -40						; size = 4
tv87 = -36						; size = 4
$T1 = -32						; size = 8
$T2 = -24						; size = 4
_hr$3 = -20						; size = 4
_pIPO$4 = -12						; size = 4
_this$ = -4						; size = 4
_dwSaveOption$ = 8					; size = 4
?IOleObject_Close@CComControlBase@ATL@@QAEJK@Z PROC	; ATL::CComControlBase::IOleObject_Close, COMDAT
; _this$ = ecx

; 1166 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0000c	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1167 : 	if (m_hWndCD)

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00022	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00025	74 36		 je	 SHORT $LN2@IOleObject

; 1168 : 	{
; 1169 : 		if (m_spClientSite)

  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 10	 add	 ecx, 16			; 00000010H
  0002d	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
  00032	85 c0		 test	 eax, eax
  00034	74 27		 je	 SHORT $LN2@IOleObject

; 1170 : 			m_spClientSite->OnShowWindow(FALSE);

  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	83 c1 10	 add	 ecx, 16			; 00000010H
  0003c	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleClientSite@@@1@XZ ; ATL::CComPtrBase<IOleClientSite>::operator->
  00041	89 45 dc	 mov	 DWORD PTR tv87[ebp], eax
  00044	8b f4		 mov	 esi, esp
  00046	6a 00		 push	 0
  00048	8b 55 dc	 mov	 edx, DWORD PTR tv87[ebp]
  0004b	52		 push	 edx
  0004c	8b 45 dc	 mov	 eax, DWORD PTR tv87[ebp]
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00054	ff d2		 call	 edx
  00056	3b f4		 cmp	 esi, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@IOleObject:

; 1171 : 	}
; 1172 : 
; 1173 : 	if (m_bInPlaceActive)

  0005d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00060	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00063	c1 e9 02	 shr	 ecx, 2
  00066	83 e1 01	 and	 ecx, 1
  00069	0f 84 e0 00 00
	00		 je	 $LN4@IOleObject

; 1174 : 	{
; 1175 : 		CComPtr<IOleInPlaceObject> pIPO;

  0006f	8d 4d f4	 lea	 ecx, DWORD PTR _pIPO$4[ebp]
  00072	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceObject>::CComPtr<IOleInPlaceObject>

; 1176 : 		ControlQueryInterface(__uuidof(IOleInPlaceObject), (void**)&pIPO);

  00077	8d 4d f4	 lea	 ecx, DWORD PTR _pIPO$4[ebp]
  0007a	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QAEPAPAUIOleInPlaceObject@@XZ ; ATL::CComPtrBase<IOleInPlaceObject>::operator&
  0007f	8b f4		 mov	 esi, esp
  00081	50		 push	 eax
  00082	68 00 00 00 00	 push	 OFFSET __GUID_00000113_0000_0000_c000_000000000046
  00087	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008a	8b 02		 mov	 eax, DWORD PTR [edx]
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00092	ff d2		 call	 edx
  00094	3b f4		 cmp	 esi, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1177 : 		ATLASSERT(pIPO != NULL);

  0009b	6a 00		 push	 0
  0009d	8d 4d f4	 lea	 ecx, DWORD PTR _pIPO$4[ebp]
  000a0	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBE_NPAUIOleInPlaceObject@@@Z ; ATL::CComPtrBase<IOleInPlaceObject>::operator!=
  000a5	0f b6 c0	 movzx	 eax, al
  000a8	85 c0		 test	 eax, eax
  000aa	75 26		 jne	 SHORT $LN12@IOleObject
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@PDPDNEIJ@?$AAp?$AAI?$AAP?$AAO?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000b6	6a 00		 push	 0
  000b8	68 99 04 00 00	 push	 1177			; 00000499H
  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000c2	6a 02		 push	 2
  000c4	e8 00 00 00 00	 call	 __CrtDbgReportW
  000c9	83 c4 18	 add	 esp, 24			; 00000018H
  000cc	83 f8 01	 cmp	 eax, 1
  000cf	75 01		 jne	 SHORT $LN12@IOleObject
  000d1	cc		 int	 3
$LN12@IOleObject:

; 1178 : 		HRESULT hr = pIPO->InPlaceDeactivate();

  000d2	8d 4d f4	 lea	 ecx, DWORD PTR _pIPO$4[ebp]
  000d5	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObject@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceObject>::operator->
  000da	89 45 d8	 mov	 DWORD PTR tv170[ebp], eax
  000dd	8b 55 d8	 mov	 edx, DWORD PTR tv170[ebp]
  000e0	8b 02		 mov	 eax, DWORD PTR [edx]
  000e2	8b f4		 mov	 esi, esp
  000e4	8b 4d d8	 mov	 ecx, DWORD PTR tv170[ebp]
  000e7	51		 push	 ecx
  000e8	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  000eb	ff d2		 call	 edx
  000ed	3b f4		 cmp	 esi, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f4	89 45 ec	 mov	 DWORD PTR _hr$3[ebp], eax

; 1179 : 		if (FAILED(hr))

  000f7	83 7d ec 00	 cmp	 DWORD PTR _hr$3[ebp], 0
  000fb	7d 16		 jge	 SHORT $LN5@IOleObject

; 1180 : 			return hr;

  000fd	8b 45 ec	 mov	 eax, DWORD PTR _hr$3[ebp]
  00100	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  00103	8d 4d f4	 lea	 ecx, DWORD PTR _pIPO$4[ebp]
  00106	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ
  0010b	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  0010e	e9 4f 01 00 00	 jmp	 $LN1@IOleObject
$LN5@IOleObject:

; 1181 : 		ATLASSERT(!m_bInPlaceActive);

  00113	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00116	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  00119	c1 ea 02	 shr	 edx, 2
  0011c	83 e2 01	 and	 edx, 1
  0011f	74 26		 je	 SHORT $LN13@IOleObject
  00121	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@OHCDIKPM@?$AA?$CB?$AAm?$AA_?$AAb?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAA?$AAc?$AAt?$AAi@
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0012b	6a 00		 push	 0
  0012d	68 9d 04 00 00	 push	 1181			; 0000049dH
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00137	6a 02		 push	 2
  00139	e8 00 00 00 00	 call	 __CrtDbgReportW
  0013e	83 c4 18	 add	 esp, 24			; 00000018H
  00141	83 f8 01	 cmp	 eax, 1
  00144	75 01		 jne	 SHORT $LN13@IOleObject
  00146	cc		 int	 3
$LN13@IOleObject:

; 1182 : 	}

  00147	8d 4d f4	 lea	 ecx, DWORD PTR _pIPO$4[ebp]
  0014a	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ
$LN4@IOleObject:

; 1183 : 	if (m_hWndCD)

  0014f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00152	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00155	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00158	74 6d		 je	 SHORT $LN6@IOleObject

; 1184 : 	{
; 1185 : 		ATLTRACE(atlTraceControls,2,_T("Destroying Window\n"));

  0015a	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@KJDDPODI@?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAW?$AAi?$AAn?$AAd@
  0015f	6a 02		 push	 2
  00161	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00166	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  0016b	50		 push	 eax
  0016c	68 a1 04 00 00	 push	 1185			; 000004a1H
  00171	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00176	8d 4d e0	 lea	 ecx, DWORD PTR $T1[ebp]
  00179	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00184	83 c4 10	 add	 esp, 16			; 00000010H

; 1186 : 		if (::IsWindow(m_hWndCD))

  00187	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018a	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0018d	8b f4		 mov	 esi, esp
  0018f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00191	52		 push	 edx
  00192	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00198	3b f4		 cmp	 esi, esp
  0019a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0019f	85 c0		 test	 eax, eax
  001a1	74 18		 je	 SHORT $LN7@IOleObject

; 1187 : 			DestroyWindow(m_hWndCD);

  001a3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001a6	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  001a9	8b f4		 mov	 esi, esp
  001ab	8b 11		 mov	 edx, DWORD PTR [ecx]
  001ad	52		 push	 edx
  001ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyWindow@4
  001b4	3b f4		 cmp	 esi, esp
  001b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN7@IOleObject:

; 1188 : 		m_hWndCD = NULL;

  001bb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001be	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  001c1	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$LN6@IOleObject:

; 1189 : 	}
; 1190 : 
; 1191 : 	// handle the save flag.
; 1192 : 	//
; 1193 : 	if ((dwSaveOption == OLECLOSE_SAVEIFDIRTY ||
; 1194 : 		dwSaveOption == OLECLOSE_PROMPTSAVE) && m_bRequiresSave)

  001c7	83 7d 08 00	 cmp	 DWORD PTR _dwSaveOption$[ebp], 0
  001cb	74 06		 je	 SHORT $LN9@IOleObject
  001cd	83 7d 08 02	 cmp	 DWORD PTR _dwSaveOption$[ebp], 2
  001d1	75 4a		 jne	 SHORT $LN8@IOleObject
$LN9@IOleObject:
  001d3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001d6	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  001d9	c1 e8 07	 shr	 eax, 7
  001dc	83 e0 01	 and	 eax, 1
  001df	74 3c		 je	 SHORT $LN8@IOleObject

; 1195 : 	{
; 1196 : 		if (m_spClientSite)

  001e1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001e4	83 c1 10	 add	 ecx, 16			; 00000010H
  001e7	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
  001ec	85 c0		 test	 eax, eax
  001ee	74 25		 je	 SHORT $LN10@IOleObject

; 1197 : 			m_spClientSite->SaveObject();

  001f0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f3	83 c1 10	 add	 ecx, 16			; 00000010H
  001f6	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleClientSite@@@1@XZ ; ATL::CComPtrBase<IOleClientSite>::operator->
  001fb	89 45 d4	 mov	 DWORD PTR tv237[ebp], eax
  001fe	8b 4d d4	 mov	 ecx, DWORD PTR tv237[ebp]
  00201	8b 11		 mov	 edx, DWORD PTR [ecx]
  00203	8b f4		 mov	 esi, esp
  00205	8b 45 d4	 mov	 eax, DWORD PTR tv237[ebp]
  00208	50		 push	 eax
  00209	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  0020c	ff d1		 call	 ecx
  0020e	3b f4		 cmp	 esi, esp
  00210	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN10@IOleObject:

; 1198 : 		SendOnSave();

  00215	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00218	e8 00 00 00 00	 call	 ?SendOnSave@CComControlBase@ATL@@QAEJXZ ; ATL::CComControlBase::SendOnSave
$LN8@IOleObject:

; 1199 : 	}
; 1200 : 
; 1201 : 	m_spInPlaceSite.Release();

  0021d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00220	83 c1 04	 add	 ecx, 4
  00223	e8 00 00 00 00	 call	 ?Release@?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::Release

; 1202 : 	m_bNegotiatedWnd = FALSE;

  00228	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0022b	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0022e	83 e0 fe	 and	 eax, -2			; fffffffeH
  00231	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00234	89 41 44	 mov	 DWORD PTR [ecx+68], eax

; 1203 : 	m_bWndLess = FALSE;

  00237	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0023a	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0023d	83 e0 fd	 and	 eax, -3			; fffffffdH
  00240	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00243	89 41 44	 mov	 DWORD PTR [ecx+68], eax

; 1204 : 	m_bInPlaceSiteEx = FALSE;

  00246	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00249	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0024c	83 e0 df	 and	 eax, -33		; ffffffdfH
  0024f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00252	89 41 44	 mov	 DWORD PTR [ecx+68], eax

; 1205 : 	m_spAdviseSink.Release();

  00255	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00258	83 c1 14	 add	 ecx, 20			; 00000014H
  0025b	e8 00 00 00 00	 call	 ?Release@?$CComPtrBase@UIAdviseSink@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IAdviseSink>::Release

; 1206 : 	return S_OK;

  00260	33 c0		 xor	 eax, eax
$LN1@IOleObject:

; 1207 : }

  00262	52		 push	 edx
  00263	8b cd		 mov	 ecx, ebp
  00265	50		 push	 eax
  00266	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN16@IOleObject
  0026c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00271	58		 pop	 eax
  00272	5a		 pop	 edx
  00273	5f		 pop	 edi
  00274	5e		 pop	 esi
  00275	83 c4 2c	 add	 esp, 44			; 0000002cH
  00278	3b ec		 cmp	 ebp, esp
  0027a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0027f	8b e5		 mov	 esp, ebp
  00281	5d		 pop	 ebp
  00282	c2 04 00	 ret	 4
  00285	0f 1f 00	 npad	 3
$LN16@IOleObject:
  00288	01 00 00 00	 DD	 1
  0028c	00 00 00 00	 DD	 $LN15@IOleObject
$LN15@IOleObject:
  00290	f4 ff ff ff	 DD	 -12			; fffffff4H
  00294	04 00 00 00	 DD	 4
  00298	00 00 00 00	 DD	 $LN14@IOleObject
$LN14@IOleObject:
  0029c	70		 DB	 112			; 00000070H
  0029d	49		 DB	 73			; 00000049H
  0029e	50		 DB	 80			; 00000050H
  0029f	4f		 DB	 79			; 0000004fH
  002a0	00		 DB	 0
?IOleObject_Close@CComControlBase@ATL@@QAEJK@Z ENDP	; ATL::CComControlBase::IOleObject_Close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?IOleObject_Advise@CComControlBase@ATL@@QAEJPAUIAdviseSink@@PAK@Z
_TEXT	SEGMENT
tv128 = -12						; size = 4
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pAdvSink$ = 8						; size = 4
_pdwConnection$ = 12					; size = 4
?IOleObject_Advise@CComControlBase@ATL@@QAEJPAUIAdviseSink@@PAK@Z PROC ; ATL::CComControlBase::IOleObject_Advise, COMDAT
; _this$ = ecx

; 1156 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1157 : 	HRESULT hr = S_OK;

  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 1158 : 	if (m_spOleAdviseHolder == NULL)

  00026	6a 00		 push	 0
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0002e	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBE_NPAUIOleAdviseHolder@@@Z ; ATL::CComPtrBase<IOleAdviseHolder>::operator==
  00033	0f b6 c0	 movzx	 eax, al
  00036	85 c0		 test	 eax, eax
  00038	74 1e		 je	 SHORT $LN2@IOleObject

; 1159 : 		hr = CreateOleAdviseHolder(&m_spOleAdviseHolder);

  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00040	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QAEPAPAUIOleAdviseHolder@@XZ ; ATL::CComPtrBase<IOleAdviseHolder>::operator&
  00045	8b f4		 mov	 esi, esp
  00047	50		 push	 eax
  00048	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateOleAdviseHolder@4
  0004e	3b f4		 cmp	 esi, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN2@IOleObject:

; 1160 : 	if (SUCCEEDED(hr))

  00058	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0005c	7c 30		 jl	 SHORT $LN3@IOleObject

; 1161 : 		hr = m_spOleAdviseHolder->Advise(pAdvSink, pdwConnection);

  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00064	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleAdviseHolder@@@1@XZ ; ATL::CComPtrBase<IOleAdviseHolder>::operator->
  00069	89 45 f4	 mov	 DWORD PTR tv128[ebp], eax
  0006c	8b f4		 mov	 esi, esp
  0006e	8b 4d 0c	 mov	 ecx, DWORD PTR _pdwConnection$[ebp]
  00071	51		 push	 ecx
  00072	8b 55 08	 mov	 edx, DWORD PTR _pAdvSink$[ebp]
  00075	52		 push	 edx
  00076	8b 45 f4	 mov	 eax, DWORD PTR tv128[ebp]
  00079	50		 push	 eax
  0007a	8b 4d f4	 mov	 ecx, DWORD PTR tv128[ebp]
  0007d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007f	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00082	ff d0		 call	 eax
  00084	3b f4		 cmp	 esi, esp
  00086	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008b	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN3@IOleObject:

; 1162 : 	return hr;

  0008e	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]

; 1163 : }

  00091	5e		 pop	 esi
  00092	83 c4 0c	 add	 esp, 12			; 0000000cH
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c2 08 00	 ret	 8
?IOleObject_Advise@CComControlBase@ATL@@QAEJPAUIAdviseSink@@PAK@Z ENDP ; ATL::CComControlBase::IOleObject_Advise
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?IOleObject_GetClientSite@CComControlBase@ATL@@QAEJPAPAUIOleClientSite@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppClientSite$ = 8					; size = 4
?IOleObject_GetClientSite@CComControlBase@ATL@@QAEJPAPAUIOleClientSite@@@Z PROC ; ATL::CComControlBase::IOleObject_GetClientSite, COMDAT
; _this$ = ecx

; 1142 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1143 : 	ATLASSERT(ppClientSite);

  0000f	83 7d 08 00	 cmp	 DWORD PTR _ppClientSite$[ebp], 0
  00013	75 26		 jne	 SHORT $LN5@IOleObject
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@CEDNNLJH@?$AAp?$AAp?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAS?$AAi?$AAt?$AAe@
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0001f	6a 00		 push	 0
  00021	68 77 04 00 00	 push	 1143			; 00000477H
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002b	6a 02		 push	 2
  0002d	e8 00 00 00 00	 call	 __CrtDbgReportW
  00032	83 c4 18	 add	 esp, 24			; 00000018H
  00035	83 f8 01	 cmp	 eax, 1
  00038	75 01		 jne	 SHORT $LN5@IOleObject
  0003a	cc		 int	 3
$LN5@IOleObject:

; 1144 : 	if (ppClientSite == NULL)

  0003b	83 7d 08 00	 cmp	 DWORD PTR _ppClientSite$[ebp], 0
  0003f	75 07		 jne	 SHORT $LN2@IOleObject

; 1145 : 		return E_POINTER;

  00041	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00046	eb 43		 jmp	 SHORT $LN1@IOleObject
$LN2@IOleObject:

; 1146 : 
; 1147 : 	*ppClientSite = m_spClientSite;

  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	83 c1 10	 add	 ecx, 16			; 00000010H
  0004e	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
  00053	8b 4d 08	 mov	 ecx, DWORD PTR _ppClientSite$[ebp]
  00056	89 01		 mov	 DWORD PTR [ecx], eax

; 1148 : 	if (m_spClientSite != NULL)

  00058	6a 00		 push	 0
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	83 c1 10	 add	 ecx, 16			; 00000010H
  00060	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NPAUIOleClientSite@@@Z ; ATL::CComPtrBase<IOleClientSite>::operator!=
  00065	0f b6 d0	 movzx	 edx, al
  00068	85 d2		 test	 edx, edx
  0006a	74 1d		 je	 SHORT $LN3@IOleObject

; 1149 : 		m_spClientSite.p->AddRef();

  0006c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00072	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00075	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00078	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007a	8b f4		 mov	 esi, esp
  0007c	50		 push	 eax
  0007d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00080	ff d2		 call	 edx
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@IOleObject:

; 1150 : 	return S_OK;

  00089	33 c0		 xor	 eax, eax
$LN1@IOleObject:

; 1151 : }

  0008b	5e		 pop	 esi
  0008c	83 c4 04	 add	 esp, 4
  0008f	3b ec		 cmp	 ebp, esp
  00091	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c2 04 00	 ret	 4
?IOleObject_GetClientSite@CComControlBase@ATL@@QAEJPAPAUIOleClientSite@@@Z ENDP ; ATL::CComControlBase::IOleObject_GetClientSite
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?IOleObject_SetClientSite@CComControlBase@ATL@@QAEJPAUIOleClientSite@@@Z
_TEXT	SEGMENT
tv147 = -8						; size = 4
_this$ = -4						; size = 4
_pClientSite$ = 8					; size = 4
?IOleObject_SetClientSite@CComControlBase@ATL@@QAEJPAUIOleClientSite@@@Z PROC ; ATL::CComControlBase::IOleObject_SetClientSite, COMDAT
; _this$ = ecx

; 1129 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1130 : 	ATLASSERT(pClientSite == NULL || m_spClientSite == NULL);

  00018	83 7d 08 00	 cmp	 DWORD PTR _pClientSite$[ebp], 0
  0001c	74 3a		 je	 SHORT $LN4@IOleObject
  0001e	6a 00		 push	 0
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	83 c1 10	 add	 ecx, 16			; 00000010H
  00026	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NPAUIOleClientSite@@@Z ; ATL::CComPtrBase<IOleClientSite>::operator==
  0002b	0f b6 c0	 movzx	 eax, al
  0002e	85 c0		 test	 eax, eax
  00030	75 26		 jne	 SHORT $LN4@IOleObject
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@MLHHLKCI@?$AAp?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAS?$AAi?$AAt?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5@
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0003c	6a 00		 push	 0
  0003e	68 6a 04 00 00	 push	 1130			; 0000046aH
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00048	6a 02		 push	 2
  0004a	e8 00 00 00 00	 call	 __CrtDbgReportW
  0004f	83 c4 18	 add	 esp, 24			; 00000018H
  00052	83 f8 01	 cmp	 eax, 1
  00055	75 01		 jne	 SHORT $LN4@IOleObject
  00057	cc		 int	 3
$LN4@IOleObject:

; 1131 : 	m_spClientSite = pClientSite;

  00058	8b 55 08	 mov	 edx, DWORD PTR _pClientSite$[ebp]
  0005b	52		 push	 edx
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	83 c1 10	 add	 ecx, 16			; 00000010H
  00062	e8 00 00 00 00	 call	 ??4?$CComPtr@UIOleClientSite@@@ATL@@QAEPAUIOleClientSite@@PAU2@@Z ; ATL::CComPtr<IOleClientSite>::operator=

; 1132 : 	m_spAmbientDispatch.Release();

  00067	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	83 c1 18	 add	 ecx, 24			; 00000018H
  0006d	e8 00 00 00 00	 call	 ?Release@?$CComPtrBase@UIDispatch@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IDispatch>::Release

; 1133 : 	if (m_spClientSite != NULL)

  00072	6a 00		 push	 0
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	83 c1 10	 add	 ecx, 16			; 00000010H
  0007a	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NPAUIOleClientSite@@@Z ; ATL::CComPtrBase<IOleClientSite>::operator!=
  0007f	0f b6 c0	 movzx	 eax, al
  00082	85 c0		 test	 eax, eax
  00084	74 30		 je	 SHORT $LN2@IOleObject

; 1134 : 	{
; 1135 : 		m_spClientSite->QueryInterface(__uuidof(IDispatch),

  00086	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	83 c1 10	 add	 ecx, 16			; 00000010H
  0008c	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleClientSite@@@1@XZ ; ATL::CComPtrBase<IOleClientSite>::operator->
  00091	89 45 f8	 mov	 DWORD PTR tv147[ebp], eax
  00094	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00097	83 c1 18	 add	 ecx, 24			; 00000018H
  0009a	8b f4		 mov	 esi, esp
  0009c	51		 push	 ecx
  0009d	68 00 00 00 00	 push	 OFFSET __GUID_00020400_0000_0000_c000_000000000046
  000a2	8b 55 f8	 mov	 edx, DWORD PTR tv147[ebp]
  000a5	52		 push	 edx
  000a6	8b 45 f8	 mov	 eax, DWORD PTR tv147[ebp]
  000a9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ab	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ad	ff d2		 call	 edx
  000af	3b f4		 cmp	 esi, esp
  000b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@IOleObject:

; 1136 : 			(void**) &m_spAmbientDispatch.p);
; 1137 : 	}
; 1138 : 	return S_OK;

  000b6	33 c0		 xor	 eax, eax

; 1139 : }

  000b8	5e		 pop	 esi
  000b9	83 c4 08	 add	 esp, 8
  000bc	3b ec		 cmp	 ebp, esp
  000be	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
?IOleObject_SetClientSite@CComControlBase@ATL@@QAEJPAUIOleClientSite@@@Z ENDP ; ATL::CComControlBase::IOleObject_SetClientSite
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?InPlaceActivate@CComControlBase@ATL@@QAEJJPBUtagRECT@@@Z
_TEXT	SEGMENT
tv662 = -260						; size = 4
tv646 = -256						; size = 4
tv624 = -252						; size = 4
tv595 = -248						; size = 4
tv566 = -244						; size = 4
tv531 = -240						; size = 4
tv489 = -236						; size = 4
tv416 = -232						; size = 4
tv398 = -228						; size = 4
tv374 = -224						; size = 4
tv356 = -220						; size = 4
tv339 = -216						; size = 4
tv318 = -212						; size = 4
tv254 = -208						; size = 4
tv219 = -204						; size = 4
tv193 = -200						; size = 4
tv157 = -196						; size = 4
$T1 = -192						; size = 4
$T2 = -188						; size = 4
$T3 = -184						; size = 4
$T4 = -180						; size = 4
$T5 = -176						; size = 4
$T6 = -172						; size = 4
$T7 = -168						; size = 4
_spActiveObject$ = -160					; size = 4
_h$8 = -152						; size = 4
_hwndParent$ = -144					; size = 4
_spInPlaceUIWindow$ = -132				; size = 4
_spInPlaceFrame$ = -120					; size = 4
_rcClip$ = -108						; size = 16
_rcPos$ = -84						; size = 16
_frameInfo$ = -60					; size = 20
_bNoRedraw$9 = -32					; size = 4
_pIPO$ = -20						; size = 4
_hr$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_iVerb$ = 8						; size = 4
___formal$ = 12						; size = 4
?InPlaceActivate@CComControlBase@ATL@@QAEJJPBUtagRECT@@@Z PROC ; ATL::CComControlBase::InPlaceActivate, COMDAT
; _this$ = ecx

; 970  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd fc fe ff
	ff		 lea	 edi, DWORD PTR [ebp-260]
  00012	b9 41 00 00 00	 mov	 ecx, 65			; 00000041H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 971  : 	HRESULT hr;
; 972  : 
; 973  : 	if (m_spClientSite == NULL)

  0002c	6a 00		 push	 0
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 10	 add	 ecx, 16			; 00000010H
  00034	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NPAUIOleClientSite@@@Z ; ATL::CComPtrBase<IOleClientSite>::operator==
  00039	0f b6 c0	 movzx	 eax, al
  0003c	85 c0		 test	 eax, eax
  0003e	74 07		 je	 SHORT $LN5@InPlaceAct

; 974  : 		return S_OK;

  00040	33 c0		 xor	 eax, eax
  00042	e9 3b 08 00 00	 jmp	 $LN1@InPlaceAct
$LN5@InPlaceAct:

; 975  : 
; 976  : 	CComPtr<IOleInPlaceObject> pIPO;

  00047	8d 4d ec	 lea	 ecx, DWORD PTR _pIPO$[ebp]
  0004a	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceObject>::CComPtr<IOleInPlaceObject>

; 977  : 	ControlQueryInterface(__uuidof(IOleInPlaceObject), (void**)&pIPO);

  0004f	8d 4d ec	 lea	 ecx, DWORD PTR _pIPO$[ebp]
  00052	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QAEPAPAUIOleInPlaceObject@@XZ ; ATL::CComPtrBase<IOleInPlaceObject>::operator&
  00057	8b f4		 mov	 esi, esp
  00059	50		 push	 eax
  0005a	68 00 00 00 00	 push	 OFFSET __GUID_00000113_0000_0000_c000_000000000046
  0005f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	8b 11		 mov	 edx, DWORD PTR [ecx]
  00064	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0006a	ff d0		 call	 eax
  0006c	3b f4		 cmp	 esi, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 978  : 	ATLASSERT(pIPO != NULL);

  00073	6a 00		 push	 0
  00075	8d 4d ec	 lea	 ecx, DWORD PTR _pIPO$[ebp]
  00078	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBE_NPAUIOleInPlaceObject@@@Z ; ATL::CComPtrBase<IOleInPlaceObject>::operator!=
  0007d	0f b6 c8	 movzx	 ecx, al
  00080	85 c9		 test	 ecx, ecx
  00082	75 26		 jne	 SHORT $LN37@InPlaceAct
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@PDPDNEIJ@?$AAp?$AAI?$AAP?$AAO?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00089	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0008e	6a 00		 push	 0
  00090	68 d2 03 00 00	 push	 978			; 000003d2H
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0009a	6a 02		 push	 2
  0009c	e8 00 00 00 00	 call	 __CrtDbgReportW
  000a1	83 c4 18	 add	 esp, 24			; 00000018H
  000a4	83 f8 01	 cmp	 eax, 1
  000a7	75 01		 jne	 SHORT $LN37@InPlaceAct
  000a9	cc		 int	 3
$LN37@InPlaceAct:

; 979  : 
; 980  : 	if (!m_bNegotiatedWnd)

  000aa	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  000b0	83 e1 01	 and	 ecx, 1
  000b3	0f 85 75 01 00
	00		 jne	 $LN4@InPlaceAct

; 981  : 	{
; 982  : 		if (!m_bWindowOnly)

  000b9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000bc	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  000bf	c1 e8 06	 shr	 eax, 6
  000c2	83 e0 01	 and	 eax, 1
  000c5	75 41		 jne	 SHORT $LN7@InPlaceAct

; 983  : 			// Try for windowless site
; 984  : 			hr = m_spClientSite->QueryInterface(__uuidof(IOleInPlaceSiteWindowless), (void **)&m_spInPlaceSite);

  000c7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ca	83 c1 10	 add	 ecx, 16			; 00000010H
  000cd	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleClientSite@@@1@XZ ; ATL::CComPtrBase<IOleClientSite>::operator->
  000d2	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv157[ebp], eax
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	83 c1 04	 add	 ecx, 4
  000de	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QAEPAPAUIOleInPlaceSiteWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator&
  000e3	8b f4		 mov	 esi, esp
  000e5	50		 push	 eax
  000e6	68 00 00 00 00	 push	 OFFSET __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
  000eb	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR tv157[ebp]
  000f1	51		 push	 ecx
  000f2	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR tv157[ebp]
  000f8	8b 02		 mov	 eax, DWORD PTR [edx]
  000fa	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fc	ff d1		 call	 ecx
  000fe	3b f4		 cmp	 esi, esp
  00100	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00105	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
$LN7@InPlaceAct:

; 985  : 
; 986  : 		if (m_spInPlaceSite)

  00108	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010b	83 c1 04	 add	 ecx, 4
  0010e	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAUIOleInPlaceSiteWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator IOleInPlaceSiteWindowless *
  00113	85 c0		 test	 eax, eax
  00115	74 78		 je	 SHORT $LN8@InPlaceAct

; 987  : 		{
; 988  : 			m_bInPlaceSiteEx = TRUE;

  00117	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0011a	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0011d	83 c8 20	 or	 eax, 32			; 00000020H
  00120	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00123	89 41 44	 mov	 DWORD PTR [ecx+68], eax

; 989  : 			// CanWindowlessActivate returns S_OK or S_FALSE
; 990  : 			if ( m_spInPlaceSite->CanWindowlessActivate() == S_OK )

  00126	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00129	83 c1 04	 add	 ecx, 4
  0012c	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator->
  00131	89 85 38 ff ff
	ff		 mov	 DWORD PTR tv193[ebp], eax
  00137	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR tv193[ebp]
  0013d	8b 02		 mov	 eax, DWORD PTR [edx]
  0013f	8b f4		 mov	 esi, esp
  00141	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR tv193[ebp]
  00147	51		 push	 ecx
  00148	8b 50 48	 mov	 edx, DWORD PTR [eax+72]
  0014b	ff d2		 call	 edx
  0014d	3b f4		 cmp	 esi, esp
  0014f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00154	85 c0		 test	 eax, eax
  00156	75 23		 jne	 SHORT $LN10@InPlaceAct

; 991  : 			{
; 992  : 				m_bWndLess = TRUE;

  00158	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0015b	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  0015e	83 c9 02	 or	 ecx, 2
  00161	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00164	89 4a 44	 mov	 DWORD PTR [edx+68], ecx

; 993  : 				m_bWasOnceWindowless = TRUE;

  00167	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0016a	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  0016d	81 c9 00 01 00
	00		 or	 ecx, 256		; 00000100H
  00173	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00176	89 4a 44	 mov	 DWORD PTR [edx+68], ecx

; 994  : 			}

  00179	eb 0f		 jmp	 SHORT $LN11@InPlaceAct
$LN10@InPlaceAct:

; 995  : 			else
; 996  : 			{
; 997  : 				m_bWndLess = FALSE;

  0017b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0017e	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00181	83 e1 fd	 and	 ecx, -3			; fffffffdH
  00184	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00187	89 4a 44	 mov	 DWORD PTR [edx+68], ecx
$LN11@InPlaceAct:

; 998  : 			}
; 999  : 		}

  0018a	e9 9f 00 00 00	 jmp	 $LN4@InPlaceAct
$LN8@InPlaceAct:

; 1000 : 		else
; 1001 : 		{
; 1002 : 			m_spClientSite->QueryInterface(__uuidof(IOleInPlaceSiteEx), (void **)&m_spInPlaceSite);

  0018f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00192	83 c1 10	 add	 ecx, 16			; 00000010H
  00195	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleClientSite@@@1@XZ ; ATL::CComPtrBase<IOleClientSite>::operator->
  0019a	89 85 34 ff ff
	ff		 mov	 DWORD PTR tv219[ebp], eax
  001a0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a3	83 c1 04	 add	 ecx, 4
  001a6	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QAEPAPAUIOleInPlaceSiteWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator&
  001ab	8b f4		 mov	 esi, esp
  001ad	50		 push	 eax
  001ae	68 00 00 00 00	 push	 OFFSET __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
  001b3	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv219[ebp]
  001b9	50		 push	 eax
  001ba	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR tv219[ebp]
  001c0	8b 11		 mov	 edx, DWORD PTR [ecx]
  001c2	8b 02		 mov	 eax, DWORD PTR [edx]
  001c4	ff d0		 call	 eax
  001c6	3b f4		 cmp	 esi, esp
  001c8	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1003 : 			if (m_spInPlaceSite)

  001cd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001d0	83 c1 04	 add	 ecx, 4
  001d3	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAUIOleInPlaceSiteWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator IOleInPlaceSiteWindowless *
  001d8	85 c0		 test	 eax, eax
  001da	74 11		 je	 SHORT $LN12@InPlaceAct

; 1004 : 				m_bInPlaceSiteEx = TRUE;

  001dc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001df	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  001e2	83 ca 20	 or	 edx, 32			; 00000020H
  001e5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001e8	89 50 44	 mov	 DWORD PTR [eax+68], edx
  001eb	eb 41		 jmp	 SHORT $LN4@InPlaceAct
$LN12@InPlaceAct:

; 1005 : 			else
; 1006 : 				hr = m_spClientSite->QueryInterface(__uuidof(IOleInPlaceSite), (void **)&m_spInPlaceSite);

  001ed	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001f0	83 c1 10	 add	 ecx, 16			; 00000010H
  001f3	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleClientSite@@@1@XZ ; ATL::CComPtrBase<IOleClientSite>::operator->
  001f8	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv254[ebp], eax
  001fe	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00201	83 c1 04	 add	 ecx, 4
  00204	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QAEPAPAUIOleInPlaceSiteWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator&
  00209	8b f4		 mov	 esi, esp
  0020b	50		 push	 eax
  0020c	68 00 00 00 00	 push	 OFFSET __GUID_00000119_0000_0000_c000_000000000046
  00211	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv254[ebp]
  00217	51		 push	 ecx
  00218	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv254[ebp]
  0021e	8b 02		 mov	 eax, DWORD PTR [edx]
  00220	8b 08		 mov	 ecx, DWORD PTR [eax]
  00222	ff d1		 call	 ecx
  00224	3b f4		 cmp	 esi, esp
  00226	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0022b	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
$LN4@InPlaceAct:

; 1007 : 		}
; 1008 : 	}
; 1009 : 
; 1010 : 	ATLASSUME(m_spInPlaceSite);

  0022e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00231	83 c1 04	 add	 ecx, 4
  00234	e8 00 00 00 00	 call	 ??7?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBE_NXZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator!
  00239	0f b6 d0	 movzx	 edx, al
  0023c	85 d2		 test	 edx, edx
  0023e	74 26		 je	 SHORT $LN2@InPlaceAct
  00240	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@IIDAJDHP@?$AAm?$AA_?$AAs?$AAp?$AAI?$AAn?$AAP?$AAl?$AAa?$AAc?$AAe?$AAS?$AAi?$AAt?$AAe@
  00245	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0024a	6a 00		 push	 0
  0024c	68 f2 03 00 00	 push	 1010			; 000003f2H
  00251	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00256	6a 02		 push	 2
  00258	e8 00 00 00 00	 call	 __CrtDbgReportW
  0025d	83 c4 18	 add	 esp, 24			; 00000018H
  00260	83 f8 01	 cmp	 eax, 1
  00263	75 01		 jne	 SHORT $LN2@InPlaceAct
  00265	cc		 int	 3
$LN2@InPlaceAct:
  00266	33 c9		 xor	 ecx, ecx
  00268	75 c4		 jne	 SHORT $LN4@InPlaceAct

; 1011 : 	if (!m_spInPlaceSite)

  0026a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0026d	83 c1 04	 add	 ecx, 4
  00270	e8 00 00 00 00	 call	 ??7?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBE_NXZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator!
  00275	0f b6 d0	 movzx	 edx, al
  00278	85 d2		 test	 edx, edx
  0027a	74 1d		 je	 SHORT $LN14@InPlaceAct

; 1012 : 		return E_FAIL;

  0027c	c7 85 58 ff ff
	ff 05 40 00 80	 mov	 DWORD PTR $T7[ebp], -2147467259 ; 80004005H
  00286	8d 4d ec	 lea	 ecx, DWORD PTR _pIPO$[ebp]
  00289	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ
  0028e	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00294	e9 e9 05 00 00	 jmp	 $LN1@InPlaceAct
$LN14@InPlaceAct:

; 1013 : 
; 1014 : 	m_bNegotiatedWnd = TRUE;

  00299	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0029c	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  0029f	83 c9 01	 or	 ecx, 1
  002a2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002a5	89 4a 44	 mov	 DWORD PTR [edx+68], ecx

; 1015 : 
; 1016 : 	if (!m_bInPlaceActive)

  002a8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002ab	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  002ae	c1 e9 02	 shr	 ecx, 2
  002b1	83 e1 01	 and	 ecx, 1
  002b4	0f 85 38 01 00
	00		 jne	 $LN15@InPlaceAct

; 1017 : 	{
; 1018 : 
; 1019 : 		BOOL bNoRedraw = FALSE;

  002ba	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _bNoRedraw$9[ebp], 0

; 1020 : 		if (m_bWndLess)

  002c1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002c4	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  002c7	d1 e8		 shr	 eax, 1
  002c9	83 e0 01	 and	 eax, 1
  002cc	74 39		 je	 SHORT $LN16@InPlaceAct

; 1021 : 			m_spInPlaceSite->OnInPlaceActivateEx(&bNoRedraw, ACTIVATE_WINDOWLESS);

  002ce	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002d1	83 c1 04	 add	 ecx, 4
  002d4	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator->
  002d9	89 85 2c ff ff
	ff		 mov	 DWORD PTR tv318[ebp], eax
  002df	8b f4		 mov	 esi, esp
  002e1	6a 01		 push	 1
  002e3	8d 4d e0	 lea	 ecx, DWORD PTR _bNoRedraw$9[ebp]
  002e6	51		 push	 ecx
  002e7	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR tv318[ebp]
  002ed	52		 push	 edx
  002ee	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR tv318[ebp]
  002f4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002f6	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  002f9	ff d2		 call	 edx
  002fb	3b f4		 cmp	 esi, esp
  002fd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00302	e9 eb 00 00 00	 jmp	 $LN15@InPlaceAct
$LN16@InPlaceAct:

; 1022 : 		else
; 1023 : 		{
; 1024 : 			if (m_bInPlaceSiteEx)

  00307	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0030a	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  0030d	c1 e9 05	 shr	 ecx, 5
  00310	83 e1 01	 and	 ecx, 1
  00313	74 39		 je	 SHORT $LN18@InPlaceAct

; 1025 : 				m_spInPlaceSite->OnInPlaceActivateEx(&bNoRedraw, 0);

  00315	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00318	83 c1 04	 add	 ecx, 4
  0031b	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator->
  00320	89 85 28 ff ff
	ff		 mov	 DWORD PTR tv339[ebp], eax
  00326	8b f4		 mov	 esi, esp
  00328	6a 00		 push	 0
  0032a	8d 55 e0	 lea	 edx, DWORD PTR _bNoRedraw$9[ebp]
  0032d	52		 push	 edx
  0032e	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR tv339[ebp]
  00334	50		 push	 eax
  00335	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR tv339[ebp]
  0033b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0033d	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00340	ff d0		 call	 eax
  00342	3b f4		 cmp	 esi, esp
  00344	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00349	e9 a4 00 00 00	 jmp	 $LN15@InPlaceAct
$LN18@InPlaceAct:

; 1026 : 			else
; 1027 : 			{
; 1028 : 				hr = m_spInPlaceSite->CanInPlaceActivate();

  0034e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00351	83 c1 04	 add	 ecx, 4
  00354	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator->
  00359	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv356[ebp], eax
  0035f	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR tv356[ebp]
  00365	8b 11		 mov	 edx, DWORD PTR [ecx]
  00367	8b f4		 mov	 esi, esp
  00369	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv356[ebp]
  0036f	50		 push	 eax
  00370	8b 4a 14	 mov	 ecx, DWORD PTR [edx+20]
  00373	ff d1		 call	 ecx
  00375	3b f4		 cmp	 esi, esp
  00377	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0037c	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 1029 : 				// CanInPlaceActivate returns S_FALSE or S_OK
; 1030 : 				if (FAILED(hr))

  0037f	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00383	7d 1c		 jge	 SHORT $LN20@InPlaceAct

; 1031 : 					return hr;

  00385	8b 55 f4	 mov	 edx, DWORD PTR _hr$[ebp]
  00388	89 95 54 ff ff
	ff		 mov	 DWORD PTR $T6[ebp], edx
  0038e	8d 4d ec	 lea	 ecx, DWORD PTR _pIPO$[ebp]
  00391	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ
  00396	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  0039c	e9 e1 04 00 00	 jmp	 $LN1@InPlaceAct
$LN20@InPlaceAct:

; 1032 : 				if ( hr != S_OK )

  003a1	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  003a5	74 1d		 je	 SHORT $LN21@InPlaceAct

; 1033 : 				{
; 1034 : 				   // CanInPlaceActivate returned S_FALSE.
; 1035 : 				   return( E_FAIL );

  003a7	c7 85 50 ff ff
	ff 05 40 00 80	 mov	 DWORD PTR $T5[ebp], -2147467259 ; 80004005H
  003b1	8d 4d ec	 lea	 ecx, DWORD PTR _pIPO$[ebp]
  003b4	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ
  003b9	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  003bf	e9 be 04 00 00	 jmp	 $LN1@InPlaceAct
$LN21@InPlaceAct:

; 1036 : 				}
; 1037 : 				m_spInPlaceSite->OnInPlaceActivate();

  003c4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003c7	83 c1 04	 add	 ecx, 4
  003ca	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator->
  003cf	89 85 20 ff ff
	ff		 mov	 DWORD PTR tv374[ebp], eax
  003d5	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR tv374[ebp]
  003db	8b 08		 mov	 ecx, DWORD PTR [eax]
  003dd	8b f4		 mov	 esi, esp
  003df	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR tv374[ebp]
  003e5	52		 push	 edx
  003e6	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  003e9	ff d0		 call	 eax
  003eb	3b f4		 cmp	 esi, esp
  003ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN15@InPlaceAct:

; 1038 : 			}
; 1039 : 		}
; 1040 : 	}
; 1041 : 
; 1042 : 	m_bInPlaceActive = TRUE;

  003f2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003f5	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  003f8	83 ca 04	 or	 edx, 4
  003fb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003fe	89 50 44	 mov	 DWORD PTR [eax+68], edx

; 1043 : 
; 1044 : 	// get location in the parent window,
; 1045 : 	// as well as some information about the parent
; 1046 : 	//
; 1047 : 	OLEINPLACEFRAMEINFO frameInfo;
; 1048 : 	RECT rcPos, rcClip;
; 1049 : 	CComPtr<IOleInPlaceFrame> spInPlaceFrame;

  00401	8d 4d 88	 lea	 ecx, DWORD PTR _spInPlaceFrame$[ebp]
  00404	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceFrame>::CComPtr<IOleInPlaceFrame>

; 1050 : 	CComPtr<IOleInPlaceUIWindow> spInPlaceUIWindow;

  00409	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _spInPlaceUIWindow$[ebp]
  0040f	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceUIWindow>::CComPtr<IOleInPlaceUIWindow>

; 1051 : 	frameInfo.cb = sizeof(OLEINPLACEFRAMEINFO);

  00414	c7 45 c4 14 00
	00 00		 mov	 DWORD PTR _frameInfo$[ebp], 20 ; 00000014H

; 1052 : 	HWND hwndParent;
; 1053 : 	if (m_spInPlaceSite->GetWindow(&hwndParent) == S_OK)

  0041b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0041e	83 c1 04	 add	 ecx, 4
  00421	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator->
  00426	89 85 1c ff ff
	ff		 mov	 DWORD PTR tv398[ebp], eax
  0042c	8b f4		 mov	 esi, esp
  0042e	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _hwndParent$[ebp]
  00434	51		 push	 ecx
  00435	8b 95 1c ff ff
	ff		 mov	 edx, DWORD PTR tv398[ebp]
  0043b	52		 push	 edx
  0043c	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv398[ebp]
  00442	8b 08		 mov	 ecx, DWORD PTR [eax]
  00444	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00447	ff d2		 call	 edx
  00449	3b f4		 cmp	 esi, esp
  0044b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00450	85 c0		 test	 eax, eax
  00452	0f 85 ba 01 00
	00		 jne	 $LN22@InPlaceAct

; 1054 : 	{
; 1055 : 		hr = m_spInPlaceSite->GetWindowContext(&spInPlaceFrame,

  00458	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0045b	83 c1 04	 add	 ecx, 4
  0045e	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator->
  00463	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv416[ebp], eax
  00469	8b f4		 mov	 esi, esp
  0046b	8d 45 c4	 lea	 eax, DWORD PTR _frameInfo$[ebp]
  0046e	50		 push	 eax
  0046f	8d 4d 94	 lea	 ecx, DWORD PTR _rcClip$[ebp]
  00472	51		 push	 ecx
  00473	8d 55 ac	 lea	 edx, DWORD PTR _rcPos$[ebp]
  00476	52		 push	 edx
  00477	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _spInPlaceUIWindow$[ebp]
  0047d	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEPAPAUIOleInPlaceUIWindow@@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator&
  00482	50		 push	 eax
  00483	8d 4d 88	 lea	 ecx, DWORD PTR _spInPlaceFrame$[ebp]
  00486	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEPAPAUIOleInPlaceFrame@@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::operator&
  0048b	50		 push	 eax
  0048c	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR tv416[ebp]
  00492	50		 push	 eax
  00493	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR tv416[ebp]
  00499	8b 11		 mov	 edx, DWORD PTR [ecx]
  0049b	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0049e	ff d0		 call	 eax
  004a0	3b f4		 cmp	 esi, esp
  004a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004a7	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 1056 : 			&spInPlaceUIWindow, &rcPos, &rcClip, &frameInfo);
; 1057 : 		if (FAILED(hr))

  004aa	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  004ae	7d 2f		 jge	 SHORT $LN23@InPlaceAct

; 1058 : 			return hr;

  004b0	8b 4d f4	 mov	 ecx, DWORD PTR _hr$[ebp]
  004b3	89 8d 4c ff ff
	ff		 mov	 DWORD PTR $T4[ebp], ecx
  004b9	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _spInPlaceUIWindow$[ebp]
  004bf	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
  004c4	8d 4d 88	 lea	 ecx, DWORD PTR _spInPlaceFrame$[ebp]
  004c7	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ
  004cc	8d 4d ec	 lea	 ecx, DWORD PTR _pIPO$[ebp]
  004cf	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ
  004d4	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  004da	e9 a3 03 00 00	 jmp	 $LN1@InPlaceAct
$LN23@InPlaceAct:

; 1059 : 
; 1060 : 		if (!m_bWndLess)

  004df	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  004e2	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  004e5	d1 e8		 shr	 eax, 1
  004e7	83 e0 01	 and	 eax, 1
  004ea	0f 85 ef 00 00
	00		 jne	 $LN24@InPlaceAct

; 1061 : 		{
; 1062 : 			if (m_hWndCD)

  004f0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004f3	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  004f6	83 3a 00	 cmp	 DWORD PTR [edx], 0
  004f9	74 1f		 je	 SHORT $LN25@InPlaceAct

; 1063 : 				ShowWindow(m_hWndCD, SW_SHOW);

  004fb	8b f4		 mov	 esi, esp
  004fd	6a 05		 push	 5
  004ff	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00502	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00505	8b 11		 mov	 edx, DWORD PTR [ecx]
  00507	52		 push	 edx
  00508	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  0050e	3b f4		 cmp	 esi, esp
  00510	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00515	e9 c5 00 00 00	 jmp	 $LN24@InPlaceAct
$LN25@InPlaceAct:

; 1064 : 			else
; 1065 : 			{
; 1066 : 				HWND h = CreateControlWindow(hwndParent, rcPos);

  0051a	8b f4		 mov	 esi, esp
  0051c	8d 45 ac	 lea	 eax, DWORD PTR _rcPos$[ebp]
  0051f	50		 push	 eax
  00520	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _hwndParent$[ebp]
  00526	51		 push	 ecx
  00527	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0052a	8b 02		 mov	 eax, DWORD PTR [edx]
  0052c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0052f	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00532	ff d2		 call	 edx
  00534	3b f4		 cmp	 esi, esp
  00536	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0053b	89 85 68 ff ff
	ff		 mov	 DWORD PTR _h$8[ebp], eax

; 1067 : 				ATLASSERT(h != NULL);	// will assert if creation failed

  00541	83 bd 68 ff ff
	ff 00		 cmp	 DWORD PTR _h$8[ebp], 0
  00548	75 26		 jne	 SHORT $LN39@InPlaceAct
  0054a	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MACBBPAK@?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0054f	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00554	6a 00		 push	 0
  00556	68 2b 04 00 00	 push	 1067			; 0000042bH
  0055b	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00560	6a 02		 push	 2
  00562	e8 00 00 00 00	 call	 __CrtDbgReportW
  00567	83 c4 18	 add	 esp, 24			; 00000018H
  0056a	83 f8 01	 cmp	 eax, 1
  0056d	75 01		 jne	 SHORT $LN39@InPlaceAct
  0056f	cc		 int	 3
$LN39@InPlaceAct:

; 1068 : 				ATLASSERT(h == m_hWndCD);

  00570	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00573	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00576	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _h$8[ebp]
  0057c	3b 02		 cmp	 eax, DWORD PTR [edx]
  0057e	74 26		 je	 SHORT $LN40@InPlaceAct
  00580	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@HHHJIMDE@?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAm?$AA_?$AAh?$AAW?$AAn?$AAd?$AAC?$AAD@
  00585	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0058a	6a 00		 push	 0
  0058c	68 2c 04 00 00	 push	 1068			; 0000042cH
  00591	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00596	6a 02		 push	 2
  00598	e8 00 00 00 00	 call	 __CrtDbgReportW
  0059d	83 c4 18	 add	 esp, 24			; 00000018H
  005a0	83 f8 01	 cmp	 eax, 1
  005a3	75 01		 jne	 SHORT $LN40@InPlaceAct
  005a5	cc		 int	 3
$LN40@InPlaceAct:

; 1069 : 				if(h == NULL)

  005a6	83 bd 68 ff ff
	ff 00		 cmp	 DWORD PTR _h$8[ebp], 0
  005ad	75 30		 jne	 SHORT $LN24@InPlaceAct

; 1070 : 					return E_FAIL;

  005af	c7 85 48 ff ff
	ff 05 40 00 80	 mov	 DWORD PTR $T3[ebp], -2147467259 ; 80004005H
  005b9	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _spInPlaceUIWindow$[ebp]
  005bf	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
  005c4	8d 4d 88	 lea	 ecx, DWORD PTR _spInPlaceFrame$[ebp]
  005c7	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ
  005cc	8d 4d ec	 lea	 ecx, DWORD PTR _pIPO$[ebp]
  005cf	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ
  005d4	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  005da	e9 a3 02 00 00	 jmp	 $LN1@InPlaceAct
$LN24@InPlaceAct:

; 1071 : 			}
; 1072 : 		}
; 1073 : 
; 1074 : 		pIPO->SetObjectRects(&rcPos, &rcClip);

  005df	8d 4d ec	 lea	 ecx, DWORD PTR _pIPO$[ebp]
  005e2	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObject@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceObject>::operator->
  005e7	89 85 14 ff ff
	ff		 mov	 DWORD PTR tv489[ebp], eax
  005ed	8b f4		 mov	 esi, esp
  005ef	8d 55 94	 lea	 edx, DWORD PTR _rcClip$[ebp]
  005f2	52		 push	 edx
  005f3	8d 45 ac	 lea	 eax, DWORD PTR _rcPos$[ebp]
  005f6	50		 push	 eax
  005f7	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR tv489[ebp]
  005fd	51		 push	 ecx
  005fe	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR tv489[ebp]
  00604	8b 02		 mov	 eax, DWORD PTR [edx]
  00606	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00609	ff d1		 call	 ecx
  0060b	3b f4		 cmp	 esi, esp
  0060d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN22@InPlaceAct:

; 1075 : 	}
; 1076 : 
; 1077 : 	CComPtr<IOleInPlaceActiveObject> spActiveObject;

  00612	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _spActiveObject$[ebp]
  00618	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceActiveObject>::CComPtr<IOleInPlaceActiveObject>

; 1078 : 	ControlQueryInterface(__uuidof(IOleInPlaceActiveObject), (void**)&spActiveObject);

  0061d	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _spActiveObject$[ebp]
  00623	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAEPAPAUIOleInPlaceActiveObject@@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator&
  00628	8b f4		 mov	 esi, esp
  0062a	50		 push	 eax
  0062b	68 00 00 00 00	 push	 OFFSET __GUID_00000117_0000_0000_c000_000000000046
  00630	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00633	8b 02		 mov	 eax, DWORD PTR [edx]
  00635	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00638	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0063b	ff d2		 call	 edx
  0063d	3b f4		 cmp	 esi, esp
  0063f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1079 : 
; 1080 : 	// Gone active by now, take care of UIACTIVATE
; 1081 : 	if (DoesVerbUIActivate(iVerb))

  00644	8b 45 08	 mov	 eax, DWORD PTR _iVerb$[ebp]
  00647	50		 push	 eax
  00648	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0064b	e8 00 00 00 00	 call	 ?DoesVerbUIActivate@CComControlBase@ATL@@QAEHJ@Z ; ATL::CComControlBase::DoesVerbUIActivate
  00650	85 c0		 test	 eax, eax
  00652	0f 84 c6 01 00
	00		 je	 $LN28@InPlaceAct

; 1082 : 	{
; 1083 : 		if (!m_bUIActive)

  00658	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0065b	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  0065e	c1 ea 03	 shr	 edx, 3
  00661	83 e2 01	 and	 edx, 1
  00664	0f 85 b4 01 00
	00		 jne	 $LN28@InPlaceAct

; 1084 : 		{
; 1085 : 			m_bUIActive = TRUE;

  0066a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0066d	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00670	83 c9 08	 or	 ecx, 8
  00673	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00676	89 4a 44	 mov	 DWORD PTR [edx+68], ecx

; 1086 : 			hr = m_spInPlaceSite->OnUIActivate();

  00679	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0067c	83 c1 04	 add	 ecx, 4
  0067f	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator->
  00684	89 85 10 ff ff
	ff		 mov	 DWORD PTR tv531[ebp], eax
  0068a	8b 85 10 ff ff
	ff		 mov	 eax, DWORD PTR tv531[ebp]
  00690	8b 08		 mov	 ecx, DWORD PTR [eax]
  00692	8b f4		 mov	 esi, esp
  00694	8b 95 10 ff ff
	ff		 mov	 edx, DWORD PTR tv531[ebp]
  0069a	52		 push	 edx
  0069b	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  0069e	ff d0		 call	 eax
  006a0	3b f4		 cmp	 esi, esp
  006a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006a7	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 1087 : 			if (FAILED(hr))

  006aa	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  006ae	7d 49		 jge	 SHORT $LN30@InPlaceAct

; 1088 : 			{
; 1089 : 				m_bUIActive = FALSE;

  006b0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006b3	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  006b6	83 e2 f7	 and	 edx, -9			; fffffff7H
  006b9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006bc	89 50 44	 mov	 DWORD PTR [eax+68], edx

; 1090 : 				return hr;

  006bf	8b 4d f4	 mov	 ecx, DWORD PTR _hr$[ebp]
  006c2	89 8d 44 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  006c8	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _spActiveObject$[ebp]
  006ce	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
  006d3	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _spInPlaceUIWindow$[ebp]
  006d9	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
  006de	8d 4d 88	 lea	 ecx, DWORD PTR _spInPlaceFrame$[ebp]
  006e1	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ
  006e6	8d 4d ec	 lea	 ecx, DWORD PTR _pIPO$[ebp]
  006e9	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ
  006ee	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  006f4	e9 89 01 00 00	 jmp	 $LN1@InPlaceAct
$LN30@InPlaceAct:

; 1091 : 			}
; 1092 : 
; 1093 : 			SetControlFocus(TRUE);

  006f9	6a 01		 push	 1
  006fb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006fe	e8 00 00 00 00	 call	 ?SetControlFocus@CComControlBase@ATL@@QAEHH@Z ; ATL::CComControlBase::SetControlFocus

; 1094 : 			// set ourselves up in the host.
; 1095 : 			//
; 1096 : 			if (spActiveObject)

  00703	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _spActiveObject$[ebp]
  00709	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAUIOleInPlaceActiveObject@@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator IOleInPlaceActiveObject *
  0070e	85 c0		 test	 eax, eax
  00710	0f 84 90 00 00
	00		 je	 $LN31@InPlaceAct

; 1097 : 			{
; 1098 : 				if (spInPlaceFrame)

  00716	8d 4d 88	 lea	 ecx, DWORD PTR _spInPlaceFrame$[ebp]
  00719	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAUIOleInPlaceFrame@@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::operator IOleInPlaceFrame *
  0071e	85 c0		 test	 eax, eax
  00720	74 39		 je	 SHORT $LN32@InPlaceAct

; 1099 : 					spInPlaceFrame->SetActiveObject(spActiveObject, NULL);

  00722	8d 4d 88	 lea	 ecx, DWORD PTR _spInPlaceFrame$[ebp]
  00725	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceFrame@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::operator->
  0072a	89 85 0c ff ff
	ff		 mov	 DWORD PTR tv566[ebp], eax
  00730	8b f4		 mov	 esi, esp
  00732	6a 00		 push	 0
  00734	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _spActiveObject$[ebp]
  0073a	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAUIOleInPlaceActiveObject@@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator IOleInPlaceActiveObject *
  0073f	50		 push	 eax
  00740	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR tv566[ebp]
  00746	52		 push	 edx
  00747	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR tv566[ebp]
  0074d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0074f	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00752	ff d2		 call	 edx
  00754	3b f4		 cmp	 esi, esp
  00756	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN32@InPlaceAct:

; 1100 : 				if (spInPlaceUIWindow)

  0075b	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _spInPlaceUIWindow$[ebp]
  00761	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAUIOleInPlaceUIWindow@@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator IOleInPlaceUIWindow *
  00766	85 c0		 test	 eax, eax
  00768	74 3c		 je	 SHORT $LN31@InPlaceAct

; 1101 : 					spInPlaceUIWindow->SetActiveObject(spActiveObject, NULL);

  0076a	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _spInPlaceUIWindow$[ebp]
  00770	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceUIWindow@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator->
  00775	89 85 08 ff ff
	ff		 mov	 DWORD PTR tv595[ebp], eax
  0077b	8b f4		 mov	 esi, esp
  0077d	6a 00		 push	 0
  0077f	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _spActiveObject$[ebp]
  00785	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAUIOleInPlaceActiveObject@@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator IOleInPlaceActiveObject *
  0078a	50		 push	 eax
  0078b	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR tv595[ebp]
  00791	50		 push	 eax
  00792	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR tv595[ebp]
  00798	8b 11		 mov	 edx, DWORD PTR [ecx]
  0079a	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0079d	ff d0		 call	 eax
  0079f	3b f4		 cmp	 esi, esp
  007a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN31@InPlaceAct:

; 1102 : 			}
; 1103 : 
; 1104 : 			if (spInPlaceFrame)

  007a6	8d 4d 88	 lea	 ecx, DWORD PTR _spInPlaceFrame$[ebp]
  007a9	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAUIOleInPlaceFrame@@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::operator IOleInPlaceFrame *
  007ae	85 c0		 test	 eax, eax
  007b0	74 2d		 je	 SHORT $LN34@InPlaceAct

; 1105 : 				spInPlaceFrame->SetBorderSpace(NULL);

  007b2	8d 4d 88	 lea	 ecx, DWORD PTR _spInPlaceFrame$[ebp]
  007b5	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceFrame@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::operator->
  007ba	89 85 04 ff ff
	ff		 mov	 DWORD PTR tv624[ebp], eax
  007c0	8b f4		 mov	 esi, esp
  007c2	6a 00		 push	 0
  007c4	8b 8d 04 ff ff
	ff		 mov	 ecx, DWORD PTR tv624[ebp]
  007ca	51		 push	 ecx
  007cb	8b 95 04 ff ff
	ff		 mov	 edx, DWORD PTR tv624[ebp]
  007d1	8b 02		 mov	 eax, DWORD PTR [edx]
  007d3	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  007d6	ff d1		 call	 ecx
  007d8	3b f4		 cmp	 esi, esp
  007da	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN34@InPlaceAct:

; 1106 : 			if (spInPlaceUIWindow)

  007df	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _spInPlaceUIWindow$[ebp]
  007e5	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAUIOleInPlaceUIWindow@@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator IOleInPlaceUIWindow *
  007ea	85 c0		 test	 eax, eax
  007ec	74 30		 je	 SHORT $LN28@InPlaceAct

; 1107 : 				spInPlaceUIWindow->SetBorderSpace(NULL);

  007ee	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _spInPlaceUIWindow$[ebp]
  007f4	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceUIWindow@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator->
  007f9	89 85 00 ff ff
	ff		 mov	 DWORD PTR tv646[ebp], eax
  007ff	8b f4		 mov	 esi, esp
  00801	6a 00		 push	 0
  00803	8b 95 00 ff ff
	ff		 mov	 edx, DWORD PTR tv646[ebp]
  00809	52		 push	 edx
  0080a	8b 85 00 ff ff
	ff		 mov	 eax, DWORD PTR tv646[ebp]
  00810	8b 08		 mov	 ecx, DWORD PTR [eax]
  00812	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00815	ff d2		 call	 edx
  00817	3b f4		 cmp	 esi, esp
  00819	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN28@InPlaceAct:

; 1108 : 		}
; 1109 : 	}
; 1110 : 
; 1111 : 	m_spClientSite->ShowObject();

  0081e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00821	83 c1 10	 add	 ecx, 16			; 00000010H
  00824	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleClientSite@@@1@XZ ; ATL::CComPtrBase<IOleClientSite>::operator->
  00829	89 85 fc fe ff
	ff		 mov	 DWORD PTR tv662[ebp], eax
  0082f	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR tv662[ebp]
  00835	8b 08		 mov	 ecx, DWORD PTR [eax]
  00837	8b f4		 mov	 esi, esp
  00839	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR tv662[ebp]
  0083f	52		 push	 edx
  00840	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00843	ff d0		 call	 eax
  00845	3b f4		 cmp	 esi, esp
  00847	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1112 : 
; 1113 : 	return S_OK;

  0084c	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T1[ebp], 0
  00856	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _spActiveObject$[ebp]
  0085c	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
  00861	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _spInPlaceUIWindow$[ebp]
  00867	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
  0086c	8d 4d 88	 lea	 ecx, DWORD PTR _spInPlaceFrame$[ebp]
  0086f	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ
  00874	8d 4d ec	 lea	 ecx, DWORD PTR _pIPO$[ebp]
  00877	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleInPlaceObject@@@ATL@@QAE@XZ
  0087c	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
$LN1@InPlaceAct:

; 1114 : }

  00882	52		 push	 edx
  00883	8b cd		 mov	 ecx, ebp
  00885	50		 push	 eax
  00886	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN51@InPlaceAct
  0088c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00891	58		 pop	 eax
  00892	5a		 pop	 edx
  00893	5f		 pop	 edi
  00894	5e		 pop	 esi
  00895	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00898	33 cd		 xor	 ecx, ebp
  0089a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0089f	81 c4 04 01 00
	00		 add	 esp, 260		; 00000104H
  008a5	3b ec		 cmp	 ebp, esp
  008a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008ac	8b e5		 mov	 esp, ebp
  008ae	5d		 pop	 ebp
  008af	c2 08 00	 ret	 8
  008b2	66 90		 npad	 2
$LN51@InPlaceAct:
  008b4	09 00 00 00	 DD	 9
  008b8	00 00 00 00	 DD	 $LN50@InPlaceAct
$LN50@InPlaceAct:
  008bc	ec ff ff ff	 DD	 -20			; ffffffecH
  008c0	04 00 00 00	 DD	 4
  008c4	00 00 00 00	 DD	 $LN41@InPlaceAct
  008c8	e0 ff ff ff	 DD	 -32			; ffffffe0H
  008cc	04 00 00 00	 DD	 4
  008d0	00 00 00 00	 DD	 $LN42@InPlaceAct
  008d4	c4 ff ff ff	 DD	 -60			; ffffffc4H
  008d8	14 00 00 00	 DD	 20			; 00000014H
  008dc	00 00 00 00	 DD	 $LN43@InPlaceAct
  008e0	ac ff ff ff	 DD	 -84			; ffffffacH
  008e4	10 00 00 00	 DD	 16			; 00000010H
  008e8	00 00 00 00	 DD	 $LN44@InPlaceAct
  008ec	94 ff ff ff	 DD	 -108			; ffffff94H
  008f0	10 00 00 00	 DD	 16			; 00000010H
  008f4	00 00 00 00	 DD	 $LN45@InPlaceAct
  008f8	88 ff ff ff	 DD	 -120			; ffffff88H
  008fc	04 00 00 00	 DD	 4
  00900	00 00 00 00	 DD	 $LN46@InPlaceAct
  00904	7c ff ff ff	 DD	 -132			; ffffff7cH
  00908	04 00 00 00	 DD	 4
  0090c	00 00 00 00	 DD	 $LN47@InPlaceAct
  00910	70 ff ff ff	 DD	 -144			; ffffff70H
  00914	04 00 00 00	 DD	 4
  00918	00 00 00 00	 DD	 $LN48@InPlaceAct
  0091c	60 ff ff ff	 DD	 -160			; ffffff60H
  00920	04 00 00 00	 DD	 4
  00924	00 00 00 00	 DD	 $LN49@InPlaceAct
$LN49@InPlaceAct:
  00928	73		 DB	 115			; 00000073H
  00929	70		 DB	 112			; 00000070H
  0092a	41		 DB	 65			; 00000041H
  0092b	63		 DB	 99			; 00000063H
  0092c	74		 DB	 116			; 00000074H
  0092d	69		 DB	 105			; 00000069H
  0092e	76		 DB	 118			; 00000076H
  0092f	65		 DB	 101			; 00000065H
  00930	4f		 DB	 79			; 0000004fH
  00931	62		 DB	 98			; 00000062H
  00932	6a		 DB	 106			; 0000006aH
  00933	65		 DB	 101			; 00000065H
  00934	63		 DB	 99			; 00000063H
  00935	74		 DB	 116			; 00000074H
  00936	00		 DB	 0
$LN48@InPlaceAct:
  00937	68		 DB	 104			; 00000068H
  00938	77		 DB	 119			; 00000077H
  00939	6e		 DB	 110			; 0000006eH
  0093a	64		 DB	 100			; 00000064H
  0093b	50		 DB	 80			; 00000050H
  0093c	61		 DB	 97			; 00000061H
  0093d	72		 DB	 114			; 00000072H
  0093e	65		 DB	 101			; 00000065H
  0093f	6e		 DB	 110			; 0000006eH
  00940	74		 DB	 116			; 00000074H
  00941	00		 DB	 0
$LN47@InPlaceAct:
  00942	73		 DB	 115			; 00000073H
  00943	70		 DB	 112			; 00000070H
  00944	49		 DB	 73			; 00000049H
  00945	6e		 DB	 110			; 0000006eH
  00946	50		 DB	 80			; 00000050H
  00947	6c		 DB	 108			; 0000006cH
  00948	61		 DB	 97			; 00000061H
  00949	63		 DB	 99			; 00000063H
  0094a	65		 DB	 101			; 00000065H
  0094b	55		 DB	 85			; 00000055H
  0094c	49		 DB	 73			; 00000049H
  0094d	57		 DB	 87			; 00000057H
  0094e	69		 DB	 105			; 00000069H
  0094f	6e		 DB	 110			; 0000006eH
  00950	64		 DB	 100			; 00000064H
  00951	6f		 DB	 111			; 0000006fH
  00952	77		 DB	 119			; 00000077H
  00953	00		 DB	 0
$LN46@InPlaceAct:
  00954	73		 DB	 115			; 00000073H
  00955	70		 DB	 112			; 00000070H
  00956	49		 DB	 73			; 00000049H
  00957	6e		 DB	 110			; 0000006eH
  00958	50		 DB	 80			; 00000050H
  00959	6c		 DB	 108			; 0000006cH
  0095a	61		 DB	 97			; 00000061H
  0095b	63		 DB	 99			; 00000063H
  0095c	65		 DB	 101			; 00000065H
  0095d	46		 DB	 70			; 00000046H
  0095e	72		 DB	 114			; 00000072H
  0095f	61		 DB	 97			; 00000061H
  00960	6d		 DB	 109			; 0000006dH
  00961	65		 DB	 101			; 00000065H
  00962	00		 DB	 0
$LN45@InPlaceAct:
  00963	72		 DB	 114			; 00000072H
  00964	63		 DB	 99			; 00000063H
  00965	43		 DB	 67			; 00000043H
  00966	6c		 DB	 108			; 0000006cH
  00967	69		 DB	 105			; 00000069H
  00968	70		 DB	 112			; 00000070H
  00969	00		 DB	 0
$LN44@InPlaceAct:
  0096a	72		 DB	 114			; 00000072H
  0096b	63		 DB	 99			; 00000063H
  0096c	50		 DB	 80			; 00000050H
  0096d	6f		 DB	 111			; 0000006fH
  0096e	73		 DB	 115			; 00000073H
  0096f	00		 DB	 0
$LN43@InPlaceAct:
  00970	66		 DB	 102			; 00000066H
  00971	72		 DB	 114			; 00000072H
  00972	61		 DB	 97			; 00000061H
  00973	6d		 DB	 109			; 0000006dH
  00974	65		 DB	 101			; 00000065H
  00975	49		 DB	 73			; 00000049H
  00976	6e		 DB	 110			; 0000006eH
  00977	66		 DB	 102			; 00000066H
  00978	6f		 DB	 111			; 0000006fH
  00979	00		 DB	 0
$LN42@InPlaceAct:
  0097a	62		 DB	 98			; 00000062H
  0097b	4e		 DB	 78			; 0000004eH
  0097c	6f		 DB	 111			; 0000006fH
  0097d	52		 DB	 82			; 00000052H
  0097e	65		 DB	 101			; 00000065H
  0097f	64		 DB	 100			; 00000064H
  00980	72		 DB	 114			; 00000072H
  00981	61		 DB	 97			; 00000061H
  00982	77		 DB	 119			; 00000077H
  00983	00		 DB	 0
$LN41@InPlaceAct:
  00984	70		 DB	 112			; 00000070H
  00985	49		 DB	 73			; 00000049H
  00986	50		 DB	 80			; 00000050H
  00987	4f		 DB	 79			; 0000004fH
  00988	00		 DB	 0
?InPlaceActivate@CComControlBase@ATL@@QAEJJPBUtagRECT@@@Z ENDP ; ATL::CComControlBase::InPlaceActivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?DoVerbProperties@CComControlBase@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z
_TEXT	SEGMENT
tv230 = -116						; size = 4
tv198 = -112						; size = 4
tv135 = -108						; size = 4
$T1 = -104						; size = 4
$T2 = -100						; size = 4
_lcid$3 = -92						; size = 4
_szTitle$4 = -80					; size = 4
_pages$ = -68						; size = 8
_pUnk$ = -52						; size = 4
_spSite$ = -40						; size = 4
_spObj$ = -28						; size = 4
_spPages$ = -16						; size = 4
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
_hwndParent$ = 12					; size = 4
?DoVerbProperties@CComControlBase@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z PROC ; ATL::CComControlBase::DoVerbProperties, COMDAT
; _this$ = ecx

; 912  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d 8c	 lea	 edi, DWORD PTR [ebp-116]
  0000c	b9 1d 00 00 00	 mov	 ecx, 29			; 0000001dH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 913  : 	HRESULT hr = S_OK;

  0001c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 914  : 	CComQIPtr <ISpecifyPropertyPages, &__uuidof(ISpecifyPropertyPages)> spPages;

  00023	8d 4d f0	 lea	 ecx, DWORD PTR _spPages$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$CComQIPtr@UISpecifyPropertyPages@@$1?_GUID_b196b28b_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ ; ATL::CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>::CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>

; 915  : 	CComQIPtr <IOleObject, &__uuidof(IOleObject)> spObj;

  0002b	8d 4d e4	 lea	 ecx, DWORD PTR _spObj$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$CComQIPtr@UIOleObject@@$1?_GUID_00000112_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ ; ATL::CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>::CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>

; 916  : 	CComQIPtr <IOleControlSite, &__uuidof(IOleControlSite)> spSite(m_spClientSite);

  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	83 c1 10	 add	 ecx, 16			; 00000010H
  00039	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
  0003e	50		 push	 eax
  0003f	8d 4d d8	 lea	 ecx, DWORD PTR _spSite$[ebp]
  00042	e8 00 00 00 00	 call	 ??0?$CComQIPtr@UIOleControlSite@@$1?_GUID_b196b289_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>::CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>

; 917  : 
; 918  : 	if (spSite)

  00047	8d 4d d8	 lea	 ecx, DWORD PTR _spSite$[ebp]
  0004a	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleControlSite@@@ATL@@QBEPAUIOleControlSite@@XZ ; ATL::CComPtrBase<IOleControlSite>::operator IOleControlSite *
  0004f	85 c0		 test	 eax, eax
  00051	74 51		 je	 SHORT $LN2@DoVerbProp

; 919  : 	{
; 920  : 		hr = spSite->ShowPropertyFrame();

  00053	8d 4d d8	 lea	 ecx, DWORD PTR _spSite$[ebp]
  00056	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleControlSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleControlSite@@@1@XZ ; ATL::CComPtrBase<IOleControlSite>::operator->
  0005b	89 45 94	 mov	 DWORD PTR tv135[ebp], eax
  0005e	8b 45 94	 mov	 eax, DWORD PTR tv135[ebp]
  00061	8b 08		 mov	 ecx, DWORD PTR [eax]
  00063	8b f4		 mov	 esi, esp
  00065	8b 55 94	 mov	 edx, DWORD PTR tv135[ebp]
  00068	52		 push	 edx
  00069	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  0006c	ff d0		 call	 eax
  0006e	3b f4		 cmp	 esi, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 921  : 		if (SUCCEEDED(hr))

  00078	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0007c	7c 26		 jl	 SHORT $LN2@DoVerbProp

; 922  : 			return hr;

  0007e	8b 4d f8	 mov	 ecx, DWORD PTR _hr$[ebp]
  00081	89 4d 9c	 mov	 DWORD PTR $T2[ebp], ecx
  00084	8d 4d d8	 lea	 ecx, DWORD PTR _spSite$[ebp]
  00087	e8 00 00 00 00	 call	 ??1?$CComQIPtr@UIOleControlSite@@$1?_GUID_b196b289_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ
  0008c	8d 4d e4	 lea	 ecx, DWORD PTR _spObj$[ebp]
  0008f	e8 00 00 00 00	 call	 ??1?$CComQIPtr@UIOleObject@@$1?_GUID_00000112_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
  00094	8d 4d f0	 lea	 ecx, DWORD PTR _spPages$[ebp]
  00097	e8 00 00 00 00	 call	 ??1?$CComQIPtr@UISpecifyPropertyPages@@$1?_GUID_b196b28b_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ
  0009c	8b 45 9c	 mov	 eax, DWORD PTR $T2[ebp]
  0009f	e9 c0 01 00 00	 jmp	 $LN1@DoVerbProp
$LN2@DoVerbProp:

; 923  : 	}
; 924  : 
; 925  : 	CComPtr<IUnknown> pUnk;

  000a4	8d 4d cc	 lea	 ecx, DWORD PTR _pUnk$[ebp]
  000a7	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 926  : 	ControlQueryInterface(__uuidof(IUnknown), (void**)&pUnk);

  000ac	8d 4d cc	 lea	 ecx, DWORD PTR _pUnk$[ebp]
  000af	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
  000b4	8b f4		 mov	 esi, esp
  000b6	50		 push	 eax
  000b7	68 00 00 00 00	 push	 OFFSET __GUID_00000000_0000_0000_c000_000000000046
  000bc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bf	8b 02		 mov	 eax, DWORD PTR [edx]
  000c1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c4	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000c7	ff d2		 call	 edx
  000c9	3b f4		 cmp	 esi, esp
  000cb	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 927  : 	ATLASSERT(pUnk != NULL);

  000d0	6a 00		 push	 0
  000d2	8d 4d cc	 lea	 ecx, DWORD PTR _pUnk$[ebp]
  000d5	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z ; ATL::CComPtrBase<IUnknown>::operator!=
  000da	0f b6 c0	 movzx	 eax, al
  000dd	85 c0		 test	 eax, eax
  000df	75 26		 jne	 SHORT $LN11@DoVerbProp
  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@MEPLLFBA@?$AAp?$AAU?$AAn?$AAk?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  000e6	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000eb	6a 00		 push	 0
  000ed	68 9f 03 00 00	 push	 927			; 0000039fH
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000f7	6a 02		 push	 2
  000f9	e8 00 00 00 00	 call	 __CrtDbgReportW
  000fe	83 c4 18	 add	 esp, 24			; 00000018H
  00101	83 f8 01	 cmp	 eax, 1
  00104	75 01		 jne	 SHORT $LN11@DoVerbProp
  00106	cc		 int	 3
$LN11@DoVerbProp:

; 928  : 	CAUUID pages;
; 929  : 	spPages = pUnk;

  00107	8d 4d cc	 lea	 ecx, DWORD PTR _pUnk$[ebp]
  0010a	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
  0010f	50		 push	 eax
  00110	8d 4d f0	 lea	 ecx, DWORD PTR _spPages$[ebp]
  00113	e8 00 00 00 00	 call	 ??4?$CComQIPtr@UISpecifyPropertyPages@@$1?_GUID_b196b28b_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAEPAUISpecifyPropertyPages@@PAUIUnknown@@@Z ; ATL::CComQIPtr<ISpecifyPropertyPages,&_GUID_b196b28b_bab4_101a_b69c_00aa00341d07>::operator=

; 930  : 	if (spPages)

  00118	8d 4d f0	 lea	 ecx, DWORD PTR _spPages$[ebp]
  0011b	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@QBEPAUISpecifyPropertyPages@@XZ ; ATL::CComPtrBase<ISpecifyPropertyPages>::operator ISpecifyPropertyPages *
  00120	85 c0		 test	 eax, eax
  00122	0f 84 0c 01 00
	00		 je	 $LN4@DoVerbProp

; 931  : 	{
; 932  : 		hr = spPages->GetPages(&pages);

  00128	8d 4d f0	 lea	 ecx, DWORD PTR _spPages$[ebp]
  0012b	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UISpecifyPropertyPages@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UISpecifyPropertyPages@@@1@XZ ; ATL::CComPtrBase<ISpecifyPropertyPages>::operator->
  00130	89 45 90	 mov	 DWORD PTR tv198[ebp], eax
  00133	8b f4		 mov	 esi, esp
  00135	8d 55 bc	 lea	 edx, DWORD PTR _pages$[ebp]
  00138	52		 push	 edx
  00139	8b 45 90	 mov	 eax, DWORD PTR tv198[ebp]
  0013c	50		 push	 eax
  0013d	8b 4d 90	 mov	 ecx, DWORD PTR tv198[ebp]
  00140	8b 11		 mov	 edx, DWORD PTR [ecx]
  00142	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00145	ff d0		 call	 eax
  00147	3b f4		 cmp	 esi, esp
  00149	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014e	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 933  : 		if (SUCCEEDED(hr))

  00151	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00155	0f 8c d7 00 00
	00		 jl	 $LN6@DoVerbProp

; 934  : 		{
; 935  : 			spObj = pUnk;

  0015b	8d 4d cc	 lea	 ecx, DWORD PTR _pUnk$[ebp]
  0015e	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
  00163	50		 push	 eax
  00164	8d 4d e4	 lea	 ecx, DWORD PTR _spObj$[ebp]
  00167	e8 00 00 00 00	 call	 ??4?$CComQIPtr@UIOleObject@@$1?_GUID_00000112_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAEPAUIOleObject@@PAUIUnknown@@@Z ; ATL::CComQIPtr<IOleObject,&_GUID_00000112_0000_0000_c000_000000000046>::operator=

; 936  : 			if (spObj)

  0016c	8d 4d e4	 lea	 ecx, DWORD PTR _spObj$[ebp]
  0016f	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator IOleObject *
  00174	85 c0		 test	 eax, eax
  00176	0f 84 9c 00 00
	00		 je	 $LN7@DoVerbProp

; 937  : 			{
; 938  : 				LPOLESTR szTitle = NULL;

  0017c	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _szTitle$4[ebp], 0

; 939  : 
; 940  : 				hr = spObj->GetUserType(USERCLASSTYPE_SHORT, &szTitle);

  00183	8d 4d e4	 lea	 ecx, DWORD PTR _spObj$[ebp]
  00186	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
  0018b	89 45 8c	 mov	 DWORD PTR tv230[ebp], eax
  0018e	8b f4		 mov	 esi, esp
  00190	8d 4d b0	 lea	 ecx, DWORD PTR _szTitle$4[ebp]
  00193	51		 push	 ecx
  00194	6a 02		 push	 2
  00196	8b 55 8c	 mov	 edx, DWORD PTR tv230[ebp]
  00199	52		 push	 edx
  0019a	8b 45 8c	 mov	 eax, DWORD PTR tv230[ebp]
  0019d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0019f	8b 51 40	 mov	 edx, DWORD PTR [ecx+64]
  001a2	ff d2		 call	 edx
  001a4	3b f4		 cmp	 esi, esp
  001a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ab	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 941  : 				_Analysis_assume_(SUCCEEDED(hr) || (szTitle = NULL) == NULL);
; 942  : 
; 943  : 				LCID lcid;
; 944  : 				if (FAILED(GetAmbientLocaleID(lcid)))

  001ae	8d 45 a4	 lea	 eax, DWORD PTR _lcid$3[ebp]
  001b1	50		 push	 eax
  001b2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b5	e8 00 00 00 00	 call	 ?GetAmbientLocaleID@CComControlBase@ATL@@QAEJAAK@Z ; ATL::CComControlBase::GetAmbientLocaleID
  001ba	85 c0		 test	 eax, eax
  001bc	7d 07		 jge	 SHORT $LN9@DoVerbProp

; 945  : 					lcid = LOCALE_USER_DEFAULT;

  001be	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR _lcid$3[ebp], 1024 ; 00000400H
$LN9@DoVerbProp:

; 946  : 
; 947  : 				hr = OleCreatePropertyFrame(hwndParent, m_rcPos.top, m_rcPos.left, szTitle,

  001c5	8b f4		 mov	 esi, esp
  001c7	6a 00		 push	 0
  001c9	6a 00		 push	 0
  001cb	8b 4d a4	 mov	 ecx, DWORD PTR _lcid$3[ebp]
  001ce	51		 push	 ecx
  001cf	8b 55 c0	 mov	 edx, DWORD PTR _pages$[ebp+4]
  001d2	52		 push	 edx
  001d3	8b 45 bc	 mov	 eax, DWORD PTR _pages$[ebp]
  001d6	50		 push	 eax
  001d7	8d 4d cc	 lea	 ecx, DWORD PTR _pUnk$[ebp]
  001da	51		 push	 ecx
  001db	6a 01		 push	 1
  001dd	8b 55 b0	 mov	 edx, DWORD PTR _szTitle$4[ebp]
  001e0	52		 push	 edx
  001e1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001e4	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  001e7	51		 push	 ecx
  001e8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001eb	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  001ee	50		 push	 eax
  001ef	8b 4d 0c	 mov	 ecx, DWORD PTR _hwndParent$[ebp]
  001f2	51		 push	 ecx
  001f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OleCreatePropertyFrame@44
  001f9	3b f4		 cmp	 esi, esp
  001fb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00200	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 948  : 					1, &pUnk.p, pages.cElems, pages.pElems, lcid, 0, 0);
; 949  : 
; 950  : 				CoTaskMemFree(szTitle);

  00203	8b f4		 mov	 esi, esp
  00205	8b 55 b0	 mov	 edx, DWORD PTR _szTitle$4[ebp]
  00208	52		 push	 edx
  00209	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoTaskMemFree@4
  0020f	3b f4		 cmp	 esi, esp
  00211	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 951  : 			}

  00216	eb 07		 jmp	 SHORT $LN8@DoVerbProp
$LN7@DoVerbProp:

; 952  : 			else
; 953  : 			{
; 954  : 				hr = OLEOBJ_S_CANNOT_DOVERB_NOW;

  00218	c7 45 f8 81 01
	04 00		 mov	 DWORD PTR _hr$[ebp], 262529 ; 00040181H
$LN8@DoVerbProp:

; 955  : 			}
; 956  : 			CoTaskMemFree(pages.pElems);

  0021f	8b f4		 mov	 esi, esp
  00221	8b 45 c0	 mov	 eax, DWORD PTR _pages$[ebp+4]
  00224	50		 push	 eax
  00225	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoTaskMemFree@4
  0022b	3b f4		 cmp	 esi, esp
  0022d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN6@DoVerbProp:

; 957  : 		}
; 958  : 	}

  00232	eb 07		 jmp	 SHORT $LN5@DoVerbProp
$LN4@DoVerbProp:

; 959  : 	else
; 960  : 	{
; 961  : 		hr = OLEOBJ_S_CANNOT_DOVERB_NOW;

  00234	c7 45 f8 81 01
	04 00		 mov	 DWORD PTR _hr$[ebp], 262529 ; 00040181H
$LN5@DoVerbProp:

; 962  : 	}
; 963  : 
; 964  : 	return hr;

  0023b	8b 4d f8	 mov	 ecx, DWORD PTR _hr$[ebp]
  0023e	89 4d 98	 mov	 DWORD PTR $T1[ebp], ecx
  00241	8d 4d cc	 lea	 ecx, DWORD PTR _pUnk$[ebp]
  00244	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
  00249	8d 4d d8	 lea	 ecx, DWORD PTR _spSite$[ebp]
  0024c	e8 00 00 00 00	 call	 ??1?$CComQIPtr@UIOleControlSite@@$1?_GUID_b196b289_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ
  00251	8d 4d e4	 lea	 ecx, DWORD PTR _spObj$[ebp]
  00254	e8 00 00 00 00	 call	 ??1?$CComQIPtr@UIOleObject@@$1?_GUID_00000112_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
  00259	8d 4d f0	 lea	 ecx, DWORD PTR _spPages$[ebp]
  0025c	e8 00 00 00 00	 call	 ??1?$CComQIPtr@UISpecifyPropertyPages@@$1?_GUID_b196b28b_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ
  00261	8b 45 98	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@DoVerbProp:

; 965  : }

  00264	52		 push	 edx
  00265	8b cd		 mov	 ecx, ebp
  00267	50		 push	 eax
  00268	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN20@DoVerbProp
  0026e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00273	58		 pop	 eax
  00274	5a		 pop	 edx
  00275	5f		 pop	 edi
  00276	5e		 pop	 esi
  00277	83 c4 74	 add	 esp, 116		; 00000074H
  0027a	3b ec		 cmp	 ebp, esp
  0027c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00281	8b e5		 mov	 esp, ebp
  00283	5d		 pop	 ebp
  00284	c2 08 00	 ret	 8
  00287	90		 npad	 1
$LN20@DoVerbProp:
  00288	07 00 00 00	 DD	 7
  0028c	00 00 00 00	 DD	 $LN19@DoVerbProp
$LN19@DoVerbProp:
  00290	f0 ff ff ff	 DD	 -16			; fffffff0H
  00294	04 00 00 00	 DD	 4
  00298	00 00 00 00	 DD	 $LN12@DoVerbProp
  0029c	e4 ff ff ff	 DD	 -28			; ffffffe4H
  002a0	04 00 00 00	 DD	 4
  002a4	00 00 00 00	 DD	 $LN13@DoVerbProp
  002a8	d8 ff ff ff	 DD	 -40			; ffffffd8H
  002ac	04 00 00 00	 DD	 4
  002b0	00 00 00 00	 DD	 $LN14@DoVerbProp
  002b4	cc ff ff ff	 DD	 -52			; ffffffccH
  002b8	04 00 00 00	 DD	 4
  002bc	00 00 00 00	 DD	 $LN15@DoVerbProp
  002c0	bc ff ff ff	 DD	 -68			; ffffffbcH
  002c4	08 00 00 00	 DD	 8
  002c8	00 00 00 00	 DD	 $LN16@DoVerbProp
  002cc	b0 ff ff ff	 DD	 -80			; ffffffb0H
  002d0	04 00 00 00	 DD	 4
  002d4	00 00 00 00	 DD	 $LN17@DoVerbProp
  002d8	a4 ff ff ff	 DD	 -92			; ffffffa4H
  002dc	04 00 00 00	 DD	 4
  002e0	00 00 00 00	 DD	 $LN18@DoVerbProp
$LN18@DoVerbProp:
  002e4	6c		 DB	 108			; 0000006cH
  002e5	63		 DB	 99			; 00000063H
  002e6	69		 DB	 105			; 00000069H
  002e7	64		 DB	 100			; 00000064H
  002e8	00		 DB	 0
$LN17@DoVerbProp:
  002e9	73		 DB	 115			; 00000073H
  002ea	7a		 DB	 122			; 0000007aH
  002eb	54		 DB	 84			; 00000054H
  002ec	69		 DB	 105			; 00000069H
  002ed	74		 DB	 116			; 00000074H
  002ee	6c		 DB	 108			; 0000006cH
  002ef	65		 DB	 101			; 00000065H
  002f0	00		 DB	 0
$LN16@DoVerbProp:
  002f1	70		 DB	 112			; 00000070H
  002f2	61		 DB	 97			; 00000061H
  002f3	67		 DB	 103			; 00000067H
  002f4	65		 DB	 101			; 00000065H
  002f5	73		 DB	 115			; 00000073H
  002f6	00		 DB	 0
$LN15@DoVerbProp:
  002f7	70		 DB	 112			; 00000070H
  002f8	55		 DB	 85			; 00000055H
  002f9	6e		 DB	 110			; 0000006eH
  002fa	6b		 DB	 107			; 0000006bH
  002fb	00		 DB	 0
$LN14@DoVerbProp:
  002fc	73		 DB	 115			; 00000073H
  002fd	70		 DB	 112			; 00000070H
  002fe	53		 DB	 83			; 00000053H
  002ff	69		 DB	 105			; 00000069H
  00300	74		 DB	 116			; 00000074H
  00301	65		 DB	 101			; 00000065H
  00302	00		 DB	 0
$LN13@DoVerbProp:
  00303	73		 DB	 115			; 00000073H
  00304	70		 DB	 112			; 00000070H
  00305	4f		 DB	 79			; 0000004fH
  00306	62		 DB	 98			; 00000062H
  00307	6a		 DB	 106			; 0000006aH
  00308	00		 DB	 0
$LN12@DoVerbProp:
  00309	73		 DB	 115			; 00000073H
  0030a	70		 DB	 112			; 00000070H
  0030b	50		 DB	 80			; 00000050H
  0030c	61		 DB	 97			; 00000061H
  0030d	67		 DB	 103			; 00000067H
  0030e	65		 DB	 101			; 00000065H
  0030f	73		 DB	 115			; 00000073H
  00310	00		 DB	 0
?DoVerbProperties@CComControlBase@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ENDP ; ATL::CComControlBase::DoVerbProperties
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?IQuickActivate_QuickActivate@CComControlBase@ATL@@QAEJPAUtagQACONTAINER@@PAUtagQACONTROL@@@Z
_TEXT	SEGMENT
tv493 = -196						; size = 4
tv468 = -192						; size = 4
tv442 = -188						; size = 4
tv415 = -184						; size = 4
tv391 = -180						; size = 4
tv349 = -176						; size = 4
tv320 = -172						; size = 4
tv296 = -168						; size = 4
tv236 = -164						; size = 4
tv208 = -160						; size = 4
$T1 = -156						; size = 4
$T2 = -152						; size = 8
$T3 = -144						; size = 8
$T4 = -136						; size = 8
$T5 = -128						; size = 4
_pCP$6 = -120						; size = 4
_iidDefaultSrc$7 = -108					; size = 16
_pCP$8 = -84						; size = 4
_pCPC$ = -72						; size = 4
_pPCI$ = -60						; size = 4
_pPI$ = -48						; size = 4
_pVOEX$ = -36						; size = 4
_pOO$ = -24						; size = 4
_uCB$ = -16						; size = 4
_hRes$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pQACont$ = 8						; size = 4
_pQACtrl$ = 12						; size = 4
?IQuickActivate_QuickActivate@CComControlBase@ATL@@QAEJPAUtagQACONTAINER@@PAUtagQACONTROL@@@Z PROC ; ATL::CComControlBase::IQuickActivate_QuickActivate, COMDAT
; _this$ = ecx

; 801  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 802  : 	ATLASSERT(pQACont != NULL);

  0002c	83 7d 08 00	 cmp	 DWORD PTR _pQACont$[ebp], 0
  00030	75 26		 jne	 SHORT $LN19@IQuickActi
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@IELOKEDE@?$AAp?$AAQ?$AAA?$AAC?$AAo?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0003c	6a 00		 push	 0
  0003e	68 22 03 00 00	 push	 802			; 00000322H
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00048	6a 02		 push	 2
  0004a	e8 00 00 00 00	 call	 __CrtDbgReportW
  0004f	83 c4 18	 add	 esp, 24			; 00000018H
  00052	83 f8 01	 cmp	 eax, 1
  00055	75 01		 jne	 SHORT $LN19@IQuickActi
  00057	cc		 int	 3
$LN19@IQuickActi:

; 803  : 	ATLASSERT(pQACtrl != NULL);

  00058	83 7d 0c 00	 cmp	 DWORD PTR _pQACtrl$[ebp], 0
  0005c	75 26		 jne	 SHORT $LN20@IQuickActi
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@EDCEEEEO@?$AAp?$AAQ?$AAA?$AAC?$AAt?$AAr?$AAl?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00068	6a 00		 push	 0
  0006a	68 23 03 00 00	 push	 803			; 00000323H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00074	6a 02		 push	 2
  00076	e8 00 00 00 00	 call	 __CrtDbgReportW
  0007b	83 c4 18	 add	 esp, 24			; 00000018H
  0007e	83 f8 01	 cmp	 eax, 1
  00081	75 01		 jne	 SHORT $LN20@IQuickActi
  00083	cc		 int	 3
$LN20@IQuickActi:

; 804  : 	if (!pQACont || !pQACtrl)

  00084	83 7d 08 00	 cmp	 DWORD PTR _pQACont$[ebp], 0
  00088	74 06		 je	 SHORT $LN3@IQuickActi
  0008a	83 7d 0c 00	 cmp	 DWORD PTR _pQACtrl$[ebp], 0
  0008e	75 0a		 jne	 SHORT $LN2@IQuickActi
$LN3@IQuickActi:

; 805  : 		return E_POINTER;

  00090	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00095	e9 ed 04 00 00	 jmp	 $LN1@IQuickActi
$LN2@IQuickActi:

; 806  : 
; 807  : 	HRESULT hRes;
; 808  : 	ULONG uCB = pQACtrl->cbSize;

  0009a	8b 55 0c	 mov	 edx, DWORD PTR _pQACtrl$[ebp]
  0009d	8b 02		 mov	 eax, DWORD PTR [edx]
  0009f	89 45 f0	 mov	 DWORD PTR _uCB$[ebp], eax

; 809  : 	memset(pQACtrl, 0, uCB);

  000a2	8b 4d f0	 mov	 ecx, DWORD PTR _uCB$[ebp]
  000a5	51		 push	 ecx
  000a6	6a 00		 push	 0
  000a8	8b 55 0c	 mov	 edx, DWORD PTR _pQACtrl$[ebp]
  000ab	52		 push	 edx
  000ac	e8 00 00 00 00	 call	 _memset
  000b1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 810  : 	pQACtrl->cbSize = uCB;

  000b4	8b 45 0c	 mov	 eax, DWORD PTR _pQACtrl$[ebp]
  000b7	8b 4d f0	 mov	 ecx, DWORD PTR _uCB$[ebp]
  000ba	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 
; 812  : 	// get all interfaces we are going to need
; 813  : 	CComPtr<IOleObject> pOO;

  000bc	8d 4d e8	 lea	 ecx, DWORD PTR _pOO$[ebp]
  000bf	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleObject@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleObject>::CComPtr<IOleObject>

; 814  : 	ControlQueryInterface(__uuidof(IOleObject), (void**)&pOO);

  000c4	8d 4d e8	 lea	 ecx, DWORD PTR _pOO$[ebp]
  000c7	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIOleObject@@@ATL@@QAEPAPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator&
  000cc	8b f4		 mov	 esi, esp
  000ce	50		 push	 eax
  000cf	68 00 00 00 00	 push	 OFFSET __GUID_00000112_0000_0000_c000_000000000046
  000d4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000d7	8b 02		 mov	 eax, DWORD PTR [edx]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000df	ff d2		 call	 edx
  000e1	3b f4		 cmp	 esi, esp
  000e3	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 815  : 	CComPtr<IViewObjectEx> pVOEX;

  000e8	8d 4d dc	 lea	 ecx, DWORD PTR _pVOEX$[ebp]
  000eb	e8 00 00 00 00	 call	 ??0?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ ; ATL::CComPtr<IViewObjectEx>::CComPtr<IViewObjectEx>

; 816  : 	ControlQueryInterface(__uuidof(IViewObjectEx), (void**)&pVOEX);

  000f0	8d 4d dc	 lea	 ecx, DWORD PTR _pVOEX$[ebp]
  000f3	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEPAPAUIViewObjectEx@@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator&
  000f8	8b f4		 mov	 esi, esp
  000fa	50		 push	 eax
  000fb	68 00 00 00 00	 push	 OFFSET __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
  00100	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00108	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0010b	ff d0		 call	 eax
  0010d	3b f4		 cmp	 esi, esp
  0010f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 817  : 	CComPtr<IPointerInactive> pPI;

  00114	8d 4d d0	 lea	 ecx, DWORD PTR _pPI$[ebp]
  00117	e8 00 00 00 00	 call	 ??0?$CComPtr@UIPointerInactive@@@ATL@@QAE@XZ ; ATL::CComPtr<IPointerInactive>::CComPtr<IPointerInactive>

; 818  : 	ControlQueryInterface(__uuidof(IPointerInactive), (void**)&pPI);

  0011c	8d 4d d0	 lea	 ecx, DWORD PTR _pPI$[ebp]
  0011f	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIPointerInactive@@@ATL@@QAEPAPAUIPointerInactive@@XZ ; ATL::CComPtrBase<IPointerInactive>::operator&
  00124	8b f4		 mov	 esi, esp
  00126	50		 push	 eax
  00127	68 00 00 00 00	 push	 OFFSET __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
  0012c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00131	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00134	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00137	ff d0		 call	 eax
  00139	3b f4		 cmp	 esi, esp
  0013b	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 819  : 	CComPtr<IProvideClassInfo2> pPCI;

  00140	8d 4d c4	 lea	 ecx, DWORD PTR _pPCI$[ebp]
  00143	e8 00 00 00 00	 call	 ??0?$CComPtr@UIProvideClassInfo2@@@ATL@@QAE@XZ ; ATL::CComPtr<IProvideClassInfo2>::CComPtr<IProvideClassInfo2>

; 820  : 	ControlQueryInterface(__uuidof(IProvideClassInfo2), (void**)&pPCI);

  00148	8d 4d c4	 lea	 ecx, DWORD PTR _pPCI$[ebp]
  0014b	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QAEPAPAUIProvideClassInfo2@@XZ ; ATL::CComPtrBase<IProvideClassInfo2>::operator&
  00150	8b f4		 mov	 esi, esp
  00152	50		 push	 eax
  00153	68 00 00 00 00	 push	 OFFSET __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
  00158	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0015b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0015d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00163	ff d0		 call	 eax
  00165	3b f4		 cmp	 esi, esp
  00167	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 821  : 
; 822  : 	if (pOO == NULL || pVOEX == NULL)

  0016c	6a 00		 push	 0
  0016e	8d 4d e8	 lea	 ecx, DWORD PTR _pOO$[ebp]
  00171	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIOleObject@@@ATL@@QBE_NPAUIOleObject@@@Z ; ATL::CComPtrBase<IOleObject>::operator==
  00176	0f b6 c8	 movzx	 ecx, al
  00179	85 c9		 test	 ecx, ecx
  0017b	75 11		 jne	 SHORT $LN5@IQuickActi
  0017d	6a 00		 push	 0
  0017f	8d 4d dc	 lea	 ecx, DWORD PTR _pVOEX$[ebp]
  00182	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z ; ATL::CComPtrBase<IViewObjectEx>::operator==
  00187	0f b6 d0	 movzx	 edx, al
  0018a	85 d2		 test	 edx, edx
  0018c	74 2f		 je	 SHORT $LN4@IQuickActi
$LN5@IQuickActi:

; 823  : 		return E_FAIL;

  0018e	c7 45 80 05 40
	00 80		 mov	 DWORD PTR $T5[ebp], -2147467259 ; 80004005H
  00195	8d 4d c4	 lea	 ecx, DWORD PTR _pPCI$[ebp]
  00198	e8 00 00 00 00	 call	 ??1?$CComPtr@UIProvideClassInfo2@@@ATL@@QAE@XZ
  0019d	8d 4d d0	 lea	 ecx, DWORD PTR _pPI$[ebp]
  001a0	e8 00 00 00 00	 call	 ??1?$CComPtr@UIPointerInactive@@@ATL@@QAE@XZ
  001a5	8d 4d dc	 lea	 ecx, DWORD PTR _pVOEX$[ebp]
  001a8	e8 00 00 00 00	 call	 ??1?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ
  001ad	8d 4d e8	 lea	 ecx, DWORD PTR _pOO$[ebp]
  001b0	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleObject@@@ATL@@QAE@XZ
  001b5	8b 45 80	 mov	 eax, DWORD PTR $T5[ebp]
  001b8	e9 ca 03 00 00	 jmp	 $LN1@IQuickActi
$LN4@IQuickActi:

; 824  : 
; 825  : 	pOO->SetClientSite(pQACont->pClientSite);

  001bd	8d 4d e8	 lea	 ecx, DWORD PTR _pOO$[ebp]
  001c0	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
  001c5	89 85 60 ff ff
	ff		 mov	 DWORD PTR tv208[ebp], eax
  001cb	8b f4		 mov	 esi, esp
  001cd	8b 45 08	 mov	 eax, DWORD PTR _pQACont$[ebp]
  001d0	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001d3	51		 push	 ecx
  001d4	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR tv208[ebp]
  001da	52		 push	 edx
  001db	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv208[ebp]
  001e1	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e3	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  001e6	ff d2		 call	 edx
  001e8	3b f4		 cmp	 esi, esp
  001ea	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 826  : 
; 827  : 	if (pQACont->pAdviseSink != NULL)

  001ef	8b 45 08	 mov	 eax, DWORD PTR _pQACont$[ebp]
  001f2	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  001f6	74 66		 je	 SHORT $LN6@IQuickActi

; 828  : 	{
; 829  : 		ATLTRACE(atlTraceControls,2,_T("Setting up IOleObject Advise\n"));

  001f8	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@NOHFMFHB@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAp?$AA?5?$AAI?$AAO?$AAl?$AAe@
  001fd	6a 02		 push	 2
  001ff	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00204	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  00209	50		 push	 eax
  0020a	68 3d 03 00 00	 push	 829			; 0000033dH
  0020f	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00214	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  0021a	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0021f	50		 push	 eax
  00220	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00225	83 c4 10	 add	 esp, 16			; 00000010H

; 830  : 		pVOEX->SetAdvise(DVASPECT_CONTENT, 0, pQACont->pAdviseSink);

  00228	8d 4d dc	 lea	 ecx, DWORD PTR _pVOEX$[ebp]
  0022b	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIViewObjectEx@@@1@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator->
  00230	89 85 5c ff ff
	ff		 mov	 DWORD PTR tv236[ebp], eax
  00236	8b f4		 mov	 esi, esp
  00238	8b 4d 08	 mov	 ecx, DWORD PTR _pQACont$[ebp]
  0023b	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0023e	52		 push	 edx
  0023f	6a 00		 push	 0
  00241	6a 01		 push	 1
  00243	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv236[ebp]
  00249	50		 push	 eax
  0024a	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv236[ebp]
  00250	8b 11		 mov	 edx, DWORD PTR [ecx]
  00252	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00255	ff d0		 call	 eax
  00257	3b f4		 cmp	 esi, esp
  00259	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN6@IQuickActi:

; 831  : 	}
; 832  : 
; 833  : 	CComPtr<IConnectionPointContainer> pCPC;

  0025e	8d 4d b8	 lea	 ecx, DWORD PTR _pCPC$[ebp]
  00261	e8 00 00 00 00	 call	 ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ ; ATL::CComPtr<IConnectionPointContainer>::CComPtr<IConnectionPointContainer>

; 834  : 	ControlQueryInterface(__uuidof(IConnectionPointContainer), (void**)&pCPC);

  00266	8d 4d b8	 lea	 ecx, DWORD PTR _pCPC$[ebp]
  00269	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::operator&
  0026e	8b f4		 mov	 esi, esp
  00270	50		 push	 eax
  00271	68 00 00 00 00	 push	 OFFSET __GUID_b196b284_bab4_101a_b69c_00aa00341d07
  00276	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00279	8b 11		 mov	 edx, DWORD PTR [ecx]
  0027b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0027e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00281	ff d0		 call	 eax
  00283	3b f4		 cmp	 esi, esp
  00285	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 835  : 
; 836  : 	if (pQACont->pPropertyNotifySink)

  0028a	8b 4d 08	 mov	 ecx, DWORD PTR _pQACont$[ebp]
  0028d	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  00291	0f 84 cc 00 00
	00		 je	 $LN7@IQuickActi

; 837  : 	{
; 838  : 		ATLTRACE(atlTraceControls,2,_T("Setting up PropNotify CP\n"));

  00297	68 00 00 00 00	 push	 OFFSET ??_C@_1DE@OCCEGLFH@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAp?$AA?5?$AAP?$AAr?$AAo?$AAp@
  0029c	6a 02		 push	 2
  0029e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  002a3	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  002a8	50		 push	 eax
  002a9	68 46 03 00 00	 push	 838			; 00000346H
  002ae	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  002b3	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  002b9	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  002be	50		 push	 eax
  002bf	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  002c4	83 c4 10	 add	 esp, 16			; 00000010H

; 839  : 		CComPtr<IConnectionPoint> pCP;

  002c7	8d 4d ac	 lea	 ecx, DWORD PTR _pCP$8[ebp]
  002ca	e8 00 00 00 00	 call	 ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ ; ATL::CComPtr<IConnectionPoint>::CComPtr<IConnectionPoint>

; 840  : 		if (pCPC != NULL)

  002cf	6a 00		 push	 0
  002d1	8d 4d b8	 lea	 ecx, DWORD PTR _pCPC$[ebp]
  002d4	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBE_NPAUIConnectionPointContainer@@@Z ; ATL::CComPtrBase<IConnectionPointContainer>::operator!=
  002d9	0f b6 d0	 movzx	 edx, al
  002dc	85 d2		 test	 edx, edx
  002de	74 7b		 je	 SHORT $LN8@IQuickActi

; 841  : 		{
; 842  : 			hRes = pCPC->FindConnectionPoint(__uuidof(IPropertyNotifySink), &pCP);

  002e0	8d 4d b8	 lea	 ecx, DWORD PTR _pCPC$[ebp]
  002e3	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::operator->
  002e8	89 85 58 ff ff
	ff		 mov	 DWORD PTR tv296[ebp], eax
  002ee	8d 4d ac	 lea	 ecx, DWORD PTR _pCP$8[ebp]
  002f1	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ ; ATL::CComPtrBase<IConnectionPoint>::operator&
  002f6	8b f4		 mov	 esi, esp
  002f8	50		 push	 eax
  002f9	68 00 00 00 00	 push	 OFFSET __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
  002fe	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR tv296[ebp]
  00304	50		 push	 eax
  00305	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR tv296[ebp]
  0030b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0030d	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00310	ff d0		 call	 eax
  00312	3b f4		 cmp	 esi, esp
  00314	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00319	89 45 f4	 mov	 DWORD PTR _hRes$[ebp], eax

; 843  : 			if (SUCCEEDED(hRes))

  0031c	83 7d f4 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00320	7c 39		 jl	 SHORT $LN8@IQuickActi

; 844  : 				pCP->Advise(pQACont->pPropertyNotifySink, &pQACtrl->dwPropNotifyCookie);

  00322	8d 4d ac	 lea	 ecx, DWORD PTR _pCP$8[ebp]
  00325	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ ; ATL::CComPtrBase<IConnectionPoint>::operator->
  0032a	89 85 54 ff ff
	ff		 mov	 DWORD PTR tv320[ebp], eax
  00330	8b 4d 0c	 mov	 ecx, DWORD PTR _pQACtrl$[ebp]
  00333	83 c1 10	 add	 ecx, 16			; 00000010H
  00336	8b f4		 mov	 esi, esp
  00338	51		 push	 ecx
  00339	8b 55 08	 mov	 edx, DWORD PTR _pQACont$[ebp]
  0033c	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0033f	50		 push	 eax
  00340	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR tv320[ebp]
  00346	51		 push	 ecx
  00347	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR tv320[ebp]
  0034d	8b 02		 mov	 eax, DWORD PTR [edx]
  0034f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00352	ff d1		 call	 ecx
  00354	3b f4		 cmp	 esi, esp
  00356	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN8@IQuickActi:

; 845  : 		}
; 846  : 	}

  0035b	8d 4d ac	 lea	 ecx, DWORD PTR _pCP$8[ebp]
  0035e	e8 00 00 00 00	 call	 ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
$LN7@IQuickActi:

; 847  : 
; 848  : 	if (pPCI)

  00363	8d 4d c4	 lea	 ecx, DWORD PTR _pPCI$[ebp]
  00366	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QBEPAUIProvideClassInfo2@@XZ ; ATL::CComPtrBase<IProvideClassInfo2>::operator IProvideClassInfo2 *
  0036b	85 c0		 test	 eax, eax
  0036d	0f 84 11 01 00
	00		 je	 $LN10@IQuickActi

; 849  : 	{
; 850  : 		GUID iidDefaultSrc;
; 851  : 		if (SUCCEEDED(pPCI->GetGUID(GUIDKIND_DEFAULT_SOURCE_DISP_IID,

  00373	8d 4d c4	 lea	 ecx, DWORD PTR _pPCI$[ebp]
  00376	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIProvideClassInfo2@@@1@XZ ; ATL::CComPtrBase<IProvideClassInfo2>::operator->
  0037b	89 85 50 ff ff
	ff		 mov	 DWORD PTR tv349[ebp], eax
  00381	8b f4		 mov	 esi, esp
  00383	8d 55 94	 lea	 edx, DWORD PTR _iidDefaultSrc$7[ebp]
  00386	52		 push	 edx
  00387	6a 01		 push	 1
  00389	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv349[ebp]
  0038f	50		 push	 eax
  00390	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR tv349[ebp]
  00396	8b 11		 mov	 edx, DWORD PTR [ecx]
  00398	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0039b	ff d0		 call	 eax
  0039d	3b f4		 cmp	 esi, esp
  0039f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003a4	85 c0		 test	 eax, eax
  003a6	0f 8c d8 00 00
	00		 jl	 $LN10@IQuickActi

; 852  : 			&iidDefaultSrc)))
; 853  : 		{
; 854  : 			if (pQACont->pUnkEventSink)

  003ac	8b 4d 08	 mov	 ecx, DWORD PTR _pQACont$[ebp]
  003af	83 79 10 00	 cmp	 DWORD PTR [ecx+16], 0
  003b3	0f 84 cb 00 00
	00		 je	 $LN10@IQuickActi

; 855  : 			{
; 856  : 				ATLTRACE(atlTraceControls,2,_T("Setting up Default Out Going Interface\n"));

  003b9	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@GGGGDGB@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAp?$AA?5?$AAD?$AAe?$AAf?$AAa@
  003be	6a 02		 push	 2
  003c0	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  003c5	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<64,0>::operator unsigned int
  003ca	50		 push	 eax
  003cb	68 58 03 00 00	 push	 856			; 00000358H
  003d0	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@DOAAAKDA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  003d5	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  003db	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  003e0	50		 push	 eax
  003e1	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  003e6	83 c4 10	 add	 esp, 16			; 00000010H

; 857  : 				CComPtr<IConnectionPoint> pCP;

  003e9	8d 4d 88	 lea	 ecx, DWORD PTR _pCP$6[ebp]
  003ec	e8 00 00 00 00	 call	 ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ ; ATL::CComPtr<IConnectionPoint>::CComPtr<IConnectionPoint>

; 858  : 				if (pCPC != NULL)

  003f1	6a 00		 push	 0
  003f3	8d 4d b8	 lea	 ecx, DWORD PTR _pCPC$[ebp]
  003f6	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBE_NPAUIConnectionPointContainer@@@Z ; ATL::CComPtrBase<IConnectionPointContainer>::operator!=
  003fb	0f b6 d0	 movzx	 edx, al
  003fe	85 d2		 test	 edx, edx
  00400	74 7a		 je	 SHORT $LN13@IQuickActi

; 859  : 				{
; 860  : 					hRes = pCPC->FindConnectionPoint(iidDefaultSrc, &pCP);

  00402	8d 4d b8	 lea	 ecx, DWORD PTR _pCPC$[ebp]
  00405	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::operator->
  0040a	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv391[ebp], eax
  00410	8d 4d 88	 lea	 ecx, DWORD PTR _pCP$6[ebp]
  00413	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ ; ATL::CComPtrBase<IConnectionPoint>::operator&
  00418	8b f4		 mov	 esi, esp
  0041a	50		 push	 eax
  0041b	8d 45 94	 lea	 eax, DWORD PTR _iidDefaultSrc$7[ebp]
  0041e	50		 push	 eax
  0041f	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv391[ebp]
  00425	51		 push	 ecx
  00426	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR tv391[ebp]
  0042c	8b 02		 mov	 eax, DWORD PTR [edx]
  0042e	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00431	ff d1		 call	 ecx
  00433	3b f4		 cmp	 esi, esp
  00435	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0043a	89 45 f4	 mov	 DWORD PTR _hRes$[ebp], eax

; 861  : 					if (SUCCEEDED(hRes))

  0043d	83 7d f4 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00441	7c 39		 jl	 SHORT $LN13@IQuickActi

; 862  : 						pCP->Advise(pQACont->pUnkEventSink, &pQACtrl->dwEventCookie);

  00443	8d 4d 88	 lea	 ecx, DWORD PTR _pCP$6[ebp]
  00446	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ ; ATL::CComPtrBase<IConnectionPoint>::operator->
  0044b	89 85 48 ff ff
	ff		 mov	 DWORD PTR tv415[ebp], eax
  00451	8b 55 0c	 mov	 edx, DWORD PTR _pQACtrl$[ebp]
  00454	83 c2 0c	 add	 edx, 12			; 0000000cH
  00457	8b f4		 mov	 esi, esp
  00459	52		 push	 edx
  0045a	8b 45 08	 mov	 eax, DWORD PTR _pQACont$[ebp]
  0045d	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00460	51		 push	 ecx
  00461	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR tv415[ebp]
  00467	52		 push	 edx
  00468	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv415[ebp]
  0046e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00470	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00473	ff d2		 call	 edx
  00475	3b f4		 cmp	 esi, esp
  00477	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN13@IQuickActi:

; 863  : 				}
; 864  : 			}

  0047c	8d 4d 88	 lea	 ecx, DWORD PTR _pCP$6[ebp]
  0047f	e8 00 00 00 00	 call	 ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
$LN10@IQuickActi:

; 865  : 		}
; 866  : 	}
; 867  : 	// give information to container
; 868  : 	if (pOO != NULL)

  00484	6a 00		 push	 0
  00486	8d 4d e8	 lea	 ecx, DWORD PTR _pOO$[ebp]
  00489	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIOleObject@@@ATL@@QBE_NPAUIOleObject@@@Z ; ATL::CComPtrBase<IOleObject>::operator!=
  0048e	0f b6 c0	 movzx	 eax, al
  00491	85 c0		 test	 eax, eax
  00493	74 34		 je	 SHORT $LN15@IQuickActi

; 869  : 		pOO->GetMiscStatus(DVASPECT_CONTENT, &pQACtrl->dwMiscStatus);

  00495	8d 4d e8	 lea	 ecx, DWORD PTR _pOO$[ebp]
  00498	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
  0049d	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv442[ebp], eax
  004a3	8b 4d 0c	 mov	 ecx, DWORD PTR _pQACtrl$[ebp]
  004a6	83 c1 04	 add	 ecx, 4
  004a9	8b f4		 mov	 esi, esp
  004ab	51		 push	 ecx
  004ac	6a 01		 push	 1
  004ae	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR tv442[ebp]
  004b4	52		 push	 edx
  004b5	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR tv442[ebp]
  004bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  004bd	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  004c0	ff d2		 call	 edx
  004c2	3b f4		 cmp	 esi, esp
  004c4	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN15@IQuickActi:

; 870  : 
; 871  : 	if (pVOEX != NULL)

  004c9	6a 00		 push	 0
  004cb	8d 4d dc	 lea	 ecx, DWORD PTR _pVOEX$[ebp]
  004ce	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z ; ATL::CComPtrBase<IViewObjectEx>::operator!=
  004d3	0f b6 c0	 movzx	 eax, al
  004d6	85 c0		 test	 eax, eax
  004d8	74 32		 je	 SHORT $LN16@IQuickActi

; 872  : 		pVOEX->GetViewStatus(&pQACtrl->dwViewStatus);

  004da	8d 4d dc	 lea	 ecx, DWORD PTR _pVOEX$[ebp]
  004dd	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIViewObjectEx@@@1@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator->
  004e2	89 85 40 ff ff
	ff		 mov	 DWORD PTR tv468[ebp], eax
  004e8	8b 4d 0c	 mov	 ecx, DWORD PTR _pQACtrl$[ebp]
  004eb	83 c1 08	 add	 ecx, 8
  004ee	8b f4		 mov	 esi, esp
  004f0	51		 push	 ecx
  004f1	8b 95 40 ff ff
	ff		 mov	 edx, DWORD PTR tv468[ebp]
  004f7	52		 push	 edx
  004f8	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv468[ebp]
  004fe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00500	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00503	ff d2		 call	 edx
  00505	3b f4		 cmp	 esi, esp
  00507	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN16@IQuickActi:

; 873  : 
; 874  : 	if (pPI != NULL)

  0050c	6a 00		 push	 0
  0050e	8d 4d d0	 lea	 ecx, DWORD PTR _pPI$[ebp]
  00511	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIPointerInactive@@@ATL@@QBE_NPAUIPointerInactive@@@Z ; ATL::CComPtrBase<IPointerInactive>::operator!=
  00516	0f b6 c0	 movzx	 eax, al
  00519	85 c0		 test	 eax, eax
  0051b	74 32		 je	 SHORT $LN17@IQuickActi

; 875  : 		pPI->GetActivationPolicy(&pQACtrl->dwPointerActivationPolicy);

  0051d	8d 4d d0	 lea	 ecx, DWORD PTR _pPI$[ebp]
  00520	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIPointerInactive@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPointerInactive@@@1@XZ ; ATL::CComPtrBase<IPointerInactive>::operator->
  00525	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv493[ebp], eax
  0052b	8b 4d 0c	 mov	 ecx, DWORD PTR _pQACtrl$[ebp]
  0052e	83 c1 14	 add	 ecx, 20			; 00000014H
  00531	8b f4		 mov	 esi, esp
  00533	51		 push	 ecx
  00534	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR tv493[ebp]
  0053a	52		 push	 edx
  0053b	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv493[ebp]
  00541	8b 08		 mov	 ecx, DWORD PTR [eax]
  00543	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00546	ff d2		 call	 edx
  00548	3b f4		 cmp	 esi, esp
  0054a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN17@IQuickActi:

; 876  : 	return S_OK;

  0054f	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T1[ebp], 0
  00559	8d 4d b8	 lea	 ecx, DWORD PTR _pCPC$[ebp]
  0055c	e8 00 00 00 00	 call	 ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
  00561	8d 4d c4	 lea	 ecx, DWORD PTR _pPCI$[ebp]
  00564	e8 00 00 00 00	 call	 ??1?$CComPtr@UIProvideClassInfo2@@@ATL@@QAE@XZ
  00569	8d 4d d0	 lea	 ecx, DWORD PTR _pPI$[ebp]
  0056c	e8 00 00 00 00	 call	 ??1?$CComPtr@UIPointerInactive@@@ATL@@QAE@XZ
  00571	8d 4d dc	 lea	 ecx, DWORD PTR _pVOEX$[ebp]
  00574	e8 00 00 00 00	 call	 ??1?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ
  00579	8d 4d e8	 lea	 ecx, DWORD PTR _pOO$[ebp]
  0057c	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleObject@@@ATL@@QAE@XZ
  00581	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
$LN1@IQuickActi:

; 877  : }

  00587	52		 push	 edx
  00588	8b cd		 mov	 ecx, ebp
  0058a	50		 push	 eax
  0058b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN30@IQuickActi
  00591	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00596	58		 pop	 eax
  00597	5a		 pop	 edx
  00598	5f		 pop	 edi
  00599	5e		 pop	 esi
  0059a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0059d	33 cd		 xor	 ecx, ebp
  0059f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  005a4	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  005aa	3b ec		 cmp	 ebp, esp
  005ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005b1	8b e5		 mov	 esp, ebp
  005b3	5d		 pop	 ebp
  005b4	c2 08 00	 ret	 8
  005b7	90		 npad	 1
$LN30@IQuickActi:
  005b8	08 00 00 00	 DD	 8
  005bc	00 00 00 00	 DD	 $LN29@IQuickActi
$LN29@IQuickActi:
  005c0	e8 ff ff ff	 DD	 -24			; ffffffe8H
  005c4	04 00 00 00	 DD	 4
  005c8	00 00 00 00	 DD	 $LN21@IQuickActi
  005cc	dc ff ff ff	 DD	 -36			; ffffffdcH
  005d0	04 00 00 00	 DD	 4
  005d4	00 00 00 00	 DD	 $LN22@IQuickActi
  005d8	d0 ff ff ff	 DD	 -48			; ffffffd0H
  005dc	04 00 00 00	 DD	 4
  005e0	00 00 00 00	 DD	 $LN23@IQuickActi
  005e4	c4 ff ff ff	 DD	 -60			; ffffffc4H
  005e8	04 00 00 00	 DD	 4
  005ec	00 00 00 00	 DD	 $LN24@IQuickActi
  005f0	b8 ff ff ff	 DD	 -72			; ffffffb8H
  005f4	04 00 00 00	 DD	 4
  005f8	00 00 00 00	 DD	 $LN25@IQuickActi
  005fc	ac ff ff ff	 DD	 -84			; ffffffacH
  00600	04 00 00 00	 DD	 4
  00604	00 00 00 00	 DD	 $LN26@IQuickActi
  00608	94 ff ff ff	 DD	 -108			; ffffff94H
  0060c	10 00 00 00	 DD	 16			; 00000010H
  00610	00 00 00 00	 DD	 $LN27@IQuickActi
  00614	88 ff ff ff	 DD	 -120			; ffffff88H
  00618	04 00 00 00	 DD	 4
  0061c	00 00 00 00	 DD	 $LN28@IQuickActi
$LN28@IQuickActi:
  00620	70		 DB	 112			; 00000070H
  00621	43		 DB	 67			; 00000043H
  00622	50		 DB	 80			; 00000050H
  00623	00		 DB	 0
$LN27@IQuickActi:
  00624	69		 DB	 105			; 00000069H
  00625	69		 DB	 105			; 00000069H
  00626	64		 DB	 100			; 00000064H
  00627	44		 DB	 68			; 00000044H
  00628	65		 DB	 101			; 00000065H
  00629	66		 DB	 102			; 00000066H
  0062a	61		 DB	 97			; 00000061H
  0062b	75		 DB	 117			; 00000075H
  0062c	6c		 DB	 108			; 0000006cH
  0062d	74		 DB	 116			; 00000074H
  0062e	53		 DB	 83			; 00000053H
  0062f	72		 DB	 114			; 00000072H
  00630	63		 DB	 99			; 00000063H
  00631	00		 DB	 0
$LN26@IQuickActi:
  00632	70		 DB	 112			; 00000070H
  00633	43		 DB	 67			; 00000043H
  00634	50		 DB	 80			; 00000050H
  00635	00		 DB	 0
$LN25@IQuickActi:
  00636	70		 DB	 112			; 00000070H
  00637	43		 DB	 67			; 00000043H
  00638	50		 DB	 80			; 00000050H
  00639	43		 DB	 67			; 00000043H
  0063a	00		 DB	 0
$LN24@IQuickActi:
  0063b	70		 DB	 112			; 00000070H
  0063c	50		 DB	 80			; 00000050H
  0063d	43		 DB	 67			; 00000043H
  0063e	49		 DB	 73			; 00000049H
  0063f	00		 DB	 0
$LN23@IQuickActi:
  00640	70		 DB	 112			; 00000070H
  00641	50		 DB	 80			; 00000050H
  00642	49		 DB	 73			; 00000049H
  00643	00		 DB	 0
$LN22@IQuickActi:
  00644	70		 DB	 112			; 00000070H
  00645	56		 DB	 86			; 00000056H
  00646	4f		 DB	 79			; 0000004fH
  00647	45		 DB	 69			; 00000045H
  00648	58		 DB	 88			; 00000058H
  00649	00		 DB	 0
$LN21@IQuickActi:
  0064a	70		 DB	 112			; 00000070H
  0064b	4f		 DB	 79			; 0000004fH
  0064c	4f		 DB	 79			; 0000004fH
  0064d	00		 DB	 0
?IQuickActivate_QuickActivate@CComControlBase@ATL@@QAEJPAUtagQACONTAINER@@PAUtagQACONTROL@@@Z ENDP ; ATL::CComControlBase::IQuickActivate_QuickActivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?SetControlFocus@CComControlBase@ATL@@QAEHH@Z
_TEXT	SEGMENT
tv151 = -24						; size = 4
tv140 = -20						; size = 4
tv128 = -16						; size = 4
tv90 = -12						; size = 4
_hwnd$1 = -8						; size = 4
_this$ = -4						; size = 4
_bGrab$ = 8						; size = 4
?SetControlFocus@CComControlBase@ATL@@QAEHH@Z PROC	; ATL::CComControlBase::SetControlFocus, COMDAT
; _this$ = ecx

; 880  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 881  : 	if (m_bWndLess)

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00027	d1 e9		 shr	 ecx, 1
  00029	83 e1 01	 and	 ecx, 1
  0002c	74 75		 je	 SHORT $LN2@SetControl

; 882  : 	{
; 883  : 		if (!m_bUIActive && bGrab)

  0002e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00031	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00034	c1 e8 03	 shr	 eax, 3
  00037	83 e0 01	 and	 eax, 1
  0003a	75 1d		 jne	 SHORT $LN4@SetControl
  0003c	83 7d 08 00	 cmp	 DWORD PTR _bGrab$[ebp], 0
  00040	74 17		 je	 SHORT $LN4@SetControl

; 884  : 			if (FAILED(InPlaceActivate(OLEIVERB_UIACTIVATE)))

  00042	6a 00		 push	 0
  00044	6a fc		 push	 -4			; fffffffcH
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?InPlaceActivate@CComControlBase@ATL@@QAEJJPBUtagRECT@@@Z ; ATL::CComControlBase::InPlaceActivate
  0004e	85 c0		 test	 eax, eax
  00050	7d 07		 jge	 SHORT $LN4@SetControl

; 885  : 				return FALSE;

  00052	33 c0		 xor	 eax, eax
  00054	e9 0e 01 00 00	 jmp	 $LN1@SetControl
$LN4@SetControl:

; 886  : 
; 887  : 		return (m_spInPlaceSite->SetFocus(bGrab) == S_OK);

  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	83 c1 04	 add	 ecx, 4
  0005f	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleInPlaceSiteWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceSiteWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceSiteWindowless>::operator->
  00064	89 45 f4	 mov	 DWORD PTR tv90[ebp], eax
  00067	8b f4		 mov	 esi, esp
  00069	8b 4d 08	 mov	 ecx, DWORD PTR _bGrab$[ebp]
  0006c	51		 push	 ecx
  0006d	8b 55 f4	 mov	 edx, DWORD PTR tv90[ebp]
  00070	52		 push	 edx
  00071	8b 45 f4	 mov	 eax, DWORD PTR tv90[ebp]
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  00079	ff d2		 call	 edx
  0007b	3b f4		 cmp	 esi, esp
  0007d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00082	85 c0		 test	 eax, eax
  00084	75 09		 jne	 SHORT $LN11@SetControl
  00086	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv128[ebp], 1
  0008d	eb 07		 jmp	 SHORT $LN12@SetControl
$LN11@SetControl:
  0008f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN12@SetControl:
  00096	8b 45 f0	 mov	 eax, DWORD PTR tv128[ebp]
  00099	e9 c9 00 00 00	 jmp	 $LN1@SetControl

; 888  : 	}

  0009e	e9 c2 00 00 00	 jmp	 $LN3@SetControl
$LN2@SetControl:

; 889  : 	else
; 890  : 	{
; 891  : 		// we've got a window.
; 892  : 		//
; 893  : 		if (m_bInPlaceActive)

  000a3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a6	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  000a9	c1 e9 02	 shr	 ecx, 2
  000ac	83 e1 01	 and	 ecx, 1
  000af	0f 84 b0 00 00
	00		 je	 $LN3@SetControl

; 894  : 		{
; 895  : 			HWND hwnd = (bGrab) ? m_hWndCD : ::GetParent(m_hWndCD);

  000b5	83 7d 08 00	 cmp	 DWORD PTR _bGrab$[ebp], 0
  000b9	74 0d		 je	 SHORT $LN13@SetControl
  000bb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000be	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000c1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c3	89 4d ec	 mov	 DWORD PTR tv140[ebp], ecx
  000c6	eb 1b		 jmp	 SHORT $LN14@SetControl
$LN13@SetControl:
  000c8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000cb	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000ce	8b f4		 mov	 esi, esp
  000d0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d2	51		 push	 ecx
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	89 45 ec	 mov	 DWORD PTR tv140[ebp], eax
$LN14@SetControl:
  000e3	8b 55 ec	 mov	 edx, DWORD PTR tv140[ebp]
  000e6	89 55 f8	 mov	 DWORD PTR _hwnd$1[ebp], edx

; 896  : 			if (!m_bUIActive && bGrab)

  000e9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  000ef	c1 e9 03	 shr	 ecx, 3
  000f2	83 e1 01	 and	 ecx, 1
  000f5	75 2d		 jne	 SHORT $LN7@SetControl
  000f7	83 7d 08 00	 cmp	 DWORD PTR _bGrab$[ebp], 0
  000fb	74 27		 je	 SHORT $LN7@SetControl

; 897  : 				return SUCCEEDED(InPlaceActivate(OLEIVERB_UIACTIVATE));

  000fd	6a 00		 push	 0
  000ff	6a fc		 push	 -4			; fffffffcH
  00101	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00104	e8 00 00 00 00	 call	 ?InPlaceActivate@CComControlBase@ATL@@QAEJJPBUtagRECT@@@Z ; ATL::CComControlBase::InPlaceActivate
  00109	85 c0		 test	 eax, eax
  0010b	7c 09		 jl	 SHORT $LN15@SetControl
  0010d	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR tv151[ebp], 1
  00114	eb 07		 jmp	 SHORT $LN16@SetControl
$LN15@SetControl:
  00116	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv151[ebp], 0
$LN16@SetControl:
  0011d	8b 45 e8	 mov	 eax, DWORD PTR tv151[ebp]
  00120	eb 45		 jmp	 SHORT $LN1@SetControl
  00122	eb 41		 jmp	 SHORT $LN3@SetControl
$LN7@SetControl:

; 898  : 			else
; 899  : 			{
; 900  : 				if (!::IsChild(hwnd, ::GetFocus()))

  00124	8b f4		 mov	 esi, esp
  00126	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  0012c	3b f4		 cmp	 esi, esp
  0012e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00133	8b f4		 mov	 esi, esp
  00135	50		 push	 eax
  00136	8b 55 f8	 mov	 edx, DWORD PTR _hwnd$1[ebp]
  00139	52		 push	 edx
  0013a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsChild@8
  00140	3b f4		 cmp	 esi, esp
  00142	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00147	85 c0		 test	 eax, eax
  00149	75 13		 jne	 SHORT $LN9@SetControl

; 901  : 					::SetFocus(hwnd);

  0014b	8b f4		 mov	 esi, esp
  0014d	8b 45 f8	 mov	 eax, DWORD PTR _hwnd$1[ebp]
  00150	50		 push	 eax
  00151	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetFocus@4
  00157	3b f4		 cmp	 esi, esp
  00159	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN9@SetControl:

; 902  : 				return TRUE;

  0015e	b8 01 00 00 00	 mov	 eax, 1
  00163	eb 02		 jmp	 SHORT $LN1@SetControl
$LN3@SetControl:

; 903  : 			}
; 904  : 		}
; 905  : 	}
; 906  : 	return FALSE;

  00165	33 c0		 xor	 eax, eax
$LN1@SetControl:

; 907  : }

  00167	5e		 pop	 esi
  00168	83 c4 18	 add	 esp, 24			; 00000018H
  0016b	3b ec		 cmp	 ebp, esp
  0016d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00172	8b e5		 mov	 esp, ebp
  00174	5d		 pop	 ebp
  00175	c2 04 00	 ret	 4
?SetControlFocus@CComControlBase@ATL@@QAEHH@Z ENDP	; ATL::CComControlBase::SetControlFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?DoesVerbActivate@CComControlBase@ATL@@QAEHJ@Z
_TEXT	SEGMENT
tv64 = -12						; size = 4
_b$ = -8						; size = 4
_this$ = -4						; size = 4
_iVerb$ = 8						; size = 4
?DoesVerbActivate@CComControlBase@ATL@@QAEHJ@Z PROC	; ATL::CComControlBase::DoesVerbActivate, COMDAT
; _this$ = ecx

; 689  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 690  : 		BOOL b = FALSE;

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _b$[ebp], 0

; 691  : 		switch (iVerb)

  00025	8b 45 08	 mov	 eax, DWORD PTR _iVerb$[ebp]
  00028	89 45 f4	 mov	 DWORD PTR tv64[ebp], eax
  0002b	8b 4d f4	 mov	 ecx, DWORD PTR tv64[ebp]
  0002e	83 c1 05	 add	 ecx, 5
  00031	89 4d f4	 mov	 DWORD PTR tv64[ebp], ecx
  00034	83 7d f4 05	 cmp	 DWORD PTR tv64[ebp], 5
  00038	77 18		 ja	 SHORT $LN2@DoesVerbAc
  0003a	8b 55 f4	 mov	 edx, DWORD PTR tv64[ebp]
  0003d	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN6@DoesVerbAc[edx]
  00044	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN7@DoesVerbAc[eax*4]
$LN4@DoesVerbAc:

; 692  : 		{
; 693  : 			case OLEIVERB_UIACTIVATE:
; 694  : 			case OLEIVERB_PRIMARY:
; 695  : 			case OLEIVERB_SHOW:
; 696  : 			case OLEIVERB_INPLACEACTIVATE:
; 697  : 				b = TRUE;

  0004b	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _b$[ebp], 1
$LN2@DoesVerbAc:

; 698  : 				break;
; 699  : 		}
; 700  : 		return b;

  00052	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]

; 701  : 	}

  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
  0005b	90		 npad	 1
$LN7@DoesVerbAc:
  0005c	00 00 00 00	 DD	 $LN4@DoesVerbAc
  00060	00 00 00 00	 DD	 $LN2@DoesVerbAc
$LN6@DoesVerbAc:
  00064	00		 DB	 0
  00065	00		 DB	 0
  00066	01		 DB	 1
  00067	01		 DB	 1
  00068	00		 DB	 0
  00069	00		 DB	 0
?DoesVerbActivate@CComControlBase@ATL@@QAEHJ@Z ENDP	; ATL::CComControlBase::DoesVerbActivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?DoesVerbUIActivate@CComControlBase@ATL@@QAEHJ@Z
_TEXT	SEGMENT
tv64 = -12						; size = 4
_b$ = -8						; size = 4
_this$ = -4						; size = 4
_iVerb$ = 8						; size = 4
?DoesVerbUIActivate@CComControlBase@ATL@@QAEHJ@Z PROC	; ATL::CComControlBase::DoesVerbUIActivate, COMDAT
; _this$ = ecx

; 673  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 674  : 		BOOL b = FALSE;

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _b$[ebp], 0

; 675  : 		switch (iVerb)

  00025	8b 45 08	 mov	 eax, DWORD PTR _iVerb$[ebp]
  00028	89 45 f4	 mov	 DWORD PTR tv64[ebp], eax
  0002b	83 7d f4 fc	 cmp	 DWORD PTR tv64[ebp], -4	; fffffffcH
  0002f	74 08		 je	 SHORT $LN4@DoesVerbUI
  00031	83 7d f4 00	 cmp	 DWORD PTR tv64[ebp], 0
  00035	74 02		 je	 SHORT $LN4@DoesVerbUI
  00037	eb 07		 jmp	 SHORT $LN2@DoesVerbUI
$LN4@DoesVerbUI:

; 676  : 		{
; 677  : 			case OLEIVERB_UIACTIVATE:
; 678  : 			case OLEIVERB_PRIMARY:
; 679  : 				b = TRUE;

  00039	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _b$[ebp], 1
$LN2@DoesVerbUI:

; 680  : 				break;
; 681  : 		}
; 682  : 		// if no ambient dispatch then in old style OLE container
; 683  : 		if (DoesVerbActivate(iVerb) && m_spAmbientDispatch.p == NULL)

  00040	8b 4d 08	 mov	 ecx, DWORD PTR _iVerb$[ebp]
  00043	51		 push	 ecx
  00044	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ?DoesVerbActivate@CComControlBase@ATL@@QAEHJ@Z ; ATL::CComControlBase::DoesVerbActivate
  0004c	85 c0		 test	 eax, eax
  0004e	74 10		 je	 SHORT $LN5@DoesVerbUI
  00050	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00053	83 7a 18 00	 cmp	 DWORD PTR [edx+24], 0
  00057	75 07		 jne	 SHORT $LN5@DoesVerbUI

; 684  : 			b = TRUE;

  00059	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _b$[ebp], 1
$LN5@DoesVerbUI:

; 685  : 		return b;

  00060	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]

; 686  : 	}

  00063	83 c4 0c	 add	 esp, 12			; 0000000cH
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
?DoesVerbUIActivate@CComControlBase@ATL@@QAEHJ@Z ENDP	; ATL::CComControlBase::DoesVerbUIActivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?InternalGetSite@CComControlBase@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv129 = -8						; size = 4
_this$ = -4						; size = 4
_riid$ = 8						; size = 4
_ppUnkSite$ = 12					; size = 4
?InternalGetSite@CComControlBase@ATL@@QAEJABU_GUID@@PAPAX@Z PROC ; ATL::CComControlBase::InternalGetSite, COMDAT
; _this$ = ecx

; 659  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 660  : 		ATLASSERT(ppUnkSite != NULL);

  00018	83 7d 0c 00	 cmp	 DWORD PTR _ppUnkSite$[ebp], 0
  0001c	75 26		 jne	 SHORT $LN5@InternalGe
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@NKNHJKPB@?$AAp?$AAp?$AAU?$AAn?$AAk?$AAS?$AAi?$AAt?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00028	6a 00		 push	 0
  0002a	68 94 02 00 00	 push	 660			; 00000294H
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00034	6a 02		 push	 2
  00036	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003b	83 c4 18	 add	 esp, 24			; 00000018H
  0003e	83 f8 01	 cmp	 eax, 1
  00041	75 01		 jne	 SHORT $LN5@InternalGe
  00043	cc		 int	 3
$LN5@InternalGe:

; 661  : 		if (ppUnkSite == NULL)

  00044	83 7d 0c 00	 cmp	 DWORD PTR _ppUnkSite$[ebp], 0
  00048	75 07		 jne	 SHORT $LN2@InternalGe

; 662  : 			return E_POINTER;

  0004a	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0004f	eb 50		 jmp	 SHORT $LN1@InternalGe
$LN2@InternalGe:

; 663  : 		if (m_spClientSite == NULL)

  00051	6a 00		 push	 0
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	83 c1 10	 add	 ecx, 16			; 00000010H
  00059	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NPAUIOleClientSite@@@Z ; ATL::CComPtrBase<IOleClientSite>::operator==
  0005e	0f b6 c8	 movzx	 ecx, al
  00061	85 c9		 test	 ecx, ecx
  00063	74 10		 je	 SHORT $LN3@InternalGe

; 664  : 		{
; 665  : 			*ppUnkSite = NULL;

  00065	8b 55 0c	 mov	 edx, DWORD PTR _ppUnkSite$[ebp]
  00068	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 666  : 			return E_FAIL;

  0006e	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00073	eb 2c		 jmp	 SHORT $LN1@InternalGe
$LN3@InternalGe:

; 667  : 		}
; 668  : 		return m_spClientSite->QueryInterface(riid, ppUnkSite);

  00075	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	83 c1 10	 add	 ecx, 16			; 00000010H
  0007b	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleClientSite@@@1@XZ ; ATL::CComPtrBase<IOleClientSite>::operator->
  00080	89 45 f8	 mov	 DWORD PTR tv129[ebp], eax
  00083	8b f4		 mov	 esi, esp
  00085	8b 45 0c	 mov	 eax, DWORD PTR _ppUnkSite$[ebp]
  00088	50		 push	 eax
  00089	8b 4d 08	 mov	 ecx, DWORD PTR _riid$[ebp]
  0008c	51		 push	 ecx
  0008d	8b 55 f8	 mov	 edx, DWORD PTR tv129[ebp]
  00090	52		 push	 edx
  00091	8b 45 f8	 mov	 eax, DWORD PTR tv129[ebp]
  00094	8b 08		 mov	 ecx, DWORD PTR [eax]
  00096	8b 11		 mov	 edx, DWORD PTR [ecx]
  00098	ff d2		 call	 edx
  0009a	3b f4		 cmp	 esi, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@InternalGe:

; 669  : 	}

  000a1	5e		 pop	 esi
  000a2	83 c4 08	 add	 esp, 8
  000a5	3b ec		 cmp	 ebp, esp
  000a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 08 00	 ret	 8
?InternalGetSite@CComControlBase@ATL@@QAEJABU_GUID@@PAPAX@Z ENDP ; ATL::CComControlBase::InternalGetSite
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetAmbientUserMode@CComControlBase@ATL@@QAEJAAH@Z
_TEXT	SEGMENT
tv138 = -44						; size = 4
$T1 = -40						; size = 4
$T2 = -36						; size = 4
_hRes$ = -32						; size = 4
_var$ = -24						; size = 16
_this$ = -4						; size = 4
_bUserMode$ = 8						; size = 4
?GetAmbientUserMode@CComControlBase@ATL@@QAEJAAH@Z PROC	; ATL::CComControlBase::GetAmbientUserMode, COMDAT
; _this$ = ecx

; 475  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0000b	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 476  : 		CComVariant var;

  0001b	8d 4d e8	 lea	 ecx, DWORD PTR _var$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::CComVariant

; 477  : 		HRESULT hRes = GetAmbientProperty(DISPID_AMBIENT_USERMODE, var);

  00023	8d 45 e8	 lea	 eax, DWORD PTR _var$[ebp]
  00026	50		 push	 eax
  00027	68 3b fd ff ff	 push	 -709			; fffffd3bH
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAmbientProperty@CComControlBase@ATL@@QAEJJAAUtagVARIANT@@@Z ; ATL::CComControlBase::GetAmbientProperty
  00034	89 45 e0	 mov	 DWORD PTR _hRes$[ebp], eax

; 478  : 		if(SUCCEEDED(hRes))

  00037	83 7d e0 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  0003b	7c 6c		 jl	 SHORT $LN2@GetAmbient

; 479  : 		{
; 480  : 			ATLASSERT(var.vt == VT_BOOL);

  0003d	0f b7 4d e8	 movzx	 ecx, WORD PTR _var$[ebp]
  00041	83 f9 0b	 cmp	 ecx, 11			; 0000000bH
  00044	74 26		 je	 SHORT $LN5@GetAmbient
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@EIEAFJJI@?$AAv?$AAa?$AAr?$AA?4?$AAv?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAV?$AAT?$AA_?$AAB?$AAO@
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00050	6a 00		 push	 0
  00052	68 e0 01 00 00	 push	 480			; 000001e0H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0005c	6a 02		 push	 2
  0005e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00063	83 c4 18	 add	 esp, 24			; 00000018H
  00066	83 f8 01	 cmp	 eax, 1
  00069	75 01		 jne	 SHORT $LN5@GetAmbient
  0006b	cc		 int	 3
$LN5@GetAmbient:

; 481  : 			if(var.vt != VT_BOOL)

  0006c	0f b7 45 e8	 movzx	 eax, WORD PTR _var$[ebp]
  00070	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  00073	74 14		 je	 SHORT $LN3@GetAmbient

; 482  : 				return DISP_E_TYPEMISMATCH;

  00075	c7 45 dc 05 00
	02 80		 mov	 DWORD PTR $T2[ebp], -2147352571 ; 80020005H
  0007c	8d 4d e8	 lea	 ecx, DWORD PTR _var$[ebp]
  0007f	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  00084	8b 45 dc	 mov	 eax, DWORD PTR $T2[ebp]
  00087	eb 31		 jmp	 SHORT $LN1@GetAmbient
$LN3@GetAmbient:

; 483  : 			bUserMode = (var.boolVal != ATL_VARIANT_FALSE) ? TRUE : FALSE;

  00089	0f bf 4d f0	 movsx	 ecx, WORD PTR _var$[ebp+8]
  0008d	85 c9		 test	 ecx, ecx
  0008f	74 09		 je	 SHORT $LN6@GetAmbient
  00091	c7 45 d4 01 00
	00 00		 mov	 DWORD PTR tv138[ebp], 1
  00098	eb 07		 jmp	 SHORT $LN7@GetAmbient
$LN6@GetAmbient:
  0009a	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR tv138[ebp], 0
$LN7@GetAmbient:
  000a1	8b 55 08	 mov	 edx, DWORD PTR _bUserMode$[ebp]
  000a4	8b 45 d4	 mov	 eax, DWORD PTR tv138[ebp]
  000a7	89 02		 mov	 DWORD PTR [edx], eax
$LN2@GetAmbient:

; 484  : 		}
; 485  : 		return hRes;

  000a9	8b 4d e0	 mov	 ecx, DWORD PTR _hRes$[ebp]
  000ac	89 4d d8	 mov	 DWORD PTR $T1[ebp], ecx
  000af	8d 4d e8	 lea	 ecx, DWORD PTR _var$[ebp]
  000b2	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  000b7	8b 45 d8	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@GetAmbient:

; 486  : 	}

  000ba	52		 push	 edx
  000bb	8b cd		 mov	 ecx, ebp
  000bd	50		 push	 eax
  000be	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@GetAmbient
  000c4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000c9	58		 pop	 eax
  000ca	5a		 pop	 edx
  000cb	5f		 pop	 edi
  000cc	83 c4 2c	 add	 esp, 44			; 0000002cH
  000cf	3b ec		 cmp	 ebp, esp
  000d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
$LN10@GetAmbient:
  000dc	01 00 00 00	 DD	 1
  000e0	00 00 00 00	 DD	 $LN9@GetAmbient
$LN9@GetAmbient:
  000e4	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000e8	10 00 00 00	 DD	 16			; 00000010H
  000ec	00 00 00 00	 DD	 $LN8@GetAmbient
$LN8@GetAmbient:
  000f0	76		 DB	 118			; 00000076H
  000f1	61		 DB	 97			; 00000061H
  000f2	72		 DB	 114			; 00000072H
  000f3	00		 DB	 0
?GetAmbientUserMode@CComControlBase@ATL@@QAEJAAH@Z ENDP	; ATL::CComControlBase::GetAmbientUserMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetAmbientLocaleID@CComControlBase@ATL@@QAEJAAK@Z
_TEXT	SEGMENT
$T1 = -36						; size = 4
_hRes$ = -32						; size = 4
_var$ = -24						; size = 16
_this$ = -4						; size = 4
_lcid$ = 8						; size = 4
?GetAmbientLocaleID@CComControlBase@ATL@@QAEJAAK@Z PROC	; ATL::CComControlBase::GetAmbientLocaleID, COMDAT
; _this$ = ecx

; 430  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000e	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00011	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00014	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00017	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001a	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001d	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00020	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00023	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00026	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 431  : 		CComVariant var;

  00029	8d 4d e8	 lea	 ecx, DWORD PTR _var$[ebp]
  0002c	e8 00 00 00 00	 call	 ??0CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::CComVariant

; 432  : 		HRESULT hRes = GetAmbientProperty(DISPID_AMBIENT_LOCALEID, var);

  00031	8d 45 e8	 lea	 eax, DWORD PTR _var$[ebp]
  00034	50		 push	 eax
  00035	68 3f fd ff ff	 push	 -705			; fffffd3fH
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?GetAmbientProperty@CComControlBase@ATL@@QAEJJAAUtagVARIANT@@@Z ; ATL::CComControlBase::GetAmbientProperty
  00042	89 45 e0	 mov	 DWORD PTR _hRes$[ebp], eax

; 433  : 		ATLASSERT(FAILED(hRes) || (var.vt == VT_UI4 || var.vt == VT_I4));

  00045	83 7d e0 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00049	7c 38		 jl	 SHORT $LN4@GetAmbient
  0004b	0f b7 4d e8	 movzx	 ecx, WORD PTR _var$[ebp]
  0004f	83 f9 13	 cmp	 ecx, 19			; 00000013H
  00052	74 2f		 je	 SHORT $LN4@GetAmbient
  00054	0f b7 55 e8	 movzx	 edx, WORD PTR _var$[ebp]
  00058	83 fa 03	 cmp	 edx, 3
  0005b	74 26		 je	 SHORT $LN4@GetAmbient
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_1IC@FBPLOGNL@?$AA?$CI?$AA?$CI?$AA?$CI?$AAH?$AAR?$AAE?$AAS?$AAU?$AAL?$AAT?$AA?$CJ?$AA?$CI?$AAh?$AAR?$AAe@
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00067	6a 00		 push	 0
  00069	68 b1 01 00 00	 push	 433			; 000001b1H
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NGGLHGHC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00073	6a 02		 push	 2
  00075	e8 00 00 00 00	 call	 __CrtDbgReportW
  0007a	83 c4 18	 add	 esp, 24			; 00000018H
  0007d	83 f8 01	 cmp	 eax, 1
  00080	75 01		 jne	 SHORT $LN4@GetAmbient
  00082	cc		 int	 3
$LN4@GetAmbient:

; 434  : 		if (SUCCEEDED(hRes))

  00083	83 7d e0 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00087	7c 08		 jl	 SHORT $LN2@GetAmbient

; 435  : 			lcid = var.lVal;

  00089	8b 4d 08	 mov	 ecx, DWORD PTR _lcid$[ebp]
  0008c	8b 55 f0	 mov	 edx, DWORD PTR _var$[ebp+8]
  0008f	89 11		 mov	 DWORD PTR [ecx], edx
$LN2@GetAmbient:

; 436  : 		return hRes;

  00091	8b 45 e0	 mov	 eax, DWORD PTR _hRes$[ebp]
  00094	89 45 dc	 mov	 DWORD PTR $T1[ebp], eax
  00097	8d 4d e8	 lea	 ecx, DWORD PTR _var$[ebp]
  0009a	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  0009f	8b 45 dc	 mov	 eax, DWORD PTR $T1[ebp]

; 437  : 	}

  000a2	52		 push	 edx
  000a3	8b cd		 mov	 ecx, ebp
  000a5	50		 push	 eax
  000a6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@GetAmbient
  000ac	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000b1	58		 pop	 eax
  000b2	5a		 pop	 edx
  000b3	83 c4 24	 add	 esp, 36			; 00000024H
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
  000c3	90		 npad	 1
$LN7@GetAmbient:
  000c4	01 00 00 00	 DD	 1
  000c8	00 00 00 00	 DD	 $LN6@GetAmbient
$LN6@GetAmbient:
  000cc	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000d0	10 00 00 00	 DD	 16			; 00000010H
  000d4	00 00 00 00	 DD	 $LN5@GetAmbient
$LN5@GetAmbient:
  000d8	76		 DB	 118			; 00000076H
  000d9	61		 DB	 97			; 00000061H
  000da	72		 DB	 114			; 00000072H
  000db	00		 DB	 0
?GetAmbientLocaleID@CComControlBase@ATL@@QAEJAAK@Z ENDP	; ATL::CComControlBase::GetAmbientLocaleID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetAmbientProperty@CComControlBase@ATL@@QAEJJAAUtagVARIANT@@@Z
_TEXT	SEGMENT
_hRes$ = -8						; size = 4
_this$ = -4						; size = 4
_dispid$ = 8						; size = 4
_var$ = 12						; size = 4
?GetAmbientProperty@CComControlBase@ATL@@QAEJJAAUtagVARIANT@@@Z PROC ; ATL::CComControlBase::GetAmbientProperty, COMDAT
; _this$ = ecx

; 326  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 327  : 		HRESULT hRes = E_FAIL;

  00017	c7 45 f8 05 40
	00 80		 mov	 DWORD PTR _hRes$[ebp], -2147467259 ; 80004005H

; 328  : 		if (m_spAmbientDispatch.p != NULL)

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00025	74 16		 je	 SHORT $LN2@GetAmbient

; 329  : 			hRes = m_spAmbientDispatch.GetProperty(dispid, &var);

  00027	8b 4d 0c	 mov	 ecx, DWORD PTR _var$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR _dispid$[ebp]
  0002e	52		 push	 edx
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 c1 18	 add	 ecx, 24			; 00000018H
  00035	e8 00 00 00 00	 call	 ?GetProperty@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@@Z ; ATL::CComPtr<IDispatch>::GetProperty
  0003a	89 45 f8	 mov	 DWORD PTR _hRes$[ebp], eax
$LN2@GetAmbient:

; 330  : 		return hRes;

  0003d	8b 45 f8	 mov	 eax, DWORD PTR _hRes$[ebp]

; 331  : 	}

  00040	83 c4 08	 add	 esp, 8
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 08 00	 ret	 8
?GetAmbientProperty@CComControlBase@ATL@@QAEJJAAUtagVARIANT@@@Z ENDP ; ATL::CComControlBase::GetAmbientProperty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?PreTranslateAccelerator@CComControlBase@ATL@@QAEHPAUtagMSG@@AAJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?PreTranslateAccelerator@CComControlBase@ATL@@QAEHPAUtagMSG@@AAJ@Z PROC ; ATL::CComControlBase::PreTranslateAccelerator, COMDAT
; _this$ = ecx

; 319  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 320  : 		return FALSE;

  0000e	33 c0		 xor	 eax, eax

; 321  : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?PreTranslateAccelerator@CComControlBase@ATL@@QAEHPAUtagMSG@@AAJ@Z ENDP ; ATL::CComControlBase::PreTranslateAccelerator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnMouseActivate@CComControlBase@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT
tv135 = -36						; size = 4
_pOleObject$1 = -28					; size = 4
_hRet$ = -20						; size = 4
_bUserMode$ = -12					; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnMouseActivate@CComControlBase@ATL@@QAEJIIJAAH@Z PROC	; ATL::CComControlBase::OnMouseActivate, COMDAT
; _this$ = ecx

; 301  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00012	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00015	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00018	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00021	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00024	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00027	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 302  : 		BOOL bUserMode = TRUE;

  0002a	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _bUserMode$[ebp], 1

; 303  : 		HRESULT hRet = GetAmbientUserMode(bUserMode);

  00031	8d 45 f4	 lea	 eax, DWORD PTR _bUserMode$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?GetAmbientUserMode@CComControlBase@ATL@@QAEJAAH@Z ; ATL::CComControlBase::GetAmbientUserMode
  0003d	89 45 ec	 mov	 DWORD PTR _hRet$[ebp], eax

; 304  : 		// UI activate if in user mode only
; 305  : 		// allow activation if we can't determine mode
; 306  : 		if (FAILED(hRet) || bUserMode)

  00040	83 7d ec 00	 cmp	 DWORD PTR _hRet$[ebp], 0
  00044	7c 0a		 jl	 SHORT $LN3@OnMouseAct
  00046	83 7d f4 00	 cmp	 DWORD PTR _bUserMode$[ebp], 0
  0004a	0f 84 89 00 00
	00		 je	 $LN2@OnMouseAct
$LN3@OnMouseAct:

; 307  : 		{
; 308  : 			CComPtr<IOleObject> pOleObject;

  00050	8d 4d e4	 lea	 ecx, DWORD PTR _pOleObject$1[ebp]
  00053	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleObject@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleObject>::CComPtr<IOleObject>

; 309  : 			ControlQueryInterface(__uuidof(IOleObject), (void**)&pOleObject);

  00058	8d 4d e4	 lea	 ecx, DWORD PTR _pOleObject$1[ebp]
  0005b	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIOleObject@@@ATL@@QAEPAPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator&
  00060	8b f4		 mov	 esi, esp
  00062	50		 push	 eax
  00063	68 00 00 00 00	 push	 OFFSET __GUID_00000112_0000_0000_c000_000000000046
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00073	ff d0		 call	 eax
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 310  : 			if (pOleObject != NULL)

  0007c	6a 00		 push	 0
  0007e	8d 4d e4	 lea	 ecx, DWORD PTR _pOleObject$1[ebp]
  00081	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIOleObject@@@ATL@@QBE_NPAUIOleObject@@@Z ; ATL::CComPtrBase<IOleObject>::operator!=
  00086	0f b6 c8	 movzx	 ecx, al
  00089	85 c9		 test	 ecx, ecx
  0008b	74 44		 je	 SHORT $LN4@OnMouseAct

; 311  : 				pOleObject->DoVerb(OLEIVERB_UIACTIVATE, NULL, m_spClientSite, 0, m_hWndCD, &m_rcPos);

  0008d	8d 4d e4	 lea	 ecx, DWORD PTR _pOleObject$1[ebp]
  00090	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
  00095	89 45 dc	 mov	 DWORD PTR tv135[ebp], eax
  00098	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0009b	83 c2 2c	 add	 edx, 44			; 0000002cH
  0009e	8b f4		 mov	 esi, esp
  000a0	52		 push	 edx
  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  000a7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a9	52		 push	 edx
  000aa	6a 00		 push	 0
  000ac	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	83 c1 10	 add	 ecx, 16			; 00000010H
  000b2	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
  000b7	50		 push	 eax
  000b8	6a 00		 push	 0
  000ba	6a fc		 push	 -4			; fffffffcH
  000bc	8b 45 dc	 mov	 eax, DWORD PTR tv135[ebp]
  000bf	50		 push	 eax
  000c0	8b 4d dc	 mov	 ecx, DWORD PTR tv135[ebp]
  000c3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c5	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  000c8	ff d0		 call	 eax
  000ca	3b f4		 cmp	 esi, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@OnMouseAct:

; 312  : 		}

  000d1	8d 4d e4	 lea	 ecx, DWORD PTR _pOleObject$1[ebp]
  000d4	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleObject@@@ATL@@QAE@XZ
$LN2@OnMouseAct:

; 313  : 		bHandled = FALSE;

  000d9	8b 4d 14	 mov	 ecx, DWORD PTR _bHandled$[ebp]
  000dc	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 314  : 		return 1;

  000e2	b8 01 00 00 00	 mov	 eax, 1

; 315  : 	}

  000e7	52		 push	 edx
  000e8	8b cd		 mov	 ecx, ebp
  000ea	50		 push	 eax
  000eb	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@OnMouseAct
  000f1	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000f6	58		 pop	 eax
  000f7	5a		 pop	 edx
  000f8	5e		 pop	 esi
  000f9	83 c4 24	 add	 esp, 36			; 00000024H
  000fc	3b ec		 cmp	 ebp, esp
  000fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c2 10 00	 ret	 16			; 00000010H
  00109	0f 1f 00	 npad	 3
$LN9@OnMouseAct:
  0010c	02 00 00 00	 DD	 2
  00110	00 00 00 00	 DD	 $LN8@OnMouseAct
$LN8@OnMouseAct:
  00114	f4 ff ff ff	 DD	 -12			; fffffff4H
  00118	04 00 00 00	 DD	 4
  0011c	00 00 00 00	 DD	 $LN6@OnMouseAct
  00120	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00124	04 00 00 00	 DD	 4
  00128	00 00 00 00	 DD	 $LN7@OnMouseAct
$LN7@OnMouseAct:
  0012c	70		 DB	 112			; 00000070H
  0012d	4f		 DB	 79			; 0000004fH
  0012e	6c		 DB	 108			; 0000006cH
  0012f	65		 DB	 101			; 00000065H
  00130	4f		 DB	 79			; 0000004fH
  00131	62		 DB	 98			; 00000062H
  00132	6a		 DB	 106			; 0000006aH
  00133	65		 DB	 101			; 00000065H
  00134	63		 DB	 99			; 00000063H
  00135	74		 DB	 116			; 00000074H
  00136	00		 DB	 0
$LN6@OnMouseAct:
  00137	62		 DB	 98			; 00000062H
  00138	55		 DB	 85			; 00000055H
  00139	73		 DB	 115			; 00000073H
  0013a	65		 DB	 101			; 00000065H
  0013b	72		 DB	 114			; 00000072H
  0013c	4d		 DB	 77			; 0000004dH
  0013d	6f		 DB	 111			; 0000006fH
  0013e	64		 DB	 100			; 00000064H
  0013f	65		 DB	 101			; 00000065H
  00140	00		 DB	 0
?OnMouseActivate@CComControlBase@ATL@@QAEJIIJAAH@Z ENDP	; ATL::CComControlBase::OnMouseActivate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnKillFocus@CComControlBase@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT
tv142 = -24						; size = 4
$T1 = -20						; size = 4
_spSite$ = -12						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnKillFocus@CComControlBase@ATL@@QAEJIIJAAH@Z PROC	; ATL::CComControlBase::OnKillFocus, COMDAT
; _this$ = ecx

; 289  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 290  : 		CComQIPtr<IOleControlSite, &__uuidof(IOleControlSite)> spSite(m_spClientSite);

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 10	 add	 ecx, 16			; 00000010H
  00027	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
  0002c	50		 push	 eax
  0002d	8d 4d f4	 lea	 ecx, DWORD PTR _spSite$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$CComQIPtr@UIOleControlSite@@$1?_GUID_b196b289_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>::CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>

; 291  : 		if (m_bInPlaceActive && spSite != NULL && !::IsChild(m_hWndCD, ::GetFocus()))

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  0003b	c1 e9 02	 shr	 ecx, 2
  0003e	83 e1 01	 and	 ecx, 1
  00041	74 61		 je	 SHORT $LN2@OnKillFocu
  00043	6a 00		 push	 0
  00045	8d 4d f4	 lea	 ecx, DWORD PTR _spSite$[ebp]
  00048	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIOleControlSite@@@ATL@@QBE_NPAUIOleControlSite@@@Z ; ATL::CComPtrBase<IOleControlSite>::operator!=
  0004d	0f b6 d0	 movzx	 edx, al
  00050	85 d2		 test	 edx, edx
  00052	74 50		 je	 SHORT $LN2@OnKillFocu
  00054	8b f4		 mov	 esi, esp
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b f4		 mov	 esi, esp
  00065	50		 push	 eax
  00066	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00069	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0006c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006e	52		 push	 edx
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsChild@8
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	85 c0		 test	 eax, eax
  0007e	75 24		 jne	 SHORT $LN2@OnKillFocu

; 292  : 			spSite->OnFocus(FALSE);

  00080	8d 4d f4	 lea	 ecx, DWORD PTR _spSite$[ebp]
  00083	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleControlSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleControlSite@@@1@XZ ; ATL::CComPtrBase<IOleControlSite>::operator->
  00088	89 45 e8	 mov	 DWORD PTR tv142[ebp], eax
  0008b	8b f4		 mov	 esi, esp
  0008d	6a 00		 push	 0
  0008f	8b 45 e8	 mov	 eax, DWORD PTR tv142[ebp]
  00092	50		 push	 eax
  00093	8b 4d e8	 mov	 ecx, DWORD PTR tv142[ebp]
  00096	8b 11		 mov	 edx, DWORD PTR [ecx]
  00098	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0009b	ff d0		 call	 eax
  0009d	3b f4		 cmp	 esi, esp
  0009f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@OnKillFocu:

; 293  : 		bHandled = FALSE;

  000a4	8b 4d 14	 mov	 ecx, DWORD PTR _bHandled$[ebp]
  000a7	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 294  : 		return 1;

  000ad	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR $T1[ebp], 1
  000b4	8d 4d f4	 lea	 ecx, DWORD PTR _spSite$[ebp]
  000b7	e8 00 00 00 00	 call	 ??1?$CComQIPtr@UIOleControlSite@@$1?_GUID_b196b289_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ
  000bc	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]

; 295  : 	}

  000bf	52		 push	 edx
  000c0	8b cd		 mov	 ecx, ebp
  000c2	50		 push	 eax
  000c3	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@OnKillFocu
  000c9	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ce	58		 pop	 eax
  000cf	5a		 pop	 edx
  000d0	5e		 pop	 esi
  000d1	83 c4 18	 add	 esp, 24			; 00000018H
  000d4	3b ec		 cmp	 ebp, esp
  000d6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 10 00	 ret	 16			; 00000010H
  000e1	0f 1f 00	 npad	 3
$LN6@OnKillFocu:
  000e4	01 00 00 00	 DD	 1
  000e8	00 00 00 00	 DD	 $LN5@OnKillFocu
$LN5@OnKillFocu:
  000ec	f4 ff ff ff	 DD	 -12			; fffffff4H
  000f0	04 00 00 00	 DD	 4
  000f4	00 00 00 00	 DD	 $LN4@OnKillFocu
$LN4@OnKillFocu:
  000f8	73		 DB	 115			; 00000073H
  000f9	70		 DB	 112			; 00000070H
  000fa	53		 DB	 83			; 00000053H
  000fb	69		 DB	 105			; 00000069H
  000fc	74		 DB	 116			; 00000074H
  000fd	65		 DB	 101			; 00000065H
  000fe	00		 DB	 0
?OnKillFocus@CComControlBase@ATL@@QAEJIIJAAH@Z ENDP	; ATL::CComControlBase::OnKillFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?OnSetFocus@CComControlBase@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT
tv192 = -36						; size = 4
tv134 = -32						; size = 4
_spSite$1 = -24						; size = 4
_pOleObject$2 = -12					; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnSetFocus@CComControlBase@ATL@@QAEJIIJAAH@Z PROC	; ATL::CComControlBase::OnSetFocus, COMDAT
; _this$ = ecx

; 270  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00012	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00015	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00018	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00021	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00024	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00027	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 271  : 		if (m_bInPlaceActive)

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00030	c1 e9 02	 shr	 ecx, 2
  00033	83 e1 01	 and	 ecx, 1
  00036	0f 84 e8 00 00
	00		 je	 $LN2@OnSetFocus

; 272  : 		{
; 273  : 			CComPtr<IOleObject> pOleObject;

  0003c	8d 4d f4	 lea	 ecx, DWORD PTR _pOleObject$2[ebp]
  0003f	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleObject@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleObject>::CComPtr<IOleObject>

; 274  : 			ControlQueryInterface(__uuidof(IOleObject), (void**)&pOleObject);

  00044	8d 4d f4	 lea	 ecx, DWORD PTR _pOleObject$2[ebp]
  00047	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIOleObject@@@ATL@@QAEPAPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator&
  0004c	8b f4		 mov	 esi, esp
  0004e	50		 push	 eax
  0004f	68 00 00 00 00	 push	 OFFSET __GUID_00000112_0000_0000_c000_000000000046
  00054	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00057	8b 02		 mov	 eax, DWORD PTR [edx]
  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0005f	ff d2		 call	 edx
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 275  : 			if (pOleObject != NULL)

  00068	6a 00		 push	 0
  0006a	8d 4d f4	 lea	 ecx, DWORD PTR _pOleObject$2[ebp]
  0006d	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIOleObject@@@ATL@@QBE_NPAUIOleObject@@@Z ; ATL::CComPtrBase<IOleObject>::operator!=
  00072	0f b6 c0	 movzx	 eax, al
  00075	85 c0		 test	 eax, eax
  00077	74 44		 je	 SHORT $LN3@OnSetFocus

; 276  : 				pOleObject->DoVerb(OLEIVERB_UIACTIVATE, NULL, m_spClientSite, 0, m_hWndCD, &m_rcPos);

  00079	8d 4d f4	 lea	 ecx, DWORD PTR _pOleObject$2[ebp]
  0007c	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
  00081	89 45 e0	 mov	 DWORD PTR tv134[ebp], eax
  00084	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	83 c1 2c	 add	 ecx, 44			; 0000002cH
  0008a	8b f4		 mov	 esi, esp
  0008c	51		 push	 ecx
  0008d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00090	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00093	8b 08		 mov	 ecx, DWORD PTR [eax]
  00095	51		 push	 ecx
  00096	6a 00		 push	 0
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	83 c1 10	 add	 ecx, 16			; 00000010H
  0009e	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
  000a3	50		 push	 eax
  000a4	6a 00		 push	 0
  000a6	6a fc		 push	 -4			; fffffffcH
  000a8	8b 55 e0	 mov	 edx, DWORD PTR tv134[ebp]
  000ab	52		 push	 edx
  000ac	8b 45 e0	 mov	 eax, DWORD PTR tv134[ebp]
  000af	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b1	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  000b4	ff d2		 call	 edx
  000b6	3b f4		 cmp	 esi, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@OnSetFocus:

; 277  : 			CComQIPtr<IOleControlSite, &__uuidof(IOleControlSite)> spSite(m_spClientSite);

  000bd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	83 c1 10	 add	 ecx, 16			; 00000010H
  000c3	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
  000c8	50		 push	 eax
  000c9	8d 4d e8	 lea	 ecx, DWORD PTR _spSite$1[ebp]
  000cc	e8 00 00 00 00	 call	 ??0?$CComQIPtr@UIOleControlSite@@$1?_GUID_b196b289_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>::CComQIPtr<IOleControlSite,&_GUID_b196b289_bab4_101a_b69c_00aa00341d07>

; 278  : 			if (m_bInPlaceActive && spSite != NULL)

  000d1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d4	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  000d7	c1 e9 02	 shr	 ecx, 2
  000da	83 e1 01	 and	 ecx, 1
  000dd	74 35		 je	 SHORT $LN4@OnSetFocus
  000df	6a 00		 push	 0
  000e1	8d 4d e8	 lea	 ecx, DWORD PTR _spSite$1[ebp]
  000e4	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIOleControlSite@@@ATL@@QBE_NPAUIOleControlSite@@@Z ; ATL::CComPtrBase<IOleControlSite>::operator!=
  000e9	0f b6 d0	 movzx	 edx, al
  000ec	85 d2		 test	 edx, edx
  000ee	74 24		 je	 SHORT $LN4@OnSetFocus

; 279  : 				spSite->OnFocus(TRUE);

  000f0	8d 4d e8	 lea	 ecx, DWORD PTR _spSite$1[ebp]
  000f3	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleControlSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleControlSite@@@1@XZ ; ATL::CComPtrBase<IOleControlSite>::operator->
  000f8	89 45 dc	 mov	 DWORD PTR tv192[ebp], eax
  000fb	8b f4		 mov	 esi, esp
  000fd	6a 01		 push	 1
  000ff	8b 45 dc	 mov	 eax, DWORD PTR tv192[ebp]
  00102	50		 push	 eax
  00103	8b 4d dc	 mov	 ecx, DWORD PTR tv192[ebp]
  00106	8b 11		 mov	 edx, DWORD PTR [ecx]
  00108	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0010b	ff d0		 call	 eax
  0010d	3b f4		 cmp	 esi, esp
  0010f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@OnSetFocus:

; 280  : 		}

  00114	8d 4d e8	 lea	 ecx, DWORD PTR _spSite$1[ebp]
  00117	e8 00 00 00 00	 call	 ??1?$CComQIPtr@UIOleControlSite@@$1?_GUID_b196b289_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ
  0011c	8d 4d f4	 lea	 ecx, DWORD PTR _pOleObject$2[ebp]
  0011f	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleObject@@@ATL@@QAE@XZ
$LN2@OnSetFocus:

; 281  : 		bHandled = FALSE;

  00124	8b 4d 14	 mov	 ecx, DWORD PTR _bHandled$[ebp]
  00127	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 282  : 		return 1;

  0012d	b8 01 00 00 00	 mov	 eax, 1

; 283  : 	}

  00132	52		 push	 edx
  00133	8b cd		 mov	 ecx, ebp
  00135	50		 push	 eax
  00136	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@OnSetFocus
  0013c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00141	58		 pop	 eax
  00142	5a		 pop	 edx
  00143	5e		 pop	 esi
  00144	83 c4 24	 add	 esp, 36			; 00000024H
  00147	3b ec		 cmp	 ebp, esp
  00149	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014e	8b e5		 mov	 esp, ebp
  00150	5d		 pop	 ebp
  00151	c2 10 00	 ret	 16			; 00000010H
$LN9@OnSetFocus:
  00154	02 00 00 00	 DD	 2
  00158	00 00 00 00	 DD	 $LN8@OnSetFocus
$LN8@OnSetFocus:
  0015c	f4 ff ff ff	 DD	 -12			; fffffff4H
  00160	04 00 00 00	 DD	 4
  00164	00 00 00 00	 DD	 $LN6@OnSetFocus
  00168	e8 ff ff ff	 DD	 -24			; ffffffe8H
  0016c	04 00 00 00	 DD	 4
  00170	00 00 00 00	 DD	 $LN7@OnSetFocus
$LN7@OnSetFocus:
  00174	73		 DB	 115			; 00000073H
  00175	70		 DB	 112			; 00000070H
  00176	53		 DB	 83			; 00000053H
  00177	69		 DB	 105			; 00000069H
  00178	74		 DB	 116			; 00000074H
  00179	65		 DB	 101			; 00000065H
  0017a	00		 DB	 0
$LN6@OnSetFocus:
  0017b	70		 DB	 112			; 00000070H
  0017c	4f		 DB	 79			; 0000004fH
  0017d	6c		 DB	 108			; 0000006cH
  0017e	65		 DB	 101			; 00000065H
  0017f	4f		 DB	 79			; 0000004fH
  00180	62		 DB	 98			; 00000062H
  00181	6a		 DB	 106			; 0000006aH
  00182	65		 DB	 101			; 00000065H
  00183	63		 DB	 99			; 00000063H
  00184	74		 DB	 116			; 00000074H
  00185	00		 DB	 0
?OnSetFocus@CComControlBase@ATL@@QAEJIIJAAH@Z ENDP	; ATL::CComControlBase::OnSetFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?SendOnViewChange@CComControlBase@ATL@@QAEJKJ@Z
_TEXT	SEGMENT
tv84 = -8						; size = 4
_this$ = -4						; size = 4
_dwAspect$ = 8						; size = 4
_lindex$ = 12						; size = 4
?SendOnViewChange@CComControlBase@ATL@@QAEJKJ@Z PROC	; ATL::CComControlBase::SendOnViewChange, COMDAT
; _this$ = ecx

; 259  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 260  : 		if (m_spAdviseSink)

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	83 c1 14	 add	 ecx, 20			; 00000014H
  0001e	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAUIAdviseSink@@XZ ; ATL::CComPtrBase<IAdviseSink>::operator IAdviseSink *
  00023	85 c0		 test	 eax, eax
  00025	74 2d		 je	 SHORT $LN2@SendOnView

; 261  : 			m_spAdviseSink->OnViewChange(dwAspect, lindex);

  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 14	 add	 ecx, 20			; 00000014H
  0002d	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAdviseSink@@@1@XZ ; ATL::CComPtrBase<IAdviseSink>::operator->
  00032	89 45 f8	 mov	 DWORD PTR tv84[ebp], eax
  00035	8b f4		 mov	 esi, esp
  00037	8b 45 0c	 mov	 eax, DWORD PTR _lindex$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _dwAspect$[ebp]
  0003e	51		 push	 ecx
  0003f	8b 55 f8	 mov	 edx, DWORD PTR tv84[ebp]
  00042	52		 push	 edx
  00043	8b 45 f8	 mov	 eax, DWORD PTR tv84[ebp]
  00046	8b 08		 mov	 ecx, DWORD PTR [eax]
  00048	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0004b	ff d2		 call	 edx
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@SendOnView:

; 262  : 		return S_OK;

  00054	33 c0		 xor	 eax, eax

; 263  : 	}

  00056	5e		 pop	 esi
  00057	83 c4 08	 add	 esp, 8
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
?SendOnViewChange@CComControlBase@ATL@@QAEJKJ@Z ENDP	; ATL::CComControlBase::SendOnViewChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?SendOnDataChange@CComControlBase@ATL@@QAEJK@Z
_TEXT	SEGMENT
tv132 = -24						; size = 4
_pdo$1 = -16						; size = 4
_hRes$ = -8						; size = 4
_this$ = -4						; size = 4
_advf$ = 8						; size = 4
?SendOnDataChange@CComControlBase@ATL@@QAEJK@Z PROC	; ATL::CComControlBase::SendOnDataChange, COMDAT
; _this$ = ecx

; 1117 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1118 : 	HRESULT hRes = S_OK;

  00021	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hRes$[ebp], 0

; 1119 : 	if (m_spDataAdviseHolder)

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	83 c1 08	 add	 ecx, 8
  0002e	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBEPAUIDataAdviseHolder@@XZ ; ATL::CComPtrBase<IDataAdviseHolder>::operator IDataAdviseHolder *
  00033	85 c0		 test	 eax, eax
  00035	74 6f		 je	 SHORT $LN2@SendOnData

; 1120 : 	{
; 1121 : 		CComPtr<IDataObject> pdo;

  00037	8d 4d f0	 lea	 ecx, DWORD PTR _pdo$1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0?$CComPtr@UIDataObject@@@ATL@@QAE@XZ ; ATL::CComPtr<IDataObject>::CComPtr<IDataObject>

; 1122 : 		if (SUCCEEDED(ControlQueryInterface(__uuidof(IDataObject), (void**)&pdo)))

  0003f	8d 4d f0	 lea	 ecx, DWORD PTR _pdo$1[ebp]
  00042	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIDataObject@@@ATL@@QAEPAPAUIDataObject@@XZ ; ATL::CComPtrBase<IDataObject>::operator&
  00047	8b f4		 mov	 esi, esp
  00049	50		 push	 eax
  0004a	68 00 00 00 00	 push	 OFFSET __GUID_0000010e_0000_0000_c000_000000000046
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	8b 10		 mov	 edx, DWORD PTR [eax]
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0005a	ff d0		 call	 eax
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	85 c0		 test	 eax, eax
  00065	7c 37		 jl	 SHORT $LN3@SendOnData

; 1123 : 			hRes = m_spDataAdviseHolder->SendOnDataChange(pdo, 0, advf);

  00067	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	83 c1 08	 add	 ecx, 8
  0006d	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIDataAdviseHolder@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDataAdviseHolder@@@1@XZ ; ATL::CComPtrBase<IDataAdviseHolder>::operator->
  00072	89 45 e8	 mov	 DWORD PTR tv132[ebp], eax
  00075	8b f4		 mov	 esi, esp
  00077	8b 4d 08	 mov	 ecx, DWORD PTR _advf$[ebp]
  0007a	51		 push	 ecx
  0007b	6a 00		 push	 0
  0007d	8d 4d f0	 lea	 ecx, DWORD PTR _pdo$1[ebp]
  00080	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIDataObject@@@ATL@@QBEPAUIDataObject@@XZ ; ATL::CComPtrBase<IDataObject>::operator IDataObject *
  00085	50		 push	 eax
  00086	8b 55 e8	 mov	 edx, DWORD PTR tv132[ebp]
  00089	52		 push	 edx
  0008a	8b 45 e8	 mov	 eax, DWORD PTR tv132[ebp]
  0008d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008f	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00092	ff d2		 call	 edx
  00094	3b f4		 cmp	 esi, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	89 45 f8	 mov	 DWORD PTR _hRes$[ebp], eax
$LN3@SendOnData:

; 1124 : 	}

  0009e	8d 4d f0	 lea	 ecx, DWORD PTR _pdo$1[ebp]
  000a1	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDataObject@@@ATL@@QAE@XZ
$LN2@SendOnData:

; 1125 : 	return hRes;

  000a6	8b 45 f8	 mov	 eax, DWORD PTR _hRes$[ebp]

; 1126 : }

  000a9	52		 push	 edx
  000aa	8b cd		 mov	 ecx, ebp
  000ac	50		 push	 eax
  000ad	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@SendOnData
  000b3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000b8	58		 pop	 eax
  000b9	5a		 pop	 edx
  000ba	5e		 pop	 esi
  000bb	83 c4 18	 add	 esp, 24			; 00000018H
  000be	3b ec		 cmp	 ebp, esp
  000c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c5	8b e5		 mov	 esp, ebp
  000c7	5d		 pop	 ebp
  000c8	c2 04 00	 ret	 4
  000cb	90		 npad	 1
$LN7@SendOnData:
  000cc	01 00 00 00	 DD	 1
  000d0	00 00 00 00	 DD	 $LN6@SendOnData
$LN6@SendOnData:
  000d4	f0 ff ff ff	 DD	 -16			; fffffff0H
  000d8	04 00 00 00	 DD	 4
  000dc	00 00 00 00	 DD	 $LN5@SendOnData
$LN5@SendOnData:
  000e0	70		 DB	 112			; 00000070H
  000e1	64		 DB	 100			; 00000064H
  000e2	6f		 DB	 111			; 0000006fH
  000e3	00		 DB	 0
?SendOnDataChange@CComControlBase@ATL@@QAEJK@Z ENDP	; ATL::CComControlBase::SendOnDataChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?SendOnSave@CComControlBase@ATL@@QAEJXZ
_TEXT	SEGMENT
tv84 = -12						; size = 4
_hRes$ = -8						; size = 4
_this$ = -4						; size = 4
?SendOnSave@CComControlBase@ATL@@QAEJXZ PROC		; ATL::CComControlBase::SendOnSave, COMDAT
; _this$ = ecx

; 241  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 242  : 		HRESULT hRes = S_OK;

  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hRes$[ebp], 0

; 243  : 		if (m_spOleAdviseHolder)

  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0002c	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBEPAUIOleAdviseHolder@@XZ ; ATL::CComPtrBase<IOleAdviseHolder>::operator IOleAdviseHolder *
  00031	85 c0		 test	 eax, eax
  00033	74 28		 je	 SHORT $LN2@SendOnSave

; 244  : 			hRes = m_spOleAdviseHolder->SendOnSave();

  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0003b	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIOleAdviseHolder@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleAdviseHolder@@@1@XZ ; ATL::CComPtrBase<IOleAdviseHolder>::operator->
  00040	89 45 f4	 mov	 DWORD PTR tv84[ebp], eax
  00043	8b 45 f4	 mov	 eax, DWORD PTR tv84[ebp]
  00046	8b 08		 mov	 ecx, DWORD PTR [eax]
  00048	8b f4		 mov	 esi, esp
  0004a	8b 55 f4	 mov	 edx, DWORD PTR tv84[ebp]
  0004d	52		 push	 edx
  0004e	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00051	ff d0		 call	 eax
  00053	3b f4		 cmp	 esi, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	89 45 f8	 mov	 DWORD PTR _hRes$[ebp], eax
$LN2@SendOnSave:

; 245  : 		return hRes;

  0005d	8b 45 f8	 mov	 eax, DWORD PTR _hRes$[ebp]

; 246  : 	}

  00060	5e		 pop	 esi
  00061	83 c4 0c	 add	 esp, 12			; 0000000cH
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
?SendOnSave@CComControlBase@ATL@@QAEJXZ ENDP		; ATL::CComControlBase::SendOnSave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlctl.h
;	COMDAT ?GetZoomInfo@CComControlBase@ATL@@QAEXAAUATL_DRAWINFO@@@Z
_TEXT	SEGMENT
_sizeNum$ = -36						; size = 8
_sizeDen$ = -20						; size = 8
_rcPos$ = -8						; size = 4
_this$ = -4						; size = 4
_di$ = 8						; size = 4
?GetZoomInfo@CComControlBase@ATL@@QAEXAAUATL_DRAWINFO@@@Z PROC ; ATL::CComControlBase::GetZoomInfo, COMDAT
; _this$ = ecx

; 1501 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d d8	 lea	 edi, DWORD PTR [ebp-40]
  0000b	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1502 : 	const RECTL& rcPos = *di.prcBounds;

  0001b	8b 45 08	 mov	 eax, DWORD PTR _di$[ebp]
  0001e	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00021	89 4d f8	 mov	 DWORD PTR _rcPos$[ebp], ecx

; 1503 : 	SIZEL sizeDen;
; 1504 : 	if (m_bDrawFromNatural)

  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0002a	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  0002d	83 e0 01	 and	 eax, 1
  00030	74 11		 je	 SHORT $LN2@GetZoomInf

; 1505 : 		sizeDen = m_sizeNatural;

  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00038	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  0003b	89 55 ec	 mov	 DWORD PTR _sizeDen$[ebp], edx
  0003e	89 45 f0	 mov	 DWORD PTR _sizeDen$[ebp+4], eax
  00041	eb 0f		 jmp	 SHORT $LN3@GetZoomInf
$LN2@GetZoomInf:

; 1506 : 	else
; 1507 : 		sizeDen = m_sizeExtent;

  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00049	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  0004c	89 55 ec	 mov	 DWORD PTR _sizeDen$[ebp], edx
  0004f	89 45 f0	 mov	 DWORD PTR _sizeDen$[ebp+4], eax
$LN3@GetZoomInf:

; 1508 : 	if (!di.bRectInHimetric)

  00052	8b 4d 08	 mov	 ecx, DWORD PTR _di$[ebp]
  00055	83 79 28 00	 cmp	 DWORD PTR [ecx+40], 0
  00059	75 0d		 jne	 SHORT $LN4@GetZoomInf

; 1509 : 		AtlHiMetricToPixel(&sizeDen, &sizeDen);

  0005b	8d 55 ec	 lea	 edx, DWORD PTR _sizeDen$[ebp]
  0005e	52		 push	 edx
  0005f	8d 45 ec	 lea	 eax, DWORD PTR _sizeDen$[ebp]
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ?AtlHiMetricToPixel@ATL@@YGXPBUtagSIZE@@PAU2@@Z ; ATL::AtlHiMetricToPixel
$LN4@GetZoomInf:

; 1510 : 	SIZEL sizeNum = {rcPos.right-rcPos.left, rcPos.bottom-rcPos.top};

  00068	8b 4d f8	 mov	 ecx, DWORD PTR _rcPos$[ebp]
  0006b	8b 55 f8	 mov	 edx, DWORD PTR _rcPos$[ebp]
  0006e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00071	2b 02		 sub	 eax, DWORD PTR [edx]
  00073	89 45 dc	 mov	 DWORD PTR _sizeNum$[ebp], eax
  00076	8b 4d f8	 mov	 ecx, DWORD PTR _rcPos$[ebp]
  00079	8b 55 f8	 mov	 edx, DWORD PTR _rcPos$[ebp]
  0007c	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0007f	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00082	89 45 e0	 mov	 DWORD PTR _sizeNum$[ebp+4], eax

; 1511 : 	di.ZoomNum.cx = sizeNum.cx;

  00085	8b 4d 08	 mov	 ecx, DWORD PTR _di$[ebp]
  00088	8b 55 dc	 mov	 edx, DWORD PTR _sizeNum$[ebp]
  0008b	89 51 2c	 mov	 DWORD PTR [ecx+44], edx

; 1512 : 	di.ZoomNum.cy = sizeNum.cy;

  0008e	8b 45 08	 mov	 eax, DWORD PTR _di$[ebp]
  00091	8b 4d e0	 mov	 ecx, DWORD PTR _sizeNum$[ebp+4]
  00094	89 48 30	 mov	 DWORD PTR [eax+48], ecx

; 1513 : 	di.ZoomDen.cx = sizeDen.cx;

  00097	8b 55 08	 mov	 edx, DWORD PTR _di$[ebp]
  0009a	8b 45 ec	 mov	 eax, DWORD PTR _sizeDen$[ebp]
  0009d	89 42 34	 mov	 DWORD PTR [edx+52], eax

; 1514 : 	di.ZoomDen.cy = sizeDen.cy;

  000a0	8b 4d 08	 mov	 ecx, DWORD PTR _di$[ebp]
  000a3	8b 55 f0	 mov	 edx, DWORD PTR _sizeDen$[ebp+4]
  000a6	89 51 38	 mov	 DWORD PTR [ecx+56], edx

; 1515 : 	if (sizeDen.cx == 0 || sizeDen.cy == 0 ||
; 1516 : 		sizeNum.cx == 0 || sizeNum.cy == 0)

  000a9	83 7d ec 00	 cmp	 DWORD PTR _sizeDen$[ebp], 0
  000ad	74 12		 je	 SHORT $LN7@GetZoomInf
  000af	83 7d f0 00	 cmp	 DWORD PTR _sizeDen$[ebp+4], 0
  000b3	74 0c		 je	 SHORT $LN7@GetZoomInf
  000b5	83 7d dc 00	 cmp	 DWORD PTR _sizeNum$[ebp], 0
  000b9	74 06		 je	 SHORT $LN7@GetZoomInf
  000bb	83 7d e0 00	 cmp	 DWORD PTR _sizeNum$[ebp+4], 0
  000bf	75 34		 jne	 SHORT $LN5@GetZoomInf
$LN7@GetZoomInf:

; 1517 : 	{
; 1518 : 		di.ZoomNum.cx = di.ZoomNum.cy = di.ZoomDen.cx = di.ZoomDen.cy = 1;

  000c1	8b 45 08	 mov	 eax, DWORD PTR _di$[ebp]
  000c4	c7 40 38 01 00
	00 00		 mov	 DWORD PTR [eax+56], 1
  000cb	8b 4d 08	 mov	 ecx, DWORD PTR _di$[ebp]
  000ce	c7 41 34 01 00
	00 00		 mov	 DWORD PTR [ecx+52], 1
  000d5	8b 55 08	 mov	 edx, DWORD PTR _di$[ebp]
  000d8	c7 42 30 01 00
	00 00		 mov	 DWORD PTR [edx+48], 1
  000df	8b 45 08	 mov	 eax, DWORD PTR _di$[ebp]
  000e2	c7 40 2c 01 00
	00 00		 mov	 DWORD PTR [eax+44], 1

; 1519 : 		di.bZoomed = FALSE;

  000e9	8b 4d 08	 mov	 ecx, DWORD PTR _di$[ebp]
  000ec	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0

; 1520 : 	}

  000f3	eb 26		 jmp	 SHORT $LN1@GetZoomInf
$LN5@GetZoomInf:

; 1521 : 	else if (sizeNum.cx != sizeDen.cx || sizeNum.cy != sizeDen.cy)

  000f5	8b 55 dc	 mov	 edx, DWORD PTR _sizeNum$[ebp]
  000f8	3b 55 ec	 cmp	 edx, DWORD PTR _sizeDen$[ebp]
  000fb	75 08		 jne	 SHORT $LN10@GetZoomInf
  000fd	8b 45 e0	 mov	 eax, DWORD PTR _sizeNum$[ebp+4]
  00100	3b 45 f0	 cmp	 eax, DWORD PTR _sizeDen$[ebp+4]
  00103	74 0c		 je	 SHORT $LN8@GetZoomInf
$LN10@GetZoomInf:

; 1522 : 		di.bZoomed = TRUE;

  00105	8b 4d 08	 mov	 ecx, DWORD PTR _di$[ebp]
  00108	c7 41 24 01 00
	00 00		 mov	 DWORD PTR [ecx+36], 1
  0010f	eb 0a		 jmp	 SHORT $LN1@GetZoomInf
$LN8@GetZoomInf:

; 1523 : 	else
; 1524 : 		di.bZoomed = FALSE;

  00111	8b 55 08	 mov	 edx, DWORD PTR _di$[ebp]
  00114	c7 42 24 00 00
	00 00		 mov	 DWORD PTR [edx+36], 0
$LN1@GetZoomInf:

; 1525 : }

  0011b	52		 push	 edx
  0011c	8b cd		 mov	 ecx, ebp
  0011e	50		 push	 eax
  0011f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN15@GetZoomInf
  00125	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0012a	58		 pop	 eax
  0012b	5a		 pop	 edx
  0012c	5f		 pop	 edi
  0012d	83 c4 28	 add	 esp, 40			; 00000028H
  00130	3b ec		 cmp	 ebp, esp
  00132	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 04 00	 ret	 4
  0013d	0f 1f 00	 npad	 3
$LN15@GetZoomInf:
  00140	02 00 00 00	 DD	 2
  00144	00 00 00 00	 DD	 $LN14@GetZoomInf
$LN14@GetZoomInf:
  00148	ec ff ff ff	 DD	 -20			; ffffffecH
  0014c	08 00 00 00	 DD	 8
  00150	00 00 00 00	 DD	 $LN12@GetZoomInf
  00154	dc ff ff ff	 DD	 -36			; ffffffdcH
  00158	08 00 00 00	 DD	 8
  0015c	00 00 00 00	 DD	 $LN13@GetZoomInf
$LN13@GetZoomInf:
  00160	73		 DB	 115			; 00000073H
  00161	69		 DB	 105			; 00000069H
  00162	7a		 DB	 122			; 0000007aH
  00163	65		 DB	 101			; 00000065H
  00164	4e		 DB	 78			; 0000004eH
  00165	75		 DB	 117			; 00000075H
  00166	6d		 DB	 109			; 0000006dH
  00167	00		 DB	 0
$LN12@GetZoomInf:
  00168	73		 DB	 115			; 00000073H
  00169	69		 DB	 105			; 00000069H
  0016a	7a		 DB	 122			; 0000007aH
  0016b	65		 DB	 101			; 00000065H
  0016c	44		 DB	 68			; 00000044H
  0016d	65		 DB	 101			; 00000065H
  0016e	6e		 DB	 110			; 0000006eH
  0016f	00		 DB	 0
?GetZoomInfo@CComControlBase@ATL@@QAEXAAUATL_DRAWINFO@@@Z ENDP ; ATL::CComControlBase::GetZoomInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ??$AtlModuleRegisterWndClassInfoT@VAtlModuleRegisterWndClassInfoParamW@ATL@@@ATL@@YAGPAU_ATL_BASE_MODULE70@0@PAU_ATL_WIN_MODULE70@0@PAU_ATL_WNDCLASSINFOW@0@PAP6GJPAUHWND__@@IIJ@ZVAtlModuleRegisterWndClassInfoParamW@0@@Z
_TEXT	SEGMENT
tv212 = -172						; size = 4
$T1 = -166						; size = 2
$T2 = -164						; size = 8
$T3 = -154						; size = 2
$T4 = -152						; size = 8
$T5 = -144						; size = 8
_wcTemp$6 = -132					; size = 48
_wc$7 = -76						; size = 48
_proc$8 = -24						; size = 4
_lpsz$9 = -20						; size = 4
_lock$10 = -12						; size = 8
_pBaseModule$ = 8					; size = 4
_pWinModule$ = 12					; size = 4
_p$ = 16						; size = 4
_pProc$ = 20						; size = 4
___formal$ = 24						; size = 1
??$AtlModuleRegisterWndClassInfoT@VAtlModuleRegisterWndClassInfoParamW@ATL@@@ATL@@YAGPAU_ATL_BASE_MODULE70@0@PAU_ATL_WIN_MODULE70@0@PAU_ATL_WNDCLASSINFOW@0@PAP6GJPAUHWND__@@IIJ@ZVAtlModuleRegisterWndClassInfoParamW@0@@Z PROC ; ATL::AtlModuleRegisterWndClassInfoT<ATL::AtlModuleRegisterWndClassInfoParamW>, COMDAT

; 5293 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ac 00 00
	00		 sub	 esp, 172		; 000000acH
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 54 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-172]
  00011	b9 2b 00 00 00	 mov	 ecx, 43			; 0000002bH
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd

; 5294 : 	if (pBaseModule == NULL || pWinModule == NULL || p == NULL || pProc == NULL)

  0001d	83 7d 08 00	 cmp	 DWORD PTR _pBaseModule$[ebp], 0
  00021	74 12		 je	 SHORT $LN3@AtlModuleR
  00023	83 7d 0c 00	 cmp	 DWORD PTR _pWinModule$[ebp], 0
  00027	74 0c		 je	 SHORT $LN3@AtlModuleR
  00029	83 7d 10 00	 cmp	 DWORD PTR _p$[ebp], 0
  0002d	74 06		 je	 SHORT $LN3@AtlModuleR
  0002f	83 7d 14 00	 cmp	 DWORD PTR _pProc$[ebp], 0
  00033	75 61		 jne	 SHORT $LN2@AtlModuleR
$LN3@AtlModuleR:

; 5295 : 	{
; 5296 : 		ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Invalid Arguments to AtlModuleRegisterWndClassInfoT\n"));

  00035	68 00 00 00 00	 push	 OFFSET ??_C@_1HK@LKOJNIEL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@
  0003a	6a 00		 push	 0
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  00041	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<32,0>::operator unsigned int
  00046	50		 push	 eax
  00047	68 b0 14 00 00	 push	 5296			; 000014b0H
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@JEDONBAF@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00051	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00057	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00062	83 c4 10	 add	 esp, 16			; 00000010H

; 5297 : 		ATLASSERT(0);

  00065	33 c0		 xor	 eax, eax
  00067	75 26		 jne	 SHORT $LN15@AtlModuleR
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00073	6a 00		 push	 0
  00075	68 b1 14 00 00	 push	 5297			; 000014b1H
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@EJAAKNNE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0007f	6a 02		 push	 2
  00081	e8 00 00 00 00	 call	 __CrtDbgReportW
  00086	83 c4 18	 add	 esp, 24			; 00000018H
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 01		 jne	 SHORT $LN15@AtlModuleR
  0008e	cc		 int	 3
$LN15@AtlModuleR:

; 5298 : 		return 0;

  0008f	33 c0		 xor	 eax, eax
  00091	e9 14 03 00 00	 jmp	 $LN1@AtlModuleR
$LN2@AtlModuleR:

; 5299 : 	}
; 5300 : 
; 5301 : 	if (p->m_atom == 0)

  00096	8b 55 10	 mov	 edx, DWORD PTR _p$[ebp]
  00099	0f b7 42 40	 movzx	 eax, WORD PTR [edx+64]
  0009d	85 c0		 test	 eax, eax
  0009f	0f 85 8f 02 00
	00		 jne	 $LN4@AtlModuleR

; 5302 : 	{
; 5303 : 		ATL::CComCritSecLock<ATL::CComCriticalSection> lock(pWinModule->m_csWindowCreate, false);

  000a5	6a 00		 push	 0
  000a7	8b 4d 0c	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  000aa	83 c1 04	 add	 ecx, 4
  000ad	51		 push	 ecx
  000ae	8d 4d f4	 lea	 ecx, DWORD PTR _lock$10[ebp]
  000b1	e8 00 00 00 00	 call	 ??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>

; 5304 : 		if (FAILED(lock.Lock()))

  000b6	8d 4d f4	 lea	 ecx, DWORD PTR _lock$10[ebp]
  000b9	e8 00 00 00 00	 call	 ?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
  000be	85 c0		 test	 eax, eax
  000c0	7d 77		 jge	 SHORT $LN5@AtlModuleR

; 5305 : 		{
; 5306 : 			ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Unable to lock critical section in AtlModuleRegisterWndClassInfoT\n"));

  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_1JG@LLDBHFHF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
  000c7	6a 00		 push	 0
  000c9	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  000ce	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<32,0>::operator unsigned int
  000d3	50		 push	 eax
  000d4	68 ba 14 00 00	 push	 5306			; 000014baH
  000d9	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@JEDONBAF@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000de	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  000e4	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000e9	50		 push	 eax
  000ea	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000ef	83 c4 10	 add	 esp, 16			; 00000010H

; 5307 : 			ATLASSERT(0);

  000f2	33 d2		 xor	 edx, edx
  000f4	75 26		 jne	 SHORT $LN16@AtlModuleR
  000f6	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00100	6a 00		 push	 0
  00102	68 bb 14 00 00	 push	 5307			; 000014bbH
  00107	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@EJAAKNNE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0010c	6a 02		 push	 2
  0010e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00113	83 c4 18	 add	 esp, 24			; 00000018H
  00116	83 f8 01	 cmp	 eax, 1
  00119	75 01		 jne	 SHORT $LN16@AtlModuleR
  0011b	cc		 int	 3
$LN16@AtlModuleR:

; 5308 : 			return 0;

  0011c	33 c9		 xor	 ecx, ecx
  0011e	66 89 8d 66 ff
	ff ff		 mov	 WORD PTR $T3[ebp], cx
  00125	8d 4d f4	 lea	 ecx, DWORD PTR _lock$10[ebp]
  00128	e8 00 00 00 00	 call	 ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
  0012d	66 8b 85 66 ff
	ff ff		 mov	 ax, WORD PTR $T3[ebp]
  00134	e9 71 02 00 00	 jmp	 $LN1@AtlModuleR
$LN5@AtlModuleR:

; 5309 : 		}
; 5310 : 		if(p->m_atom == 0)

  00139	8b 55 10	 mov	 edx, DWORD PTR _p$[ebp]
  0013c	0f b7 42 40	 movzx	 eax, WORD PTR [edx+64]
  00140	85 c0		 test	 eax, eax
  00142	0f 85 e4 01 00
	00		 jne	 $LN6@AtlModuleR

; 5311 : 		{
; 5312 : 			if (p->m_lpszOrigName != NULL)

  00148	8b 4d 10	 mov	 ecx, DWORD PTR _p$[ebp]
  0014b	83 79 30 00	 cmp	 DWORD PTR [ecx+48], 0
  0014f	0f 84 fd 00 00
	00		 je	 $LN7@AtlModuleR

; 5313 : 			{
; 5314 : 				ATLASSERT(pProc != NULL);

  00155	83 7d 14 00	 cmp	 DWORD PTR _pProc$[ebp], 0
  00159	75 26		 jne	 SHORT $LN17@AtlModuleR
  0015b	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@LDIEAJMA@?$AAp?$AAP?$AAr?$AAo?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00160	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00165	6a 00		 push	 0
  00167	68 c2 14 00 00	 push	 5314			; 000014c2H
  0016c	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@EJAAKNNE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00171	6a 02		 push	 2
  00173	e8 00 00 00 00	 call	 __CrtDbgReportW
  00178	83 c4 18	 add	 esp, 24			; 00000018H
  0017b	83 f8 01	 cmp	 eax, 1
  0017e	75 01		 jne	 SHORT $LN17@AtlModuleR
  00180	cc		 int	 3
$LN17@AtlModuleR:

; 5315 : 				typename T::PCXSTR lpsz = p->m_wc.lpszClassName;

  00181	8b 45 10	 mov	 eax, DWORD PTR _p$[ebp]
  00184	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00187	89 4d ec	 mov	 DWORD PTR _lpsz$9[ebp], ecx

; 5316 : 				WNDPROC proc = p->m_wc.lpfnWndProc;

  0018a	8b 55 10	 mov	 edx, DWORD PTR _p$[ebp]
  0018d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00190	89 45 e8	 mov	 DWORD PTR _proc$8[ebp], eax

; 5317 : 
; 5318 : 				typename T::WNDCLASSEX wc;
; 5319 : 				wc.cbSize = sizeof(T::WNDCLASSEX);

  00193	c7 45 b4 30 00
	00 00		 mov	 DWORD PTR _wc$7[ebp], 48 ; 00000030H

; 5320 : 				// Try global class
; 5321 : 				if(!T::GetClassInfoEx(NULL, p->m_lpszOrigName, &wc))

  0019a	8d 4d b4	 lea	 ecx, DWORD PTR _wc$7[ebp]
  0019d	51		 push	 ecx
  0019e	8b 55 10	 mov	 edx, DWORD PTR _p$[ebp]
  001a1	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  001a4	50		 push	 eax
  001a5	6a 00		 push	 0
  001a7	e8 00 00 00 00	 call	 ?GetClassInfoExW@AtlModuleRegisterWndClassInfoParamW@ATL@@SAHPAUHINSTANCE__@@PB_WPAUtagWNDCLASSEXW@@@Z ; ATL::AtlModuleRegisterWndClassInfoParamW::GetClassInfoExW
  001ac	83 c4 0c	 add	 esp, 12			; 0000000cH
  001af	85 c0		 test	 eax, eax
  001b1	75 72		 jne	 SHORT $LN9@AtlModuleR

; 5322 : 				{
; 5323 : 					// try process local
; 5324 : 					if(!T::GetClassInfoEx(pBaseModule->m_hInst, p->m_lpszOrigName, &wc))

  001b3	8d 4d b4	 lea	 ecx, DWORD PTR _wc$7[ebp]
  001b6	51		 push	 ecx
  001b7	8b 55 10	 mov	 edx, DWORD PTR _p$[ebp]
  001ba	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  001bd	50		 push	 eax
  001be	8b 4d 08	 mov	 ecx, DWORD PTR _pBaseModule$[ebp]
  001c1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c4	52		 push	 edx
  001c5	e8 00 00 00 00	 call	 ?GetClassInfoExW@AtlModuleRegisterWndClassInfoParamW@ATL@@SAHPAUHINSTANCE__@@PB_WPAUtagWNDCLASSEXW@@@Z ; ATL::AtlModuleRegisterWndClassInfoParamW::GetClassInfoExW
  001ca	83 c4 0c	 add	 esp, 12			; 0000000cH
  001cd	85 c0		 test	 eax, eax
  001cf	75 54		 jne	 SHORT $LN9@AtlModuleR

; 5325 : 					{
; 5326 : 						ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Could not obtain Window Class information for %Ts\n"), p->m_lpszOrigName);

  001d1	8b 45 10	 mov	 eax, DWORD PTR _p$[ebp]
  001d4	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001d7	51		 push	 ecx
  001d8	68 00 00 00 00	 push	 OFFSET ??_C@_1HG@EHFNCEAN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn@
  001dd	6a 00		 push	 0
  001df	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  001e4	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<32,0>::operator unsigned int
  001e9	50		 push	 eax
  001ea	68 ce 14 00 00	 push	 5326			; 000014ceH
  001ef	68 00 00 00 00	 push	 OFFSET ??_C@_0HA@JEDONBAF@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  001f4	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  001fa	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  001ff	50		 push	 eax
  00200	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00205	83 c4 14	 add	 esp, 20			; 00000014H

; 5327 : 						return 0;

  00208	33 d2		 xor	 edx, edx
  0020a	66 89 95 5a ff
	ff ff		 mov	 WORD PTR $T1[ebp], dx
  00211	8d 4d f4	 lea	 ecx, DWORD PTR _lock$10[ebp]
  00214	e8 00 00 00 00	 call	 ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
  00219	66 8b 85 5a ff
	ff ff		 mov	 ax, WORD PTR $T1[ebp]
  00220	e9 85 01 00 00	 jmp	 $LN1@AtlModuleR
$LN9@AtlModuleR:

; 5328 : 					}
; 5329 : 				}
; 5330 : 				p->m_wc = wc;

  00225	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0022a	8d 75 b4	 lea	 esi, DWORD PTR _wc$7[ebp]
  0022d	8b 7d 10	 mov	 edi, DWORD PTR _p$[ebp]
  00230	f3 a5		 rep movsd

; 5331 : 				p->pWndProc = p->m_wc.lpfnWndProc;

  00232	8b 45 10	 mov	 eax, DWORD PTR _p$[ebp]
  00235	8b 4d 10	 mov	 ecx, DWORD PTR _p$[ebp]
  00238	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0023b	89 50 34	 mov	 DWORD PTR [eax+52], edx

; 5332 : 				p->m_wc.lpszClassName = lpsz;

  0023e	8b 45 10	 mov	 eax, DWORD PTR _p$[ebp]
  00241	8b 4d ec	 mov	 ecx, DWORD PTR _lpsz$9[ebp]
  00244	89 48 28	 mov	 DWORD PTR [eax+40], ecx

; 5333 : 				p->m_wc.lpfnWndProc = proc;

  00247	8b 55 10	 mov	 edx, DWORD PTR _p$[ebp]
  0024a	8b 45 e8	 mov	 eax, DWORD PTR _proc$8[ebp]
  0024d	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 5334 : 			}

  00250	eb 3d		 jmp	 SHORT $LN8@AtlModuleR
$LN7@AtlModuleR:

; 5335 : 			else
; 5336 : 			{
; 5337 : 				p->m_wc.hCursor = T::LoadCursor(p->m_bSystemCursor ? NULL : pBaseModule->m_hInstResource,

  00252	8b 4d 10	 mov	 ecx, DWORD PTR _p$[ebp]
  00255	83 79 3c 00	 cmp	 DWORD PTR [ecx+60], 0
  00259	74 0c		 je	 SHORT $LN18@AtlModuleR
  0025b	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv212[ebp], 0
  00265	eb 0c		 jmp	 SHORT $LN19@AtlModuleR
$LN18@AtlModuleR:
  00267	8b 55 08	 mov	 edx, DWORD PTR _pBaseModule$[ebp]
  0026a	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0026d	89 85 54 ff ff
	ff		 mov	 DWORD PTR tv212[ebp], eax
$LN19@AtlModuleR:
  00273	8b 4d 10	 mov	 ecx, DWORD PTR _p$[ebp]
  00276	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  00279	52		 push	 edx
  0027a	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR tv212[ebp]
  00280	50		 push	 eax
  00281	e8 00 00 00 00	 call	 ?LoadCursorW@AtlModuleRegisterWndClassInfoParamW@ATL@@SAPAUHICON__@@PAUHINSTANCE__@@PB_W@Z ; ATL::AtlModuleRegisterWndClassInfoParamW::LoadCursorW
  00286	83 c4 08	 add	 esp, 8
  00289	8b 4d 10	 mov	 ecx, DWORD PTR _p$[ebp]
  0028c	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
$LN8@AtlModuleR:

; 5338 : 					p->m_lpszCursorID);
; 5339 : 			}
; 5340 : 
; 5341 : 			p->m_wc.hInstance = pBaseModule->m_hInst;

  0028f	8b 55 10	 mov	 edx, DWORD PTR _p$[ebp]
  00292	8b 45 08	 mov	 eax, DWORD PTR _pBaseModule$[ebp]
  00295	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00298	89 4a 14	 mov	 DWORD PTR [edx+20], ecx

; 5342 : 			p->m_wc.style &= ~CS_GLOBALCLASS;	// we don't register global classes

  0029b	8b 55 10	 mov	 edx, DWORD PTR _p$[ebp]
  0029e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  002a1	25 ff bf ff ff	 and	 eax, -16385		; ffffbfffH
  002a6	8b 4d 10	 mov	 ecx, DWORD PTR _p$[ebp]
  002a9	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 5343 : 			if (p->m_wc.lpszClassName == NULL)

  002ac	8b 55 10	 mov	 edx, DWORD PTR _p$[ebp]
  002af	83 7a 28 00	 cmp	 DWORD PTR [edx+40], 0
  002b3	75 21		 jne	 SHORT $LN11@AtlModuleR

; 5344 : 			{
; 5345 : 				T::FormatWindowClassName(p->m_szAutoName, _countof(p->m_szAutoName), &p->m_wc);

  002b5	8b 45 10	 mov	 eax, DWORD PTR _p$[ebp]
  002b8	50		 push	 eax
  002b9	6a 25		 push	 37			; 00000025H
  002bb	8b 4d 10	 mov	 ecx, DWORD PTR _p$[ebp]
  002be	83 c1 42	 add	 ecx, 66			; 00000042H
  002c1	51		 push	 ecx
  002c2	e8 00 00 00 00	 call	 ?FormatWindowClassName@AtlModuleRegisterWndClassInfoParamW@ATL@@SAXPA_WKPAX@Z ; ATL::AtlModuleRegisterWndClassInfoParamW::FormatWindowClassName
  002c7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 5346 : 				p->m_wc.lpszClassName = p->m_szAutoName;

  002ca	8b 55 10	 mov	 edx, DWORD PTR _p$[ebp]
  002cd	83 c2 42	 add	 edx, 66			; 00000042H
  002d0	8b 45 10	 mov	 eax, DWORD PTR _p$[ebp]
  002d3	89 50 28	 mov	 DWORD PTR [eax+40], edx
$LN11@AtlModuleR:

; 5347 : 			}
; 5348 : 			typename T::WNDCLASSEX wcTemp;
; 5349 : 			wcTemp = p->m_wc;

  002d6	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  002db	8b 75 10	 mov	 esi, DWORD PTR _p$[ebp]
  002de	8d bd 7c ff ff
	ff		 lea	 edi, DWORD PTR _wcTemp$6[ebp]
  002e4	f3 a5		 rep movsd

; 5350 : 			p->m_atom = static_cast<ATOM>(T::GetClassInfoEx(p->m_wc.hInstance, p->m_wc.lpszClassName, &wcTemp));

  002e6	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _wcTemp$6[ebp]
  002ec	51		 push	 ecx
  002ed	8b 55 10	 mov	 edx, DWORD PTR _p$[ebp]
  002f0	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  002f3	50		 push	 eax
  002f4	8b 4d 10	 mov	 ecx, DWORD PTR _p$[ebp]
  002f7	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  002fa	52		 push	 edx
  002fb	e8 00 00 00 00	 call	 ?GetClassInfoExW@AtlModuleRegisterWndClassInfoParamW@ATL@@SAHPAUHINSTANCE__@@PB_WPAUtagWNDCLASSEXW@@@Z ; ATL::AtlModuleRegisterWndClassInfoParamW::GetClassInfoExW
  00300	83 c4 0c	 add	 esp, 12			; 0000000cH
  00303	8b 4d 10	 mov	 ecx, DWORD PTR _p$[ebp]
  00306	66 89 41 40	 mov	 WORD PTR [ecx+64], ax

; 5351 : 			if (p->m_atom == 0)

  0030a	8b 55 10	 mov	 edx, DWORD PTR _p$[ebp]
  0030d	0f b7 42 40	 movzx	 eax, WORD PTR [edx+64]
  00311	85 c0		 test	 eax, eax
  00313	75 17		 jne	 SHORT $LN6@AtlModuleR

; 5352 : 			{
; 5353 : 				p->m_atom = T::RegisterClassEx(pWinModule, &p->m_wc);

  00315	8b 4d 10	 mov	 ecx, DWORD PTR _p$[ebp]
  00318	51		 push	 ecx
  00319	8b 55 0c	 mov	 edx, DWORD PTR _pWinModule$[ebp]
  0031c	52		 push	 edx
  0031d	e8 00 00 00 00	 call	 ?RegisterClassExW@AtlModuleRegisterWndClassInfoParamW@ATL@@SAGPAU_ATL_WIN_MODULE70@2@PBUtagWNDCLASSEXW@@@Z ; ATL::AtlModuleRegisterWndClassInfoParamW::RegisterClassExW
  00322	83 c4 08	 add	 esp, 8
  00325	8b 4d 10	 mov	 ecx, DWORD PTR _p$[ebp]
  00328	66 89 41 40	 mov	 WORD PTR [ecx+64], ax
$LN6@AtlModuleR:

; 5354 : 			}
; 5355 : 		}
; 5356 : 	}

  0032c	8d 4d f4	 lea	 ecx, DWORD PTR _lock$10[ebp]
  0032f	e8 00 00 00 00	 call	 ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
$LN4@AtlModuleR:

; 5357 : 
; 5358 : 	if (p->m_lpszOrigName != NULL)

  00334	8b 55 10	 mov	 edx, DWORD PTR _p$[ebp]
  00337	83 7a 30 00	 cmp	 DWORD PTR [edx+48], 0
  0033b	74 66		 je	 SHORT $LN13@AtlModuleR

; 5359 : 	{
; 5360 : 		ATLASSERT(pProc != NULL);

  0033d	83 7d 14 00	 cmp	 DWORD PTR _pProc$[ebp], 0
  00341	75 26		 jne	 SHORT $LN20@AtlModuleR
  00343	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@LDIEAJMA@?$AAp?$AAP?$AAr?$AAo?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00348	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0034d	6a 00		 push	 0
  0034f	68 f0 14 00 00	 push	 5360			; 000014f0H
  00354	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@EJAAKNNE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00359	6a 02		 push	 2
  0035b	e8 00 00 00 00	 call	 __CrtDbgReportW
  00360	83 c4 18	 add	 esp, 24			; 00000018H
  00363	83 f8 01	 cmp	 eax, 1
  00366	75 01		 jne	 SHORT $LN20@AtlModuleR
  00368	cc		 int	 3
$LN20@AtlModuleR:

; 5361 : 		ATLASSERT(p->pWndProc != NULL);

  00369	8b 4d 10	 mov	 ecx, DWORD PTR _p$[ebp]
  0036c	83 79 34 00	 cmp	 DWORD PTR [ecx+52], 0
  00370	75 26		 jne	 SHORT $LN21@AtlModuleR
  00372	68 00 00 00 00	 push	 OFFSET ??_C@_1CC@GCJALPHP@?$AAp?$AA?9?$AA?$DO?$AAp?$AAW?$AAn?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5@
  00377	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0037c	6a 00		 push	 0
  0037e	68 f1 14 00 00	 push	 5361			; 000014f1H
  00383	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@EJAAKNNE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00388	6a 02		 push	 2
  0038a	e8 00 00 00 00	 call	 __CrtDbgReportW
  0038f	83 c4 18	 add	 esp, 24			; 00000018H
  00392	83 f8 01	 cmp	 eax, 1
  00395	75 01		 jne	 SHORT $LN21@AtlModuleR
  00397	cc		 int	 3
$LN21@AtlModuleR:

; 5362 : 		*pProc = p->pWndProc;

  00398	8b 45 14	 mov	 eax, DWORD PTR _pProc$[ebp]
  0039b	8b 4d 10	 mov	 ecx, DWORD PTR _p$[ebp]
  0039e	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  003a1	89 10		 mov	 DWORD PTR [eax], edx
$LN13@AtlModuleR:

; 5363 : 	}
; 5364 : 	return p->m_atom;

  003a3	8b 45 10	 mov	 eax, DWORD PTR _p$[ebp]
  003a6	66 8b 40 40	 mov	 ax, WORD PTR [eax+64]
$LN1@AtlModuleR:

; 5365 : }

  003aa	52		 push	 edx
  003ab	8b cd		 mov	 ecx, ebp
  003ad	50		 push	 eax
  003ae	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN26@AtlModuleR
  003b4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  003b9	58		 pop	 eax
  003ba	5a		 pop	 edx
  003bb	5f		 pop	 edi
  003bc	5e		 pop	 esi
  003bd	81 c4 ac 00 00
	00		 add	 esp, 172		; 000000acH
  003c3	3b ec		 cmp	 ebp, esp
  003c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003ca	8b e5		 mov	 esp, ebp
  003cc	5d		 pop	 ebp
  003cd	c3		 ret	 0
  003ce	66 90		 npad	 2
$LN26@AtlModuleR:
  003d0	03 00 00 00	 DD	 3
  003d4	00 00 00 00	 DD	 $LN25@AtlModuleR
$LN25@AtlModuleR:
  003d8	f4 ff ff ff	 DD	 -12			; fffffff4H
  003dc	08 00 00 00	 DD	 8
  003e0	00 00 00 00	 DD	 $LN22@AtlModuleR
  003e4	b4 ff ff ff	 DD	 -76			; ffffffb4H
  003e8	30 00 00 00	 DD	 48			; 00000030H
  003ec	00 00 00 00	 DD	 $LN23@AtlModuleR
  003f0	7c ff ff ff	 DD	 -132			; ffffff7cH
  003f4	30 00 00 00	 DD	 48			; 00000030H
  003f8	00 00 00 00	 DD	 $LN24@AtlModuleR
$LN24@AtlModuleR:
  003fc	77		 DB	 119			; 00000077H
  003fd	63		 DB	 99			; 00000063H
  003fe	54		 DB	 84			; 00000054H
  003ff	65		 DB	 101			; 00000065H
  00400	6d		 DB	 109			; 0000006dH
  00401	70		 DB	 112			; 00000070H
  00402	00		 DB	 0
$LN23@AtlModuleR:
  00403	77		 DB	 119			; 00000077H
  00404	63		 DB	 99			; 00000063H
  00405	00		 DB	 0
$LN22@AtlModuleR:
  00406	6c		 DB	 108			; 0000006cH
  00407	6f		 DB	 111			; 0000006fH
  00408	63		 DB	 99			; 00000063H
  00409	6b		 DB	 107			; 0000006bH
  0040a	00		 DB	 0
??$AtlModuleRegisterWndClassInfoT@VAtlModuleRegisterWndClassInfoParamW@ATL@@@ATL@@YAGPAU_ATL_BASE_MODULE70@0@PAU_ATL_WIN_MODULE70@0@PAU_ATL_WNDCLASSINFOW@0@PAP6GJPAUHWND__@@IIJ@ZVAtlModuleRegisterWndClassInfoParamW@0@@Z ENDP ; ATL::AtlModuleRegisterWndClassInfoT<ATL::AtlModuleRegisterWndClassInfoParamW>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?RegisterClassExW@AtlModuleRegisterWndClassInfoParamW@ATL@@SAGPAU_ATL_WIN_MODULE70@2@PBUtagWNDCLASSEXW@@@Z
_TEXT	SEGMENT
_pWinModule$ = 8					; size = 4
_lpwcx$ = 12						; size = 4
?RegisterClassExW@AtlModuleRegisterWndClassInfoParamW@ATL@@SAGPAU_ATL_WIN_MODULE70@2@PBUtagWNDCLASSEXW@@@Z PROC ; ATL::AtlModuleRegisterWndClassInfoParamW::RegisterClassExW, COMDAT

; 5246 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 5247 : 		return AtlWinModuleRegisterClassExW(pWinModule, lpwcx);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _lpwcx$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ?AtlWinModuleRegisterClassExW@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PBUtagWNDCLASSEXW@@@Z ; ATL::AtlWinModuleRegisterClassExW

; 5248 : 	}

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?RegisterClassExW@AtlModuleRegisterWndClassInfoParamW@ATL@@SAGPAU_ATL_WIN_MODULE70@2@PBUtagWNDCLASSEXW@@@Z ENDP ; ATL::AtlModuleRegisterWndClassInfoParamW::RegisterClassExW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?LoadCursorW@AtlModuleRegisterWndClassInfoParamW@ATL@@SAPAUHICON__@@PAUHINSTANCE__@@PB_W@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_lpCursorName$ = 12					; size = 4
?LoadCursorW@AtlModuleRegisterWndClassInfoParamW@ATL@@SAPAUHICON__@@PAUHINSTANCE__@@PB_W@Z PROC ; ATL::AtlModuleRegisterWndClassInfoParamW::LoadCursorW, COMDAT

; 5239 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 5240 : 		return ::LoadCursorW(hInstance, lpCursorName);

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR _lpCursorName$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _hInstance$[ebp]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorW@8
  00014	3b f4		 cmp	 esi, esp
  00016	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 5241 : 	}

  0001b	5e		 pop	 esi
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?LoadCursorW@AtlModuleRegisterWndClassInfoParamW@ATL@@SAPAUHICON__@@PAUHINSTANCE__@@PB_W@Z ENDP ; ATL::AtlModuleRegisterWndClassInfoParamW::LoadCursorW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?FormatWindowClassName@AtlModuleRegisterWndClassInfoParamW@ATL@@SAXPA_WKPAX@Z
_TEXT	SEGMENT
_szBuffer$ = 8						; size = 4
_dwBuffSize$ = 12					; size = 4
_unique$ = 16						; size = 4
?FormatWindowClassName@AtlModuleRegisterWndClassInfoParamW@ATL@@SAXPA_WKPAX@Z PROC ; ATL::AtlModuleRegisterWndClassInfoParamW::FormatWindowClassName, COMDAT

; 5232 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 5233 : 		swprintf_s(szBuffer, dwBuffSize, L"ATL:%p", unique);

  00003	8b 45 10	 mov	 eax, DWORD PTR _unique$[ebp]
  00006	50		 push	 eax
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_1O@GBFKGNEO@?$AAA?$AAT?$AAL?$AA?3?$AA?$CF?$AAp@
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _dwBuffSize$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 08	 mov	 edx, DWORD PTR _szBuffer$[ebp]
  00013	52		 push	 edx
  00014	e8 00 00 00 00	 call	 _swprintf_s
  00019	83 c4 10	 add	 esp, 16			; 00000010H

; 5234 : 	}

  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?FormatWindowClassName@AtlModuleRegisterWndClassInfoParamW@ATL@@SAXPA_WKPAX@Z ENDP ; ATL::AtlModuleRegisterWndClassInfoParamW::FormatWindowClassName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?GetClassInfoExW@AtlModuleRegisterWndClassInfoParamW@ATL@@SAHPAUHINSTANCE__@@PB_WPAUtagWNDCLASSEXW@@@Z
_TEXT	SEGMENT
_hinst$ = 8						; size = 4
_lpszClass$ = 12					; size = 4
_lpwcx$ = 16						; size = 4
?GetClassInfoExW@AtlModuleRegisterWndClassInfoParamW@ATL@@SAHPAUHINSTANCE__@@PB_WPAUtagWNDCLASSEXW@@@Z PROC ; ATL::AtlModuleRegisterWndClassInfoParamW::GetClassInfoExW, COMDAT

; 5209 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 5210 : 		return ::GetClassInfoExW(hinst, lpszClass, lpwcx);

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 10	 mov	 eax, DWORD PTR _lpwcx$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR _lpszClass$[ebp]
  0000d	51		 push	 ecx
  0000e	8b 55 08	 mov	 edx, DWORD PTR _hinst$[ebp]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClassInfoExW@12
  00018	3b f4		 cmp	 esi, esp
  0001a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 5211 : 	}

  0001f	5e		 pop	 esi
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?GetClassInfoExW@AtlModuleRegisterWndClassInfoParamW@ATL@@SAHPAUHINSTANCE__@@PB_WPAUtagWNDCLASSEXW@@@Z ENDP ; ATL::AtlModuleRegisterWndClassInfoParamW::GetClassInfoExW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IAdviseSink>::~CComPtr<IAdviseSink>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIAdviseSink@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IAdviseSink>::~CComPtrBase<IAdviseSink>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IAdviseSink>::~CComPtr<IAdviseSink>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??4?$CComPtr@UIAdviseSink@@@ATL@@QAEPAUIAdviseSink@@PAU2@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??4?$CComPtr@UIAdviseSink@@@ATL@@QAEPAUIAdviseSink@@PAU2@@Z PROC ; ATL::CComPtr<IAdviseSink>::operator=, COMDAT
; _this$ = ecx

; 328  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 329  :         if(this->p!=lp)

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	3b 4d 08	 cmp	 ecx, DWORD PTR _lp$[ebp]
  0001f	74 1f		 je	 SHORT $LN2@operator

; 330  :         {
; 331  :             CComPtr(lp).Swap(*this);

  00021	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00024	52		 push	 edx
  00025	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]
  00028	50		 push	 eax
  00029	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  0002c	e8 00 00 00 00	 call	 ??0?$CComPtr@UIAdviseSink@@@ATL@@QAE@PAUIAdviseSink@@@Z ; ATL::CComPtr<IAdviseSink>::CComPtr<IAdviseSink>
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ?Swap@?$CComPtrBase@UIAdviseSink@@@ATL@@IAEXAAV12@@Z ; ATL::CComPtrBase<IAdviseSink>::Swap
  00038	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003b	e8 00 00 00 00	 call	 ??1?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ
$LN2@operator:

; 332  :         }
; 333  :         return *this;

  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAUIAdviseSink@@XZ ; ATL::CComPtrBase<IAdviseSink>::operator IAdviseSink *

; 334  :     }

  00048	83 c4 08	 add	 esp, 8
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??4?$CComPtr@UIAdviseSink@@@ATL@@QAEPAUIAdviseSink@@PAU2@@Z ENDP ; ATL::CComPtr<IAdviseSink>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIAdviseSink@@@ATL@@QAE@PAUIAdviseSink@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtr@UIAdviseSink@@@ATL@@QAE@PAUIAdviseSink@@@Z PROC ; ATL::CComPtr<IAdviseSink>::CComPtr<IAdviseSink>, COMDAT
; _this$ = ecx

; 321  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 320  :         CComPtrBase<T>(lp)

  0000e	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIAdviseSink@@@ATL@@IAE@PAUIAdviseSink@@@Z ; ATL::CComPtrBase<IAdviseSink>::CComPtrBase<IAdviseSink>

; 322  :     }

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$CComPtr@UIAdviseSink@@@ATL@@QAE@PAUIAdviseSink@@@Z ENDP ; ATL::CComPtr<IAdviseSink>::CComPtr<IAdviseSink>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?Release@?$CComPtrBase@UIAdviseSink@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pTemp$ = -8						; size = 4
_this$ = -4						; size = 4
?Release@?$CComPtrBase@UIAdviseSink@@@ATL@@QAEXXZ PROC	; ATL::CComPtrBase<IAdviseSink>::Release, COMDAT
; _this$ = ecx

; 228  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 229  :         T* pTemp = p;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001d	89 4d f8	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 230  :         if (pTemp)

  00020	83 7d f8 00	 cmp	 DWORD PTR _pTemp$[ebp], 0
  00024	74 20		 je	 SHORT $LN1@Release

; 231  :         {
; 232  :             p = NULL;

  00026	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00029	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 233  :             pTemp->Release();

  0002f	8b 45 f8	 mov	 eax, DWORD PTR _pTemp$[ebp]
  00032	8b 08		 mov	 ecx, DWORD PTR [eax]
  00034	8b f4		 mov	 esi, esp
  00036	8b 55 f8	 mov	 edx, DWORD PTR _pTemp$[ebp]
  00039	52		 push	 edx
  0003a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0003d	ff d0		 call	 eax
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Release:

; 234  :         }
; 235  :     }

  00046	5e		 pop	 esi
  00047	83 c4 08	 add	 esp, 8
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
?Release@?$CComPtrBase@UIAdviseSink@@@ATL@@QAEXXZ ENDP	; ATL::CComPtrBase<IAdviseSink>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAdviseSink@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAdviseSink@@@1@XZ PROC ; ATL::CComPtrBase<IAdviseSink>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAdviseSink@@@1@XZ ENDP ; ATL::CComPtrBase<IAdviseSink>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAUIAdviseSink@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAUIAdviseSink@@XZ PROC ; ATL::CComPtrBase<IAdviseSink>::operator IAdviseSink *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAUIAdviseSink@@XZ ENDP ; ATL::CComPtrBase<IAdviseSink>::operator IAdviseSink *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIAdviseSink@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIAdviseSink@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IAdviseSink>::~CComPtrBase<IAdviseSink>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIAdviseSink@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IAdviseSink>::~CComPtrBase<IAdviseSink>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?Swap@?$CComPtrBase@UIAdviseSink@@@ATL@@IAEXAAV12@@Z
_TEXT	SEGMENT
_pTemp$ = -8						; size = 4
_this$ = -4						; size = 4
_other$ = 8						; size = 4
?Swap@?$CComPtrBase@UIAdviseSink@@@ATL@@IAEXAAV12@@Z PROC ; ATL::CComPtrBase<IAdviseSink>::Swap, COMDAT
; _this$ = ecx

; 174  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 175  :         T* pTemp = p;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 4d f8	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 176  :         p = other.p;

  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	8b 45 08	 mov	 eax, DWORD PTR _other$[ebp]
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	89 0a		 mov	 DWORD PTR [edx], ecx

; 177  :         other.p = pTemp;

  00029	8b 55 08	 mov	 edx, DWORD PTR _other$[ebp]
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _pTemp$[ebp]
  0002f	89 02		 mov	 DWORD PTR [edx], eax

; 178  :     }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
?Swap@?$CComPtrBase@UIAdviseSink@@@ATL@@IAEXAAV12@@Z ENDP ; ATL::CComPtrBase<IAdviseSink>::Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIAdviseSink@@@ATL@@IAE@PAUIAdviseSink@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtrBase@UIAdviseSink@@@ATL@@IAE@PAUIAdviseSink@@@Z PROC ; ATL::CComPtrBase<IAdviseSink>::CComPtrBase<IAdviseSink>, COMDAT
; _this$ = ecx

; 167  :     CComPtrBase(_Inout_opt_ T* lp) throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 168  :     {
; 169  :         p = lp;

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _lp$[ebp]
  00015	89 08		 mov	 DWORD PTR [eax], ecx

; 170  :         if (p != NULL)

  00017	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0001d	74 1b		 je	 SHORT $LN1@CComPtrBas

; 171  :             p->AddRef();

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 08		 mov	 ecx, DWORD PTR [eax]
  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	8b 02		 mov	 eax, DWORD PTR [edx]
  00029	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0002b	8b f4		 mov	 esi, esp
  0002d	50		 push	 eax
  0002e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00031	ff d2		 call	 edx
  00033	3b f4		 cmp	 esi, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 172  :     }

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	5e		 pop	 esi
  0003e	83 c4 04	 add	 esp, 4
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
??0?$CComPtrBase@UIAdviseSink@@@ATL@@IAE@PAUIAdviseSink@@@Z ENDP ; ATL::CComPtrBase<IAdviseSink>::CComPtrBase<IAdviseSink>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IPersistStreamInit>::~CComPtr<IPersistStreamInit>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IPersistStreamInit>::~CComPtrBase<IPersistStreamInit>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IPersistStreamInit>::~CComPtr<IPersistStreamInit>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IPersistStreamInit>::CComPtr<IPersistStreamInit>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIPersistStreamInit@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IPersistStreamInit>::CComPtrBase<IPersistStreamInit>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IPersistStreamInit>::CComPtr<IPersistStreamInit>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??8?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBE_NPAUIPersistStreamInit@@@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBE_NPAUIPersistStreamInit@@@Z PROC ; ATL::CComPtrBase<IPersistStreamInit>::operator==, COMDAT
; _this$ = ecx

; 222  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 223  :         return p == pT;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	3b 4d 08	 cmp	 ecx, DWORD PTR _pT$[ebp]
  0001f	75 09		 jne	 SHORT $LN3@operator
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@operator:
  00031	8a 45 f8	 mov	 al, BYTE PTR tv66[ebp]

; 224  :     }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??8?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBE_NPAUIPersistStreamInit@@@Z ENDP ; ATL::CComPtrBase<IPersistStreamInit>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??9?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBE_NPAUIPersistStreamInit@@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??9?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBE_NPAUIPersistStreamInit@@@Z PROC ; ATL::CComPtrBase<IPersistStreamInit>::operator!=, COMDAT
; _this$ = ecx

; 217  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  :         return !operator==(pT);

  00017	8b 45 08	 mov	 eax, DWORD PTR _pT$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBE_NPAUIPersistStreamInit@@@Z ; ATL::CComPtrBase<IPersistStreamInit>::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]

; 219  :     }

  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBE_NPAUIPersistStreamInit@@@Z ENDP ; ATL::CComPtrBase<IPersistStreamInit>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStreamInit@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStreamInit@@@1@XZ PROC ; ATL::CComPtrBase<IPersistStreamInit>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStreamInit@@@1@XZ ENDP ; ATL::CComPtrBase<IPersistStreamInit>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IPersistStreamInit>::~CComPtrBase<IPersistStreamInit>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IPersistStreamInit>::~CComPtrBase<IPersistStreamInit>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIPersistStreamInit@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIPersistStreamInit@@@ATL@@IAE@XZ PROC	; ATL::CComPtrBase<IPersistStreamInit>::CComPtrBase<IPersistStreamInit>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIPersistStreamInit@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IPersistStreamInit>::CComPtrBase<IPersistStreamInit>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIStream@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IStream>::~CComPtr<IStream>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IStream>::~CComPtrBase<IStream>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIStream@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IStream>::~CComPtr<IStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIStream@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IStream>::CComPtr<IStream>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IStream>::CComPtrBase<IStream>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIStream@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IStream>::CComPtr<IStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ PROC ; ATL::CComPtrBase<IStream>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ ENDP ; ATL::CComPtrBase<IStream>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ PROC	; ATL::CComPtrBase<IStream>::operator IStream *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ ENDP	; ATL::CComPtrBase<IStream>::operator IStream *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ PROC		; ATL::CComPtrBase<IStream>::~CComPtrBase<IStream>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<IStream>::~CComPtrBase<IStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ PROC		; ATL::CComPtrBase<IStream>::CComPtrBase<IStream>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<IStream>::CComPtrBase<IStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IOleClientSite>::~CComPtr<IOleClientSite>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIOleClientSite@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleClientSite>::~CComPtrBase<IOleClientSite>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IOleClientSite>::~CComPtr<IOleClientSite>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??4?$CComPtr@UIOleClientSite@@@ATL@@QAEPAUIOleClientSite@@PAU2@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??4?$CComPtr@UIOleClientSite@@@ATL@@QAEPAUIOleClientSite@@PAU2@@Z PROC ; ATL::CComPtr<IOleClientSite>::operator=, COMDAT
; _this$ = ecx

; 328  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 329  :         if(this->p!=lp)

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	3b 4d 08	 cmp	 ecx, DWORD PTR _lp$[ebp]
  0001f	74 1f		 je	 SHORT $LN2@operator

; 330  :         {
; 331  :             CComPtr(lp).Swap(*this);

  00021	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00024	52		 push	 edx
  00025	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]
  00028	50		 push	 eax
  00029	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  0002c	e8 00 00 00 00	 call	 ??0?$CComPtr@UIOleClientSite@@@ATL@@QAE@PAUIOleClientSite@@@Z ; ATL::CComPtr<IOleClientSite>::CComPtr<IOleClientSite>
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ?Swap@?$CComPtrBase@UIOleClientSite@@@ATL@@IAEXAAV12@@Z ; ATL::CComPtrBase<IOleClientSite>::Swap
  00038	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003b	e8 00 00 00 00	 call	 ??1?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ
$LN2@operator:

; 332  :         }
; 333  :         return *this;

  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *

; 334  :     }

  00048	83 c4 08	 add	 esp, 8
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??4?$CComPtr@UIOleClientSite@@@ATL@@QAEPAUIOleClientSite@@PAU2@@Z ENDP ; ATL::CComPtr<IOleClientSite>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIOleClientSite@@@ATL@@QAE@PAUIOleClientSite@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtr@UIOleClientSite@@@ATL@@QAE@PAUIOleClientSite@@@Z PROC ; ATL::CComPtr<IOleClientSite>::CComPtr<IOleClientSite>, COMDAT
; _this$ = ecx

; 321  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 320  :         CComPtrBase<T>(lp)

  0000e	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIOleClientSite@@@ATL@@IAE@PAUIOleClientSite@@@Z ; ATL::CComPtrBase<IOleClientSite>::CComPtrBase<IOleClientSite>

; 322  :     }

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$CComPtr@UIOleClientSite@@@ATL@@QAE@PAUIOleClientSite@@@Z ENDP ; ATL::CComPtr<IOleClientSite>::CComPtr<IOleClientSite>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?IsEqualObject@?$CComPtrBase@UIOleClientSite@@@ATL@@QAE_NPAUIUnknown@@@Z
_TEXT	SEGMENT
$T1 = -29						; size = 1
_punk2$ = -24						; size = 4
_punk1$ = -12						; size = 4
_this$ = -4						; size = 4
_pOther$ = 8						; size = 4
?IsEqualObject@?$CComPtrBase@UIOleClientSite@@@ATL@@QAE_NPAUIUnknown@@@Z PROC ; ATL::CComPtrBase<IOleClientSite>::IsEqualObject, COMDAT
; _this$ = ecx

; 597  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00012	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00015	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00018	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001b	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001e	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00021	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00024	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 598  :     if (p == NULL && pOther == NULL)

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0002d	75 0d		 jne	 SHORT $LN2@IsEqualObj
  0002f	83 7d 08 00	 cmp	 DWORD PTR _pOther$[ebp], 0
  00033	75 07		 jne	 SHORT $LN2@IsEqualObj

; 599  :         return true;	// They are both NULL objects

  00035	b0 01		 mov	 al, 1
  00037	e9 98 00 00 00	 jmp	 $LN1@IsEqualObj
$LN2@IsEqualObj:

; 600  : 
; 601  :     if (p == NULL || pOther == NULL)

  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00042	74 06		 je	 SHORT $LN4@IsEqualObj
  00044	83 7d 08 00	 cmp	 DWORD PTR _pOther$[ebp], 0
  00048	75 07		 jne	 SHORT $LN3@IsEqualObj
$LN4@IsEqualObj:

; 602  :         return false;	// One is NULL the other is not

  0004a	32 c0		 xor	 al, al
  0004c	e9 83 00 00 00	 jmp	 $LN1@IsEqualObj
$LN3@IsEqualObj:

; 603  : 
; 604  :     CComPtr<IUnknown> punk1;

  00051	8d 4d f4	 lea	 ecx, DWORD PTR _punk1$[ebp]
  00054	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 605  :     CComPtr<IUnknown> punk2;

  00059	8d 4d e8	 lea	 ecx, DWORD PTR _punk2$[ebp]
  0005c	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 606  :     p->QueryInterface(__uuidof(IUnknown), (void**)&punk1);

  00061	8d 4d f4	 lea	 ecx, DWORD PTR _punk1$[ebp]
  00064	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
  00069	8b f4		 mov	 esi, esp
  0006b	50		 push	 eax
  0006c	68 00 00 00 00	 push	 OFFSET __GUID_00000000_0000_0000_c000_000000000046
  00071	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00074	8b 02		 mov	 eax, DWORD PTR [edx]
  00076	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007b	8b 00		 mov	 eax, DWORD PTR [eax]
  0007d	52		 push	 edx
  0007e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00080	ff d1		 call	 ecx
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 607  :     pOther->QueryInterface(__uuidof(IUnknown), (void**)&punk2);

  00089	8d 4d e8	 lea	 ecx, DWORD PTR _punk2$[ebp]
  0008c	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
  00091	8b f4		 mov	 esi, esp
  00093	50		 push	 eax
  00094	68 00 00 00 00	 push	 OFFSET __GUID_00000000_0000_0000_c000_000000000046
  00099	8b 55 08	 mov	 edx, DWORD PTR _pOther$[ebp]
  0009c	8b 02		 mov	 eax, DWORD PTR [edx]
  0009e	8b 4d 08	 mov	 ecx, DWORD PTR _pOther$[ebp]
  000a1	51		 push	 ecx
  000a2	8b 10		 mov	 edx, DWORD PTR [eax]
  000a4	ff d2		 call	 edx
  000a6	3b f4		 cmp	 esi, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 608  :     return punk1 == punk2;

  000ad	8d 4d e8	 lea	 ecx, DWORD PTR _punk2$[ebp]
  000b0	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
  000b5	50		 push	 eax
  000b6	8d 4d f4	 lea	 ecx, DWORD PTR _punk1$[ebp]
  000b9	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z ; ATL::CComPtrBase<IUnknown>::operator==
  000be	88 45 e3	 mov	 BYTE PTR $T1[ebp], al
  000c1	8d 4d e8	 lea	 ecx, DWORD PTR _punk2$[ebp]
  000c4	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
  000c9	8d 4d f4	 lea	 ecx, DWORD PTR _punk1$[ebp]
  000cc	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
  000d1	8a 45 e3	 mov	 al, BYTE PTR $T1[ebp]
$LN1@IsEqualObj:

; 609  : }

  000d4	52		 push	 edx
  000d5	8b cd		 mov	 ecx, ebp
  000d7	50		 push	 eax
  000d8	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@IsEqualObj
  000de	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e3	58		 pop	 eax
  000e4	5a		 pop	 edx
  000e5	5e		 pop	 esi
  000e6	83 c4 20	 add	 esp, 32			; 00000020H
  000e9	3b ec		 cmp	 ebp, esp
  000eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c2 04 00	 ret	 4
  000f6	66 90		 npad	 2
$LN9@IsEqualObj:
  000f8	02 00 00 00	 DD	 2
  000fc	00 00 00 00	 DD	 $LN8@IsEqualObj
$LN8@IsEqualObj:
  00100	f4 ff ff ff	 DD	 -12			; fffffff4H
  00104	04 00 00 00	 DD	 4
  00108	00 00 00 00	 DD	 $LN6@IsEqualObj
  0010c	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00110	04 00 00 00	 DD	 4
  00114	00 00 00 00	 DD	 $LN7@IsEqualObj
$LN7@IsEqualObj:
  00118	70		 DB	 112			; 00000070H
  00119	75		 DB	 117			; 00000075H
  0011a	6e		 DB	 110			; 0000006eH
  0011b	6b		 DB	 107			; 0000006bH
  0011c	32		 DB	 50			; 00000032H
  0011d	00		 DB	 0
$LN6@IsEqualObj:
  0011e	70		 DB	 112			; 00000070H
  0011f	75		 DB	 117			; 00000075H
  00120	6e		 DB	 110			; 0000006eH
  00121	6b		 DB	 107			; 0000006bH
  00122	31		 DB	 49			; 00000031H
  00123	00		 DB	 0
?IsEqualObject@?$CComPtrBase@UIOleClientSite@@@ATL@@QAE_NPAUIUnknown@@@Z ENDP ; ATL::CComPtrBase<IOleClientSite>::IsEqualObject
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??8?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NPAUIOleClientSite@@@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NPAUIOleClientSite@@@Z PROC ; ATL::CComPtrBase<IOleClientSite>::operator==, COMDAT
; _this$ = ecx

; 222  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 223  :         return p == pT;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	3b 4d 08	 cmp	 ecx, DWORD PTR _pT$[ebp]
  0001f	75 09		 jne	 SHORT $LN3@operator
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@operator:
  00031	8a 45 f8	 mov	 al, BYTE PTR tv66[ebp]

; 224  :     }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??8?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NPAUIOleClientSite@@@Z ENDP ; ATL::CComPtrBase<IOleClientSite>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??9?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NPAUIOleClientSite@@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??9?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NPAUIOleClientSite@@@Z PROC ; ATL::CComPtrBase<IOleClientSite>::operator!=, COMDAT
; _this$ = ecx

; 217  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  :         return !operator==(pT);

  00017	8b 45 08	 mov	 eax, DWORD PTR _pT$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NPAUIOleClientSite@@@Z ; ATL::CComPtrBase<IOleClientSite>::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]

; 219  :     }

  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NPAUIOleClientSite@@@Z ENDP ; ATL::CComPtrBase<IOleClientSite>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??7?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
??7?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NXZ PROC	; ATL::CComPtrBase<IOleClientSite>::operator!, COMDAT
; _this$ = ecx

; 208  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 209  :         return (p == NULL);

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001d	75 09		 jne	 SHORT $LN3@operator
  0001f	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00026	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@operator:
  0002f	8a 45 f8	 mov	 al, BYTE PTR tv66[ebp]

; 210  :     }

  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
??7?$CComPtrBase@UIOleClientSite@@@ATL@@QBE_NXZ ENDP	; ATL::CComPtrBase<IOleClientSite>::operator!
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleClientSite@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleClientSite@@@1@XZ PROC ; ATL::CComPtrBase<IOleClientSite>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleClientSite@@@1@XZ ENDP ; ATL::CComPtrBase<IOleClientSite>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ PROC ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ENDP ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIOleClientSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIOleClientSite@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IOleClientSite>::~CComPtrBase<IOleClientSite>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIOleClientSite@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IOleClientSite>::~CComPtrBase<IOleClientSite>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?Swap@?$CComPtrBase@UIOleClientSite@@@ATL@@IAEXAAV12@@Z
_TEXT	SEGMENT
_pTemp$ = -8						; size = 4
_this$ = -4						; size = 4
_other$ = 8						; size = 4
?Swap@?$CComPtrBase@UIOleClientSite@@@ATL@@IAEXAAV12@@Z PROC ; ATL::CComPtrBase<IOleClientSite>::Swap, COMDAT
; _this$ = ecx

; 174  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 175  :         T* pTemp = p;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 4d f8	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 176  :         p = other.p;

  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	8b 45 08	 mov	 eax, DWORD PTR _other$[ebp]
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	89 0a		 mov	 DWORD PTR [edx], ecx

; 177  :         other.p = pTemp;

  00029	8b 55 08	 mov	 edx, DWORD PTR _other$[ebp]
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _pTemp$[ebp]
  0002f	89 02		 mov	 DWORD PTR [edx], eax

; 178  :     }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
?Swap@?$CComPtrBase@UIOleClientSite@@@ATL@@IAEXAAV12@@Z ENDP ; ATL::CComPtrBase<IOleClientSite>::Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIOleClientSite@@@ATL@@IAE@PAUIOleClientSite@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtrBase@UIOleClientSite@@@ATL@@IAE@PAUIOleClientSite@@@Z PROC ; ATL::CComPtrBase<IOleClientSite>::CComPtrBase<IOleClientSite>, COMDAT
; _this$ = ecx

; 167  :     CComPtrBase(_Inout_opt_ T* lp) throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 168  :     {
; 169  :         p = lp;

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _lp$[ebp]
  00015	89 08		 mov	 DWORD PTR [eax], ecx

; 170  :         if (p != NULL)

  00017	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0001d	74 1b		 je	 SHORT $LN1@CComPtrBas

; 171  :             p->AddRef();

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 08		 mov	 ecx, DWORD PTR [eax]
  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	8b 02		 mov	 eax, DWORD PTR [edx]
  00029	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0002b	8b f4		 mov	 esi, esp
  0002d	50		 push	 eax
  0002e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00031	ff d2		 call	 edx
  00033	3b f4		 cmp	 esi, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 172  :     }

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	5e		 pop	 esi
  0003e	83 c4 04	 add	 esp, 4
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
??0?$CComPtrBase@UIOleClientSite@@@ATL@@IAE@PAUIOleClientSite@@@Z ENDP ; ATL::CComPtrBase<IOleClientSite>::CComPtrBase<IOleClientSite>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IViewObjectEx>::~CComPtr<IViewObjectEx>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIViewObjectEx@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IViewObjectEx>::~CComPtrBase<IViewObjectEx>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IViewObjectEx>::~CComPtr<IViewObjectEx>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IViewObjectEx>::CComPtr<IViewObjectEx>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIViewObjectEx@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IViewObjectEx>::CComPtrBase<IViewObjectEx>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IViewObjectEx>::CComPtr<IViewObjectEx>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??8?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z PROC ; ATL::CComPtrBase<IViewObjectEx>::operator==, COMDAT
; _this$ = ecx

; 222  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 223  :         return p == pT;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	3b 4d 08	 cmp	 ecx, DWORD PTR _pT$[ebp]
  0001f	75 09		 jne	 SHORT $LN3@operator
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@operator:
  00031	8a 45 f8	 mov	 al, BYTE PTR tv66[ebp]

; 224  :     }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??8?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z ENDP ; ATL::CComPtrBase<IViewObjectEx>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??9?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??9?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z PROC ; ATL::CComPtrBase<IViewObjectEx>::operator!=, COMDAT
; _this$ = ecx

; 217  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  :         return !operator==(pT);

  00017	8b 45 08	 mov	 eax, DWORD PTR _pT$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z ; ATL::CComPtrBase<IViewObjectEx>::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]

; 219  :     }

  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z ENDP ; ATL::CComPtrBase<IViewObjectEx>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIViewObjectEx@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIViewObjectEx@@@1@XZ PROC ; ATL::CComPtrBase<IViewObjectEx>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIViewObjectEx@@@1@XZ ENDP ; ATL::CComPtrBase<IViewObjectEx>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEPAPAUIViewObjectEx@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEPAPAUIViewObjectEx@@XZ PROC ; ATL::CComPtrBase<IViewObjectEx>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEPAPAUIViewObjectEx@@XZ ENDP ; ATL::CComPtrBase<IViewObjectEx>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIViewObjectEx@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIViewObjectEx@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IViewObjectEx>::~CComPtrBase<IViewObjectEx>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIViewObjectEx@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IViewObjectEx>::~CComPtrBase<IViewObjectEx>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIViewObjectEx@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIViewObjectEx@@@ATL@@IAE@XZ PROC	; ATL::CComPtrBase<IViewObjectEx>::CComPtrBase<IViewObjectEx>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIViewObjectEx@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IViewObjectEx>::CComPtrBase<IViewObjectEx>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IOleInPlaceUIWindow>::~CComPtr<IOleInPlaceUIWindow>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::~CComPtrBase<IOleInPlaceUIWindow>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IOleInPlaceUIWindow>::~CComPtr<IOleInPlaceUIWindow>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IOleInPlaceUIWindow>::CComPtr<IOleInPlaceUIWindow>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::CComPtrBase<IOleInPlaceUIWindow>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IOleInPlaceUIWindow>::CComPtr<IOleInPlaceUIWindow>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceUIWindow@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceUIWindow@@@1@XZ PROC ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceUIWindow@@@1@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEPAPAUIOleInPlaceUIWindow@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEPAPAUIOleInPlaceUIWindow@@XZ PROC ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEPAPAUIOleInPlaceUIWindow@@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAUIOleInPlaceUIWindow@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAUIOleInPlaceUIWindow@@XZ PROC ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator IOleInPlaceUIWindow *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAUIOleInPlaceUIWindow@@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator IOleInPlaceUIWindow *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ PROC ; ATL::CComPtrBase<IOleInPlaceUIWindow>::~CComPtrBase<IOleInPlaceUIWindow>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceUIWindow>::~CComPtrBase<IOleInPlaceUIWindow>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@IAE@XZ PROC ; ATL::CComPtrBase<IOleInPlaceUIWindow>::CComPtrBase<IOleInPlaceUIWindow>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@IAE@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceUIWindow>::CComPtrBase<IOleInPlaceUIWindow>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IOleInPlaceFrame>::~CComPtr<IOleInPlaceFrame>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::~CComPtrBase<IOleInPlaceFrame>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IOleInPlaceFrame>::~CComPtr<IOleInPlaceFrame>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IOleInPlaceFrame>::CComPtr<IOleInPlaceFrame>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::CComPtrBase<IOleInPlaceFrame>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IOleInPlaceFrame>::CComPtr<IOleInPlaceFrame>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceFrame@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceFrame@@@1@XZ PROC ; ATL::CComPtrBase<IOleInPlaceFrame>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceFrame@@@1@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceFrame>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEPAPAUIOleInPlaceFrame@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEPAPAUIOleInPlaceFrame@@XZ PROC ; ATL::CComPtrBase<IOleInPlaceFrame>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEPAPAUIOleInPlaceFrame@@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceFrame>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAUIOleInPlaceFrame@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAUIOleInPlaceFrame@@XZ PROC ; ATL::CComPtrBase<IOleInPlaceFrame>::operator IOleInPlaceFrame *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAUIOleInPlaceFrame@@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceFrame>::operator IOleInPlaceFrame *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IOleInPlaceFrame>::~CComPtrBase<IOleInPlaceFrame>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IOleInPlaceFrame>::~CComPtrBase<IOleInPlaceFrame>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@IAE@XZ PROC	; ATL::CComPtrBase<IOleInPlaceFrame>::CComPtrBase<IOleInPlaceFrame>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IOleInPlaceFrame>::CComPtrBase<IOleInPlaceFrame>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIOleObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIOleObject@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IOleObject>::~CComPtr<IOleObject>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIOleObject@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleObject>::~CComPtrBase<IOleObject>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIOleObject@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IOleObject>::~CComPtr<IOleObject>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIOleObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIOleObject@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IOleObject>::CComPtr<IOleObject>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIOleObject@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleObject>::CComPtrBase<IOleObject>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIOleObject@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IOleObject>::CComPtr<IOleObject>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??8?$CComPtrBase@UIOleObject@@@ATL@@QBE_NPAUIOleObject@@@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIOleObject@@@ATL@@QBE_NPAUIOleObject@@@Z PROC ; ATL::CComPtrBase<IOleObject>::operator==, COMDAT
; _this$ = ecx

; 222  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 223  :         return p == pT;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	3b 4d 08	 cmp	 ecx, DWORD PTR _pT$[ebp]
  0001f	75 09		 jne	 SHORT $LN3@operator
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@operator:
  00031	8a 45 f8	 mov	 al, BYTE PTR tv66[ebp]

; 224  :     }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??8?$CComPtrBase@UIOleObject@@@ATL@@QBE_NPAUIOleObject@@@Z ENDP ; ATL::CComPtrBase<IOleObject>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??9?$CComPtrBase@UIOleObject@@@ATL@@QBE_NPAUIOleObject@@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??9?$CComPtrBase@UIOleObject@@@ATL@@QBE_NPAUIOleObject@@@Z PROC ; ATL::CComPtrBase<IOleObject>::operator!=, COMDAT
; _this$ = ecx

; 217  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  :         return !operator==(pT);

  00017	8b 45 08	 mov	 eax, DWORD PTR _pT$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIOleObject@@@ATL@@QBE_NPAUIOleObject@@@Z ; ATL::CComPtrBase<IOleObject>::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]

; 219  :     }

  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$CComPtrBase@UIOleObject@@@ATL@@QBE_NPAUIOleObject@@@Z ENDP ; ATL::CComPtrBase<IOleObject>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ PROC ; ATL::CComPtrBase<IOleObject>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ENDP ; ATL::CComPtrBase<IOleObject>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIOleObject@@@ATL@@QAEPAPAUIOleObject@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIOleObject@@@ATL@@QAEPAPAUIOleObject@@XZ PROC ; ATL::CComPtrBase<IOleObject>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIOleObject@@@ATL@@QAEPAPAUIOleObject@@XZ ENDP ; ATL::CComPtrBase<IOleObject>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ PROC ; ATL::CComPtrBase<IOleObject>::operator IOleObject *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ ENDP ; ATL::CComPtrBase<IOleObject>::operator IOleObject *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIOleObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIOleObject@@@ATL@@QAE@XZ PROC		; ATL::CComPtrBase<IOleObject>::~CComPtrBase<IOleObject>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIOleObject@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<IOleObject>::~CComPtrBase<IOleObject>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIOleObject@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIOleObject@@@ATL@@IAE@XZ PROC		; ATL::CComPtrBase<IOleObject>::CComPtrBase<IOleObject>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIOleObject@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<IOleObject>::CComPtrBase<IOleObject>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ PROC ; ATL::CComPtr<IOleInPlaceActiveObject>::~CComPtr<IOleInPlaceActiveObject>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::~CComPtrBase<IOleInPlaceActiveObject>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ENDP ; ATL::CComPtr<IOleInPlaceActiveObject>::~CComPtr<IOleInPlaceActiveObject>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ PROC ; ATL::CComPtr<IOleInPlaceActiveObject>::CComPtr<IOleInPlaceActiveObject>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::CComPtrBase<IOleInPlaceActiveObject>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ENDP ; ATL::CComPtr<IOleInPlaceActiveObject>::CComPtr<IOleInPlaceActiveObject>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAEPAPAUIOleInPlaceActiveObject@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAEPAPAUIOleInPlaceActiveObject@@XZ PROC ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAEPAPAUIOleInPlaceActiveObject@@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAUIOleInPlaceActiveObject@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAUIOleInPlaceActiveObject@@XZ PROC ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator IOleInPlaceActiveObject *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAUIOleInPlaceActiveObject@@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator IOleInPlaceActiveObject *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ PROC ; ATL::CComPtrBase<IOleInPlaceActiveObject>::~CComPtrBase<IOleInPlaceActiveObject>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceActiveObject>::~CComPtrBase<IOleInPlaceActiveObject>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@IAE@XZ PROC ; ATL::CComPtrBase<IOleInPlaceActiveObject>::CComPtrBase<IOleInPlaceActiveObject>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@IAE@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceActiveObject>::CComPtrBase<IOleInPlaceActiveObject>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?OnFinalMessage@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?OnFinalMessage@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEXPAUHWND__@@@Z PROC ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::OnFinalMessage, COMDAT
; _this$ = ecx

; 3515 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3516 : 		// override to do something, if needed
; 3517 : 	}

  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?OnFinalMessage@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEXPAUHWND__@@@Z ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::OnFinalMessage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?DefWindowProcW@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?DefWindowProcW@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z PROC ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DefWindowProcW, COMDAT
; _this$ = ecx

; 3506 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3507 : #ifdef STRICT
; 3508 : 		return ::CallWindowProc(m_pfnSuperWindowProc, this->m_hWnd, uMsg, wParam, lParam);

  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  00014	50		 push	 eax
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR _uMsg$[ebp]
  0001c	52		 push	 edx
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00023	51		 push	 ecx
  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0002a	50		 push	 eax
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CallWindowProcW@20
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 3509 : #else
; 3510 : 		return ::CallWindowProc((FARPROC)m_pfnSuperWindowProc, this->m_hWnd, uMsg, wParam, lParam);
; 3511 : #endif
; 3512 : 	}

  00038	5e		 pop	 esi
  00039	83 c4 04	 add	 esp, 4
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 0c 00	 ret	 12			; 0000000cH
?DefWindowProcW@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DefWindowProcW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?atlCreate@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PB_WKKV_U_MENUorID@2@GPAX@Z
_TEXT	SEGMENT
_hWnd$ = -12						; size = 4
_result$ = -8						; size = 4
_this$ = -4						; size = 4
_hWndParent$ = 8					; size = 4
_rect$ = 12						; size = 4
_szWindowName$ = 16					; size = 4
_dwStyle$ = 20						; size = 4
_dwExStyle$ = 24					; size = 4
_MenuOrID$ = 28						; size = 4
_atom$ = 32						; size = 2
_lpCreateParam$ = 36					; size = 4
?atlCreate@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PB_WKKV_U_MENUorID@2@GPAX@Z PROC ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::atlCreate, COMDAT
; _this$ = ecx

; 3612 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@atlCreate:

; 3613 : 	ATLASSUME(this->m_hWnd == NULL);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 26		 je	 SHORT $LN2@atlCreate
  00028	68 00 00 00 00	 push	 OFFSET $SG197072
  0002d	68 00 00 00 00	 push	 OFFSET $SG197073
  00032	6a 00		 push	 0
  00034	68 1d 0e 00 00	 push	 3613			; 00000e1dH
  00039	68 00 00 00 00	 push	 OFFSET $SG197074
  0003e	6a 02		 push	 2
  00040	e8 00 00 00 00	 call	 __CrtDbgReportW
  00045	83 c4 18	 add	 esp, 24			; 00000018H
  00048	83 f8 01	 cmp	 eax, 1
  0004b	75 01		 jne	 SHORT $LN2@atlCreate
  0004d	cc		 int	 3
$LN2@atlCreate:
  0004e	33 d2		 xor	 edx, edx
  00050	75 cd		 jne	 SHORT $LN4@atlCreate

; 3614 : 
; 3615 : 	// Allocate the thunk structure here, where we can fail gracefully.
; 3616 : 	BOOL result = this->m_thunk.Init(NULL,NULL);

  00052	6a 00		 push	 0
  00054	6a 00		 push	 0
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	83 c1 08	 add	 ecx, 8
  0005c	e8 00 00 00 00	 call	 ?Init@CWndProcThunk@ATL@@QAEHP6GJPAUHWND__@@IIJ@ZPAX@Z ; ATL::CWndProcThunk::Init
  00061	89 45 f8	 mov	 DWORD PTR _result$[ebp], eax

; 3617 : 	if (result == FALSE) {

  00064	83 7d f8 00	 cmp	 DWORD PTR _result$[ebp], 0
  00068	75 18		 jne	 SHORT $LN8@atlCreate

; 3618 : 		SetLastError(ERROR_OUTOFMEMORY);

  0006a	8b f4		 mov	 esi, esp
  0006c	6a 0e		 push	 14			; 0000000eH
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetLastError@4
  00074	3b f4		 cmp	 esi, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 3619 : 		return NULL;

  0007b	33 c0		 xor	 eax, eax
  0007d	e9 df 00 00 00	 jmp	 $LN1@atlCreate
$LN8@atlCreate:

; 3620 : 	}
; 3621 : 
; 3622 : 	if(atom == 0)

  00082	0f b7 45 20	 movzx	 eax, WORD PTR _atom$[ebp]
  00086	85 c0		 test	 eax, eax
  00088	75 07		 jne	 SHORT $LN9@atlCreate

; 3623 : 		return NULL;

  0008a	33 c0		 xor	 eax, eax
  0008c	e9 d0 00 00 00	 jmp	 $LN1@atlCreate
$LN9@atlCreate:

; 3624 : 
; 3625 : 	_AtlWinModule.AddCreateWndData(&this->m_thunk.cd, this);

  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	51		 push	 ecx
  00095	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00098	83 c2 08	 add	 edx, 8
  0009b	52		 push	 edx
  0009c	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  000a1	e8 00 00 00 00	 call	 ?AddCreateWndData@CAtlWinModule@ATL@@QAEXPAU_AtlCreateWndData@2@PAX@Z ; ATL::CAtlWinModule::AddCreateWndData

; 3626 : 
; 3627 : 	if(MenuOrID.m_hMenu == NULL && (dwStyle & WS_CHILD))

  000a6	83 7d 1c 00	 cmp	 DWORD PTR _MenuOrID$[ebp], 0
  000aa	75 10		 jne	 SHORT $LN10@atlCreate
  000ac	8b 45 14	 mov	 eax, DWORD PTR _dwStyle$[ebp]
  000af	25 00 00 00 40	 and	 eax, 1073741824		; 40000000H
  000b4	74 06		 je	 SHORT $LN10@atlCreate

; 3628 : 		MenuOrID.m_hMenu = (HMENU)(UINT_PTR)this;

  000b6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b9	89 4d 1c	 mov	 DWORD PTR _MenuOrID$[ebp], ecx
$LN10@atlCreate:

; 3629 : 	if(rect.m_lpRect == NULL)

  000bc	83 7d 0c 00	 cmp	 DWORD PTR _rect$[ebp], 0
  000c0	75 07		 jne	 SHORT $LN11@atlCreate

; 3630 : 		rect.m_lpRect = &TBase::rcDefault;

  000c2	c7 45 0c 00 00
	00 00		 mov	 DWORD PTR _rect$[ebp], OFFSET ?rcDefault@CWindow@ATL@@2UtagRECT@@A ; ATL::CWindow::rcDefault
$LN11@atlCreate:

; 3631 : 
; 3632 : 	HWND hWnd = ::CreateWindowEx(dwExStyle, MAKEINTATOM(atom), szWindowName,

  000c9	8b f4		 mov	 esi, esp
  000cb	8b 55 24	 mov	 edx, DWORD PTR _lpCreateParam$[ebp]
  000ce	52		 push	 edx
  000cf	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A ; ATL::_AtlBaseModule
  000d4	e8 00 00 00 00	 call	 ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
  000d9	50		 push	 eax
  000da	8b 45 1c	 mov	 eax, DWORD PTR _MenuOrID$[ebp]
  000dd	50		 push	 eax
  000de	8b 4d 08	 mov	 ecx, DWORD PTR _hWndParent$[ebp]
  000e1	51		 push	 ecx
  000e2	8b 55 0c	 mov	 edx, DWORD PTR _rect$[ebp]
  000e5	8b 45 0c	 mov	 eax, DWORD PTR _rect$[ebp]
  000e8	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  000eb	2b 48 04	 sub	 ecx, DWORD PTR [eax+4]
  000ee	51		 push	 ecx
  000ef	8b 55 0c	 mov	 edx, DWORD PTR _rect$[ebp]
  000f2	8b 45 0c	 mov	 eax, DWORD PTR _rect$[ebp]
  000f5	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  000f8	2b 08		 sub	 ecx, DWORD PTR [eax]
  000fa	51		 push	 ecx
  000fb	8b 55 0c	 mov	 edx, DWORD PTR _rect$[ebp]
  000fe	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00101	50		 push	 eax
  00102	8b 4d 0c	 mov	 ecx, DWORD PTR _rect$[ebp]
  00105	8b 11		 mov	 edx, DWORD PTR [ecx]
  00107	52		 push	 edx
  00108	8b 45 14	 mov	 eax, DWORD PTR _dwStyle$[ebp]
  0010b	50		 push	 eax
  0010c	8b 4d 10	 mov	 ecx, DWORD PTR _szWindowName$[ebp]
  0010f	51		 push	 ecx
  00110	0f b7 55 20	 movzx	 edx, WORD PTR _atom$[ebp]
  00114	52		 push	 edx
  00115	8b 45 18	 mov	 eax, DWORD PTR _dwExStyle$[ebp]
  00118	50		 push	 eax
  00119	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  0011f	3b f4		 cmp	 esi, esp
  00121	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00126	89 45 f4	 mov	 DWORD PTR _hWnd$[ebp], eax
$LN7@atlCreate:

; 3633 : 		dwStyle, rect.m_lpRect->left, rect.m_lpRect->top, rect.m_lpRect->right - rect.m_lpRect->left,
; 3634 : 		rect.m_lpRect->bottom - rect.m_lpRect->top, hWndParent, MenuOrID.m_hMenu,
; 3635 : 		_AtlBaseModule.GetModuleInstance(), lpCreateParam);
; 3636 : 
; 3637 : 	ATLASSUME(this->m_hWnd == hWnd);

  00129	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012f	3b 55 f4	 cmp	 edx, DWORD PTR _hWnd$[ebp]
  00132	74 26		 je	 SHORT $LN5@atlCreate
  00134	68 00 00 00 00	 push	 OFFSET $SG197079
  00139	68 00 00 00 00	 push	 OFFSET $SG197080
  0013e	6a 00		 push	 0
  00140	68 35 0e 00 00	 push	 3637			; 00000e35H
  00145	68 00 00 00 00	 push	 OFFSET $SG197081
  0014a	6a 02		 push	 2
  0014c	e8 00 00 00 00	 call	 __CrtDbgReportW
  00151	83 c4 18	 add	 esp, 24			; 00000018H
  00154	83 f8 01	 cmp	 eax, 1
  00157	75 01		 jne	 SHORT $LN5@atlCreate
  00159	cc		 int	 3
$LN5@atlCreate:
  0015a	33 c9		 xor	 ecx, ecx
  0015c	75 cb		 jne	 SHORT $LN7@atlCreate

; 3638 : 
; 3639 : 	return hWnd;

  0015e	8b 45 f4	 mov	 eax, DWORD PTR _hWnd$[ebp]
$LN1@atlCreate:

; 3640 : }

  00161	5e		 pop	 esi
  00162	83 c4 0c	 add	 esp, 12			; 0000000cH
  00165	3b ec		 cmp	 ebp, esp
  00167	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016c	8b e5		 mov	 esp, ebp
  0016e	5d		 pop	 ebp
  0016f	c2 20 00	 ret	 32			; 00000020H
?atlCreate@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PB_WKKV_U_MENUorID@2@GPAX@Z ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::atlCreate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?WindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hWndThis$1 = -76					; size = 4
_pfnWndProc$2 = -72					; size = 4
_bRet$ = -68						; size = 4
_lRes$ = -60						; size = 4
_pOldMsg$ = -52						; size = 4
_msg$ = -44						; size = 36
_pThis$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?WindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z PROC ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::WindowProc, COMDAT

; 3559 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  0000b	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd

; 3560 : 	CWindowImplBaseT< TBase, TWinTraits >* pThis = (CWindowImplBaseT< TBase, TWinTraits >*)hWnd;

  00017	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  0001a	89 45 fc	 mov	 DWORD PTR _pThis$[ebp], eax

; 3561 : 	// set a ptr to this message and save the old value
; 3562 : 	_ATL_MSG msg(pThis->m_hWnd, uMsg, wParam, lParam);

  0001d	6a 01		 push	 1
  0001f	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00022	51		 push	 ecx
  00023	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  00026	52		 push	 edx
  00027	8b 45 0c	 mov	 eax, DWORD PTR _uMsg$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  0002e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00031	52		 push	 edx
  00032	8d 4d d4	 lea	 ecx, DWORD PTR _msg$[ebp]
  00035	e8 00 00 00 00	 call	 ??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z ; ATL::_ATL_MSG::_ATL_MSG

; 3563 : 	const _ATL_MSG* pOldMsg = pThis->m_pCurrentMsg;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _pThis$[ebp]
  0003d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00040	89 4d cc	 mov	 DWORD PTR _pOldMsg$[ebp], ecx

; 3564 : 	pThis->m_pCurrentMsg = &msg;

  00043	8b 55 fc	 mov	 edx, DWORD PTR _pThis$[ebp]
  00046	8d 45 d4	 lea	 eax, DWORD PTR _msg$[ebp]
  00049	89 42 18	 mov	 DWORD PTR [edx+24], eax

; 3565 : 	// pass to the message map to process
; 3566 : 	LRESULT lRes = 0;

  0004c	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _lRes$[ebp], 0

; 3567 : 	BOOL bRet = pThis->ProcessWindowMessage(pThis->m_hWnd, uMsg, wParam, lParam, lRes, 0);

  00053	8b f4		 mov	 esi, esp
  00055	6a 00		 push	 0
  00057	8d 4d c4	 lea	 ecx, DWORD PTR _lRes$[ebp]
  0005a	51		 push	 ecx
  0005b	8b 55 14	 mov	 edx, DWORD PTR _lParam$[ebp]
  0005e	52		 push	 edx
  0005f	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  00066	51		 push	 ecx
  00067	8b 55 fc	 mov	 edx, DWORD PTR _pThis$[ebp]
  0006a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0006d	50		 push	 eax
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  00071	8b 11		 mov	 edx, DWORD PTR [ecx]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  00076	8b 02		 mov	 eax, DWORD PTR [edx]
  00078	ff d0		 call	 eax
  0007a	3b f4		 cmp	 esi, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	89 45 bc	 mov	 DWORD PTR _bRet$[ebp], eax

; 3568 : 	// restore saved value for the current message
; 3569 : 	ATLASSERT(pThis->m_pCurrentMsg == &msg);

  00084	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  00087	8d 55 d4	 lea	 edx, DWORD PTR _msg$[ebp]
  0008a	39 51 18	 cmp	 DWORD PTR [ecx+24], edx
  0008d	74 26		 je	 SHORT $LN9@WindowProc
  0008f	68 00 00 00 00	 push	 OFFSET $SG197035
  00094	68 00 00 00 00	 push	 OFFSET $SG197036
  00099	6a 00		 push	 0
  0009b	68 f1 0d 00 00	 push	 3569			; 00000df1H
  000a0	68 00 00 00 00	 push	 OFFSET $SG197037
  000a5	6a 02		 push	 2
  000a7	e8 00 00 00 00	 call	 __CrtDbgReportW
  000ac	83 c4 18	 add	 esp, 24			; 00000018H
  000af	83 f8 01	 cmp	 eax, 1
  000b2	75 01		 jne	 SHORT $LN9@WindowProc
  000b4	cc		 int	 3
$LN9@WindowProc:

; 3570 : 
; 3571 : 	// do the default processing if message was not handled
; 3572 : 	if(!bRet)

  000b5	83 7d bc 00	 cmp	 DWORD PTR _bRet$[ebp], 0
  000b9	0f 85 98 00 00
	00		 jne	 $LN2@WindowProc

; 3573 : 	{
; 3574 : 		if(uMsg != WM_NCDESTROY)

  000bf	81 7d 0c 82 00
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 130 ; 00000082H
  000c6	74 19		 je	 SHORT $LN3@WindowProc

; 3575 : 			lRes = pThis->DefWindowProc(uMsg, wParam, lParam);

  000c8	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  000cb	51		 push	 ecx
  000cc	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  000cf	52		 push	 edx
  000d0	8b 45 0c	 mov	 eax, DWORD PTR _uMsg$[ebp]
  000d3	50		 push	 eax
  000d4	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  000d7	e8 00 00 00 00	 call	 ?DefWindowProcW@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DefWindowProcW
  000dc	89 45 c4	 mov	 DWORD PTR _lRes$[ebp], eax
  000df	eb 76		 jmp	 SHORT $LN2@WindowProc
$LN3@WindowProc:

; 3576 : 		else
; 3577 : 		{
; 3578 : 			// unsubclass, if needed
; 3579 : 			LONG_PTR pfnWndProc = ::GetWindowLongPtr(pThis->m_hWnd, GWLP_WNDPROC);

  000e1	6a fc		 push	 -4			; fffffffcH
  000e3	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  000e6	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000e9	52		 push	 edx
  000ea	e8 00 00 00 00	 call	 ?GetWindowLongPtrW@@YAJPAUHWND__@@H@Z ; GetWindowLongPtrW
  000ef	83 c4 08	 add	 esp, 8
  000f2	89 45 b8	 mov	 DWORD PTR _pfnWndProc$2[ebp], eax

; 3580 : 			lRes = pThis->DefWindowProc(uMsg, wParam, lParam);

  000f5	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  000f8	50		 push	 eax
  000f9	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  000fc	51		 push	 ecx
  000fd	8b 55 0c	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00100	52		 push	 edx
  00101	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  00104	e8 00 00 00 00	 call	 ?DefWindowProcW@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DefWindowProcW
  00109	89 45 c4	 mov	 DWORD PTR _lRes$[ebp], eax

; 3581 : 			if(pThis->m_pfnSuperWindowProc != ::DefWindowProc && ::GetWindowLongPtr(pThis->m_hWnd, GWLP_WNDPROC) == pfnWndProc)

  0010c	8b 45 fc	 mov	 eax, DWORD PTR _pThis$[ebp]
  0010f	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00112	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR __imp__DefWindowProcW@16
  00118	74 2e		 je	 SHORT $LN5@WindowProc
  0011a	6a fc		 push	 -4			; fffffffcH
  0011c	8b 55 fc	 mov	 edx, DWORD PTR _pThis$[ebp]
  0011f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00122	50		 push	 eax
  00123	e8 00 00 00 00	 call	 ?GetWindowLongPtrW@@YAJPAUHWND__@@H@Z ; GetWindowLongPtrW
  00128	83 c4 08	 add	 esp, 8
  0012b	3b 45 b8	 cmp	 eax, DWORD PTR _pfnWndProc$2[ebp]
  0012e	75 18		 jne	 SHORT $LN5@WindowProc

; 3582 : 				::SetWindowLongPtr(pThis->m_hWnd, GWLP_WNDPROC, (LONG_PTR)pThis->m_pfnSuperWindowProc);

  00130	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  00133	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00136	52		 push	 edx
  00137	6a fc		 push	 -4			; fffffffcH
  00139	8b 45 fc	 mov	 eax, DWORD PTR _pThis$[ebp]
  0013c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0013f	51		 push	 ecx
  00140	e8 00 00 00 00	 call	 ?SetWindowLongPtrW@@YAJPAUHWND__@@HJ@Z ; SetWindowLongPtrW
  00145	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@WindowProc:

; 3583 : 			// mark window as destroyed
; 3584 : 			pThis->m_dwState |= CWindowImplRoot<TBase>::WINSTATE_DESTROYED;

  00148	8b 55 fc	 mov	 edx, DWORD PTR _pThis$[ebp]
  0014b	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0014e	83 c8 01	 or	 eax, 1
  00151	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  00154	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
$LN2@WindowProc:

; 3585 : 		}
; 3586 : 	}
; 3587 : 	if((pThis->m_dwState & CWindowImplRoot<TBase>::WINSTATE_DESTROYED) && pOldMsg== NULL)

  00157	8b 55 fc	 mov	 edx, DWORD PTR _pThis$[ebp]
  0015a	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0015d	83 e0 01	 and	 eax, 1
  00160	74 4d		 je	 SHORT $LN6@WindowProc
  00162	83 7d cc 00	 cmp	 DWORD PTR _pOldMsg$[ebp], 0
  00166	75 47		 jne	 SHORT $LN6@WindowProc

; 3588 : 	{
; 3589 : 		// clear out window handle
; 3590 : 		HWND hWndThis = pThis->m_hWnd;

  00168	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  0016b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0016e	89 55 b4	 mov	 DWORD PTR _hWndThis$1[ebp], edx

; 3591 : 		pThis->m_hWnd = NULL;

  00171	8b 45 fc	 mov	 eax, DWORD PTR _pThis$[ebp]
  00174	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 3592 : 		pThis->m_dwState &= ~CWindowImplRoot<TBase>::WINSTATE_DESTROYED;

  0017b	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  0017e	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00181	83 e2 fe	 and	 edx, -2			; fffffffeH
  00184	8b 45 fc	 mov	 eax, DWORD PTR _pThis$[ebp]
  00187	89 50 1c	 mov	 DWORD PTR [eax+28], edx

; 3593 : 		// clean up after window is destroyed
; 3594 : 		pThis->m_pCurrentMsg = pOldMsg;

  0018a	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  0018d	8b 55 cc	 mov	 edx, DWORD PTR _pOldMsg$[ebp]
  00190	89 51 18	 mov	 DWORD PTR [ecx+24], edx

; 3595 : 		pThis->OnFinalMessage(hWndThis);

  00193	8b f4		 mov	 esi, esp
  00195	8b 45 b4	 mov	 eax, DWORD PTR _hWndThis$1[ebp]
  00198	50		 push	 eax
  00199	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  0019c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0019e	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  001a1	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  001a4	ff d0		 call	 eax
  001a6	3b f4		 cmp	 esi, esp
  001a8	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 3596 : 	}else {

  001ad	eb 09		 jmp	 SHORT $LN7@WindowProc
$LN6@WindowProc:

; 3597 : 		pThis->m_pCurrentMsg = pOldMsg;

  001af	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  001b2	8b 55 cc	 mov	 edx, DWORD PTR _pOldMsg$[ebp]
  001b5	89 51 18	 mov	 DWORD PTR [ecx+24], edx
$LN7@WindowProc:

; 3598 : 	}
; 3599 : 	return lRes;

  001b8	8b 45 c4	 mov	 eax, DWORD PTR _lRes$[ebp]

; 3600 : }

  001bb	52		 push	 edx
  001bc	8b cd		 mov	 ecx, ebp
  001be	50		 push	 eax
  001bf	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@WindowProc
  001c5	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001ca	58		 pop	 eax
  001cb	5a		 pop	 edx
  001cc	5f		 pop	 edi
  001cd	5e		 pop	 esi
  001ce	83 c4 4c	 add	 esp, 76			; 0000004cH
  001d1	3b ec		 cmp	 ebp, esp
  001d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001d8	8b e5		 mov	 esp, ebp
  001da	5d		 pop	 ebp
  001db	c2 10 00	 ret	 16			; 00000010H
  001de	66 90		 npad	 2
$LN13@WindowProc:
  001e0	02 00 00 00	 DD	 2
  001e4	00 00 00 00	 DD	 $LN12@WindowProc
$LN12@WindowProc:
  001e8	d4 ff ff ff	 DD	 -44			; ffffffd4H
  001ec	24 00 00 00	 DD	 36			; 00000024H
  001f0	00 00 00 00	 DD	 $LN10@WindowProc
  001f4	c4 ff ff ff	 DD	 -60			; ffffffc4H
  001f8	04 00 00 00	 DD	 4
  001fc	00 00 00 00	 DD	 $LN11@WindowProc
$LN11@WindowProc:
  00200	6c		 DB	 108			; 0000006cH
  00201	52		 DB	 82			; 00000052H
  00202	65		 DB	 101			; 00000065H
  00203	73		 DB	 115			; 00000073H
  00204	00		 DB	 0
$LN10@WindowProc:
  00205	6d		 DB	 109			; 0000006dH
  00206	73		 DB	 115			; 00000073H
  00207	67		 DB	 103			; 00000067H
  00208	00		 DB	 0
?WindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::WindowProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?StartWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
$T1 = -20						; size = 8
_pOldProc$ = -12					; size = 4
_pProc$ = -8						; size = 4
_pThis$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?StartWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z PROC ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::StartWindowProc, COMDAT

; 3528 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 3529 : 	CWindowImplBaseT< TBase, TWinTraits >* pThis = (CWindowImplBaseT< TBase, TWinTraits >*)_AtlWinModule.ExtractCreateWndData();

  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  00020	e8 00 00 00 00	 call	 ?ExtractCreateWndData@CAtlWinModule@ATL@@QAEPAXXZ ; ATL::CAtlWinModule::ExtractCreateWndData
  00025	89 45 fc	 mov	 DWORD PTR _pThis$[ebp], eax

; 3530 : 	ATLASSERT(pThis != NULL);

  00028	83 7d fc 00	 cmp	 DWORD PTR _pThis$[ebp], 0
  0002c	75 26		 jne	 SHORT $LN5@StartWindo
  0002e	68 00 00 00 00	 push	 OFFSET $SG197010
  00033	68 00 00 00 00	 push	 OFFSET $SG197011
  00038	6a 00		 push	 0
  0003a	68 ca 0d 00 00	 push	 3530			; 00000dcaH
  0003f	68 00 00 00 00	 push	 OFFSET $SG197012
  00044	6a 02		 push	 2
  00046	e8 00 00 00 00	 call	 __CrtDbgReportW
  0004b	83 c4 18	 add	 esp, 24			; 00000018H
  0004e	83 f8 01	 cmp	 eax, 1
  00051	75 01		 jne	 SHORT $LN5@StartWindo
  00053	cc		 int	 3
$LN5@StartWindo:

; 3531 : 	if(!pThis)

  00054	83 7d fc 00	 cmp	 DWORD PTR _pThis$[ebp], 0
  00058	75 07		 jne	 SHORT $LN2@StartWindo

; 3532 : 	{
; 3533 : 		return 0;

  0005a	33 c0		 xor	 eax, eax
  0005c	e9 a4 00 00 00	 jmp	 $LN1@StartWindo
$LN2@StartWindo:

; 3534 : 	}
; 3535 : 	pThis->m_hWnd = hWnd;

  00061	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  00064	8b 55 08	 mov	 edx, DWORD PTR _hWnd$[ebp]
  00067	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 3536 : 
; 3537 : 	// Initialize the thunk.  This is allocated in CWindowImplBaseT::Create,
; 3538 : 	// so failure is unexpected here.
; 3539 : 
; 3540 : 	pThis->m_thunk.Init(pThis->GetWindowProc(), pThis);

  0006a	8b 45 fc	 mov	 eax, DWORD PTR _pThis$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  00071	8b 11		 mov	 edx, DWORD PTR [ecx]
  00073	8b f4		 mov	 esi, esp
  00075	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  00078	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0007b	ff d0		 call	 eax
  0007d	3b f4		 cmp	 esi, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	50		 push	 eax
  00085	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  00088	83 c1 08	 add	 ecx, 8
  0008b	e8 00 00 00 00	 call	 ?Init@CWndProcThunk@ATL@@QAEHP6GJPAUHWND__@@IIJ@ZPAX@Z ; ATL::CWndProcThunk::Init

; 3541 : 	WNDPROC pProc = pThis->m_thunk.GetWNDPROC();

  00090	8b 4d fc	 mov	 ecx, DWORD PTR _pThis$[ebp]
  00093	83 c1 08	 add	 ecx, 8
  00096	e8 00 00 00 00	 call	 ?GetWNDPROC@CWndProcThunk@ATL@@QAEP6GJPAUHWND__@@IIJ@ZXZ ; ATL::CWndProcThunk::GetWNDPROC
  0009b	89 45 f8	 mov	 DWORD PTR _pProc$[ebp], eax

; 3542 : 	WNDPROC pOldProc = (WNDPROC)::SetWindowLongPtr(hWnd, GWLP_WNDPROC, (LONG_PTR)pProc);

  0009e	8b 4d f8	 mov	 ecx, DWORD PTR _pProc$[ebp]
  000a1	51		 push	 ecx
  000a2	6a fc		 push	 -4			; fffffffcH
  000a4	8b 55 08	 mov	 edx, DWORD PTR _hWnd$[ebp]
  000a7	52		 push	 edx
  000a8	e8 00 00 00 00	 call	 ?SetWindowLongPtrW@@YAJPAUHWND__@@HJ@Z ; SetWindowLongPtrW
  000ad	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b0	89 45 f4	 mov	 DWORD PTR _pOldProc$[ebp], eax

; 3543 : #ifdef _DEBUG
; 3544 : 	// check if somebody has subclassed us already since we discard it
; 3545 : 	if(pOldProc != StartWindowProc)

  000b3	81 7d f4 00 00
	00 00		 cmp	 DWORD PTR _pOldProc$[ebp], OFFSET ?StartWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::StartWindowProc
  000ba	74 2d		 je	 SHORT $LN3@StartWindo

; 3546 : 		ATLTRACE(atlTraceWindowing, 0, _T("Subclassing through a hook discarded.\n"));

  000bc	68 00 00 00 00	 push	 OFFSET $SG197016
  000c1	6a 00		 push	 0
  000c3	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  000c8	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<32,0>::operator unsigned int
  000cd	50		 push	 eax
  000ce	68 da 0d 00 00	 push	 3546			; 00000ddaH
  000d3	68 00 00 00 00	 push	 OFFSET $SG197015
  000d8	8d 4d ec	 lea	 ecx, DWORD PTR $T1[ebp]
  000db	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000e0	50		 push	 eax
  000e1	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000e6	83 c4 10	 add	 esp, 16			; 00000010H
$LN3@StartWindo:

; 3547 : #else
; 3548 : 	(pOldProc);	// avoid unused warning
; 3549 : #endif
; 3550 : 	return pProc(hWnd, uMsg, wParam, lParam);

  000e9	8b f4		 mov	 esi, esp
  000eb	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  000ee	50		 push	 eax
  000ef	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  000f2	51		 push	 ecx
  000f3	8b 55 0c	 mov	 edx, DWORD PTR _uMsg$[ebp]
  000f6	52		 push	 edx
  000f7	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  000fa	50		 push	 eax
  000fb	ff 55 f8	 call	 DWORD PTR _pProc$[ebp]
  000fe	3b f4		 cmp	 esi, esp
  00100	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@StartWindo:

; 3551 : }

  00105	5e		 pop	 esi
  00106	83 c4 14	 add	 esp, 20			; 00000014H
  00109	3b ec		 cmp	 ebp, esp
  0010b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00110	8b e5		 mov	 esp, ebp
  00112	5d		 pop	 ebp
  00113	c2 10 00	 ret	 16			; 00000010H
?StartWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::StartWindowProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?GetWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEP6GJPAUHWND__@@IIJ@ZXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEP6GJPAUHWND__@@IIJ@ZXZ PROC ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWindowProc, COMDAT
; _this$ = ecx

; 3452 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3453 : 		return WindowProc;

  0000e	b8 00 00 00 00	 mov	 eax, OFFSET ?WindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::WindowProc

; 3454 : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?GetWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEP6GJPAUHWND__@@IIJ@ZXZ ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWindowProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?GetWndExStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z
_TEXT	SEGMENT
_dwExStyle$ = 8						; size = 4
?GetWndExStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z PROC ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndExStyle, COMDAT

; 3447 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3448 : 		return TWinTraits::GetWndExStyle(dwExStyle);

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwExStyle$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?GetWndExStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z ; ATL::CWinTraits<1442840576,0>::GetWndExStyle
  0000c	83 c4 04	 add	 esp, 4

; 3449 : 	}

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetWndExStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndExStyle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?GetWndStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z
_TEXT	SEGMENT
_dwStyle$ = 8						; size = 4
?GetWndStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z PROC ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndStyle, COMDAT

; 3443 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3444 : 		return TWinTraits::GetWndStyle(dwStyle);

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwStyle$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?GetWndStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z ; ATL::CWinTraits<1442840576,0>::GetWndStyle
  0000c	83 c4 04	 add	 esp, 4

; 3445 : 	}

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetWndStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndStyle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?DefaultReflectionHandler@?$CWindowImplRoot@VCWindow@ATL@@@ATL@@SAHPAUHWND__@@IIJAAJ@Z
_TEXT	SEGMENT
tv64 = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_lResult$ = 24						; size = 4
?DefaultReflectionHandler@?$CWindowImplRoot@VCWindow@ATL@@@ATL@@SAHPAUHWND__@@IIJAAJ@Z PROC ; ATL::CWindowImplRoot<ATL::CWindow>::DefaultReflectionHandler, COMDAT

; 3402 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 3403 : 	switch(uMsg)

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _uMsg$[ebp]
  0000f	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  00012	81 7d fc 11 21
	00 00		 cmp	 DWORD PTR tv64[ebp], 8465 ; 00002111H
  00019	77 2c		 ja	 SHORT $LN7@DefaultRef
  0001b	81 7d fc 11 21
	00 00		 cmp	 DWORD PTR tv64[ebp], 8465 ; 00002111H
  00022	74 49		 je	 SHORT $LN4@DefaultRef
  00024	8b 4d fc	 mov	 ecx, DWORD PTR tv64[ebp]
  00027	81 e9 2b 20 00
	00		 sub	 ecx, 8235		; 0000202bH
  0002d	89 4d fc	 mov	 DWORD PTR tv64[ebp], ecx
  00030	83 7d fc 23	 cmp	 DWORD PTR tv64[ebp], 35	; 00000023H
  00034	77 67		 ja	 SHORT $LN2@DefaultRef
  00036	8b 55 fc	 mov	 edx, DWORD PTR tv64[ebp]
  00039	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN8@DefaultRef[edx]
  00040	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN9@DefaultRef[eax*4]
$LN7@DefaultRef:
  00047	8b 4d fc	 mov	 ecx, DWORD PTR tv64[ebp]
  0004a	81 e9 14 21 00
	00		 sub	 ecx, 8468		; 00002114H
  00050	89 4d fc	 mov	 DWORD PTR tv64[ebp], ecx
  00053	81 7d fc fc 00
	00 00		 cmp	 DWORD PTR tv64[ebp], 252 ; 000000fcH
  0005a	77 41		 ja	 SHORT $LN2@DefaultRef
  0005c	8b 55 fc	 mov	 edx, DWORD PTR tv64[ebp]
  0005f	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN10@DefaultRef[edx]
  00066	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN11@DefaultRef[eax*4]
$LN4@DefaultRef:

; 3404 : 	{
; 3405 : 	case OCM_COMMAND:
; 3406 : 	case OCM_NOTIFY:
; 3407 : 	case OCM_PARENTNOTIFY:
; 3408 : 	case OCM_DRAWITEM:
; 3409 : 	case OCM_MEASUREITEM:
; 3410 : 	case OCM_COMPAREITEM:
; 3411 : 	case OCM_DELETEITEM:
; 3412 : 	case OCM_VKEYTOITEM:
; 3413 : 	case OCM_CHARTOITEM:
; 3414 : 	case OCM_HSCROLL:
; 3415 : 	case OCM_VSCROLL:
; 3416 : 	case OCM_CTLCOLORBTN:
; 3417 : 	case OCM_CTLCOLORDLG:
; 3418 : 	case OCM_CTLCOLOREDIT:
; 3419 : 	case OCM_CTLCOLORLISTBOX:
; 3420 : 	case OCM_CTLCOLORMSGBOX:
; 3421 : 	case OCM_CTLCOLORSCROLLBAR:
; 3422 : 	case OCM_CTLCOLORSTATIC:
; 3423 : 		lResult = ::DefWindowProc(hWnd, uMsg - OCM__BASE, wParam, lParam);

  0006d	8b f4		 mov	 esi, esp
  0006f	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00072	51		 push	 ecx
  00073	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  00076	52		 push	 edx
  00077	8b 45 0c	 mov	 eax, DWORD PTR _uMsg$[ebp]
  0007a	2d 00 20 00 00	 sub	 eax, 8192		; 00002000H
  0007f	50		 push	 eax
  00080	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  00083	51		 push	 ecx
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcW@16
  0008a	3b f4		 cmp	 esi, esp
  0008c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00091	8b 55 18	 mov	 edx, DWORD PTR _lResult$[ebp]
  00094	89 02		 mov	 DWORD PTR [edx], eax

; 3424 : 		return TRUE;

  00096	b8 01 00 00 00	 mov	 eax, 1
  0009b	eb 02		 jmp	 SHORT $LN1@DefaultRef
$LN2@DefaultRef:

; 3425 : 	default:
; 3426 : 		break;
; 3427 : 	}
; 3428 : 	return FALSE;

  0009d	33 c0		 xor	 eax, eax
$LN1@DefaultRef:

; 3429 : }

  0009f	5e		 pop	 esi
  000a0	83 c4 04	 add	 esp, 4
  000a3	3b ec		 cmp	 ebp, esp
  000a5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c3		 ret	 0
  000ae	66 90		 npad	 2
$LN9@DefaultRef:
  000b0	00 00 00 00	 DD	 $LN4@DefaultRef
  000b4	00 00 00 00	 DD	 $LN2@DefaultRef
$LN8@DefaultRef:
  000b8	00		 DB	 0
  000b9	00		 DB	 0
  000ba	00		 DB	 0
  000bb	00		 DB	 0
  000bc	00		 DB	 0
  000bd	01		 DB	 1
  000be	01		 DB	 1
  000bf	01		 DB	 1
  000c0	01		 DB	 1
  000c1	01		 DB	 1
  000c2	01		 DB	 1
  000c3	01		 DB	 1
  000c4	01		 DB	 1
  000c5	01		 DB	 1
  000c6	00		 DB	 0
  000c7	01		 DB	 1
  000c8	01		 DB	 1
  000c9	01		 DB	 1
  000ca	01		 DB	 1
  000cb	01		 DB	 1
  000cc	01		 DB	 1
  000cd	01		 DB	 1
  000ce	01		 DB	 1
  000cf	01		 DB	 1
  000d0	01		 DB	 1
  000d1	01		 DB	 1
  000d2	01		 DB	 1
  000d3	01		 DB	 1
  000d4	01		 DB	 1
  000d5	01		 DB	 1
  000d6	01		 DB	 1
  000d7	01		 DB	 1
  000d8	01		 DB	 1
  000d9	01		 DB	 1
  000da	01		 DB	 1
  000db	00		 DB	 0
$LN11@DefaultRef:
  000dc	00 00 00 00	 DD	 $LN4@DefaultRef
  000e0	00 00 00 00	 DD	 $LN2@DefaultRef
$LN10@DefaultRef:
  000e4	00		 DB	 0
  000e5	00		 DB	 0
  000e6	01		 DB	 1
  000e7	01		 DB	 1
  000e8	01		 DB	 1
  000e9	01		 DB	 1
  000ea	01		 DB	 1
  000eb	01		 DB	 1
  000ec	01		 DB	 1
  000ed	01		 DB	 1
  000ee	01		 DB	 1
  000ef	01		 DB	 1
  000f0	01		 DB	 1
  000f1	01		 DB	 1
  000f2	01		 DB	 1
  000f3	01		 DB	 1
  000f4	01		 DB	 1
  000f5	01		 DB	 1
  000f6	01		 DB	 1
  000f7	01		 DB	 1
  000f8	01		 DB	 1
  000f9	01		 DB	 1
  000fa	01		 DB	 1
  000fb	01		 DB	 1
  000fc	01		 DB	 1
  000fd	01		 DB	 1
  000fe	01		 DB	 1
  000ff	01		 DB	 1
  00100	01		 DB	 1
  00101	01		 DB	 1
  00102	00		 DB	 0
  00103	00		 DB	 0
  00104	00		 DB	 0
  00105	00		 DB	 0
  00106	00		 DB	 0
  00107	00		 DB	 0
  00108	00		 DB	 0
  00109	01		 DB	 1
  0010a	01		 DB	 1
  0010b	01		 DB	 1
  0010c	01		 DB	 1
  0010d	01		 DB	 1
  0010e	01		 DB	 1
  0010f	01		 DB	 1
  00110	01		 DB	 1
  00111	01		 DB	 1
  00112	01		 DB	 1
  00113	01		 DB	 1
  00114	01		 DB	 1
  00115	01		 DB	 1
  00116	01		 DB	 1
  00117	01		 DB	 1
  00118	01		 DB	 1
  00119	01		 DB	 1
  0011a	01		 DB	 1
  0011b	01		 DB	 1
  0011c	01		 DB	 1
  0011d	01		 DB	 1
  0011e	01		 DB	 1
  0011f	01		 DB	 1
  00120	01		 DB	 1
  00121	01		 DB	 1
  00122	01		 DB	 1
  00123	01		 DB	 1
  00124	01		 DB	 1
  00125	01		 DB	 1
  00126	01		 DB	 1
  00127	01		 DB	 1
  00128	01		 DB	 1
  00129	01		 DB	 1
  0012a	01		 DB	 1
  0012b	01		 DB	 1
  0012c	01		 DB	 1
  0012d	01		 DB	 1
  0012e	01		 DB	 1
  0012f	01		 DB	 1
  00130	01		 DB	 1
  00131	01		 DB	 1
  00132	01		 DB	 1
  00133	01		 DB	 1
  00134	01		 DB	 1
  00135	01		 DB	 1
  00136	01		 DB	 1
  00137	01		 DB	 1
  00138	01		 DB	 1
  00139	01		 DB	 1
  0013a	01		 DB	 1
  0013b	01		 DB	 1
  0013c	01		 DB	 1
  0013d	01		 DB	 1
  0013e	01		 DB	 1
  0013f	01		 DB	 1
  00140	01		 DB	 1
  00141	01		 DB	 1
  00142	01		 DB	 1
  00143	01		 DB	 1
  00144	01		 DB	 1
  00145	01		 DB	 1
  00146	01		 DB	 1
  00147	01		 DB	 1
  00148	01		 DB	 1
  00149	01		 DB	 1
  0014a	01		 DB	 1
  0014b	01		 DB	 1
  0014c	01		 DB	 1
  0014d	01		 DB	 1
  0014e	01		 DB	 1
  0014f	01		 DB	 1
  00150	01		 DB	 1
  00151	01		 DB	 1
  00152	01		 DB	 1
  00153	01		 DB	 1
  00154	01		 DB	 1
  00155	01		 DB	 1
  00156	01		 DB	 1
  00157	01		 DB	 1
  00158	01		 DB	 1
  00159	01		 DB	 1
  0015a	01		 DB	 1
  0015b	01		 DB	 1
  0015c	01		 DB	 1
  0015d	01		 DB	 1
  0015e	01		 DB	 1
  0015f	01		 DB	 1
  00160	01		 DB	 1
  00161	01		 DB	 1
  00162	01		 DB	 1
  00163	01		 DB	 1
  00164	01		 DB	 1
  00165	01		 DB	 1
  00166	01		 DB	 1
  00167	01		 DB	 1
  00168	01		 DB	 1
  00169	01		 DB	 1
  0016a	01		 DB	 1
  0016b	01		 DB	 1
  0016c	01		 DB	 1
  0016d	01		 DB	 1
  0016e	01		 DB	 1
  0016f	01		 DB	 1
  00170	01		 DB	 1
  00171	01		 DB	 1
  00172	01		 DB	 1
  00173	01		 DB	 1
  00174	01		 DB	 1
  00175	01		 DB	 1
  00176	01		 DB	 1
  00177	01		 DB	 1
  00178	01		 DB	 1
  00179	01		 DB	 1
  0017a	01		 DB	 1
  0017b	01		 DB	 1
  0017c	01		 DB	 1
  0017d	01		 DB	 1
  0017e	01		 DB	 1
  0017f	01		 DB	 1
  00180	01		 DB	 1
  00181	01		 DB	 1
  00182	01		 DB	 1
  00183	01		 DB	 1
  00184	01		 DB	 1
  00185	01		 DB	 1
  00186	01		 DB	 1
  00187	01		 DB	 1
  00188	01		 DB	 1
  00189	01		 DB	 1
  0018a	01		 DB	 1
  0018b	01		 DB	 1
  0018c	01		 DB	 1
  0018d	01		 DB	 1
  0018e	01		 DB	 1
  0018f	01		 DB	 1
  00190	01		 DB	 1
  00191	01		 DB	 1
  00192	01		 DB	 1
  00193	01		 DB	 1
  00194	01		 DB	 1
  00195	01		 DB	 1
  00196	01		 DB	 1
  00197	01		 DB	 1
  00198	01		 DB	 1
  00199	01		 DB	 1
  0019a	01		 DB	 1
  0019b	01		 DB	 1
  0019c	01		 DB	 1
  0019d	01		 DB	 1
  0019e	01		 DB	 1
  0019f	01		 DB	 1
  001a0	01		 DB	 1
  001a1	01		 DB	 1
  001a2	01		 DB	 1
  001a3	01		 DB	 1
  001a4	01		 DB	 1
  001a5	01		 DB	 1
  001a6	01		 DB	 1
  001a7	01		 DB	 1
  001a8	01		 DB	 1
  001a9	01		 DB	 1
  001aa	01		 DB	 1
  001ab	01		 DB	 1
  001ac	01		 DB	 1
  001ad	01		 DB	 1
  001ae	01		 DB	 1
  001af	01		 DB	 1
  001b0	01		 DB	 1
  001b1	01		 DB	 1
  001b2	01		 DB	 1
  001b3	01		 DB	 1
  001b4	01		 DB	 1
  001b5	01		 DB	 1
  001b6	01		 DB	 1
  001b7	01		 DB	 1
  001b8	01		 DB	 1
  001b9	01		 DB	 1
  001ba	01		 DB	 1
  001bb	01		 DB	 1
  001bc	01		 DB	 1
  001bd	01		 DB	 1
  001be	01		 DB	 1
  001bf	01		 DB	 1
  001c0	01		 DB	 1
  001c1	01		 DB	 1
  001c2	01		 DB	 1
  001c3	01		 DB	 1
  001c4	01		 DB	 1
  001c5	01		 DB	 1
  001c6	01		 DB	 1
  001c7	01		 DB	 1
  001c8	01		 DB	 1
  001c9	01		 DB	 1
  001ca	01		 DB	 1
  001cb	01		 DB	 1
  001cc	01		 DB	 1
  001cd	01		 DB	 1
  001ce	01		 DB	 1
  001cf	01		 DB	 1
  001d0	01		 DB	 1
  001d1	01		 DB	 1
  001d2	01		 DB	 1
  001d3	01		 DB	 1
  001d4	01		 DB	 1
  001d5	01		 DB	 1
  001d6	01		 DB	 1
  001d7	01		 DB	 1
  001d8	01		 DB	 1
  001d9	01		 DB	 1
  001da	01		 DB	 1
  001db	01		 DB	 1
  001dc	01		 DB	 1
  001dd	01		 DB	 1
  001de	01		 DB	 1
  001df	01		 DB	 1
  001e0	00		 DB	 0
?DefaultReflectionHandler@?$CWindowImplRoot@VCWindow@ATL@@@ATL@@SAHPAUHWND__@@IIJAAJ@Z ENDP ; ATL::CWindowImplRoot<ATL::CWindow>::DefaultReflectionHandler
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?GetWNDPROC@CWndProcThunk@ATL@@QAEP6GJPAUHWND__@@IIJ@ZXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWNDPROC@CWndProcThunk@ATL@@QAEP6GJPAUHWND__@@IIJ@ZXZ PROC ; ATL::CWndProcThunk::GetWNDPROC, COMDAT
; _this$ = ecx

; 2664 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2665 : 		return (WNDPROC)thunk.GetCodeAddress();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00014	e8 00 00 00 00	 call	 ?GetCodeAddress@CDynamicStdCallThunk2@ATL@@QAEPAXXZ ; ATL::CDynamicStdCallThunk2::GetCodeAddress

; 2666 : 	}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?GetWNDPROC@CWndProcThunk@ATL@@QAEP6GJPAUHWND__@@IIJ@ZXZ ENDP ; ATL::CWndProcThunk::GetWNDPROC
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?Init@CWndProcThunk@ATL@@QAEHP6GJPAUHWND__@@IIJ@ZPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_proc$ = 8						; size = 4
_pThis$ = 12						; size = 4
?Init@CWndProcThunk@ATL@@QAEHP6GJPAUHWND__@@IIJ@ZPAX@Z PROC ; ATL::CWndProcThunk::Init, COMDAT
; _this$ = ecx

; 2660 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2661 : 		return thunk.Init((DWORD_PTR)proc, pThis);

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _pThis$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _proc$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0001c	e8 00 00 00 00	 call	 ?Init@CDynamicStdCallThunk2@ATL@@QAEHKPAX@Z ; ATL::CDynamicStdCallThunk2::Init

; 2662 : 	}

  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
?Init@CWndProcThunk@ATL@@QAEHP6GJPAUHWND__@@IIJ@ZPAX@Z ENDP ; ATL::CWndProcThunk::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?ShowWindow@CWindow@ATL@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nCmdShow$ = 8						; size = 4
?ShowWindow@CWindow@ATL@@QAEHH@Z PROC			; ATL::CWindow::ShowWindow, COMDAT
; _this$ = ecx

; 1287 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1288 : 		ATLASSERT(::IsWindow(m_hWnd));

  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  0001d	3b f4		 cmp	 esi, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	85 c0		 test	 eax, eax
  00026	75 26		 jne	 SHORT $LN3@ShowWindow
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@OFEMDDJL@?$AA?3?$AA?3?$AAI?$AAs?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?$CI?$AAm?$AA_?$AAh?$AAW@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00032	6a 00		 push	 0
  00034	68 08 05 00 00	 push	 1288			; 00000508H
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@EJAAKNNE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0003e	6a 02		 push	 2
  00040	e8 00 00 00 00	 call	 __CrtDbgReportW
  00045	83 c4 18	 add	 esp, 24			; 00000018H
  00048	83 f8 01	 cmp	 eax, 1
  0004b	75 01		 jne	 SHORT $LN3@ShowWindow
  0004d	cc		 int	 3
$LN3@ShowWindow:

; 1289 : 		return ::ShowWindow(m_hWnd, nCmdShow);

  0004e	8b f4		 mov	 esi, esp
  00050	8b 45 08	 mov	 eax, DWORD PTR _nCmdShow$[ebp]
  00053	50		 push	 eax
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	8b 11		 mov	 edx, DWORD PTR [ecx]
  00059	52		 push	 edx
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  00060	3b f4		 cmp	 esi, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1290 : 	}

  00067	5e		 pop	 esi
  00068	83 c4 04	 add	 esp, 4
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?ShowWindow@CWindow@ATL@@QAEHH@Z ENDP			; ATL::CWindow::ShowWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?GetWndClassName@CWindow@ATL@@SAPB_WXZ
_TEXT	SEGMENT
?GetWndClassName@CWindow@ATL@@SAPB_WXZ PROC		; ATL::CWindow::GetWndClassName, COMDAT

; 805  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 806  : 		return NULL;

  00003	33 c0		 xor	 eax, eax

; 807  : 	}

  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
?GetWndClassName@CWindow@ATL@@SAPB_WXZ ENDP		; ATL::CWindow::GetWndClassName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?Register@_ATL_WNDCLASSINFOW@ATL@@QAEGPAP6GJPAUHWND__@@IIJ@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
?Register@_ATL_WNDCLASSINFOW@ATL@@QAEGPAP6GJPAUHWND__@@IIJ@Z@Z PROC ; ATL::_ATL_WNDCLASSINFOW::Register, COMDAT
; _this$ = ecx

; 331  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 332  : 		return AtlWinModuleRegisterWndClassInfoW(&_AtlWinModule, &_AtlBaseModule, this, p);

  0000e	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	51		 push	 ecx
  00016	68 00 00 00 00	 push	 OFFSET ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A ; ATL::_AtlBaseModule
  0001b	68 00 00 00 00	 push	 OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  00020	e8 00 00 00 00	 call	 ?AtlWinModuleRegisterWndClassInfoW@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PAU_ATL_BASE_MODULE70@1@PAU_ATL_WNDCLASSINFOW@1@PAP6GJPAUHWND__@@IIJ@Z@Z ; ATL::AtlWinModuleRegisterWndClassInfoW

; 333  : 	}

  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?Register@_ATL_WNDCLASSINFOW@ATL@@QAEGPAP6GJPAUHWND__@@IIJ@Z@Z ENDP ; ATL::_ATL_WNDCLASSINFOW::Register
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParamIn$ = 16						; size = 4
_lParamIn$ = 20						; size = 4
_bHandledIn$ = 24					; size = 4
??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z PROC		; ATL::_ATL_MSG::_ATL_MSG, COMDAT
; _this$ = ecx

; 282  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 281  : 		cbSize(sizeof(_ATL_MSG)), bHandled(bHandledIn)

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 40 1c 24 00
	00 00		 mov	 DWORD PTR [eax+28], 36	; 00000024H
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 18	 mov	 edx, DWORD PTR _bHandledIn$[ebp]
  0001e	89 51 20	 mov	 DWORD PTR [ecx+32], edx

; 283  : 		hwnd = hWnd;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  00027	89 08		 mov	 DWORD PTR [eax], ecx

; 284  : 		message = uMsg;

  00029	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002c	8b 45 0c	 mov	 eax, DWORD PTR _uMsg$[ebp]
  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 285  : 		wParam = wParamIn;

  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	8b 55 10	 mov	 edx, DWORD PTR _wParamIn$[ebp]
  00038	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 286  : 		lParam = lParamIn;

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 4d 14	 mov	 ecx, DWORD PTR _lParamIn$[ebp]
  00041	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 287  : 		time = 0;

  00044	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00047	c7 42 10 00 00
	00 00		 mov	 DWORD PTR [edx+16], 0

; 288  : 		pt.x = pt.y = 0;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
  00058	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 289  : 	}

  00062	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 14 00	 ret	 20			; 00000014H
??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z ENDP		; ATL::_ATL_MSG::_ATL_MSG
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?AtlHiMetricToPixel@ATL@@YGXPBUtagSIZE@@PAU2@@Z
_TEXT	SEGMENT
tv81 = -28						; size = 4
tv65 = -24						; size = 4
_hDCScreen$ = -20					; size = 4
_nPixelsPerInchY$ = -16					; size = 4
_nPixelsPerInchX$ = -12					; size = 4
___atl_condVal$1 = -8					; size = 4
___atl_condVal$2 = -4					; size = 4
_lpSizeInHiMetric$ = 8					; size = 4
_lpSizeInPix$ = 12					; size = 4
?AtlHiMetricToPixel@ATL@@YGXPBUtagSIZE@@PAU2@@Z PROC	; ATL::AtlHiMetricToPixel, COMDAT

; 5436 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000f	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00012	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00015	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00018	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001b	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001e	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
$LN4@AtlHiMetri:

; 5437 : 	ATLENSURE_THROW(lpSizeInHiMetric!=NULL, E_POINTER);

  00021	83 7d 08 00	 cmp	 DWORD PTR _lpSizeInHiMetric$[ebp], 0
  00025	74 09		 je	 SHORT $LN20@AtlHiMetri
  00027	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
  0002e	eb 07		 jmp	 SHORT $LN21@AtlHiMetri
$LN20@AtlHiMetri:
  00030	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv65[ebp], 0
$LN21@AtlHiMetri:
  00037	8b 45 e8	 mov	 eax, DWORD PTR tv65[ebp]
  0003a	89 45 fc	 mov	 DWORD PTR ___atl_condVal$2[ebp], eax
$LN7@AtlHiMetri:
  0003d	83 7d fc 00	 cmp	 DWORD PTR ___atl_condVal$2[ebp], 0
  00041	75 26		 jne	 SHORT $LN5@AtlHiMetri
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0004d	6a 00		 push	 0
  0004f	68 3d 15 00 00	 push	 5437			; 0000153dH
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@EJAAKNNE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00059	6a 02		 push	 2
  0005b	e8 00 00 00 00	 call	 __CrtDbgReportW
  00060	83 c4 18	 add	 esp, 24			; 00000018H
  00063	83 f8 01	 cmp	 eax, 1
  00066	75 01		 jne	 SHORT $LN5@AtlHiMetri
  00068	cc		 int	 3
$LN5@AtlHiMetri:
  00069	33 d2		 xor	 edx, edx
  0006b	75 d0		 jne	 SHORT $LN7@AtlHiMetri
  0006d	83 7d fc 00	 cmp	 DWORD PTR ___atl_condVal$2[ebp], 0
  00071	75 0a		 jne	 SHORT $LN2@AtlHiMetri
  00073	68 03 40 00 80	 push	 -2147467261		; 80004003H
  00078	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@AtlHiMetri:
  0007d	33 c0		 xor	 eax, eax
  0007f	75 a0		 jne	 SHORT $LN4@AtlHiMetri
$LN10@AtlHiMetri:

; 5438 : 	ATLENSURE_THROW(lpSizeInPix!=NULL, E_POINTER);

  00081	83 7d 0c 00	 cmp	 DWORD PTR _lpSizeInPix$[ebp], 0
  00085	74 09		 je	 SHORT $LN23@AtlHiMetri
  00087	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR tv81[ebp], 1
  0008e	eb 07		 jmp	 SHORT $LN24@AtlHiMetri
$LN23@AtlHiMetri:
  00090	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN24@AtlHiMetri:
  00097	8b 4d e4	 mov	 ecx, DWORD PTR tv81[ebp]
  0009a	89 4d f8	 mov	 DWORD PTR ___atl_condVal$1[ebp], ecx
$LN13@AtlHiMetri:
  0009d	83 7d f8 00	 cmp	 DWORD PTR ___atl_condVal$1[ebp], 0
  000a1	75 26		 jne	 SHORT $LN11@AtlHiMetri
  000a3	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000ad	6a 00		 push	 0
  000af	68 3e 15 00 00	 push	 5438			; 0000153eH
  000b4	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@EJAAKNNE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000b9	6a 02		 push	 2
  000bb	e8 00 00 00 00	 call	 __CrtDbgReportW
  000c0	83 c4 18	 add	 esp, 24			; 00000018H
  000c3	83 f8 01	 cmp	 eax, 1
  000c6	75 01		 jne	 SHORT $LN11@AtlHiMetri
  000c8	cc		 int	 3
$LN11@AtlHiMetri:
  000c9	33 c0		 xor	 eax, eax
  000cb	75 d0		 jne	 SHORT $LN13@AtlHiMetri
  000cd	83 7d f8 00	 cmp	 DWORD PTR ___atl_condVal$1[ebp], 0
  000d1	75 0a		 jne	 SHORT $LN8@AtlHiMetri
  000d3	68 03 40 00 80	 push	 -2147467261		; 80004003H
  000d8	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN8@AtlHiMetri:
  000dd	33 c9		 xor	 ecx, ecx
  000df	75 a0		 jne	 SHORT $LN10@AtlHiMetri

; 5439 : 	int nPixelsPerInchX;    // Pixels per logical inch along width
; 5440 : 	int nPixelsPerInchY;    // Pixels per logical inch along height
; 5441 : 
; 5442 : 	HDC hDCScreen = GetDC(NULL);

  000e1	8b f4		 mov	 esi, esp
  000e3	6a 00		 push	 0
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDC@4
  000eb	3b f4		 cmp	 esi, esp
  000ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f2	89 45 ec	 mov	 DWORD PTR _hDCScreen$[ebp], eax
$LN16@AtlHiMetri:

; 5443 : 	ATLASSUME(hDCScreen != NULL);

  000f5	83 7d ec 00	 cmp	 DWORD PTR _hDCScreen$[ebp], 0
  000f9	75 26		 jne	 SHORT $LN14@AtlHiMetri
  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@EKDDFOBL@?$AAh?$AAD?$AAC?$AAS?$AAc?$AAr?$AAe?$AAe?$AAn?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00105	6a 00		 push	 0
  00107	68 43 15 00 00	 push	 5443			; 00001543H
  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@EJAAKNNE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00111	6a 02		 push	 2
  00113	e8 00 00 00 00	 call	 __CrtDbgReportW
  00118	83 c4 18	 add	 esp, 24			; 00000018H
  0011b	83 f8 01	 cmp	 eax, 1
  0011e	75 01		 jne	 SHORT $LN14@AtlHiMetri
  00120	cc		 int	 3
$LN14@AtlHiMetri:
  00121	33 c0		 xor	 eax, eax
  00123	75 d0		 jne	 SHORT $LN16@AtlHiMetri

; 5444 : 	nPixelsPerInchX = GetDeviceCaps(hDCScreen, LOGPIXELSX);

  00125	8b f4		 mov	 esi, esp
  00127	6a 58		 push	 88			; 00000058H
  00129	8b 4d ec	 mov	 ecx, DWORD PTR _hDCScreen$[ebp]
  0012c	51		 push	 ecx
  0012d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDeviceCaps@8
  00133	3b f4		 cmp	 esi, esp
  00135	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013a	89 45 f4	 mov	 DWORD PTR _nPixelsPerInchX$[ebp], eax

; 5445 : 	nPixelsPerInchY = GetDeviceCaps(hDCScreen, LOGPIXELSY);

  0013d	8b f4		 mov	 esi, esp
  0013f	6a 5a		 push	 90			; 0000005aH
  00141	8b 55 ec	 mov	 edx, DWORD PTR _hDCScreen$[ebp]
  00144	52		 push	 edx
  00145	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDeviceCaps@8
  0014b	3b f4		 cmp	 esi, esp
  0014d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00152	89 45 f0	 mov	 DWORD PTR _nPixelsPerInchY$[ebp], eax

; 5446 : 	ReleaseDC(NULL, hDCScreen);

  00155	8b f4		 mov	 esi, esp
  00157	8b 45 ec	 mov	 eax, DWORD PTR _hDCScreen$[ebp]
  0015a	50		 push	 eax
  0015b	6a 00		 push	 0
  0015d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseDC@8
  00163	3b f4		 cmp	 esi, esp
  00165	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 5447 : 
; 5448 : 	lpSizeInPix->cx = MAP_LOGHIM_TO_PIX(lpSizeInHiMetric->cx, nPixelsPerInchX);

  0016a	8b f4		 mov	 esi, esp
  0016c	68 ec 09 00 00	 push	 2540			; 000009ecH
  00171	8b 4d 08	 mov	 ecx, DWORD PTR _lpSizeInHiMetric$[ebp]
  00174	8b 11		 mov	 edx, DWORD PTR [ecx]
  00176	52		 push	 edx
  00177	8b 45 f4	 mov	 eax, DWORD PTR _nPixelsPerInchX$[ebp]
  0017a	50		 push	 eax
  0017b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MulDiv@12
  00181	3b f4		 cmp	 esi, esp
  00183	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00188	8b 4d 0c	 mov	 ecx, DWORD PTR _lpSizeInPix$[ebp]
  0018b	89 01		 mov	 DWORD PTR [ecx], eax

; 5449 : 	lpSizeInPix->cy = MAP_LOGHIM_TO_PIX(lpSizeInHiMetric->cy, nPixelsPerInchY);

  0018d	8b f4		 mov	 esi, esp
  0018f	68 ec 09 00 00	 push	 2540			; 000009ecH
  00194	8b 55 08	 mov	 edx, DWORD PTR _lpSizeInHiMetric$[ebp]
  00197	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0019a	50		 push	 eax
  0019b	8b 4d f0	 mov	 ecx, DWORD PTR _nPixelsPerInchY$[ebp]
  0019e	51		 push	 ecx
  0019f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MulDiv@12
  001a5	3b f4		 cmp	 esi, esp
  001a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ac	8b 55 0c	 mov	 edx, DWORD PTR _lpSizeInPix$[ebp]
  001af	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN19@AtlHiMetri:

; 5450 : }

  001b2	5e		 pop	 esi
  001b3	83 c4 1c	 add	 esp, 28			; 0000001cH
  001b6	3b ec		 cmp	 ebp, esp
  001b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001bd	8b e5		 mov	 esp, ebp
  001bf	5d		 pop	 ebp
  001c0	c2 08 00	 ret	 8
?AtlHiMetricToPixel@ATL@@YGXPBUtagSIZE@@PAU2@@Z ENDP	; ATL::AtlHiMetricToPixel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?AtlCreateTargetDC@ATL@@YGPAUHDC__@@PAU2@PAUtagDVTARGETDEVICE@@@Z
_TEXT	SEGMENT
$T1 = -56						; size = 4
$T2 = -52						; size = 4
$T3 = -48						; size = 4
_lpszPortName$4 = -44					; size = 4
_lpszDeviceName$5 = -40					; size = 4
_lpszDriverName$6 = -36					; size = 4
_lpDevMode$7 = -32					; size = 4
__AtlSafeAllocaManager$ = -24				; size = 4
__lpa_ex$ = -16						; size = 4
__lpw_ex$ = -12						; size = 4
__acp_ex$ = -8						; size = 4
__convert_ex$ = -4					; size = 4
_hdc$ = 8						; size = 4
_ptd$ = 12						; size = 4
?AtlCreateTargetDC@ATL@@YGPAUHDC__@@PAU2@PAUtagDVTARGETDEVICE@@@Z PROC ; ATL::AtlCreateTargetDC, COMDAT

; 5394 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d c8	 lea	 edi, DWORD PTR [ebp-56]
  0000b	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd

; 5395 : 	USES_CONVERSION_EX;

  00017	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __convert_ex$[ebp], 0
  0001e	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00023	89 45 f8	 mov	 DWORD PTR __acp_ex$[ebp], eax
  00026	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __lpw_ex$[ebp], 0
  0002d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __lpa_ex$[ebp], 0
  00034	8d 4d e8	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00037	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>

; 5396 : 
; 5397 : 	// cases  hdc, ptd, hdc is metafile, hic
; 5398 : //  NULL,    NULL,  n/a,    Display
; 5399 : //  NULL,   !NULL,  n/a,    ptd
; 5400 : //  !NULL,   NULL,  FALSE,  hdc
; 5401 : //  !NULL,   NULL,  TRUE,   display
; 5402 : //  !NULL,  !NULL,  FALSE,  ptd
; 5403 : //  !NULL,  !NULL,  TRUE,   ptd
; 5404 : 
; 5405 : 	if (ptd != NULL)

  0003c	83 7d 0c 00	 cmp	 DWORD PTR _ptd$[ebp], 0
  00040	0f 84 9d 00 00
	00		 je	 $LN2@AtlCreateT

; 5406 : 	{
; 5407 : 		LPDEVMODEOLE lpDevMode;
; 5408 : 		LPOLESTR lpszDriverName;
; 5409 : 		LPOLESTR lpszDeviceName;
; 5410 : 		LPOLESTR lpszPortName;
; 5411 : 
; 5412 : 		if (ptd->tdExtDevmodeOffset == 0)

  00046	8b 45 0c	 mov	 eax, DWORD PTR _ptd$[ebp]
  00049	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  0004d	85 c9		 test	 ecx, ecx
  0004f	75 09		 jne	 SHORT $LN4@AtlCreateT

; 5413 : 			lpDevMode = NULL;

  00051	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _lpDevMode$7[ebp], 0
  00058	eb 0d		 jmp	 SHORT $LN5@AtlCreateT
$LN4@AtlCreateT:

; 5414 : 		else
; 5415 : 			lpDevMode  = (LPDEVMODEOLE) ((LPSTR)ptd + ptd->tdExtDevmodeOffset);

  0005a	8b 55 0c	 mov	 edx, DWORD PTR _ptd$[ebp]
  0005d	0f b7 42 0a	 movzx	 eax, WORD PTR [edx+10]
  00061	03 45 0c	 add	 eax, DWORD PTR _ptd$[ebp]
  00064	89 45 e0	 mov	 DWORD PTR _lpDevMode$7[ebp], eax
$LN5@AtlCreateT:

; 5416 : 
; 5417 : 		lpszDriverName = (LPOLESTR)((BYTE*)ptd + ptd->tdDriverNameOffset);

  00067	8b 4d 0c	 mov	 ecx, DWORD PTR _ptd$[ebp]
  0006a	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  0006e	03 55 0c	 add	 edx, DWORD PTR _ptd$[ebp]
  00071	89 55 dc	 mov	 DWORD PTR _lpszDriverName$6[ebp], edx

; 5418 : 		lpszDeviceName = (LPOLESTR)((BYTE*)ptd + ptd->tdDeviceNameOffset);

  00074	8b 45 0c	 mov	 eax, DWORD PTR _ptd$[ebp]
  00077	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  0007b	03 4d 0c	 add	 ecx, DWORD PTR _ptd$[ebp]
  0007e	89 4d d8	 mov	 DWORD PTR _lpszDeviceName$5[ebp], ecx

; 5419 : 		lpszPortName   = (LPOLESTR)((BYTE*)ptd + ptd->tdPortNameOffset);

  00081	8b 55 0c	 mov	 edx, DWORD PTR _ptd$[ebp]
  00084	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  00088	03 45 0c	 add	 eax, DWORD PTR _ptd$[ebp]
  0008b	89 45 d4	 mov	 DWORD PTR _lpszPortName$4[ebp], eax

; 5420 : 
; 5421 : 		return ::CreateDC(OLE2CT_EX_DEF(lpszDriverName), OLE2CT_EX_DEF(lpszDeviceName), OLE2CT_EX_DEF(lpszPortName), DEVMODEOLE2T_EX(lpDevMode));

  0008e	8b 4d e0	 mov	 ecx, DWORD PTR _lpDevMode$7[ebp]
  00091	51		 push	 ecx
  00092	e8 00 00 00 00	 call	 ?DEVMODEOLE2T_EX@@YAPAU_devicemodeW@@PAU1@@Z ; DEVMODEOLE2T_EX
  00097	83 c4 04	 add	 esp, 4
  0009a	8b f4		 mov	 esi, esp
  0009c	50		 push	 eax
  0009d	8b 55 d4	 mov	 edx, DWORD PTR _lpszPortName$4[ebp]
  000a0	52		 push	 edx
  000a1	e8 00 00 00 00	 call	 ?OLE2CT_EX_DEF@@YAPB_WPB_W@Z ; OLE2CT_EX_DEF
  000a6	83 c4 04	 add	 esp, 4
  000a9	50		 push	 eax
  000aa	8b 45 d8	 mov	 eax, DWORD PTR _lpszDeviceName$5[ebp]
  000ad	50		 push	 eax
  000ae	e8 00 00 00 00	 call	 ?OLE2CT_EX_DEF@@YAPB_WPB_W@Z ; OLE2CT_EX_DEF
  000b3	83 c4 04	 add	 esp, 4
  000b6	50		 push	 eax
  000b7	8b 4d dc	 mov	 ecx, DWORD PTR _lpszDriverName$6[ebp]
  000ba	51		 push	 ecx
  000bb	e8 00 00 00 00	 call	 ?OLE2CT_EX_DEF@@YAPB_WPB_W@Z ; OLE2CT_EX_DEF
  000c0	83 c4 04	 add	 esp, 4
  000c3	50		 push	 eax
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateDCW@16
  000ca	3b f4		 cmp	 esi, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d1	89 45 d0	 mov	 DWORD PTR $T3[ebp], eax
  000d4	8d 4d e8	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  000d7	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  000dc	8b 45 d0	 mov	 eax, DWORD PTR $T3[ebp]
  000df	eb 69		 jmp	 SHORT $LN1@AtlCreateT

; 5422 : 	}

  000e1	eb 5f		 jmp	 SHORT $LN3@AtlCreateT
$LN2@AtlCreateT:

; 5423 : 	else if (hdc == NULL || GetDeviceCaps(hdc, TECHNOLOGY) == DT_METAFILE)

  000e3	83 7d 08 00	 cmp	 DWORD PTR _hdc$[ebp], 0
  000e7	74 1a		 je	 SHORT $LN8@AtlCreateT
  000e9	8b f4		 mov	 esi, esp
  000eb	6a 02		 push	 2
  000ed	8b 55 08	 mov	 edx, DWORD PTR _hdc$[ebp]
  000f0	52		 push	 edx
  000f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDeviceCaps@8
  000f7	3b f4		 cmp	 esi, esp
  000f9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fe	83 f8 05	 cmp	 eax, 5
  00101	75 2c		 jne	 SHORT $LN6@AtlCreateT
$LN8@AtlCreateT:

; 5424 : 		return ::CreateDC(_T("DISPLAY"), NULL, NULL, NULL);

  00103	8b f4		 mov	 esi, esp
  00105	6a 00		 push	 0
  00107	6a 00		 push	 0
  00109	6a 00		 push	 0
  0010b	68 00 00 00 00	 push	 OFFSET ??_C@_1BA@PICGEGJB@?$AAD?$AAI?$AAS?$AAP?$AAL?$AAA?$AAY@
  00110	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateDCW@16
  00116	3b f4		 cmp	 esi, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011d	89 45 cc	 mov	 DWORD PTR $T2[ebp], eax
  00120	8d 4d e8	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00123	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00128	8b 45 cc	 mov	 eax, DWORD PTR $T2[ebp]
  0012b	eb 1d		 jmp	 SHORT $LN1@AtlCreateT
  0012d	eb 13		 jmp	 SHORT $LN3@AtlCreateT
$LN6@AtlCreateT:

; 5425 : 	else
; 5426 : 		return hdc;

  0012f	8b 45 08	 mov	 eax, DWORD PTR _hdc$[ebp]
  00132	89 45 c8	 mov	 DWORD PTR $T1[ebp], eax
  00135	8d 4d e8	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00138	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  0013d	8b 45 c8	 mov	 eax, DWORD PTR $T1[ebp]
  00140	eb 08		 jmp	 SHORT $LN1@AtlCreateT
$LN3@AtlCreateT:

; 5427 : }

  00142	8d 4d e8	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00145	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
$LN1@AtlCreateT:
  0014a	52		 push	 edx
  0014b	8b cd		 mov	 ecx, ebp
  0014d	50		 push	 eax
  0014e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@AtlCreateT
  00154	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00159	58		 pop	 eax
  0015a	5a		 pop	 edx
  0015b	5f		 pop	 edi
  0015c	5e		 pop	 esi
  0015d	83 c4 38	 add	 esp, 56			; 00000038H
  00160	3b ec		 cmp	 ebp, esp
  00162	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00167	8b e5		 mov	 esp, ebp
  00169	5d		 pop	 ebp
  0016a	c2 08 00	 ret	 8
  0016d	0f 1f 00	 npad	 3
$LN12@AtlCreateT:
  00170	01 00 00 00	 DD	 1
  00174	00 00 00 00	 DD	 $LN11@AtlCreateT
$LN11@AtlCreateT:
  00178	e8 ff ff ff	 DD	 -24			; ffffffe8H
  0017c	04 00 00 00	 DD	 4
  00180	00 00 00 00	 DD	 $LN10@AtlCreateT
$LN10@AtlCreateT:
  00184	5f		 DB	 95			; 0000005fH
  00185	41		 DB	 65			; 00000041H
  00186	74		 DB	 116			; 00000074H
  00187	6c		 DB	 108			; 0000006cH
  00188	53		 DB	 83			; 00000053H
  00189	61		 DB	 97			; 00000061H
  0018a	66		 DB	 102			; 00000066H
  0018b	65		 DB	 101			; 00000065H
  0018c	41		 DB	 65			; 00000041H
  0018d	6c		 DB	 108			; 0000006cH
  0018e	6c		 DB	 108			; 0000006cH
  0018f	6f		 DB	 111			; 0000006fH
  00190	63		 DB	 99			; 00000063H
  00191	61		 DB	 97			; 00000061H
  00192	4d		 DB	 77			; 0000004dH
  00193	61		 DB	 97			; 00000061H
  00194	6e		 DB	 110			; 0000006eH
  00195	61		 DB	 97			; 00000061H
  00196	67		 DB	 103			; 00000067H
  00197	65		 DB	 101			; 00000065H
  00198	72		 DB	 114			; 00000072H
  00199	00		 DB	 0
?AtlCreateTargetDC@ATL@@YGPAUHDC__@@PAU2@PAUtagDVTARGETDEVICE@@@Z ENDP ; ATL::AtlCreateTargetDC
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?AtlWinModuleRegisterClassExW@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PBUtagWNDCLASSEXW@@@Z
_TEXT	SEGMENT
_bRet$1 = -16						; size = 4
_atom$ = -8						; size = 2
_pWinModule$ = 8					; size = 4
_lpwc$ = 12						; size = 4
?AtlWinModuleRegisterClassExW@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PBUtagWNDCLASSEXW@@@Z PROC ; ATL::AtlWinModuleRegisterClassExW, COMDAT

; 5271 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 5272 : 	if (pWinModule == NULL || lpwc == NULL)

  00018	83 7d 08 00	 cmp	 DWORD PTR _pWinModule$[ebp], 0
  0001c	74 06		 je	 SHORT $LN3@AtlWinModu
  0001e	83 7d 0c 00	 cmp	 DWORD PTR _lpwc$[ebp], 0
  00022	75 04		 jne	 SHORT $LN2@AtlWinModu
$LN3@AtlWinModu:

; 5273 : 		return 0;

  00024	33 c0		 xor	 eax, eax
  00026	eb 61		 jmp	 SHORT $LN1@AtlWinModu
$LN2@AtlWinModu:

; 5274 : 
; 5275 : 	ATOM atom = ::RegisterClassExW(lpwc);

  00028	8b f4		 mov	 esi, esp
  0002a	8b 45 0c	 mov	 eax, DWORD PTR _lpwc$[ebp]
  0002d	50		 push	 eax
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterClassExW@4
  00034	3b f4		 cmp	 esi, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	66 89 45 f8	 mov	 WORD PTR _atom$[ebp], ax

; 5276 : 	if (atom != 0)

  0003f	0f b7 4d f8	 movzx	 ecx, WORD PTR _atom$[ebp]
  00043	85 c9		 test	 ecx, ecx
  00045	74 3e		 je	 SHORT $LN4@AtlWinModu

; 5277 : 	{
; 5278 : 		BOOL bRet = pWinModule->m_rgWindowClassAtoms.Add(atom);

  00047	8d 55 f8	 lea	 edx, DWORD PTR _atom$[ebp]
  0004a	52		 push	 edx
  0004b	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  0004e	83 c1 20	 add	 ecx, 32			; 00000020H
  00051	e8 00 00 00 00	 call	 ?Add@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEHABG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Add
  00056	89 45 f0	 mov	 DWORD PTR _bRet$1[ebp], eax

; 5279 : 		ATLASSERT(bRet);

  00059	83 7d f0 00	 cmp	 DWORD PTR _bRet$1[ebp], 0
  0005d	75 26		 jne	 SHORT $LN4@AtlWinModu
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_19GCAABOFN@?$AAb?$AAR?$AAe?$AAt@
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00069	6a 00		 push	 0
  0006b	68 9f 14 00 00	 push	 5279			; 0000149fH
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@EJAAKNNE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00075	6a 02		 push	 2
  00077	e8 00 00 00 00	 call	 __CrtDbgReportW
  0007c	83 c4 18	 add	 esp, 24			; 00000018H
  0007f	83 f8 01	 cmp	 eax, 1
  00082	75 01		 jne	 SHORT $LN4@AtlWinModu
  00084	cc		 int	 3
$LN4@AtlWinModu:

; 5280 : 		(bRet);
; 5281 : 	}
; 5282 : 	return atom;

  00085	66 8b 45 f8	 mov	 ax, WORD PTR _atom$[ebp]
$LN1@AtlWinModu:

; 5283 : }

  00089	52		 push	 edx
  0008a	8b cd		 mov	 ecx, ebp
  0008c	50		 push	 eax
  0008d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@AtlWinModu
  00093	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00098	58		 pop	 eax
  00099	5a		 pop	 edx
  0009a	5e		 pop	 esi
  0009b	83 c4 10	 add	 esp, 16			; 00000010H
  0009e	3b ec		 cmp	 ebp, esp
  000a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c2 08 00	 ret	 8
  000ab	90		 npad	 1
$LN9@AtlWinModu:
  000ac	01 00 00 00	 DD	 1
  000b0	00 00 00 00	 DD	 $LN8@AtlWinModu
$LN8@AtlWinModu:
  000b4	f8 ff ff ff	 DD	 -8			; fffffff8H
  000b8	02 00 00 00	 DD	 2
  000bc	00 00 00 00	 DD	 $LN7@AtlWinModu
$LN7@AtlWinModu:
  000c0	61		 DB	 97			; 00000061H
  000c1	74		 DB	 116			; 00000074H
  000c2	6f		 DB	 111			; 0000006fH
  000c3	6d		 DB	 109			; 0000006dH
  000c4	00		 DB	 0
?AtlWinModuleRegisterClassExW@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PBUtagWNDCLASSEXW@@@Z ENDP ; ATL::AtlWinModuleRegisterClassExW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?AtlWinModuleRegisterWndClassInfoW@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PAU_ATL_BASE_MODULE70@1@PAU_ATL_WNDCLASSINFOW@1@PAP6GJPAUHWND__@@IIJ@Z@Z
_TEXT	SEGMENT
_templateParameter$ = -5				; size = 1
_pWinModule$ = 8					; size = 4
_pBaseModule$ = 12					; size = 4
_p$ = 16						; size = 4
_pProc$ = 20						; size = 4
?AtlWinModuleRegisterWndClassInfoW@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PAU_ATL_BASE_MODULE70@1@PAU_ATL_WNDCLASSINFOW@1@PAP6GJPAUHWND__@@IIJ@Z@Z PROC ; ATL::AtlWinModuleRegisterWndClassInfoW, COMDAT

; 5384 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 5385 : 	AtlModuleRegisterWndClassInfoParamW templateParameter;
; 5386 : 	return AtlModuleRegisterWndClassInfoT<AtlModuleRegisterWndClassInfoParamW>(

  0001b	0f b6 45 fb	 movzx	 eax, BYTE PTR _templateParameter$[ebp]
  0001f	50		 push	 eax
  00020	8b 4d 14	 mov	 ecx, DWORD PTR _pProc$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 10	 mov	 edx, DWORD PTR _p$[ebp]
  00027	52		 push	 edx
  00028	8b 45 08	 mov	 eax, DWORD PTR _pWinModule$[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d 0c	 mov	 ecx, DWORD PTR _pBaseModule$[ebp]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ??$AtlModuleRegisterWndClassInfoT@VAtlModuleRegisterWndClassInfoParamW@ATL@@@ATL@@YAGPAU_ATL_BASE_MODULE70@0@PAU_ATL_WIN_MODULE70@0@PAU_ATL_WNDCLASSINFOW@0@PAP6GJPAUHWND__@@IIJ@ZVAtlModuleRegisterWndClassInfoParamW@0@@Z ; ATL::AtlModuleRegisterWndClassInfoT<ATL::AtlModuleRegisterWndClassInfoParamW>
  00035	83 c4 14	 add	 esp, 20			; 00000014H

; 5387 : 		pBaseModule, pWinModule, p, pProc, templateParameter);
; 5388 : }

  00038	52		 push	 edx
  00039	8b cd		 mov	 ecx, ebp
  0003b	50		 push	 eax
  0003c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@AtlWinModu
  00042	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00047	58		 pop	 eax
  00048	5a		 pop	 edx
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 10 00	 ret	 16			; 00000010H
  00059	0f 1f 00	 npad	 3
$LN5@AtlWinModu:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN4@AtlWinModu
$LN4@AtlWinModu:
  00064	fb ff ff ff	 DD	 -5			; fffffffbH
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN3@AtlWinModu
$LN3@AtlWinModu:
  00070	74		 DB	 116			; 00000074H
  00071	65		 DB	 101			; 00000065H
  00072	6d		 DB	 109			; 0000006dH
  00073	70		 DB	 112			; 00000070H
  00074	6c		 DB	 108			; 0000006cH
  00075	61		 DB	 97			; 00000061H
  00076	74		 DB	 116			; 00000074H
  00077	65		 DB	 101			; 00000065H
  00078	50		 DB	 80			; 00000050H
  00079	61		 DB	 97			; 00000061H
  0007a	72		 DB	 114			; 00000072H
  0007b	61		 DB	 97			; 00000061H
  0007c	6d		 DB	 109			; 0000006dH
  0007d	65		 DB	 101			; 00000065H
  0007e	74		 DB	 116			; 00000074H
  0007f	65		 DB	 101			; 00000065H
  00080	72		 DB	 114			; 00000072H
  00081	00		 DB	 0
?AtlWinModuleRegisterWndClassInfoW@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PAU_ATL_BASE_MODULE70@1@PAU_ATL_WNDCLASSINFOW@1@PAP6GJPAUHWND__@@IIJ@Z@Z ENDP ; ATL::AtlWinModuleRegisterWndClassInfoW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ??0_U_MENUorID@ATL@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nID$ = 8						; size = 4
??0_U_MENUorID@ATL@@QAE@I@Z PROC			; ATL::_U_MENUorID::_U_MENUorID, COMDAT
; _this$ = ecx

; 122  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 121  : 	_U_MENUorID(_In_ UINT nID) : m_hMenu((HMENU)(UINT_PTR)nID)

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _nID$[ebp]
  00014	89 08		 mov	 DWORD PTR [eax], ecx

; 123  : 	}

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??0_U_MENUorID@ATL@@QAE@I@Z ENDP			; ATL::_U_MENUorID::_U_MENUorID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ??0_U_RECT@ATL@@QAE@AAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rc$ = 8						; size = 4
??0_U_RECT@ATL@@QAE@AAUtagRECT@@@Z PROC			; ATL::_U_RECT::_U_RECT, COMDAT
; _this$ = ecx

; 110  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 109  : 	_U_RECT(_In_ RECT& rc) : m_lpRect(&rc)

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _rc$[ebp]
  00014	89 08		 mov	 DWORD PTR [eax], ecx

; 111  : 	}

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??0_U_RECT@ATL@@QAE@AAUtagRECT@@@Z ENDP			; ATL::_U_RECT::_U_RECT
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?GetWindowLongPtrW@@YAJPAUHWND__@@H@Z
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_nIndex$ = 12						; size = 4
?GetWindowLongPtrW@@YAJPAUHWND__@@H@Z PROC		; GetWindowLongPtrW, COMDAT

; 86   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 87   : 	return( ::GetWindowLongW( hWnd, nIndex ) );

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongW@8
  00014	3b f4		 cmp	 esi, esp
  00016	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 88   : }

  0001b	5e		 pop	 esi
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?GetWindowLongPtrW@@YAJPAUHWND__@@H@Z ENDP		; GetWindowLongPtrW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwin.h
;	COMDAT ?SetWindowLongPtrW@@YAJPAUHWND__@@HJ@Z
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_nIndex$ = 12						; size = 4
_dwNewLong$ = 16					; size = 4
?SetWindowLongPtrW@@YAJPAUHWND__@@HJ@Z PROC		; SetWindowLongPtrW, COMDAT

; 66   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 67   : 	return( ::SetWindowLongW( hWnd, nIndex, LONG( dwNewLong ) ) );

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 10	 mov	 eax, DWORD PTR _dwNewLong$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0000d	51		 push	 ecx
  0000e	8b 55 08	 mov	 edx, DWORD PTR _hWnd$[ebp]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongW@12
  00018	3b f4		 cmp	 esi, esp
  0001a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 68   : }

  0001f	5e		 pop	 esi
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?SetWindowLongPtrW@@YAJPAUHWND__@@HJ@Z ENDP		; SetWindowLongPtrW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIProvideClassInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIProvideClassInfo2@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IProvideClassInfo2>::~CComPtr<IProvideClassInfo2>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IProvideClassInfo2>::~CComPtrBase<IProvideClassInfo2>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIProvideClassInfo2@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IProvideClassInfo2>::~CComPtr<IProvideClassInfo2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIProvideClassInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIProvideClassInfo2@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IProvideClassInfo2>::CComPtr<IProvideClassInfo2>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIProvideClassInfo2@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IProvideClassInfo2>::CComPtrBase<IProvideClassInfo2>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIProvideClassInfo2@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IProvideClassInfo2>::CComPtr<IProvideClassInfo2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIProvideClassInfo2@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIProvideClassInfo2@@@1@XZ PROC ; ATL::CComPtrBase<IProvideClassInfo2>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIProvideClassInfo2@@@1@XZ ENDP ; ATL::CComPtrBase<IProvideClassInfo2>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QAEPAPAUIProvideClassInfo2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QAEPAPAUIProvideClassInfo2@@XZ PROC ; ATL::CComPtrBase<IProvideClassInfo2>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QAEPAPAUIProvideClassInfo2@@XZ ENDP ; ATL::CComPtrBase<IProvideClassInfo2>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QBEPAUIProvideClassInfo2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QBEPAUIProvideClassInfo2@@XZ PROC ; ATL::CComPtrBase<IProvideClassInfo2>::operator IProvideClassInfo2 *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QBEPAUIProvideClassInfo2@@XZ ENDP ; ATL::CComPtrBase<IProvideClassInfo2>::operator IProvideClassInfo2 *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IProvideClassInfo2>::~CComPtrBase<IProvideClassInfo2>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IProvideClassInfo2>::~CComPtrBase<IProvideClassInfo2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIProvideClassInfo2@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIProvideClassInfo2@@@ATL@@IAE@XZ PROC	; ATL::CComPtrBase<IProvideClassInfo2>::CComPtrBase<IProvideClassInfo2>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIProvideClassInfo2@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IProvideClassInfo2>::CComPtrBase<IProvideClassInfo2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetSize@CComDynamicUnkArray@ATL@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSize@CComDynamicUnkArray@ATL@@QBEHXZ PROC		; ATL::CComDynamicUnkArray::GetSize, COMDAT
; _this$ = ecx

; 6205 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 6206 : 		return m_nSize;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 6207 : 	}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetSize@CComDynamicUnkArray@ATL@@QBEHXZ ENDP		; ATL::CComDynamicUnkArray::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetAt@CComDynamicUnkArray@ATL@@QAEPAUIUnknown@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?GetAt@CComDynamicUnkArray@ATL@@QAEPAUIUnknown@@H@Z PROC ; ATL::CComDynamicUnkArray::GetAt, COMDAT
; _this$ = ecx

; 6196 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 6197 : 		ATLASSERT(nIndex >= 0 && nIndex < m_nSize);

  0000e	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00012	7c 0b		 jl	 SHORT $LN5@GetAt
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001a	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  0001d	7c 26		 jl	 SHORT $LN6@GetAt
$LN5@GetAt:
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00029	6a 00		 push	 0
  0002b	68 35 18 00 00	 push	 6197			; 00001835H
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00035	6a 02		 push	 2
  00037	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003c	83 c4 18	 add	 esp, 24			; 00000018H
  0003f	83 f8 01	 cmp	 eax, 1
  00042	75 01		 jne	 SHORT $LN6@GetAt
  00044	cc		 int	 3
$LN6@GetAt:

; 6198 : 		if (nIndex >= 0 && nIndex < m_nSize)

  00045	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00049	7c 1a		 jl	 SHORT $LN2@GetAt
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00051	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00054	7d 0f		 jge	 SHORT $LN2@GetAt

; 6199 : 			return m_ppUnk[nIndex];

  00056	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00059	8b 02		 mov	 eax, DWORD PTR [edx]
  0005b	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0005e	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  00061	eb 04		 jmp	 SHORT $LN1@GetAt
  00063	eb 02		 jmp	 SHORT $LN1@GetAt
$LN2@GetAt:

; 6200 : 		else
; 6201 : 			return NULL;

  00065	33 c0		 xor	 eax, eax
$LN1@GetAt:

; 6202 : 
; 6203 : 	}

  00067	83 c4 04	 add	 esp, 4
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 04 00	 ret	 4
?GetAt@CComDynamicUnkArray@ATL@@QAEPAUIUnknown@@H@Z ENDP ; ATL::CComDynamicUnkArray::GetAt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?end@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?end@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ PROC	; ATL::CComDynamicUnkArray::end, COMDAT
; _this$ = ecx

; 6191 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 6192 : 		return &m_ppUnk[m_nSize];

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	8b 02		 mov	 eax, DWORD PTR [edx]
  00019	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 6193 : 	}

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?end@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ ENDP	; ATL::CComDynamicUnkArray::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?begin@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?begin@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ PROC ; ATL::CComDynamicUnkArray::begin, COMDAT
; _this$ = ecx

; 6187 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 6188 : 		return m_ppUnk;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 6189 : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?begin@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ ENDP ; ATL::CComDynamicUnkArray::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetUnknown@CComDynamicUnkArray@ATL@@QAGPAUIUnknown@@K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_dwCookie$ = 12						; size = 4
?GetUnknown@CComDynamicUnkArray@ATL@@QAGPAUIUnknown@@K@Z PROC ; ATL::CComDynamicUnkArray::GetUnknown, COMDAT

; 6177 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 6178 : #ifndef _ATL_OLEDB_CONFORMANCE_TESTS
; 6179 : 		ATLASSERT(dwCookie != 0 && dwCookie <= (DWORD)m_nSize);

  00003	83 7d 0c 00	 cmp	 DWORD PTR _dwCookie$[ebp], 0
  00007	74 0b		 je	 SHORT $LN5@GetUnknown
  00009	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _dwCookie$[ebp]
  0000f	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00012	76 26		 jbe	 SHORT $LN6@GetUnknown
$LN5@GetUnknown:
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1FI@CDNFCAGD@?$AAd?$AAw?$AAC?$AAo?$AAo?$AAk?$AAi?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0001e	6a 00		 push	 0
  00020	68 23 18 00 00	 push	 6179			; 00001823H
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0002a	6a 02		 push	 2
  0002c	e8 00 00 00 00	 call	 __CrtDbgReportW
  00031	83 c4 18	 add	 esp, 24			; 00000018H
  00034	83 f8 01	 cmp	 eax, 1
  00037	75 01		 jne	 SHORT $LN6@GetUnknown
  00039	cc		 int	 3
$LN6@GetUnknown:

; 6180 : #endif
; 6181 : 		if (dwCookie != 0 && dwCookie <= (DWORD)m_nSize)

  0003a	83 7d 0c 00	 cmp	 DWORD PTR _dwCookie$[ebp], 0
  0003e	74 1e		 je	 SHORT $LN2@GetUnknown
  00040	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00043	8b 4d 0c	 mov	 ecx, DWORD PTR _dwCookie$[ebp]
  00046	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00049	77 13		 ja	 SHORT $LN2@GetUnknown

; 6182 : 			return GetAt(dwCookie-1); // cookie minus one is an index into the array

  0004b	8b 55 0c	 mov	 edx, DWORD PTR _dwCookie$[ebp]
  0004e	83 ea 01	 sub	 edx, 1
  00051	52		 push	 edx
  00052	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?GetAt@CComDynamicUnkArray@ATL@@QAEPAUIUnknown@@H@Z ; ATL::CComDynamicUnkArray::GetAt
  0005a	eb 04		 jmp	 SHORT $LN1@GetUnknown
  0005c	eb 02		 jmp	 SHORT $LN1@GetUnknown
$LN2@GetUnknown:

; 6183 : 		else
; 6184 : 			return NULL;

  0005e	33 c0		 xor	 eax, eax
$LN1@GetUnknown:

; 6185 : 	}

  00060	3b ec		 cmp	 ebp, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
?GetUnknown@CComDynamicUnkArray@ATL@@QAGPAUIUnknown@@K@Z ENDP ; ATL::CComDynamicUnkArray::GetUnknown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetCookie@CComDynamicUnkArray@ATL@@QAGKPAPAUIUnknown@@@Z
_TEXT	SEGMENT
_dwCookie$1 = -8					; size = 4
_ppUnk$2 = -4						; size = 4
_this$ = 8						; size = 4
_ppFind$ = 12						; size = 4
?GetCookie@CComDynamicUnkArray@ATL@@QAGKPAPAUIUnknown@@@Z PROC ; ATL::CComDynamicUnkArray::GetCookie, COMDAT

; 6160 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 6161 : 		ATLASSERT(ppFind && *ppFind);

  00014	83 7d 0c 00	 cmp	 DWORD PTR _ppFind$[ebp], 0
  00018	74 08		 je	 SHORT $LN8@GetCookie
  0001a	8b 45 0c	 mov	 eax, DWORD PTR _ppFind$[ebp]
  0001d	83 38 00	 cmp	 DWORD PTR [eax], 0
  00020	75 26		 jne	 SHORT $LN9@GetCookie
$LN8@GetCookie:
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@GFEBMKPP@?$AAp?$AAp?$AAF?$AAi?$AAn?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CK?$AAp?$AAp?$AAF?$AAi@
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0002c	6a 00		 push	 0
  0002e	68 11 18 00 00	 push	 6161			; 00001811H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00038	6a 02		 push	 2
  0003a	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003f	83 c4 18	 add	 esp, 24			; 00000018H
  00042	83 f8 01	 cmp	 eax, 1
  00045	75 01		 jne	 SHORT $LN9@GetCookie
  00047	cc		 int	 3
$LN9@GetCookie:

; 6162 : 		if (ppFind && *ppFind)

  00048	83 7d 0c 00	 cmp	 DWORD PTR _ppFind$[ebp], 0
  0004c	74 55		 je	 SHORT $LN5@GetCookie
  0004e	8b 55 0c	 mov	 edx, DWORD PTR _ppFind$[ebp]
  00051	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00054	74 4d		 je	 SHORT $LN5@GetCookie

; 6163 : 		{
; 6164 : 			IUnknown** ppUnk = NULL;

  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _ppUnk$2[ebp], 0

; 6165 : 			DWORD dwCookie = 1;

  0005d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _dwCookie$1[ebp], 1

; 6166 : 			// find IUnknown* in array
; 6167 : 			for (ppUnk = begin(); ppUnk < end(); ppUnk++)

  00064	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?begin@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::begin
  0006c	89 45 fc	 mov	 DWORD PTR _ppUnk$2[ebp], eax
  0006f	eb 09		 jmp	 SHORT $LN4@GetCookie
$LN2@GetCookie:
  00071	8b 45 fc	 mov	 eax, DWORD PTR _ppUnk$2[ebp]
  00074	83 c0 04	 add	 eax, 4
  00077	89 45 fc	 mov	 DWORD PTR _ppUnk$2[ebp], eax
$LN4@GetCookie:
  0007a	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?end@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::end
  00082	39 45 fc	 cmp	 DWORD PTR _ppUnk$2[ebp], eax
  00085	73 1c		 jae	 SHORT $LN5@GetCookie

; 6168 : 			{
; 6169 : 				if (*ppUnk == *ppFind)

  00087	8b 4d fc	 mov	 ecx, DWORD PTR _ppUnk$2[ebp]
  0008a	8b 55 0c	 mov	 edx, DWORD PTR _ppFind$[ebp]
  0008d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008f	3b 02		 cmp	 eax, DWORD PTR [edx]
  00091	75 05		 jne	 SHORT $LN6@GetCookie

; 6170 : 					return dwCookie; // cookie minus one is an index into the array

  00093	8b 45 f8	 mov	 eax, DWORD PTR _dwCookie$1[ebp]
  00096	eb 0d		 jmp	 SHORT $LN1@GetCookie
$LN6@GetCookie:

; 6171 : 				dwCookie++;

  00098	8b 4d f8	 mov	 ecx, DWORD PTR _dwCookie$1[ebp]
  0009b	83 c1 01	 add	 ecx, 1
  0009e	89 4d f8	 mov	 DWORD PTR _dwCookie$1[ebp], ecx

; 6172 : 			}

  000a1	eb ce		 jmp	 SHORT $LN2@GetCookie
$LN5@GetCookie:

; 6173 : 		}
; 6174 : 		return 0;

  000a3	33 c0		 xor	 eax, eax
$LN1@GetCookie:

; 6175 : 	}

  000a5	83 c4 08	 add	 esp, 8
  000a8	3b ec		 cmp	 ebp, esp
  000aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c2 08 00	 ret	 8
?GetCookie@CComDynamicUnkArray@ATL@@QAGKPAPAUIUnknown@@@Z ENDP ; ATL::CComDynamicUnkArray::GetCookie
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Remove@CComDynamicUnkArray@ATL@@QAEHK@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_this$ = -4						; size = 4
_dwCookie$ = 8						; size = 4
?Remove@CComDynamicUnkArray@ATL@@QAEHK@Z PROC		; ATL::CComDynamicUnkArray::Remove, COMDAT
; _this$ = ecx

; 6267 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 6268 : 	DWORD idx = dwCookie -1;

  00017	8b 45 08	 mov	 eax, DWORD PTR _dwCookie$[ebp]
  0001a	83 e8 01	 sub	 eax, 1
  0001d	89 45 f8	 mov	 DWORD PTR _idx$[ebp], eax

; 6269 : #ifndef _ATL_OLEDB_CONFORMANCE_TESTS
; 6270 : 	ATLASSERT(idx < dwCookie && idx < (DWORD)m_nSize);

  00020	8b 4d f8	 mov	 ecx, DWORD PTR _idx$[ebp]
  00023	3b 4d 08	 cmp	 ecx, DWORD PTR _dwCookie$[ebp]
  00026	73 0b		 jae	 SHORT $LN6@Remove
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _idx$[ebp]
  0002e	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  00031	72 26		 jb	 SHORT $LN7@Remove
$LN6@Remove:
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@PKGIEOJK@?$AAi?$AAd?$AAx?$AA?5?$AA?$DM?$AA?5?$AAd?$AAw?$AAC?$AAo?$AAo?$AAk?$AAi?$AAe?$AA?5@
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0003d	6a 00		 push	 0
  0003f	68 7e 18 00 00	 push	 6270			; 0000187eH
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00049	6a 02		 push	 2
  0004b	e8 00 00 00 00	 call	 __CrtDbgReportW
  00050	83 c4 18	 add	 esp, 24			; 00000018H
  00053	83 f8 01	 cmp	 eax, 1
  00056	75 01		 jne	 SHORT $LN7@Remove
  00058	cc		 int	 3
$LN7@Remove:

; 6271 : #endif
; 6272 : 	if (idx < dwCookie && idx < (DWORD)m_nSize)

  00059	8b 55 f8	 mov	 edx, DWORD PTR _idx$[ebp]
  0005c	3b 55 08	 cmp	 edx, DWORD PTR _dwCookie$[ebp]
  0005f	73 35		 jae	 SHORT $LN2@Remove
  00061	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00064	8b 4d f8	 mov	 ecx, DWORD PTR _idx$[ebp]
  00067	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  0006a	73 2a		 jae	 SHORT $LN2@Remove

; 6273 : 	{
; 6274 : 		// cookie minus one is index into array
; 6275 : 		if (m_ppUnk[idx] == NULL)

  0006c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8b 02		 mov	 eax, DWORD PTR [edx]
  00071	8b 4d f8	 mov	 ecx, DWORD PTR _idx$[ebp]
  00074	83 3c 88 00	 cmp	 DWORD PTR [eax+ecx*4], 0
  00078	75 04		 jne	 SHORT $LN4@Remove

; 6276 : 			return FALSE;

  0007a	33 c0		 xor	 eax, eax
  0007c	eb 1a		 jmp	 SHORT $LN1@Remove
$LN4@Remove:

; 6277 : 		m_ppUnk[idx] = NULL;

  0007e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00081	8b 02		 mov	 eax, DWORD PTR [edx]
  00083	8b 4d f8	 mov	 ecx, DWORD PTR _idx$[ebp]
  00086	c7 04 88 00 00
	00 00		 mov	 DWORD PTR [eax+ecx*4], 0

; 6278 : 		return TRUE;

  0008d	b8 01 00 00 00	 mov	 eax, 1
  00092	eb 04		 jmp	 SHORT $LN1@Remove

; 6279 : 	}

  00094	eb 02		 jmp	 SHORT $LN1@Remove
$LN2@Remove:

; 6280 : 	else
; 6281 : 		return FALSE;

  00096	33 c0		 xor	 eax, eax
$LN1@Remove:

; 6282 : }

  00098	83 c4 08	 add	 esp, 8
  0009b	3b ec		 cmp	 ebp, esp
  0009d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 04 00	 ret	 4
?Remove@CComDynamicUnkArray@ATL@@QAEHK@Z ENDP		; ATL::CComDynamicUnkArray::Remove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Add@CComDynamicUnkArray@ATL@@QAEKPAUIUnknown@@@Z
_TEXT	SEGMENT
_hr$ = -28						; size = 4
_nAlloc$ = -20						; size = 4
_dwCookie$ = -12					; size = 4
_pp$ = -8						; size = 4
_this$ = -4						; size = 4
_pUnk$ = 8						; size = 4
?Add@CComDynamicUnkArray@ATL@@QAEKPAUIUnknown@@@Z PROC	; ATL::CComDynamicUnkArray::Add, COMDAT
; _this$ = ecx

; 6223 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00011	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00014	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00017	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001a	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001d	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00020	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 6224 : 	IUnknown** pp = NULL;

  00023	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pp$[ebp], 0

; 6225 : 	if (m_nSize == 0)

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00031	75 3e		 jne	 SHORT $LN5@Add

; 6226 : 	{
; 6227 : 		// Create array with _DEFAULT_VECTORLENGTH number of items.
; 6228 : 		ATLTRY(pp = (IUnknown**)calloc(sizeof(IUnknown*),_DEFAULT_VECTORLENGTH));

  00033	6a 04		 push	 4
  00035	6a 04		 push	 4
  00037	e8 00 00 00 00	 call	 _calloc
  0003c	83 c4 08	 add	 esp, 8
  0003f	89 45 f8	 mov	 DWORD PTR _pp$[ebp], eax

; 6229 : 		if (pp == NULL)

  00042	83 7d f8 00	 cmp	 DWORD PTR _pp$[ebp], 0
  00046	75 07		 jne	 SHORT $LN6@Add

; 6230 : 			return 0;

  00048	33 c0		 xor	 eax, eax
  0004a	e9 0d 01 00 00	 jmp	 $LN1@Add
$LN6@Add:

; 6231 : 		memset(pp, 0, sizeof(IUnknown*)*_DEFAULT_VECTORLENGTH);

  0004f	6a 10		 push	 16			; 00000010H
  00051	6a 00		 push	 0
  00053	8b 4d f8	 mov	 ecx, DWORD PTR _pp$[ebp]
  00056	51		 push	 ecx
  00057	e8 00 00 00 00	 call	 _memset
  0005c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6232 : 		m_ppUnk = pp;

  0005f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00062	8b 45 f8	 mov	 eax, DWORD PTR _pp$[ebp]
  00065	89 02		 mov	 DWORD PTR [edx], eax

; 6233 : 		m_nSize = _DEFAULT_VECTORLENGTH;

  00067	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	c7 41 04 04 00
	00 00		 mov	 DWORD PTR [ecx+4], 4
$LN5@Add:

; 6234 : 	}
; 6235 : 	// Walk array and use empty slots if any.
; 6236 : 	DWORD dwCookie = 1;

  00071	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _dwCookie$[ebp], 1

; 6237 : 	for (pp = begin(); pp < end(); pp++)

  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?begin@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::begin
  00080	89 45 f8	 mov	 DWORD PTR _pp$[ebp], eax
  00083	eb 09		 jmp	 SHORT $LN4@Add
$LN2@Add:
  00085	8b 55 f8	 mov	 edx, DWORD PTR _pp$[ebp]
  00088	83 c2 04	 add	 edx, 4
  0008b	89 55 f8	 mov	 DWORD PTR _pp$[ebp], edx
$LN4@Add:
  0008e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00091	e8 00 00 00 00	 call	 ?end@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComDynamicUnkArray::end
  00096	39 45 f8	 cmp	 DWORD PTR _pp$[ebp], eax
  00099	73 23		 jae	 SHORT $LN3@Add

; 6238 : 	{
; 6239 : 		if (*pp == NULL)

  0009b	8b 45 f8	 mov	 eax, DWORD PTR _pp$[ebp]
  0009e	83 38 00	 cmp	 DWORD PTR [eax], 0
  000a1	75 10		 jne	 SHORT $LN7@Add

; 6240 : 		{
; 6241 : 			*pp = pUnk;

  000a3	8b 4d f8	 mov	 ecx, DWORD PTR _pp$[ebp]
  000a6	8b 55 08	 mov	 edx, DWORD PTR _pUnk$[ebp]
  000a9	89 11		 mov	 DWORD PTR [ecx], edx

; 6242 : 			return dwCookie; // cookie minus one is index into array

  000ab	8b 45 f4	 mov	 eax, DWORD PTR _dwCookie$[ebp]
  000ae	e9 a9 00 00 00	 jmp	 $LN1@Add
$LN7@Add:

; 6243 : 		}
; 6244 : 		dwCookie++;

  000b3	8b 45 f4	 mov	 eax, DWORD PTR _dwCookie$[ebp]
  000b6	83 c0 01	 add	 eax, 1
  000b9	89 45 f4	 mov	 DWORD PTR _dwCookie$[ebp], eax

; 6245 : 	}

  000bc	eb c7		 jmp	 SHORT $LN2@Add
$LN3@Add:

; 6246 : 	// No empty slots so resize array.
; 6247 : 	// # of new slots is double of current size.
; 6248 : 	int nAlloc = 0;

  000be	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nAlloc$[ebp], 0

; 6249 : 	HRESULT hr = AtlMultiply(&nAlloc, m_nSize, 2);

  000c5	6a 02		 push	 2
  000c7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ca	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000cd	52		 push	 edx
  000ce	8d 45 ec	 lea	 eax, DWORD PTR _nAlloc$[ebp]
  000d1	50		 push	 eax
  000d2	e8 00 00 00 00	 call	 ??$AtlMultiply@H@ATL@@YAJPAHHH@Z ; ATL::AtlMultiply<int>
  000d7	83 c4 0c	 add	 esp, 12			; 0000000cH
  000da	89 45 e4	 mov	 DWORD PTR _hr$[ebp], eax

; 6250 : 	if (FAILED(hr))

  000dd	83 7d e4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000e1	7d 04		 jge	 SHORT $LN8@Add

; 6251 : 	{
; 6252 : 		return 0;

  000e3	33 c0		 xor	 eax, eax
  000e5	eb 75		 jmp	 SHORT $LN1@Add
$LN8@Add:

; 6253 : 	}
; 6254 : 
; 6255 : 	pp = (IUnknown**)_recalloc(m_ppUnk, sizeof(IUnknown*),nAlloc);

  000e7	8b 4d ec	 mov	 ecx, DWORD PTR _nAlloc$[ebp]
  000ea	51		 push	 ecx
  000eb	6a 04		 push	 4
  000ed	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000f0	8b 02		 mov	 eax, DWORD PTR [edx]
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 __recalloc
  000f8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000fb	89 45 f8	 mov	 DWORD PTR _pp$[ebp], eax

; 6256 : 	if (pp == NULL)

  000fe	83 7d f8 00	 cmp	 DWORD PTR _pp$[ebp], 0
  00102	75 04		 jne	 SHORT $LN9@Add

; 6257 : 		return 0;

  00104	33 c0		 xor	 eax, eax
  00106	eb 54		 jmp	 SHORT $LN1@Add
$LN9@Add:

; 6258 : 	m_ppUnk = pp;

  00108	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010b	8b 55 f8	 mov	 edx, DWORD PTR _pp$[ebp]
  0010e	89 11		 mov	 DWORD PTR [ecx], edx

; 6259 : 	memset(&m_ppUnk[m_nSize], 0, sizeof(IUnknown*)*m_nSize);

  00110	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00113	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00116	c1 e1 02	 shl	 ecx, 2
  00119	51		 push	 ecx
  0011a	6a 00		 push	 0
  0011c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0011f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00122	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	8b 11		 mov	 edx, DWORD PTR [ecx]
  00127	8d 04 82	 lea	 eax, DWORD PTR [edx+eax*4]
  0012a	50		 push	 eax
  0012b	e8 00 00 00 00	 call	 _memset
  00130	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6260 : 	m_ppUnk[m_nSize] = pUnk;

  00133	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00136	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00139	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0013c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013e	8b 45 08	 mov	 eax, DWORD PTR _pUnk$[ebp]
  00141	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax

; 6261 : 	dwCookie = m_nSize+1;

  00144	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00147	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0014a	83 c2 01	 add	 edx, 1
  0014d	89 55 f4	 mov	 DWORD PTR _dwCookie$[ebp], edx

; 6262 : 	m_nSize = nAlloc;

  00150	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00153	8b 4d ec	 mov	 ecx, DWORD PTR _nAlloc$[ebp]
  00156	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 6263 : 	return dwCookie; // cookie minus one is index into array

  00159	8b 45 f4	 mov	 eax, DWORD PTR _dwCookie$[ebp]
$LN1@Add:

; 6264 : }

  0015c	52		 push	 edx
  0015d	8b cd		 mov	 ecx, ebp
  0015f	50		 push	 eax
  00160	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Add
  00166	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0016b	58		 pop	 eax
  0016c	5a		 pop	 edx
  0016d	83 c4 1c	 add	 esp, 28			; 0000001cH
  00170	3b ec		 cmp	 ebp, esp
  00172	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00177	8b e5		 mov	 esp, ebp
  00179	5d		 pop	 ebp
  0017a	c2 04 00	 ret	 4
  0017d	0f 1f 00	 npad	 3
$LN13@Add:
  00180	01 00 00 00	 DD	 1
  00184	00 00 00 00	 DD	 $LN12@Add
$LN12@Add:
  00188	ec ff ff ff	 DD	 -20			; ffffffecH
  0018c	04 00 00 00	 DD	 4
  00190	00 00 00 00	 DD	 $LN11@Add
$LN11@Add:
  00194	6e		 DB	 110			; 0000006eH
  00195	41		 DB	 65			; 00000041H
  00196	6c		 DB	 108			; 0000006cH
  00197	6c		 DB	 108			; 0000006cH
  00198	6f		 DB	 111			; 0000006fH
  00199	63		 DB	 99			; 00000063H
  0019a	00		 DB	 0
?Add@CComDynamicUnkArray@ATL@@QAEKPAUIUnknown@@@Z ENDP	; ATL::CComDynamicUnkArray::Add
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?destroy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPAUtagCONNECTDATA@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?destroy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPAUtagCONNECTDATA@@@Z PROC ; ATL::_Copy<tagCONNECTDATA>::destroy, COMDAT

; 5435 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 5436 : 		if (p->pUnk)

  00004	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00007	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000a	74 1b		 je	 SHORT $LN1@destroy

; 5437 : 		{
; 5438 : 			p->pUnk->Release();

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0000f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00011	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 12		 mov	 edx, DWORD PTR [edx]
  00018	8b f4		 mov	 esi, esp
  0001a	51		 push	 ecx
  0001b	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001e	ff d0		 call	 eax
  00020	3b f4		 cmp	 esi, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@destroy:

; 5439 : 		}
; 5440 : 	}

  00027	5e		 pop	 esi
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
?destroy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPAUtagCONNECTDATA@@@Z ENDP ; ATL::_Copy<tagCONNECTDATA>::destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?init@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPAUtagCONNECTDATA@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?init@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPAUtagCONNECTDATA@@@Z PROC ; ATL::_Copy<tagCONNECTDATA>::init, COMDAT

; 5432 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 5433 : 	}

  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?init@?$_Copy@UtagCONNECTDATA@@@ATL@@SAXPAUtagCONNECTDATA@@@Z ENDP ; ATL::_Copy<tagCONNECTDATA>::init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?copy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAJPAUtagCONNECTDATA@@PBU3@@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
___atl_condVal$1 = -4					; size = 4
_p1$ = 8						; size = 4
_p2$ = 12						; size = 4
?copy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAJPAUtagCONNECTDATA@@PBU3@@Z PROC ; ATL::_Copy<tagCONNECTDATA>::copy, COMDAT

; 5422 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@copy:

; 5423 : 		ATLENSURE(p1 != NULL && p2 != NULL);

  00015	83 7d 08 00	 cmp	 DWORD PTR _p1$[ebp], 0
  00019	74 0f		 je	 SHORT $LN11@copy
  0001b	83 7d 0c 00	 cmp	 DWORD PTR _p2$[ebp], 0
  0001f	74 09		 je	 SHORT $LN11@copy
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN12@copy
$LN11@copy:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN12@copy:
  00031	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]
  00034	89 45 fc	 mov	 DWORD PTR ___atl_condVal$1[ebp], eax
$LN7@copy:
  00037	83 7d fc 00	 cmp	 DWORD PTR ___atl_condVal$1[ebp], 0
  0003b	75 26		 jne	 SHORT $LN5@copy
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00047	6a 00		 push	 0
  00049	68 2f 15 00 00	 push	 5423			; 0000152fH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00053	6a 02		 push	 2
  00055	e8 00 00 00 00	 call	 __CrtDbgReportW
  0005a	83 c4 18	 add	 esp, 24			; 00000018H
  0005d	83 f8 01	 cmp	 eax, 1
  00060	75 01		 jne	 SHORT $LN5@copy
  00062	cc		 int	 3
$LN5@copy:
  00063	33 d2		 xor	 edx, edx
  00065	75 d0		 jne	 SHORT $LN7@copy
  00067	83 7d fc 00	 cmp	 DWORD PTR ___atl_condVal$1[ebp], 0
  0006b	75 0a		 jne	 SHORT $LN2@copy
  0006d	68 05 40 00 80	 push	 -2147467259		; 80004005H
  00072	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@copy:
  00077	33 c0		 xor	 eax, eax
  00079	75 9a		 jne	 SHORT $LN4@copy

; 5424 : 		*p1 = *p2;

  0007b	8b 4d 0c	 mov	 ecx, DWORD PTR _p2$[ebp]
  0007e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00080	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00083	8b 4d 08	 mov	 ecx, DWORD PTR _p1$[ebp]
  00086	89 11		 mov	 DWORD PTR [ecx], edx
  00088	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 5425 : 		if (p1->pUnk)

  0008b	8b 55 08	 mov	 edx, DWORD PTR _p1$[ebp]
  0008e	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00091	74 1b		 je	 SHORT $LN9@copy

; 5426 : 		{
; 5427 : 			p1->pUnk->AddRef();

  00093	8b 45 08	 mov	 eax, DWORD PTR _p1$[ebp]
  00096	8b 08		 mov	 ecx, DWORD PTR [eax]
  00098	8b 55 08	 mov	 edx, DWORD PTR _p1$[ebp]
  0009b	8b 02		 mov	 eax, DWORD PTR [edx]
  0009d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0009f	8b f4		 mov	 esi, esp
  000a1	50		 push	 eax
  000a2	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000a5	ff d2		 call	 edx
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN9@copy:

; 5428 : 		}
; 5429 : 		return S_OK;

  000ae	33 c0		 xor	 eax, eax
$LN10@copy:

; 5430 : 	}

  000b0	5e		 pop	 esi
  000b1	83 c4 08	 add	 esp, 8
  000b4	3b ec		 cmp	 ebp, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c3		 ret	 0
?copy@?$_Copy@UtagCONNECTDATA@@@ATL@@SAJPAUtagCONNECTDATA@@PBU3@@Z ENDP ; ATL::_Copy<tagCONNECTDATA>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??$?4UITypeInfo2@@@?$CComPtr@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@ABV?$CComPtr@UITypeInfo2@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??$?4UITypeInfo2@@@?$CComPtr@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@ABV?$CComPtr@UITypeInfo2@@@1@@Z PROC ; ATL::CComPtr<ITypeInfo>::operator=<ITypeInfo2>, COMDAT
; _this$ = ecx

; 337  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 338  :         if(!this->IsEqualObject(lp) )

  0000e	8b 4d 08	 mov	 ecx, DWORD PTR _lp$[ebp]
  00011	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ ; ATL::CComPtrBase<ITypeInfo2>::operator ITypeInfo2 *
  00016	50		 push	 eax
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?IsEqualObject@?$CComPtrBase@UITypeInfo@@@ATL@@QAE_NPAUIUnknown@@@Z ; ATL::CComPtrBase<ITypeInfo>::IsEqualObject
  0001f	0f b6 c0	 movzx	 eax, al
  00022	85 c0		 test	 eax, eax
  00024	75 1a		 jne	 SHORT $LN2@operator

; 339  :         {
; 340  :             AtlComQIPtrAssign2((IUnknown**)&this->p, lp, __uuidof(T));

  00026	68 00 00 00 00	 push	 OFFSET __GUID_00020401_0000_0000_c000_000000000046
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _lp$[ebp]
  0002e	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ ; ATL::CComPtrBase<ITypeInfo2>::operator ITypeInfo2 *
  00033	50		 push	 eax
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	51		 push	 ecx
  00038	e8 00 00 00 00	 call	 ?AtlComQIPtrAssign2@ATL@@YAXPAPAUIUnknown@@PAU2@ABU_GUID@@@Z ; ATL::AtlComQIPtrAssign2
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@operator:

; 341  :         }
; 342  :         return *this;

  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAUITypeInfo@@XZ ; ATL::CComPtrBase<ITypeInfo>::operator ITypeInfo *

; 343  :     }

  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??$?4UITypeInfo2@@@?$CComPtr@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@ABV?$CComPtr@UITypeInfo2@@@1@@Z ENDP ; ATL::CComPtr<ITypeInfo>::operator=<ITypeInfo2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\um\unknwnbase.h
;	COMDAT ??$QueryInterface@UITypeInfo2@@@IUnknown@@QAGJPAPAUITypeInfo2@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pp$ = 12						; size = 4
??$QueryInterface@UITypeInfo2@@@IUnknown@@QAGJPAPAUITypeInfo2@@@Z PROC ; IUnknown::QueryInterface<ITypeInfo2>, COMDAT

; 129  :             {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 130  :                 return QueryInterface(__uuidof(Q), (void **)pp);

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR _pp$[ebp]
  00009	50		 push	 eax
  0000a	68 00 00 00 00	 push	 OFFSET __GUID_00020412_0000_0000_c000_000000000046
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 11		 mov	 edx, DWORD PTR [ecx]
  00014	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00017	50		 push	 eax
  00018	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0001a	ff d1		 call	 ecx
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 131  :             }

  00023	5e		 pop	 esi
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
??$QueryInterface@UITypeInfo2@@@IUnknown@@QAGJPAPAUITypeInfo2@@@Z ENDP ; IUnknown::QueryInterface<ITypeInfo2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<ITypeInfo2>::~CComPtr<ITypeInfo2>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UITypeInfo2@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ITypeInfo2>::~CComPtrBase<ITypeInfo2>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<ITypeInfo2>::~CComPtr<ITypeInfo2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<ITypeInfo2>::CComPtr<ITypeInfo2>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UITypeInfo2@@@ATL@@IAE@XZ ; ATL::CComPtrBase<ITypeInfo2>::CComPtrBase<ITypeInfo2>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<ITypeInfo2>::CComPtr<ITypeInfo2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UITypeInfo2@@@ATL@@QAEPAPAUITypeInfo2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UITypeInfo2@@@ATL@@QAEPAPAUITypeInfo2@@XZ PROC ; ATL::CComPtrBase<ITypeInfo2>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UITypeInfo2@@@ATL@@QAEPAPAUITypeInfo2@@XZ ENDP ; ATL::CComPtrBase<ITypeInfo2>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ PROC ; ATL::CComPtrBase<ITypeInfo2>::operator ITypeInfo2 *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ ENDP ; ATL::CComPtrBase<ITypeInfo2>::operator ITypeInfo2 *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UITypeInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UITypeInfo2@@@ATL@@QAE@XZ PROC		; ATL::CComPtrBase<ITypeInfo2>::~CComPtrBase<ITypeInfo2>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UITypeInfo2@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<ITypeInfo2>::~CComPtrBase<ITypeInfo2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UITypeInfo2@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UITypeInfo2@@@ATL@@IAE@XZ PROC		; ATL::CComPtrBase<ITypeInfo2>::CComPtrBase<ITypeInfo2>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UITypeInfo2@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<ITypeInfo2>::CComPtrBase<ITypeInfo2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?LoadNameCache@CComTypeInfoHolder@ATL@@QAEJPAUITypeInfo@@@Z
_TEXT	SEGMENT
tv132 = -64						; size = 4
$T1 = -60						; size = 4
$T2 = -56						; size = 4
_bstrName$3 = -48					; size = 4
_pfd$4 = -36						; size = 4
_i$5 = -28						; size = 4
_pMap$6 = -24						; size = 4
_hr$ = -20						; size = 4
_pta$ = -12						; size = 4
_this$ = -4						; size = 4
_pTypeInfo$ = 8						; size = 4
?LoadNameCache@CComTypeInfoHolder@ATL@@QAEJPAUITypeInfo@@@Z PROC ; ATL::CComTypeInfoHolder::LoadNameCache, COMDAT
; _this$ = ecx

; 4239 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d c0	 lea	 edi, DWORD PTR [ebp-64]
  0000c	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4240 : 		TYPEATTR* pta;
; 4241 : 		HRESULT hr = pTypeInfo->GetTypeAttr(&pta);

  0001c	8b f4		 mov	 esi, esp
  0001e	8d 45 f4	 lea	 eax, DWORD PTR _pta$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _pTypeInfo$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	8b 45 08	 mov	 eax, DWORD PTR _pTypeInfo$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  0002e	ff d1		 call	 ecx
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax

; 4242 : 		if (SUCCEEDED(hr))

  0003a	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0003e	0f 8c e4 01 00
	00		 jl	 $LN5@LoadNameCa

; 4243 : 		{
; 4244 : 			stringdispid* pMap = NULL;

  00044	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pMap$6[ebp], 0

; 4245 : 			m_nCount = pta->cFuncs;

  0004b	8b 55 f4	 mov	 edx, DWORD PTR _pta$[ebp]
  0004e	0f b7 42 2c	 movzx	 eax, WORD PTR [edx+44]
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 4246 : 			m_pMap = NULL;

  00058	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005b	c7 42 14 00 00
	00 00		 mov	 DWORD PTR [edx+20], 0

; 4247 : 			if (m_nCount != 0)

  00062	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00065	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00069	0f 84 a1 00 00
	00		 je	 $LN6@LoadNameCa

; 4248 : 			{
; 4249 : 				pMap = _ATL_NEW stringdispid[m_nCount];

  0006f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00075	89 55 c8	 mov	 DWORD PTR $T2[ebp], edx
  00078	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0007d	33 c9		 xor	 ecx, ecx
  0007f	8b 45 c8	 mov	 eax, DWORD PTR $T2[ebp]
  00082	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00087	f7 e2		 mul	 edx
  00089	0f 90 c1	 seto	 cl
  0008c	f7 d9		 neg	 ecx
  0008e	0b c8		 or	 ecx, eax
  00090	33 c0		 xor	 eax, eax
  00092	83 c1 04	 add	 ecx, 4
  00095	0f 92 c0	 setb	 al
  00098	f7 d8		 neg	 eax
  0009a	0b c1		 or	 eax, ecx
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 ??_U@YAPAXIABUnothrow_t@std@@@Z ; operator new[]
  000a2	83 c4 08	 add	 esp, 8
  000a5	89 45 c4	 mov	 DWORD PTR $T1[ebp], eax
  000a8	83 7d c4 00	 cmp	 DWORD PTR $T1[ebp], 0
  000ac	74 2a		 je	 SHORT $LN11@LoadNameCa
  000ae	8b 4d c4	 mov	 ecx, DWORD PTR $T1[ebp]
  000b1	8b 55 c8	 mov	 edx, DWORD PTR $T2[ebp]
  000b4	89 11		 mov	 DWORD PTR [ecx], edx
  000b6	68 00 00 00 00	 push	 OFFSET ??0stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ ; ATL::CComTypeInfoHolder::stringdispid::stringdispid
  000bb	8b 45 c8	 mov	 eax, DWORD PTR $T2[ebp]
  000be	50		 push	 eax
  000bf	6a 0c		 push	 12			; 0000000cH
  000c1	8b 4d c4	 mov	 ecx, DWORD PTR $T1[ebp]
  000c4	83 c1 04	 add	 ecx, 4
  000c7	51		 push	 ecx
  000c8	e8 00 00 00 00	 call	 ??_H@YGXPAXIIP6EPAX0@Z@Z
  000cd	8b 55 c4	 mov	 edx, DWORD PTR $T1[ebp]
  000d0	83 c2 04	 add	 edx, 4
  000d3	89 55 c0	 mov	 DWORD PTR tv132[ebp], edx
  000d6	eb 07		 jmp	 SHORT $LN12@LoadNameCa
$LN11@LoadNameCa:
  000d8	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN12@LoadNameCa:
  000df	8b 45 c0	 mov	 eax, DWORD PTR tv132[ebp]
  000e2	89 45 e8	 mov	 DWORD PTR _pMap$6[ebp], eax

; 4250 : 				if (pMap == NULL)

  000e5	83 7d e8 00	 cmp	 DWORD PTR _pMap$6[ebp], 0
  000e9	75 25		 jne	 SHORT $LN6@LoadNameCa

; 4251 : 				{
; 4252 : 					pTypeInfo->ReleaseTypeAttr(pta);

  000eb	8b f4		 mov	 esi, esp
  000ed	8b 4d f4	 mov	 ecx, DWORD PTR _pta$[ebp]
  000f0	51		 push	 ecx
  000f1	8b 55 08	 mov	 edx, DWORD PTR _pTypeInfo$[ebp]
  000f4	8b 02		 mov	 eax, DWORD PTR [edx]
  000f6	8b 4d 08	 mov	 ecx, DWORD PTR _pTypeInfo$[ebp]
  000f9	51		 push	 ecx
  000fa	8b 50 4c	 mov	 edx, DWORD PTR [eax+76]
  000fd	ff d2		 call	 edx
  000ff	3b f4		 cmp	 esi, esp
  00101	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 4253 : 					return E_OUTOFMEMORY;

  00106	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  0010b	e9 1a 01 00 00	 jmp	 $LN1@LoadNameCa
$LN6@LoadNameCa:

; 4254 : 				}
; 4255 : 			}
; 4256 : 			for (int i=0; i<m_nCount; i++)

  00110	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$5[ebp], 0
  00117	eb 09		 jmp	 SHORT $LN4@LoadNameCa
$LN2@LoadNameCa:
  00119	8b 45 e4	 mov	 eax, DWORD PTR _i$5[ebp]
  0011c	83 c0 01	 add	 eax, 1
  0011f	89 45 e4	 mov	 DWORD PTR _i$5[ebp], eax
$LN4@LoadNameCa:
  00122	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	8b 55 e4	 mov	 edx, DWORD PTR _i$5[ebp]
  00128	3b 51 18	 cmp	 edx, DWORD PTR [ecx+24]
  0012b	0f 8d d3 00 00
	00		 jge	 $LN3@LoadNameCa

; 4257 : 			{
; 4258 : 				FUNCDESC* pfd;
; 4259 : 				if (SUCCEEDED(pTypeInfo->GetFuncDesc(i, &pfd)))

  00131	8b f4		 mov	 esi, esp
  00133	8d 45 dc	 lea	 eax, DWORD PTR _pfd$4[ebp]
  00136	50		 push	 eax
  00137	8b 4d e4	 mov	 ecx, DWORD PTR _i$5[ebp]
  0013a	51		 push	 ecx
  0013b	8b 55 08	 mov	 edx, DWORD PTR _pTypeInfo$[ebp]
  0013e	8b 02		 mov	 eax, DWORD PTR [edx]
  00140	8b 4d 08	 mov	 ecx, DWORD PTR _pTypeInfo$[ebp]
  00143	51		 push	 ecx
  00144	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00147	ff d2		 call	 edx
  00149	3b f4		 cmp	 esi, esp
  0014b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00150	85 c0		 test	 eax, eax
  00152	0f 8c a7 00 00
	00		 jl	 $LN8@LoadNameCa

; 4260 : 				{
; 4261 : 					CComBSTR bstrName;

  00158	8d 4d d0	 lea	 ecx, DWORD PTR _bstrName$3[ebp]
  0015b	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::CComBSTR

; 4262 : 					if (SUCCEEDED(pTypeInfo->GetDocumentation(pfd->memid, &bstrName, NULL, NULL, NULL)))

  00160	8b f4		 mov	 esi, esp
  00162	6a 00		 push	 0
  00164	6a 00		 push	 0
  00166	6a 00		 push	 0
  00168	8d 4d d0	 lea	 ecx, DWORD PTR _bstrName$3[ebp]
  0016b	e8 00 00 00 00	 call	 ??ICComBSTR@ATL@@QAEPAPA_WXZ ; ATL::CComBSTR::operator&
  00170	50		 push	 eax
  00171	8b 45 dc	 mov	 eax, DWORD PTR _pfd$4[ebp]
  00174	8b 08		 mov	 ecx, DWORD PTR [eax]
  00176	51		 push	 ecx
  00177	8b 55 08	 mov	 edx, DWORD PTR _pTypeInfo$[ebp]
  0017a	8b 02		 mov	 eax, DWORD PTR [edx]
  0017c	8b 4d 08	 mov	 ecx, DWORD PTR _pTypeInfo$[ebp]
  0017f	51		 push	 ecx
  00180	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  00183	ff d2		 call	 edx
  00185	3b f4		 cmp	 esi, esp
  00187	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018c	85 c0		 test	 eax, eax
  0018e	7c 4c		 jl	 SHORT $LN9@LoadNameCa

; 4263 : 					{
; 4264 : 						pMap[i].bstr.Attach(bstrName.Detach());

  00190	8d 4d d0	 lea	 ecx, DWORD PTR _bstrName$3[ebp]
  00193	e8 00 00 00 00	 call	 ?Detach@CComBSTR@ATL@@QAEPA_WXZ ; ATL::CComBSTR::Detach
  00198	50		 push	 eax
  00199	6b 4d e4 0c	 imul	 ecx, DWORD PTR _i$5[ebp], 12
  0019d	03 4d e8	 add	 ecx, DWORD PTR _pMap$6[ebp]
  001a0	e8 00 00 00 00	 call	 ?Attach@CComBSTR@ATL@@QAEXPA_W@Z ; ATL::CComBSTR::Attach

; 4265 : 						pMap[i].nLen = SysStringLen(pMap[i].bstr);

  001a5	6b 4d e4 0c	 imul	 ecx, DWORD PTR _i$5[ebp], 12
  001a9	03 4d e8	 add	 ecx, DWORD PTR _pMap$6[ebp]
  001ac	e8 00 00 00 00	 call	 ??BCComBSTR@ATL@@QBEPA_WXZ ; ATL::CComBSTR::operator wchar_t *
  001b1	8b f4		 mov	 esi, esp
  001b3	50		 push	 eax
  001b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysStringLen@4
  001ba	3b f4		 cmp	 esi, esp
  001bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c1	6b 4d e4 0c	 imul	 ecx, DWORD PTR _i$5[ebp], 12
  001c5	8b 55 e8	 mov	 edx, DWORD PTR _pMap$6[ebp]
  001c8	89 44 0a 04	 mov	 DWORD PTR [edx+ecx+4], eax

; 4266 : 						pMap[i].id = pfd->memid;

  001cc	6b 45 e4 0c	 imul	 eax, DWORD PTR _i$5[ebp], 12
  001d0	8b 4d e8	 mov	 ecx, DWORD PTR _pMap$6[ebp]
  001d3	8b 55 dc	 mov	 edx, DWORD PTR _pfd$4[ebp]
  001d6	8b 12		 mov	 edx, DWORD PTR [edx]
  001d8	89 54 01 08	 mov	 DWORD PTR [ecx+eax+8], edx
$LN9@LoadNameCa:

; 4267 : 					}
; 4268 : 					pTypeInfo->ReleaseFuncDesc(pfd);

  001dc	8b f4		 mov	 esi, esp
  001de	8b 45 dc	 mov	 eax, DWORD PTR _pfd$4[ebp]
  001e1	50		 push	 eax
  001e2	8b 4d 08	 mov	 ecx, DWORD PTR _pTypeInfo$[ebp]
  001e5	8b 11		 mov	 edx, DWORD PTR [ecx]
  001e7	8b 45 08	 mov	 eax, DWORD PTR _pTypeInfo$[ebp]
  001ea	50		 push	 eax
  001eb	8b 4a 50	 mov	 ecx, DWORD PTR [edx+80]
  001ee	ff d1		 call	 ecx
  001f0	3b f4		 cmp	 esi, esp
  001f2	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 4269 : 				}

  001f7	8d 4d d0	 lea	 ecx, DWORD PTR _bstrName$3[ebp]
  001fa	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
$LN8@LoadNameCa:

; 4270 : 			}

  001ff	e9 15 ff ff ff	 jmp	 $LN2@LoadNameCa
$LN3@LoadNameCa:

; 4271 : 			m_pMap = pMap;

  00204	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00207	8b 45 e8	 mov	 eax, DWORD PTR _pMap$6[ebp]
  0020a	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 4272 : 			pTypeInfo->ReleaseTypeAttr(pta);

  0020d	8b f4		 mov	 esi, esp
  0020f	8b 4d f4	 mov	 ecx, DWORD PTR _pta$[ebp]
  00212	51		 push	 ecx
  00213	8b 55 08	 mov	 edx, DWORD PTR _pTypeInfo$[ebp]
  00216	8b 02		 mov	 eax, DWORD PTR [edx]
  00218	8b 4d 08	 mov	 ecx, DWORD PTR _pTypeInfo$[ebp]
  0021b	51		 push	 ecx
  0021c	8b 50 4c	 mov	 edx, DWORD PTR [eax+76]
  0021f	ff d2		 call	 edx
  00221	3b f4		 cmp	 esi, esp
  00223	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@LoadNameCa:

; 4273 : 		}
; 4274 : 		return S_OK;

  00228	33 c0		 xor	 eax, eax
$LN1@LoadNameCa:

; 4275 : 	}

  0022a	52		 push	 edx
  0022b	8b cd		 mov	 ecx, ebp
  0022d	50		 push	 eax
  0022e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN17@LoadNameCa
  00234	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00239	58		 pop	 eax
  0023a	5a		 pop	 edx
  0023b	5f		 pop	 edi
  0023c	5e		 pop	 esi
  0023d	83 c4 40	 add	 esp, 64			; 00000040H
  00240	3b ec		 cmp	 ebp, esp
  00242	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00247	8b e5		 mov	 esp, ebp
  00249	5d		 pop	 ebp
  0024a	c2 04 00	 ret	 4
  0024d	0f 1f 00	 npad	 3
$LN17@LoadNameCa:
  00250	03 00 00 00	 DD	 3
  00254	00 00 00 00	 DD	 $LN16@LoadNameCa
$LN16@LoadNameCa:
  00258	f4 ff ff ff	 DD	 -12			; fffffff4H
  0025c	04 00 00 00	 DD	 4
  00260	00 00 00 00	 DD	 $LN13@LoadNameCa
  00264	dc ff ff ff	 DD	 -36			; ffffffdcH
  00268	04 00 00 00	 DD	 4
  0026c	00 00 00 00	 DD	 $LN14@LoadNameCa
  00270	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00274	04 00 00 00	 DD	 4
  00278	00 00 00 00	 DD	 $LN15@LoadNameCa
$LN15@LoadNameCa:
  0027c	62		 DB	 98			; 00000062H
  0027d	73		 DB	 115			; 00000073H
  0027e	74		 DB	 116			; 00000074H
  0027f	72		 DB	 114			; 00000072H
  00280	4e		 DB	 78			; 0000004eH
  00281	61		 DB	 97			; 00000061H
  00282	6d		 DB	 109			; 0000006dH
  00283	65		 DB	 101			; 00000065H
  00284	00		 DB	 0
$LN14@LoadNameCa:
  00285	70		 DB	 112			; 00000070H
  00286	66		 DB	 102			; 00000066H
  00287	64		 DB	 100			; 00000064H
  00288	00		 DB	 0
$LN13@LoadNameCa:
  00289	70		 DB	 112			; 00000070H
  0028a	74		 DB	 116			; 00000074H
  0028b	61		 DB	 97			; 00000061H
  0028c	00		 DB	 0
?LoadNameCache@CComTypeInfoHolder@ATL@@QAEJPAUITypeInfo@@@Z ENDP ; ATL::CComTypeInfoHolder::LoadNameCache
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Invoke@CComTypeInfoHolder@ATL@@QAEJPAUIDispatch@@JABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT
_hRes$ = -8						; size = 4
_this$ = -4						; size = 4
_p$ = 8							; size = 4
_dispidMember$ = 12					; size = 4
___formal$ = 16						; size = 4
_lcid$ = 20						; size = 4
_wFlags$ = 24						; size = 2
_pdispparams$ = 28					; size = 4
_pvarResult$ = 32					; size = 4
_pexcepinfo$ = 36					; size = 4
_puArgErr$ = 40						; size = 4
?Invoke@CComTypeInfoHolder@ATL@@QAEJPAUIDispatch@@JABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z PROC ; ATL::CComTypeInfoHolder::Invoke, COMDAT
; _this$ = ecx

; 4230 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4231 : 		HRESULT hRes = EnsureTI(lcid);

  00018	8b 45 14	 mov	 eax, DWORD PTR _lcid$[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?EnsureTI@CComTypeInfoHolder@ATL@@QAEJK@Z ; ATL::CComTypeInfoHolder::EnsureTI
  00024	89 45 f8	 mov	 DWORD PTR _hRes$[ebp], eax

; 4232 : 		_Analysis_assume_(m_pInfo != NULL || FAILED(hRes));
; 4233 : 		if (m_pInfo != NULL)

  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  0002e	74 3d		 je	 SHORT $LN2@Invoke

; 4234 : 			hRes = m_pInfo->Invoke(p, dispidMember, wFlags, pdispparams, pvarResult, pexcepinfo, puArgErr);

  00030	8b f4		 mov	 esi, esp
  00032	8b 55 28	 mov	 edx, DWORD PTR _puArgErr$[ebp]
  00035	52		 push	 edx
  00036	8b 45 24	 mov	 eax, DWORD PTR _pexcepinfo$[ebp]
  00039	50		 push	 eax
  0003a	8b 4d 20	 mov	 ecx, DWORD PTR _pvarResult$[ebp]
  0003d	51		 push	 ecx
  0003e	8b 55 1c	 mov	 edx, DWORD PTR _pdispparams$[ebp]
  00041	52		 push	 edx
  00042	0f b7 45 18	 movzx	 eax, WORD PTR _wFlags$[ebp]
  00046	50		 push	 eax
  00047	8b 4d 0c	 mov	 ecx, DWORD PTR _dispidMember$[ebp]
  0004a	51		 push	 ecx
  0004b	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0004e	52		 push	 edx
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00055	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00058	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0005b	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0005d	50		 push	 eax
  0005e	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00061	ff d2		 call	 edx
  00063	3b f4		 cmp	 esi, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	89 45 f8	 mov	 DWORD PTR _hRes$[ebp], eax
$LN2@Invoke:

; 4235 : 		return hRes;

  0006d	8b 45 f8	 mov	 eax, DWORD PTR _hRes$[ebp]

; 4236 : 	}

  00070	5e		 pop	 esi
  00071	83 c4 08	 add	 esp, 8
  00074	3b ec		 cmp	 ebp, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 24 00	 ret	 36			; 00000024H
?Invoke@CComTypeInfoHolder@ATL@@QAEJPAUIDispatch@@JABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ENDP ; ATL::CComTypeInfoHolder::Invoke
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPA_WIKPAJ@Z
_TEXT	SEGMENT
_j$1 = -20						; size = 4
_pName$2 = -16						; size = 4
_n$3 = -12						; size = 4
_hRes$ = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
_rgszNames$ = 12					; size = 4
_cNames$ = 16						; size = 4
_lcid$ = 20						; size = 4
_rgdispid$ = 24						; size = 4
?GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPA_WIKPAJ@Z PROC ; ATL::CComTypeInfoHolder::GetIDsOfNames, COMDAT
; _this$ = ecx

; 4164 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4165 : 		HRESULT hRes = EnsureTI(lcid);

  0001e	8b 45 14	 mov	 eax, DWORD PTR _lcid$[ebp]
  00021	50		 push	 eax
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?EnsureTI@CComTypeInfoHolder@ATL@@QAEJK@Z ; ATL::CComTypeInfoHolder::EnsureTI
  0002a	89 45 f8	 mov	 DWORD PTR _hRes$[ebp], eax

; 4166 : 		_Analysis_assume_(m_pInfo != NULL || FAILED(hRes));
; 4167 : 		if (m_pInfo != NULL)

  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  00034	0f 84 5d 01 00
	00		 je	 $LN5@GetIDsOfNa

; 4168 : 		{
; 4169 : 			hRes = E_FAIL;

  0003a	c7 45 f8 05 40
	00 80		 mov	 DWORD PTR _hRes$[ebp], -2147467259 ; 80004005H

; 4170 : 			// Look in cache if
; 4171 : 			//	cache is populated
; 4172 : 			//	parameter names are not requested
; 4173 : 			if (m_pMap != NULL && cNames == 1)

  00041	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00044	83 7a 14 00	 cmp	 DWORD PTR [edx+20], 0
  00048	0f 84 17 01 00
	00		 je	 $LN6@GetIDsOfNa
  0004e	83 7d 10 01	 cmp	 DWORD PTR _cNames$[ebp], 1
  00052	0f 85 0d 01 00
	00		 jne	 $LN6@GetIDsOfNa

; 4174 : 			{
; 4175 : 				int n = int( ocslen(rgszNames[0]) );

  00058	b8 04 00 00 00	 mov	 eax, 4
  0005d	6b c8 00	 imul	 ecx, eax, 0
  00060	8b 55 0c	 mov	 edx, DWORD PTR _rgszNames$[ebp]
  00063	8b 04 0a	 mov	 eax, DWORD PTR [edx+ecx]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?ocslen@@YAHPB_W@Z	; ocslen
  0006c	83 c4 04	 add	 esp, 4
  0006f	89 45 f4	 mov	 DWORD PTR _n$3[ebp], eax

; 4176 : #if 1			// CRM: Start additions to ATL class.
; 4177 : 				static OLECHAR s_Claim[]   = L"ClaimDevice";
; 4178 : 				static OLECHAR s_Release[] = L"ReleaseDevice";
; 4179 : 				OLECHAR* pName = rgszNames[0];					// Get pointer to name.

  00072	b9 04 00 00 00	 mov	 ecx, 4
  00077	6b d1 00	 imul	 edx, ecx, 0
  0007a	8b 45 0c	 mov	 eax, DWORD PTR _rgszNames$[ebp]
  0007d	8b 0c 10	 mov	 ecx, DWORD PTR [eax+edx]
  00080	89 4d f0	 mov	 DWORD PTR _pName$2[ebp], ecx

; 4180 : 				if ( n == 5 &&									//	- If length and

  00083	83 7d f4 05	 cmp	 DWORD PTR _n$3[ebp], 5
  00087	75 27		 jne	 SHORT $LN7@GetIDsOfNa
  00089	6a 0a		 push	 10			; 0000000aH
  0008b	68 00 00 00 00	 push	 OFFSET ?s_Claim@?7??GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPA_WIKPAJ@Z@4PA_WA ; `ATL::CComTypeInfoHolder::GetIDsOfNames'::`8'::s_Claim
  00090	8b 55 f0	 mov	 edx, DWORD PTR _pName$2[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 _memcmp
  00099	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009c	85 c0		 test	 eax, eax
  0009e	75 10		 jne	 SHORT $LN7@GetIDsOfNa

; 4181 : 					 memcmp(pName, s_Claim, 10 )  == 0 )		//		data match L"Claim",
; 4182 : 				{
; 4183 : 					pName = s_Claim;							//		replace with L"ClaimDevice".

  000a0	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pName$2[ebp], OFFSET ?s_Claim@?7??GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPA_WIKPAJ@Z@4PA_WA ; `ATL::CComTypeInfoHolder::GetIDsOfNames'::`8'::s_Claim

; 4184 : 					n = 11;

  000a7	c7 45 f4 0b 00
	00 00		 mov	 DWORD PTR _n$3[ebp], 11	; 0000000bH

; 4185 : 				}

  000ae	eb 2b		 jmp	 SHORT $LN8@GetIDsOfNa
$LN7@GetIDsOfNa:

; 4186 : 				else if ( n == 7 &&								//	- If length and

  000b0	83 7d f4 07	 cmp	 DWORD PTR _n$3[ebp], 7
  000b4	75 25		 jne	 SHORT $LN8@GetIDsOfNa
  000b6	6a 0e		 push	 14			; 0000000eH
  000b8	68 00 00 00 00	 push	 OFFSET ?s_Release@?7??GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPA_WIKPAJ@Z@4PA_WA ; `ATL::CComTypeInfoHolder::GetIDsOfNames'::`8'::s_Release
  000bd	8b 45 f0	 mov	 eax, DWORD PTR _pName$2[ebp]
  000c0	50		 push	 eax
  000c1	e8 00 00 00 00	 call	 _memcmp
  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	85 c0		 test	 eax, eax
  000cb	75 0e		 jne	 SHORT $LN8@GetIDsOfNa

; 4187 : 						  memcmp(pName, s_Release, 14 ) == 0 )	//		data match L"Release",
; 4188 : 				{
; 4189 : 					pName = s_Release;							//		replace with L"ReleaseDevice".

  000cd	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pName$2[ebp], OFFSET ?s_Release@?7??GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPA_WIKPAJ@Z@4PA_WA ; `ATL::CComTypeInfoHolder::GetIDsOfNames'::`8'::s_Release

; 4190 : 					n = 13;

  000d4	c7 45 f4 0d 00
	00 00		 mov	 DWORD PTR _n$3[ebp], 13	; 0000000dH
$LN8@GetIDsOfNa:

; 4191 : 				}
; 4192 : 				for (int j=m_nCount-1; j>=0; j--)

  000db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000de	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  000e1	83 ea 01	 sub	 edx, 1
  000e4	89 55 ec	 mov	 DWORD PTR _j$1[ebp], edx
  000e7	eb 09		 jmp	 SHORT $LN4@GetIDsOfNa
$LN2@GetIDsOfNa:
  000e9	8b 45 ec	 mov	 eax, DWORD PTR _j$1[ebp]
  000ec	83 e8 01	 sub	 eax, 1
  000ef	89 45 ec	 mov	 DWORD PTR _j$1[ebp], eax
$LN4@GetIDsOfNa:
  000f2	83 7d ec 00	 cmp	 DWORD PTR _j$1[ebp], 0
  000f6	7c 6d		 jl	 SHORT $LN6@GetIDsOfNa

; 4193 : 				{
; 4194 : 					if ((n == m_pMap[j].nLen) &&

  000f8	6b 4d ec 0c	 imul	 ecx, DWORD PTR _j$1[ebp], 12
  000fc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ff	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00102	8b 55 f4	 mov	 edx, DWORD PTR _n$3[ebp]
  00105	3b 54 08 04	 cmp	 edx, DWORD PTR [eax+ecx+4]
  00109	75 58		 jne	 SHORT $LN10@GetIDsOfNa
  0010b	6b 45 ec 0c	 imul	 eax, DWORD PTR _j$1[ebp], 12
  0010f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00112	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00115	8b 44 02 04	 mov	 eax, DWORD PTR [edx+eax+4]
  00119	d1 e0		 shl	 eax, 1
  0011b	50		 push	 eax
  0011c	8b 4d f0	 mov	 ecx, DWORD PTR _pName$2[ebp]
  0011f	51		 push	 ecx
  00120	6b 55 ec 0c	 imul	 edx, DWORD PTR _j$1[ebp], 12
  00124	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00127	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0012a	03 ca		 add	 ecx, edx
  0012c	e8 00 00 00 00	 call	 ??BCComBSTR@ATL@@QBEPA_WXZ ; ATL::CComBSTR::operator wchar_t *
  00131	50		 push	 eax
  00132	e8 00 00 00 00	 call	 _memcmp
  00137	83 c4 0c	 add	 esp, 12			; 0000000cH
  0013a	85 c0		 test	 eax, eax
  0013c	75 25		 jne	 SHORT $LN10@GetIDsOfNa

; 4195 : 						(memcmp(m_pMap[j].bstr, pName, m_pMap[j].nLen * sizeof(OLECHAR)) == 0))
; 4196 : 				// CRM: End additions to ATL class.
; 4197 : #else			// CRM: Begin replaced code.
; 4198 : 				for (int j=m_nCount-1; j>=0; j--)
; 4199 : 				{
; 4200 : 					if ((n == m_pMap[j].nLen) &&
; 4201 : 						(memcmp(m_pMap[j].bstr, rgszNames[0], m_pMap[j].nLen * sizeof(OLECHAR)) == 0))
; 4202 : #endif			// CRM: End replaced code.
; 4203 : 					{
; 4204 : 						rgdispid[0] = m_pMap[j].id;

  0013e	6b 4d ec 0c	 imul	 ecx, DWORD PTR _j$1[ebp], 12
  00142	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00145	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00148	ba 04 00 00 00	 mov	 edx, 4
  0014d	6b d2 00	 imul	 edx, edx, 0
  00150	8b 75 18	 mov	 esi, DWORD PTR _rgdispid$[ebp]
  00153	8b 44 08 08	 mov	 eax, DWORD PTR [eax+ecx+8]
  00157	89 04 16	 mov	 DWORD PTR [esi+edx], eax

; 4205 : 						hRes = S_OK;

  0015a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hRes$[ebp], 0

; 4206 : 						break;

  00161	eb 02		 jmp	 SHORT $LN6@GetIDsOfNa
$LN10@GetIDsOfNa:

; 4207 : 					}
; 4208 : 				}

  00163	eb 84		 jmp	 SHORT $LN2@GetIDsOfNa
$LN6@GetIDsOfNa:

; 4209 : 			}
; 4210 : 			// if cache is empty or name not in cache or parameter names are requested,
; 4211 : 			// delegate to ITypeInfo::GetIDsOfNames
; 4212 : 			if (FAILED(hRes))

  00165	83 7d f8 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00169	7d 2c		 jge	 SHORT $LN5@GetIDsOfNa

; 4213 : 			{
; 4214 : 				hRes = m_pInfo->GetIDsOfNames(rgszNames, cNames, rgdispid);

  0016b	8b f4		 mov	 esi, esp
  0016d	8b 4d 18	 mov	 ecx, DWORD PTR _rgdispid$[ebp]
  00170	51		 push	 ecx
  00171	8b 55 10	 mov	 edx, DWORD PTR _cNames$[ebp]
  00174	52		 push	 edx
  00175	8b 45 0c	 mov	 eax, DWORD PTR _rgszNames$[ebp]
  00178	50		 push	 eax
  00179	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017c	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0017f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00182	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00185	8b 12		 mov	 edx, DWORD PTR [edx]
  00187	51		 push	 ecx
  00188	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  0018b	ff d0		 call	 eax
  0018d	3b f4		 cmp	 esi, esp
  0018f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00194	89 45 f8	 mov	 DWORD PTR _hRes$[ebp], eax
$LN5@GetIDsOfNa:

; 4215 : 			}
; 4216 : 		}
; 4217 : 		return hRes;

  00197	8b 45 f8	 mov	 eax, DWORD PTR _hRes$[ebp]

; 4218 : 	}

  0019a	5e		 pop	 esi
  0019b	83 c4 14	 add	 esp, 20			; 00000014H
  0019e	3b ec		 cmp	 ebp, esp
  001a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a5	8b e5		 mov	 esp, ebp
  001a7	5d		 pop	 ebp
  001a8	c2 14 00	 ret	 20			; 00000014H
?GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPA_WIKPAJ@Z ENDP ; ATL::CComTypeInfoHolder::GetIDsOfNames
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetTypeInfo@CComTypeInfoHolder@ATL@@QAEJIKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_itinfo$ = 8						; size = 4
_lcid$ = 12						; size = 4
_pptinfo$ = 16						; size = 4
?GetTypeInfo@CComTypeInfoHolder@ATL@@QAEJIKPAPAUITypeInfo@@@Z PROC ; ATL::CComTypeInfoHolder::GetTypeInfo, COMDAT
; _this$ = ecx

; 4150 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4151 : 		if (itinfo != 0)

  0000e	83 7d 08 00	 cmp	 DWORD PTR _itinfo$[ebp], 0
  00012	74 07		 je	 SHORT $LN2@GetTypeInf

; 4152 : 		{
; 4153 : 			return DISP_E_BADINDEX;

  00014	b8 0b 00 02 80	 mov	 eax, -2147352565	; 8002000bH
  00019	eb 10		 jmp	 SHORT $LN1@GetTypeInf
$LN2@GetTypeInf:

; 4154 : 		}
; 4155 : 		return GetTI(lcid, pptinfo);

  0001b	8b 45 10	 mov	 eax, DWORD PTR _pptinfo$[ebp]
  0001e	50		 push	 eax
  0001f	8b 4d 0c	 mov	 ecx, DWORD PTR _lcid$[ebp]
  00022	51		 push	 ecx
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z ; ATL::CComTypeInfoHolder::GetTI
$LN1@GetTypeInf:

; 4156 : 	}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 0c 00	 ret	 12			; 0000000cH
?GetTypeInfo@CComTypeInfoHolder@ATL@@QAEJIKPAPAUITypeInfo@@@Z ENDP ; ATL::CComTypeInfoHolder::GetTypeInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Cleanup@CComTypeInfoHolder@ATL@@SGXK@Z
_TEXT	SEGMENT
tv94 = -12						; size = 4
$T1 = -8						; size = 4
_p$ = -4						; size = 4
_dw$ = 8						; size = 4
?Cleanup@CComTypeInfoHolder@ATL@@SGXK@Z PROC		; ATL::CComTypeInfoHolder::Cleanup, COMDAT

; 4279 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 4280 : 	ATLASSERT(dw != 0);

  0001c	83 7d 08 00	 cmp	 DWORD PTR _dw$[ebp], 0
  00020	75 26		 jne	 SHORT $LN5@Cleanup
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_1BA@CAHHGEAC@?$AAd?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0002c	6a 00		 push	 0
  0002e	68 b8 10 00 00	 push	 4280			; 000010b8H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00038	6a 02		 push	 2
  0003a	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003f	83 c4 18	 add	 esp, 24			; 00000018H
  00042	83 f8 01	 cmp	 eax, 1
  00045	75 01		 jne	 SHORT $LN5@Cleanup
  00047	cc		 int	 3
$LN5@Cleanup:

; 4281 : 	if (dw == 0)

  00048	83 7d 08 00	 cmp	 DWORD PTR _dw$[ebp], 0
  0004c	75 02		 jne	 SHORT $LN2@Cleanup

; 4282 : 		return;

  0004e	eb 65		 jmp	 SHORT $LN1@Cleanup
$LN2@Cleanup:

; 4283 : 
; 4284 : 	CComTypeInfoHolder* p = (CComTypeInfoHolder*) dw;

  00050	8b 4d 08	 mov	 ecx, DWORD PTR _dw$[ebp]
  00053	89 4d fc	 mov	 DWORD PTR _p$[ebp], ecx

; 4285 : 	if (p->m_pInfo != NULL)

  00056	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00059	83 7a 0c 00	 cmp	 DWORD PTR [edx+12], 0
  0005d	74 1d		 je	 SHORT $LN3@Cleanup

; 4286 : 		p->m_pInfo->Release();

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00062	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00065	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00068	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0006b	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0006d	8b f4		 mov	 esi, esp
  0006f	50		 push	 eax
  00070	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00073	ff d2		 call	 edx
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Cleanup:

; 4287 : 	p->m_pInfo = NULL;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0007f	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 4288 : 	delete [] p->m_pMap;

  00086	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00089	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0008c	89 55 f8	 mov	 DWORD PTR $T1[ebp], edx
  0008f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00093	74 0f		 je	 SHORT $LN6@Cleanup
  00095	6a 03		 push	 3
  00097	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  0009a	e8 00 00 00 00	 call	 ??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z
  0009f	89 45 f4	 mov	 DWORD PTR tv94[ebp], eax
  000a2	eb 07		 jmp	 SHORT $LN7@Cleanup
$LN6@Cleanup:
  000a4	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
$LN7@Cleanup:

; 4289 : 	p->m_pMap = NULL;

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  000ae	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0
$LN1@Cleanup:

; 4290 : }

  000b5	5e		 pop	 esi
  000b6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b9	3b ec		 cmp	 ebp, esp
  000bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 04 00	 ret	 4
?Cleanup@CComTypeInfoHolder@ATL@@SGXK@Z ENDP		; ATL::CComTypeInfoHolder::Cleanup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?EnsureTI@CComTypeInfoHolder@ATL@@QAEJK@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_lcid$ = 8						; size = 4
?EnsureTI@CComTypeInfoHolder@ATL@@QAEJK@Z PROC		; ATL::CComTypeInfoHolder::EnsureTI, COMDAT
; _this$ = ecx

; 4135 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4136 : 		HRESULT hr = S_OK;

  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 4137 : 		if (m_pInfo == NULL || m_pMap == NULL)

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00025	74 09		 je	 SHORT $LN3@EnsureTI
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 79 14 00	 cmp	 DWORD PTR [ecx+20], 0
  0002e	75 0f		 jne	 SHORT $LN2@EnsureTI
$LN3@EnsureTI:

; 4138 : 			hr = GetTI(lcid);

  00030	8b 55 08	 mov	 edx, DWORD PTR _lcid$[ebp]
  00033	52		 push	 edx
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?GetTI@CComTypeInfoHolder@ATL@@QAEJK@Z ; ATL::CComTypeInfoHolder::GetTI
  0003c	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN2@EnsureTI:

; 4139 : 		return hr;

  0003f	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]

; 4140 : 	}

  00042	83 c4 08	 add	 esp, 8
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?EnsureTI@CComTypeInfoHolder@ATL@@QAEJK@Z ENDP		; ATL::CComTypeInfoHolder::EnsureTI
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetTI@CComTypeInfoHolder@ATL@@QAEJK@Z
_TEXT	SEGMENT
tv298 = -1296						; size = 4
tv244 = -1292						; size = 4
$T1 = -1288						; size = 4
$T2 = -1284						; size = 8
$T3 = -1276						; size = 8
$T4 = -1268						; size = 8
$T5 = -1260						; size = 8
$T6 = -1252						; size = 8
$T7 = -1244						; size = 4
$T8 = -1240						; size = 8
_spTypeInfo2$9 = -1228					; size = 4
_spInfo$10 = -1216					; size = 4
_spTypeInfo$11 = -1204					; size = 4
_pLibAttr$12 = -1192					; size = 4
_pszFile$13 = -1184					; size = 4
_hRes2$14 = -1180					; size = 4
_spTypeLibModule$15 = -1172				; size = 4
__AtlSafeAllocaManager$16 = -1160			; size = 4
__lpa_ex$17 = -1152					; size = 4
__lpw_ex$18 = -1148					; size = 4
__acp_ex$19 = -1144					; size = 4
__convert_ex$20 = -1140					; size = 4
_dwFLen$21 = -1136					; size = 4
_szFilePath$22 = -1128					; size = 520
_pszFile$23 = -604					; size = 4
__AtlSafeAllocaManager$24 = -596			; size = 4
__lpa_ex$25 = -588					; size = 4
__lpw_ex$26 = -584					; size = 4
__acp_ex$27 = -580					; size = 4
__convert_ex$28 = -576					; size = 4
_dwFLen$29 = -572					; size = 4
_szFilePath$30 = -564					; size = 520
_pTypeLib$31 = -36					; size = 4
_hRes$ = -28						; size = 4
_lock$ = -20						; size = 8
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lcid$ = 8						; size = 4
?GetTI@CComTypeInfoHolder@ATL@@QAEJK@Z PROC		; ATL::CComTypeInfoHolder::GetTI, COMDAT
; _this$ = ecx

; 4293 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 05 00
	00		 sub	 esp, 1296		; 00000510H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd f0 fa ff
	ff		 lea	 edi, DWORD PTR [ebp-1296]
  00012	b9 44 01 00 00	 mov	 ecx, 324		; 00000144H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@GetTI:

; 4294 : 	//If this assert occurs then most likely didn't initialize properly
; 4295 : 	ATLASSUME(m_plibid != NULL && m_pguid != NULL);

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00033	74 08		 je	 SHORT $LN29@GetTI
  00035	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	83 39 00	 cmp	 DWORD PTR [ecx], 0
  0003b	75 26		 jne	 SHORT $LN2@GetTI
$LN29@GetTI:
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@FHENBGPF@?$AAm?$AA_?$AAp?$AAl?$AAi?$AAb?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00047	6a 00		 push	 0
  00049	68 c7 10 00 00	 push	 4295			; 000010c7H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00053	6a 02		 push	 2
  00055	e8 00 00 00 00	 call	 __CrtDbgReportW
  0005a	83 c4 18	 add	 esp, 24			; 00000018H
  0005d	83 f8 01	 cmp	 eax, 1
  00060	75 01		 jne	 SHORT $LN2@GetTI
  00062	cc		 int	 3
$LN2@GetTI:
  00063	33 c0		 xor	 eax, eax
  00065	75 c5		 jne	 SHORT $LN4@GetTI

; 4296 : 
; 4297 : 	if (m_pInfo != NULL && m_pMap != NULL)

  00067	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  0006e	74 10		 je	 SHORT $LN8@GetTI
  00070	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00073	83 7a 14 00	 cmp	 DWORD PTR [edx+20], 0
  00077	74 07		 je	 SHORT $LN8@GetTI

; 4298 : 		return S_OK;

  00079	33 c0		 xor	 eax, eax
  0007b	e9 4a 06 00 00	 jmp	 $LN1@GetTI
$LN8@GetTI:

; 4299 : 
; 4300 : 	CComCritSecLock<CComCriticalSection> lock(_pAtlModule->m_csStaticDataInitAndTypeInfo, false);

  00080	6a 00		 push	 0
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  00087	83 c0 10	 add	 eax, 16			; 00000010H
  0008a	50		 push	 eax
  0008b	8d 4d ec	 lea	 ecx, DWORD PTR _lock$[ebp]
  0008e	e8 00 00 00 00	 call	 ??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>

; 4301 : 	HRESULT hRes = lock.Lock();

  00093	8d 4d ec	 lea	 ecx, DWORD PTR _lock$[ebp]
  00096	e8 00 00 00 00	 call	 ?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
  0009b	89 45 e4	 mov	 DWORD PTR _hRes$[ebp], eax

; 4302 : 	if (FAILED(hRes))

  0009e	83 7d e4 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  000a2	7d 76		 jge	 SHORT $LN9@GetTI

; 4303 : 	{
; 4304 : 		ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to lock critical section in CComTypeInfoHolder::GetTI\n"));

  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@JHDEBJKA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
  000a9	6a 00		 push	 0
  000ab	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  000b0	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  000b5	50		 push	 eax
  000b6	68 d0 10 00 00	 push	 4304			; 000010d0H
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  000c0	8d 8d 28 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  000c6	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000cb	50		 push	 eax
  000cc	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000d1	83 c4 10	 add	 esp, 16			; 00000010H

; 4305 : 		ATLASSERT(0);

  000d4	33 c9		 xor	 ecx, ecx
  000d6	75 26		 jne	 SHORT $LN31@GetTI
  000d8	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  000dd	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000e2	6a 00		 push	 0
  000e4	68 d1 10 00 00	 push	 4305			; 000010d1H
  000e9	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  000ee	6a 02		 push	 2
  000f0	e8 00 00 00 00	 call	 __CrtDbgReportW
  000f5	83 c4 18	 add	 esp, 24			; 00000018H
  000f8	83 f8 01	 cmp	 eax, 1
  000fb	75 01		 jne	 SHORT $LN31@GetTI
  000fd	cc		 int	 3
$LN31@GetTI:

; 4306 : 		return hRes;

  000fe	8b 45 e4	 mov	 eax, DWORD PTR _hRes$[ebp]
  00101	89 85 24 fb ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  00107	8d 4d ec	 lea	 ecx, DWORD PTR _lock$[ebp]
  0010a	e8 00 00 00 00	 call	 ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
  0010f	8b 85 24 fb ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00115	e9 b0 05 00 00	 jmp	 $LN1@GetTI
$LN9@GetTI:

; 4307 : 	}
; 4308 : 	hRes = E_FAIL;

  0011a	c7 45 e4 05 40
	00 80		 mov	 DWORD PTR _hRes$[ebp], -2147467259 ; 80004005H

; 4309 : 	if (m_pInfo == NULL)

  00121	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  00128	0f 85 5a 05 00
	00		 jne	 $LN10@GetTI

; 4310 : 	{
; 4311 : 		ITypeLib* pTypeLib = NULL;

  0012e	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _pTypeLib$31[ebp], 0

; 4312 : 		if (InlineIsEqualGUID(CAtlModule::m_libid, *m_plibid) && m_wMajor == 0xFFFF && m_wMinor == 0xFFFF)

  00135	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00138	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0013b	50		 push	 eax
  0013c	68 00 00 00 00	 push	 OFFSET ?m_libid@CAtlModule@ATL@@2U_GUID@@A ; ATL::CAtlModule::m_libid
  00141	e8 00 00 00 00	 call	 _InlineIsEqualGUID
  00146	83 c4 08	 add	 esp, 8
  00149	85 c0		 test	 eax, eax
  0014b	0f 84 e6 00 00
	00		 je	 $LN7@GetTI
  00151	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00154	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  00158	81 fa ff ff 00
	00		 cmp	 edx, 65535		; 0000ffffH
  0015e	0f 85 d3 00 00
	00		 jne	 $LN7@GetTI
  00164	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00167	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  0016b	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00171	0f 85 c0 00 00
	00		 jne	 $LN7@GetTI

; 4313 : 		{
; 4314 : 			TCHAR szFilePath[MAX_PATH];
; 4315 : 			DWORD dwFLen = ::GetModuleFileName(_AtlBaseModule.GetModuleInstance(), szFilePath, MAX_PATH);

  00177	8b f4		 mov	 esi, esp
  00179	68 04 01 00 00	 push	 260			; 00000104H
  0017e	8d 95 cc fd ff
	ff		 lea	 edx, DWORD PTR _szFilePath$30[ebp]
  00184	52		 push	 edx
  00185	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A ; ATL::_AtlBaseModule
  0018a	e8 00 00 00 00	 call	 ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
  0018f	50		 push	 eax
  00190	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleFileNameW@12
  00196	3b f4		 cmp	 esi, esp
  00198	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0019d	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _dwFLen$29[ebp], eax

; 4316 : 			if( dwFLen != 0 && dwFLen != MAX_PATH )

  001a3	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _dwFLen$29[ebp], 0
  001aa	0f 84 82 00 00
	00		 je	 $LN14@GetTI
  001b0	81 bd c4 fd ff
	ff 04 01 00 00	 cmp	 DWORD PTR _dwFLen$29[ebp], 260 ; 00000104H
  001ba	74 76		 je	 SHORT $LN14@GetTI

; 4317 : 			{
; 4318 : 				USES_CONVERSION_EX;

  001bc	c7 85 c0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR __convert_ex$28[ebp], 0
  001c6	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  001cb	89 85 bc fd ff
	ff		 mov	 DWORD PTR __acp_ex$27[ebp], eax
  001d1	c7 85 b8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR __lpw_ex$26[ebp], 0
  001db	c7 85 b4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR __lpa_ex$25[ebp], 0
  001e5	8d 8d ac fd ff
	ff		 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$24[ebp]
  001eb	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>

; 4319 : 				LPOLESTR pszFile = T2OLE_EX(szFilePath, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  001f0	68 00 04 00 00	 push	 1024			; 00000400H
  001f5	8d 85 cc fd ff
	ff		 lea	 eax, DWORD PTR _szFilePath$30[ebp]
  001fb	50		 push	 eax
  001fc	e8 00 00 00 00	 call	 ?T2OLE_EX@@YAPA_WPA_WI@Z ; T2OLE_EX
  00201	83 c4 08	 add	 esp, 8
  00204	89 85 a4 fd ff
	ff		 mov	 DWORD PTR _pszFile$23[ebp], eax

; 4320 : #ifndef _UNICODE
; 4321 : 				if (pszFile == NULL)
; 4322 : 					return E_OUTOFMEMORY;
; 4323 : #endif
; 4324 : 				hRes = LoadTypeLib(pszFile, &pTypeLib);

  0020a	8b f4		 mov	 esi, esp
  0020c	8d 4d dc	 lea	 ecx, DWORD PTR _pTypeLib$31[ebp]
  0020f	51		 push	 ecx
  00210	8b 95 a4 fd ff
	ff		 mov	 edx, DWORD PTR _pszFile$23[ebp]
  00216	52		 push	 edx
  00217	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadTypeLib@8
  0021d	3b f4		 cmp	 esi, esp
  0021f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00224	89 45 e4	 mov	 DWORD PTR _hRes$[ebp], eax

; 4325 : 			}

  00227	8d 8d ac fd ff
	ff		 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$24[ebp]
  0022d	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
$LN14@GetTI:

; 4326 : 		}

  00232	e9 57 03 00 00	 jmp	 $LN13@GetTI
$LN7@GetTI:

; 4327 : 		else
; 4328 : 		{
; 4329 : 			ATLASSUME(!InlineIsEqualGUID(*m_plibid, GUID_NULL) && "Module LIBID not initialized. See DECLARE_LIBID documentation.");

  00237	68 00 00 00 00	 push	 OFFSET _GUID_NULL
  0023c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0023f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00242	51		 push	 ecx
  00243	e8 00 00 00 00	 call	 _InlineIsEqualGUID
  00248	83 c4 08	 add	 esp, 8
  0024b	85 c0		 test	 eax, eax
  0024d	75 09		 jne	 SHORT $LN32@GetTI
  0024f	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0DP@CJHCKAIL@Module?5LIBID?5not?5initialized?4?5S@
  00254	85 d2		 test	 edx, edx
  00256	75 26		 jne	 SHORT $LN5@GetTI
$LN32@GetTI:
  00258	68 00 00 00 00	 push	 OFFSET ??_C@_1NK@EGGIGGEE@?$AA?$CB?$AAI?$AAn?$AAl?$AAi?$AAn?$AAe?$AAI?$AAs?$AAE?$AAq?$AAu?$AAa?$AAl?$AAG@
  0025d	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00262	6a 00		 push	 0
  00264	68 e9 10 00 00	 push	 4329			; 000010e9H
  00269	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0026e	6a 02		 push	 2
  00270	e8 00 00 00 00	 call	 __CrtDbgReportW
  00275	83 c4 18	 add	 esp, 24			; 00000018H
  00278	83 f8 01	 cmp	 eax, 1
  0027b	75 01		 jne	 SHORT $LN5@GetTI
  0027d	cc		 int	 3
$LN5@GetTI:
  0027e	33 c9		 xor	 ecx, ecx
  00280	75 b5		 jne	 SHORT $LN7@GetTI

; 4330 : 			hRes = LoadRegTypeLib(*m_plibid, m_wMajor, m_wMinor, lcid, &pTypeLib);

  00282	8b f4		 mov	 esi, esp
  00284	8d 55 dc	 lea	 edx, DWORD PTR _pTypeLib$31[ebp]
  00287	52		 push	 edx
  00288	8b 45 08	 mov	 eax, DWORD PTR _lcid$[ebp]
  0028b	50		 push	 eax
  0028c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0028f	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00293	52		 push	 edx
  00294	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00297	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  0029b	51		 push	 ecx
  0029c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0029f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  002a2	50		 push	 eax
  002a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadRegTypeLib@20
  002a9	3b f4		 cmp	 esi, esp
  002ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002b0	89 45 e4	 mov	 DWORD PTR _hRes$[ebp], eax

; 4331 : #ifdef _DEBUG
; 4332 : 			if (SUCCEEDED(hRes))

  002b3	83 7d e4 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  002b7	0f 8c 3d 02 00
	00		 jl	 $LN15@GetTI

; 4333 : 			{
; 4334 : 				// Trace out an warning if the requested TypelibID is the same as the modules TypelibID
; 4335 : 				// and versions do not match.
; 4336 : 				//
; 4337 : 				// In most cases it is due to wrong version template parameters to IDispatchImpl,
; 4338 : 				// IProvideClassInfoImpl or IProvideClassInfo2Impl.
; 4339 : 				// Set major and minor versions to 0xFFFF if the modules type lib has to be loaded
; 4340 : 				// irrespective of its version.
; 4341 : 				//
; 4342 : 				// Get the module's file path
; 4343 : 				TCHAR szFilePath[MAX_PATH];
; 4344 : 				DWORD dwFLen = ::GetModuleFileName(_AtlBaseModule.GetModuleInstance(), szFilePath, MAX_PATH);

  002bd	8b f4		 mov	 esi, esp
  002bf	68 04 01 00 00	 push	 260			; 00000104H
  002c4	8d 8d 98 fb ff
	ff		 lea	 ecx, DWORD PTR _szFilePath$22[ebp]
  002ca	51		 push	 ecx
  002cb	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A ; ATL::_AtlBaseModule
  002d0	e8 00 00 00 00	 call	 ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
  002d5	50		 push	 eax
  002d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleFileNameW@12
  002dc	3b f4		 cmp	 esi, esp
  002de	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002e3	89 85 90 fb ff
	ff		 mov	 DWORD PTR _dwFLen$21[ebp], eax

; 4345 : 				if( dwFLen != 0 && dwFLen != MAX_PATH )

  002e9	83 bd 90 fb ff
	ff 00		 cmp	 DWORD PTR _dwFLen$21[ebp], 0
  002f0	0f 84 ff 01 00
	00		 je	 $LN17@GetTI
  002f6	81 bd 90 fb ff
	ff 04 01 00 00	 cmp	 DWORD PTR _dwFLen$21[ebp], 260 ; 00000104H
  00300	0f 84 ef 01 00
	00		 je	 $LN17@GetTI

; 4346 : 				{
; 4347 : 					USES_CONVERSION_EX;

  00306	c7 85 8c fb ff
	ff 00 00 00 00	 mov	 DWORD PTR __convert_ex$20[ebp], 0
  00310	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00315	89 85 88 fb ff
	ff		 mov	 DWORD PTR __acp_ex$19[ebp], eax
  0031b	c7 85 84 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR __lpw_ex$18[ebp], 0
  00325	c7 85 80 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR __lpa_ex$17[ebp], 0
  0032f	8d 8d 78 fb ff
	ff		 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$16[ebp]
  00335	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>

; 4348 : 					CComPtr<ITypeLib> spTypeLibModule;

  0033a	8d 8d 6c fb ff
	ff		 lea	 ecx, DWORD PTR _spTypeLibModule$15[ebp]
  00340	e8 00 00 00 00	 call	 ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ ; ATL::CComPtr<ITypeLib>::CComPtr<ITypeLib>

; 4349 : 					HRESULT hRes2 = S_OK;

  00345	c7 85 64 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _hRes2$14[ebp], 0

; 4350 : 					LPOLESTR pszFile = T2OLE_EX(szFilePath, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  0034f	68 00 04 00 00	 push	 1024			; 00000400H
  00354	8d 95 98 fb ff
	ff		 lea	 edx, DWORD PTR _szFilePath$22[ebp]
  0035a	52		 push	 edx
  0035b	e8 00 00 00 00	 call	 ?T2OLE_EX@@YAPA_WPA_WI@Z ; T2OLE_EX
  00360	83 c4 08	 add	 esp, 8
  00363	89 85 60 fb ff
	ff		 mov	 DWORD PTR _pszFile$13[ebp], eax

; 4351 : 					if (pszFile == NULL)

  00369	83 bd 60 fb ff
	ff 00		 cmp	 DWORD PTR _pszFile$13[ebp], 0
  00370	75 0c		 jne	 SHORT $LN18@GetTI

; 4352 : 						hRes2 = E_OUTOFMEMORY;

  00372	c7 85 64 fb ff
	ff 0e 00 07 80	 mov	 DWORD PTR _hRes2$14[ebp], -2147024882 ; 8007000eH
  0037c	eb 28		 jmp	 SHORT $LN19@GetTI
$LN18@GetTI:

; 4353 : 					else
; 4354 : 						hRes2 = LoadTypeLib(pszFile, &spTypeLibModule);

  0037e	8d 8d 6c fb ff
	ff		 lea	 ecx, DWORD PTR _spTypeLibModule$15[ebp]
  00384	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ ; ATL::CComPtrBase<ITypeLib>::operator&
  00389	8b f4		 mov	 esi, esp
  0038b	50		 push	 eax
  0038c	8b 85 60 fb ff
	ff		 mov	 eax, DWORD PTR _pszFile$13[ebp]
  00392	50		 push	 eax
  00393	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadTypeLib@8
  00399	3b f4		 cmp	 esi, esp
  0039b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003a0	89 85 64 fb ff
	ff		 mov	 DWORD PTR _hRes2$14[ebp], eax
$LN19@GetTI:

; 4355 : 					if (SUCCEEDED(hRes2))

  003a6	83 bd 64 fb ff
	ff 00		 cmp	 DWORD PTR _hRes2$14[ebp], 0
  003ad	0f 8c 2c 01 00
	00		 jl	 $LN20@GetTI

; 4356 : 					{
; 4357 : 						TLIBATTR* pLibAttr;
; 4358 : 						hRes2 = spTypeLibModule->GetLibAttr(&pLibAttr);

  003b3	8d 8d 6c fb ff
	ff		 lea	 ecx, DWORD PTR _spTypeLibModule$15[ebp]
  003b9	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ ; ATL::CComPtrBase<ITypeLib>::operator->
  003be	89 85 f4 fa ff
	ff		 mov	 DWORD PTR tv244[ebp], eax
  003c4	8b f4		 mov	 esi, esp
  003c6	8d 8d 58 fb ff
	ff		 lea	 ecx, DWORD PTR _pLibAttr$12[ebp]
  003cc	51		 push	 ecx
  003cd	8b 95 f4 fa ff
	ff		 mov	 edx, DWORD PTR tv244[ebp]
  003d3	52		 push	 edx
  003d4	8b 85 f4 fa ff
	ff		 mov	 eax, DWORD PTR tv244[ebp]
  003da	8b 08		 mov	 ecx, DWORD PTR [eax]
  003dc	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  003df	ff d2		 call	 edx
  003e1	3b f4		 cmp	 esi, esp
  003e3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003e8	89 85 64 fb ff
	ff		 mov	 DWORD PTR _hRes2$14[ebp], eax

; 4359 : 						if (SUCCEEDED(hRes2))

  003ee	83 bd 64 fb ff
	ff 00		 cmp	 DWORD PTR _hRes2$14[ebp], 0
  003f5	0f 8c e4 00 00
	00		 jl	 $LN20@GetTI

; 4360 : 						{
; 4361 : 							if (InlineIsEqualGUID(pLibAttr->guid, *m_plibid) &&

  003fb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003fe	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00401	51		 push	 ecx
  00402	8b 95 58 fb ff
	ff		 mov	 edx, DWORD PTR _pLibAttr$12[ebp]
  00408	52		 push	 edx
  00409	e8 00 00 00 00	 call	 _InlineIsEqualGUID
  0040e	83 c4 08	 add	 esp, 8
  00411	85 c0		 test	 eax, eax
  00413	0f 84 91 00 00
	00		 je	 $LN22@GetTI
  00419	8b 85 58 fb ff
	ff		 mov	 eax, DWORD PTR _pLibAttr$12[ebp]
  0041f	0f b7 48 18	 movzx	 ecx, WORD PTR [eax+24]
  00423	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00426	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  0042a	3b c8		 cmp	 ecx, eax
  0042c	75 15		 jne	 SHORT $LN23@GetTI
  0042e	8b 8d 58 fb ff
	ff		 mov	 ecx, DWORD PTR _pLibAttr$12[ebp]
  00434	0f b7 51 1a	 movzx	 edx, WORD PTR [ecx+26]
  00438	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0043b	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  0043f	3b d1		 cmp	 edx, ecx
  00441	74 67		 je	 SHORT $LN22@GetTI
$LN23@GetTI:

; 4362 : 								(pLibAttr->wMajorVerNum != m_wMajor ||
; 4363 : 								pLibAttr->wMinorVerNum != m_wMinor))
; 4364 : 							{
; 4365 : 								ATLTRACE(atlTraceCOM, 0, _T("Warning : CComTypeInfoHolder::GetTI : Loaded typelib does not match the typelib in the module : %Ts\n"), szFilePath);

  00443	8d 95 98 fb ff
	ff		 lea	 edx, DWORD PTR _szFilePath$22[ebp]
  00449	52		 push	 edx
  0044a	68 00 00 00 00	 push	 OFFSET ??_C@_1MK@MBBPECFK@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?3?$AA?5?$AAC?$AAC?$AAo?$AAm?$AAT@
  0044f	6a 00		 push	 0
  00451	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00456	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  0045b	50		 push	 eax
  0045c	68 0d 11 00 00	 push	 4365			; 0000110dH
  00461	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00466	8d 8d 1c fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  0046c	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00471	50		 push	 eax
  00472	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00477	83 c4 14	 add	 esp, 20			; 00000014H

; 4366 : 								ATLTRACE(atlTraceCOM, 0, _T("\tSee IDispatchImpl overview help topic for more information\n"));

  0047a	68 00 00 00 00	 push	 OFFSET ??_C@_1HK@IMBOLHFI@?$AA?7?$AAS?$AAe?$AAe?$AA?5?$AAI?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt?$AAc?$AAh?$AAI@
  0047f	6a 00		 push	 0
  00481	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00486	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  0048b	50		 push	 eax
  0048c	68 0e 11 00 00	 push	 4366			; 0000110eH
  00491	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00496	8d 8d 14 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  0049c	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  004a1	50		 push	 eax
  004a2	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  004a7	83 c4 10	 add	 esp, 16			; 00000010H
$LN22@GetTI:

; 4367 : 							}
; 4368 : 							spTypeLibModule->ReleaseTLibAttr(pLibAttr);

  004aa	8d 8d 6c fb ff
	ff		 lea	 ecx, DWORD PTR _spTypeLibModule$15[ebp]
  004b0	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ ; ATL::CComPtrBase<ITypeLib>::operator->
  004b5	89 85 f0 fa ff
	ff		 mov	 DWORD PTR tv298[ebp], eax
  004bb	8b f4		 mov	 esi, esp
  004bd	8b 85 58 fb ff
	ff		 mov	 eax, DWORD PTR _pLibAttr$12[ebp]
  004c3	50		 push	 eax
  004c4	8b 8d f0 fa ff
	ff		 mov	 ecx, DWORD PTR tv298[ebp]
  004ca	51		 push	 ecx
  004cb	8b 95 f0 fa ff
	ff		 mov	 edx, DWORD PTR tv298[ebp]
  004d1	8b 02		 mov	 eax, DWORD PTR [edx]
  004d3	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  004d6	ff d1		 call	 ecx
  004d8	3b f4		 cmp	 esi, esp
  004da	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN20@GetTI:

; 4369 : 						}
; 4370 : 					}
; 4371 : 				}

  004df	8d 8d 6c fb ff
	ff		 lea	 ecx, DWORD PTR _spTypeLibModule$15[ebp]
  004e5	e8 00 00 00 00	 call	 ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
  004ea	8d 8d 78 fb ff
	ff		 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$16[ebp]
  004f0	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
$LN17@GetTI:

; 4372 : 			}

  004f5	e9 94 00 00 00	 jmp	 $LN13@GetTI
$LN15@GetTI:

; 4373 : 			else
; 4374 : 			{
; 4375 : 				ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to load Typelibrary. (HRESULT = 0x%x)\n"), hRes);

  004fa	8b 55 e4	 mov	 edx, DWORD PTR _hRes$[ebp]
  004fd	52		 push	 edx
  004fe	68 00 00 00 00	 push	 OFFSET ??_C@_1GM@JMFGIKJN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
  00503	6a 00		 push	 0
  00505	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  0050a	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  0050f	50		 push	 eax
  00510	68 17 11 00 00	 push	 4375			; 00001117H
  00515	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  0051a	8d 8d 0c fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00520	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00525	50		 push	 eax
  00526	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0052b	83 c4 14	 add	 esp, 20			; 00000014H

; 4376 : 				ATLTRACE(atlTraceCOM, 0, _T("\tVerify TypelibID and major version specified with\n"));

  0052e	68 00 00 00 00	 push	 OFFSET ??_C@_1GI@KFOMLMHI@?$AA?7?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA?5?$AAT?$AAy?$AAp?$AAe?$AAl?$AAi?$AAb@
  00533	6a 00		 push	 0
  00535	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  0053a	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  0053f	50		 push	 eax
  00540	68 18 11 00 00	 push	 4376			; 00001118H
  00545	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  0054a	8d 8d 04 fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00550	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00555	50		 push	 eax
  00556	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0055b	83 c4 10	 add	 esp, 16			; 00000010H

; 4377 : 				ATLTRACE(atlTraceCOM, 0, _T("\tIDispatchImpl, CStockPropImpl, IProvideClassInfoImpl or IProvideCLassInfo2Impl\n"));

  0055e	68 00 00 00 00	 push	 OFFSET ??_C@_1KC@EPBNKDJD@?$AA?7?$AAI?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt?$AAc?$AAh?$AAI?$AAm?$AAp?$AAl?$AA?0@
  00563	6a 00		 push	 0
  00565	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  0056a	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  0056f	50		 push	 eax
  00570	68 19 11 00 00	 push	 4377			; 00001119H
  00575	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  0057a	8d 8d fc fa ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00580	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00585	50		 push	 eax
  00586	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0058b	83 c4 10	 add	 esp, 16			; 00000010H
$LN13@GetTI:

; 4378 : 			}
; 4379 : #endif
; 4380 : 		}
; 4381 : 		if (SUCCEEDED(hRes))

  0058e	83 7d e4 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00592	0f 8c ee 00 00
	00		 jl	 $LN24@GetTI

; 4382 : 		{
; 4383 : 			CComPtr<ITypeInfo> spTypeInfo;

  00598	8d 8d 4c fb ff
	ff		 lea	 ecx, DWORD PTR _spTypeInfo$11[ebp]
  0059e	e8 00 00 00 00	 call	 ??0?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ ; ATL::CComPtr<ITypeInfo>::CComPtr<ITypeInfo>

; 4384 : 			hRes = pTypeLib->GetTypeInfoOfGuid(*m_pguid, &spTypeInfo);

  005a3	8d 8d 4c fb ff
	ff		 lea	 ecx, DWORD PTR _spTypeInfo$11[ebp]
  005a9	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAPAUITypeInfo@@XZ ; ATL::CComPtrBase<ITypeInfo>::operator&
  005ae	8b f4		 mov	 esi, esp
  005b0	50		 push	 eax
  005b1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  005b6	51		 push	 ecx
  005b7	8b 55 dc	 mov	 edx, DWORD PTR _pTypeLib$31[ebp]
  005ba	8b 02		 mov	 eax, DWORD PTR [edx]
  005bc	8b 4d dc	 mov	 ecx, DWORD PTR _pTypeLib$31[ebp]
  005bf	51		 push	 ecx
  005c0	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  005c3	ff d2		 call	 edx
  005c5	3b f4		 cmp	 esi, esp
  005c7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005cc	89 45 e4	 mov	 DWORD PTR _hRes$[ebp], eax

; 4385 : 			if (SUCCEEDED(hRes))

  005cf	83 7d e4 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  005d3	0f 8c 8b 00 00
	00		 jl	 $LN25@GetTI

; 4386 : 			{
; 4387 : 				CComPtr<ITypeInfo> spInfo(spTypeInfo);

  005d9	8d 85 4c fb ff
	ff		 lea	 eax, DWORD PTR _spTypeInfo$11[ebp]
  005df	50		 push	 eax
  005e0	8d 8d 40 fb ff
	ff		 lea	 ecx, DWORD PTR _spInfo$10[ebp]
  005e6	e8 00 00 00 00	 call	 ??0?$CComPtr@UITypeInfo@@@ATL@@QAE@ABV01@@Z ; ATL::CComPtr<ITypeInfo>::CComPtr<ITypeInfo>

; 4388 : 				CComPtr<ITypeInfo2> spTypeInfo2;

  005eb	8d 8d 34 fb ff
	ff		 lea	 ecx, DWORD PTR _spTypeInfo2$9[ebp]
  005f1	e8 00 00 00 00	 call	 ??0?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ ; ATL::CComPtr<ITypeInfo2>::CComPtr<ITypeInfo2>

; 4389 : 				if (SUCCEEDED(spTypeInfo->QueryInterface(&spTypeInfo2)))

  005f6	8d 8d 34 fb ff
	ff		 lea	 ecx, DWORD PTR _spTypeInfo2$9[ebp]
  005fc	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UITypeInfo2@@@ATL@@QAEPAPAUITypeInfo2@@XZ ; ATL::CComPtrBase<ITypeInfo2>::operator&
  00601	50		 push	 eax
  00602	8d 8d 4c fb ff
	ff		 lea	 ecx, DWORD PTR _spTypeInfo$11[ebp]
  00608	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeInfo@@@1@XZ ; ATL::CComPtrBase<ITypeInfo>::operator->
  0060d	50		 push	 eax
  0060e	e8 00 00 00 00	 call	 ??$QueryInterface@UITypeInfo2@@@IUnknown@@QAGJPAPAUITypeInfo2@@@Z ; IUnknown::QueryInterface<ITypeInfo2>
  00613	85 c0		 test	 eax, eax
  00615	7c 12		 jl	 SHORT $LN26@GetTI

; 4390 : 					spInfo = spTypeInfo2;

  00617	8d 8d 34 fb ff
	ff		 lea	 ecx, DWORD PTR _spTypeInfo2$9[ebp]
  0061d	51		 push	 ecx
  0061e	8d 8d 40 fb ff
	ff		 lea	 ecx, DWORD PTR _spInfo$10[ebp]
  00624	e8 00 00 00 00	 call	 ??$?4UITypeInfo2@@@?$CComPtr@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@ABV?$CComPtr@UITypeInfo2@@@1@@Z ; ATL::CComPtr<ITypeInfo>::operator=<ITypeInfo2>
$LN26@GetTI:

; 4391 : 
; 4392 : 				m_pInfo = spInfo.Detach();

  00629	8d 8d 40 fb ff
	ff		 lea	 ecx, DWORD PTR _spInfo$10[ebp]
  0062f	e8 00 00 00 00	 call	 ?Detach@?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@XZ ; ATL::CComPtrBase<ITypeInfo>::Detach
  00634	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00637	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 4393 : 				_pAtlModule->AddTermFunc(Cleanup, (DWORD_PTR)this);

  0063a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0063d	50		 push	 eax
  0063e	68 00 00 00 00	 push	 OFFSET ?Cleanup@CComTypeInfoHolder@ATL@@SGXK@Z ; ATL::CComTypeInfoHolder::Cleanup
  00643	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  00649	e8 00 00 00 00	 call	 ?AddTermFunc@CAtlModule@ATL@@QAEJP6GXK@ZK@Z ; ATL::CAtlModule::AddTermFunc

; 4394 : 			}

  0064e	8d 8d 34 fb ff
	ff		 lea	 ecx, DWORD PTR _spTypeInfo2$9[ebp]
  00654	e8 00 00 00 00	 call	 ??1?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ
  00659	8d 8d 40 fb ff
	ff		 lea	 ecx, DWORD PTR _spInfo$10[ebp]
  0065f	e8 00 00 00 00	 call	 ??1?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ
$LN25@GetTI:

; 4395 : 			pTypeLib->Release();

  00664	8b 4d dc	 mov	 ecx, DWORD PTR _pTypeLib$31[ebp]
  00667	8b 11		 mov	 edx, DWORD PTR [ecx]
  00669	8b f4		 mov	 esi, esp
  0066b	8b 45 dc	 mov	 eax, DWORD PTR _pTypeLib$31[ebp]
  0066e	50		 push	 eax
  0066f	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00672	ff d1		 call	 ecx
  00674	3b f4		 cmp	 esi, esp
  00676	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 4396 : 		}

  0067b	8d 8d 4c fb ff
	ff		 lea	 ecx, DWORD PTR _spTypeInfo$11[ebp]
  00681	e8 00 00 00 00	 call	 ??1?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ
$LN24@GetTI:

; 4397 : 	}

  00686	eb 07		 jmp	 SHORT $LN11@GetTI
$LN10@GetTI:

; 4398 : 	else
; 4399 : 	{
; 4400 : 		// Another thread has loaded the typeinfo so we're OK.
; 4401 : 		hRes = S_OK;

  00688	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _hRes$[ebp], 0
$LN11@GetTI:

; 4402 : 	}
; 4403 : 
; 4404 : 	if (m_pInfo != NULL && m_pMap == NULL)

  0068f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00692	83 7a 0c 00	 cmp	 DWORD PTR [edx+12], 0
  00696	74 1b		 je	 SHORT $LN27@GetTI
  00698	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0069b	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  0069f	75 12		 jne	 SHORT $LN27@GetTI

; 4405 : 	{
; 4406 : 		hRes=LoadNameCache(m_pInfo);

  006a1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006a4	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  006a7	52		 push	 edx
  006a8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006ab	e8 00 00 00 00	 call	 ?LoadNameCache@CComTypeInfoHolder@ATL@@QAEJPAUITypeInfo@@@Z ; ATL::CComTypeInfoHolder::LoadNameCache
  006b0	89 45 e4	 mov	 DWORD PTR _hRes$[ebp], eax
$LN27@GetTI:

; 4407 : 	}
; 4408 : 
; 4409 : 	return hRes;

  006b3	8b 45 e4	 mov	 eax, DWORD PTR _hRes$[ebp]
  006b6	89 85 f8 fa ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  006bc	8d 4d ec	 lea	 ecx, DWORD PTR _lock$[ebp]
  006bf	e8 00 00 00 00	 call	 ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
  006c4	8b 85 f8 fa ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
$LN1@GetTI:

; 4410 : }

  006ca	52		 push	 edx
  006cb	8b cd		 mov	 ecx, ebp
  006cd	50		 push	 eax
  006ce	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN46@GetTI
  006d4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  006d9	58		 pop	 eax
  006da	5a		 pop	 edx
  006db	5f		 pop	 edi
  006dc	5e		 pop	 esi
  006dd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006e0	33 cd		 xor	 ecx, ebp
  006e2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006e7	81 c4 10 05 00
	00		 add	 esp, 1296		; 00000510H
  006ed	3b ec		 cmp	 ebp, esp
  006ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006f4	8b e5		 mov	 esp, ebp
  006f6	5d		 pop	 ebp
  006f7	c2 04 00	 ret	 4
  006fa	66 90		 npad	 2
$LN46@GetTI:
  006fc	0b 00 00 00	 DD	 11			; 0000000bH
  00700	00 00 00 00	 DD	 $LN45@GetTI
$LN45@GetTI:
  00704	ec ff ff ff	 DD	 -20			; ffffffecH
  00708	08 00 00 00	 DD	 8
  0070c	00 00 00 00	 DD	 $LN34@GetTI
  00710	dc ff ff ff	 DD	 -36			; ffffffdcH
  00714	04 00 00 00	 DD	 4
  00718	00 00 00 00	 DD	 $LN35@GetTI
  0071c	cc fd ff ff	 DD	 -564			; fffffdccH
  00720	08 02 00 00	 DD	 520			; 00000208H
  00724	00 00 00 00	 DD	 $LN36@GetTI
  00728	ac fd ff ff	 DD	 -596			; fffffdacH
  0072c	04 00 00 00	 DD	 4
  00730	00 00 00 00	 DD	 $LN37@GetTI
  00734	98 fb ff ff	 DD	 -1128			; fffffb98H
  00738	08 02 00 00	 DD	 520			; 00000208H
  0073c	00 00 00 00	 DD	 $LN38@GetTI
  00740	78 fb ff ff	 DD	 -1160			; fffffb78H
  00744	04 00 00 00	 DD	 4
  00748	00 00 00 00	 DD	 $LN39@GetTI
  0074c	6c fb ff ff	 DD	 -1172			; fffffb6cH
  00750	04 00 00 00	 DD	 4
  00754	00 00 00 00	 DD	 $LN40@GetTI
  00758	58 fb ff ff	 DD	 -1192			; fffffb58H
  0075c	04 00 00 00	 DD	 4
  00760	00 00 00 00	 DD	 $LN41@GetTI
  00764	4c fb ff ff	 DD	 -1204			; fffffb4cH
  00768	04 00 00 00	 DD	 4
  0076c	00 00 00 00	 DD	 $LN42@GetTI
  00770	40 fb ff ff	 DD	 -1216			; fffffb40H
  00774	04 00 00 00	 DD	 4
  00778	00 00 00 00	 DD	 $LN43@GetTI
  0077c	34 fb ff ff	 DD	 -1228			; fffffb34H
  00780	04 00 00 00	 DD	 4
  00784	00 00 00 00	 DD	 $LN44@GetTI
$LN44@GetTI:
  00788	73		 DB	 115			; 00000073H
  00789	70		 DB	 112			; 00000070H
  0078a	54		 DB	 84			; 00000054H
  0078b	79		 DB	 121			; 00000079H
  0078c	70		 DB	 112			; 00000070H
  0078d	65		 DB	 101			; 00000065H
  0078e	49		 DB	 73			; 00000049H
  0078f	6e		 DB	 110			; 0000006eH
  00790	66		 DB	 102			; 00000066H
  00791	6f		 DB	 111			; 0000006fH
  00792	32		 DB	 50			; 00000032H
  00793	00		 DB	 0
$LN43@GetTI:
  00794	73		 DB	 115			; 00000073H
  00795	70		 DB	 112			; 00000070H
  00796	49		 DB	 73			; 00000049H
  00797	6e		 DB	 110			; 0000006eH
  00798	66		 DB	 102			; 00000066H
  00799	6f		 DB	 111			; 0000006fH
  0079a	00		 DB	 0
$LN42@GetTI:
  0079b	73		 DB	 115			; 00000073H
  0079c	70		 DB	 112			; 00000070H
  0079d	54		 DB	 84			; 00000054H
  0079e	79		 DB	 121			; 00000079H
  0079f	70		 DB	 112			; 00000070H
  007a0	65		 DB	 101			; 00000065H
  007a1	49		 DB	 73			; 00000049H
  007a2	6e		 DB	 110			; 0000006eH
  007a3	66		 DB	 102			; 00000066H
  007a4	6f		 DB	 111			; 0000006fH
  007a5	00		 DB	 0
$LN41@GetTI:
  007a6	70		 DB	 112			; 00000070H
  007a7	4c		 DB	 76			; 0000004cH
  007a8	69		 DB	 105			; 00000069H
  007a9	62		 DB	 98			; 00000062H
  007aa	41		 DB	 65			; 00000041H
  007ab	74		 DB	 116			; 00000074H
  007ac	74		 DB	 116			; 00000074H
  007ad	72		 DB	 114			; 00000072H
  007ae	00		 DB	 0
$LN40@GetTI:
  007af	73		 DB	 115			; 00000073H
  007b0	70		 DB	 112			; 00000070H
  007b1	54		 DB	 84			; 00000054H
  007b2	79		 DB	 121			; 00000079H
  007b3	70		 DB	 112			; 00000070H
  007b4	65		 DB	 101			; 00000065H
  007b5	4c		 DB	 76			; 0000004cH
  007b6	69		 DB	 105			; 00000069H
  007b7	62		 DB	 98			; 00000062H
  007b8	4d		 DB	 77			; 0000004dH
  007b9	6f		 DB	 111			; 0000006fH
  007ba	64		 DB	 100			; 00000064H
  007bb	75		 DB	 117			; 00000075H
  007bc	6c		 DB	 108			; 0000006cH
  007bd	65		 DB	 101			; 00000065H
  007be	00		 DB	 0
$LN39@GetTI:
  007bf	5f		 DB	 95			; 0000005fH
  007c0	41		 DB	 65			; 00000041H
  007c1	74		 DB	 116			; 00000074H
  007c2	6c		 DB	 108			; 0000006cH
  007c3	53		 DB	 83			; 00000053H
  007c4	61		 DB	 97			; 00000061H
  007c5	66		 DB	 102			; 00000066H
  007c6	65		 DB	 101			; 00000065H
  007c7	41		 DB	 65			; 00000041H
  007c8	6c		 DB	 108			; 0000006cH
  007c9	6c		 DB	 108			; 0000006cH
  007ca	6f		 DB	 111			; 0000006fH
  007cb	63		 DB	 99			; 00000063H
  007cc	61		 DB	 97			; 00000061H
  007cd	4d		 DB	 77			; 0000004dH
  007ce	61		 DB	 97			; 00000061H
  007cf	6e		 DB	 110			; 0000006eH
  007d0	61		 DB	 97			; 00000061H
  007d1	67		 DB	 103			; 00000067H
  007d2	65		 DB	 101			; 00000065H
  007d3	72		 DB	 114			; 00000072H
  007d4	00		 DB	 0
$LN38@GetTI:
  007d5	73		 DB	 115			; 00000073H
  007d6	7a		 DB	 122			; 0000007aH
  007d7	46		 DB	 70			; 00000046H
  007d8	69		 DB	 105			; 00000069H
  007d9	6c		 DB	 108			; 0000006cH
  007da	65		 DB	 101			; 00000065H
  007db	50		 DB	 80			; 00000050H
  007dc	61		 DB	 97			; 00000061H
  007dd	74		 DB	 116			; 00000074H
  007de	68		 DB	 104			; 00000068H
  007df	00		 DB	 0
$LN37@GetTI:
  007e0	5f		 DB	 95			; 0000005fH
  007e1	41		 DB	 65			; 00000041H
  007e2	74		 DB	 116			; 00000074H
  007e3	6c		 DB	 108			; 0000006cH
  007e4	53		 DB	 83			; 00000053H
  007e5	61		 DB	 97			; 00000061H
  007e6	66		 DB	 102			; 00000066H
  007e7	65		 DB	 101			; 00000065H
  007e8	41		 DB	 65			; 00000041H
  007e9	6c		 DB	 108			; 0000006cH
  007ea	6c		 DB	 108			; 0000006cH
  007eb	6f		 DB	 111			; 0000006fH
  007ec	63		 DB	 99			; 00000063H
  007ed	61		 DB	 97			; 00000061H
  007ee	4d		 DB	 77			; 0000004dH
  007ef	61		 DB	 97			; 00000061H
  007f0	6e		 DB	 110			; 0000006eH
  007f1	61		 DB	 97			; 00000061H
  007f2	67		 DB	 103			; 00000067H
  007f3	65		 DB	 101			; 00000065H
  007f4	72		 DB	 114			; 00000072H
  007f5	00		 DB	 0
$LN36@GetTI:
  007f6	73		 DB	 115			; 00000073H
  007f7	7a		 DB	 122			; 0000007aH
  007f8	46		 DB	 70			; 00000046H
  007f9	69		 DB	 105			; 00000069H
  007fa	6c		 DB	 108			; 0000006cH
  007fb	65		 DB	 101			; 00000065H
  007fc	50		 DB	 80			; 00000050H
  007fd	61		 DB	 97			; 00000061H
  007fe	74		 DB	 116			; 00000074H
  007ff	68		 DB	 104			; 00000068H
  00800	00		 DB	 0
$LN35@GetTI:
  00801	70		 DB	 112			; 00000070H
  00802	54		 DB	 84			; 00000054H
  00803	79		 DB	 121			; 00000079H
  00804	70		 DB	 112			; 00000070H
  00805	65		 DB	 101			; 00000065H
  00806	4c		 DB	 76			; 0000004cH
  00807	69		 DB	 105			; 00000069H
  00808	62		 DB	 98			; 00000062H
  00809	00		 DB	 0
$LN34@GetTI:
  0080a	6c		 DB	 108			; 0000006cH
  0080b	6f		 DB	 111			; 0000006fH
  0080c	63		 DB	 99			; 00000063H
  0080d	6b		 DB	 107			; 0000006bH
  0080e	00		 DB	 0
?GetTI@CComTypeInfoHolder@ATL@@QAEJK@Z ENDP		; ATL::CComTypeInfoHolder::GetTI
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_lcid$ = 8						; size = 4
_ppInfo$ = 12						; size = 4
?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z PROC ; ATL::CComTypeInfoHolder::GetTI, COMDAT
; _this$ = ecx

; 4117 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4118 : 		ATLASSERT(ppInfo != NULL);

  00018	83 7d 0c 00	 cmp	 DWORD PTR _ppInfo$[ebp], 0
  0001c	75 26		 jne	 SHORT $LN6@GetTI
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_1BI@MCKDPFMC@?$AAp?$AAp?$AAI?$AAn?$AAf?$AAo?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00028	6a 00		 push	 0
  0002a	68 16 10 00 00	 push	 4118			; 00001016H
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00034	6a 02		 push	 2
  00036	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003b	83 c4 18	 add	 esp, 24			; 00000018H
  0003e	83 f8 01	 cmp	 eax, 1
  00041	75 01		 jne	 SHORT $LN6@GetTI
  00043	cc		 int	 3
$LN6@GetTI:

; 4119 : 		if (ppInfo == NULL)

  00044	83 7d 0c 00	 cmp	 DWORD PTR _ppInfo$[ebp], 0
  00048	75 07		 jne	 SHORT $LN2@GetTI

; 4120 : 			return E_POINTER;

  0004a	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0004f	eb 5a		 jmp	 SHORT $LN1@GetTI
$LN2@GetTI:

; 4121 : 
; 4122 : 		HRESULT hr = S_OK;

  00051	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 4123 : 		if (m_pInfo == NULL)

  00058	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  0005f	75 0f		 jne	 SHORT $LN3@GetTI

; 4124 : 			hr = GetTI(lcid);

  00061	8b 55 08	 mov	 edx, DWORD PTR _lcid$[ebp]
  00064	52		 push	 edx
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	e8 00 00 00 00	 call	 ?GetTI@CComTypeInfoHolder@ATL@@QAEJK@Z ; ATL::CComTypeInfoHolder::GetTI
  0006d	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN3@GetTI:

; 4125 : 		*ppInfo = m_pInfo;

  00070	8b 45 0c	 mov	 eax, DWORD PTR _ppInfo$[ebp]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00079	89 10		 mov	 DWORD PTR [eax], edx

; 4126 : 		if (m_pInfo != NULL)

  0007b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00082	74 24		 je	 SHORT $LN4@GetTI

; 4127 : 		{
; 4128 : 			m_pInfo->AddRef();

  00084	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0008a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00090	8b 12		 mov	 edx, DWORD PTR [edx]
  00092	8b f4		 mov	 esi, esp
  00094	51		 push	 ecx
  00095	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00098	ff d0		 call	 eax
  0009a	3b f4		 cmp	 esi, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 4129 : 			hr = S_OK;

  000a1	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
$LN4@GetTI:

; 4130 : 		}
; 4131 : 		return hr;

  000a8	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
$LN1@GetTI:

; 4132 : 	}

  000ab	5e		 pop	 esi
  000ac	83 c4 08	 add	 esp, 8
  000af	3b ec		 cmp	 ebp, esp
  000b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 08 00	 ret	 8
?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z ENDP ; ATL::CComTypeInfoHolder::GetTI
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z PROC	; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00011	83 e0 02	 and	 eax, 2
  00014	74 41		 je	 SHORT $LN2@vector
  00016	68 00 00 00 00	 push	 OFFSET ??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00021	52		 push	 edx
  00022	6a 0c		 push	 12			; 0000000cH
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??_I@YGXPAXIIP6EX0@Z@Z
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR ___flags$[ebp]
  00030	83 e1 01	 and	 ecx, 1
  00033	74 1a		 je	 SHORT $LN3@vector
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	6b 42 fc 0c	 imul	 eax, DWORD PTR [edx-4], 12
  0003c	83 c0 04	 add	 eax, 4
  0003f	50		 push	 eax
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	83 e9 04	 sub	 ecx, 4
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0004c	83 c4 08	 add	 esp, 8
$LN3@vector:
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	83 e8 04	 sub	 eax, 4
  00055	eb 21		 jmp	 SHORT $LN1@vector
$LN2@vector:
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
  0005f	8b 55 08	 mov	 edx, DWORD PTR ___flags$[ebp]
  00062	83 e2 01	 and	 edx, 1
  00065	74 0e		 je	 SHORT $LN4@vector
  00067	6a 0c		 push	 12			; 0000000cH
  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00072	83 c4 08	 add	 esp, 8
$LN4@vector:
  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
$LN1@vector:
  00078	83 c4 04	 add	 esp, 4
  0007b	3b ec		 cmp	 ebp, esp
  0007d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 04 00	 ret	 4
??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z ENDP	; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ PROC	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ ENDP	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??0stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ PROC	; ATL::CComTypeInfoHolder::stringdispid::stringdispid, COMDAT
; _this$ = ecx

; 4108 : 		stringdispid() : nLen(0), id(DISPID_UNKNOWN){}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::CComBSTR
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	c7 41 08 ff ff
	ff ff		 mov	 DWORD PTR [ecx+8], -1
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
??0stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ ENDP	; ATL::CComTypeInfoHolder::stringdispid::stringdispid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCComClassFactory@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCComClassFactory@ATL@@UAEPAXI@Z PROC		; ATL::CComClassFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CComClassFactory@ATL@@UAE@XZ ; ATL::CComClassFactory::~CComClassFactory
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 28		 push	 40			; 00000028H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GCComClassFactory@ATL@@UAEPAXI@Z ENDP		; ATL::CComClassFactory::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CComClassFactory@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComClassFactory@ATL@@QAE@XZ PROC			; ATL::CComClassFactory::CComClassFactory, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0IClassFactory@@QAE@XZ
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 04	 add	 ecx, 4
  0001c	e8 00 00 00 00	 call	 ??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CComClassFactory@ATL@@6B@
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
??0CComClassFactory@ATL@@QAE@XZ ENDP			; ATL::CComClassFactory::CComClassFactory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?SetVoid@CComClassFactory@ATL@@QAEXPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pv$ = 8						; size = 4
?SetVoid@CComClassFactory@ATL@@QAEXPAX@Z PROC		; ATL::CComClassFactory::SetVoid, COMDAT
; _this$ = ecx

; 3767 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3768 : 		m_pfnCreateInstance = (_ATL_CREATORFUNC*)pv;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _pv$[ebp]
  00014	89 48 24	 mov	 DWORD PTR [eax+36], ecx

; 3769 : 	}

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?SetVoid@CComClassFactory@ATL@@QAEXPAX@Z ENDP		; ATL::CComClassFactory::SetVoid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?LockServer@CComClassFactory@ATL@@UAGJH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_fLock$ = 12						; size = 4
?LockServer@CComClassFactory@ATL@@UAGJH@Z PROC		; ATL::CComClassFactory::LockServer, COMDAT

; 3758 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 3759 : 		if (fLock)

  00004	83 7d 0c 00	 cmp	 DWORD PTR _fLock$[ebp], 0
  00008	74 1d		 je	 SHORT $LN2@LockServer

; 3760 : 			_pAtlModule->Lock();

  0000a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	8b f4		 mov	 esi, esp
  00013	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  00019	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0001c	ff d0		 call	 eax
  0001e	3b f4		 cmp	 esi, esp
  00020	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00025	eb 1c		 jmp	 SHORT $LN3@LockServer
$LN2@LockServer:

; 3761 : 		else
; 3762 : 			_pAtlModule->Unlock();

  00027	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  0002d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002f	8b f4		 mov	 esi, esp
  00031	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  00037	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0003a	ff d0		 call	 eax
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@LockServer:

; 3763 : 		return S_OK;

  00043	33 c0		 xor	 eax, eax

; 3764 : 	}

  00045	5e		 pop	 esi
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	5d		 pop	 ebp
  0004e	c2 08 00	 ret	 8
?LockServer@CComClassFactory@ATL@@UAGJH@Z ENDP		; ATL::CComClassFactory::LockServer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?CreateInstance@CComClassFactory@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_hRes$ = -4						; size = 4
_this$ = 8						; size = 4
_pUnkOuter$ = 12					; size = 4
_riid$ = 16						; size = 4
_ppvObj$ = 20						; size = 4
?CreateInstance@CComClassFactory@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z PROC ; ATL::CComClassFactory::CreateInstance, COMDAT

; 3738 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN4@CreateInst:

; 3739 : 		ATLASSUME(m_pfnCreateInstance != NULL);

  0001c	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  00023	75 26		 jne	 SHORT $LN2@CreateInst
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_1DC@ENLDIEGP@?$AAm?$AA_?$AAp?$AAf?$AAn?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAI?$AAn?$AAs?$AAt@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0002f	6a 00		 push	 0
  00031	68 9b 0e 00 00	 push	 3739			; 00000e9bH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0003b	6a 02		 push	 2
  0003d	e8 00 00 00 00	 call	 __CrtDbgReportW
  00042	83 c4 18	 add	 esp, 24			; 00000018H
  00045	83 f8 01	 cmp	 eax, 1
  00048	75 01		 jne	 SHORT $LN2@CreateInst
  0004a	cc		 int	 3
$LN2@CreateInst:
  0004b	33 d2		 xor	 edx, edx
  0004d	75 cd		 jne	 SHORT $LN4@CreateInst

; 3740 : 		HRESULT hRes = E_POINTER;

  0004f	c7 45 fc 03 40
	00 80		 mov	 DWORD PTR _hRes$[ebp], -2147467261 ; 80004003H

; 3741 : 		if (ppvObj != NULL)

  00056	83 7d 14 00	 cmp	 DWORD PTR _ppvObj$[ebp], 0
  0005a	74 72		 je	 SHORT $LN5@CreateInst

; 3742 : 		{
; 3743 : 			*ppvObj = NULL;

  0005c	8b 45 14	 mov	 eax, DWORD PTR _ppvObj$[ebp]
  0005f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 3744 : 			// can't ask for anything other than IUnknown when aggregating
; 3745 : 
; 3746 : 			if ((pUnkOuter != NULL) && !InlineIsEqualUnknown(riid))

  00065	83 7d 0c 00	 cmp	 DWORD PTR _pUnkOuter$[ebp], 0
  00069	74 43		 je	 SHORT $LN6@CreateInst
  0006b	8b 4d 10	 mov	 ecx, DWORD PTR _riid$[ebp]
  0006e	51		 push	 ecx
  0006f	e8 00 00 00 00	 call	 ?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z ; ATL::InlineIsEqualUnknown
  00074	85 c0		 test	 eax, eax
  00076	75 36		 jne	 SHORT $LN6@CreateInst

; 3747 : 			{
; 3748 : 				ATLTRACE(atlTraceCOM, 0, _T("CComClassFactory: asked for non IUnknown interface while creating an aggregated object"));

  00078	68 00 00 00 00	 push	 OFFSET ??_C@_1KO@PPNHIIND@?$AAC?$AAC?$AAo?$AAm?$AAC?$AAl?$AAa?$AAs?$AAs?$AAF?$AAa?$AAc?$AAt?$AAo?$AAr@
  0007d	6a 00		 push	 0
  0007f	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00084	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00089	50		 push	 eax
  0008a	68 a4 0e 00 00	 push	 3748			; 00000ea4H
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00094	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00097	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000a2	83 c4 10	 add	 esp, 16			; 00000010H

; 3749 : 				hRes = CLASS_E_NOAGGREGATION;

  000a5	c7 45 fc 10 01
	04 80		 mov	 DWORD PTR _hRes$[ebp], -2147221232 ; 80040110H

; 3750 : 			}

  000ac	eb 20		 jmp	 SHORT $LN5@CreateInst
$LN6@CreateInst:

; 3751 : 			else
; 3752 : 				hRes = m_pfnCreateInstance(pUnkOuter, riid, ppvObj);

  000ae	8b f4		 mov	 esi, esp
  000b0	8b 55 14	 mov	 edx, DWORD PTR _ppvObj$[ebp]
  000b3	52		 push	 edx
  000b4	8b 45 10	 mov	 eax, DWORD PTR _riid$[ebp]
  000b7	50		 push	 eax
  000b8	8b 4d 0c	 mov	 ecx, DWORD PTR _pUnkOuter$[ebp]
  000bb	51		 push	 ecx
  000bc	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  000bf	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  000c2	ff d0		 call	 eax
  000c4	3b f4		 cmp	 esi, esp
  000c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cb	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN5@CreateInst:

; 3753 : 		}
; 3754 : 		return hRes;

  000ce	8b 45 fc	 mov	 eax, DWORD PTR _hRes$[ebp]

; 3755 : 	}

  000d1	5e		 pop	 esi
  000d2	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d5	3b ec		 cmp	 ebp, esp
  000d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000dc	8b e5		 mov	 esp, ebp
  000de	5d		 pop	 ebp
  000df	c2 10 00	 ret	 16			; 00000010H
?CreateInstance@CComClassFactory@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z ENDP ; ATL::CComClassFactory::CreateInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1CComClassFactory@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComClassFactory@ATL@@UAE@XZ PROC			; ATL::CComClassFactory::~CComClassFactory, COMDAT
; _this$ = ecx

; 3730 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CComClassFactory@ATL@@6B@

; 3731 : 	}

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	83 c1 04	 add	 ecx, 4
  0001d	e8 00 00 00 00	 call	 ??1?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::~CComObjectRootEx<ATL::CComMultiThreadModel>
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??1CComClassFactory@ATL@@UAE@XZ ENDP			; ATL::CComClassFactory::~CComClassFactory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT
?_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ PROC ; ATL::CComClassFactory::_GetEntries, COMDAT

; 3725 : 	BEGIN_COM_MAP(CComClassFactory)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3726 : 		COM_INTERFACE_ENTRY(IClassFactory)
; 3727 : 	END_COM_MAP()

  00003	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00008	c1 e0 00	 shl	 eax, 0
  0000b	05 00 00 00 00	 add	 eax, OFFSET ?_entries@?1??_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B ; `ATL::CComClassFactory::_GetEntries'::`2'::_entries
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ENDP ; ATL::CComClassFactory::_GetEntries
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?_InternalQueryInterface@CComClassFactory@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iid$ = 8						; size = 4
_ppvObject$ = 12					; size = 4
?_InternalQueryInterface@CComClassFactory@ATL@@QAEJABU_GUID@@PAPAX@Z PROC ; ATL::CComClassFactory::_InternalQueryInterface, COMDAT
; _this$ = ecx

; 3725 : 	BEGIN_COM_MAP(CComClassFactory)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _ppvObject$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _iid$[ebp]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ?_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ; ATL::CComClassFactory::_GetEntries
  0001b	50		 push	 eax
  0001c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001f	52		 push	 edx
  00020	e8 00 00 00 00	 call	 ?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z ; ATL::CComObjectRootBase::InternalQueryInterface
  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 08 00	 ret	 8
?_InternalQueryInterface@CComClassFactory@ATL@@QAEJABU_GUID@@PAPAX@Z ENDP ; ATL::CComClassFactory::_InternalQueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ PROC ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::CComObjectRootEx<ATL::CComMultiThreadModel>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0CComObjectRootBase@ATL@@QAE@XZ ; ATL::CComObjectRootBase::CComObjectRootBase
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 04	 add	 ecx, 4
  0001c	e8 00 00 00 00	 call	 ??0CComAutoDeleteCriticalSection@ATL@@QAE@XZ
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::CComObjectRootEx<ATL::CComMultiThreadModel>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?_AtlInitialConstruct@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_AtlInitialConstruct@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEJXZ PROC ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::_AtlInitialConstruct, COMDAT
; _this$ = ecx

; 2683 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2684 : 		return m_critsec.Init();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 04	 add	 ecx, 4
  00014	e8 00 00 00 00	 call	 ?Init@CComSafeDeleteCriticalSection@ATL@@QAEJXZ ; ATL::CComSafeDeleteCriticalSection::Init

; 2685 : 	}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_AtlInitialConstruct@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEJXZ ENDP ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::_AtlInitialConstruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?InternalRelease@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT
_nRef$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ PROC ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalRelease, COMDAT
; _this$ = ecx

; 2669 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2670 : #ifdef _DEBUG
; 2671 : 		LONG nRef = _ThreadModel::Decrement(&m_dwRef);

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z ; ATL::CComMultiThreadModel::Decrement
  00020	89 45 f8	 mov	 DWORD PTR _nRef$[ebp], eax

; 2672 : 		if (nRef < -(LONG_MAX / 2))

  00023	81 7d f8 01 00
	00 c0		 cmp	 DWORD PTR _nRef$[ebp], -1073741823 ; c0000001H
  0002a	7d 2a		 jge	 SHORT $LN2@InternalRe

; 2673 : 		{
; 2674 : 			ATLASSERT(0 && _T("Release called on a pointer that has already been released"));

  0002c	33 c9		 xor	 ecx, ecx
  0002e	75 26		 jne	 SHORT $LN2@InternalRe
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_1IG@BMPHLDAM@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAL?$AA?$CC?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5@
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0003a	6a 00		 push	 0
  0003c	68 72 0a 00 00	 push	 2674			; 00000a72H
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00046	6a 02		 push	 2
  00048	e8 00 00 00 00	 call	 __CrtDbgReportW
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
  00050	83 f8 01	 cmp	 eax, 1
  00053	75 01		 jne	 SHORT $LN2@InternalRe
  00055	cc		 int	 3
$LN2@InternalRe:

; 2675 : 		}
; 2676 : 		return nRef;

  00056	8b 45 f8	 mov	 eax, DWORD PTR _nRef$[ebp]

; 2677 : #else
; 2678 : 		return _ThreadModel::Decrement(&m_dwRef);
; 2679 : #endif
; 2680 : 	}

  00059	83 c4 08	 add	 esp, 8
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?InternalRelease@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ ENDP ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?InternalAddRef@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InternalAddRef@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ PROC ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalAddRef, COMDAT
; _this$ = ecx

; 2664 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@InternalAd:

; 2665 : 		ATLASSUME(m_dwRef != -1L);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 ff	 cmp	 DWORD PTR [eax], -1
  00014	75 26		 jne	 SHORT $LN2@InternalAd
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@CFNLNIPO@?$AAm?$AA_?$AAd?$AAw?$AAR?$AAe?$AAf?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1?$AAL@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 69 0a 00 00	 push	 2665			; 00000a69H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN2@InternalAd
  0003b	cc		 int	 3
$LN2@InternalAd:
  0003c	33 d2		 xor	 edx, edx
  0003e	75 ce		 jne	 SHORT $LN4@InternalAd

; 2666 : 		return _ThreadModel::Increment(&m_dwRef);

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z ; ATL::CComMultiThreadModel::Increment

; 2667 : 	}

  00049	83 c4 04	 add	 esp, 4
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
?InternalAddRef@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ ENDP ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::InternalAddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ PROC ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::~CComObjectRootEx<ATL::CComMultiThreadModel>, COMDAT
; _this$ = ecx

; 2660 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2661 : 	}

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 04	 add	 ecx, 4
  00014	e8 00 00 00 00	 call	 ??1CComAutoDeleteCriticalSection@ATL@@QAE@XZ
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??1CComObjectRootBase@ATL@@QAE@XZ ; ATL::CComObjectRootBase::~CComObjectRootBase
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
??1?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::~CComObjectRootEx<ATL::CComMultiThreadModel>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1ModuleLockHelper@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1ModuleLockHelper@ATL@@QAE@XZ PROC			; ATL::ModuleLockHelper::~ModuleLockHelper, COMDAT
; _this$ = ecx

; 2896 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2897 : #ifndef _ATL_STATIC_LIB_IMPL
; 2898 : 		_pAtlModule->Unlock();

  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  00014	8b 10		 mov	 edx, DWORD PTR [eax]
  00016	8b f4		 mov	 esi, esp
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  0001e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00021	ff d0		 call	 eax
  00023	3b f4		 cmp	 esi, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2899 : #endif
; 2900 : 	}

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??1ModuleLockHelper@ATL@@QAE@XZ ENDP			; ATL::ModuleLockHelper::~ModuleLockHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??0ModuleLockHelper@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ModuleLockHelper@ATL@@QAE@XZ PROC			; ATL::ModuleLockHelper::ModuleLockHelper, COMDAT
; _this$ = ecx

; 2888 : 	ModuleLockHelper()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2889 : 	{
; 2890 : #ifndef _ATL_STATIC_LIB_IMPL
; 2891 : 		_pAtlModule->Lock();

  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  00014	8b 10		 mov	 edx, DWORD PTR [eax]
  00016	8b f4		 mov	 esi, esp
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
  0001e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00021	ff d0		 call	 eax
  00023	3b f4		 cmp	 esi, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2892 : #endif
; 2893 : 	}

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5e		 pop	 esi
  0002e	83 c4 04	 add	 esp, 4
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??0ModuleLockHelper@ATL@@QAE@XZ ENDP			; ATL::ModuleLockHelper::ModuleLockHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ PROC ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::CComObjectRootEx<ATL::CComSingleThreadModel>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0CComObjectRootBase@ATL@@QAE@XZ ; ATL::CComObjectRootBase::CComObjectRootBase
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::CComObjectRootEx<ATL::CComSingleThreadModel>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ PROC ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock, COMDAT
; _this$ = ecx

; 2740 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2741 : 	}

  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ PROC ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock, COMDAT
; _this$ = ecx

; 2737 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2738 : 	}

  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::Lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?_AtlInitialConstruct@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_AtlInitialConstruct@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEJXZ PROC ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::_AtlInitialConstruct, COMDAT
; _this$ = ecx

; 2732 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2733 : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 2734 : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?_AtlInitialConstruct@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEJXZ ENDP ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::_AtlInitialConstruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT
_nRef$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ PROC ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease, COMDAT
; _this$ = ecx

; 2718 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2719 : #ifdef _DEBUG
; 2720 : 		long nRef = _ThreadModel::Decrement(&m_dwRef);

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ?Decrement@CComSingleThreadModel@ATL@@SGKPAJ@Z ; ATL::CComSingleThreadModel::Decrement
  00020	89 45 f8	 mov	 DWORD PTR _nRef$[ebp], eax

; 2721 : 		if (nRef < -(LONG_MAX / 2))

  00023	81 7d f8 01 00
	00 c0		 cmp	 DWORD PTR _nRef$[ebp], -1073741823 ; c0000001H
  0002a	7d 2a		 jge	 SHORT $LN2@InternalRe

; 2722 : 		{
; 2723 : 			ATLASSERT(0 && _T("Release called on a pointer that has already been released"));

  0002c	33 c9		 xor	 ecx, ecx
  0002e	75 26		 jne	 SHORT $LN2@InternalRe
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_1IG@BMPHLDAM@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAL?$AA?$CC?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5@
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0003a	6a 00		 push	 0
  0003c	68 a3 0a 00 00	 push	 2723			; 00000aa3H
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00046	6a 02		 push	 2
  00048	e8 00 00 00 00	 call	 __CrtDbgReportW
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
  00050	83 f8 01	 cmp	 eax, 1
  00053	75 01		 jne	 SHORT $LN2@InternalRe
  00055	cc		 int	 3
$LN2@InternalRe:

; 2724 : 		}
; 2725 : 		return nRef;

  00056	8b 45 f8	 mov	 eax, DWORD PTR _nRef$[ebp]

; 2726 : #else
; 2727 : 		return _ThreadModel::Decrement(&m_dwRef);
; 2728 : #endif
; 2729 : 	}

  00059	83 c4 08	 add	 esp, 8
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ENDP ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ PROC ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef, COMDAT
; _this$ = ecx

; 2713 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@InternalAd:

; 2714 : 		ATLASSUME(m_dwRef != -1L);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 ff	 cmp	 DWORD PTR [eax], -1
  00014	75 26		 jne	 SHORT $LN2@InternalAd
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@CFNLNIPO@?$AAm?$AA_?$AAd?$AAw?$AAR?$AAe?$AAf?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1?$AAL@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 9a 0a 00 00	 push	 2714			; 00000a9aH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN2@InternalAd
  0003b	cc		 int	 3
$LN2@InternalAd:
  0003c	33 d2		 xor	 edx, edx
  0003e	75 ce		 jne	 SHORT $LN4@InternalAd

; 2715 : 		return _ThreadModel::Increment(&m_dwRef);

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?Increment@CComSingleThreadModel@ATL@@SGKPAJ@Z ; ATL::CComSingleThreadModel::Increment

; 2716 : 	}

  00049	83 c4 04	 add	 esp, 4
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ENDP ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ PROC ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::~CComObjectRootEx<ATL::CComSingleThreadModel>, COMDAT
; _this$ = ecx

; 2710 : 	~CComObjectRootEx() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CComObjectRootBase@ATL@@QAE@XZ ; ATL::CComObjectRootBase::~CComObjectRootBase
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::~CComObjectRootEx<ATL::CComSingleThreadModel>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ PROC ; ATL::CComObjectRootBase::InternalFinalConstructRelease, COMDAT
; _this$ = ecx

; 2517 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@InternalFi:

; 2518 : 		ATLASSUME(m_dwRef == 0);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN2@InternalFi
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MDGGGAPK@?$AAm?$AA_?$AAd?$AAw?$AAR?$AAe?$AAf?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 d6 09 00 00	 push	 2518			; 000009d6H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN2@InternalFi
  0003b	cc		 int	 3
$LN2@InternalFi:
  0003c	33 d2		 xor	 edx, edx
  0003e	75 ce		 jne	 SHORT $LN4@InternalFi

; 2519 : 	}

  00040	83 c4 04	 add	 esp, 4
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ ENDP ; ATL::CComObjectRootBase::InternalFinalConstructRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ PROC ; ATL::CComObjectRootBase::InternalFinalConstructAddRef, COMDAT
; _this$ = ecx

; 2514 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2515 : 	}

  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ ENDP ; ATL::CComObjectRootBase::InternalFinalConstructAddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z PROC		; ATL::CComObjectRootBase::SetVoid, COMDAT
; _this$ = ecx

; 2511 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2512 : 	}

  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z ENDP		; ATL::CComObjectRootBase::SetVoid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?OuterQueryInterface@CComObjectRootBase@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iid$ = 8						; size = 4
_ppvObject$ = 12					; size = 4
?OuterQueryInterface@CComObjectRootBase@ATL@@QAEJABU_GUID@@PAPAX@Z PROC ; ATL::CComObjectRootBase::OuterQueryInterface, COMDAT
; _this$ = ecx

; 2506 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2507 : 		return m_pOuterUnknown->QueryInterface(iid, ppvObject);

  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 0c	 mov	 eax, DWORD PTR _ppvObject$[ebp]
  00014	50		 push	 eax
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _iid$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001c	8b 02		 mov	 eax, DWORD PTR [edx]
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	8b 11		 mov	 edx, DWORD PTR [ecx]
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
  00025	52		 push	 edx
  00026	8b 08		 mov	 ecx, DWORD PTR [eax]
  00028	ff d1		 call	 ecx
  0002a	3b f4		 cmp	 esi, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2508 : 	}

  00031	5e		 pop	 esi
  00032	83 c4 04	 add	 esp, 4
  00035	3b ec		 cmp	 ebp, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 08 00	 ret	 8
?OuterQueryInterface@CComObjectRootBase@ATL@@QAEJABU_GUID@@PAPAX@Z ENDP ; ATL::CComObjectRootBase::OuterQueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?OuterRelease@CComObjectRootBase@ATL@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OuterRelease@CComObjectRootBase@ATL@@QAEKXZ PROC	; ATL::CComObjectRootBase::OuterRelease, COMDAT
; _this$ = ecx

; 2500 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2501 : 		return m_pOuterUnknown->Release();

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	8b 02		 mov	 eax, DWORD PTR [edx]
  00019	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0001b	8b f4		 mov	 esi, esp
  0001d	50		 push	 eax
  0001e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00021	ff d2		 call	 edx
  00023	3b f4		 cmp	 esi, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2502 : 	}

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?OuterRelease@CComObjectRootBase@ATL@@QAEKXZ ENDP	; ATL::CComObjectRootBase::OuterRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?OuterAddRef@CComObjectRootBase@ATL@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OuterAddRef@CComObjectRootBase@ATL@@QAEKXZ PROC	; ATL::CComObjectRootBase::OuterAddRef, COMDAT
; _this$ = ecx

; 2496 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2497 : 		return m_pOuterUnknown->AddRef();

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	8b 02		 mov	 eax, DWORD PTR [edx]
  00019	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0001b	8b f4		 mov	 esi, esp
  0001d	50		 push	 eax
  0001e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00021	ff d2		 call	 edx
  00023	3b f4		 cmp	 esi, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2498 : 	}

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?OuterAddRef@CComObjectRootBase@ATL@@QAEKXZ ENDP	; ATL::CComObjectRootBase::OuterAddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_hRes$ = -4						; size = 4
_pThis$ = 8						; size = 4
_pEntries$ = 12						; size = 4
_iid$ = 16						; size = 4
_ppvObject$ = 20					; size = 4
?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z PROC ; ATL::CComObjectRootBase::InternalQueryInterface, COMDAT

; 2475 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 2476 : 		// Only Assert here. AtlInternalQueryInterface will return the correct HRESULT if ppvObject == NULL
; 2477 : #ifndef _ATL_OLEDB_CONFORMANCE_TESTS
; 2478 : 		ATLASSERT(ppvObject != NULL);

  0000b	83 7d 14 00	 cmp	 DWORD PTR _ppvObject$[ebp], 0
  0000f	75 26		 jne	 SHORT $LN3@InternalQu
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@IINBGKAE@?$AAp?$AAp?$AAv?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0001b	6a 00		 push	 0
  0001d	68 ae 09 00 00	 push	 2478			; 000009aeH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00027	6a 02		 push	 2
  00029	e8 00 00 00 00	 call	 __CrtDbgReportW
  0002e	83 c4 18	 add	 esp, 24			; 00000018H
  00031	83 f8 01	 cmp	 eax, 1
  00034	75 01		 jne	 SHORT $LN3@InternalQu
  00036	cc		 int	 3
$LN3@InternalQu:

; 2479 : #endif
; 2480 : 		ATLASSERT(pThis != NULL);

  00037	83 7d 08 00	 cmp	 DWORD PTR _pThis$[ebp], 0
  0003b	75 26		 jne	 SHORT $LN4@InternalQu
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@PEGMCOIG@?$AAp?$AAT?$AAh?$AAi?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00047	6a 00		 push	 0
  00049	68 b0 09 00 00	 push	 2480			; 000009b0H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00053	6a 02		 push	 2
  00055	e8 00 00 00 00	 call	 __CrtDbgReportW
  0005a	83 c4 18	 add	 esp, 24			; 00000018H
  0005d	83 f8 01	 cmp	 eax, 1
  00060	75 01		 jne	 SHORT $LN4@InternalQu
  00062	cc		 int	 3
$LN4@InternalQu:

; 2481 : 		// First entry in the com map should be a simple map entry
; 2482 : 		ATLASSERT(pEntries->pFunc == _ATL_SIMPLEMAPENTRY);

  00063	8b 55 0c	 mov	 edx, DWORD PTR _pEntries$[ebp]
  00066	83 7a 08 01	 cmp	 DWORD PTR [edx+8], 1
  0006a	74 26		 je	 SHORT $LN5@InternalQu
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_1GE@KALDMMBC@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?9?$AA?$DO?$AAp?$AAF?$AAu?$AAn?$AAc@
  00071	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00076	6a 00		 push	 0
  00078	68 b2 09 00 00	 push	 2482			; 000009b2H
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00082	6a 02		 push	 2
  00084	e8 00 00 00 00	 call	 __CrtDbgReportW
  00089	83 c4 18	 add	 esp, 24			; 00000018H
  0008c	83 f8 01	 cmp	 eax, 1
  0008f	75 01		 jne	 SHORT $LN5@InternalQu
  00091	cc		 int	 3
$LN5@InternalQu:

; 2483 : 	#if defined(_ATL_DEBUG_INTERFACES) || defined(_ATL_DEBUG_QI)
; 2484 : 		LPCTSTR pszClassName = (LPCTSTR) pEntries[-1].dw;
; 2485 : 		(pszClassName);
; 2486 : 	#endif // _ATL_DEBUG_INTERFACES
; 2487 : 		HRESULT hRes = AtlInternalQueryInterface(pThis, pEntries, iid, ppvObject);

  00092	8b 4d 14	 mov	 ecx, DWORD PTR _ppvObject$[ebp]
  00095	51		 push	 ecx
  00096	8b 55 10	 mov	 edx, DWORD PTR _iid$[ebp]
  00099	52		 push	 edx
  0009a	8b 45 0c	 mov	 eax, DWORD PTR _pEntries$[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d 08	 mov	 ecx, DWORD PTR _pThis$[ebp]
  000a1	51		 push	 ecx
  000a2	e8 00 00 00 00	 call	 ?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z ; ATL::AtlInternalQueryInterface
  000a7	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax

; 2488 : 	#if defined(_ATL_DEBUG_INTERFACES) && !defined(_ATL_STATIC_LIB_IMPL)
; 2489 : 		_AtlDebugInterfacesModule.AddThunk((IUnknown**)ppvObject, pszClassName, iid);
; 2490 : 	#endif // _ATL_DEBUG_INTERFACES
; 2491 : 		return _ATLDUMPIID(iid, pszClassName, hRes);

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _hRes$[ebp]

; 2492 : 	}

  000ad	83 c4 04	 add	 esp, 4
  000b0	3b ec		 cmp	 ebp, esp
  000b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c2 10 00	 ret	 16			; 00000010H
?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z ENDP ; ATL::CComObjectRootBase::InternalQueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?GetCategoryMap@CComObjectRootBase@ATL@@SAPBU_ATL_CATMAP_ENTRY@2@XZ
_TEXT	SEGMENT
?GetCategoryMap@CComObjectRootBase@ATL@@SAPBU_ATL_CATMAP_ENTRY@2@XZ PROC ; ATL::CComObjectRootBase::GetCategoryMap, COMDAT

; 2467 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2468 : 		return NULL;

  00003	33 c0		 xor	 eax, eax

; 2469 : 	}

  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
?GetCategoryMap@CComObjectRootBase@ATL@@SAPBU_ATL_CATMAP_ENTRY@2@XZ ENDP ; ATL::CComObjectRootBase::GetCategoryMap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?ObjectMain@CComObjectRootBase@ATL@@SGX_N@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?ObjectMain@CComObjectRootBase@ATL@@SGX_N@Z PROC	; ATL::CComObjectRootBase::ObjectMain, COMDAT

; 2617 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2618 : }

  00003	5d		 pop	 ebp
  00004	c2 04 00	 ret	 4
?ObjectMain@CComObjectRootBase@ATL@@SGX_N@Z ENDP	; ATL::CComObjectRootBase::ObjectMain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ PROC	; ATL::CComObjectRootBase::FinalRelease, COMDAT
; _this$ = ecx

; 2446 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2447 : 	}

  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ ENDP	; ATL::CComObjectRootBase::FinalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ PROC	; ATL::CComObjectRootBase::_AtlFinalConstruct, COMDAT
; _this$ = ecx

; 2442 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2443 : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 2444 : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ENDP	; ATL::CComObjectRootBase::_AtlFinalConstruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ PROC	; ATL::CComObjectRootBase::FinalConstruct, COMDAT
; _this$ = ecx

; 2436 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2437 : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 2438 : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ENDP	; ATL::CComObjectRootBase::FinalConstruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??1CComObjectRootBase@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComObjectRootBase@ATL@@QAE@XZ PROC			; ATL::CComObjectRootBase::~CComObjectRootBase, COMDAT
; _this$ = ecx

; 2433 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2434 : 	}

  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??1CComObjectRootBase@ATL@@QAE@XZ ENDP			; ATL::CComObjectRootBase::~CComObjectRootBase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ??0CComObjectRootBase@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComObjectRootBase@ATL@@QAE@XZ PROC			; ATL::CComObjectRootBase::CComObjectRootBase, COMDAT
; _this$ = ecx

; 2428 : 	CComObjectRootBase()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2429 : 	{
; 2430 : 		m_dwRef = 0L;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 2431 : 	}

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0CComObjectRootBase@ATL@@QAE@XZ ENDP			; ATL::CComObjectRootBase::CComObjectRootBase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?AtlIPersistStreamInit_Save@ATL@@YGJPAUIStream@@HPBUATL_PROPMAP_ENTRY@1@PAXPAUIUnknown@@@Z
_TEXT	SEGMENT
tv187 = -112						; size = 4
$T1 = -108						; size = 4
$T2 = -104						; size = 8
$T3 = -96						; size = 8
$T4 = -88						; size = 4
$T5 = -84						; size = 4
___atl_condVal$6 = -80					; size = 4
_var$7 = -72						; size = 16
_bstrWrite$8 = -48					; size = 4
_pData$9 = -40						; size = 4
_i$10 = -36						; size = 4
_piidOld$ = -32						; size = 4
_pDispatch$ = -24					; size = 4
_hr$ = -16						; size = 4
_dw$ = -8						; size = 4
_pStm$ = 8						; size = 4
___formal$ = 12						; size = 4
_pMap$ = 16						; size = 4
_pThis$ = 20						; size = 4
_pUnk$ = 24						; size = 4
?AtlIPersistStreamInit_Save@ATL@@YGJPAUIStream@@HPBUATL_PROPMAP_ENTRY@1@PAXPAUIUnknown@@@Z PROC ; ATL::AtlIPersistStreamInit_Save, COMDAT

; 6806 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d 90	 lea	 edi, DWORD PTR [ebp-112]
  0000b	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd

; 6807 : 	ATLASSERT(pMap != NULL);

  00017	83 7d 10 00	 cmp	 DWORD PTR _pMap$[ebp], 0
  0001b	75 26		 jne	 SHORT $LN22@AtlIPersis
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@FKGJCHLP@?$AAp?$AAM?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00027	6a 00		 push	 0
  00029	68 97 1a 00 00	 push	 6807			; 00001a97H
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00033	6a 02		 push	 2
  00035	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003a	83 c4 18	 add	 esp, 24			; 00000018H
  0003d	83 f8 01	 cmp	 eax, 1
  00040	75 01		 jne	 SHORT $LN22@AtlIPersis
  00042	cc		 int	 3
$LN22@AtlIPersis:

; 6808 : 	if (pStm == NULL || pMap == NULL || pThis == NULL || pUnk == NULL)

  00043	83 7d 08 00	 cmp	 DWORD PTR _pStm$[ebp], 0
  00047	74 12		 je	 SHORT $LN9@AtlIPersis
  00049	83 7d 10 00	 cmp	 DWORD PTR _pMap$[ebp], 0
  0004d	74 0c		 je	 SHORT $LN9@AtlIPersis
  0004f	83 7d 14 00	 cmp	 DWORD PTR _pThis$[ebp], 0
  00053	74 06		 je	 SHORT $LN9@AtlIPersis
  00055	83 7d 18 00	 cmp	 DWORD PTR _pUnk$[ebp], 0
  00059	75 0a		 jne	 SHORT $LN8@AtlIPersis
$LN9@AtlIPersis:

; 6809 : 		return E_INVALIDARG;

  0005b	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00060	e9 00 03 00 00	 jmp	 $LN1@AtlIPersis
$LN8@AtlIPersis:

; 6810 : 
; 6811 : 	DWORD dw = _ATL_VER;

  00065	c7 45 f8 00 0e
	00 00		 mov	 DWORD PTR _dw$[ebp], 3584 ; 00000e00H

; 6812 : 	HRESULT hr = pStm->Write(&dw, sizeof(DWORD), NULL);

  0006c	8b f4		 mov	 esi, esp
  0006e	6a 00		 push	 0
  00070	6a 04		 push	 4
  00072	8d 4d f8	 lea	 ecx, DWORD PTR _dw$[ebp]
  00075	51		 push	 ecx
  00076	8b 55 08	 mov	 edx, DWORD PTR _pStm$[ebp]
  00079	8b 02		 mov	 eax, DWORD PTR [edx]
  0007b	8b 4d 08	 mov	 ecx, DWORD PTR _pStm$[ebp]
  0007e	51		 push	 ecx
  0007f	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00082	ff d2		 call	 edx
  00084	3b f4		 cmp	 esi, esp
  00086	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008b	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax

; 6813 : 	if (FAILED(hr))

  0008e	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00092	7d 08		 jge	 SHORT $LN10@AtlIPersis

; 6814 : 		return hr;

  00094	8b 45 f0	 mov	 eax, DWORD PTR _hr$[ebp]
  00097	e9 c9 02 00 00	 jmp	 $LN1@AtlIPersis
$LN10@AtlIPersis:

; 6815 : 
; 6816 : 	CComPtr<IDispatch> pDispatch;

  0009c	8d 4d e8	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  0009f	e8 00 00 00 00	 call	 ??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ ; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>

; 6817 : 	const IID* piidOld = NULL;

  000a4	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _piidOld$[ebp], 0

; 6818 : ATLPREFAST_SUPPRESS(6385) // Invalid data accessing
; 6819 : 	for (int i = 0; pMap[i].pclsidPropPage != NULL; i++)

  000ab	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _i$10[ebp], 0
  000b2	eb 09		 jmp	 SHORT $LN4@AtlIPersis
$LN2@AtlIPersis:
  000b4	8b 45 dc	 mov	 eax, DWORD PTR _i$10[ebp]
  000b7	83 c0 01	 add	 eax, 1
  000ba	89 45 dc	 mov	 DWORD PTR _i$10[ebp], eax
$LN4@AtlIPersis:
  000bd	6b 4d dc 24	 imul	 ecx, DWORD PTR _i$10[ebp], 36
  000c1	8b 55 10	 mov	 edx, DWORD PTR _pMap$[ebp]
  000c4	83 7c 0a 04 00	 cmp	 DWORD PTR [edx+ecx+4], 0
  000c9	0f 84 85 02 00
	00		 je	 $LN3@AtlIPersis

; 6820 : ATLPREFAST_UNSUPPRESS()
; 6821 : 	{
; 6822 : 		if (pMap[i].szDesc == NULL)

  000cf	6b 45 dc 24	 imul	 eax, DWORD PTR _i$10[ebp], 36
  000d3	8b 4d 10	 mov	 ecx, DWORD PTR _pMap$[ebp]
  000d6	83 3c 01 00	 cmp	 DWORD PTR [ecx+eax], 0
  000da	75 02		 jne	 SHORT $LN11@AtlIPersis

; 6823 : 			continue;

  000dc	eb d6		 jmp	 SHORT $LN2@AtlIPersis
$LN11@AtlIPersis:

; 6824 : 
; 6825 : 		// check if raw data entry
; 6826 : 		if (pMap[i].dwSizeData != 0)

  000de	6b 55 dc 24	 imul	 edx, DWORD PTR _i$10[ebp], 36
  000e2	8b 45 10	 mov	 eax, DWORD PTR _pMap$[ebp]
  000e5	83 7c 10 1c 00	 cmp	 DWORD PTR [eax+edx+28], 0
  000ea	0f 84 a6 00 00
	00		 je	 $LN12@AtlIPersis

; 6827 : 		{
; 6828 : 			void* pData = (void*) (pMap[i].dwOffsetData + (DWORD_PTR)pThis);

  000f0	6b 4d dc 24	 imul	 ecx, DWORD PTR _i$10[ebp], 36
  000f4	8b 55 10	 mov	 edx, DWORD PTR _pMap$[ebp]
  000f7	8b 44 0a 18	 mov	 eax, DWORD PTR [edx+ecx+24]
  000fb	03 45 14	 add	 eax, DWORD PTR _pThis$[ebp]
  000fe	89 45 d8	 mov	 DWORD PTR _pData$9[ebp], eax

; 6829 : 			// call CComBSTR::WriteToStream for BSTRs
; 6830 : 			if (pMap[i].vt == VT_BSTR)

  00101	6b 4d dc 24	 imul	 ecx, DWORD PTR _i$10[ebp], 36
  00105	8b 55 10	 mov	 edx, DWORD PTR _pMap$[ebp]
  00108	0f b7 44 0a 20	 movzx	 eax, WORD PTR [edx+ecx+32]
  0010d	83 f8 08	 cmp	 eax, 8
  00110	75 37		 jne	 SHORT $LN13@AtlIPersis

; 6831 : 			{
; 6832 : 				CComBSTR bstrWrite;

  00112	8d 4d d0	 lea	 ecx, DWORD PTR _bstrWrite$8[ebp]
  00115	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::CComBSTR

; 6833 : 				bstrWrite.Attach(*(BSTR*)pData);

  0011a	8b 4d d8	 mov	 ecx, DWORD PTR _pData$9[ebp]
  0011d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0011f	52		 push	 edx
  00120	8d 4d d0	 lea	 ecx, DWORD PTR _bstrWrite$8[ebp]
  00123	e8 00 00 00 00	 call	 ?Attach@CComBSTR@ATL@@QAEXPA_W@Z ; ATL::CComBSTR::Attach

; 6834 : 				hr = bstrWrite.WriteToStream(pStm);

  00128	8b 45 08	 mov	 eax, DWORD PTR _pStm$[ebp]
  0012b	50		 push	 eax
  0012c	8d 4d d0	 lea	 ecx, DWORD PTR _bstrWrite$8[ebp]
  0012f	e8 00 00 00 00	 call	 ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z ; ATL::CComBSTR::WriteToStream
  00134	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax

; 6835 : 				bstrWrite.Detach();

  00137	8d 4d d0	 lea	 ecx, DWORD PTR _bstrWrite$8[ebp]
  0013a	e8 00 00 00 00	 call	 ?Detach@CComBSTR@ATL@@QAEPA_WXZ ; ATL::CComBSTR::Detach

; 6836 : 			}

  0013f	8d 4d d0	 lea	 ecx, DWORD PTR _bstrWrite$8[ebp]
  00142	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  00147	eb 2c		 jmp	 SHORT $LN14@AtlIPersis
$LN13@AtlIPersis:

; 6837 : 			else
; 6838 : 				hr = pStm->Write(pData, pMap[i].dwSizeData, NULL);

  00149	8b f4		 mov	 esi, esp
  0014b	6a 00		 push	 0
  0014d	6b 4d dc 24	 imul	 ecx, DWORD PTR _i$10[ebp], 36
  00151	8b 55 10	 mov	 edx, DWORD PTR _pMap$[ebp]
  00154	8b 44 0a 1c	 mov	 eax, DWORD PTR [edx+ecx+28]
  00158	50		 push	 eax
  00159	8b 4d d8	 mov	 ecx, DWORD PTR _pData$9[ebp]
  0015c	51		 push	 ecx
  0015d	8b 55 08	 mov	 edx, DWORD PTR _pStm$[ebp]
  00160	8b 02		 mov	 eax, DWORD PTR [edx]
  00162	8b 4d 08	 mov	 ecx, DWORD PTR _pStm$[ebp]
  00165	51		 push	 ecx
  00166	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00169	ff d2		 call	 edx
  0016b	3b f4		 cmp	 esi, esp
  0016d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00172	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax
$LN14@AtlIPersis:

; 6839 : 			if (FAILED(hr))

  00175	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00179	7d 16		 jge	 SHORT $LN15@AtlIPersis

; 6840 : 				return hr;

  0017b	8b 45 f0	 mov	 eax, DWORD PTR _hr$[ebp]
  0017e	89 45 ac	 mov	 DWORD PTR $T5[ebp], eax
  00181	8d 4d e8	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  00184	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  00189	8b 45 ac	 mov	 eax, DWORD PTR $T5[ebp]
  0018c	e9 d4 01 00 00	 jmp	 $LN1@AtlIPersis
$LN15@AtlIPersis:

; 6841 : 			continue;

  00191	e9 1e ff ff ff	 jmp	 $LN2@AtlIPersis
$LN12@AtlIPersis:

; 6842 : 		}
; 6843 : 
; 6844 : 		CComVariant var;

  00196	8d 4d b8	 lea	 ecx, DWORD PTR _var$7[ebp]
  00199	e8 00 00 00 00	 call	 ??0CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::CComVariant

; 6845 : 		if (pMap[i].piidDispatch != piidOld)

  0019e	6b 4d dc 24	 imul	 ecx, DWORD PTR _i$10[ebp], 36
  001a2	8b 55 10	 mov	 edx, DWORD PTR _pMap$[ebp]
  001a5	8b 44 0a 08	 mov	 eax, DWORD PTR [edx+ecx+8]
  001a9	3b 45 e0	 cmp	 eax, DWORD PTR _piidOld$[ebp]
  001ac	0f 84 03 01 00
	00		 je	 $LN16@AtlIPersis

; 6846 : 		{
; 6847 : 			pDispatch.Release();

  001b2	8d 4d e8	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  001b5	e8 00 00 00 00	 call	 ?Release@?$CComPtrBase@UIDispatch@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IDispatch>::Release
$LN7@AtlIPersis:

; 6848 : 			ATLENSURE_RETURN(pMap[i].piidDispatch);

  001ba	6b 4d dc 24	 imul	 ecx, DWORD PTR _i$10[ebp], 36
  001be	8b 55 10	 mov	 edx, DWORD PTR _pMap$[ebp]
  001c1	83 7c 0a 08 00	 cmp	 DWORD PTR [edx+ecx+8], 0
  001c6	74 09		 je	 SHORT $LN23@AtlIPersis
  001c8	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv187[ebp], 1
  001cf	eb 07		 jmp	 SHORT $LN24@AtlIPersis
$LN23@AtlIPersis:
  001d1	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv187[ebp], 0
$LN24@AtlIPersis:
  001d8	8b 45 90	 mov	 eax, DWORD PTR tv187[ebp]
  001db	89 45 b0	 mov	 DWORD PTR ___atl_condVal$6[ebp], eax
  001de	83 7d b0 00	 cmp	 DWORD PTR ___atl_condVal$6[ebp], 0
  001e2	75 26		 jne	 SHORT $LN25@AtlIPersis
  001e4	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  001e9	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  001ee	6a 00		 push	 0
  001f0	68 c0 1a 00 00	 push	 6848			; 00001ac0H
  001f5	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  001fa	6a 02		 push	 2
  001fc	e8 00 00 00 00	 call	 __CrtDbgReportW
  00201	83 c4 18	 add	 esp, 24			; 00000018H
  00204	83 f8 01	 cmp	 eax, 1
  00207	75 01		 jne	 SHORT $LN25@AtlIPersis
  00209	cc		 int	 3
$LN25@AtlIPersis:
  0020a	83 7d b0 00	 cmp	 DWORD PTR ___atl_condVal$6[ebp], 0
  0020e	75 1f		 jne	 SHORT $LN5@AtlIPersis
  00210	c7 45 a8 05 40
	00 80		 mov	 DWORD PTR $T4[ebp], -2147467259 ; 80004005H
  00217	8d 4d b8	 lea	 ecx, DWORD PTR _var$7[ebp]
  0021a	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  0021f	8d 4d e8	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  00222	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  00227	8b 45 a8	 mov	 eax, DWORD PTR $T4[ebp]
  0022a	e9 36 01 00 00	 jmp	 $LN1@AtlIPersis
$LN5@AtlIPersis:
  0022f	33 d2		 xor	 edx, edx
  00231	75 87		 jne	 SHORT $LN7@AtlIPersis

; 6849 : 			if (FAILED(pUnk->QueryInterface(*pMap[i].piidDispatch, (void**)&pDispatch)))

  00233	8d 4d e8	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  00236	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ ; ATL::CComPtrBase<IDispatch>::operator&
  0023b	8b f4		 mov	 esi, esp
  0023d	50		 push	 eax
  0023e	6b 45 dc 24	 imul	 eax, DWORD PTR _i$10[ebp], 36
  00242	8b 4d 10	 mov	 ecx, DWORD PTR _pMap$[ebp]
  00245	8b 54 01 08	 mov	 edx, DWORD PTR [ecx+eax+8]
  00249	52		 push	 edx
  0024a	8b 45 18	 mov	 eax, DWORD PTR _pUnk$[ebp]
  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	8b 55 18	 mov	 edx, DWORD PTR _pUnk$[ebp]
  00252	52		 push	 edx
  00253	8b 01		 mov	 eax, DWORD PTR [ecx]
  00255	ff d0		 call	 eax
  00257	3b f4		 cmp	 esi, esp
  00259	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0025e	85 c0		 test	 eax, eax
  00260	7d 45		 jge	 SHORT $LN18@AtlIPersis

; 6850 : 			{
; 6851 : 				ATLTRACE(atlTraceCOM, 0, _T("Failed to get a dispatch pointer for property #%i\n"), i);

  00262	8b 4d dc	 mov	 ecx, DWORD PTR _i$10[ebp]
  00265	51		 push	 ecx
  00266	68 00 00 00 00	 push	 OFFSET ??_C@_1GG@DILCHCCF@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAa@
  0026b	6a 00		 push	 0
  0026d	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00272	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00277	50		 push	 eax
  00278	68 c3 1a 00 00	 push	 6851			; 00001ac3H
  0027d	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00282	8d 4d a0	 lea	 ecx, DWORD PTR $T3[ebp]
  00285	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0028a	50		 push	 eax
  0028b	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00290	83 c4 14	 add	 esp, 20			; 00000014H

; 6852 : 				hr = E_FAIL;

  00293	c7 45 f0 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H

; 6853 : 				break;

  0029a	8d 4d b8	 lea	 ecx, DWORD PTR _var$7[ebp]
  0029d	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  002a2	e9 ad 00 00 00	 jmp	 $LN3@AtlIPersis
$LN18@AtlIPersis:

; 6854 : 			}
; 6855 : 			piidOld = pMap[i].piidDispatch;

  002a7	6b 55 dc 24	 imul	 edx, DWORD PTR _i$10[ebp], 36
  002ab	8b 45 10	 mov	 eax, DWORD PTR _pMap$[ebp]
  002ae	8b 4c 10 08	 mov	 ecx, DWORD PTR [eax+edx+8]
  002b2	89 4d e0	 mov	 DWORD PTR _piidOld$[ebp], ecx
$LN16@AtlIPersis:

; 6856 : 		}
; 6857 : 
; 6858 : 		if (FAILED(pDispatch.GetProperty(pMap[i].dispid, &var)))

  002b5	8d 55 b8	 lea	 edx, DWORD PTR _var$7[ebp]
  002b8	52		 push	 edx
  002b9	6b 45 dc 24	 imul	 eax, DWORD PTR _i$10[ebp], 36
  002bd	8b 4d 10	 mov	 ecx, DWORD PTR _pMap$[ebp]
  002c0	8b 54 01 14	 mov	 edx, DWORD PTR [ecx+eax+20]
  002c4	52		 push	 edx
  002c5	8d 4d e8	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  002c8	e8 00 00 00 00	 call	 ?GetProperty@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@@Z ; ATL::CComPtr<IDispatch>::GetProperty
  002cd	85 c0		 test	 eax, eax
  002cf	7d 4a		 jge	 SHORT $LN19@AtlIPersis

; 6859 : 		{
; 6860 : 			ATLTRACE(atlTraceCOM, 0, _T("Invoked failed on DISPID %x\n"), pMap[i].dispid);

  002d1	6b 45 dc 24	 imul	 eax, DWORD PTR _i$10[ebp], 36
  002d5	8b 4d 10	 mov	 ecx, DWORD PTR _pMap$[ebp]
  002d8	8b 54 01 14	 mov	 edx, DWORD PTR [ecx+eax+20]
  002dc	52		 push	 edx
  002dd	68 00 00 00 00	 push	 OFFSET ??_C@_1DK@CIMELFNK@?$AAI?$AAn?$AAv?$AAo?$AAk?$AAe?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5@
  002e2	6a 00		 push	 0
  002e4	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  002e9	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  002ee	50		 push	 eax
  002ef	68 cc 1a 00 00	 push	 6860			; 00001accH
  002f4	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  002f9	8d 4d 98	 lea	 ecx, DWORD PTR $T2[ebp]
  002fc	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00301	50		 push	 eax
  00302	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00307	83 c4 14	 add	 esp, 20			; 00000014H

; 6861 : 			hr = E_FAIL;

  0030a	c7 45 f0 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H

; 6862 : 			break;

  00311	8d 4d b8	 lea	 ecx, DWORD PTR _var$7[ebp]
  00314	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  00319	eb 39		 jmp	 SHORT $LN3@AtlIPersis
$LN19@AtlIPersis:

; 6863 : 		}
; 6864 : 
; 6865 : 		hr = var.WriteToStream(pStm, pMap[i].vt);

  0031b	6b 45 dc 24	 imul	 eax, DWORD PTR _i$10[ebp], 36
  0031f	8b 4d 10	 mov	 ecx, DWORD PTR _pMap$[ebp]
  00322	0f b7 54 01 20	 movzx	 edx, WORD PTR [ecx+eax+32]
  00327	52		 push	 edx
  00328	8b 45 08	 mov	 eax, DWORD PTR _pStm$[ebp]
  0032b	50		 push	 eax
  0032c	8d 4d b8	 lea	 ecx, DWORD PTR _var$7[ebp]
  0032f	e8 00 00 00 00	 call	 ?WriteToStream@CComVariant@ATL@@QAEJPAUIStream@@G@Z ; ATL::CComVariant::WriteToStream
  00334	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax

; 6866 : 		if (FAILED(hr))

  00337	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0033b	7d 0a		 jge	 SHORT $LN20@AtlIPersis

; 6867 : 			break;

  0033d	8d 4d b8	 lea	 ecx, DWORD PTR _var$7[ebp]
  00340	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  00345	eb 0d		 jmp	 SHORT $LN3@AtlIPersis
$LN20@AtlIPersis:

; 6868 : 	}

  00347	8d 4d b8	 lea	 ecx, DWORD PTR _var$7[ebp]
  0034a	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  0034f	e9 60 fd ff ff	 jmp	 $LN2@AtlIPersis
$LN3@AtlIPersis:

; 6869 : 	return hr;

  00354	8b 4d f0	 mov	 ecx, DWORD PTR _hr$[ebp]
  00357	89 4d 94	 mov	 DWORD PTR $T1[ebp], ecx
  0035a	8d 4d e8	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  0035d	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  00362	8b 45 94	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@AtlIPersis:

; 6870 : }

  00365	52		 push	 edx
  00366	8b cd		 mov	 ecx, ebp
  00368	50		 push	 eax
  00369	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN31@AtlIPersis
  0036f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00374	58		 pop	 eax
  00375	5a		 pop	 edx
  00376	5f		 pop	 edi
  00377	5e		 pop	 esi
  00378	83 c4 70	 add	 esp, 112		; 00000070H
  0037b	3b ec		 cmp	 ebp, esp
  0037d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00382	8b e5		 mov	 esp, ebp
  00384	5d		 pop	 ebp
  00385	c2 14 00	 ret	 20			; 00000014H
$LN31@AtlIPersis:
  00388	04 00 00 00	 DD	 4
  0038c	00 00 00 00	 DD	 $LN30@AtlIPersis
$LN30@AtlIPersis:
  00390	f8 ff ff ff	 DD	 -8			; fffffff8H
  00394	04 00 00 00	 DD	 4
  00398	00 00 00 00	 DD	 $LN26@AtlIPersis
  0039c	e8 ff ff ff	 DD	 -24			; ffffffe8H
  003a0	04 00 00 00	 DD	 4
  003a4	00 00 00 00	 DD	 $LN27@AtlIPersis
  003a8	d0 ff ff ff	 DD	 -48			; ffffffd0H
  003ac	04 00 00 00	 DD	 4
  003b0	00 00 00 00	 DD	 $LN28@AtlIPersis
  003b4	b8 ff ff ff	 DD	 -72			; ffffffb8H
  003b8	10 00 00 00	 DD	 16			; 00000010H
  003bc	00 00 00 00	 DD	 $LN29@AtlIPersis
$LN29@AtlIPersis:
  003c0	76		 DB	 118			; 00000076H
  003c1	61		 DB	 97			; 00000061H
  003c2	72		 DB	 114			; 00000072H
  003c3	00		 DB	 0
$LN28@AtlIPersis:
  003c4	62		 DB	 98			; 00000062H
  003c5	73		 DB	 115			; 00000073H
  003c6	74		 DB	 116			; 00000074H
  003c7	72		 DB	 114			; 00000072H
  003c8	57		 DB	 87			; 00000057H
  003c9	72		 DB	 114			; 00000072H
  003ca	69		 DB	 105			; 00000069H
  003cb	74		 DB	 116			; 00000074H
  003cc	65		 DB	 101			; 00000065H
  003cd	00		 DB	 0
$LN27@AtlIPersis:
  003ce	70		 DB	 112			; 00000070H
  003cf	44		 DB	 68			; 00000044H
  003d0	69		 DB	 105			; 00000069H
  003d1	73		 DB	 115			; 00000073H
  003d2	70		 DB	 112			; 00000070H
  003d3	61		 DB	 97			; 00000061H
  003d4	74		 DB	 116			; 00000074H
  003d5	63		 DB	 99			; 00000063H
  003d6	68		 DB	 104			; 00000068H
  003d7	00		 DB	 0
$LN26@AtlIPersis:
  003d8	64		 DB	 100			; 00000064H
  003d9	77		 DB	 119			; 00000077H
  003da	00		 DB	 0
?AtlIPersistStreamInit_Save@ATL@@YGJPAUIStream@@HPBUATL_PROPMAP_ENTRY@1@PAXPAUIUnknown@@@Z ENDP ; ATL::AtlIPersistStreamInit_Save
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\Common\ATL\atlcom.h
;	COMDAT ?AtlIPersistStreamInit_Load@ATL@@YGJPAUIStream@@PBUATL_PROPMAP_ENTRY@1@PAXPAUIUnknown@@@Z
_TEXT	SEGMENT
tv209 = -128						; size = 4
$T1 = -124						; size = 4
$T2 = -120						; size = 8
$T3 = -112						; size = 8
$T4 = -104						; size = 4
$T5 = -100						; size = 4
$T6 = -96						; size = 4
___atl_condVal$7 = -92					; size = 4
_var$8 = -84						; size = 16
_bstrRead$9 = -60					; size = 4
_pData$10 = -52						; size = 4
_i$11 = -48						; size = 4
_piidOld$ = -44						; size = 4
_pDispatch$ = -36					; size = 4
_hr$ = -28						; size = 4
_dwVer$ = -20						; size = 4
_cbRead$ = -8						; size = 4
_pStm$ = 8						; size = 4
_pMap$ = 12						; size = 4
_pThis$ = 16						; size = 4
_pUnk$ = 20						; size = 4
?AtlIPersistStreamInit_Load@ATL@@YGJPAUIStream@@PBUATL_PROPMAP_ENTRY@1@PAXPAUIUnknown@@@Z PROC ; ATL::AtlIPersistStreamInit_Load, COMDAT

; 6708 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d 7d 80	 lea	 edi, DWORD PTR [ebp-128]
  0000e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00013	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00018	f3 ab		 rep stosd

; 6709 : 	ATLASSERT(pMap != NULL);

  0001a	83 7d 0c 00	 cmp	 DWORD PTR _pMap$[ebp], 0
  0001e	75 26		 jne	 SHORT $LN26@AtlIPersis
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@FKGJCHLP@?$AAp?$AAM?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0002a	6a 00		 push	 0
  0002c	68 35 1a 00 00	 push	 6709			; 00001a35H
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00036	6a 02		 push	 2
  00038	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003d	83 c4 18	 add	 esp, 24			; 00000018H
  00040	83 f8 01	 cmp	 eax, 1
  00043	75 01		 jne	 SHORT $LN26@AtlIPersis
  00045	cc		 int	 3
$LN26@AtlIPersis:

; 6710 : 	if (pStm == NULL || pMap == NULL || pThis == NULL || pUnk == NULL)

  00046	83 7d 08 00	 cmp	 DWORD PTR _pStm$[ebp], 0
  0004a	74 12		 je	 SHORT $LN9@AtlIPersis
  0004c	83 7d 0c 00	 cmp	 DWORD PTR _pMap$[ebp], 0
  00050	74 0c		 je	 SHORT $LN9@AtlIPersis
  00052	83 7d 10 00	 cmp	 DWORD PTR _pThis$[ebp], 0
  00056	74 06		 je	 SHORT $LN9@AtlIPersis
  00058	83 7d 14 00	 cmp	 DWORD PTR _pUnk$[ebp], 0
  0005c	75 0a		 jne	 SHORT $LN8@AtlIPersis
$LN9@AtlIPersis:

; 6711 : 	{
; 6712 : 		return E_INVALIDARG;

  0005e	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00063	e9 68 03 00 00	 jmp	 $LN1@AtlIPersis
$LN8@AtlIPersis:

; 6713 : 	}
; 6714 : 
; 6715 : 	ULONG cbRead = 0;

  00068	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cbRead$[ebp], 0

; 6716 : 	DWORD dwVer;
; 6717 : 	HRESULT hr = pStm->Read(&dwVer, sizeof(DWORD), &cbRead);

  0006f	8b f4		 mov	 esi, esp
  00071	8d 4d f8	 lea	 ecx, DWORD PTR _cbRead$[ebp]
  00074	51		 push	 ecx
  00075	6a 04		 push	 4
  00077	8d 55 ec	 lea	 edx, DWORD PTR _dwVer$[ebp]
  0007a	52		 push	 edx
  0007b	8b 45 08	 mov	 eax, DWORD PTR _pStm$[ebp]
  0007e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00080	8b 55 08	 mov	 edx, DWORD PTR _pStm$[ebp]
  00083	52		 push	 edx
  00084	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00087	ff d0		 call	 eax
  00089	3b f4		 cmp	 esi, esp
  0008b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00090	89 45 e4	 mov	 DWORD PTR _hr$[ebp], eax

; 6718 : 
; 6719 : 	if (FAILED(hr))

  00093	83 7d e4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00097	7d 0a		 jge	 SHORT $LN10@AtlIPersis

; 6720 : 	{
; 6721 : 		return hr;

  00099	8b 45 e4	 mov	 eax, DWORD PTR _hr$[ebp]
  0009c	e9 2f 03 00 00	 jmp	 $LN1@AtlIPersis

; 6722 : 	}

  000a1	eb 10		 jmp	 SHORT $LN11@AtlIPersis
$LN10@AtlIPersis:

; 6723 : 	else if (sizeof(DWORD) != cbRead)

  000a3	83 7d f8 04	 cmp	 DWORD PTR _cbRead$[ebp], 4
  000a7	74 0a		 je	 SHORT $LN11@AtlIPersis

; 6724 : 	{
; 6725 : 		return E_FAIL;

  000a9	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  000ae	e9 1d 03 00 00	 jmp	 $LN1@AtlIPersis
$LN11@AtlIPersis:

; 6726 : 	}
; 6727 : 
; 6728 : 	if (dwVer > _ATL_VER)

  000b3	81 7d ec 00 0e
	00 00		 cmp	 DWORD PTR _dwVer$[ebp], 3584 ; 00000e00H
  000ba	76 0a		 jbe	 SHORT $LN13@AtlIPersis

; 6729 : 	{
; 6730 : 		return E_FAIL;

  000bc	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  000c1	e9 0a 03 00 00	 jmp	 $LN1@AtlIPersis
$LN13@AtlIPersis:

; 6731 : 	}
; 6732 : 
; 6733 : 	CComPtr<IDispatch> pDispatch;

  000c6	8d 4d dc	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  000c9	e8 00 00 00 00	 call	 ??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ ; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>

; 6734 : 	const IID* piidOld = NULL;

  000ce	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _piidOld$[ebp], 0

; 6735 : 
; 6736 : ATLPREFAST_SUPPRESS(6385) // Invalid data accessing
; 6737 : 	for (int i = 0; pMap[i].pclsidPropPage != NULL; i++)

  000d5	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _i$11[ebp], 0
  000dc	eb 09		 jmp	 SHORT $LN4@AtlIPersis
$LN2@AtlIPersis:
  000de	8b 4d d0	 mov	 ecx, DWORD PTR _i$11[ebp]
  000e1	83 c1 01	 add	 ecx, 1
  000e4	89 4d d0	 mov	 DWORD PTR _i$11[ebp], ecx
$LN4@AtlIPersis:
  000e7	6b 55 d0 24	 imul	 edx, DWORD PTR _i$11[ebp], 36
  000eb	8b 45 0c	 mov	 eax, DWORD PTR _pMap$[ebp]
  000ee	83 7c 10 04 00	 cmp	 DWORD PTR [eax+edx+4], 0
  000f3	0f 84 c6 02 00
	00		 je	 $LN3@AtlIPersis

; 6738 : ATLPREFAST_UNSUPPRESS()
; 6739 : 	{
; 6740 : 		if (pMap[i].szDesc == NULL)

  000f9	6b 4d d0 24	 imul	 ecx, DWORD PTR _i$11[ebp], 36
  000fd	8b 55 0c	 mov	 edx, DWORD PTR _pMap$[ebp]
  00100	83 3c 0a 00	 cmp	 DWORD PTR [edx+ecx], 0
  00104	75 02		 jne	 SHORT $LN14@AtlIPersis

; 6741 : 			continue;

  00106	eb d6		 jmp	 SHORT $LN2@AtlIPersis
$LN14@AtlIPersis:

; 6742 : 
; 6743 : 		// check if raw data entry
; 6744 : 		if (pMap[i].dwSizeData != 0)

  00108	6b 45 d0 24	 imul	 eax, DWORD PTR _i$11[ebp], 36
  0010c	8b 4d 0c	 mov	 ecx, DWORD PTR _pMap$[ebp]
  0010f	83 7c 01 1c 00	 cmp	 DWORD PTR [ecx+eax+28], 0
  00114	0f 84 cc 00 00
	00		 je	 $LN15@AtlIPersis

; 6745 : 		{
; 6746 : 			void* pData = (void*) (pMap[i].dwOffsetData + (DWORD_PTR)pThis);

  0011a	6b 55 d0 24	 imul	 edx, DWORD PTR _i$11[ebp], 36
  0011e	8b 45 0c	 mov	 eax, DWORD PTR _pMap$[ebp]
  00121	8b 4c 10 18	 mov	 ecx, DWORD PTR [eax+edx+24]
  00125	03 4d 10	 add	 ecx, DWORD PTR _pThis$[ebp]
  00128	89 4d cc	 mov	 DWORD PTR _pData$10[ebp], ecx

; 6747 : 			// call CComBSTR::ReadFromStream for BSTRs
; 6748 : 			if (pMap[i].vt == VT_BSTR)

  0012b	6b 55 d0 24	 imul	 edx, DWORD PTR _i$11[ebp], 36
  0012f	8b 45 0c	 mov	 eax, DWORD PTR _pMap$[ebp]
  00132	0f b7 4c 10 20	 movzx	 ecx, WORD PTR [eax+edx+32]
  00137	83 f9 08	 cmp	 ecx, 8
  0013a	75 2e		 jne	 SHORT $LN16@AtlIPersis

; 6749 : 			{
; 6750 : 				CComBSTR bstrRead;

  0013c	8d 4d c4	 lea	 ecx, DWORD PTR _bstrRead$9[ebp]
  0013f	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::CComBSTR

; 6751 : 				hr = bstrRead.ReadFromStream(pStm);

  00144	8b 55 08	 mov	 edx, DWORD PTR _pStm$[ebp]
  00147	52		 push	 edx
  00148	8d 4d c4	 lea	 ecx, DWORD PTR _bstrRead$9[ebp]
  0014b	e8 00 00 00 00	 call	 ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z ; ATL::CComBSTR::ReadFromStream
  00150	89 45 e4	 mov	 DWORD PTR _hr$[ebp], eax

; 6752 : 				(*(BSTR*)pData) = bstrRead.Detach();

  00153	8d 4d c4	 lea	 ecx, DWORD PTR _bstrRead$9[ebp]
  00156	e8 00 00 00 00	 call	 ?Detach@CComBSTR@ATL@@QAEPA_WXZ ; ATL::CComBSTR::Detach
  0015b	8b 4d cc	 mov	 ecx, DWORD PTR _pData$10[ebp]
  0015e	89 01		 mov	 DWORD PTR [ecx], eax

; 6753 : 			}

  00160	8d 4d c4	 lea	 ecx, DWORD PTR _bstrRead$9[ebp]
  00163	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  00168	eb 5b		 jmp	 SHORT $LN17@AtlIPersis
$LN16@AtlIPersis:

; 6754 : 			else
; 6755 : 			{
; 6756 : 				hr = pStm->Read(pData, pMap[i].dwSizeData, &cbRead);

  0016a	8b f4		 mov	 esi, esp
  0016c	8d 55 f8	 lea	 edx, DWORD PTR _cbRead$[ebp]
  0016f	52		 push	 edx
  00170	6b 45 d0 24	 imul	 eax, DWORD PTR _i$11[ebp], 36
  00174	8b 4d 0c	 mov	 ecx, DWORD PTR _pMap$[ebp]
  00177	8b 54 01 1c	 mov	 edx, DWORD PTR [ecx+eax+28]
  0017b	52		 push	 edx
  0017c	8b 45 cc	 mov	 eax, DWORD PTR _pData$10[ebp]
  0017f	50		 push	 eax
  00180	8b 4d 08	 mov	 ecx, DWORD PTR _pStm$[ebp]
  00183	8b 11		 mov	 edx, DWORD PTR [ecx]
  00185	8b 45 08	 mov	 eax, DWORD PTR _pStm$[ebp]
  00188	50		 push	 eax
  00189	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  0018c	ff d1		 call	 ecx
  0018e	3b f4		 cmp	 esi, esp
  00190	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00195	89 45 e4	 mov	 DWORD PTR _hr$[ebp], eax

; 6757 : 
; 6758 : 				if (SUCCEEDED(hr) && cbRead != pMap[i].dwSizeData)

  00198	83 7d e4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0019c	7c 27		 jl	 SHORT $LN17@AtlIPersis
  0019e	6b 55 d0 24	 imul	 edx, DWORD PTR _i$11[ebp], 36
  001a2	8b 45 0c	 mov	 eax, DWORD PTR _pMap$[ebp]
  001a5	8b 4d f8	 mov	 ecx, DWORD PTR _cbRead$[ebp]
  001a8	3b 4c 10 1c	 cmp	 ecx, DWORD PTR [eax+edx+28]
  001ac	74 17		 je	 SHORT $LN17@AtlIPersis

; 6759 : 				{
; 6760 : 					return E_FAIL;

  001ae	c7 45 a0 05 40
	00 80		 mov	 DWORD PTR $T6[ebp], -2147467259 ; 80004005H
  001b5	8d 4d dc	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  001b8	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  001bd	8b 45 a0	 mov	 eax, DWORD PTR $T6[ebp]
  001c0	e9 0b 02 00 00	 jmp	 $LN1@AtlIPersis
$LN17@AtlIPersis:

; 6761 : 				}
; 6762 : 			}
; 6763 : 
; 6764 : 			if (FAILED(hr))

  001c5	83 7d e4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001c9	7d 16		 jge	 SHORT $LN19@AtlIPersis

; 6765 : 			{
; 6766 : 				return hr;

  001cb	8b 55 e4	 mov	 edx, DWORD PTR _hr$[ebp]
  001ce	89 55 9c	 mov	 DWORD PTR $T5[ebp], edx
  001d1	8d 4d dc	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  001d4	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  001d9	8b 45 9c	 mov	 eax, DWORD PTR $T5[ebp]
  001dc	e9 ef 01 00 00	 jmp	 $LN1@AtlIPersis
$LN19@AtlIPersis:

; 6767 : 			}
; 6768 : 			continue;

  001e1	e9 f8 fe ff ff	 jmp	 $LN2@AtlIPersis
$LN15@AtlIPersis:

; 6769 : 		}
; 6770 : 
; 6771 : 		CComVariant var;

  001e6	8d 4d ac	 lea	 ecx, DWORD PTR _var$8[ebp]
  001e9	e8 00 00 00 00	 call	 ??0CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::CComVariant

; 6772 : 
; 6773 : 		hr = var.ReadFromStream(pStm, pMap[i].vt, pMap[i].rgclsidAllowed, pMap[i].cclsidAllowed);

  001ee	6b 45 d0 24	 imul	 eax, DWORD PTR _i$11[ebp], 36
  001f2	8b 4d 0c	 mov	 ecx, DWORD PTR _pMap$[ebp]
  001f5	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  001f9	52		 push	 edx
  001fa	6b 45 d0 24	 imul	 eax, DWORD PTR _i$11[ebp], 36
  001fe	8b 4d 0c	 mov	 ecx, DWORD PTR _pMap$[ebp]
  00201	8b 54 01 0c	 mov	 edx, DWORD PTR [ecx+eax+12]
  00205	52		 push	 edx
  00206	6b 45 d0 24	 imul	 eax, DWORD PTR _i$11[ebp], 36
  0020a	8b 4d 0c	 mov	 ecx, DWORD PTR _pMap$[ebp]
  0020d	0f b7 54 01 20	 movzx	 edx, WORD PTR [ecx+eax+32]
  00212	52		 push	 edx
  00213	8b 45 08	 mov	 eax, DWORD PTR _pStm$[ebp]
  00216	50		 push	 eax
  00217	8d 4d ac	 lea	 ecx, DWORD PTR _var$8[ebp]
  0021a	e8 00 00 00 00	 call	 ?ReadFromStream@CComVariant@ATL@@QAEJPAUIStream@@GTClassesAllowedInStream@2@K@Z ; ATL::CComVariant::ReadFromStream
  0021f	89 45 e4	 mov	 DWORD PTR _hr$[ebp], eax

; 6774 : 		if (FAILED(hr))

  00222	83 7d e4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00226	7d 0d		 jge	 SHORT $LN20@AtlIPersis

; 6775 : 			break;

  00228	8d 4d ac	 lea	 ecx, DWORD PTR _var$8[ebp]
  0022b	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  00230	e9 8a 01 00 00	 jmp	 $LN3@AtlIPersis
$LN20@AtlIPersis:

; 6776 : 
; 6777 : 		if (pMap[i].piidDispatch != piidOld)

  00235	6b 4d d0 24	 imul	 ecx, DWORD PTR _i$11[ebp], 36
  00239	8b 55 0c	 mov	 edx, DWORD PTR _pMap$[ebp]
  0023c	8b 44 0a 08	 mov	 eax, DWORD PTR [edx+ecx+8]
  00240	3b 45 d4	 cmp	 eax, DWORD PTR _piidOld$[ebp]
  00243	0f 84 03 01 00
	00		 je	 $LN21@AtlIPersis

; 6778 : 		{
; 6779 : 			pDispatch.Release();

  00249	8d 4d dc	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  0024c	e8 00 00 00 00	 call	 ?Release@?$CComPtrBase@UIDispatch@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IDispatch>::Release
$LN7@AtlIPersis:

; 6780 : 			ATLENSURE_RETURN(pMap[i].piidDispatch);

  00251	6b 4d d0 24	 imul	 ecx, DWORD PTR _i$11[ebp], 36
  00255	8b 55 0c	 mov	 edx, DWORD PTR _pMap$[ebp]
  00258	83 7c 0a 08 00	 cmp	 DWORD PTR [edx+ecx+8], 0
  0025d	74 09		 je	 SHORT $LN27@AtlIPersis
  0025f	c7 45 80 01 00
	00 00		 mov	 DWORD PTR tv209[ebp], 1
  00266	eb 07		 jmp	 SHORT $LN28@AtlIPersis
$LN27@AtlIPersis:
  00268	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv209[ebp], 0
$LN28@AtlIPersis:
  0026f	8b 45 80	 mov	 eax, DWORD PTR tv209[ebp]
  00272	89 45 a4	 mov	 DWORD PTR ___atl_condVal$7[ebp], eax
  00275	83 7d a4 00	 cmp	 DWORD PTR ___atl_condVal$7[ebp], 0
  00279	75 26		 jne	 SHORT $LN29@AtlIPersis
  0027b	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  00280	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00285	6a 00		 push	 0
  00287	68 7c 1a 00 00	 push	 6780			; 00001a7cH
  0028c	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@IGOCHCBG@?$AAC?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AA?2?$AAO?$AAP?$AAO?$AAS@
  00291	6a 02		 push	 2
  00293	e8 00 00 00 00	 call	 __CrtDbgReportW
  00298	83 c4 18	 add	 esp, 24			; 00000018H
  0029b	83 f8 01	 cmp	 eax, 1
  0029e	75 01		 jne	 SHORT $LN29@AtlIPersis
  002a0	cc		 int	 3
$LN29@AtlIPersis:
  002a1	83 7d a4 00	 cmp	 DWORD PTR ___atl_condVal$7[ebp], 0
  002a5	75 1f		 jne	 SHORT $LN5@AtlIPersis
  002a7	c7 45 98 05 40
	00 80		 mov	 DWORD PTR $T4[ebp], -2147467259 ; 80004005H
  002ae	8d 4d ac	 lea	 ecx, DWORD PTR _var$8[ebp]
  002b1	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  002b6	8d 4d dc	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  002b9	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  002be	8b 45 98	 mov	 eax, DWORD PTR $T4[ebp]
  002c1	e9 0a 01 00 00	 jmp	 $LN1@AtlIPersis
$LN5@AtlIPersis:
  002c6	33 d2		 xor	 edx, edx
  002c8	75 87		 jne	 SHORT $LN7@AtlIPersis

; 6781 : 			if (FAILED(pUnk->QueryInterface(*pMap[i].piidDispatch, (void**)&pDispatch)))

  002ca	8d 4d dc	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  002cd	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ ; ATL::CComPtrBase<IDispatch>::operator&
  002d2	8b f4		 mov	 esi, esp
  002d4	50		 push	 eax
  002d5	6b 45 d0 24	 imul	 eax, DWORD PTR _i$11[ebp], 36
  002d9	8b 4d 0c	 mov	 ecx, DWORD PTR _pMap$[ebp]
  002dc	8b 54 01 08	 mov	 edx, DWORD PTR [ecx+eax+8]
  002e0	52		 push	 edx
  002e1	8b 45 14	 mov	 eax, DWORD PTR _pUnk$[ebp]
  002e4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002e6	8b 55 14	 mov	 edx, DWORD PTR _pUnk$[ebp]
  002e9	52		 push	 edx
  002ea	8b 01		 mov	 eax, DWORD PTR [ecx]
  002ec	ff d0		 call	 eax
  002ee	3b f4		 cmp	 esi, esp
  002f0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002f5	85 c0		 test	 eax, eax
  002f7	7d 45		 jge	 SHORT $LN23@AtlIPersis

; 6782 : 			{
; 6783 : 				ATLTRACE(atlTraceCOM, 0, _T("Failed to get a dispatch pointer for property #%i\n"), i);

  002f9	8b 4d d0	 mov	 ecx, DWORD PTR _i$11[ebp]
  002fc	51		 push	 ecx
  002fd	68 00 00 00 00	 push	 OFFSET ??_C@_1GG@DILCHCCF@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAa@
  00302	6a 00		 push	 0
  00304	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00309	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  0030e	50		 push	 eax
  0030f	68 7f 1a 00 00	 push	 6783			; 00001a7fH
  00314	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00319	8d 4d 90	 lea	 ecx, DWORD PTR $T3[ebp]
  0031c	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00321	50		 push	 eax
  00322	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00327	83 c4 14	 add	 esp, 20			; 00000014H

; 6784 : 				hr = E_FAIL;

  0032a	c7 45 e4 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H

; 6785 : 				break;

  00331	8d 4d ac	 lea	 ecx, DWORD PTR _var$8[ebp]
  00334	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  00339	e9 81 00 00 00	 jmp	 $LN3@AtlIPersis
$LN23@AtlIPersis:

; 6786 : 			}
; 6787 : 			piidOld = pMap[i].piidDispatch;

  0033e	6b 55 d0 24	 imul	 edx, DWORD PTR _i$11[ebp], 36
  00342	8b 45 0c	 mov	 eax, DWORD PTR _pMap$[ebp]
  00345	8b 4c 10 08	 mov	 ecx, DWORD PTR [eax+edx+8]
  00349	89 4d d4	 mov	 DWORD PTR _piidOld$[ebp], ecx
$LN21@AtlIPersis:

; 6788 : 		}
; 6789 : 
; 6790 : 		if (FAILED(pDispatch.PutProperty(pMap[i].dispid, &var)))

  0034c	8d 55 ac	 lea	 edx, DWORD PTR _var$8[ebp]
  0034f	52		 push	 edx
  00350	6b 45 d0 24	 imul	 eax, DWORD PTR _i$11[ebp], 36
  00354	8b 4d 0c	 mov	 ecx, DWORD PTR _pMap$[ebp]
  00357	8b 54 01 14	 mov	 edx, DWORD PTR [ecx+eax+20]
  0035b	52		 push	 edx
  0035c	8d 4d dc	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  0035f	e8 00 00 00 00	 call	 ?PutProperty@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@@Z ; ATL::CComPtr<IDispatch>::PutProperty
  00364	85 c0		 test	 eax, eax
  00366	7d 4a		 jge	 SHORT $LN24@AtlIPersis

; 6791 : 		{
; 6792 : 			ATLTRACE(atlTraceCOM, 0, _T("Invoked failed on DISPID %x\n"), pMap[i].dispid);

  00368	6b 45 d0 24	 imul	 eax, DWORD PTR _i$11[ebp], 36
  0036c	8b 4d 0c	 mov	 ecx, DWORD PTR _pMap$[ebp]
  0036f	8b 54 01 14	 mov	 edx, DWORD PTR [ecx+eax+20]
  00373	52		 push	 edx
  00374	68 00 00 00 00	 push	 OFFSET ??_C@_1DK@CIMELFNK@?$AAI?$AAn?$AAv?$AAo?$AAk?$AAe?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5@
  00379	6a 00		 push	 0
  0037b	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00380	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00385	50		 push	 eax
  00386	68 88 1a 00 00	 push	 6792			; 00001a88H
  0038b	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CCPHDHJN@C?3?2Develop?2OPOS?9CCO?2Common?2ATL?2@
  00390	8d 4d 88	 lea	 ecx, DWORD PTR $T2[ebp]
  00393	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00398	50		 push	 eax
  00399	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0039e	83 c4 14	 add	 esp, 20			; 00000014H

; 6793 : 			hr = E_FAIL;

  003a1	c7 45 e4 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H

; 6794 : 			break;

  003a8	8d 4d ac	 lea	 ecx, DWORD PTR _var$8[ebp]
  003ab	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  003b0	eb 0d		 jmp	 SHORT $LN3@AtlIPersis
$LN24@AtlIPersis:

; 6795 : 		}
; 6796 : 	}

  003b2	8d 4d ac	 lea	 ecx, DWORD PTR _var$8[ebp]
  003b5	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  003ba	e9 1f fd ff ff	 jmp	 $LN2@AtlIPersis
$LN3@AtlIPersis:

; 6797 : 	return hr;

  003bf	8b 45 e4	 mov	 eax, DWORD PTR _hr$[ebp]
  003c2	89 45 84	 mov	 DWORD PTR $T1[ebp], eax
  003c5	8d 4d dc	 lea	 ecx, DWORD PTR _pDispatch$[ebp]
  003c8	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  003cd	8b 45 84	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@AtlIPersis:

; 6798 : }

  003d0	52		 push	 edx
  003d1	8b cd		 mov	 ecx, ebp
  003d3	50		 push	 eax
  003d4	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN36@AtlIPersis
  003da	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  003df	58		 pop	 eax
  003e0	5a		 pop	 edx
  003e1	5f		 pop	 edi
  003e2	5e		 pop	 esi
  003e3	81 c4 80 00 00
	00		 add	 esp, 128		; 00000080H
  003e9	3b ec		 cmp	 ebp, esp
  003eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003f0	8b e5		 mov	 esp, ebp
  003f2	5d		 pop	 ebp
  003f3	c2 10 00	 ret	 16			; 00000010H
  003f6	66 90		 npad	 2
$LN36@AtlIPersis:
  003f8	05 00 00 00	 DD	 5
  003fc	00 00 00 00	 DD	 $LN35@AtlIPersis
$LN35@AtlIPersis:
  00400	f8 ff ff ff	 DD	 -8			; fffffff8H
  00404	04 00 00 00	 DD	 4
  00408	00 00 00 00	 DD	 $LN30@AtlIPersis
  0040c	ec ff ff ff	 DD	 -20			; ffffffecH
  00410	04 00 00 00	 DD	 4
  00414	00 00 00 00	 DD	 $LN31@AtlIPersis
  00418	dc ff ff ff	 DD	 -36			; ffffffdcH
  0041c	04 00 00 00	 DD	 4
  00420	00 00 00 00	 DD	 $LN32@AtlIPersis
  00424	c4 ff ff ff	 DD	 -60			; ffffffc4H
  00428	04 00 00 00	 DD	 4
  0042c	00 00 00 00	 DD	 $LN33@AtlIPersis
  00430	ac ff ff ff	 DD	 -84			; ffffffacH
  00434	10 00 00 00	 DD	 16			; 00000010H
  00438	00 00 00 00	 DD	 $LN34@AtlIPersis
$LN34@AtlIPersis:
  0043c	76		 DB	 118			; 00000076H
  0043d	61		 DB	 97			; 00000061H
  0043e	72		 DB	 114			; 00000072H
  0043f	00		 DB	 0
$LN33@AtlIPersis:
  00440	62		 DB	 98			; 00000062H
  00441	73		 DB	 115			; 00000073H
  00442	74		 DB	 116			; 00000074H
  00443	72		 DB	 114			; 00000072H
  00444	52		 DB	 82			; 00000052H
  00445	65		 DB	 101			; 00000065H
  00446	61		 DB	 97			; 00000061H
  00447	64		 DB	 100			; 00000064H
  00448	00		 DB	 0
$LN32@AtlIPersis:
  00449	70		 DB	 112			; 00000070H
  0044a	44		 DB	 68			; 00000044H
  0044b	69		 DB	 105			; 00000069H
  0044c	73		 DB	 115			; 00000073H
  0044d	70		 DB	 112			; 00000070H
  0044e	61		 DB	 97			; 00000061H
  0044f	74		 DB	 116			; 00000074H
  00450	63		 DB	 99			; 00000063H
  00451	68		 DB	 104			; 00000068H
  00452	00		 DB	 0
$LN31@AtlIPersis:
  00453	64		 DB	 100			; 00000064H
  00454	77		 DB	 119			; 00000077H
  00455	56		 DB	 86			; 00000056H
  00456	65		 DB	 101			; 00000065H
  00457	72		 DB	 114			; 00000072H
  00458	00		 DB	 0
$LN30@AtlIPersis:
  00459	63		 DB	 99			; 00000063H
  0045a	62		 DB	 98			; 00000062H
  0045b	52		 DB	 82			; 00000052H
  0045c	65		 DB	 101			; 00000065H
  0045d	61		 DB	 97			; 00000061H
  0045e	64		 DB	 100			; 00000064H
  0045f	00		 DB	 0
?AtlIPersistStreamInit_Load@ATL@@YGJPAUIStream@@PBUATL_PROPMAP_ENTRY@1@PAXPAUIUnknown@@@Z ENDP ; ATL::AtlIPersistStreamInit_Load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<ITypeInfo>::~CComPtr<ITypeInfo>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UITypeInfo@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ITypeInfo>::~CComPtrBase<ITypeInfo>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<ITypeInfo>::~CComPtr<ITypeInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UITypeInfo@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtr@UITypeInfo@@@ATL@@QAE@ABV01@@Z PROC	; ATL::CComPtr<ITypeInfo>::CComPtr<ITypeInfo>, COMDAT
; _this$ = ecx

; 325  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 324  :         CComPtrBase<T>(lp.p)

  0000e	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]
  00011	8b 08		 mov	 ecx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@PAUITypeInfo@@@Z ; ATL::CComPtrBase<ITypeInfo>::CComPtrBase<ITypeInfo>

; 326  :     }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??0?$CComPtr@UITypeInfo@@@ATL@@QAE@ABV01@@Z ENDP	; ATL::CComPtr<ITypeInfo>::CComPtr<ITypeInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<ITypeInfo>::CComPtr<ITypeInfo>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@XZ ; ATL::CComPtrBase<ITypeInfo>::CComPtrBase<ITypeInfo>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<ITypeInfo>::CComPtr<ITypeInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?Detach@?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@XZ
_TEXT	SEGMENT
_pt$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@XZ PROC ; ATL::CComPtrBase<ITypeInfo>::Detach, COMDAT
; _this$ = ecx

; 254  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 255  :         T* pt = p;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 4d f8	 mov	 DWORD PTR _pt$[ebp], ecx

; 256  :         p = NULL;

  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 257  :         return pt;

  00028	8b 45 f8	 mov	 eax, DWORD PTR _pt$[ebp]

; 258  :     }

  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?Detach@?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@XZ ENDP ; ATL::CComPtrBase<ITypeInfo>::Detach
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?IsEqualObject@?$CComPtrBase@UITypeInfo@@@ATL@@QAE_NPAUIUnknown@@@Z
_TEXT	SEGMENT
$T1 = -29						; size = 1
_punk2$ = -24						; size = 4
_punk1$ = -12						; size = 4
_this$ = -4						; size = 4
_pOther$ = 8						; size = 4
?IsEqualObject@?$CComPtrBase@UITypeInfo@@@ATL@@QAE_NPAUIUnknown@@@Z PROC ; ATL::CComPtrBase<ITypeInfo>::IsEqualObject, COMDAT
; _this$ = ecx

; 597  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00012	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00015	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00018	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001b	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001e	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00021	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00024	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 598  :     if (p == NULL && pOther == NULL)

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0002d	75 0d		 jne	 SHORT $LN2@IsEqualObj
  0002f	83 7d 08 00	 cmp	 DWORD PTR _pOther$[ebp], 0
  00033	75 07		 jne	 SHORT $LN2@IsEqualObj

; 599  :         return true;	// They are both NULL objects

  00035	b0 01		 mov	 al, 1
  00037	e9 98 00 00 00	 jmp	 $LN1@IsEqualObj
$LN2@IsEqualObj:

; 600  : 
; 601  :     if (p == NULL || pOther == NULL)

  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00042	74 06		 je	 SHORT $LN4@IsEqualObj
  00044	83 7d 08 00	 cmp	 DWORD PTR _pOther$[ebp], 0
  00048	75 07		 jne	 SHORT $LN3@IsEqualObj
$LN4@IsEqualObj:

; 602  :         return false;	// One is NULL the other is not

  0004a	32 c0		 xor	 al, al
  0004c	e9 83 00 00 00	 jmp	 $LN1@IsEqualObj
$LN3@IsEqualObj:

; 603  : 
; 604  :     CComPtr<IUnknown> punk1;

  00051	8d 4d f4	 lea	 ecx, DWORD PTR _punk1$[ebp]
  00054	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 605  :     CComPtr<IUnknown> punk2;

  00059	8d 4d e8	 lea	 ecx, DWORD PTR _punk2$[ebp]
  0005c	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 606  :     p->QueryInterface(__uuidof(IUnknown), (void**)&punk1);

  00061	8d 4d f4	 lea	 ecx, DWORD PTR _punk1$[ebp]
  00064	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
  00069	8b f4		 mov	 esi, esp
  0006b	50		 push	 eax
  0006c	68 00 00 00 00	 push	 OFFSET __GUID_00000000_0000_0000_c000_000000000046
  00071	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00074	8b 02		 mov	 eax, DWORD PTR [edx]
  00076	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007b	8b 00		 mov	 eax, DWORD PTR [eax]
  0007d	52		 push	 edx
  0007e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00080	ff d1		 call	 ecx
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 607  :     pOther->QueryInterface(__uuidof(IUnknown), (void**)&punk2);

  00089	8d 4d e8	 lea	 ecx, DWORD PTR _punk2$[ebp]
  0008c	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
  00091	8b f4		 mov	 esi, esp
  00093	50		 push	 eax
  00094	68 00 00 00 00	 push	 OFFSET __GUID_00000000_0000_0000_c000_000000000046
  00099	8b 55 08	 mov	 edx, DWORD PTR _pOther$[ebp]
  0009c	8b 02		 mov	 eax, DWORD PTR [edx]
  0009e	8b 4d 08	 mov	 ecx, DWORD PTR _pOther$[ebp]
  000a1	51		 push	 ecx
  000a2	8b 10		 mov	 edx, DWORD PTR [eax]
  000a4	ff d2		 call	 edx
  000a6	3b f4		 cmp	 esi, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 608  :     return punk1 == punk2;

  000ad	8d 4d e8	 lea	 ecx, DWORD PTR _punk2$[ebp]
  000b0	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
  000b5	50		 push	 eax
  000b6	8d 4d f4	 lea	 ecx, DWORD PTR _punk1$[ebp]
  000b9	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z ; ATL::CComPtrBase<IUnknown>::operator==
  000be	88 45 e3	 mov	 BYTE PTR $T1[ebp], al
  000c1	8d 4d e8	 lea	 ecx, DWORD PTR _punk2$[ebp]
  000c4	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
  000c9	8d 4d f4	 lea	 ecx, DWORD PTR _punk1$[ebp]
  000cc	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
  000d1	8a 45 e3	 mov	 al, BYTE PTR $T1[ebp]
$LN1@IsEqualObj:

; 609  : }

  000d4	52		 push	 edx
  000d5	8b cd		 mov	 ecx, ebp
  000d7	50		 push	 eax
  000d8	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@IsEqualObj
  000de	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e3	58		 pop	 eax
  000e4	5a		 pop	 edx
  000e5	5e		 pop	 esi
  000e6	83 c4 20	 add	 esp, 32			; 00000020H
  000e9	3b ec		 cmp	 ebp, esp
  000eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c2 04 00	 ret	 4
  000f6	66 90		 npad	 2
$LN9@IsEqualObj:
  000f8	02 00 00 00	 DD	 2
  000fc	00 00 00 00	 DD	 $LN8@IsEqualObj
$LN8@IsEqualObj:
  00100	f4 ff ff ff	 DD	 -12			; fffffff4H
  00104	04 00 00 00	 DD	 4
  00108	00 00 00 00	 DD	 $LN6@IsEqualObj
  0010c	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00110	04 00 00 00	 DD	 4
  00114	00 00 00 00	 DD	 $LN7@IsEqualObj
$LN7@IsEqualObj:
  00118	70		 DB	 112			; 00000070H
  00119	75		 DB	 117			; 00000075H
  0011a	6e		 DB	 110			; 0000006eH
  0011b	6b		 DB	 107			; 0000006bH
  0011c	32		 DB	 50			; 00000032H
  0011d	00		 DB	 0
$LN6@IsEqualObj:
  0011e	70		 DB	 112			; 00000070H
  0011f	75		 DB	 117			; 00000075H
  00120	6e		 DB	 110			; 0000006eH
  00121	6b		 DB	 107			; 0000006bH
  00122	31		 DB	 49			; 00000031H
  00123	00		 DB	 0
?IsEqualObject@?$CComPtrBase@UITypeInfo@@@ATL@@QAE_NPAUIUnknown@@@Z ENDP ; ATL::CComPtrBase<ITypeInfo>::IsEqualObject
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeInfo@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeInfo@@@1@XZ PROC ; ATL::CComPtrBase<ITypeInfo>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeInfo@@@1@XZ ENDP ; ATL::CComPtrBase<ITypeInfo>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAPAUITypeInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAPAUITypeInfo@@XZ PROC ; ATL::CComPtrBase<ITypeInfo>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAPAUITypeInfo@@XZ ENDP ; ATL::CComPtrBase<ITypeInfo>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAUITypeInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAUITypeInfo@@XZ PROC ; ATL::CComPtrBase<ITypeInfo>::operator ITypeInfo *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAUITypeInfo@@XZ ENDP ; ATL::CComPtrBase<ITypeInfo>::operator ITypeInfo *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UITypeInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UITypeInfo@@@ATL@@QAE@XZ PROC		; ATL::CComPtrBase<ITypeInfo>::~CComPtrBase<ITypeInfo>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UITypeInfo@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<ITypeInfo>::~CComPtrBase<ITypeInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@PAUITypeInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@PAUITypeInfo@@@Z PROC ; ATL::CComPtrBase<ITypeInfo>::CComPtrBase<ITypeInfo>, COMDAT
; _this$ = ecx

; 167  :     CComPtrBase(_Inout_opt_ T* lp) throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 168  :     {
; 169  :         p = lp;

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _lp$[ebp]
  00015	89 08		 mov	 DWORD PTR [eax], ecx

; 170  :         if (p != NULL)

  00017	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0001d	74 1b		 je	 SHORT $LN1@CComPtrBas

; 171  :             p->AddRef();

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 08		 mov	 ecx, DWORD PTR [eax]
  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	8b 02		 mov	 eax, DWORD PTR [edx]
  00029	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0002b	8b f4		 mov	 esi, esp
  0002d	50		 push	 eax
  0002e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00031	ff d2		 call	 edx
  00033	3b f4		 cmp	 esi, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 172  :     }

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	5e		 pop	 esi
  0003e	83 c4 04	 add	 esp, 4
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@PAUITypeInfo@@@Z ENDP ; ATL::CComPtrBase<ITypeInfo>::CComPtrBase<ITypeInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@XZ PROC		; ATL::CComPtrBase<ITypeInfo>::CComPtrBase<ITypeInfo>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<ITypeInfo>::CComPtrBase<ITypeInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlstdthunk.h
;	COMDAT ?GetCodeAddress@CDynamicStdCallThunk2@ATL@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCodeAddress@CDynamicStdCallThunk2@ATL@@QAEPAXXZ PROC ; ATL::CDynamicStdCallThunk2::GetCodeAddress, COMDAT
; _this$ = ecx

; 287  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : #ifdef USE_ATL_THUNK2
; 289  : 		return AtlThunk_DataToCode(pThunk);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 08		 mov	 ecx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 _AtlThunk_DataToCode@4

; 290  : #else
; 291  : 		return pThunk->GetCodeAddress();
; 292  : #endif
; 293  : 	}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?GetCodeAddress@CDynamicStdCallThunk2@ATL@@QAEPAXXZ ENDP ; ATL::CDynamicStdCallThunk2::GetCodeAddress
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlstdthunk.h
;	COMDAT ?Init@CDynamicStdCallThunk2@ATL@@QAEHKPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_proc$ = 8						; size = 4
_pThis$ = 12						; size = 4
?Init@CDynamicStdCallThunk2@ATL@@QAEHKPAX@Z PROC	; ATL::CDynamicStdCallThunk2::Init, COMDAT
; _this$ = ecx

; 263  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 264  : 		if (pThunk == NULL)

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 16		 jne	 SHORT $LN2@Init

; 265  : 		{
; 266  : #ifdef USE_ATL_THUNK2
; 267  : 			pThunk = AtlThunk_AllocateData();

  00016	e8 00 00 00 00	 call	 _AtlThunk_AllocateData@0
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	89 01		 mov	 DWORD PTR [ecx], eax

; 268  : #else
; 269  : 			pThunk = new _stdcallthunk;
; 270  : #endif
; 271  : 			if (pThunk == NULL)

  00020	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00023	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00026	75 04		 jne	 SHORT $LN2@Init

; 272  : 			{
; 273  : 				return FALSE;

  00028	33 c0		 xor	 eax, eax
  0002a	eb 18		 jmp	 SHORT $LN1@Init
$LN2@Init:

; 274  : 			}
; 275  : 		}
; 276  : 
; 277  : #ifdef USE_ATL_THUNK2
; 278  : 		AtlThunk_InitData(pThunk, (void*)proc, (size_t)pThis);

  0002c	8b 45 0c	 mov	 eax, DWORD PTR _pThis$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _proc$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	8b 02		 mov	 eax, DWORD PTR [edx]
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 _AtlThunk_InitData@12

; 279  : 		return TRUE;

  0003f	b8 01 00 00 00	 mov	 eax, 1
$LN1@Init:

; 280  : #else
; 281  : 		return pThunk->Init(proc, pThis);
; 282  : #endif
; 283  : 	}

  00044	83 c4 04	 add	 esp, 4
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?Init@CDynamicStdCallThunk2@ATL@@QAEHKPAX@Z ENDP	; ATL::CDynamicStdCallThunk2::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IConnectionPoint>::~CComPtr<IConnectionPoint>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIConnectionPoint@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IConnectionPoint>::~CComPtrBase<IConnectionPoint>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IConnectionPoint>::~CComPtr<IConnectionPoint>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IConnectionPoint>::CComPtr<IConnectionPoint>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIConnectionPoint@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IConnectionPoint>::CComPtrBase<IConnectionPoint>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IConnectionPoint>::CComPtr<IConnectionPoint>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ PROC ; ATL::CComPtrBase<IConnectionPoint>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ ENDP ; ATL::CComPtrBase<IConnectionPoint>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ PROC ; ATL::CComPtrBase<IConnectionPoint>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ ENDP ; ATL::CComPtrBase<IConnectionPoint>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIConnectionPoint@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IConnectionPoint>::~CComPtrBase<IConnectionPoint>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIConnectionPoint@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IConnectionPoint>::~CComPtrBase<IConnectionPoint>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIConnectionPoint@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIConnectionPoint@@@ATL@@IAE@XZ PROC	; ATL::CComPtrBase<IConnectionPoint>::CComPtrBase<IConnectionPoint>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIConnectionPoint@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IConnectionPoint>::CComPtrBase<IConnectionPoint>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ PROC ; ATL::CComPtr<IConnectionPointContainer>::~CComPtr<IConnectionPointContainer>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::~CComPtrBase<IConnectionPointContainer>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ ENDP ; ATL::CComPtr<IConnectionPointContainer>::~CComPtr<IConnectionPointContainer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ PROC ; ATL::CComPtr<IConnectionPointContainer>::CComPtr<IConnectionPointContainer>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIConnectionPointContainer@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IConnectionPointContainer>::CComPtrBase<IConnectionPointContainer>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ ENDP ; ATL::CComPtr<IConnectionPointContainer>::CComPtr<IConnectionPointContainer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??8?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBE_NPAUIConnectionPointContainer@@@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBE_NPAUIConnectionPointContainer@@@Z PROC ; ATL::CComPtrBase<IConnectionPointContainer>::operator==, COMDAT
; _this$ = ecx

; 222  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 223  :         return p == pT;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	3b 4d 08	 cmp	 ecx, DWORD PTR _pT$[ebp]
  0001f	75 09		 jne	 SHORT $LN3@operator
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@operator:
  00031	8a 45 f8	 mov	 al, BYTE PTR tv66[ebp]

; 224  :     }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??8?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBE_NPAUIConnectionPointContainer@@@Z ENDP ; ATL::CComPtrBase<IConnectionPointContainer>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??9?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBE_NPAUIConnectionPointContainer@@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??9?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBE_NPAUIConnectionPointContainer@@@Z PROC ; ATL::CComPtrBase<IConnectionPointContainer>::operator!=, COMDAT
; _this$ = ecx

; 217  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  :         return !operator==(pT);

  00017	8b 45 08	 mov	 eax, DWORD PTR _pT$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBE_NPAUIConnectionPointContainer@@@Z ; ATL::CComPtrBase<IConnectionPointContainer>::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]

; 219  :     }

  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBE_NPAUIConnectionPointContainer@@@Z ENDP ; ATL::CComPtrBase<IConnectionPointContainer>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ PROC ; ATL::CComPtrBase<IConnectionPointContainer>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ ENDP ; ATL::CComPtrBase<IConnectionPointContainer>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ PROC ; ATL::CComPtrBase<IConnectionPointContainer>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ ENDP ; ATL::CComPtrBase<IConnectionPointContainer>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAE@XZ PROC ; ATL::CComPtrBase<IConnectionPointContainer>::~CComPtrBase<IConnectionPointContainer>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAE@XZ ENDP ; ATL::CComPtrBase<IConnectionPointContainer>::~CComPtrBase<IConnectionPointContainer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIConnectionPointContainer@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIConnectionPointContainer@@@ATL@@IAE@XZ PROC ; ATL::CComPtrBase<IConnectionPointContainer>::CComPtrBase<IConnectionPointContainer>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIConnectionPointContainer@@@ATL@@IAE@XZ ENDP ; ATL::CComPtrBase<IConnectionPointContainer>::CComPtrBase<IConnectionPointContainer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ PROC ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Unlock, COMDAT
; _this$ = ecx

; 394  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@Unlock:

; 395  : 	ATLASSUME( m_bLocked );

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00015	85 c9		 test	 ecx, ecx
  00017	75 26		 jne	 SHORT $LN2@Unlock
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@NPGJNKLA@?$AAm?$AA_?$AAb?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd@
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00023	6a 00		 push	 0
  00025	68 8b 01 00 00	 push	 395			; 0000018bH
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002f	6a 02		 push	 2
  00031	e8 00 00 00 00	 call	 __CrtDbgReportW
  00036	83 c4 18	 add	 esp, 24			; 00000018H
  00039	83 f8 01	 cmp	 eax, 1
  0003c	75 01		 jne	 SHORT $LN2@Unlock
  0003e	cc		 int	 3
$LN2@Unlock:
  0003f	33 c0		 xor	 eax, eax
  00041	75 cb		 jne	 SHORT $LN4@Unlock

; 396  : #pragma warning(suppress: 26110) // Template parameter hides lock object
; 397  : 	m_cs.Unlock();

  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00048	e8 00 00 00 00	 call	 ?Unlock@CComCriticalSection@ATL@@QAEJXZ ; ATL::CComCriticalSection::Unlock

; 398  : 	m_bLocked = false;

  0004d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00050	c6 42 04 00	 mov	 BYTE PTR [edx+4], 0

; 399  : }

  00054	83 c4 04	 add	 esp, 4
  00057	3b ec		 cmp	 ebp, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ PROC ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock, COMDAT
; _this$ = ecx

; 375  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 376  : 	HRESULT hr;
; 377  : 
; 378  : 	ATLASSERT( !m_bLocked );

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0001e	85 c9		 test	 ecx, ecx
  00020	74 26		 je	 SHORT $LN4@Lock
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@OHCCAGNO@?$AA?$CB?$AAm?$AA_?$AAb?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd@
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0002c	6a 00		 push	 0
  0002e	68 7a 01 00 00	 push	 378			; 0000017aH
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00038	6a 02		 push	 2
  0003a	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003f	83 c4 18	 add	 esp, 24			; 00000018H
  00042	83 f8 01	 cmp	 eax, 1
  00045	75 01		 jne	 SHORT $LN4@Lock
  00047	cc		 int	 3
$LN4@Lock:

; 379  : 	ATLASSUME(!m_bLocked);

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0004f	85 c9		 test	 ecx, ecx
  00051	74 26		 je	 SHORT $LN2@Lock
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@OHCCAGNO@?$AA?$CB?$AAm?$AA_?$AAb?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd@
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0005d	6a 00		 push	 0
  0005f	68 7b 01 00 00	 push	 379			; 0000017bH
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00069	6a 02		 push	 2
  0006b	e8 00 00 00 00	 call	 __CrtDbgReportW
  00070	83 c4 18	 add	 esp, 24			; 00000018H
  00073	83 f8 01	 cmp	 eax, 1
  00076	75 01		 jne	 SHORT $LN2@Lock
  00078	cc		 int	 3
$LN2@Lock:
  00079	33 c0		 xor	 eax, eax
  0007b	75 cb		 jne	 SHORT $LN4@Lock

; 380  : 	hr = m_cs.Lock();

  0007d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00082	e8 00 00 00 00	 call	 ?Lock@CComCriticalSection@ATL@@QAEJXZ ; ATL::CComCriticalSection::Lock
  00087	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 381  : 	if( FAILED( hr ) )

  0008a	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0008e	7d 05		 jge	 SHORT $LN5@Lock

; 382  : 	{
; 383  : 		return( hr );

  00090	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  00093	eb 09		 jmp	 SHORT $LN1@Lock
$LN5@Lock:

; 384  : 	}
; 385  : 	m_bLocked = true;

  00095	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00098	c6 42 04 01	 mov	 BYTE PTR [edx+4], 1

; 386  : 
; 387  : 	return( S_OK );

  0009c	33 c0		 xor	 eax, eax
$LN1@Lock:

; 388  : }

  0009e	83 c4 08	 add	 esp, 8
  000a1	3b ec		 cmp	 ebp, esp
  000a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a8	8b e5		 mov	 esp, ebp
  000aa	5d		 pop	 ebp
  000ab	c3		 ret	 0
?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ENDP ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ PROC ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>, COMDAT
; _this$ = ecx

; 363  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 364  : 	if( m_bLocked )

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00015	85 c9		 test	 ecx, ecx
  00017	74 08		 je	 SHORT $LN1@CComCritSe

; 365  : 	{
; 366  : 		Unlock();

  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Unlock
$LN1@CComCritSe:

; 367  : 	}
; 368  : }

  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z
_TEXT	SEGMENT
_hr$1 = -8						; size = 4
_this$ = -4						; size = 4
_cs$ = 8						; size = 4
_bInitialLock$ = 12					; size = 1
??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z PROC ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>, COMDAT
; _this$ = ecx

; 347  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 345  : 	m_cs( cs ),

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR _cs$[ebp]
  0001d	89 08		 mov	 DWORD PTR [eax], ecx

; 346  : 	m_bLocked( false )

  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	c6 42 04 00	 mov	 BYTE PTR [edx+4], 0

; 348  : 	if( bInitialLock )

  00026	0f b6 45 0c	 movzx	 eax, BYTE PTR _bInitialLock$[ebp]
  0002a	85 c0		 test	 eax, eax
  0002c	74 1a		 je	 SHORT $LN1@CComCritSe

; 349  : 	{
; 350  : 		HRESULT hr;
; 351  : 
; 352  : 		hr = Lock();

  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
  00036	89 45 f8	 mov	 DWORD PTR _hr$1[ebp], eax

; 353  : 		if( FAILED( hr ) )

  00039	83 7d f8 00	 cmp	 DWORD PTR _hr$1[ebp], 0
  0003d	7d 09		 jge	 SHORT $LN1@CComCritSe

; 354  : 		{
; 355  : 			AtlThrow( hr );

  0003f	8b 4d f8	 mov	 ecx, DWORD PTR _hr$1[ebp]
  00042	51		 push	 ecx
  00043	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN1@CComCritSe:

; 356  : 		}
; 357  : 	}
; 358  : }

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
$LN4@CComCritSe:
  0004b	83 c4 08	 add	 esp, 8
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z ENDP ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<ITypeLib>::~CComPtr<ITypeLib>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UITypeLib@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ITypeLib>::~CComPtrBase<ITypeLib>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<ITypeLib>::~CComPtr<ITypeLib>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<ITypeLib>::CComPtr<ITypeLib>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UITypeLib@@@ATL@@IAE@XZ ; ATL::CComPtrBase<ITypeLib>::CComPtrBase<ITypeLib>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<ITypeLib>::CComPtr<ITypeLib>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ PROC ; ATL::CComPtrBase<ITypeLib>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ ENDP ; ATL::CComPtrBase<ITypeLib>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ PROC ; ATL::CComPtrBase<ITypeLib>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ ENDP ; ATL::CComPtrBase<ITypeLib>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ PROC ; ATL::CComPtrBase<ITypeLib>::operator ITypeLib *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ ENDP ; ATL::CComPtrBase<ITypeLib>::operator ITypeLib *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UITypeLib@@@ATL@@QAE@XZ PROC		; ATL::CComPtrBase<ITypeLib>::~CComPtrBase<ITypeLib>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UITypeLib@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<ITypeLib>::~CComPtrBase<ITypeLib>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UITypeLib@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UITypeLib@@@ATL@@IAE@XZ PROC		; ATL::CComPtrBase<ITypeLib>::CComPtrBase<ITypeLib>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UITypeLib@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<ITypeLib>::CComPtrBase<ITypeLib>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
_TEXT	SEGMENT
_lp$1 = -12						; size = 4
_lpsz$2 = -8						; size = 4
_lpszTemp$ = -4						; size = 4
_lpszPathName$ = 8					; size = 4
?AtlGetDirLen@ATL@@YGIPB_W@Z PROC			; ATL::AtlGetDirLen

; 7329 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 7330 : 	ATLASSERT(lpszPathName != NULL);

  0001c	83 7d 08 00	 cmp	 DWORD PTR _lpszPathName$[ebp], 0
  00020	75 26		 jne	 SHORT $LN9@AtlGetDirL
  00022	68 00 00 00 00	 push	 OFFSET $SG113203
  00027	68 00 00 00 00	 push	 OFFSET $SG113204
  0002c	6a 00		 push	 0
  0002e	68 a2 1c 00 00	 push	 7330			; 00001ca2H
  00033	68 00 00 00 00	 push	 OFFSET $SG113205
  00038	6a 02		 push	 2
  0003a	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003f	83 c4 18	 add	 esp, 24			; 00000018H
  00042	83 f8 01	 cmp	 eax, 1
  00045	75 01		 jne	 SHORT $LN9@AtlGetDirL
  00047	cc		 int	 3
$LN9@AtlGetDirL:

; 7331 : 	if(lpszPathName == NULL)

  00048	83 7d 08 00	 cmp	 DWORD PTR _lpszPathName$[ebp], 0
  0004c	75 04		 jne	 SHORT $LN5@AtlGetDirL

; 7332 : 		return 0;

  0004e	33 c0		 xor	 eax, eax
  00050	eb 63		 jmp	 SHORT $LN1@AtlGetDirL
$LN5@AtlGetDirL:

; 7333 : 
; 7334 : 	// always capture the complete file name including extension (if present)
; 7335 : 	LPCOLESTR lpszTemp = lpszPathName;

  00052	8b 4d 08	 mov	 ecx, DWORD PTR _lpszPathName$[ebp]
  00055	89 4d fc	 mov	 DWORD PTR _lpszTemp$[ebp], ecx

; 7336 : 	for (LPCOLESTR lpsz = lpszPathName; *lpsz != '\0'; )

  00058	8b 55 08	 mov	 edx, DWORD PTR _lpszPathName$[ebp]
  0005b	89 55 f8	 mov	 DWORD PTR _lpsz$2[ebp], edx
$LN4@AtlGetDirL:
  0005e	8b 45 f8	 mov	 eax, DWORD PTR _lpsz$2[ebp]
  00061	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00064	85 c9		 test	 ecx, ecx
  00066	74 45		 je	 SHORT $LN3@AtlGetDirL

; 7337 : 	{
; 7338 : 
; 7339 : 		LPCOLESTR lp = CharNextW(lpsz);

  00068	8b f4		 mov	 esi, esp
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _lpsz$2[ebp]
  0006d	52		 push	 edx
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  00074	3b f4		 cmp	 esi, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007b	89 45 f4	 mov	 DWORD PTR _lp$1[ebp], eax

; 7340 : 
; 7341 : 		// remember last directory/drive separator
; 7342 : 		if (*lpsz == OLESTR('\\') || *lpsz == OLESTR('/') || *lpsz == OLESTR(':'))

  0007e	8b 45 f8	 mov	 eax, DWORD PTR _lpsz$2[ebp]
  00081	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00084	83 f9 5c	 cmp	 ecx, 92			; 0000005cH
  00087	74 16		 je	 SHORT $LN7@AtlGetDirL
  00089	8b 55 f8	 mov	 edx, DWORD PTR _lpsz$2[ebp]
  0008c	0f b7 02	 movzx	 eax, WORD PTR [edx]
  0008f	83 f8 2f	 cmp	 eax, 47			; 0000002fH
  00092	74 0b		 je	 SHORT $LN7@AtlGetDirL
  00094	8b 4d f8	 mov	 ecx, DWORD PTR _lpsz$2[ebp]
  00097	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0009a	83 fa 3a	 cmp	 edx, 58			; 0000003aH
  0009d	75 06		 jne	 SHORT $LN6@AtlGetDirL
$LN7@AtlGetDirL:

; 7343 : 			lpszTemp = lp;

  0009f	8b 45 f4	 mov	 eax, DWORD PTR _lp$1[ebp]
  000a2	89 45 fc	 mov	 DWORD PTR _lpszTemp$[ebp], eax
$LN6@AtlGetDirL:

; 7344 : 		lpsz = lp;

  000a5	8b 4d f4	 mov	 ecx, DWORD PTR _lp$1[ebp]
  000a8	89 4d f8	 mov	 DWORD PTR _lpsz$2[ebp], ecx

; 7345 : 	}

  000ab	eb b1		 jmp	 SHORT $LN4@AtlGetDirL
$LN3@AtlGetDirL:

; 7346 : 
; 7347 : 	return UINT( lpszTemp-lpszPathName );

  000ad	8b 45 fc	 mov	 eax, DWORD PTR _lpszTemp$[ebp]
  000b0	2b 45 08	 sub	 eax, DWORD PTR _lpszPathName$[ebp]
  000b3	d1 f8		 sar	 eax, 1
$LN1@AtlGetDirL:

; 7348 : }

  000b5	5e		 pop	 esi
  000b6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b9	3b ec		 cmp	 ebp, esp
  000bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 04 00	 ret	 4
?AtlGetDirLen@ATL@@YGIPB_W@Z ENDP			; ATL::AtlGetDirLen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<ICatRegister>::~CComPtr<ICatRegister>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UICatRegister@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ICatRegister>::~CComPtrBase<ICatRegister>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<ICatRegister>::~CComPtr<ICatRegister>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<ICatRegister>::CComPtr<ICatRegister>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UICatRegister@@@ATL@@IAE@XZ ; ATL::CComPtrBase<ICatRegister>::CComPtrBase<ICatRegister>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<ICatRegister>::CComPtr<ICatRegister>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ PROC ; ATL::CComPtrBase<ICatRegister>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ ENDP ; ATL::CComPtrBase<ICatRegister>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ PROC ; ATL::CComPtrBase<ICatRegister>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ ENDP ; ATL::CComPtrBase<ICatRegister>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UICatRegister@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<ICatRegister>::~CComPtrBase<ICatRegister>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UICatRegister@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<ICatRegister>::~CComPtrBase<ICatRegister>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UICatRegister@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UICatRegister@@@ATL@@IAE@XZ PROC	; ATL::CComPtrBase<ICatRegister>::CComPtrBase<ICatRegister>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UICatRegister@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<ICatRegister>::CComPtrBase<ICatRegister>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
_TEXT	SEGMENT
tv74 = -12						; size = 4
tv68 = -8						; size = 4
_pszRemember$ = -4					; size = 4
_psz$ = 8						; size = 4
?AtlFindExtension@ATL@@YAPA_WPB_W@Z PROC		; ATL::AtlFindExtension

; 7064 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 7065 : 		if (psz == NULL)

  0001c	83 7d 08 00	 cmp	 DWORD PTR _psz$[ebp], 0
  00020	75 04		 jne	 SHORT $LN6@AtlFindExt

; 7066 : 			return NULL;

  00022	33 c0		 xor	 eax, eax
  00024	eb 66		 jmp	 SHORT $LN1@AtlFindExt
$LN6@AtlFindExt:

; 7067 : 		LPCTSTR pszRemember = NULL;

  00026	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pszRemember$[ebp], 0
$LN2@AtlFindExt:

; 7068 : 		while (*psz != _T('\0'))

  0002d	8b 45 08	 mov	 eax, DWORD PTR _psz$[ebp]
  00030	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00033	85 c9		 test	 ecx, ecx
  00035	74 3e		 je	 SHORT $LN3@AtlFindExt

; 7069 : 		{
; 7070 : 			switch (*psz)

  00037	8b 55 08	 mov	 edx, DWORD PTR _psz$[ebp]
  0003a	0f b7 02	 movzx	 eax, WORD PTR [edx]
  0003d	89 45 f8	 mov	 DWORD PTR tv68[ebp], eax
  00040	83 7d f8 2e	 cmp	 DWORD PTR tv68[ebp], 46	; 0000002eH
  00044	74 11		 je	 SHORT $LN8@AtlFindExt
  00046	83 7d f8 5c	 cmp	 DWORD PTR tv68[ebp], 92	; 0000005cH
  0004a	74 02		 je	 SHORT $LN7@AtlFindExt
  0004c	eb 0f		 jmp	 SHORT $LN4@AtlFindExt
$LN7@AtlFindExt:

; 7071 : 			{
; 7072 : 			case _T('\\'):
; 7073 : 				pszRemember = NULL;

  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pszRemember$[ebp], 0

; 7074 : 				break;

  00055	eb 06		 jmp	 SHORT $LN4@AtlFindExt
$LN8@AtlFindExt:

; 7075 : 			case _T('.'):
; 7076 : 				pszRemember = psz;

  00057	8b 4d 08	 mov	 ecx, DWORD PTR _psz$[ebp]
  0005a	89 4d fc	 mov	 DWORD PTR _pszRemember$[ebp], ecx
$LN4@AtlFindExt:

; 7077 : 				break;
; 7078 : 			default:
; 7079 : 				break;
; 7080 : 			}
; 7081 : 			psz = CharNext(psz);

  0005d	8b f4		 mov	 esi, esp
  0005f	8b 55 08	 mov	 edx, DWORD PTR _psz$[ebp]
  00062	52		 push	 edx
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  00069	3b f4		 cmp	 esi, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	89 45 08	 mov	 DWORD PTR _psz$[ebp], eax

; 7082 : 		}

  00073	eb b8		 jmp	 SHORT $LN2@AtlFindExt
$LN3@AtlFindExt:

; 7083 : 		return (LPTSTR) ((pszRemember == NULL) ? psz : pszRemember);

  00075	83 7d fc 00	 cmp	 DWORD PTR _pszRemember$[ebp], 0
  00079	75 08		 jne	 SHORT $LN11@AtlFindExt
  0007b	8b 45 08	 mov	 eax, DWORD PTR _psz$[ebp]
  0007e	89 45 f4	 mov	 DWORD PTR tv74[ebp], eax
  00081	eb 06		 jmp	 SHORT $LN12@AtlFindExt
$LN11@AtlFindExt:
  00083	8b 4d fc	 mov	 ecx, DWORD PTR _pszRemember$[ebp]
  00086	89 4d f4	 mov	 DWORD PTR tv74[ebp], ecx
$LN12@AtlFindExt:
  00089	8b 45 f4	 mov	 eax, DWORD PTR tv74[ebp]
$LN1@AtlFindExt:

; 7084 : 	}

  0008c	5e		 pop	 esi
  0008d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00090	3b ec		 cmp	 ebp, esp
  00092	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c3		 ret	 0
?AtlFindExtension@ATL@@YAPA_WPB_W@Z ENDP		; ATL::AtlFindExtension
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ PROC ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::FreeHeap, COMDAT
; _this$ = ecx

; 585  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 586  : 		Allocator::Free( m_p );

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 08		 mov	 ecx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPAX@Z ; ATL::CCRTAllocator::Free
  00019	83 c4 04	 add	 esp, 4

; 587  : 	}

  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ENDP ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::FreeHeap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z PROC ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::AllocateHeap, COMDAT
; _this$ = ecx

; 565  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 566  : 		T* p = static_cast< T* >( Allocator::Allocate( nBytes ) );

  00017	8b 45 08	 mov	 eax, DWORD PTR _nBytes$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ; ATL::CCRTAllocator::Allocate
  00020	83 c4 04	 add	 esp, 4
  00023	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax

; 567  : 		if( p == NULL )

  00026	83 7d f8 00	 cmp	 DWORD PTR _p$[ebp], 0
  0002a	75 0a		 jne	 SHORT $LN2@AllocateHe

; 568  : 		{
; 569  : 			AtlThrow( E_OUTOFMEMORY );

  0002c	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00031	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@AllocateHe:

; 570  : 		}
; 571  : 		m_p = p;

  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  0003c	89 11		 mov	 DWORD PTR [ecx], edx
$LN3@AllocateHe:

; 572  : 	}

  0003e	83 c4 08	 add	 esp, 8
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
?AllocateHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ENDP ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::AllocateHeap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateBytes@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z PROC ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::AllocateBytes, COMDAT
; _this$ = ecx

; 549  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 550  : 		ATLASSERT( m_p == NULL );

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN5@AllocateBy
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@EMCLECFJ@?$AAm?$AA_?$AAp?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 26 02 00 00	 push	 550			; 00000226H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@EFJOHFCD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN5@AllocateBy
  0003b	cc		 int	 3
$LN5@AllocateBy:

; 551  : 		if( nBytes > t_nFixedBytes )

  0003c	81 7d 08 00 01
	00 00		 cmp	 DWORD PTR _nBytes$[ebp], 256 ; 00000100H
  00043	76 0e		 jbe	 SHORT $LN2@AllocateBy

; 552  : 		{
; 553  : 			AllocateHeap( nBytes );

  00045	8b 55 08	 mov	 edx, DWORD PTR _nBytes$[ebp]
  00048	52		 push	 edx
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?AllocateHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::AllocateHeap

; 554  : 		}

  00051	eb 0b		 jmp	 SHORT $LN3@AllocateBy
$LN2@AllocateBy:

; 555  : 		else
; 556  : 		{
; 557  : 			m_p = reinterpret_cast< T* >( m_abFixedBuffer );

  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	83 c0 04	 add	 eax, 4
  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	89 01		 mov	 DWORD PTR [ecx], eax
$LN3@AllocateBy:

; 558  : 		}
; 559  : 
; 560  : 		return( m_p );

  0005e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00061	8b 02		 mov	 eax, DWORD PTR [edx]

; 561  : 	}

  00063	83 c4 04	 add	 esp, 4
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
?AllocateBytes@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z ENDP ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nElements$ = 8						; size = 4
?Allocate@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z PROC ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 510  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 511  : 		return( AllocateBytes( ::ATL::AtlMultiplyThrow(nElements,sizeof( T )) ) );

  0000e	6a 01		 push	 1
  00010	8b 45 08	 mov	 eax, DWORD PTR _nElements$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$AtlMultiplyThrow@I@ATL@@YAIII@Z ; ATL::AtlMultiplyThrow<unsigned int>
  00019	83 c4 08	 add	 esp, 8
  0001c	50		 push	 eax
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?AllocateBytes@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::AllocateBytes

; 512  : 	}

  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?Allocate@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z ENDP ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPAEXZ PROC ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::operator unsigned char *, COMDAT
; _this$ = ecx

; 500  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 501  : 		return( m_p );

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 502  : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPAEXZ ENDP ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::operator unsigned char *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::~CTempBuffer<unsigned char,256,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 492  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 493  : 		if( m_p != reinterpret_cast< T* >( m_abFixedBuffer ) )

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 04	 add	 eax, 4
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	39 01		 cmp	 DWORD PTR [ecx], eax
  00019	74 08		 je	 SHORT $LN1@CTempBuffe

; 494  : 		{
; 495  : 			FreeHeap();

  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::FreeHeap
$LN1@CTempBuffe:

; 496  : 		}
; 497  : 	}

  00023	83 c4 04	 add	 esp, 4
  00026	3b ec		 cmp	 ebp, esp
  00028	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::~CTempBuffer<unsigned char,256,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 482  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 		m_p( NULL )

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 483  : 	}

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?FreeHeap@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FreeHeap@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ PROC ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::FreeHeap, COMDAT
; _this$ = ecx

; 585  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 586  : 		Allocator::Free( m_p );

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 08		 mov	 ecx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPAX@Z ; ATL::CCRTAllocator::Free
  00019	83 c4 04	 add	 esp, 4

; 587  : 	}

  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?FreeHeap@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ENDP ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::FreeHeap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateHeap@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateHeap@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z PROC ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::AllocateHeap, COMDAT
; _this$ = ecx

; 565  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 566  : 		T* p = static_cast< T* >( Allocator::Allocate( nBytes ) );

  00017	8b 45 08	 mov	 eax, DWORD PTR _nBytes$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ; ATL::CCRTAllocator::Allocate
  00020	83 c4 04	 add	 esp, 4
  00023	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax

; 567  : 		if( p == NULL )

  00026	83 7d f8 00	 cmp	 DWORD PTR _p$[ebp], 0
  0002a	75 0a		 jne	 SHORT $LN2@AllocateHe

; 568  : 		{
; 569  : 			AtlThrow( E_OUTOFMEMORY );

  0002c	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00031	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@AllocateHe:

; 570  : 		}
; 571  : 		m_p = p;

  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  0003c	89 11		 mov	 DWORD PTR [ecx], edx
$LN3@AllocateHe:

; 572  : 	}

  0003e	83 c4 08	 add	 esp, 8
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
?AllocateHeap@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ENDP ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::AllocateHeap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateBytes@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z PROC ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::AllocateBytes, COMDAT
; _this$ = ecx

; 549  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 550  : 		ATLASSERT( m_p == NULL );

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN5@AllocateBy
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@EMCLECFJ@?$AAm?$AA_?$AAp?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 26 02 00 00	 push	 550			; 00000226H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@EFJOHFCD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN5@AllocateBy
  0003b	cc		 int	 3
$LN5@AllocateBy:

; 551  : 		if( nBytes > t_nFixedBytes )

  0003c	81 7d 08 00 01
	00 00		 cmp	 DWORD PTR _nBytes$[ebp], 256 ; 00000100H
  00043	76 0e		 jbe	 SHORT $LN2@AllocateBy

; 552  : 		{
; 553  : 			AllocateHeap( nBytes );

  00045	8b 55 08	 mov	 edx, DWORD PTR _nBytes$[ebp]
  00048	52		 push	 edx
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?AllocateHeap@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::AllocateHeap

; 554  : 		}

  00051	eb 0b		 jmp	 SHORT $LN3@AllocateBy
$LN2@AllocateBy:

; 555  : 		else
; 556  : 		{
; 557  : 			m_p = reinterpret_cast< T* >( m_abFixedBuffer );

  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	83 c0 04	 add	 eax, 4
  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	89 01		 mov	 DWORD PTR [ecx], eax
$LN3@AllocateBy:

; 558  : 		}
; 559  : 
; 560  : 		return( m_p );

  0005e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00061	8b 02		 mov	 eax, DWORD PTR [edx]

; 561  : 	}

  00063	83 c4 04	 add	 esp, 4
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
?AllocateBytes@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z ENDP ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nElements$ = 8						; size = 4
?Allocate@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z PROC ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 510  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 511  : 		return( AllocateBytes( ::ATL::AtlMultiplyThrow(nElements,sizeof( T )) ) );

  0000e	6a 02		 push	 2
  00010	8b 45 08	 mov	 eax, DWORD PTR _nElements$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$AtlMultiplyThrow@I@ATL@@YAIII@Z ; ATL::AtlMultiplyThrow<unsigned int>
  00019	83 c4 08	 add	 esp, 8
  0001c	50		 push	 eax
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?AllocateBytes@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::AllocateBytes

; 512  : 	}

  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?Allocate@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z ENDP ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ PROC ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::operator wchar_t *, COMDAT
; _this$ = ecx

; 500  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 501  : 		return( m_p );

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 502  : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ENDP ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::operator wchar_t *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::~CTempBuffer<wchar_t,256,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 492  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 493  : 		if( m_p != reinterpret_cast< T* >( m_abFixedBuffer ) )

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 04	 add	 eax, 4
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	39 01		 cmp	 DWORD PTR [ecx], eax
  00019	74 08		 je	 SHORT $LN1@CTempBuffe

; 494  : 		{
; 495  : 			FreeHeap();

  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?FreeHeap@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::FreeHeap
$LN1@CTempBuffe:

; 496  : 		}
; 497  : 	}

  00023	83 c4 04	 add	 esp, 4
  00026	3b ec		 cmp	 ebp, esp
  00028	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
??1?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::~CTempBuffer<wchar_t,256,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 482  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 		m_p( NULL )

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 483  : 	}

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?FreeHeap@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FreeHeap@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ PROC ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::FreeHeap, COMDAT
; _this$ = ecx

; 585  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 586  : 		Allocator::Free( m_p );

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 08		 mov	 ecx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPAX@Z ; ATL::CCRTAllocator::Free
  00019	83 c4 04	 add	 esp, 4

; 587  : 	}

  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?FreeHeap@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ENDP ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::FreeHeap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateHeap@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateHeap@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z PROC ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::AllocateHeap, COMDAT
; _this$ = ecx

; 565  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 566  : 		T* p = static_cast< T* >( Allocator::Allocate( nBytes ) );

  00017	8b 45 08	 mov	 eax, DWORD PTR _nBytes$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ; ATL::CCRTAllocator::Allocate
  00020	83 c4 04	 add	 esp, 4
  00023	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax

; 567  : 		if( p == NULL )

  00026	83 7d f8 00	 cmp	 DWORD PTR _p$[ebp], 0
  0002a	75 0a		 jne	 SHORT $LN2@AllocateHe

; 568  : 		{
; 569  : 			AtlThrow( E_OUTOFMEMORY );

  0002c	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00031	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@AllocateHe:

; 570  : 		}
; 571  : 		m_p = p;

  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  0003c	89 11		 mov	 DWORD PTR [ecx], edx
$LN3@AllocateHe:

; 572  : 	}

  0003e	83 c4 08	 add	 esp, 8
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
?AllocateHeap@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ENDP ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::AllocateHeap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateBytes@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z PROC ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::AllocateBytes, COMDAT
; _this$ = ecx

; 549  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 550  : 		ATLASSERT( m_p == NULL );

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN5@AllocateBy
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@EMCLECFJ@?$AAm?$AA_?$AAp?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 26 02 00 00	 push	 550			; 00000226H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@EFJOHFCD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN5@AllocateBy
  0003b	cc		 int	 3
$LN5@AllocateBy:

; 551  : 		if( nBytes > t_nFixedBytes )

  0003c	81 7d 08 00 04
	00 00		 cmp	 DWORD PTR _nBytes$[ebp], 1024 ; 00000400H
  00043	76 0e		 jbe	 SHORT $LN2@AllocateBy

; 552  : 		{
; 553  : 			AllocateHeap( nBytes );

  00045	8b 55 08	 mov	 edx, DWORD PTR _nBytes$[ebp]
  00048	52		 push	 edx
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?AllocateHeap@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::AllocateHeap

; 554  : 		}

  00051	eb 0b		 jmp	 SHORT $LN3@AllocateBy
$LN2@AllocateBy:

; 555  : 		else
; 556  : 		{
; 557  : 			m_p = reinterpret_cast< T* >( m_abFixedBuffer );

  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	83 c0 04	 add	 eax, 4
  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	89 01		 mov	 DWORD PTR [ecx], eax
$LN3@AllocateBy:

; 558  : 		}
; 559  : 
; 560  : 		return( m_p );

  0005e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00061	8b 02		 mov	 eax, DWORD PTR [edx]

; 561  : 	}

  00063	83 c4 04	 add	 esp, 4
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
?AllocateBytes@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z ENDP ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nElements$ = 8						; size = 4
?Allocate@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z PROC ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 510  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 511  : 		return( AllocateBytes( ::ATL::AtlMultiplyThrow(nElements,sizeof( T )) ) );

  0000e	6a 02		 push	 2
  00010	8b 45 08	 mov	 eax, DWORD PTR _nElements$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$AtlMultiplyThrow@I@ATL@@YAIII@Z ; ATL::AtlMultiplyThrow<unsigned int>
  00019	83 c4 08	 add	 esp, 8
  0001c	50		 push	 eax
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?AllocateBytes@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::AllocateBytes

; 512  : 	}

  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?Allocate@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z ENDP ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ PROC ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::operator wchar_t *, COMDAT
; _this$ = ecx

; 500  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 501  : 		return( m_p );

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 502  : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ENDP ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::operator wchar_t *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::~CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 492  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 493  : 		if( m_p != reinterpret_cast< T* >( m_abFixedBuffer ) )

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 04	 add	 eax, 4
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	39 01		 cmp	 DWORD PTR [ecx], eax
  00019	74 08		 je	 SHORT $LN1@CTempBuffe

; 494  : 		{
; 495  : 			FreeHeap();

  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?FreeHeap@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::FreeHeap
$LN1@CTempBuffe:

; 496  : 		}
; 497  : 	}

  00023	83 c4 04	 add	 esp, 4
  00026	3b ec		 cmp	 ebp, esp
  00028	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
??1?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::~CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 482  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 		m_p( NULL )

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 483  : 	}

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCRegObject@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCRegObject@ATL@@UAEPAXI@Z PROC			; ATL::CRegObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CRegObject@ATL@@UAE@XZ ; ATL::CRegObject::~CRegObject
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 14		 push	 20			; 00000014H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GCRegObject@ATL@@UAEPAXI@Z ENDP			; ATL::CRegObject::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CRegObject@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CRegObject@ATL@@QAE@XZ PROC				; ATL::CRegObject::CRegObject, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0IRegistrarBase@@QAE@XZ
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CRegObject@ATL@@6B@
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	83 c1 04	 add	 ecx, 4
  00025	e8 00 00 00 00	 call	 ??0CExpansionVector@ATL@@QAE@XZ
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
??0CRegObject@ATL@@QAE@XZ ENDP				; ATL::CRegObject::CRegObject
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?RegisterFromResource@CRegObject@ATL@@IAEJPB_W00H@Z
_TEXT	SEGMENT
tv147 = -1152						; size = 4
$T1 = -1148						; size = 4
$T2 = -1144						; size = 8
$T3 = -1136						; size = 8
$T4 = -1128						; size = 8
_uniSize$5 = -1120					; size = 4
_lpszBSTRFileName$ = -1116				; size = 4
_szReg$ = -1108						; size = 1028
_szRegA$ = -76						; size = 4
_dwSize$ = -72						; size = 4
_hReg$ = -68						; size = 4
_hrscReg$ = -64						; size = 4
_hInstResDll$ = -60					; size = 4
_parser$ = -52						; size = 8
_hr$ = -40						; size = 4
__AtlSafeAllocaManager$ = -32				; size = 4
__lpa_ex$ = -24						; size = 4
__lpw_ex$ = -20						; size = 4
__acp_ex$ = -16						; size = 4
__convert_ex$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_bstrFileName$ = 8					; size = 4
_szID$ = 12						; size = 4
_szType$ = 16						; size = 4
_bRegister$ = 20					; size = 4
?RegisterFromResource@CRegObject@ATL@@IAEJPB_W00H@Z PROC ; ATL::CRegObject::RegisterFromResource, COMDAT
; _this$ = ecx

; 443  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 04 00
	00		 sub	 esp, 1152		; 00000480H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 80 fb ff
	ff		 lea	 edi, DWORD PTR [ebp-1152]
  00012	b9 20 01 00 00	 mov	 ecx, 288		; 00000120H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 444  : 	USES_CONVERSION_EX;

  0002c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __convert_ex$[ebp], 0
  00033	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00038	89 45 f0	 mov	 DWORD PTR __acp_ex$[ebp], eax
  0003b	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __lpw_ex$[ebp], 0
  00042	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR __lpa_ex$[ebp], 0
  00049	8d 4d e0	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0004c	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>

; 445  : 
; 446  : 	HRESULT     hr;
; 447  : 	CRegParser  parser(this);

  00051	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00054	50		 push	 eax
  00055	8d 4d cc	 lea	 ecx, DWORD PTR _parser$[ebp]
  00058	e8 00 00 00 00	 call	 ??0CRegParser@ATL@@QAE@PAVCRegObject@1@@Z ; ATL::CRegParser::CRegParser

; 448  : 	HINSTANCE   hInstResDll;
; 449  : 	HRSRC       hrscReg;
; 450  : 	HGLOBAL     hReg;
; 451  : 	DWORD       dwSize;
; 452  : 	LPSTR       szRegA;
; 453  : 	CTempBuffer<TCHAR, 1024> szReg;

  0005d	8d 8d ac fb ff
	ff		 lea	 ecx, DWORD PTR _szReg$[ebp]
  00063	e8 00 00 00 00	 call	 ??0?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>

; 454  : 
; 455  : 	LPCTSTR lpszBSTRFileName = OLE2CT_EX(bstrFileName, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  00068	68 00 04 00 00	 push	 1024			; 00000400H
  0006d	8b 4d 08	 mov	 ecx, DWORD PTR _bstrFileName$[ebp]
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ?OLE2CT_EX@@YAPB_WPB_WI@Z ; OLE2CT_EX
  00076	83 c4 08	 add	 esp, 8
  00079	89 85 a4 fb ff
	ff		 mov	 DWORD PTR _lpszBSTRFileName$[ebp], eax

; 456  : #ifndef _UNICODE
; 457  : 	if (lpszBSTRFileName == NULL)
; 458  : 	{
; 459  : 		return E_OUTOFMEMORY;
; 460  : 	}
; 461  : #endif // _UNICODE
; 462  : 
; 463  : 	hInstResDll = LoadLibraryEx(lpszBSTRFileName, NULL, LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE | LOAD_LIBRARY_AS_IMAGE_RESOURCE);

  0007f	8b f4		 mov	 esi, esp
  00081	6a 60		 push	 96			; 00000060H
  00083	6a 00		 push	 0
  00085	8b 95 a4 fb ff
	ff		 mov	 edx, DWORD PTR _lpszBSTRFileName$[ebp]
  0008b	52		 push	 edx
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryExW@12
  00092	3b f4		 cmp	 esi, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00099	89 45 c4	 mov	 DWORD PTR _hInstResDll$[ebp], eax

; 464  : 
; 465  : 	if (NULL == hInstResDll)

  0009c	83 7d c4 00	 cmp	 DWORD PTR _hInstResDll$[ebp], 0
  000a0	75 1d		 jne	 SHORT $LN2@RegisterFr

; 466  : 	{
; 467  : 		// if library load failed using flags only valid on Vista+, fall back to using flags valid on XP
; 468  : 		hInstResDll = LoadLibraryEx(lpszBSTRFileName, NULL, LOAD_LIBRARY_AS_DATAFILE);

  000a2	8b f4		 mov	 esi, esp
  000a4	6a 02		 push	 2
  000a6	6a 00		 push	 0
  000a8	8b 85 a4 fb ff
	ff		 mov	 eax, DWORD PTR _lpszBSTRFileName$[ebp]
  000ae	50		 push	 eax
  000af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryExW@12
  000b5	3b f4		 cmp	 esi, esp
  000b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bc	89 45 c4	 mov	 DWORD PTR _hInstResDll$[ebp], eax
$LN2@RegisterFr:

; 469  : 	}
; 470  : 
; 471  : 	if (NULL == hInstResDll)

  000bf	83 7d c4 00	 cmp	 DWORD PTR _hInstResDll$[ebp], 0
  000c3	75 41		 jne	 SHORT $LN3@RegisterFr

; 472  : 	{
; 473  : 		ATLTRACE(atlTraceRegistrar, 0, _T("Failed to LoadLibrary on %Ts\n"), bstrFileName);

  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _bstrFileName$[ebp]
  000c8	51		 push	 ecx
  000c9	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@JBIDINMA@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAL@
  000ce	6a 00		 push	 0
  000d0	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  000d5	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  000da	50		 push	 eax
  000db	68 d9 01 00 00	 push	 473			; 000001d9H
  000e0	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000e5	8d 8d 98 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  000eb	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000f6	83 c4 14	 add	 esp, 20			; 00000014H

; 474  : 		hr = AtlHresultFromLastError();

  000f9	e8 00 00 00 00	 call	 ?AtlHresultFromLastError@ATL@@YAJXZ ; ATL::AtlHresultFromLastError
  000fe	89 45 d8	 mov	 DWORD PTR _hr$[ebp], eax

; 475  : 		goto ReturnHR;

  00101	e9 cc 01 00 00	 jmp	 $ReturnHR$24
$LN3@RegisterFr:

; 476  : 	}
; 477  : 
; 478  : 	hrscReg =FindResource((HMODULE)hInstResDll, szID, szType);

  00106	8b f4		 mov	 esi, esp
  00108	8b 55 10	 mov	 edx, DWORD PTR _szType$[ebp]
  0010b	52		 push	 edx
  0010c	8b 45 0c	 mov	 eax, DWORD PTR _szID$[ebp]
  0010f	50		 push	 eax
  00110	8b 4d c4	 mov	 ecx, DWORD PTR _hInstResDll$[ebp]
  00113	51		 push	 ecx
  00114	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FindResourceW@12
  0011a	3b f4		 cmp	 esi, esp
  0011c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00121	89 45 c0	 mov	 DWORD PTR _hrscReg$[ebp], eax

; 479  : 
; 480  : 	if (NULL == hrscReg)

  00124	83 7d c0 00	 cmp	 DWORD PTR _hrscReg$[ebp], 0
  00128	75 70		 jne	 SHORT $LN5@RegisterFr

; 481  : 	{
; 482  : 		ATLTRACE(atlTraceRegistrar, 0, (HIWORD(szID) == 0) ?

  0012a	8b 55 0c	 mov	 edx, DWORD PTR _szID$[ebp]
  0012d	c1 ea 10	 shr	 edx, 16			; 00000010H
  00130	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00136	0f b7 c2	 movzx	 eax, dx
  00139	85 c0		 test	 eax, eax
  0013b	75 0c		 jne	 SHORT $LN17@RegisterFr
  0013d	c7 85 80 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv147[ebp], OFFSET ??_C@_1FE@HJDAOHJE@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAF?$AAi?$AAn?$AAd?$AAR@
  00147	eb 0a		 jmp	 SHORT $LN18@RegisterFr
$LN17@RegisterFr:
  00149	c7 85 80 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv147[ebp], OFFSET ??_C@_1FG@BBJFPKL@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAF?$AAi?$AAn?$AAd?$AAR@
$LN18@RegisterFr:
  00153	8b 4d 10	 mov	 ecx, DWORD PTR _szType$[ebp]
  00156	51		 push	 ecx
  00157	8b 55 0c	 mov	 edx, DWORD PTR _szID$[ebp]
  0015a	52		 push	 edx
  0015b	8b 85 80 fb ff
	ff		 mov	 eax, DWORD PTR tv147[ebp]
  00161	50		 push	 eax
  00162	6a 00		 push	 0
  00164	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  00169	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  0016e	50		 push	 eax
  0016f	68 e2 01 00 00	 push	 482			; 000001e2H
  00174	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00179	8d 8d 90 fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  0017f	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00184	50		 push	 eax
  00185	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0018a	83 c4 18	 add	 esp, 24			; 00000018H

; 483  : 			_T("Failed to FindResource on ID:%d TYPE:%Ts\n") :
; 484  : 			_T("Failed to FindResource on ID:%Ts TYPE:%Ts\n"),
; 485  : 			szID, szType);
; 486  : 		hr = AtlHresultFromLastError();

  0018d	e8 00 00 00 00	 call	 ?AtlHresultFromLastError@ATL@@YAJXZ ; ATL::AtlHresultFromLastError
  00192	89 45 d8	 mov	 DWORD PTR _hr$[ebp], eax

; 487  : 		goto ReturnHR;

  00195	e9 38 01 00 00	 jmp	 $ReturnHR$24
$LN5@RegisterFr:

; 488  : 	}
; 489  : 	hReg = LoadResource((HMODULE)hInstResDll, hrscReg);

  0019a	8b f4		 mov	 esi, esp
  0019c	8b 4d c0	 mov	 ecx, DWORD PTR _hrscReg$[ebp]
  0019f	51		 push	 ecx
  001a0	8b 55 c4	 mov	 edx, DWORD PTR _hInstResDll$[ebp]
  001a3	52		 push	 edx
  001a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadResource@8
  001aa	3b f4		 cmp	 esi, esp
  001ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b1	89 45 bc	 mov	 DWORD PTR _hReg$[ebp], eax

; 490  : 
; 491  : 	if (NULL == hReg)

  001b4	83 7d bc 00	 cmp	 DWORD PTR _hReg$[ebp], 0
  001b8	75 3d		 jne	 SHORT $LN7@RegisterFr

; 492  : 	{
; 493  : 		ATLTRACE(atlTraceRegistrar, 0, _T("Failed to LoadResource\n"));

  001ba	68 00 00 00 00	 push	 OFFSET ??_C@_1DA@KJKEAFMD@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAR@
  001bf	6a 00		 push	 0
  001c1	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  001c6	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  001cb	50		 push	 eax
  001cc	68 ed 01 00 00	 push	 493			; 000001edH
  001d1	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  001d6	8d 8d 88 fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  001dc	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  001e1	50		 push	 eax
  001e2	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  001e7	83 c4 10	 add	 esp, 16			; 00000010H

; 494  : 		hr = AtlHresultFromLastError();

  001ea	e8 00 00 00 00	 call	 ?AtlHresultFromLastError@ATL@@YAJXZ ; ATL::AtlHresultFromLastError
  001ef	89 45 d8	 mov	 DWORD PTR _hr$[ebp], eax

; 495  : 		goto ReturnHR;

  001f2	e9 db 00 00 00	 jmp	 $ReturnHR$24
$LN7@RegisterFr:

; 496  : 	}
; 497  : 
; 498  : 	dwSize = SizeofResource((HMODULE)hInstResDll, hrscReg);

  001f7	8b f4		 mov	 esi, esp
  001f9	8b 45 c0	 mov	 eax, DWORD PTR _hrscReg$[ebp]
  001fc	50		 push	 eax
  001fd	8b 4d c4	 mov	 ecx, DWORD PTR _hInstResDll$[ebp]
  00200	51		 push	 ecx
  00201	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SizeofResource@8
  00207	3b f4		 cmp	 esi, esp
  00209	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0020e	89 45 b8	 mov	 DWORD PTR _dwSize$[ebp], eax

; 499  : 	szRegA = (LPSTR)hReg;

  00211	8b 55 bc	 mov	 edx, DWORD PTR _hReg$[ebp]
  00214	89 55 b4	 mov	 DWORD PTR _szRegA$[ebp], edx

; 500  : 
; 501  : 	// Allocate extra space for NULL.
; 502  : 	if (dwSize + 1 < dwSize)

  00217	8b 45 b8	 mov	 eax, DWORD PTR _dwSize$[ebp]
  0021a	83 c0 01	 add	 eax, 1
  0021d	3b 45 b8	 cmp	 eax, DWORD PTR _dwSize$[ebp]
  00220	73 0c		 jae	 SHORT $LN9@RegisterFr

; 503  : 	{
; 504  : 		hr = E_OUTOFMEMORY;

  00222	c7 45 d8 0e 00
	07 80		 mov	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH

; 505  : 		goto ReturnHR;

  00229	e9 a4 00 00 00	 jmp	 $ReturnHR$24
$LN9@RegisterFr:

; 506  : 	}
; 507  : 
; 508  : 	ATLTRY(szReg.Allocate(dwSize + 1));

  0022e	8b 4d b8	 mov	 ecx, DWORD PTR _dwSize$[ebp]
  00231	83 c1 01	 add	 ecx, 1
  00234	51		 push	 ecx
  00235	8d 8d ac fb ff
	ff		 lea	 ecx, DWORD PTR _szReg$[ebp]
  0023b	e8 00 00 00 00	 call	 ?Allocate@?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::Allocate

; 509  : 	if (szReg == NULL)

  00240	8d 8d ac fb ff
	ff		 lea	 ecx, DWORD PTR _szReg$[ebp]
  00246	e8 00 00 00 00	 call	 ??B?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::operator wchar_t *
  0024b	85 c0		 test	 eax, eax
  0024d	75 09		 jne	 SHORT $LN11@RegisterFr

; 510  : 	{
; 511  : 		hr = E_OUTOFMEMORY;

  0024f	c7 45 d8 0e 00
	07 80		 mov	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH

; 512  : 		goto ReturnHR;

  00256	eb 7a		 jmp	 SHORT $ReturnHR$24
$LN11@RegisterFr:

; 513  : 	}
; 514  : 
; 515  : #ifdef _UNICODE
; 516  : 	{
; 517  : 		DWORD uniSize = ::MultiByteToWideChar(_AtlGetConversionACP(), 0, szRegA, dwSize, szReg, dwSize);

  00258	8b f4		 mov	 esi, esp
  0025a	8b 55 b8	 mov	 edx, DWORD PTR _dwSize$[ebp]
  0025d	52		 push	 edx
  0025e	8d 8d ac fb ff
	ff		 lea	 ecx, DWORD PTR _szReg$[ebp]
  00264	e8 00 00 00 00	 call	 ??B?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::operator wchar_t *
  00269	50		 push	 eax
  0026a	8b 45 b8	 mov	 eax, DWORD PTR _dwSize$[ebp]
  0026d	50		 push	 eax
  0026e	8b 4d b4	 mov	 ecx, DWORD PTR _szRegA$[ebp]
  00271	51		 push	 ecx
  00272	6a 00		 push	 0
  00274	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00279	50		 push	 eax
  0027a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  00280	3b f4		 cmp	 esi, esp
  00282	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00287	89 85 a0 fb ff
	ff		 mov	 DWORD PTR _uniSize$5[ebp], eax

; 518  : 		if (uniSize == 0)

  0028d	83 bd a0 fb ff
	ff 00		 cmp	 DWORD PTR _uniSize$5[ebp], 0
  00294	75 0a		 jne	 SHORT $LN13@RegisterFr

; 519  : 		{
; 520  : 			hr = AtlHresultFromLastError();

  00296	e8 00 00 00 00	 call	 ?AtlHresultFromLastError@ATL@@YAJXZ ; ATL::AtlHresultFromLastError
  0029b	89 45 d8	 mov	 DWORD PTR _hr$[ebp], eax

; 521  : 			goto ReturnHR;

  0029e	eb 32		 jmp	 SHORT $ReturnHR$24
$LN13@RegisterFr:

; 522  : 		}
; 523  : 		// Append a NULL at the end.
; 524  : 		szReg[uniSize] = _T('\0');

  002a0	8d 8d ac fb ff
	ff		 lea	 ecx, DWORD PTR _szReg$[ebp]
  002a6	e8 00 00 00 00	 call	 ??B?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::operator wchar_t *
  002ab	33 d2		 xor	 edx, edx
  002ad	8b 8d a0 fb ff
	ff		 mov	 ecx, DWORD PTR _uniSize$5[ebp]
  002b3	66 89 14 48	 mov	 WORD PTR [eax+ecx*2], dx

; 525  : 	}
; 526  : #else
; 527  : 	Checked::memcpy_s(szReg, dwSize, szRegA, dwSize);
; 528  : 	// Append a NULL at the end.
; 529  :    	szReg[dwSize] = _T('\0');
; 530  : #endif
; 531  : 
; 532  : 	hr = parser.RegisterBuffer(szReg, bRegister);

  002b7	8b 55 14	 mov	 edx, DWORD PTR _bRegister$[ebp]
  002ba	52		 push	 edx
  002bb	8d 8d ac fb ff
	ff		 lea	 ecx, DWORD PTR _szReg$[ebp]
  002c1	e8 00 00 00 00	 call	 ??B?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::operator wchar_t *
  002c6	50		 push	 eax
  002c7	8d 4d cc	 lea	 ecx, DWORD PTR _parser$[ebp]
  002ca	e8 00 00 00 00	 call	 ?RegisterBuffer@CRegParser@ATL@@QAEJPA_WH@Z ; ATL::CRegParser::RegisterBuffer
  002cf	89 45 d8	 mov	 DWORD PTR _hr$[ebp], eax
$ReturnHR$24:

; 533  : 
; 534  : ReturnHR:
; 535  : 
; 536  : 	if (NULL != hInstResDll)

  002d2	83 7d c4 00	 cmp	 DWORD PTR _hInstResDll$[ebp], 0
  002d6	74 13		 je	 SHORT $LN15@RegisterFr

; 537  : 		FreeLibrary((HMODULE)hInstResDll);

  002d8	8b f4		 mov	 esi, esp
  002da	8b 45 c4	 mov	 eax, DWORD PTR _hInstResDll$[ebp]
  002dd	50		 push	 eax
  002de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4
  002e4	3b f4		 cmp	 esi, esp
  002e6	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN15@RegisterFr:

; 538  : 	return hr;

  002eb	8b 4d d8	 mov	 ecx, DWORD PTR _hr$[ebp]
  002ee	89 8d 84 fb ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  002f4	8d 8d ac fb ff
	ff		 lea	 ecx, DWORD PTR _szReg$[ebp]
  002fa	e8 00 00 00 00	 call	 ??1?$CTempBuffer@_W$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>::~CTempBuffer<wchar_t,1024,ATL::CCRTAllocator>
  002ff	8d 4d e0	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00302	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00307	8b 85 84 fb ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]

; 539  : }

  0030d	52		 push	 edx
  0030e	8b cd		 mov	 ecx, ebp
  00310	50		 push	 eax
  00311	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN23@RegisterFr
  00317	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0031c	58		 pop	 eax
  0031d	5a		 pop	 edx
  0031e	5f		 pop	 edi
  0031f	5e		 pop	 esi
  00320	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00323	33 cd		 xor	 ecx, ebp
  00325	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0032a	81 c4 80 04 00
	00		 add	 esp, 1152		; 00000480H
  00330	3b ec		 cmp	 ebp, esp
  00332	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00337	8b e5		 mov	 esp, ebp
  00339	5d		 pop	 ebp
  0033a	c2 10 00	 ret	 16			; 00000010H
  0033d	0f 1f 00	 npad	 3
$LN23@RegisterFr:
  00340	03 00 00 00	 DD	 3
  00344	00 00 00 00	 DD	 $LN22@RegisterFr
$LN22@RegisterFr:
  00348	e0 ff ff ff	 DD	 -32			; ffffffe0H
  0034c	04 00 00 00	 DD	 4
  00350	00 00 00 00	 DD	 $LN19@RegisterFr
  00354	cc ff ff ff	 DD	 -52			; ffffffccH
  00358	08 00 00 00	 DD	 8
  0035c	00 00 00 00	 DD	 $LN20@RegisterFr
  00360	ac fb ff ff	 DD	 -1108			; fffffbacH
  00364	04 04 00 00	 DD	 1028			; 00000404H
  00368	00 00 00 00	 DD	 $LN21@RegisterFr
$LN21@RegisterFr:
  0036c	73		 DB	 115			; 00000073H
  0036d	7a		 DB	 122			; 0000007aH
  0036e	52		 DB	 82			; 00000052H
  0036f	65		 DB	 101			; 00000065H
  00370	67		 DB	 103			; 00000067H
  00371	00		 DB	 0
$LN20@RegisterFr:
  00372	70		 DB	 112			; 00000070H
  00373	61		 DB	 97			; 00000061H
  00374	72		 DB	 114			; 00000072H
  00375	73		 DB	 115			; 00000073H
  00376	65		 DB	 101			; 00000065H
  00377	72		 DB	 114			; 00000072H
  00378	00		 DB	 0
$LN19@RegisterFr:
  00379	5f		 DB	 95			; 0000005fH
  0037a	41		 DB	 65			; 00000041H
  0037b	74		 DB	 116			; 00000074H
  0037c	6c		 DB	 108			; 0000006cH
  0037d	53		 DB	 83			; 00000053H
  0037e	61		 DB	 97			; 00000061H
  0037f	66		 DB	 102			; 00000066H
  00380	65		 DB	 101			; 00000065H
  00381	41		 DB	 65			; 00000041H
  00382	6c		 DB	 108			; 0000006cH
  00383	6c		 DB	 108			; 0000006cH
  00384	6f		 DB	 111			; 0000006fH
  00385	63		 DB	 99			; 00000063H
  00386	61		 DB	 97			; 00000061H
  00387	4d		 DB	 77			; 0000004dH
  00388	61		 DB	 97			; 00000061H
  00389	6e		 DB	 110			; 0000006eH
  0038a	61		 DB	 97			; 00000061H
  0038b	67		 DB	 103			; 00000067H
  0038c	65		 DB	 101			; 00000065H
  0038d	72		 DB	 114			; 00000072H
  0038e	00		 DB	 0
?RegisterFromResource@CRegObject@ATL@@IAEJPB_W00H@Z ENDP ; ATL::CRegObject::RegisterFromResource
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?ResourceUnregisterSz@CRegObject@ATL@@QAGJPB_W00@Z
_TEXT	SEGMENT
$T1 = -44						; size = 4
$T2 = -40						; size = 4
_lpszType$ = -36					; size = 4
_lpszID$ = -32						; size = 4
__AtlSafeAllocaManager$ = -24				; size = 4
__lpa_ex$ = -16						; size = 4
__lpw_ex$ = -12						; size = 4
__acp_ex$ = -8						; size = 4
__convert_ex$ = -4					; size = 4
_this$ = 8						; size = 4
_szFileName$ = 12					; size = 4
_szID$ = 16						; size = 4
_szType$ = 20						; size = 4
?ResourceUnregisterSz@CRegObject@ATL@@QAGJPB_W00@Z PROC	; ATL::CRegObject::ResourceUnregisterSz, COMDAT

; 600  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	57		 push	 edi
  00007	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0000a	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd

; 601  : 	USES_CONVERSION_EX;

  00016	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __convert_ex$[ebp], 0
  0001d	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00022	89 45 f8	 mov	 DWORD PTR __acp_ex$[ebp], eax
  00025	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __lpw_ex$[ebp], 0
  0002c	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __lpa_ex$[ebp], 0
  00033	8d 4d e8	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00036	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>

; 602  : 	if (szID == NULL || szType == NULL)

  0003b	83 7d 10 00	 cmp	 DWORD PTR _szID$[ebp], 0
  0003f	74 06		 je	 SHORT $LN3@ResourceUn
  00041	83 7d 14 00	 cmp	 DWORD PTR _szType$[ebp], 0
  00045	75 14		 jne	 SHORT $LN2@ResourceUn
$LN3@ResourceUn:

; 603  : 		return E_INVALIDARG;

  00047	c7 45 d8 57 00
	07 80		 mov	 DWORD PTR $T2[ebp], -2147024809 ; 80070057H
  0004e	8d 4d e8	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00051	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00056	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  00059	eb 4c		 jmp	 SHORT $LN1@ResourceUn
$LN2@ResourceUn:

; 604  : 
; 605  : 	LPCTSTR lpszID = OLE2CT_EX(szID, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  0005b	68 00 04 00 00	 push	 1024			; 00000400H
  00060	8b 45 10	 mov	 eax, DWORD PTR _szID$[ebp]
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ?OLE2CT_EX@@YAPB_WPB_WI@Z ; OLE2CT_EX
  00069	83 c4 08	 add	 esp, 8
  0006c	89 45 e0	 mov	 DWORD PTR _lpszID$[ebp], eax

; 606  : 	LPCTSTR lpszType = OLE2CT_EX(szType, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  0006f	68 00 04 00 00	 push	 1024			; 00000400H
  00074	8b 4d 14	 mov	 ecx, DWORD PTR _szType$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?OLE2CT_EX@@YAPB_WPB_WI@Z ; OLE2CT_EX
  0007d	83 c4 08	 add	 esp, 8
  00080	89 45 dc	 mov	 DWORD PTR _lpszType$[ebp], eax

; 607  : #ifndef _UNICODE
; 608  : 	if (lpszID == NULL || lpszType == NULL)
; 609  : 	{
; 610  : 		return E_OUTOFMEMORY;
; 611  : 	}
; 612  : #endif // _UNICODE
; 613  : 
; 614  : 	return RegisterFromResource(szFileName, lpszID, lpszType, FALSE);

  00083	6a 00		 push	 0
  00085	8b 55 dc	 mov	 edx, DWORD PTR _lpszType$[ebp]
  00088	52		 push	 edx
  00089	8b 45 e0	 mov	 eax, DWORD PTR _lpszID$[ebp]
  0008c	50		 push	 eax
  0008d	8b 4d 0c	 mov	 ecx, DWORD PTR _szFileName$[ebp]
  00090	51		 push	 ecx
  00091	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?RegisterFromResource@CRegObject@ATL@@IAEJPB_W00H@Z ; ATL::CRegObject::RegisterFromResource
  00099	89 45 d4	 mov	 DWORD PTR $T1[ebp], eax
  0009c	8d 4d e8	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0009f	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  000a4	8b 45 d4	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@ResourceUn:

; 615  : }

  000a7	52		 push	 edx
  000a8	8b cd		 mov	 ecx, ebp
  000aa	50		 push	 eax
  000ab	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@ResourceUn
  000b1	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000b6	58		 pop	 eax
  000b7	5a		 pop	 edx
  000b8	5f		 pop	 edi
  000b9	83 c4 2c	 add	 esp, 44			; 0000002cH
  000bc	3b ec		 cmp	 ebp, esp
  000be	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 10 00	 ret	 16			; 00000010H
  000c9	0f 1f 00	 npad	 3
$LN7@ResourceUn:
  000cc	01 00 00 00	 DD	 1
  000d0	00 00 00 00	 DD	 $LN6@ResourceUn
$LN6@ResourceUn:
  000d4	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000d8	04 00 00 00	 DD	 4
  000dc	00 00 00 00	 DD	 $LN5@ResourceUn
$LN5@ResourceUn:
  000e0	5f		 DB	 95			; 0000005fH
  000e1	41		 DB	 65			; 00000041H
  000e2	74		 DB	 116			; 00000074H
  000e3	6c		 DB	 108			; 0000006cH
  000e4	53		 DB	 83			; 00000053H
  000e5	61		 DB	 97			; 00000061H
  000e6	66		 DB	 102			; 00000066H
  000e7	65		 DB	 101			; 00000065H
  000e8	41		 DB	 65			; 00000041H
  000e9	6c		 DB	 108			; 0000006cH
  000ea	6c		 DB	 108			; 0000006cH
  000eb	6f		 DB	 111			; 0000006fH
  000ec	63		 DB	 99			; 00000063H
  000ed	61		 DB	 97			; 00000061H
  000ee	4d		 DB	 77			; 0000004dH
  000ef	61		 DB	 97			; 00000061H
  000f0	6e		 DB	 110			; 0000006eH
  000f1	61		 DB	 97			; 00000061H
  000f2	67		 DB	 103			; 00000067H
  000f3	65		 DB	 101			; 00000065H
  000f4	72		 DB	 114			; 00000072H
  000f5	00		 DB	 0
?ResourceUnregisterSz@CRegObject@ATL@@QAGJPB_W00@Z ENDP	; ATL::CRegObject::ResourceUnregisterSz
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?ResourceUnregister@CRegObject@ATL@@QAGJPB_WI0@Z
_TEXT	SEGMENT
$T1 = -36						; size = 4
_lpszT$ = -32						; size = 4
__AtlSafeAllocaManager$ = -24				; size = 4
__lpa_ex$ = -16						; size = 4
__lpw_ex$ = -12						; size = 4
__acp_ex$ = -8						; size = 4
__convert_ex$ = -4					; size = 4
_this$ = 8						; size = 4
_szFileName$ = 12					; size = 4
_nID$ = 16						; size = 4
_szType$ = 20						; size = 4
?ResourceUnregister@CRegObject@ATL@@QAGJPB_WI0@Z PROC	; ATL::CRegObject::ResourceUnregister, COMDAT

; 583  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000e	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00011	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00014	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00017	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001a	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001d	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00020	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00023	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 584  : 	USES_CONVERSION_EX;

  00026	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __convert_ex$[ebp], 0
  0002d	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00032	89 45 f8	 mov	 DWORD PTR __acp_ex$[ebp], eax
  00035	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __lpw_ex$[ebp], 0
  0003c	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __lpa_ex$[ebp], 0
  00043	8d 4d e8	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00046	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>

; 585  : 
; 586  : 	LPCTSTR lpszT = OLE2CT_EX(szType, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  0004b	68 00 04 00 00	 push	 1024			; 00000400H
  00050	8b 45 14	 mov	 eax, DWORD PTR _szType$[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?OLE2CT_EX@@YAPB_WPB_WI@Z ; OLE2CT_EX
  00059	83 c4 08	 add	 esp, 8
  0005c	89 45 e0	 mov	 DWORD PTR _lpszT$[ebp], eax

; 587  : #ifndef _UNICODE
; 588  : 	if (lpszT == NULL)
; 589  : 	{
; 590  : 		return E_OUTOFMEMORY;
; 591  : 	}
; 592  : #endif // _UNICODE
; 593  : 	return RegisterFromResource(szFileName, MAKEINTRESOURCE(nID), lpszT, FALSE);

  0005f	6a 00		 push	 0
  00061	8b 4d e0	 mov	 ecx, DWORD PTR _lpszT$[ebp]
  00064	51		 push	 ecx
  00065	0f b7 55 10	 movzx	 edx, WORD PTR _nID$[ebp]
  00069	52		 push	 edx
  0006a	8b 45 0c	 mov	 eax, DWORD PTR _szFileName$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	e8 00 00 00 00	 call	 ?RegisterFromResource@CRegObject@ATL@@IAEJPB_W00H@Z ; ATL::CRegObject::RegisterFromResource
  00076	89 45 dc	 mov	 DWORD PTR $T1[ebp], eax
  00079	8d 4d e8	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0007c	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00081	8b 45 dc	 mov	 eax, DWORD PTR $T1[ebp]

; 594  : }

  00084	52		 push	 edx
  00085	8b cd		 mov	 ecx, ebp
  00087	50		 push	 eax
  00088	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@ResourceUn
  0008e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00093	58		 pop	 eax
  00094	5a		 pop	 edx
  00095	83 c4 24	 add	 esp, 36			; 00000024H
  00098	3b ec		 cmp	 ebp, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c2 10 00	 ret	 16			; 00000010H
  000a5	0f 1f 00	 npad	 3
$LN5@ResourceUn:
  000a8	01 00 00 00	 DD	 1
  000ac	00 00 00 00	 DD	 $LN4@ResourceUn
$LN4@ResourceUn:
  000b0	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000b4	04 00 00 00	 DD	 4
  000b8	00 00 00 00	 DD	 $LN3@ResourceUn
$LN3@ResourceUn:
  000bc	5f		 DB	 95			; 0000005fH
  000bd	41		 DB	 65			; 00000041H
  000be	74		 DB	 116			; 00000074H
  000bf	6c		 DB	 108			; 0000006cH
  000c0	53		 DB	 83			; 00000053H
  000c1	61		 DB	 97			; 00000061H
  000c2	66		 DB	 102			; 00000066H
  000c3	65		 DB	 101			; 00000065H
  000c4	41		 DB	 65			; 00000041H
  000c5	6c		 DB	 108			; 0000006cH
  000c6	6c		 DB	 108			; 0000006cH
  000c7	6f		 DB	 111			; 0000006fH
  000c8	63		 DB	 99			; 00000063H
  000c9	61		 DB	 97			; 00000061H
  000ca	4d		 DB	 77			; 0000004dH
  000cb	61		 DB	 97			; 00000061H
  000cc	6e		 DB	 110			; 0000006eH
  000cd	61		 DB	 97			; 00000061H
  000ce	67		 DB	 103			; 00000067H
  000cf	65		 DB	 101			; 00000065H
  000d0	72		 DB	 114			; 00000072H
  000d1	00		 DB	 0
?ResourceUnregister@CRegObject@ATL@@QAGJPB_WI0@Z ENDP	; ATL::CRegObject::ResourceUnregister
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?ResourceRegisterSz@CRegObject@ATL@@QAGJPB_W00@Z
_TEXT	SEGMENT
$T1 = -44						; size = 4
$T2 = -40						; size = 4
_lpszType$ = -36					; size = 4
_lpszID$ = -32						; size = 4
__AtlSafeAllocaManager$ = -24				; size = 4
__lpa_ex$ = -16						; size = 4
__lpw_ex$ = -12						; size = 4
__acp_ex$ = -8						; size = 4
__convert_ex$ = -4					; size = 4
_this$ = 8						; size = 4
_szFileName$ = 12					; size = 4
_szID$ = 16						; size = 4
_szType$ = 20						; size = 4
?ResourceRegisterSz@CRegObject@ATL@@QAGJPB_W00@Z PROC	; ATL::CRegObject::ResourceRegisterSz, COMDAT

; 563  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	57		 push	 edi
  00007	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0000a	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd

; 564  : 	USES_CONVERSION_EX;

  00016	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __convert_ex$[ebp], 0
  0001d	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00022	89 45 f8	 mov	 DWORD PTR __acp_ex$[ebp], eax
  00025	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __lpw_ex$[ebp], 0
  0002c	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __lpa_ex$[ebp], 0
  00033	8d 4d e8	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00036	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>

; 565  : 	if (szID == NULL || szType == NULL)

  0003b	83 7d 10 00	 cmp	 DWORD PTR _szID$[ebp], 0
  0003f	74 06		 je	 SHORT $LN3@ResourceRe
  00041	83 7d 14 00	 cmp	 DWORD PTR _szType$[ebp], 0
  00045	75 14		 jne	 SHORT $LN2@ResourceRe
$LN3@ResourceRe:

; 566  : 		return E_INVALIDARG;

  00047	c7 45 d8 57 00
	07 80		 mov	 DWORD PTR $T2[ebp], -2147024809 ; 80070057H
  0004e	8d 4d e8	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00051	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00056	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  00059	eb 4c		 jmp	 SHORT $LN1@ResourceRe
$LN2@ResourceRe:

; 567  : 
; 568  : 	LPCTSTR lpszID = OLE2CT_EX(szID, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  0005b	68 00 04 00 00	 push	 1024			; 00000400H
  00060	8b 45 10	 mov	 eax, DWORD PTR _szID$[ebp]
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ?OLE2CT_EX@@YAPB_WPB_WI@Z ; OLE2CT_EX
  00069	83 c4 08	 add	 esp, 8
  0006c	89 45 e0	 mov	 DWORD PTR _lpszID$[ebp], eax

; 569  : 	LPCTSTR lpszType = OLE2CT_EX(szType, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  0006f	68 00 04 00 00	 push	 1024			; 00000400H
  00074	8b 4d 14	 mov	 ecx, DWORD PTR _szType$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?OLE2CT_EX@@YAPB_WPB_WI@Z ; OLE2CT_EX
  0007d	83 c4 08	 add	 esp, 8
  00080	89 45 dc	 mov	 DWORD PTR _lpszType$[ebp], eax

; 570  : #ifndef _UNICODE
; 571  : 	if (lpszID == NULL || lpszType==NULL)
; 572  : 	{
; 573  : 		return E_OUTOFMEMORY;
; 574  : 	}
; 575  : #endif // _UNICODE
; 576  : 	return RegisterFromResource(szFileName, lpszID, lpszType, TRUE);

  00083	6a 01		 push	 1
  00085	8b 55 dc	 mov	 edx, DWORD PTR _lpszType$[ebp]
  00088	52		 push	 edx
  00089	8b 45 e0	 mov	 eax, DWORD PTR _lpszID$[ebp]
  0008c	50		 push	 eax
  0008d	8b 4d 0c	 mov	 ecx, DWORD PTR _szFileName$[ebp]
  00090	51		 push	 ecx
  00091	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?RegisterFromResource@CRegObject@ATL@@IAEJPB_W00H@Z ; ATL::CRegObject::RegisterFromResource
  00099	89 45 d4	 mov	 DWORD PTR $T1[ebp], eax
  0009c	8d 4d e8	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0009f	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  000a4	8b 45 d4	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@ResourceRe:

; 577  : }

  000a7	52		 push	 edx
  000a8	8b cd		 mov	 ecx, ebp
  000aa	50		 push	 eax
  000ab	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@ResourceRe
  000b1	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000b6	58		 pop	 eax
  000b7	5a		 pop	 edx
  000b8	5f		 pop	 edi
  000b9	83 c4 2c	 add	 esp, 44			; 0000002cH
  000bc	3b ec		 cmp	 ebp, esp
  000be	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 10 00	 ret	 16			; 00000010H
  000c9	0f 1f 00	 npad	 3
$LN7@ResourceRe:
  000cc	01 00 00 00	 DD	 1
  000d0	00 00 00 00	 DD	 $LN6@ResourceRe
$LN6@ResourceRe:
  000d4	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000d8	04 00 00 00	 DD	 4
  000dc	00 00 00 00	 DD	 $LN5@ResourceRe
$LN5@ResourceRe:
  000e0	5f		 DB	 95			; 0000005fH
  000e1	41		 DB	 65			; 00000041H
  000e2	74		 DB	 116			; 00000074H
  000e3	6c		 DB	 108			; 0000006cH
  000e4	53		 DB	 83			; 00000053H
  000e5	61		 DB	 97			; 00000061H
  000e6	66		 DB	 102			; 00000066H
  000e7	65		 DB	 101			; 00000065H
  000e8	41		 DB	 65			; 00000041H
  000e9	6c		 DB	 108			; 0000006cH
  000ea	6c		 DB	 108			; 0000006cH
  000eb	6f		 DB	 111			; 0000006fH
  000ec	63		 DB	 99			; 00000063H
  000ed	61		 DB	 97			; 00000061H
  000ee	4d		 DB	 77			; 0000004dH
  000ef	61		 DB	 97			; 00000061H
  000f0	6e		 DB	 110			; 0000006eH
  000f1	61		 DB	 97			; 00000061H
  000f2	67		 DB	 103			; 00000067H
  000f3	65		 DB	 101			; 00000065H
  000f4	72		 DB	 114			; 00000072H
  000f5	00		 DB	 0
?ResourceRegisterSz@CRegObject@ATL@@QAGJPB_W00@Z ENDP	; ATL::CRegObject::ResourceRegisterSz
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?ResourceRegister@CRegObject@ATL@@QAGJPB_WI0@Z
_TEXT	SEGMENT
$T1 = -36						; size = 4
_lpszT$ = -32						; size = 4
__AtlSafeAllocaManager$ = -24				; size = 4
__lpa_ex$ = -16						; size = 4
__lpw_ex$ = -12						; size = 4
__acp_ex$ = -8						; size = 4
__convert_ex$ = -4					; size = 4
_this$ = 8						; size = 4
_szFileName$ = 12					; size = 4
_nID$ = 16						; size = 4
_szType$ = 20						; size = 4
?ResourceRegister@CRegObject@ATL@@QAGJPB_WI0@Z PROC	; ATL::CRegObject::ResourceRegister, COMDAT

; 545  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000e	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00011	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00014	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00017	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001a	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001d	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00020	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00023	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 546  : 	USES_CONVERSION_EX;

  00026	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __convert_ex$[ebp], 0
  0002d	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00032	89 45 f8	 mov	 DWORD PTR __acp_ex$[ebp], eax
  00035	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __lpw_ex$[ebp], 0
  0003c	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __lpa_ex$[ebp], 0
  00043	8d 4d e8	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00046	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>

; 547  : 
; 548  : 	LPCTSTR lpszT = OLE2CT_EX(szType, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  0004b	68 00 04 00 00	 push	 1024			; 00000400H
  00050	8b 45 14	 mov	 eax, DWORD PTR _szType$[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?OLE2CT_EX@@YAPB_WPB_WI@Z ; OLE2CT_EX
  00059	83 c4 08	 add	 esp, 8
  0005c	89 45 e0	 mov	 DWORD PTR _lpszT$[ebp], eax

; 549  : #ifndef _UNICODE
; 550  : 	if (lpszT == NULL)
; 551  : 	{
; 552  : 		return E_OUTOFMEMORY;
; 553  : 	}
; 554  : #endif // _UNICODE
; 555  : 
; 556  : 	return RegisterFromResource(szFileName, MAKEINTRESOURCE(nID), lpszT, TRUE);

  0005f	6a 01		 push	 1
  00061	8b 4d e0	 mov	 ecx, DWORD PTR _lpszT$[ebp]
  00064	51		 push	 ecx
  00065	0f b7 55 10	 movzx	 edx, WORD PTR _nID$[ebp]
  00069	52		 push	 edx
  0006a	8b 45 0c	 mov	 eax, DWORD PTR _szFileName$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	e8 00 00 00 00	 call	 ?RegisterFromResource@CRegObject@ATL@@IAEJPB_W00H@Z ; ATL::CRegObject::RegisterFromResource
  00076	89 45 dc	 mov	 DWORD PTR $T1[ebp], eax
  00079	8d 4d e8	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0007c	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00081	8b 45 dc	 mov	 eax, DWORD PTR $T1[ebp]

; 557  : }

  00084	52		 push	 edx
  00085	8b cd		 mov	 ecx, ebp
  00087	50		 push	 eax
  00088	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@ResourceRe
  0008e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00093	58		 pop	 eax
  00094	5a		 pop	 edx
  00095	83 c4 24	 add	 esp, 36			; 00000024H
  00098	3b ec		 cmp	 ebp, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c2 10 00	 ret	 16			; 00000010H
  000a5	0f 1f 00	 npad	 3
$LN5@ResourceRe:
  000a8	01 00 00 00	 DD	 1
  000ac	00 00 00 00	 DD	 $LN4@ResourceRe
$LN4@ResourceRe:
  000b0	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000b4	04 00 00 00	 DD	 4
  000b8	00 00 00 00	 DD	 $LN3@ResourceRe
$LN3@ResourceRe:
  000bc	5f		 DB	 95			; 0000005fH
  000bd	41		 DB	 65			; 00000041H
  000be	74		 DB	 116			; 00000074H
  000bf	6c		 DB	 108			; 0000006cH
  000c0	53		 DB	 83			; 00000053H
  000c1	61		 DB	 97			; 00000061H
  000c2	66		 DB	 102			; 00000066H
  000c3	65		 DB	 101			; 00000065H
  000c4	41		 DB	 65			; 00000041H
  000c5	6c		 DB	 108			; 0000006cH
  000c6	6c		 DB	 108			; 0000006cH
  000c7	6f		 DB	 111			; 0000006fH
  000c8	63		 DB	 99			; 00000063H
  000c9	61		 DB	 97			; 00000061H
  000ca	4d		 DB	 77			; 0000004dH
  000cb	61		 DB	 97			; 00000061H
  000cc	6e		 DB	 110			; 0000006eH
  000cd	61		 DB	 97			; 00000061H
  000ce	67		 DB	 103			; 00000067H
  000cf	65		 DB	 101			; 00000065H
  000d0	72		 DB	 114			; 00000072H
  000d1	00		 DB	 0
?ResourceRegister@CRegObject@ATL@@QAGJPB_WI0@Z ENDP	; ATL::CRegObject::ResourceRegister
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?StrFromMap@CRegObject@ATL@@QAEPB_WPA_W@Z
_TEXT	SEGMENT
$T1 = -16						; size = 8
_lpsz$ = -8						; size = 4
_this$ = -4						; size = 4
_lpszKey$ = 8						; size = 4
?StrFromMap@CRegObject@ATL@@QAEPB_WPA_W@Z PROC		; ATL::CRegObject::StrFromMap, COMDAT
; _this$ = ecx

; 647  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 648  : 	m_csMap.Lock();

  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	83 c1 10	 add	 ecx, 16			; 00000010H
  00020	e8 00 00 00 00	 call	 ?Lock@CComFakeCriticalSection@ATL@@QAEJXZ ; ATL::CComFakeCriticalSection::Lock

; 649  : 	LPCOLESTR lpsz = m_RepMap.Lookup(lpszKey);

  00025	8d 45 08	 lea	 eax, DWORD PTR _lpszKey$[ebp]
  00028	50		 push	 eax
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	83 c1 04	 add	 ecx, 4
  0002f	e8 00 00 00 00	 call	 ?Lookup@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEPA_WABQA_W@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Lookup
  00034	89 45 f8	 mov	 DWORD PTR _lpsz$[ebp], eax

; 650  : 	if (lpsz == NULL) // not found!!

  00037	83 7d f8 00	 cmp	 DWORD PTR _lpsz$[ebp], 0
  0003b	75 2d		 jne	 SHORT $LN2@StrFromMap

; 651  : 		ATLTRACE(atlTraceRegistrar, 0, _T("Map Entry not found\n"));

  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@BCPDHANH@?$AAM?$AAa?$AAp?$AA?5?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAf@
  00042	6a 00		 push	 0
  00044	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  00049	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  0004e	50		 push	 eax
  0004f	68 8b 02 00 00	 push	 651			; 0000028bH
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00059	8d 4d f0	 lea	 ecx, DWORD PTR $T1[ebp]
  0005c	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00067	83 c4 10	 add	 esp, 16			; 00000010H
$LN2@StrFromMap:

; 652  : 	m_csMap.Unlock();

  0006a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	83 c1 10	 add	 ecx, 16			; 00000010H
  00070	e8 00 00 00 00	 call	 ?Unlock@CComFakeCriticalSection@ATL@@QAEJXZ ; ATL::CComFakeCriticalSection::Unlock

; 653  : 	return lpsz;

  00075	8b 45 f8	 mov	 eax, DWORD PTR _lpsz$[ebp]

; 654  : }

  00078	83 c4 10	 add	 esp, 16			; 00000010H
  0007b	3b ec		 cmp	 ebp, esp
  0007d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 04 00	 ret	 4
?StrFromMap@CRegObject@ATL@@QAEPB_WPA_W@Z ENDP		; ATL::CRegObject::StrFromMap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?ClearReplacements@CRegObject@ATL@@UAGJXZ
_TEXT	SEGMENT
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
?ClearReplacements@CRegObject@ATL@@UAGJXZ PROC		; ATL::CRegObject::ClearReplacements, COMDAT

; 638  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 639  : 	m_csMap.Lock();

  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 10	 add	 ecx, 16			; 00000010H
  00011	e8 00 00 00 00	 call	 ?Lock@CComFakeCriticalSection@ATL@@QAEJXZ ; ATL::CComFakeCriticalSection::Lock

; 640  : 	HRESULT hr = m_RepMap.ClearReplacements();

  00016	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 04	 add	 ecx, 4
  0001c	e8 00 00 00 00	 call	 ?ClearReplacements@CExpansionVector@ATL@@QAEJXZ ; ATL::CExpansionVector::ClearReplacements
  00021	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 641  : 	m_csMap.Unlock();

  00024	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	83 c1 10	 add	 ecx, 16			; 00000010H
  0002a	e8 00 00 00 00	 call	 ?Unlock@CComFakeCriticalSection@ATL@@QAEJXZ ; ATL::CComFakeCriticalSection::Unlock

; 642  : 	return hr;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]

; 643  : }

  00032	83 c4 04	 add	 esp, 4
  00035	3b ec		 cmp	 ebp, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
?ClearReplacements@CRegObject@ATL@@UAGJXZ ENDP		; ATL::CRegObject::ClearReplacements
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?AddReplacement@CRegObject@ATL@@UAGJPB_W0@Z
_TEXT	SEGMENT
tv83 = -44						; size = 4
$T1 = -40						; size = 4
_bRet$ = -36						; size = 4
_lpszT$ = -32						; size = 4
__AtlSafeAllocaManager$ = -24				; size = 4
__lpa_ex$ = -16						; size = 4
__lpw_ex$ = -12						; size = 4
__acp_ex$ = -8						; size = 4
__convert_ex$ = -4					; size = 4
_this$ = 8						; size = 4
_lpszKey$ = 12						; size = 4
_lpszItem$ = 16						; size = 4
?AddReplacement@CRegObject@ATL@@UAGJPB_W0@Z PROC	; ATL::CRegObject::AddReplacement, COMDAT

; 419  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	57		 push	 edi
  00007	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0000a	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd

; 420  : 	if (lpszKey == NULL || lpszItem == NULL)

  00016	83 7d 0c 00	 cmp	 DWORD PTR _lpszKey$[ebp], 0
  0001a	74 06		 je	 SHORT $LN3@AddReplace
  0001c	83 7d 10 00	 cmp	 DWORD PTR _lpszItem$[ebp], 0
  00020	75 0a		 jne	 SHORT $LN2@AddReplace
$LN3@AddReplace:

; 421  : 		return E_INVALIDARG;

  00022	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00027	e9 8c 00 00 00	 jmp	 $LN1@AddReplace
$LN2@AddReplace:

; 422  : 	m_csMap.Lock();

  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 10	 add	 ecx, 16			; 00000010H
  00032	e8 00 00 00 00	 call	 ?Lock@CComFakeCriticalSection@ATL@@QAEJXZ ; ATL::CComFakeCriticalSection::Lock

; 423  : 	USES_CONVERSION_EX;

  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __convert_ex$[ebp], 0
  0003e	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00043	89 45 f8	 mov	 DWORD PTR __acp_ex$[ebp], eax
  00046	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __lpw_ex$[ebp], 0
  0004d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __lpa_ex$[ebp], 0
  00054	8d 4d e8	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00057	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>

; 424  : 
; 425  : 	LPCTSTR lpszT = OLE2CT_EX(lpszKey, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  0005c	68 00 04 00 00	 push	 1024			; 00000400H
  00061	8b 45 0c	 mov	 eax, DWORD PTR _lpszKey$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?OLE2CT_EX@@YAPB_WPB_WI@Z ; OLE2CT_EX
  0006a	83 c4 08	 add	 esp, 8
  0006d	89 45 e0	 mov	 DWORD PTR _lpszT$[ebp], eax

; 426  : 
; 427  : #ifndef _UNICODE
; 428  : 	if(lpszT == NULL)
; 429  : 		return E_OUTOFMEMORY;
; 430  : #endif
; 431  : 
; 432  : 	BOOL bRet = m_RepMap.Add(lpszT, lpszItem);

  00070	8b 4d 10	 mov	 ecx, DWORD PTR _lpszItem$[ebp]
  00073	51		 push	 ecx
  00074	8b 55 e0	 mov	 edx, DWORD PTR _lpszT$[ebp]
  00077	52		 push	 edx
  00078	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	83 c1 04	 add	 ecx, 4
  0007e	e8 00 00 00 00	 call	 ?Add@CExpansionVector@ATL@@QAEHPB_W0@Z ; ATL::CExpansionVector::Add
  00083	89 45 dc	 mov	 DWORD PTR _bRet$[ebp], eax

; 433  : 	m_csMap.Unlock();

  00086	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	83 c1 10	 add	 ecx, 16			; 00000010H
  0008c	e8 00 00 00 00	 call	 ?Unlock@CComFakeCriticalSection@ATL@@QAEJXZ ; ATL::CComFakeCriticalSection::Unlock

; 434  : 	return bRet ? S_OK : E_OUTOFMEMORY;

  00091	83 7d dc 00	 cmp	 DWORD PTR _bRet$[ebp], 0
  00095	74 09		 je	 SHORT $LN5@AddReplace
  00097	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
  0009e	eb 07		 jmp	 SHORT $LN6@AddReplace
$LN5@AddReplace:
  000a0	c7 45 d4 0e 00
	07 80		 mov	 DWORD PTR tv83[ebp], -2147024882 ; 8007000eH
$LN6@AddReplace:
  000a7	8b 45 d4	 mov	 eax, DWORD PTR tv83[ebp]
  000aa	89 45 d8	 mov	 DWORD PTR $T1[ebp], eax
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  000b0	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  000b5	8b 45 d8	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@AddReplace:

; 435  : }

  000b8	52		 push	 edx
  000b9	8b cd		 mov	 ecx, ebp
  000bb	50		 push	 eax
  000bc	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@AddReplace
  000c2	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000c7	58		 pop	 eax
  000c8	5a		 pop	 edx
  000c9	5f		 pop	 edi
  000ca	83 c4 2c	 add	 esp, 44			; 0000002cH
  000cd	3b ec		 cmp	 ebp, esp
  000cf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d4	8b e5		 mov	 esp, ebp
  000d6	5d		 pop	 ebp
  000d7	c2 0c 00	 ret	 12			; 0000000cH
  000da	66 90		 npad	 2
$LN9@AddReplace:
  000dc	01 00 00 00	 DD	 1
  000e0	00 00 00 00	 DD	 $LN8@AddReplace
$LN8@AddReplace:
  000e4	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000e8	04 00 00 00	 DD	 4
  000ec	00 00 00 00	 DD	 $LN7@AddReplace
$LN7@AddReplace:
  000f0	5f		 DB	 95			; 0000005fH
  000f1	41		 DB	 65			; 00000041H
  000f2	74		 DB	 116			; 00000074H
  000f3	6c		 DB	 108			; 0000006cH
  000f4	53		 DB	 83			; 00000053H
  000f5	61		 DB	 97			; 00000061H
  000f6	66		 DB	 102			; 00000066H
  000f7	65		 DB	 101			; 00000065H
  000f8	41		 DB	 65			; 00000041H
  000f9	6c		 DB	 108			; 0000006cH
  000fa	6c		 DB	 108			; 0000006cH
  000fb	6f		 DB	 111			; 0000006fH
  000fc	63		 DB	 99			; 00000063H
  000fd	61		 DB	 97			; 00000061H
  000fe	4d		 DB	 77			; 0000004dH
  000ff	61		 DB	 97			; 00000061H
  00100	6e		 DB	 110			; 0000006eH
  00101	61		 DB	 97			; 00000061H
  00102	67		 DB	 103			; 00000067H
  00103	65		 DB	 101			; 00000065H
  00104	72		 DB	 114			; 00000072H
  00105	00		 DB	 0
?AddReplacement@CRegObject@ATL@@UAGJPB_W0@Z ENDP	; ATL::CRegObject::AddReplacement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?FinalConstruct@CRegObject@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FinalConstruct@CRegObject@ATL@@QAEJXZ PROC		; ATL::CRegObject::FinalConstruct, COMDAT
; _this$ = ecx

; 340  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 341  : 		return m_csMap.Init();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 10	 add	 ecx, 16			; 00000010H
  00014	e8 00 00 00 00	 call	 ?Init@CComFakeCriticalSection@ATL@@QAEJXZ ; ATL::CComFakeCriticalSection::Init

; 342  : 	}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?FinalConstruct@CRegObject@ATL@@QAEJXZ ENDP		; ATL::CRegObject::FinalConstruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ??1CRegObject@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CRegObject@ATL@@UAE@XZ PROC				; ATL::CRegObject::~CRegObject, COMDAT
; _this$ = ecx

; 336  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CRegObject@ATL@@6B@

; 337  : 		ClearReplacements();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ?ClearReplacements@CRegObject@ATL@@UAGJXZ ; ATL::CRegObject::ClearReplacements

; 338  : 	}

  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	83 c1 04	 add	 ecx, 4
  00026	e8 00 00 00 00	 call	 ??1CExpansionVector@ATL@@QAE@XZ ; ATL::CExpansionVector::~CExpansionVector
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??1CRegObject@ATL@@UAE@XZ ENDP				; ATL::CRegObject::~CRegObject
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?Release@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Release@CRegObject@ATL@@UAGKXZ PROC			; ATL::CRegObject::Release, COMDAT

; 330  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 331  : 		ATLASSERT(_T("statically linked in CRegObject is not a com object. Do not callthis function"));

  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_1JM@PMKLGAKF@?$AAs?$AAt?$AAa?$AAt?$AAi?$AAc?$AAa?$AAl?$AAl?$AAy?$AA?5?$AAl?$AAi?$AAn?$AAk@
  00008	85 c0		 test	 eax, eax
  0000a	75 26		 jne	 SHORT $LN3@Release
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_1KC@MLBIPPDL@?$AAL?$AA?$CC?$AAs?$AAt?$AAa?$AAt?$AAi?$AAc?$AAa?$AAl?$AAl?$AAy?$AA?5?$AAl?$AAi@
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00016	6a 00		 push	 0
  00018	68 4b 01 00 00	 push	 331			; 0000014bH
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IGDLHBDL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00022	6a 02		 push	 2
  00024	e8 00 00 00 00	 call	 __CrtDbgReportW
  00029	83 c4 18	 add	 esp, 24			; 00000018H
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	75 01		 jne	 SHORT $LN3@Release
  00031	cc		 int	 3
$LN3@Release:

; 332  : 		return 0;

  00032	33 c0		 xor	 eax, eax

; 333  : 	}

  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
?Release@CRegObject@ATL@@UAGKXZ ENDP			; ATL::CRegObject::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?AddRef@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@CRegObject@ATL@@UAGKXZ PROC			; ATL::CRegObject::AddRef, COMDAT

; 325  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 326  : 		ATLASSERT(_T("statically linked in CRegObject is not a com object. Do not callthis function"));

  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_1JM@PMKLGAKF@?$AAs?$AAt?$AAa?$AAt?$AAi?$AAc?$AAa?$AAl?$AAl?$AAy?$AA?5?$AAl?$AAi?$AAn?$AAk@
  00008	85 c0		 test	 eax, eax
  0000a	75 26		 jne	 SHORT $LN3@AddRef
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_1KC@MLBIPPDL@?$AAL?$AA?$CC?$AAs?$AAt?$AAa?$AAt?$AAi?$AAc?$AAa?$AAl?$AAl?$AAy?$AA?5?$AAl?$AAi@
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00016	6a 00		 push	 0
  00018	68 46 01 00 00	 push	 326			; 00000146H
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IGDLHBDL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00022	6a 02		 push	 2
  00024	e8 00 00 00 00	 call	 __CrtDbgReportW
  00029	83 c4 18	 add	 esp, 24			; 00000018H
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	75 01		 jne	 SHORT $LN3@AddRef
  00031	cc		 int	 3
$LN3@AddRef:

; 327  : 		return 1;

  00032	b8 01 00 00 00	 mov	 eax, 1

; 328  : 	}

  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
?AddRef@CRegObject@ATL@@UAGKXZ ENDP			; ATL::CRegObject::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?QueryInterface@CRegObject@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?QueryInterface@CRegObject@ATL@@UAGJABU_GUID@@PAPAX@Z PROC ; ATL::CRegObject::QueryInterface, COMDAT

; 319  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 320  : 		ATLASSERT(_T("statically linked in CRegObject is not a com object. Do not callthis function"));

  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_1JM@PMKLGAKF@?$AAs?$AAt?$AAa?$AAt?$AAi?$AAc?$AAa?$AAl?$AAl?$AAy?$AA?5?$AAl?$AAi?$AAn?$AAk@
  00008	85 c0		 test	 eax, eax
  0000a	75 26		 jne	 SHORT $LN3@QueryInter
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_1KC@MLBIPPDL@?$AAL?$AA?$CC?$AAs?$AAt?$AAa?$AAt?$AAi?$AAc?$AAa?$AAl?$AAl?$AAy?$AA?5?$AAl?$AAi@
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00016	6a 00		 push	 0
  00018	68 40 01 00 00	 push	 320			; 00000140H
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IGDLHBDL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00022	6a 02		 push	 2
  00024	e8 00 00 00 00	 call	 __CrtDbgReportW
  00029	83 c4 18	 add	 esp, 24			; 00000018H
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	75 01		 jne	 SHORT $LN3@QueryInter
  00031	cc		 int	 3
$LN3@QueryInter:

; 321  : 		return E_NOTIMPL;

  00032	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H

; 322  : 	}

  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	5d		 pop	 ebp
  0003f	c2 0c 00	 ret	 12			; 0000000cH
?QueryInterface@CRegObject@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::CRegObject::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?Detach@CParseBuffer@CRegParser@ATL@@QAEPA_WXZ
_TEXT	SEGMENT
_lp$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@CParseBuffer@CRegParser@ATL@@QAEPA_WXZ PROC	; ATL::CRegParser::CParseBuffer::Detach, COMDAT
; _this$ = ecx

; 302  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 303  : 			LPTSTR lp = p;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0001d	89 4d f8	 mov	 DWORD PTR _lp$[ebp], ecx

; 304  : 			p = NULL;

  00020	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00023	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 305  : 			nSize = nPos = 0;

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 306  : 			return lp;

  0003d	8b 45 f8	 mov	 eax, DWORD PTR _lp$[ebp]

; 307  : 		}

  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
?Detach@CParseBuffer@CRegParser@ATL@@QAEPA_WXZ ENDP	; ATL::CRegParser::CParseBuffer::Detach
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?AddString@CParseBuffer@CRegParser@ATL@@QAEHPB_W@Z
_TEXT	SEGMENT
$T1 = -44						; size = 4
$T2 = -40						; size = 4
_lpszT$ = -36						; size = 4
__AtlSafeAllocaManager$ = -28				; size = 4
__lpa_ex$ = -20						; size = 4
__lpw_ex$ = -16						; size = 4
__acp_ex$ = -12						; size = 4
__convert_ex$ = -8					; size = 4
_this$ = -4						; size = 4
_lpsz$ = 8						; size = 4
?AddString@CParseBuffer@CRegParser@ATL@@QAEHPB_W@Z PROC	; ATL::CRegParser::CParseBuffer::AddString, COMDAT
; _this$ = ecx

; 288  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0000b	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 289  : 			if (lpsz == NULL)

  0001b	83 7d 08 00	 cmp	 DWORD PTR _lpsz$[ebp], 0
  0001f	75 04		 jne	 SHORT $LN2@AddString

; 290  : 			{
; 291  : 				return FALSE;

  00021	33 c0		 xor	 eax, eax
  00023	eb 7a		 jmp	 SHORT $LN1@AddString
$LN2@AddString:

; 292  : 			}
; 293  : 			USES_CONVERSION_EX;

  00025	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __convert_ex$[ebp], 0
  0002c	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00031	89 45 f4	 mov	 DWORD PTR __acp_ex$[ebp], eax
  00034	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __lpw_ex$[ebp], 0
  0003b	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __lpa_ex$[ebp], 0
  00042	8d 4d e4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>

; 294  : 			LPCTSTR lpszT = OLE2CT_EX(lpsz, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  0004a	68 00 04 00 00	 push	 1024			; 00000400H
  0004f	8b 45 08	 mov	 eax, DWORD PTR _lpsz$[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?OLE2CT_EX@@YAPB_WPB_WI@Z ; OLE2CT_EX
  00058	83 c4 08	 add	 esp, 8
  0005b	89 45 dc	 mov	 DWORD PTR _lpszT$[ebp], eax

; 295  : 			if (lpszT == NULL)

  0005e	83 7d dc 00	 cmp	 DWORD PTR _lpszT$[ebp], 0
  00062	75 14		 jne	 SHORT $LN3@AddString

; 296  : 			{
; 297  : 				return FALSE;

  00064	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  0006b	8d 4d e4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0006e	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00073	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  00076	eb 27		 jmp	 SHORT $LN1@AddString
$LN3@AddString:

; 298  : 			}
; 299  : 			return Append(lpszT, (int)_tcslen(lpszT));

  00078	8b 4d dc	 mov	 ecx, DWORD PTR _lpszT$[ebp]
  0007b	51		 push	 ecx
  0007c	e8 00 00 00 00	 call	 _wcslen
  00081	83 c4 04	 add	 esp, 4
  00084	50		 push	 eax
  00085	8b 55 dc	 mov	 edx, DWORD PTR _lpszT$[ebp]
  00088	52		 push	 edx
  00089	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?Append@CParseBuffer@CRegParser@ATL@@QAEHPB_WH@Z ; ATL::CRegParser::CParseBuffer::Append
  00091	89 45 d4	 mov	 DWORD PTR $T1[ebp], eax
  00094	8d 4d e4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00097	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  0009c	8b 45 d4	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@AddString:

; 300  : 		}

  0009f	52		 push	 edx
  000a0	8b cd		 mov	 ecx, ebp
  000a2	50		 push	 eax
  000a3	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@AddString
  000a9	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ae	58		 pop	 eax
  000af	5a		 pop	 edx
  000b0	5f		 pop	 edi
  000b1	83 c4 2c	 add	 esp, 44			; 0000002cH
  000b4	3b ec		 cmp	 ebp, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c2 04 00	 ret	 4
  000c1	0f 1f 00	 npad	 3
$LN7@AddString:
  000c4	01 00 00 00	 DD	 1
  000c8	00 00 00 00	 DD	 $LN6@AddString
$LN6@AddString:
  000cc	e4 ff ff ff	 DD	 -28			; ffffffe4H
  000d0	04 00 00 00	 DD	 4
  000d4	00 00 00 00	 DD	 $LN5@AddString
$LN5@AddString:
  000d8	5f		 DB	 95			; 0000005fH
  000d9	41		 DB	 65			; 00000041H
  000da	74		 DB	 116			; 00000074H
  000db	6c		 DB	 108			; 0000006cH
  000dc	53		 DB	 83			; 00000053H
  000dd	61		 DB	 97			; 00000061H
  000de	66		 DB	 102			; 00000066H
  000df	65		 DB	 101			; 00000065H
  000e0	41		 DB	 65			; 00000041H
  000e1	6c		 DB	 108			; 0000006cH
  000e2	6c		 DB	 108			; 0000006cH
  000e3	6f		 DB	 111			; 0000006fH
  000e4	63		 DB	 99			; 00000063H
  000e5	61		 DB	 97			; 00000061H
  000e6	4d		 DB	 77			; 0000004dH
  000e7	61		 DB	 97			; 00000061H
  000e8	6e		 DB	 110			; 0000006eH
  000e9	61		 DB	 97			; 00000061H
  000ea	67		 DB	 103			; 00000067H
  000eb	65		 DB	 101			; 00000065H
  000ec	72		 DB	 114			; 00000072H
  000ed	00		 DB	 0
?AddString@CParseBuffer@CRegParser@ATL@@QAEHPB_W@Z ENDP	; ATL::CRegParser::CParseBuffer::AddString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?AddChar@CParseBuffer@CRegParser@ATL@@QAEHPB_W@Z
_TEXT	SEGMENT
_nChars$ = -8						; size = 4
_this$ = -4						; size = 4
_pch$ = 8						; size = 4
?AddChar@CParseBuffer@CRegParser@ATL@@QAEHPB_W@Z PROC	; ATL::CRegParser::CParseBuffer::AddChar, COMDAT
; _this$ = ecx

; 278  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 279  : #ifndef _UNICODE
; 280  : 			int nChars = int(CharNext(pch) - pch);
; 281  : #else
; 282  : 			int nChars = 1;

  00017	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _nChars$[ebp], 1

; 283  : #endif
; 284  : 			return Append(pch, nChars);

  0001e	8b 45 f8	 mov	 eax, DWORD PTR _nChars$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _pch$[ebp]
  00025	51		 push	 ecx
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?Append@CParseBuffer@CRegParser@ATL@@QAEHPB_WH@Z ; ATL::CRegParser::CParseBuffer::Append

; 285  : 
; 286  : 		}

  0002e	83 c4 08	 add	 esp, 8
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
?AddChar@CParseBuffer@CRegParser@ATL@@QAEHPB_W@Z ENDP	; ATL::CRegParser::CParseBuffer::AddChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?Append@CParseBuffer@CRegParser@ATL@@QAEHPB_WH@Z
_TEXT	SEGMENT
_pTemp$1 = -12						; size = 4
_newSize$ = -8						; size = 4
_this$ = -4						; size = 4
_pch$ = 8						; size = 4
_nChars$ = 12						; size = 4
?Append@CParseBuffer@CRegParser@ATL@@QAEHPB_WH@Z PROC	; ATL::CRegParser::CParseBuffer::Append, COMDAT
; _this$ = ecx

; 245  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 246  : 			ATLASSERT(p != NULL);

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00025	75 26		 jne	 SHORT $LN4@Append
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1O@JFMKDNFA@?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00031	6a 00		 push	 0
  00033	68 f6 00 00 00	 push	 246			; 000000f6H
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IGDLHBDL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0003d	6a 02		 push	 2
  0003f	e8 00 00 00 00	 call	 __CrtDbgReportW
  00044	83 c4 18	 add	 esp, 24			; 00000018H
  00047	83 f8 01	 cmp	 eax, 1
  0004a	75 01		 jne	 SHORT $LN4@Append
  0004c	cc		 int	 3
$LN4@Append:

; 247  : 			ATLASSUME(p != NULL);

  0004d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00050	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00054	75 26		 jne	 SHORT $LN2@Append
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1O@JFMKDNFA@?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00060	6a 00		 push	 0
  00062	68 f7 00 00 00	 push	 247			; 000000f7H
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IGDLHBDL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0006c	6a 02		 push	 2
  0006e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00073	83 c4 18	 add	 esp, 24			; 00000018H
  00076	83 f8 01	 cmp	 eax, 1
  00079	75 01		 jne	 SHORT $LN2@Append
  0007b	cc		 int	 3
$LN2@Append:
  0007c	33 c9		 xor	 ecx, ecx
  0007e	75 cd		 jne	 SHORT $LN4@Append

; 248  : 			int newSize = nPos + nChars + 1;

  00080	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00083	8b 02		 mov	 eax, DWORD PTR [edx]
  00085	8b 4d 0c	 mov	 ecx, DWORD PTR _nChars$[ebp]
  00088	8d 54 08 01	 lea	 edx, DWORD PTR [eax+ecx+1]
  0008c	89 55 f8	 mov	 DWORD PTR _newSize$[ebp], edx

; 249  : 			if ((newSize <= nPos) || (newSize <= nChars))

  0008f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d f8	 mov	 ecx, DWORD PTR _newSize$[ebp]
  00095	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00097	7e 08		 jle	 SHORT $LN8@Append
  00099	8b 55 f8	 mov	 edx, DWORD PTR _newSize$[ebp]
  0009c	3b 55 0c	 cmp	 edx, DWORD PTR _nChars$[ebp]
  0009f	7f 07		 jg	 SHORT $LN7@Append
$LN8@Append:

; 250  : 				return FALSE;

  000a1	33 c0		 xor	 eax, eax
  000a3	e9 e8 00 00 00	 jmp	 $LN1@Append
$LN7@Append:

; 251  : 
; 252  : 			if (newSize >= nSize)

  000a8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ab	8b 4d f8	 mov	 ecx, DWORD PTR _newSize$[ebp]
  000ae	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  000b1	7c 5f		 jl	 SHORT $LN9@Append
$LN5@Append:

; 253  : 			{
; 254  : 				while (newSize >= nSize) {

  000b3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b6	8b 45 f8	 mov	 eax, DWORD PTR _newSize$[ebp]
  000b9	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  000bc	7c 23		 jl	 SHORT $LN6@Append

; 255  : 					if (nSize > INT_MAX / 2)

  000be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	81 79 04 ff ff
	ff 3f		 cmp	 DWORD PTR [ecx+4], 1073741823 ; 3fffffffH
  000c8	7e 07		 jle	 SHORT $LN10@Append

; 256  : 					return FALSE;

  000ca	33 c0		 xor	 eax, eax
  000cc	e9 bf 00 00 00	 jmp	 $LN1@Append
$LN10@Append:

; 257  : 					nSize *= 2;

  000d1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d4	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000d7	d1 e0		 shl	 eax, 1
  000d9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 258  : 				}

  000df	eb d2		 jmp	 SHORT $LN5@Append
$LN6@Append:

; 259  : 				LPTSTR pTemp = (LPTSTR)::ATL::AtlCoTaskMemRecalloc(p, nSize, sizeof(TCHAR));

  000e1	6a 02		 push	 2
  000e3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e6	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000e9	50		 push	 eax
  000ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000f0	52		 push	 edx
  000f1	e8 00 00 00 00	 call	 ?AtlCoTaskMemRecalloc@ATL@@YAPAXPAXKK@Z ; ATL::AtlCoTaskMemRecalloc
  000f6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f9	89 45 f4	 mov	 DWORD PTR _pTemp$1[ebp], eax

; 260  : 				if (pTemp == NULL)

  000fc	83 7d f4 00	 cmp	 DWORD PTR _pTemp$1[ebp], 0
  00100	75 07		 jne	 SHORT $LN11@Append

; 261  : 					return FALSE;

  00102	33 c0		 xor	 eax, eax
  00104	e9 87 00 00 00	 jmp	 $LN1@Append
$LN11@Append:

; 262  : 				p = pTemp;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d f4	 mov	 ecx, DWORD PTR _pTemp$1[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN9@Append:

; 263  : 			}
; 264  : 			if ((nPos < 0) || (nPos >= nSize) || nSize - nPos > nSize)

  00112	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00115	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00118	7c 20		 jl	 SHORT $LN13@Append
  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00120	8b 10		 mov	 edx, DWORD PTR [eax]
  00122	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00125	7d 13		 jge	 SHORT $LN13@Append
  00127	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0012a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00130	2b 11		 sub	 edx, DWORD PTR [ecx]
  00132	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00135	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00138	7e 04		 jle	 SHORT $LN12@Append
$LN13@Append:

; 265  : 				return FALSE;

  0013a	33 c0		 xor	 eax, eax
  0013c	eb 52		 jmp	 SHORT $LN1@Append
$LN12@Append:

; 266  : 
; 267  : #pragma warning(push)
; 268  : #pragma warning(disable: 22008)
; 269  : 			/* Prefast false warning is fired here despite the all above checks */
; 270  : 			Checked::memcpy_s(p + nPos, (nSize-nPos) * sizeof(TCHAR), pch, nChars * sizeof(TCHAR));

  0013e	8b 4d 0c	 mov	 ecx, DWORD PTR _nChars$[ebp]
  00141	d1 e1		 shl	 ecx, 1
  00143	51		 push	 ecx
  00144	8b 55 08	 mov	 edx, DWORD PTR _pch$[ebp]
  00147	52		 push	 edx
  00148	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0014b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00151	2b 11		 sub	 edx, DWORD PTR [ecx]
  00153	d1 e2		 shl	 edx, 1
  00155	52		 push	 edx
  00156	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00159	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0015e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00161	8d 0c 48	 lea	 ecx, DWORD PTR [eax+ecx*2]
  00164	51		 push	 ecx
  00165	e8 00 00 00 00	 call	 ?memcpy_s@Checked@ATL@@YAXPAXIPBXI@Z ; ATL::Checked::memcpy_s
  0016a	83 c4 10	 add	 esp, 16			; 00000010H

; 271  : 			nPos += nChars;

  0016d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00170	8b 02		 mov	 eax, DWORD PTR [edx]
  00172	03 45 0c	 add	 eax, DWORD PTR _nChars$[ebp]
  00175	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00178	89 01		 mov	 DWORD PTR [ecx], eax

; 272  : 			*(p + nPos) = _T('\0');

  0017a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0017d	8b 02		 mov	 eax, DWORD PTR [edx]
  0017f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00182	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00185	33 c9		 xor	 ecx, ecx
  00187	66 89 0c 42	 mov	 WORD PTR [edx+eax*2], cx

; 273  : #pragma warning(pop)
; 274  : 			return TRUE;

  0018b	b8 01 00 00 00	 mov	 eax, 1
$LN1@Append:

; 275  : 		}

  00190	83 c4 0c	 add	 esp, 12			; 0000000cH
  00193	3b ec		 cmp	 ebp, esp
  00195	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0019a	8b e5		 mov	 esp, ebp
  0019c	5d		 pop	 ebp
  0019d	c2 08 00	 ret	 8
?Append@CParseBuffer@CRegParser@ATL@@QAEHPB_WH@Z ENDP	; ATL::CRegParser::CParseBuffer::Append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ??1CParseBuffer@CRegParser@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CParseBuffer@CRegParser@ATL@@QAE@XZ PROC		; ATL::CRegParser::CParseBuffer::~CParseBuffer, COMDAT
; _this$ = ecx

; 239  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 240  : 			CoTaskMemFree(p);

  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00017	51		 push	 ecx
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoTaskMemFree@4
  0001e	3b f4		 cmp	 esi, esp
  00020	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 241  : 		}

  00025	5e		 pop	 esi
  00026	83 c4 04	 add	 esp, 4
  00029	3b ec		 cmp	 ebp, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
??1CParseBuffer@CRegParser@ATL@@QAE@XZ ENDP		; ATL::CRegParser::CParseBuffer::~CParseBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ??0CParseBuffer@CRegParser@ATL@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nInitial$ = 8						; size = 4
??0CParseBuffer@CRegParser@ATL@@QAE@H@Z PROC		; ATL::CRegParser::CParseBuffer::CParseBuffer, COMDAT
; _this$ = ecx

; 228  : 		CParseBuffer(_In_ int nInitial)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 229  : 		{
; 230  : 			if (nInitial < 100)

  0000e	83 7d 08 64	 cmp	 DWORD PTR _nInitial$[ebp], 100 ; 00000064H
  00012	7d 07		 jge	 SHORT $LN2@CParseBuff

; 231  : 				nInitial = 1000;

  00014	c7 45 08 e8 03
	00 00		 mov	 DWORD PTR _nInitial$[ebp], 1000 ; 000003e8H
$LN2@CParseBuff:

; 232  : 			nPos = 0;

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 233  : 			nSize = nInitial;

  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	8b 55 08	 mov	 edx, DWORD PTR _nInitial$[ebp]
  0002a	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 234  : 			p = (LPTSTR) ::ATL::AtlCoTaskMemCAlloc(nSize,static_cast<ULONG>(sizeof(TCHAR)));

  0002d	6a 02		 push	 2
  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ?AtlCoTaskMemCAlloc@ATL@@YAPAXKK@Z ; ATL::AtlCoTaskMemCAlloc
  0003b	83 c4 08	 add	 esp, 8
  0003e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00041	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 235  : 			if (p != NULL)

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0004b	74 0b		 je	 SHORT $LN1@CParseBuff

; 236  : 				*p = _T('\0');

  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00053	33 c0		 xor	 eax, eax
  00055	66 89 02	 mov	 WORD PTR [edx], ax
$LN1@CParseBuff:

; 237  : 		}

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
??0CParseBuffer@CRegParser@ATL@@QAE@H@Z ENDP		; ATL::CRegParser::CParseBuffer::CParseBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?VTFromRegType@CRegParser@ATL@@KAHPB_WAAG@Z
_TEXT	SEGMENT
_szValueType$ = 8					; size = 4
_vt$ = 12						; size = 4
?VTFromRegType@CRegParser@ATL@@KAHPB_WAAG@Z PROC	; ATL::CRegParser::VTFromRegType, COMDAT

; 756  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 757  : 	if (!lstrcmpi(szValueType, szStringVal))

  00004	8b f4		 mov	 esi, esp
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ?szStringVal@ATL@@3QB_WB ; ATL::szStringVal
  0000b	50		 push	 eax
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _szValueType$[ebp]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpiW@8
  00016	3b f4		 cmp	 esi, esp
  00018	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001d	85 c0		 test	 eax, eax
  0001f	75 15		 jne	 SHORT $LN2@VTFromRegT

; 758  : 	{
; 759  : 		vt = VT_BSTR;

  00021	ba 08 00 00 00	 mov	 edx, 8
  00026	8b 45 0c	 mov	 eax, DWORD PTR _vt$[ebp]
  00029	66 89 10	 mov	 WORD PTR [eax], dx

; 760  : 		return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1
  00031	e9 99 00 00 00	 jmp	 $LN1@VTFromRegT
$LN2@VTFromRegT:

; 761  : 	}
; 762  : 
; 763  : 	if (!lstrcmpi(szValueType, multiszStringVal))

  00036	8b f4		 mov	 esi, esp
  00038	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?multiszStringVal@ATL@@3QB_WB ; ATL::multiszStringVal
  0003e	51		 push	 ecx
  0003f	8b 55 08	 mov	 edx, DWORD PTR _szValueType$[ebp]
  00042	52		 push	 edx
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpiW@8
  00049	3b f4		 cmp	 esi, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	85 c0		 test	 eax, eax
  00052	75 12		 jne	 SHORT $LN3@VTFromRegT

; 764  : 	{
; 765  : 		vt = VT_BSTR | VT_BYREF;

  00054	b8 08 40 00 00	 mov	 eax, 16392		; 00004008H
  00059	8b 4d 0c	 mov	 ecx, DWORD PTR _vt$[ebp]
  0005c	66 89 01	 mov	 WORD PTR [ecx], ax

; 766  : 		return TRUE;

  0005f	b8 01 00 00 00	 mov	 eax, 1
  00064	eb 69		 jmp	 SHORT $LN1@VTFromRegT
$LN3@VTFromRegT:

; 767  : 	}
; 768  : 
; 769  : 	if (!lstrcmpi(szValueType, szDwordVal))

  00066	8b f4		 mov	 esi, esp
  00068	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?szDwordVal@ATL@@3QB_WB ; ATL::szDwordVal
  0006e	52		 push	 edx
  0006f	8b 45 08	 mov	 eax, DWORD PTR _szValueType$[ebp]
  00072	50		 push	 eax
  00073	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpiW@8
  00079	3b f4		 cmp	 esi, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	85 c0		 test	 eax, eax
  00082	75 12		 jne	 SHORT $LN4@VTFromRegT

; 770  : 	{
; 771  : 		vt = VT_UI4;

  00084	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  00089	8b 55 0c	 mov	 edx, DWORD PTR _vt$[ebp]
  0008c	66 89 0a	 mov	 WORD PTR [edx], cx

; 772  : 		return TRUE;

  0008f	b8 01 00 00 00	 mov	 eax, 1
  00094	eb 39		 jmp	 SHORT $LN1@VTFromRegT
$LN4@VTFromRegT:

; 773  : 	}
; 774  : 
; 775  : 	if (!lstrcmpi(szValueType, szBinaryVal))

  00096	8b f4		 mov	 esi, esp
  00098	a1 00 00 00 00	 mov	 eax, DWORD PTR ?szBinaryVal@ATL@@3QB_WB ; ATL::szBinaryVal
  0009d	50		 push	 eax
  0009e	8b 4d 08	 mov	 ecx, DWORD PTR _szValueType$[ebp]
  000a1	51		 push	 ecx
  000a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpiW@8
  000a8	3b f4		 cmp	 esi, esp
  000aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000af	85 c0		 test	 eax, eax
  000b1	75 12		 jne	 SHORT $LN5@VTFromRegT

; 776  : 	{
; 777  : 		vt = VT_UI1;

  000b3	ba 11 00 00 00	 mov	 edx, 17			; 00000011H
  000b8	8b 45 0c	 mov	 eax, DWORD PTR _vt$[ebp]
  000bb	66 89 10	 mov	 WORD PTR [eax], dx

; 778  : 		return TRUE;

  000be	b8 01 00 00 00	 mov	 eax, 1
  000c3	eb 0a		 jmp	 SHORT $LN1@VTFromRegT
$LN5@VTFromRegT:

; 779  : 	}
; 780  : 
; 781  : 	vt = VT_EMPTY;

  000c5	33 c9		 xor	 ecx, ecx
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _vt$[ebp]
  000ca	66 89 0a	 mov	 WORD PTR [edx], cx

; 782  : 	return FALSE;

  000cd	33 c0		 xor	 eax, eax
$LN1@VTFromRegT:

; 783  : }

  000cf	5e		 pop	 esi
  000d0	3b ec		 cmp	 ebp, esp
  000d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d7	5d		 pop	 ebp
  000d8	c3		 ret	 0
?VTFromRegType@CRegParser@ATL@@KAHPB_WAAG@Z ENDP	; ATL::CRegParser::VTFromRegType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?ChToByte@CRegParser@ATL@@KAE_W@Z
_TEXT	SEGMENT
tv65 = -12						; size = 4
$T1 = -8						; size = 8
_ch$ = 8						; size = 2
?ChToByte@CRegParser@ATL@@KAE_W@Z PROC			; ATL::CRegParser::ChToByte, COMDAT

; 786  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 787  : 	switch (ch)

  0001b	0f b7 45 08	 movzx	 eax, WORD PTR _ch$[ebp]
  0001f	89 45 f4	 mov	 DWORD PTR tv65[ebp], eax
  00022	8b 4d f4	 mov	 ecx, DWORD PTR tv65[ebp]
  00025	83 e9 30	 sub	 ecx, 48			; 00000030H
  00028	89 4d f4	 mov	 DWORD PTR tv65[ebp], ecx
  0002b	83 7d f4 36	 cmp	 DWORD PTR tv65[ebp], 54	; 00000036H
  0002f	77 2c		 ja	 SHORT $LN7@ChToByte
  00031	8b 55 f4	 mov	 edx, DWORD PTR tv65[ebp]
  00034	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN10@ChToByte[edx]
  0003b	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN11@ChToByte[eax*4]
$LN4@ChToByte:

; 788  : 	{
; 789  : 		case '0':
; 790  : 		case '1':
; 791  : 		case '2':
; 792  : 		case '3':
; 793  : 		case '4':
; 794  : 		case '5':
; 795  : 		case '6':
; 796  : 		case '7':
; 797  : 		case '8':
; 798  : 		case '9':
; 799  : 				return (BYTE) (ch - '0');

  00042	0f b7 45 08	 movzx	 eax, WORD PTR _ch$[ebp]
  00046	83 e8 30	 sub	 eax, 48			; 00000030H
  00049	eb 70		 jmp	 SHORT $LN1@ChToByte
$LN5@ChToByte:

; 800  : 		case 'A':
; 801  : 		case 'B':
; 802  : 		case 'C':
; 803  : 		case 'D':
; 804  : 		case 'E':
; 805  : 		case 'F':
; 806  : 				return (BYTE) (10 + (ch - 'A'));

  0004b	0f b7 45 08	 movzx	 eax, WORD PTR _ch$[ebp]
  0004f	83 e8 37	 sub	 eax, 55			; 00000037H
  00052	eb 67		 jmp	 SHORT $LN1@ChToByte
$LN6@ChToByte:

; 807  : 		case 'a':
; 808  : 		case 'b':
; 809  : 		case 'c':
; 810  : 		case 'd':
; 811  : 		case 'e':
; 812  : 		case 'f':
; 813  : 				return (BYTE) (10 + (ch - 'a'));

  00054	0f b7 45 08	 movzx	 eax, WORD PTR _ch$[ebp]
  00058	83 e8 57	 sub	 eax, 87			; 00000057H
  0005b	eb 5e		 jmp	 SHORT $LN1@ChToByte
$LN7@ChToByte:

; 814  : 		default:
; 815  : 				ATLASSERT(FALSE);

  0005d	33 c9		 xor	 ecx, ecx
  0005f	75 26		 jne	 SHORT $LN9@ChToByte
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0006b	6a 00		 push	 0
  0006d	68 2f 03 00 00	 push	 815			; 0000032fH
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IGDLHBDL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00077	6a 02		 push	 2
  00079	e8 00 00 00 00	 call	 __CrtDbgReportW
  0007e	83 c4 18	 add	 esp, 24			; 00000018H
  00081	83 f8 01	 cmp	 eax, 1
  00084	75 01		 jne	 SHORT $LN9@ChToByte
  00086	cc		 int	 3
$LN9@ChToByte:

; 816  : 				ATLTRACE(atlTraceRegistrar, 0, _T("Bogus value %Tc passed as binary Hex value\n"), ch);

  00087	0f b7 45 08	 movzx	 eax, WORD PTR _ch$[ebp]
  0008b	50		 push	 eax
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1FI@KMIOGKOO@?$AAB?$AAo?$AAg?$AAu?$AAs?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF?$AAT?$AAc@
  00091	6a 00		 push	 0
  00093	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  00098	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  0009d	50		 push	 eax
  0009e	68 30 03 00 00	 push	 816			; 00000330H
  000a3	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a8	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  000ab	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000b0	50		 push	 eax
  000b1	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000b6	83 c4 14	 add	 esp, 20			; 00000014H

; 817  : 				return 0;

  000b9	32 c0		 xor	 al, al
$LN1@ChToByte:

; 818  : 	}
; 819  : }

  000bb	83 c4 0c	 add	 esp, 12			; 0000000cH
  000be	3b ec		 cmp	 ebp, esp
  000c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c5	8b e5		 mov	 esp, ebp
  000c7	5d		 pop	 ebp
  000c8	c3		 ret	 0
  000c9	0f 1f 00	 npad	 3
$LN11@ChToByte:
  000cc	00 00 00 00	 DD	 $LN4@ChToByte
  000d0	00 00 00 00	 DD	 $LN5@ChToByte
  000d4	00 00 00 00	 DD	 $LN6@ChToByte
  000d8	00 00 00 00	 DD	 $LN7@ChToByte
$LN10@ChToByte:
  000dc	00		 DB	 0
  000dd	00		 DB	 0
  000de	00		 DB	 0
  000df	00		 DB	 0
  000e0	00		 DB	 0
  000e1	00		 DB	 0
  000e2	00		 DB	 0
  000e3	00		 DB	 0
  000e4	00		 DB	 0
  000e5	00		 DB	 0
  000e6	03		 DB	 3
  000e7	03		 DB	 3
  000e8	03		 DB	 3
  000e9	03		 DB	 3
  000ea	03		 DB	 3
  000eb	03		 DB	 3
  000ec	03		 DB	 3
  000ed	01		 DB	 1
  000ee	01		 DB	 1
  000ef	01		 DB	 1
  000f0	01		 DB	 1
  000f1	01		 DB	 1
  000f2	01		 DB	 1
  000f3	03		 DB	 3
  000f4	03		 DB	 3
  000f5	03		 DB	 3
  000f6	03		 DB	 3
  000f7	03		 DB	 3
  000f8	03		 DB	 3
  000f9	03		 DB	 3
  000fa	03		 DB	 3
  000fb	03		 DB	 3
  000fc	03		 DB	 3
  000fd	03		 DB	 3
  000fe	03		 DB	 3
  000ff	03		 DB	 3
  00100	03		 DB	 3
  00101	03		 DB	 3
  00102	03		 DB	 3
  00103	03		 DB	 3
  00104	03		 DB	 3
  00105	03		 DB	 3
  00106	03		 DB	 3
  00107	03		 DB	 3
  00108	03		 DB	 3
  00109	03		 DB	 3
  0010a	03		 DB	 3
  0010b	03		 DB	 3
  0010c	03		 DB	 3
  0010d	02		 DB	 2
  0010e	02		 DB	 2
  0010f	02		 DB	 2
  00110	02		 DB	 2
  00111	02		 DB	 2
  00112	02		 DB	 2
?ChToByte@CRegParser@ATL@@KAE_W@Z ENDP			; ATL::CRegParser::ChToByte
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PA_W@Z
_TEXT	SEGMENT
_i$1 = -4						; size = 4
_szToken$ = 8						; size = 4
?HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PA_W@Z PROC ; ATL::CRegParser::HKeyFromString, COMDAT

; 822  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 823  : 	struct keymap
; 824  : 	{
; 825  : 		LPCTSTR lpsz;
; 826  : 		HKEY hkey;
; 827  : 	};
; 828  : 	static const keymap map[] = {
; 829  : 		{_T("HKCR"), HKEY_CLASSES_ROOT},
; 830  : 		{_T("HKCU"), HKEY_CURRENT_USER},
; 831  : 		{_T("HKLM"), HKEY_LOCAL_MACHINE},
; 832  : 		{_T("HKU"),  HKEY_USERS},
; 833  : 		{_T("HKPD"), HKEY_PERFORMANCE_DATA},
; 834  : 		{_T("HKDD"), HKEY_DYN_DATA},
; 835  : 		{_T("HKCC"), HKEY_CURRENT_CONFIG},
; 836  : 		{_T("HKEY_CLASSES_ROOT"), HKEY_CLASSES_ROOT},
; 837  : 		{_T("HKEY_CURRENT_USER"), HKEY_CURRENT_USER},
; 838  : 		{_T("HKEY_LOCAL_MACHINE"), HKEY_LOCAL_MACHINE},
; 839  : 		{_T("HKEY_USERS"), HKEY_USERS},
; 840  : 		{_T("HKEY_PERFORMANCE_DATA"), HKEY_PERFORMANCE_DATA},
; 841  : 		{_T("HKEY_DYN_DATA"), HKEY_DYN_DATA},
; 842  : 		{_T("HKEY_CURRENT_CONFIG"), HKEY_CURRENT_CONFIG}
; 843  : 	};
; 844  : 
; 845  : 	for (int i=0;i<sizeof(map)/sizeof(keymap);i++)

  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00013	eb 09		 jmp	 SHORT $LN4@HKeyFromSt
$LN2@HKeyFromSt:
  00015	8b 45 fc	 mov	 eax, DWORD PTR _i$1[ebp]
  00018	83 c0 01	 add	 eax, 1
  0001b	89 45 fc	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@HKeyFromSt:
  0001e	83 7d fc 0e	 cmp	 DWORD PTR _i$1[ebp], 14	; 0000000eH
  00022	73 30		 jae	 SHORT $LN3@HKeyFromSt

; 846  : 	{
; 847  : 		if (!lstrcmpi(szToken, map[i].lpsz))

  00024	8b f4		 mov	 esi, esp
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _i$1[ebp]
  00029	8b 14 cd 00 00
	00 00		 mov	 edx, DWORD PTR ?map@?1??HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PA_W@Z@4QBUkeymap@?1??123@KAPAU4@0@Z@B[ecx*8]
  00030	52		 push	 edx
  00031	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  00034	50		 push	 eax
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpiW@8
  0003b	3b f4		 cmp	 esi, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	85 c0		 test	 eax, eax
  00044	75 0c		 jne	 SHORT $LN5@HKeyFromSt

; 848  : 			return map[i].hkey;

  00046	8b 4d fc	 mov	 ecx, DWORD PTR _i$1[ebp]
  00049	8b 04 cd 04 00
	00 00		 mov	 eax, DWORD PTR ?map@?1??HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PA_W@Z@4QBUkeymap@?1??123@KAPAU4@0@Z@B[ecx*8+4]
  00050	eb 04		 jmp	 SHORT $LN1@HKeyFromSt
$LN5@HKeyFromSt:

; 849  : 	}

  00052	eb c1		 jmp	 SHORT $LN2@HKeyFromSt
$LN3@HKeyFromSt:

; 850  : 	return NULL;

  00054	33 c0		 xor	 eax, eax
$LN1@HKeyFromSt:

; 851  : }

  00056	5e		 pop	 esi
  00057	83 c4 04	 add	 esp, 4
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
?HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PA_W@Z ENDP ; ATL::CRegParser::HKeyFromString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?StrChrW@CRegParser@ATL@@KAPA_WPA_W_W@Z
_TEXT	SEGMENT
_p$ = -4						; size = 4
_lpsz$ = 8						; size = 4
_ch$ = 12						; size = 2
?StrChrW@CRegParser@ATL@@KAPA_WPA_W_W@Z PROC		; ATL::CRegParser::StrChrW, COMDAT

; 856  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 857  : 	LPTSTR p = NULL;

  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _p$[ebp], 0

; 858  : 
; 859  : 	if (lpsz == NULL)

  00013	83 7d 08 00	 cmp	 DWORD PTR _lpsz$[ebp], 0
  00017	75 04		 jne	 SHORT $LN2@StrChrW

; 860  : 		return NULL;

  00019	33 c0		 xor	 eax, eax
  0001b	eb 3b		 jmp	 SHORT $LN1@StrChrW
$LN2@StrChrW:

; 861  : 
; 862  : 	while (*lpsz)

  0001d	8b 45 08	 mov	 eax, DWORD PTR _lpsz$[ebp]
  00020	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00023	85 c9		 test	 ecx, ecx
  00025	74 2e		 je	 SHORT $LN3@StrChrW

; 863  : 	{
; 864  : 		if (*lpsz == ch)

  00027	8b 55 08	 mov	 edx, DWORD PTR _lpsz$[ebp]
  0002a	0f b7 02	 movzx	 eax, WORD PTR [edx]
  0002d	0f b7 4d 0c	 movzx	 ecx, WORD PTR _ch$[ebp]
  00031	3b c1		 cmp	 eax, ecx
  00033	75 08		 jne	 SHORT $LN5@StrChrW

; 865  : 		{
; 866  : 			p = lpsz;

  00035	8b 55 08	 mov	 edx, DWORD PTR _lpsz$[ebp]
  00038	89 55 fc	 mov	 DWORD PTR _p$[ebp], edx

; 867  : 			break;

  0003b	eb 18		 jmp	 SHORT $LN3@StrChrW
$LN5@StrChrW:

; 868  : 		}
; 869  : 		lpsz = CharNext(lpsz);

  0003d	8b f4		 mov	 esi, esp
  0003f	8b 45 08	 mov	 eax, DWORD PTR _lpsz$[ebp]
  00042	50		 push	 eax
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  00049	3b f4		 cmp	 esi, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	89 45 08	 mov	 DWORD PTR _lpsz$[ebp], eax

; 870  : 	}

  00053	eb c8		 jmp	 SHORT $LN2@StrChrW
$LN3@StrChrW:

; 871  : 	return p;

  00055	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
$LN1@StrChrW:

; 872  : }

  00058	5e		 pop	 esi
  00059	83 c4 04	 add	 esp, 4
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?StrChrW@CRegParser@ATL@@KAPA_WPA_W_W@Z ENDP		; ATL::CRegParser::StrChrW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?EndOfVar@CRegParser@ATL@@IAEHXZ
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
?EndOfVar@CRegParser@ATL@@IAEHXZ PROC			; ATL::CRegParser::EndOfVar, COMDAT
; _this$ = ecx

; 209  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 210  : 		return chQuote == *m_pchCur && chQuote != *CharNext(m_pchCur);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001d	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00020	83 fa 27	 cmp	 edx, 39			; 00000027H
  00023	75 26		 jne	 SHORT $LN3@EndOfVar
  00025	8b f4		 mov	 esi, esp
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	51		 push	 ecx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  00033	3b f4		 cmp	 esi, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	0f b7 10	 movzx	 edx, WORD PTR [eax]
  0003d	83 fa 27	 cmp	 edx, 39			; 00000027H
  00040	74 09		 je	 SHORT $LN3@EndOfVar
  00042	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  00049	eb 07		 jmp	 SHORT $LN4@EndOfVar
$LN3@EndOfVar:
  0004b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@EndOfVar:
  00052	8b 45 f8	 mov	 eax, DWORD PTR tv73[ebp]

; 211  : 	}

  00055	5e		 pop	 esi
  00056	83 c4 08	 add	 esp, 8
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
?EndOfVar@CRegParser@ATL@@IAEHXZ ENDP			; ATL::CRegParser::EndOfVar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?SkipAssignment@CRegParser@ATL@@IAEJPA_W@Z
_TEXT	SEGMENT
_szValue$ = -8208					; size = 8192
_hr$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_szToken$ = 8						; size = 4
?SkipAssignment@CRegParser@ATL@@IAEJPA_W@Z PROC		; ATL::CRegParser::SkipAssignment, COMDAT
; _this$ = ecx

; 1152 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 14 20 00 00	 mov	 eax, 8212		; 00002014H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	57		 push	 edi
  0000e	51		 push	 ecx
  0000f	8d bd ec df ff
	ff		 lea	 edi, DWORD PTR [ebp-8212]
  00015	b9 05 08 00 00	 mov	 ecx, 2053		; 00000805H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	59		 pop	 ecx
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002c	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1153 : 	HRESULT hr;
; 1154 : 	TCHAR szValue[MAX_VALUE];
; 1155 : 
; 1156 : 	if (*szToken == chEquals)

  0002f	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  00032	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00035	83 f9 3d	 cmp	 ecx, 61			; 0000003dH
  00038	75 59		 jne	 SHORT $LN2@SkipAssign

; 1157 : 	{
; 1158 : 		if (FAILED(hr = NextToken(szToken)))

  0003a	8b 55 08	 mov	 edx, DWORD PTR _szToken$[ebp]
  0003d	52		 push	 edx
  0003e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  00046	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  00049	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0004d	7d 05		 jge	 SHORT $LN3@SkipAssign

; 1159 : 			return hr;

  0004f	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  00052	eb 41		 jmp	 SHORT $LN1@SkipAssign
$LN3@SkipAssign:

; 1160 : 		// Skip assignment
; 1161 : 		SkipWhiteSpace();

  00054	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ ; ATL::CRegParser::SkipWhiteSpace

; 1162 : 		if (FAILED(hr = NextToken(szValue)))

  0005c	8d 85 f0 df ff
	ff		 lea	 eax, DWORD PTR _szValue$[ebp]
  00062	50		 push	 eax
  00063	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  0006b	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  0006e	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00072	7d 05		 jge	 SHORT $LN4@SkipAssign

; 1163 : 			return hr;

  00074	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  00077	eb 1c		 jmp	 SHORT $LN1@SkipAssign
$LN4@SkipAssign:

; 1164 : 		if (FAILED(hr = NextToken(szToken)))

  00079	8b 4d 08	 mov	 ecx, DWORD PTR _szToken$[ebp]
  0007c	51		 push	 ecx
  0007d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  00085	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  00088	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0008c	7d 05		 jge	 SHORT $LN2@SkipAssign

; 1165 : 			return hr;

  0008e	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  00091	eb 02		 jmp	 SHORT $LN1@SkipAssign
$LN2@SkipAssign:

; 1166 : 	}
; 1167 : 
; 1168 : 	return S_OK;

  00093	33 c0		 xor	 eax, eax
$LN1@SkipAssign:

; 1169 : }

  00095	52		 push	 edx
  00096	8b cd		 mov	 ecx, ebp
  00098	50		 push	 eax
  00099	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@SkipAssign
  0009f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000a4	58		 pop	 eax
  000a5	5a		 pop	 edx
  000a6	5f		 pop	 edi
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000aa	33 cd		 xor	 ecx, ebp
  000ac	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b1	81 c4 14 20 00
	00		 add	 esp, 8212		; 00002014H
  000b7	3b ec		 cmp	 ebp, esp
  000b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c2 04 00	 ret	 4
$LN9@SkipAssign:
  000c4	01 00 00 00	 DD	 1
  000c8	00 00 00 00	 DD	 $LN8@SkipAssign
$LN8@SkipAssign:
  000cc	f0 df ff ff	 DD	 -8208			; ffffdff0H
  000d0	00 20 00 00	 DD	 8192			; 00002000H
  000d4	00 00 00 00	 DD	 $LN7@SkipAssign
$LN7@SkipAssign:
  000d8	73		 DB	 115			; 00000073H
  000d9	7a		 DB	 122			; 0000007aH
  000da	56		 DB	 86			; 00000056H
  000db	61		 DB	 97			; 00000061H
  000dc	6c		 DB	 108			; 0000006cH
  000dd	75		 DB	 117			; 00000075H
  000de	65		 DB	 101			; 00000065H
  000df	00		 DB	 0
?SkipAssignment@CRegParser@ATL@@IAEJPA_W@Z ENDP		; ATL::CRegParser::SkipAssignment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?GenerateError@CRegParser@ATL@@IAEJI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?GenerateError@CRegParser@ATL@@IAEJI@Z PROC		; ATL::CRegParser::GenerateError, COMDAT
; _this$ = ecx

; 202  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 203  : 		return DISP_E_EXCEPTION;

  0000e	b8 09 00 02 80	 mov	 eax, -2147352567	; 80020009H

; 204  : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?GenerateError@CRegParser@ATL@@IAEJI@Z ENDP		; ATL::CRegParser::GenerateError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?IsSpace@CRegParser@ATL@@IAEH_W@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
_this$ = -4						; size = 4
_ch$ = 8						; size = 2
?IsSpace@CRegParser@ATL@@IAEH_W@Z PROC			; ATL::CRegParser::IsSpace, COMDAT
; _this$ = ecx

; 881  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 882  : 	switch (ch)

  00017	0f b7 45 08	 movzx	 eax, WORD PTR _ch$[ebp]
  0001b	89 45 f8	 mov	 DWORD PTR tv65[ebp], eax
  0001e	8b 4d f8	 mov	 ecx, DWORD PTR tv65[ebp]
  00021	83 e9 09	 sub	 ecx, 9
  00024	89 4d f8	 mov	 DWORD PTR tv65[ebp], ecx
  00027	83 7d f8 17	 cmp	 DWORD PTR tv65[ebp], 23	; 00000017H
  0002b	77 18		 ja	 SHORT $LN2@IsSpace
  0002d	8b 55 f8	 mov	 edx, DWORD PTR tv65[ebp]
  00030	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN6@IsSpace[edx]
  00037	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN7@IsSpace[eax*4]
$LN4@IsSpace:

; 883  : 	{
; 884  : 		case _T(' '):
; 885  : 		case _T('\t'):
; 886  : 		case _T('\r'):
; 887  : 		case _T('\n'):
; 888  : 				return TRUE;

  0003e	b8 01 00 00 00	 mov	 eax, 1
  00043	eb 02		 jmp	 SHORT $LN1@IsSpace
$LN2@IsSpace:

; 889  : 	}
; 890  : 
; 891  : 	return FALSE;

  00045	33 c0		 xor	 eax, eax
$LN1@IsSpace:

; 892  : }

  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
  0004d	0f 1f 00	 npad	 3
$LN7@IsSpace:
  00050	00 00 00 00	 DD	 $LN4@IsSpace
  00054	00 00 00 00	 DD	 $LN2@IsSpace
$LN6@IsSpace:
  00058	00		 DB	 0
  00059	00		 DB	 0
  0005a	01		 DB	 1
  0005b	01		 DB	 1
  0005c	00		 DB	 0
  0005d	01		 DB	 1
  0005e	01		 DB	 1
  0005f	01		 DB	 1
  00060	01		 DB	 1
  00061	01		 DB	 1
  00062	01		 DB	 1
  00063	01		 DB	 1
  00064	01		 DB	 1
  00065	01		 DB	 1
  00066	01		 DB	 1
  00067	01		 DB	 1
  00068	01		 DB	 1
  00069	01		 DB	 1
  0006a	01		 DB	 1
  0006b	01		 DB	 1
  0006c	01		 DB	 1
  0006d	01		 DB	 1
  0006e	01		 DB	 1
  0006f	00		 DB	 0
?IsSpace@CRegParser@ATL@@IAEH_W@Z ENDP			; ATL::CRegParser::IsSpace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?RegisterSubkeys@CRegParser@ATL@@IAEJPA_WPAUHKEY__@@HH@Z
_TEXT	SEGMENT
tv89 = -8960						; size = 4
$T1 = -8956						; size = 4
$T2 = -8952						; size = 8
$T3 = -8944						; size = 4
$T4 = -8940						; size = 8
$T5 = -8932						; size = 8
$T6 = -8924						; size = 8
$T7 = -8916						; size = 8
$T8 = -8908						; size = 4
$T9 = -8904						; size = 8
$T10 = -8896						; size = 4
$T11 = -8892						; size = 8
$T12 = -8884						; size = 4
$T13 = -8880						; size = 4
$T14 = -8876						; size = 4
$T15 = -8872						; size = 4
$T16 = -8868						; size = 8
_rkParent$17 = -8856					; size = 12
_bHasSubKeys$18 = -8840					; size = 4
_rkParent$19 = -8832					; size = 12
_rk$20 = -8812						; size = 12
_szValueName$21 = -8792					; size = 8192
_rkForceRemove$22 = -592				; size = 12
_bTokenDelete$23 = -576					; size = 4
_hr$ = -572						; size = 4
_bInRecovery$ = -568					; size = 4
_bDelete$ = -564					; size = 4
_szKey$ = -556						; size = 520
_lRes$ = -32						; size = 4
_keyCur$ = -24						; size = 12
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_szToken$ = 8						; size = 4
_hkParent$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_bRecover$ = 20						; size = 4
?RegisterSubkeys@CRegParser@ATL@@IAEJPA_WPAUHKEY__@@HH@Z PROC ; ATL::CRegParser::RegisterSubkeys, COMDAT
; _this$ = ecx

; 1412 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 00 23 00 00	 mov	 eax, 8960		; 00002300H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	51		 push	 ecx
  00010	8d bd 00 dd ff
	ff		 lea	 edi, DWORD PTR [ebp-8960]
  00016	b9 c0 08 00 00	 mov	 ecx, 2240		; 000008c0H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	59		 pop	 ecx
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00028	33 c5		 xor	 eax, ebp
  0002a	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002d	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1413 : 	CRegKey keyCur;

  00030	6a 00		 push	 0
  00032	8d 4d e8	 lea	 ecx, DWORD PTR _keyCur$[ebp]
  00035	e8 00 00 00 00	 call	 ??0CRegKey@ATL@@QAE@PAVCAtlTransactionManager@1@@Z ; ATL::CRegKey::CRegKey

; 1414 : 	LONG    lRes;
; 1415 : 	TCHAR  szKey[_MAX_PATH];
; 1416 : 	BOOL    bDelete = TRUE;

  0003a	c7 85 cc fd ff
	ff 01 00 00 00	 mov	 DWORD PTR _bDelete$[ebp], 1

; 1417 : 	BOOL    bInRecovery = bRecover;

  00044	8b 45 14	 mov	 eax, DWORD PTR _bRecover$[ebp]
  00047	89 85 c8 fd ff
	ff		 mov	 DWORD PTR _bInRecovery$[ebp], eax

; 1418 : 	HRESULT hr = S_OK;

  0004d	c7 85 c4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _hr$[ebp], 0

; 1419 : 
; 1420 : 	ATLTRACE(atlTraceRegistrar, 2, _T("Num Els = %d\n"), cbNeverDelete);

  00057	6a 0c		 push	 12			; 0000000cH
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@KJDIPNJ@?$AAN?$AAu?$AAm?$AA?5?$AAE?$AAl?$AAs?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?6@
  0005e	6a 02		 push	 2
  00060	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  00065	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  0006a	50		 push	 eax
  0006b	68 8c 05 00 00	 push	 1420			; 0000058cH
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00075	8d 8d 5c dd ff
	ff		 lea	 ecx, DWORD PTR $T16[ebp]
  0007b	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00086	83 c4 14	 add	 esp, 20			; 00000014H

; 1421 : 	if (FAILED(hr = NextToken(szToken)))

  00089	8b 4d 08	 mov	 ecx, DWORD PTR _szToken$[ebp]
  0008c	51		 push	 ecx
  0008d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  00095	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  0009b	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000a2	7d 1f		 jge	 SHORT $LN2@RegisterSu

; 1422 : 		return hr;

  000a4	8b 95 c4 fd ff
	ff		 mov	 edx, DWORD PTR _hr$[ebp]
  000aa	89 95 58 dd ff
	ff		 mov	 DWORD PTR $T15[ebp], edx
  000b0	8d 4d e8	 lea	 ecx, DWORD PTR _keyCur$[ebp]
  000b3	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  000b8	8b 85 58 dd ff
	ff		 mov	 eax, DWORD PTR $T15[ebp]
  000be	e9 91 09 00 00	 jmp	 $LN1@RegisterSu
$LN2@RegisterSu:

; 1423 : 
; 1424 : 	while (*szToken != chRightBracket) // Continue till we see a }

  000c3	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  000c6	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000c9	83 f9 7d	 cmp	 ecx, 125		; 0000007dH
  000cc	0f 84 68 09 00
	00		 je	 $LN3@RegisterSu

; 1425 : 	{
; 1426 : 		bDelete = TRUE;

  000d2	c7 85 cc fd ff
	ff 01 00 00 00	 mov	 DWORD PTR _bDelete$[ebp], 1

; 1427 : 		BOOL bTokenDelete = !lstrcmpi(szToken, szDelete);

  000dc	8b f4		 mov	 esi, esp
  000de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?szDelete@ATL@@3QB_WB ; ATL::szDelete
  000e4	52		 push	 edx
  000e5	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  000e8	50		 push	 eax
  000e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpiW@8
  000ef	3b f4		 cmp	 esi, esp
  000f1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f6	85 c0		 test	 eax, eax
  000f8	75 0c		 jne	 SHORT $LN64@RegisterSu
  000fa	c7 85 00 dd ff
	ff 01 00 00 00	 mov	 DWORD PTR tv89[ebp], 1
  00104	eb 0a		 jmp	 SHORT $LN65@RegisterSu
$LN64@RegisterSu:
  00106	c7 85 00 dd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv89[ebp], 0
$LN65@RegisterSu:
  00110	8b 8d 00 dd ff
	ff		 mov	 ecx, DWORD PTR tv89[ebp]
  00116	89 8d c0 fd ff
	ff		 mov	 DWORD PTR _bTokenDelete$23[ebp], ecx

; 1428 : 
; 1429 : 		if (!lstrcmpi(szToken, szForceRemove) || bTokenDelete)

  0011c	8b f4		 mov	 esi, esp
  0011e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?szForceRemove@ATL@@3QB_WB ; ATL::szForceRemove
  00124	52		 push	 edx
  00125	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  00128	50		 push	 eax
  00129	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpiW@8
  0012f	3b f4		 cmp	 esi, esp
  00131	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00136	85 c0		 test	 eax, eax
  00138	74 0d		 je	 SHORT $LN6@RegisterSu
  0013a	83 bd c0 fd ff
	ff 00		 cmp	 DWORD PTR _bTokenDelete$23[ebp], 0
  00141	0f 84 2d 01 00
	00		 je	 $LN5@RegisterSu
$LN6@RegisterSu:

; 1430 : 		{
; 1431 : 			if (FAILED(hr = NextToken(szToken)))

  00147	8b 4d 08	 mov	 ecx, DWORD PTR _szToken$[ebp]
  0014a	51		 push	 ecx
  0014b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014e	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  00153	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  00159	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00160	7d 05		 jge	 SHORT $LN7@RegisterSu

; 1432 : 				break;

  00162	e9 d3 08 00 00	 jmp	 $LN3@RegisterSu
$LN7@RegisterSu:

; 1433 : 
; 1434 : 			if (bRegister)

  00167	83 7d 10 00	 cmp	 DWORD PTR _bRegister$[ebp], 0
  0016b	0f 84 03 01 00
	00		 je	 $LN5@RegisterSu

; 1435 : 			{
; 1436 : 				CRegKey rkForceRemove;

  00171	6a 00		 push	 0
  00173	8d 8d b0 fd ff
	ff		 lea	 ecx, DWORD PTR _rkForceRemove$22[ebp]
  00179	e8 00 00 00 00	 call	 ??0CRegKey@ATL@@QAE@PAVCAtlTransactionManager@1@@Z ; ATL::CRegKey::CRegKey

; 1437 : 
; 1438 : 				if (StrChr(szToken, chDirSep) != NULL)

  0017e	6a 5c		 push	 92			; 0000005cH
  00180	8b 55 08	 mov	 edx, DWORD PTR _szToken$[ebp]
  00183	52		 push	 edx
  00184	e8 00 00 00 00	 call	 ?StrChrW@CRegParser@ATL@@KAPA_WPA_W_W@Z ; ATL::CRegParser::StrChrW
  00189	83 c4 08	 add	 esp, 8
  0018c	85 c0		 test	 eax, eax
  0018e	74 31		 je	 SHORT $LN9@RegisterSu

; 1439 : 					return GenerateError(E_ATL_COMPOUND_KEY);

  00190	68 11 02 00 00	 push	 529			; 00000211H
  00195	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00198	e8 00 00 00 00	 call	 ?GenerateError@CRegParser@ATL@@IAEJI@Z ; ATL::CRegParser::GenerateError
  0019d	89 85 54 dd ff
	ff		 mov	 DWORD PTR $T14[ebp], eax
  001a3	8d 8d b0 fd ff
	ff		 lea	 ecx, DWORD PTR _rkForceRemove$22[ebp]
  001a9	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  001ae	8d 4d e8	 lea	 ecx, DWORD PTR _keyCur$[ebp]
  001b1	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  001b6	8b 85 54 dd ff
	ff		 mov	 eax, DWORD PTR $T14[ebp]
  001bc	e9 93 08 00 00	 jmp	 $LN1@RegisterSu
$LN9@RegisterSu:

; 1440 : 
; 1441 : 				if (CanForceRemoveKey(szToken))

  001c1	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  001c4	50		 push	 eax
  001c5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001c8	e8 00 00 00 00	 call	 ?CanForceRemoveKey@CRegParser@ATL@@IAEHPB_W@Z ; ATL::CRegParser::CanForceRemoveKey
  001cd	85 c0		 test	 eax, eax
  001cf	74 29		 je	 SHORT $LN10@RegisterSu

; 1442 : 				{
; 1443 : 					rkForceRemove.Attach(hkParent);

  001d1	8b 4d 0c	 mov	 ecx, DWORD PTR _hkParent$[ebp]
  001d4	51		 push	 ecx
  001d5	8d 8d b0 fd ff
	ff		 lea	 ecx, DWORD PTR _rkForceRemove$22[ebp]
  001db	e8 00 00 00 00	 call	 ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z ; ATL::CRegKey::Attach

; 1444 : 					// Error not returned. We will overwrite the values any way.
; 1445 : 					rkForceRemove.RecurseDeleteKey(szToken);

  001e0	8b 55 08	 mov	 edx, DWORD PTR _szToken$[ebp]
  001e3	52		 push	 edx
  001e4	8d 8d b0 fd ff
	ff		 lea	 ecx, DWORD PTR _rkForceRemove$22[ebp]
  001ea	e8 00 00 00 00	 call	 ?RecurseDeleteKey@CRegKey@ATL@@QAEJPB_W@Z ; ATL::CRegKey::RecurseDeleteKey

; 1446 : 					rkForceRemove.Detach();

  001ef	8d 8d b0 fd ff
	ff		 lea	 ecx, DWORD PTR _rkForceRemove$22[ebp]
  001f5	e8 00 00 00 00	 call	 ?Detach@CRegKey@ATL@@QAEPAUHKEY__@@XZ ; ATL::CRegKey::Detach
$LN10@RegisterSu:

; 1447 : 				}
; 1448 : 				if (bTokenDelete)

  001fa	83 bd c0 fd ff
	ff 00		 cmp	 DWORD PTR _bTokenDelete$23[ebp], 0
  00201	74 66		 je	 SHORT $LN11@RegisterSu

; 1449 : 				{
; 1450 : 					if (FAILED(hr = NextToken(szToken)))

  00203	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  00206	50		 push	 eax
  00207	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0020a	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  0020f	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  00215	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  0021c	7d 10		 jge	 SHORT $LN12@RegisterSu

; 1451 : 						break;

  0021e	8d 8d b0 fd ff
	ff		 lea	 ecx, DWORD PTR _rkForceRemove$22[ebp]
  00224	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  00229	e9 0c 08 00 00	 jmp	 $LN3@RegisterSu
$LN12@RegisterSu:

; 1452 : 					if (FAILED(hr = SkipAssignment(szToken)))

  0022e	8b 4d 08	 mov	 ecx, DWORD PTR _szToken$[ebp]
  00231	51		 push	 ecx
  00232	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00235	e8 00 00 00 00	 call	 ?SkipAssignment@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::SkipAssignment
  0023a	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  00240	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00247	7d 10		 jge	 SHORT __unwind$?RegisterSubkeys@CRegParser@ATL@@IAEJPA_WPAUHKEY__@@HH@Z$0

; 1453 : 						break;

  00249	8d 8d b0 fd ff
	ff		 lea	 ecx, DWORD PTR _rkForceRemove$22[ebp]
  0024f	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  00254	e9 e1 07 00 00	 jmp	 $LN3@RegisterSu
__unwind$?RegisterSubkeys@CRegParser@ATL@@IAEJPA_WPAUHKEY__@@HH@Z$0:

; 1647 : 		}
; 1648 : 
; 1649 : EndCheck:

  00259	8d 8d b0 fd ff
	ff		 lea	 ecx, DWORD PTR _rkForceRemove$22[ebp]
  0025f	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey

; 1454 : 					goto EndCheck;

  00264	e9 66 07 00 00	 jmp	 $EndCheck$79
$LN11@RegisterSu:

; 1455 : 				}
; 1456 : 			}

  00269	8d 8d b0 fd ff
	ff		 lea	 ecx, DWORD PTR _rkForceRemove$22[ebp]
  0026f	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
$LN5@RegisterSu:

; 1457 : 		}
; 1458 : 
; 1459 : 		if (!lstrcmpi(szToken, szNoRemove))

  00274	8b f4		 mov	 esi, esp
  00276	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?szNoRemove@ATL@@3QB_WB ; ATL::szNoRemove
  0027c	52		 push	 edx
  0027d	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  00280	50		 push	 eax
  00281	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpiW@8
  00287	3b f4		 cmp	 esi, esp
  00289	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0028e	85 c0		 test	 eax, eax
  00290	75 2a		 jne	 SHORT $LN15@RegisterSu

; 1460 : 		{
; 1461 : 			bDelete = FALSE;    // set even for register

  00292	c7 85 cc fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _bDelete$[ebp], 0

; 1462 : 			if (FAILED(hr = NextToken(szToken)))

  0029c	8b 4d 08	 mov	 ecx, DWORD PTR _szToken$[ebp]
  0029f	51		 push	 ecx
  002a0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002a3	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  002a8	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  002ae	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  002b5	7d 05		 jge	 SHORT $LN15@RegisterSu

; 1463 : 				break;

  002b7	e9 7e 07 00 00	 jmp	 $LN3@RegisterSu
$LN15@RegisterSu:

; 1464 : 		}
; 1465 : 
; 1466 : 		if (!lstrcmpi(szToken, szValToken)) // need to add a value to hkParent

  002bc	8b f4		 mov	 esi, esp
  002be	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?szValToken@ATL@@3QB_WB ; ATL::szValToken
  002c4	52		 push	 edx
  002c5	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  002c8	50		 push	 eax
  002c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpiW@8
  002cf	3b f4		 cmp	 esi, esp
  002d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002d6	85 c0		 test	 eax, eax
  002d8	0f 85 29 02 00
	00		 jne	 $LN17@RegisterSu

; 1467 : 		{
; 1468 : 			TCHAR  szValueName[MAX_VALUE];
; 1469 : 
; 1470 : 			if (FAILED(hr = NextToken(szValueName)))

  002de	8d 8d a8 dd ff
	ff		 lea	 ecx, DWORD PTR _szValueName$21[ebp]
  002e4	51		 push	 ecx
  002e5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002e8	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  002ed	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  002f3	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  002fa	7d 05		 jge	 SHORT $LN18@RegisterSu

; 1471 : 				break;

  002fc	e9 39 07 00 00	 jmp	 $LN3@RegisterSu
$LN18@RegisterSu:

; 1472 : 			if (FAILED(hr = NextToken(szToken)))

  00301	8b 55 08	 mov	 edx, DWORD PTR _szToken$[ebp]
  00304	52		 push	 edx
  00305	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00308	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  0030d	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  00313	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  0031a	7d 05		 jge	 SHORT $LN19@RegisterSu

; 1473 : 				break;

  0031c	e9 19 07 00 00	 jmp	 $LN3@RegisterSu
$LN19@RegisterSu:

; 1474 : 
; 1475 : 			if (*szToken != chEquals)

  00321	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  00324	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00327	83 f9 3d	 cmp	 ecx, 61			; 0000003dH
  0032a	74 26		 je	 SHORT $LN20@RegisterSu

; 1476 : 				return GenerateError(E_ATL_EXPECTING_EQUAL);

  0032c	68 06 02 00 00	 push	 518			; 00000206H
  00331	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00334	e8 00 00 00 00	 call	 ?GenerateError@CRegParser@ATL@@IAEJI@Z ; ATL::CRegParser::GenerateError
  00339	89 85 50 dd ff
	ff		 mov	 DWORD PTR $T13[ebp], eax
  0033f	8d 4d e8	 lea	 ecx, DWORD PTR _keyCur$[ebp]
  00342	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  00347	8b 85 50 dd ff
	ff		 mov	 eax, DWORD PTR $T13[ebp]
  0034d	e9 02 07 00 00	 jmp	 $LN1@RegisterSu
$LN20@RegisterSu:

; 1477 : 
; 1478 : 			if (bRegister)

  00352	83 7d 10 00	 cmp	 DWORD PTR _bRegister$[ebp], 0
  00356	0f 84 9a 00 00
	00		 je	 $LN21@RegisterSu

; 1479 : 			{
; 1480 : 				CRegKey rk;

  0035c	6a 00		 push	 0
  0035e	8d 8d 94 dd ff
	ff		 lea	 ecx, DWORD PTR _rk$20[ebp]
  00364	e8 00 00 00 00	 call	 ??0CRegKey@ATL@@QAE@PAVCAtlTransactionManager@1@@Z ; ATL::CRegKey::CRegKey

; 1481 : 
; 1482 : 				rk.Attach(hkParent);

  00369	8b 55 0c	 mov	 edx, DWORD PTR _hkParent$[ebp]
  0036c	52		 push	 edx
  0036d	8d 8d 94 dd ff
	ff		 lea	 ecx, DWORD PTR _rk$20[ebp]
  00373	e8 00 00 00 00	 call	 ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z ; ATL::CRegKey::Attach

; 1483 : 				hr = AddValue(rk, szValueName, szToken);

  00378	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  0037b	50		 push	 eax
  0037c	8d 8d a8 dd ff
	ff		 lea	 ecx, DWORD PTR _szValueName$21[ebp]
  00382	51		 push	 ecx
  00383	8d 95 94 dd ff
	ff		 lea	 edx, DWORD PTR _rk$20[ebp]
  00389	52		 push	 edx
  0038a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0038d	e8 00 00 00 00	 call	 ?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PB_WPA_W@Z ; ATL::CRegParser::AddValue
  00392	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 1484 : 				rk.Detach();

  00398	8d 8d 94 dd ff
	ff		 lea	 ecx, DWORD PTR _rk$20[ebp]
  0039e	e8 00 00 00 00	 call	 ?Detach@CRegKey@ATL@@QAEPAUHKEY__@@XZ ; ATL::CRegKey::Detach

; 1485 : 
; 1486 : 				if (FAILED(hr))

  003a3	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  003aa	7d 2a		 jge	 SHORT __unwind$?RegisterSubkeys@CRegParser@ATL@@IAEJPA_WPAUHKEY__@@HH@Z$1

; 1487 : 					return hr;

  003ac	8b 85 c4 fd ff
	ff		 mov	 eax, DWORD PTR _hr$[ebp]
  003b2	89 85 4c dd ff
	ff		 mov	 DWORD PTR $T12[ebp], eax
  003b8	8d 8d 94 dd ff
	ff		 lea	 ecx, DWORD PTR _rk$20[ebp]
  003be	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  003c3	8d 4d e8	 lea	 ecx, DWORD PTR _keyCur$[ebp]
  003c6	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  003cb	8b 85 4c dd ff
	ff		 mov	 eax, DWORD PTR $T12[ebp]
  003d1	e9 7e 06 00 00	 jmp	 $LN1@RegisterSu
__unwind$?RegisterSubkeys@CRegParser@ATL@@IAEJPA_WPAUHKEY__@@HH@Z$1:

; 1647 : 		}
; 1648 : 
; 1649 : EndCheck:

  003d6	8d 8d 94 dd ff
	ff		 lea	 ecx, DWORD PTR _rk$20[ebp]
  003dc	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey

; 1488 : 
; 1489 : 				goto EndCheck;

  003e1	e9 e9 05 00 00	 jmp	 $EndCheck$79

; 1490 : 			}

  003e6	8d 8d 94 dd ff
	ff		 lea	 ecx, DWORD PTR _rk$20[ebp]
  003ec	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  003f1	e9 11 01 00 00	 jmp	 $LN17@RegisterSu
$LN21@RegisterSu:

; 1491 : 			else
; 1492 : 			{
; 1493 : 				if (!bRecover && bDelete)

  003f6	83 7d 14 00	 cmp	 DWORD PTR _bRecover$[ebp], 0
  003fa	0f 85 e2 00 00
	00		 jne	 $LN25@RegisterSu
  00400	83 bd cc fd ff
	ff 00		 cmp	 DWORD PTR _bDelete$[ebp], 0
  00407	0f 84 d5 00 00
	00		 je	 $LN25@RegisterSu

; 1494 : 				{
; 1495 : 					ATLTRACE(atlTraceRegistrar, 1, _T("Deleting %Ts\n"), szValueName);

  0040d	8d 8d a8 dd ff
	ff		 lea	 ecx, DWORD PTR _szValueName$21[ebp]
  00413	51		 push	 ecx
  00414	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@BEOOHDFB@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAT?$AAs?$AA?6@
  00419	6a 01		 push	 1
  0041b	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  00420	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  00425	50		 push	 eax
  00426	68 d7 05 00 00	 push	 1495			; 000005d7H
  0042b	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00430	8d 8d 44 dd ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  00436	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0043b	50		 push	 eax
  0043c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00441	83 c4 14	 add	 esp, 20			; 00000014H

; 1496 : 					// We have to open the key for write to be able to delete.
; 1497 : 					CRegKey rkParent;

  00444	6a 00		 push	 0
  00446	8d 8d 80 dd ff
	ff		 lea	 ecx, DWORD PTR _rkParent$19[ebp]
  0044c	e8 00 00 00 00	 call	 ??0CRegKey@ATL@@QAE@PAVCAtlTransactionManager@1@@Z ; ATL::CRegKey::CRegKey

; 1498 : 					lRes = rkParent.Open(hkParent, NULL, KEY_WRITE);

  00451	68 06 00 02 00	 push	 131078			; 00020006H
  00456	6a 00		 push	 0
  00458	8b 55 0c	 mov	 edx, DWORD PTR _hkParent$[ebp]
  0045b	52		 push	 edx
  0045c	8d 8d 80 dd ff
	ff		 lea	 ecx, DWORD PTR _rkParent$19[ebp]
  00462	e8 00 00 00 00	 call	 ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PB_WK@Z ; ATL::CRegKey::Open
  00467	89 45 e0	 mov	 DWORD PTR _lRes$[ebp], eax

; 1499 : 					if (lRes == ERROR_SUCCESS)

  0046a	83 7d e0 00	 cmp	 DWORD PTR _lRes$[ebp], 0
  0046e	75 45		 jne	 SHORT $LN26@RegisterSu

; 1500 : 					{
; 1501 : 						lRes = rkParent.DeleteValue(szValueName);

  00470	8d 85 a8 dd ff
	ff		 lea	 eax, DWORD PTR _szValueName$21[ebp]
  00476	50		 push	 eax
  00477	8d 8d 80 dd ff
	ff		 lea	 ecx, DWORD PTR _rkParent$19[ebp]
  0047d	e8 00 00 00 00	 call	 ?DeleteValue@CRegKey@ATL@@QAEJPB_W@Z ; ATL::CRegKey::DeleteValue
  00482	89 45 e0	 mov	 DWORD PTR _lRes$[ebp], eax

; 1502 : 						if (lRes != ERROR_SUCCESS && lRes != ERROR_FILE_NOT_FOUND)

  00485	83 7d e0 00	 cmp	 DWORD PTR _lRes$[ebp], 0
  00489	74 28		 je	 SHORT $LN28@RegisterSu
  0048b	83 7d e0 02	 cmp	 DWORD PTR _lRes$[ebp], 2
  0048f	74 22		 je	 SHORT $LN28@RegisterSu

; 1503 : 						{
; 1504 : 							// Key not present is not an error
; 1505 : 							hr = AtlHresultFromWin32(lRes);

  00491	8b 4d e0	 mov	 ecx, DWORD PTR _lRes$[ebp]
  00494	51		 push	 ecx
  00495	e8 00 00 00 00	 call	 ?AtlHresultFromWin32@ATL@@YAJK@Z ; ATL::AtlHresultFromWin32
  0049a	83 c4 04	 add	 esp, 4
  0049d	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 1506 : 							break;

  004a3	8d 8d 80 dd ff
	ff		 lea	 ecx, DWORD PTR _rkParent$19[ebp]
  004a9	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  004ae	e9 87 05 00 00	 jmp	 $LN3@RegisterSu
$LN28@RegisterSu:

; 1507 : 						}
; 1508 : 					}

  004b3	eb 22		 jmp	 SHORT $LN27@RegisterSu
$LN26@RegisterSu:

; 1509 : 					else
; 1510 : 					{
; 1511 : 						hr = AtlHresultFromWin32(lRes);

  004b5	8b 55 e0	 mov	 edx, DWORD PTR _lRes$[ebp]
  004b8	52		 push	 edx
  004b9	e8 00 00 00 00	 call	 ?AtlHresultFromWin32@ATL@@YAJK@Z ; ATL::AtlHresultFromWin32
  004be	83 c4 04	 add	 esp, 4
  004c1	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 1512 : 						break;

  004c7	8d 8d 80 dd ff
	ff		 lea	 ecx, DWORD PTR _rkParent$19[ebp]
  004cd	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  004d2	e9 63 05 00 00	 jmp	 $LN3@RegisterSu
$LN27@RegisterSu:

; 1513 : 					}
; 1514 : 				}

  004d7	8d 8d 80 dd ff
	ff		 lea	 ecx, DWORD PTR _rkParent$19[ebp]
  004dd	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
$LN25@RegisterSu:

; 1515 : 				if (FAILED(hr = SkipAssignment(szToken)))

  004e2	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  004e5	50		 push	 eax
  004e6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004e9	e8 00 00 00 00	 call	 ?SkipAssignment@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::SkipAssignment
  004ee	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  004f4	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  004fb	7d 05		 jge	 SHORT $LN29@RegisterSu

; 1516 : 					break;

  004fd	e9 38 05 00 00	 jmp	 $LN3@RegisterSu
$LN29@RegisterSu:

; 1517 : 				continue;  // can never have a subkey

  00502	e9 bc fb ff ff	 jmp	 $LN2@RegisterSu
$LN17@RegisterSu:

; 1518 : 			}
; 1519 : 		}
; 1520 : 
; 1521 : 		if (StrChr(szToken, chDirSep) != NULL)

  00507	6a 5c		 push	 92			; 0000005cH
  00509	8b 4d 08	 mov	 ecx, DWORD PTR _szToken$[ebp]
  0050c	51		 push	 ecx
  0050d	e8 00 00 00 00	 call	 ?StrChrW@CRegParser@ATL@@KAPA_WPA_W_W@Z ; ATL::CRegParser::StrChrW
  00512	83 c4 08	 add	 esp, 8
  00515	85 c0		 test	 eax, eax
  00517	74 26		 je	 SHORT $LN30@RegisterSu

; 1522 : 			return GenerateError(E_ATL_COMPOUND_KEY);

  00519	68 11 02 00 00	 push	 529			; 00000211H
  0051e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00521	e8 00 00 00 00	 call	 ?GenerateError@CRegParser@ATL@@IAEJI@Z ; ATL::CRegParser::GenerateError
  00526	89 85 40 dd ff
	ff		 mov	 DWORD PTR $T10[ebp], eax
  0052c	8d 4d e8	 lea	 ecx, DWORD PTR _keyCur$[ebp]
  0052f	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  00534	8b 85 40 dd ff
	ff		 mov	 eax, DWORD PTR $T10[ebp]
  0053a	e9 15 05 00 00	 jmp	 $LN1@RegisterSu
$LN30@RegisterSu:

; 1523 : 
; 1524 : 		if (bRegister)

  0053f	83 7d 10 00	 cmp	 DWORD PTR _bRegister$[ebp], 0
  00543	0f 84 15 01 00
	00		 je	 $LN31@RegisterSu

; 1525 : 		{
; 1526 : 			lRes = keyCur.Open(hkParent, szToken, KEY_READ | KEY_WRITE);

  00549	68 1f 00 02 00	 push	 131103			; 0002001fH
  0054e	8b 55 08	 mov	 edx, DWORD PTR _szToken$[ebp]
  00551	52		 push	 edx
  00552	8b 45 0c	 mov	 eax, DWORD PTR _hkParent$[ebp]
  00555	50		 push	 eax
  00556	8d 4d e8	 lea	 ecx, DWORD PTR _keyCur$[ebp]
  00559	e8 00 00 00 00	 call	 ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PB_WK@Z ; ATL::CRegKey::Open
  0055e	89 45 e0	 mov	 DWORD PTR _lRes$[ebp], eax

; 1527 : 			if (ERROR_SUCCESS != lRes)

  00561	83 7d e0 00	 cmp	 DWORD PTR _lRes$[ebp], 0
  00565	0f 84 9d 00 00
	00		 je	 $LN33@RegisterSu

; 1528 : 			{
; 1529 : 				// Failed all access try read only
; 1530 : 				lRes = keyCur.Open(hkParent, szToken, KEY_READ);

  0056b	68 19 00 02 00	 push	 131097			; 00020019H
  00570	8b 4d 08	 mov	 ecx, DWORD PTR _szToken$[ebp]
  00573	51		 push	 ecx
  00574	8b 55 0c	 mov	 edx, DWORD PTR _hkParent$[ebp]
  00577	52		 push	 edx
  00578	8d 4d e8	 lea	 ecx, DWORD PTR _keyCur$[ebp]
  0057b	e8 00 00 00 00	 call	 ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PB_WK@Z ; ATL::CRegKey::Open
  00580	89 45 e0	 mov	 DWORD PTR _lRes$[ebp], eax

; 1531 : 				if (ERROR_SUCCESS != lRes)

  00583	83 7d e0 00	 cmp	 DWORD PTR _lRes$[ebp], 0
  00587	74 7f		 je	 SHORT $LN33@RegisterSu

; 1532 : 				{
; 1533 : 					// Finally try creating it
; 1534 : 					ATLTRACE(atlTraceRegistrar, 2, _T("Creating key %Ts\n"), szToken);

  00589	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  0058c	50		 push	 eax
  0058d	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@NOBELHPC@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAk?$AAe?$AAy?$AA?5?$AA?$CF?$AAT@
  00592	6a 02		 push	 2
  00594	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  00599	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  0059e	50		 push	 eax
  0059f	68 fe 05 00 00	 push	 1534			; 000005feH
  005a4	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  005a9	8d 8d 38 dd ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  005af	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  005b4	50		 push	 eax
  005b5	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  005ba	83 c4 14	 add	 esp, 20			; 00000014H

; 1535 : 					lRes = keyCur.Create(hkParent, szToken, REG_NONE, REG_OPTION_NON_VOLATILE, KEY_READ | KEY_WRITE);

  005bd	6a 00		 push	 0
  005bf	6a 00		 push	 0
  005c1	68 1f 00 02 00	 push	 131103			; 0002001fH
  005c6	6a 00		 push	 0
  005c8	6a 00		 push	 0
  005ca	8b 4d 08	 mov	 ecx, DWORD PTR _szToken$[ebp]
  005cd	51		 push	 ecx
  005ce	8b 55 0c	 mov	 edx, DWORD PTR _hkParent$[ebp]
  005d1	52		 push	 edx
  005d2	8d 4d e8	 lea	 ecx, DWORD PTR _keyCur$[ebp]
  005d5	e8 00 00 00 00	 call	 ?atlCreate@CRegKey@ATL@@QAEJPAUHKEY__@@PB_WPA_WKKPAU_SECURITY_ATTRIBUTES@@PAK@Z ; ATL::CRegKey::atlCreate
  005da	89 45 e0	 mov	 DWORD PTR _lRes$[ebp], eax

; 1536 : 					if (lRes != ERROR_SUCCESS)

  005dd	83 7d e0 00	 cmp	 DWORD PTR _lRes$[ebp], 0
  005e1	74 25		 je	 SHORT $LN33@RegisterSu

; 1537 : 						return AtlHresultFromWin32(lRes);

  005e3	8b 45 e0	 mov	 eax, DWORD PTR _lRes$[ebp]
  005e6	50		 push	 eax
  005e7	e8 00 00 00 00	 call	 ?AtlHresultFromWin32@ATL@@YAJK@Z ; ATL::AtlHresultFromWin32
  005ec	83 c4 04	 add	 esp, 4
  005ef	89 85 34 dd ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  005f5	8d 4d e8	 lea	 ecx, DWORD PTR _keyCur$[ebp]
  005f8	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  005fd	8b 85 34 dd ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00603	e9 4c 04 00 00	 jmp	 $LN1@RegisterSu
$LN33@RegisterSu:

; 1538 : 				}
; 1539 : 			}
; 1540 : 
; 1541 : 			if (FAILED(hr = NextToken(szToken)))

  00608	8b 4d 08	 mov	 ecx, DWORD PTR _szToken$[ebp]
  0060b	51		 push	 ecx
  0060c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0060f	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  00614	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  0061a	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00621	7d 05		 jge	 SHORT $LN36@RegisterSu

; 1542 : 				break;

  00623	e9 12 04 00 00	 jmp	 $LN3@RegisterSu
$LN36@RegisterSu:

; 1543 : 
; 1544 : 
; 1545 : 			if (*szToken == chEquals)

  00628	8b 55 08	 mov	 edx, DWORD PTR _szToken$[ebp]
  0062b	0f b7 02	 movzx	 eax, WORD PTR [edx]
  0062e	83 f8 3d	 cmp	 eax, 61			; 0000003dH
  00631	75 26		 jne	 SHORT $LN37@RegisterSu

; 1546 : 			{
; 1547 : 				if (FAILED(hr = AddValue(keyCur, NULL, szToken))) // NULL == default

  00633	8b 4d 08	 mov	 ecx, DWORD PTR _szToken$[ebp]
  00636	51		 push	 ecx
  00637	6a 00		 push	 0
  00639	8d 55 e8	 lea	 edx, DWORD PTR _keyCur$[ebp]
  0063c	52		 push	 edx
  0063d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00640	e8 00 00 00 00	 call	 ?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PB_WPA_W@Z ; ATL::CRegParser::AddValue
  00645	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  0064b	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00652	7d 05		 jge	 SHORT $LN37@RegisterSu

; 1548 : 					break;

  00654	e9 e1 03 00 00	 jmp	 $LN3@RegisterSu
$LN37@RegisterSu:

; 1549 : 			}
; 1550 : 		}

  00659	e9 71 03 00 00	 jmp	 $EndCheck$79
$LN31@RegisterSu:

; 1551 : 		else //Unregister
; 1552 : 		{
; 1553 : 			if (!bRecover)

  0065e	83 7d 14 00	 cmp	 DWORD PTR _bRecover$[ebp], 0
  00662	75 1a		 jne	 SHORT $LN39@RegisterSu

; 1554 : 			{
; 1555 :  				lRes = keyCur.Open(hkParent, szToken, KEY_READ);

  00664	68 19 00 02 00	 push	 131097			; 00020019H
  00669	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  0066c	50		 push	 eax
  0066d	8b 4d 0c	 mov	 ecx, DWORD PTR _hkParent$[ebp]
  00670	51		 push	 ecx
  00671	8d 4d e8	 lea	 ecx, DWORD PTR _keyCur$[ebp]
  00674	e8 00 00 00 00	 call	 ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PB_WK@Z ; ATL::CRegKey::Open
  00679	89 45 e0	 mov	 DWORD PTR _lRes$[ebp], eax

; 1556 : 
; 1557 : 			}

  0067c	eb 07		 jmp	 SHORT $LN40@RegisterSu
$LN39@RegisterSu:

; 1558 : 			else
; 1559 : 				lRes = ERROR_FILE_NOT_FOUND;

  0067e	c7 45 e0 02 00
	00 00		 mov	 DWORD PTR _lRes$[ebp], 2
$LN40@RegisterSu:

; 1560 : 
; 1561 : 
; 1562 : 			// Open failed set recovery mode
; 1563 : 			if (lRes != ERROR_SUCCESS)

  00685	83 7d e0 00	 cmp	 DWORD PTR _lRes$[ebp], 0
  00689	74 07		 je	 SHORT $LN41@RegisterSu

; 1564 : 				bRecover = true;

  0068b	c7 45 14 01 00
	00 00		 mov	 DWORD PTR _bRecover$[ebp], 1
$LN41@RegisterSu:

; 1565 : 
; 1566 : 			// TRACE out Key open status and if in recovery mode
; 1567 : #ifdef _DEBUG
; 1568 : 			if (!bRecover)

  00692	83 7d 14 00	 cmp	 DWORD PTR _bRecover$[ebp], 0
  00696	75 36		 jne	 SHORT $LN42@RegisterSu

; 1569 : 				ATLTRACE(atlTraceRegistrar, 1, _T("Opened Key %Ts\n"), szToken);

  00698	8b 55 08	 mov	 edx, DWORD PTR _szToken$[ebp]
  0069b	52		 push	 edx
  0069c	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@MKECKMBH@?$AAO?$AAp?$AAe?$AAn?$AAe?$AAd?$AA?5?$AAK?$AAe?$AAy?$AA?5?$AA?$CF?$AAT?$AAs?$AA?6@
  006a1	6a 01		 push	 1
  006a3	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  006a8	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  006ad	50		 push	 eax
  006ae	68 21 06 00 00	 push	 1569			; 00000621H
  006b3	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  006b8	8d 8d 2c dd ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  006be	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  006c3	50		 push	 eax
  006c4	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  006c9	83 c4 14	 add	 esp, 20			; 00000014H
  006cc	eb 34		 jmp	 SHORT $LN43@RegisterSu
$LN42@RegisterSu:

; 1570 : 			else
; 1571 : 				ATLTRACE(atlTraceRegistrar, 0, _T("Ignoring Open key on %Ts : In Recovery mode\n"), szToken);

  006ce	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  006d1	50		 push	 eax
  006d2	68 00 00 00 00	 push	 OFFSET ??_C@_1FK@OAJHMKAA@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAp?$AAe?$AAn?$AA?5?$AAk@
  006d7	6a 00		 push	 0
  006d9	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  006de	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  006e3	50		 push	 eax
  006e4	68 23 06 00 00	 push	 1571			; 00000623H
  006e9	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  006ee	8d 8d 24 dd ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  006f4	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  006f9	50		 push	 eax
  006fa	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  006ff	83 c4 14	 add	 esp, 20			; 00000014H
$LN43@RegisterSu:

; 1572 : #endif //_DEBUG
; 1573 : 
; 1574 : 			// Remember Subkey
; 1575 : 			Checked::tcsncpy_s(szKey, _countof(szKey), szToken, _TRUNCATE);

  00702	6a ff		 push	 -1
  00704	8b 4d 08	 mov	 ecx, DWORD PTR _szToken$[ebp]
  00707	51		 push	 ecx
  00708	68 04 01 00 00	 push	 260			; 00000104H
  0070d	8d 95 d4 fd ff
	ff		 lea	 edx, DWORD PTR _szKey$[ebp]
  00713	52		 push	 edx
  00714	e8 00 00 00 00	 call	 ?tcsncpy_s@Checked@ATL@@YAHPA_WIPB_WI@Z ; ATL::Checked::tcsncpy_s
  00719	83 c4 10	 add	 esp, 16			; 00000010H

; 1576 : 
; 1577 : 			if (FAILED(hr = NextToken(szToken)))

  0071c	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  0071f	50		 push	 eax
  00720	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00723	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  00728	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  0072e	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00735	7d 05		 jge	 SHORT $LN44@RegisterSu

; 1578 : 				break;

  00737	e9 fe 02 00 00	 jmp	 $LN3@RegisterSu
$LN44@RegisterSu:

; 1579 : 			if (FAILED(hr = SkipAssignment(szToken)))

  0073c	8b 4d 08	 mov	 ecx, DWORD PTR _szToken$[ebp]
  0073f	51		 push	 ecx
  00740	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00743	e8 00 00 00 00	 call	 ?SkipAssignment@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::SkipAssignment
  00748	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  0074e	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00755	7d 05		 jge	 SHORT $LN45@RegisterSu

; 1580 : 				break;

  00757	e9 de 02 00 00	 jmp	 $LN3@RegisterSu
$LN45@RegisterSu:

; 1581 : 
; 1582 : 			if (*szToken == chLeftBracket && _tcslen(szToken) == 1)

  0075c	8b 55 08	 mov	 edx, DWORD PTR _szToken$[ebp]
  0075f	0f b7 02	 movzx	 eax, WORD PTR [edx]
  00762	83 f8 7b	 cmp	 eax, 123		; 0000007bH
  00765	75 63		 jne	 SHORT $LN46@RegisterSu
  00767	8b 4d 08	 mov	 ecx, DWORD PTR _szToken$[ebp]
  0076a	51		 push	 ecx
  0076b	e8 00 00 00 00	 call	 _wcslen
  00770	83 c4 04	 add	 esp, 4
  00773	83 f8 01	 cmp	 eax, 1
  00776	75 52		 jne	 SHORT $LN46@RegisterSu

; 1583 : 			{
; 1584 : 				hr = RegisterSubkeys(szToken, keyCur.m_hKey, bRegister, bRecover);

  00778	8b 55 14	 mov	 edx, DWORD PTR _bRecover$[ebp]
  0077b	52		 push	 edx
  0077c	8b 45 10	 mov	 eax, DWORD PTR _bRegister$[ebp]
  0077f	50		 push	 eax
  00780	8b 4d e8	 mov	 ecx, DWORD PTR _keyCur$[ebp]
  00783	51		 push	 ecx
  00784	8b 55 08	 mov	 edx, DWORD PTR _szToken$[ebp]
  00787	52		 push	 edx
  00788	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0078b	e8 00 00 00 00	 call	 ?RegisterSubkeys@CRegParser@ATL@@IAEJPA_WPAUHKEY__@@HH@Z ; ATL::CRegParser::RegisterSubkeys
  00790	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 1585 : 				// In recover mode ignore error
; 1586 : 				if (FAILED(hr) && !bRecover)

  00796	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  0079d	7d 0b		 jge	 SHORT $LN47@RegisterSu
  0079f	83 7d 14 00	 cmp	 DWORD PTR _bRecover$[ebp], 0
  007a3	75 05		 jne	 SHORT $LN47@RegisterSu

; 1587 : 					break;

  007a5	e9 90 02 00 00	 jmp	 $LN3@RegisterSu
$LN47@RegisterSu:

; 1588 : 				// Skip the }
; 1589 : 				if (FAILED(hr = NextToken(szToken)))

  007aa	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  007ad	50		 push	 eax
  007ae	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007b1	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  007b6	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  007bc	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  007c3	7d 05		 jge	 SHORT $LN46@RegisterSu

; 1590 : 					break;

  007c5	e9 70 02 00 00	 jmp	 $LN3@RegisterSu
$LN46@RegisterSu:

; 1591 : 			}
; 1592 : 
; 1593 : #ifdef _DEBUG
; 1594 : 			if (bRecover != bInRecovery)

  007ca	8b 4d 14	 mov	 ecx, DWORD PTR _bRecover$[ebp]
  007cd	3b 8d c8 fd ff
	ff		 cmp	 ecx, DWORD PTR _bInRecovery$[ebp]
  007d3	74 30		 je	 SHORT $LN49@RegisterSu

; 1595 : 				ATLTRACE(atlTraceRegistrar, 0, _T("Ending Recovery Mode\n"));

  007d5	68 00 00 00 00	 push	 OFFSET ??_C@_1CM@OHCCCDHD@?$AAE?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy@
  007da	6a 00		 push	 0
  007dc	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  007e1	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  007e6	50		 push	 eax
  007e7	68 3b 06 00 00	 push	 1595			; 0000063bH
  007ec	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  007f1	8d 8d 1c dd ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  007f7	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  007fc	50		 push	 eax
  007fd	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00802	83 c4 10	 add	 esp, 16			; 00000010H
$LN49@RegisterSu:

; 1596 : #endif
; 1597 : 			bRecover = bInRecovery;

  00805	8b 95 c8 fd ff
	ff		 mov	 edx, DWORD PTR _bInRecovery$[ebp]
  0080b	89 55 14	 mov	 DWORD PTR _bRecover$[ebp], edx

; 1598 : 
; 1599 : 			if (lRes == ERROR_FILE_NOT_FOUND)

  0080e	83 7d e0 02	 cmp	 DWORD PTR _lRes$[ebp], 2
  00812	75 05		 jne	 SHORT $LN50@RegisterSu

; 1600 : 				// Key already not present so not an error.
; 1601 : 				continue;

  00814	e9 aa f8 ff ff	 jmp	 $LN2@RegisterSu
$LN50@RegisterSu:

; 1602 : 
; 1603 : 			if (lRes != ERROR_SUCCESS)

  00819	83 7d e0 00	 cmp	 DWORD PTR _lRes$[ebp], 0
  0081d	74 24		 je	 SHORT $LN51@RegisterSu

; 1604 : 			{
; 1605 : 				// We are recovery mode continue on errors else break
; 1606 : 				if (bRecover)

  0081f	83 7d 14 00	 cmp	 DWORD PTR _bRecover$[ebp], 0
  00823	74 07		 je	 SHORT $LN52@RegisterSu

; 1607 : 					continue;

  00825	e9 99 f8 ff ff	 jmp	 $LN2@RegisterSu
  0082a	eb 17		 jmp	 SHORT $LN51@RegisterSu
$LN52@RegisterSu:

; 1608 : 				else
; 1609 : 				{
; 1610 : 					hr = AtlHresultFromWin32(lRes);

  0082c	8b 45 e0	 mov	 eax, DWORD PTR _lRes$[ebp]
  0082f	50		 push	 eax
  00830	e8 00 00 00 00	 call	 ?AtlHresultFromWin32@ATL@@YAJK@Z ; ATL::AtlHresultFromWin32
  00835	83 c4 04	 add	 esp, 4
  00838	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 1611 : 					break;

  0083e	e9 f7 01 00 00	 jmp	 $LN3@RegisterSu
$LN51@RegisterSu:

; 1612 : 				}
; 1613 : 			}
; 1614 : 
; 1615 : 			// If in recovery mode
; 1616 : 			if (bRecover && HasSubKeys(keyCur))

  00843	83 7d 14 00	 cmp	 DWORD PTR _bRecover$[ebp], 0
  00847	74 7c		 je	 SHORT $LN54@RegisterSu
  00849	8d 4d e8	 lea	 ecx, DWORD PTR _keyCur$[ebp]
  0084c	e8 00 00 00 00	 call	 ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ ; ATL::CRegKey::operator HKEY__ *
  00851	50		 push	 eax
  00852	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00855	e8 00 00 00 00	 call	 ?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z ; ATL::CRegParser::HasSubKeys
  0085a	85 c0		 test	 eax, eax
  0085c	74 67		 je	 SHORT $LN54@RegisterSu

; 1617 : 			{
; 1618 : 				// See if the KEY is in the NeverDelete list and if so, don't
; 1619 : 				if (CanForceRemoveKey(szKey) && bDelete)

  0085e	8d 8d d4 fd ff
	ff		 lea	 ecx, DWORD PTR _szKey$[ebp]
  00864	51		 push	 ecx
  00865	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00868	e8 00 00 00 00	 call	 ?CanForceRemoveKey@CRegParser@ATL@@IAEHPB_W@Z ; ATL::CRegParser::CanForceRemoveKey
  0086d	85 c0		 test	 eax, eax
  0086f	74 4f		 je	 SHORT $LN55@RegisterSu
  00871	83 bd cc fd ff
	ff 00		 cmp	 DWORD PTR _bDelete$[ebp], 0
  00878	74 46		 je	 SHORT $LN55@RegisterSu

; 1620 : 				{
; 1621 : 					ATLTRACE(atlTraceRegistrar, 0, _T("Deleting non-empty subkey %Ts by force\n"), szKey);

  0087a	8d 95 d4 fd ff
	ff		 lea	 edx, DWORD PTR _szKey$[ebp]
  00880	52		 push	 edx
  00881	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@ECAJCMBE@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAo?$AAn?$AA?9?$AAe?$AAm@
  00886	6a 00		 push	 0
  00888	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  0088d	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  00892	50		 push	 eax
  00893	68 55 06 00 00	 push	 1621			; 00000655H
  00898	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0089d	8d 8d 14 dd ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  008a3	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  008a8	50		 push	 eax
  008a9	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  008ae	83 c4 14	 add	 esp, 20			; 00000014H

; 1622 : 					// Error not returned since we are in recovery mode. The error that caused recovery mode is returned
; 1623 : 					keyCur.RecurseDeleteKey(szKey);

  008b1	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _szKey$[ebp]
  008b7	50		 push	 eax
  008b8	8d 4d e8	 lea	 ecx, DWORD PTR _keyCur$[ebp]
  008bb	e8 00 00 00 00	 call	 ?RecurseDeleteKey@CRegKey@ATL@@QAEJPB_W@Z ; ATL::CRegKey::RecurseDeleteKey
$LN55@RegisterSu:

; 1624 : 				}
; 1625 : 				continue;

  008c0	e9 fe f7 ff ff	 jmp	 $LN2@RegisterSu
$LN54@RegisterSu:

; 1626 : 			}
; 1627 : 
; 1628 : 			BOOL bHasSubKeys=HasSubKeys(keyCur);

  008c5	8d 4d e8	 lea	 ecx, DWORD PTR _keyCur$[ebp]
  008c8	e8 00 00 00 00	 call	 ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ ; ATL::CRegKey::operator HKEY__ *
  008cd	50		 push	 eax
  008ce	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008d1	e8 00 00 00 00	 call	 ?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z ; ATL::CRegParser::HasSubKeys
  008d6	89 85 78 dd ff
	ff		 mov	 DWORD PTR _bHasSubKeys$18[ebp], eax

; 1629 : 			lRes = keyCur.Close();

  008dc	8d 4d e8	 lea	 ecx, DWORD PTR _keyCur$[ebp]
  008df	e8 00 00 00 00	 call	 ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close
  008e4	89 45 e0	 mov	 DWORD PTR _lRes$[ebp], eax

; 1630 : 			if (lRes != ERROR_SUCCESS)

  008e7	83 7d e0 00	 cmp	 DWORD PTR _lRes$[ebp], 0
  008eb	74 25		 je	 SHORT $LN56@RegisterSu

; 1631 : 			return AtlHresultFromWin32(lRes);

  008ed	8b 4d e0	 mov	 ecx, DWORD PTR _lRes$[ebp]
  008f0	51		 push	 ecx
  008f1	e8 00 00 00 00	 call	 ?AtlHresultFromWin32@ATL@@YAJK@Z ; ATL::AtlHresultFromWin32
  008f6	83 c4 04	 add	 esp, 4
  008f9	89 85 10 dd ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  008ff	8d 4d e8	 lea	 ecx, DWORD PTR _keyCur$[ebp]
  00902	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  00907	8b 85 10 dd ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0090d	e9 42 01 00 00	 jmp	 $LN1@RegisterSu
$LN56@RegisterSu:

; 1632 : 
; 1633 : 			if (bDelete&& !bHasSubKeys)

  00912	83 bd cc fd ff
	ff 00		 cmp	 DWORD PTR _bDelete$[ebp], 0
  00919	0f 84 b0 00 00
	00		 je	 $EndCheck$79
  0091f	83 bd 78 dd ff
	ff 00		 cmp	 DWORD PTR _bHasSubKeys$18[ebp], 0
  00926	0f 85 a3 00 00
	00		 jne	 $EndCheck$79

; 1634 : 			{
; 1635 : 				ATLTRACE(atlTraceRegistrar, 0, _T("Deleting Key %Ts\n"), szKey);

  0092c	8d 95 d4 fd ff
	ff		 lea	 edx, DWORD PTR _szKey$[ebp]
  00932	52		 push	 edx
  00933	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@OGJGDPFE@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAK?$AAe?$AAy?$AA?5?$AA?$CF?$AAT@
  00938	6a 00		 push	 0
  0093a	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  0093f	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  00944	50		 push	 eax
  00945	68 63 06 00 00	 push	 1635			; 00000663H
  0094a	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0094f	8d 8d 08 dd ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00955	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0095a	50		 push	 eax
  0095b	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00960	83 c4 14	 add	 esp, 20			; 00000014H

; 1636 : 				CRegKey rkParent;

  00963	6a 00		 push	 0
  00965	8d 8d 68 dd ff
	ff		 lea	 ecx, DWORD PTR _rkParent$17[ebp]
  0096b	e8 00 00 00 00	 call	 ??0CRegKey@ATL@@QAE@PAVCAtlTransactionManager@1@@Z ; ATL::CRegKey::CRegKey

; 1637 : 				rkParent.Attach(hkParent);

  00970	8b 45 0c	 mov	 eax, DWORD PTR _hkParent$[ebp]
  00973	50		 push	 eax
  00974	8d 8d 68 dd ff
	ff		 lea	 ecx, DWORD PTR _rkParent$17[ebp]
  0097a	e8 00 00 00 00	 call	 ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z ; ATL::CRegKey::Attach

; 1638 : 				lRes = rkParent.DeleteSubKey(szKey);

  0097f	8d 8d d4 fd ff
	ff		 lea	 ecx, DWORD PTR _szKey$[ebp]
  00985	51		 push	 ecx
  00986	8d 8d 68 dd ff
	ff		 lea	 ecx, DWORD PTR _rkParent$17[ebp]
  0098c	e8 00 00 00 00	 call	 ?DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z ; ATL::CRegKey::DeleteSubKey
  00991	89 45 e0	 mov	 DWORD PTR _lRes$[ebp], eax

; 1639 : 				rkParent.Detach();

  00994	8d 8d 68 dd ff
	ff		 lea	 ecx, DWORD PTR _rkParent$17[ebp]
  0099a	e8 00 00 00 00	 call	 ?Detach@CRegKey@ATL@@QAEPAUHKEY__@@XZ ; ATL::CRegKey::Detach

; 1640 : 				if (lRes != ERROR_SUCCESS)

  0099f	83 7d e0 00	 cmp	 DWORD PTR _lRes$[ebp], 0
  009a3	74 1f		 je	 SHORT $LN58@RegisterSu

; 1641 : 				{
; 1642 : 
; 1643 : 					hr = AtlHresultFromWin32(lRes);

  009a5	8b 55 e0	 mov	 edx, DWORD PTR _lRes$[ebp]
  009a8	52		 push	 edx
  009a9	e8 00 00 00 00	 call	 ?AtlHresultFromWin32@ATL@@YAJK@Z ; ATL::AtlHresultFromWin32
  009ae	83 c4 04	 add	 esp, 4
  009b1	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 1644 : 					break;

  009b7	8d 8d 68 dd ff
	ff		 lea	 ecx, DWORD PTR _rkParent$17[ebp]
  009bd	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  009c2	eb 76		 jmp	 SHORT $LN3@RegisterSu
$LN58@RegisterSu:

; 1645 : 				}
; 1646 : 			}

  009c4	8d 8d 68 dd ff
	ff		 lea	 ecx, DWORD PTR _rkParent$17[ebp]
  009ca	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
$EndCheck$79:

; 1650 : 
; 1651 : 		if (bRegister)

  009cf	83 7d 10 00	 cmp	 DWORD PTR _bRegister$[ebp], 0
  009d3	74 60		 je	 SHORT $LN59@RegisterSu

; 1652 : 		{
; 1653 : 			if (*szToken == chLeftBracket && _tcslen(szToken) == 1)

  009d5	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  009d8	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  009db	83 f9 7b	 cmp	 ecx, 123		; 0000007bH
  009de	75 55		 jne	 SHORT $LN59@RegisterSu
  009e0	8b 55 08	 mov	 edx, DWORD PTR _szToken$[ebp]
  009e3	52		 push	 edx
  009e4	e8 00 00 00 00	 call	 _wcslen
  009e9	83 c4 04	 add	 esp, 4
  009ec	83 f8 01	 cmp	 eax, 1
  009ef	75 44		 jne	 SHORT $LN59@RegisterSu

; 1654 : 			{
; 1655 : 				if (FAILED(hr = RegisterSubkeys(szToken, keyCur.m_hKey, bRegister, FALSE)))

  009f1	6a 00		 push	 0
  009f3	8b 45 10	 mov	 eax, DWORD PTR _bRegister$[ebp]
  009f6	50		 push	 eax
  009f7	8b 4d e8	 mov	 ecx, DWORD PTR _keyCur$[ebp]
  009fa	51		 push	 ecx
  009fb	8b 55 08	 mov	 edx, DWORD PTR _szToken$[ebp]
  009fe	52		 push	 edx
  009ff	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a02	e8 00 00 00 00	 call	 ?RegisterSubkeys@CRegParser@ATL@@IAEJPA_WPAUHKEY__@@HH@Z ; ATL::CRegParser::RegisterSubkeys
  00a07	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  00a0d	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00a14	7d 02		 jge	 SHORT $LN61@RegisterSu

; 1656 : 					break;

  00a16	eb 22		 jmp	 SHORT $LN3@RegisterSu
$LN61@RegisterSu:

; 1657 : 				if (FAILED(hr = NextToken(szToken)))

  00a18	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  00a1b	50		 push	 eax
  00a1c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a1f	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  00a24	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  00a2a	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00a31	7d 02		 jge	 SHORT $LN59@RegisterSu

; 1658 : 					break;

  00a33	eb 05		 jmp	 SHORT $LN3@RegisterSu
$LN59@RegisterSu:

; 1659 : 			}
; 1660 : 		}
; 1661 : 	}

  00a35	e9 89 f6 ff ff	 jmp	 $LN2@RegisterSu
$LN3@RegisterSu:

; 1662 : 
; 1663 : 	return hr;

  00a3a	8b 8d c4 fd ff
	ff		 mov	 ecx, DWORD PTR _hr$[ebp]
  00a40	89 8d 04 dd ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  00a46	8d 4d e8	 lea	 ecx, DWORD PTR _keyCur$[ebp]
  00a49	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  00a4e	8b 85 04 dd ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
$LN1@RegisterSu:

; 1664 : }

  00a54	52		 push	 edx
  00a55	8b cd		 mov	 ecx, ebp
  00a57	50		 push	 eax
  00a58	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN78@RegisterSu
  00a5e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00a63	58		 pop	 eax
  00a64	5a		 pop	 edx
  00a65	5f		 pop	 edi
  00a66	5e		 pop	 esi
  00a67	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00a6a	33 cd		 xor	 ecx, ebp
  00a6c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00a71	81 c4 00 23 00
	00		 add	 esp, 8960		; 00002300H
  00a77	3b ec		 cmp	 ebp, esp
  00a79	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a7e	8b e5		 mov	 esp, ebp
  00a80	5d		 pop	 ebp
  00a81	c2 10 00	 ret	 16			; 00000010H
$LN78@RegisterSu:
  00a84	07 00 00 00	 DD	 7
  00a88	00 00 00 00	 DD	 $LN77@RegisterSu
$LN77@RegisterSu:
  00a8c	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00a90	0c 00 00 00	 DD	 12			; 0000000cH
  00a94	00 00 00 00	 DD	 $LN70@RegisterSu
  00a98	d4 fd ff ff	 DD	 -556			; fffffdd4H
  00a9c	08 02 00 00	 DD	 520			; 00000208H
  00aa0	00 00 00 00	 DD	 $LN71@RegisterSu
  00aa4	b0 fd ff ff	 DD	 -592			; fffffdb0H
  00aa8	0c 00 00 00	 DD	 12			; 0000000cH
  00aac	00 00 00 00	 DD	 $LN72@RegisterSu
  00ab0	a8 dd ff ff	 DD	 -8792			; ffffdda8H
  00ab4	00 20 00 00	 DD	 8192			; 00002000H
  00ab8	00 00 00 00	 DD	 $LN73@RegisterSu
  00abc	94 dd ff ff	 DD	 -8812			; ffffdd94H
  00ac0	0c 00 00 00	 DD	 12			; 0000000cH
  00ac4	00 00 00 00	 DD	 $LN74@RegisterSu
  00ac8	80 dd ff ff	 DD	 -8832			; ffffdd80H
  00acc	0c 00 00 00	 DD	 12			; 0000000cH
  00ad0	00 00 00 00	 DD	 $LN75@RegisterSu
  00ad4	68 dd ff ff	 DD	 -8856			; ffffdd68H
  00ad8	0c 00 00 00	 DD	 12			; 0000000cH
  00adc	00 00 00 00	 DD	 $LN76@RegisterSu
$LN76@RegisterSu:
  00ae0	72		 DB	 114			; 00000072H
  00ae1	6b		 DB	 107			; 0000006bH
  00ae2	50		 DB	 80			; 00000050H
  00ae3	61		 DB	 97			; 00000061H
  00ae4	72		 DB	 114			; 00000072H
  00ae5	65		 DB	 101			; 00000065H
  00ae6	6e		 DB	 110			; 0000006eH
  00ae7	74		 DB	 116			; 00000074H
  00ae8	00		 DB	 0
$LN75@RegisterSu:
  00ae9	72		 DB	 114			; 00000072H
  00aea	6b		 DB	 107			; 0000006bH
  00aeb	50		 DB	 80			; 00000050H
  00aec	61		 DB	 97			; 00000061H
  00aed	72		 DB	 114			; 00000072H
  00aee	65		 DB	 101			; 00000065H
  00aef	6e		 DB	 110			; 0000006eH
  00af0	74		 DB	 116			; 00000074H
  00af1	00		 DB	 0
$LN74@RegisterSu:
  00af2	72		 DB	 114			; 00000072H
  00af3	6b		 DB	 107			; 0000006bH
  00af4	00		 DB	 0
$LN73@RegisterSu:
  00af5	73		 DB	 115			; 00000073H
  00af6	7a		 DB	 122			; 0000007aH
  00af7	56		 DB	 86			; 00000056H
  00af8	61		 DB	 97			; 00000061H
  00af9	6c		 DB	 108			; 0000006cH
  00afa	75		 DB	 117			; 00000075H
  00afb	65		 DB	 101			; 00000065H
  00afc	4e		 DB	 78			; 0000004eH
  00afd	61		 DB	 97			; 00000061H
  00afe	6d		 DB	 109			; 0000006dH
  00aff	65		 DB	 101			; 00000065H
  00b00	00		 DB	 0
$LN72@RegisterSu:
  00b01	72		 DB	 114			; 00000072H
  00b02	6b		 DB	 107			; 0000006bH
  00b03	46		 DB	 70			; 00000046H
  00b04	6f		 DB	 111			; 0000006fH
  00b05	72		 DB	 114			; 00000072H
  00b06	63		 DB	 99			; 00000063H
  00b07	65		 DB	 101			; 00000065H
  00b08	52		 DB	 82			; 00000052H
  00b09	65		 DB	 101			; 00000065H
  00b0a	6d		 DB	 109			; 0000006dH
  00b0b	6f		 DB	 111			; 0000006fH
  00b0c	76		 DB	 118			; 00000076H
  00b0d	65		 DB	 101			; 00000065H
  00b0e	00		 DB	 0
$LN71@RegisterSu:
  00b0f	73		 DB	 115			; 00000073H
  00b10	7a		 DB	 122			; 0000007aH
  00b11	4b		 DB	 75			; 0000004bH
  00b12	65		 DB	 101			; 00000065H
  00b13	79		 DB	 121			; 00000079H
  00b14	00		 DB	 0
$LN70@RegisterSu:
  00b15	6b		 DB	 107			; 0000006bH
  00b16	65		 DB	 101			; 00000065H
  00b17	79		 DB	 121			; 00000079H
  00b18	43		 DB	 67			; 00000043H
  00b19	75		 DB	 117			; 00000075H
  00b1a	72		 DB	 114			; 00000072H
  00b1b	00		 DB	 0
?RegisterSubkeys@CRegParser@ATL@@IAEJPA_WPAUHKEY__@@HH@Z ENDP ; ATL::CRegParser::RegisterSubkeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z
_TEXT	SEGMENT
tv131 = -28						; size = 4
$T1 = -24						; size = 8
_cSubKeys$ = -12					; size = 4
_this$ = -4						; size = 4
_hkey$ = 8						; size = 4
?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z PROC	; ATL::CRegParser::HasSubKeys, COMDAT
; _this$ = ecx

; 1112 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000f	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00012	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00015	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00018	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001b	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001e	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00021	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1113 : 	DWORD cSubKeys = 0;

  00024	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _cSubKeys$[ebp], 0

; 1114 : 
; 1115 : 	if (RegQueryInfoKeyW(hkey, NULL, NULL, NULL,
; 1116 : 							   &cSubKeys, NULL, NULL,
; 1117 : 							   NULL, NULL, NULL, NULL, NULL) != ERROR_SUCCESS)

  0002b	8b f4		 mov	 esi, esp
  0002d	6a 00		 push	 0
  0002f	6a 00		 push	 0
  00031	6a 00		 push	 0
  00033	6a 00		 push	 0
  00035	6a 00		 push	 0
  00037	6a 00		 push	 0
  00039	6a 00		 push	 0
  0003b	8d 45 f4	 lea	 eax, DWORD PTR _cSubKeys$[ebp]
  0003e	50		 push	 eax
  0003f	6a 00		 push	 0
  00041	6a 00		 push	 0
  00043	6a 00		 push	 0
  00045	8b 4d 08	 mov	 ecx, DWORD PTR _hkey$[ebp]
  00048	51		 push	 ecx
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegQueryInfoKeyW@48
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	85 c0		 test	 eax, eax
  00058	74 5b		 je	 SHORT $LN2@HasSubKeys

; 1118 : 	{
; 1119 : 		ATLTRACE(atlTraceRegistrar, 0, _T("Should not be here!!\n"));

  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_1CM@LNIALBHN@?$AAS?$AAh?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAb?$AAe?$AA?5?$AAh@
  0005f	6a 00		 push	 0
  00061	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  00066	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  0006b	50		 push	 eax
  0006c	68 5f 04 00 00	 push	 1119			; 0000045fH
  00071	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00076	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  00079	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00084	83 c4 10	 add	 esp, 16			; 00000010H

; 1120 : 		ATLASSERT(FALSE);

  00087	33 d2		 xor	 edx, edx
  00089	75 26		 jne	 SHORT $LN4@HasSubKeys
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00095	6a 00		 push	 0
  00097	68 60 04 00 00	 push	 1120			; 00000460H
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IGDLHBDL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a1	6a 02		 push	 2
  000a3	e8 00 00 00 00	 call	 __CrtDbgReportW
  000a8	83 c4 18	 add	 esp, 24			; 00000018H
  000ab	83 f8 01	 cmp	 eax, 1
  000ae	75 01		 jne	 SHORT $LN4@HasSubKeys
  000b0	cc		 int	 3
$LN4@HasSubKeys:

; 1121 : 		return FALSE;

  000b1	33 c0		 xor	 eax, eax
  000b3	eb 19		 jmp	 SHORT $LN1@HasSubKeys
$LN2@HasSubKeys:

; 1122 : 	}
; 1123 : 
; 1124 : 	return cSubKeys > 0;

  000b5	83 7d f4 00	 cmp	 DWORD PTR _cSubKeys$[ebp], 0
  000b9	76 09		 jbe	 SHORT $LN5@HasSubKeys
  000bb	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR tv131[ebp], 1
  000c2	eb 07		 jmp	 SHORT $LN6@HasSubKeys
$LN5@HasSubKeys:
  000c4	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN6@HasSubKeys:
  000cb	8b 45 e4	 mov	 eax, DWORD PTR tv131[ebp]
$LN1@HasSubKeys:

; 1125 : }

  000ce	52		 push	 edx
  000cf	8b cd		 mov	 ecx, ebp
  000d1	50		 push	 eax
  000d2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@HasSubKeys
  000d8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000dd	58		 pop	 eax
  000de	5a		 pop	 edx
  000df	5e		 pop	 esi
  000e0	83 c4 1c	 add	 esp, 28			; 0000001cH
  000e3	3b ec		 cmp	 ebp, esp
  000e5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ea	8b e5		 mov	 esp, ebp
  000ec	5d		 pop	 ebp
  000ed	c2 04 00	 ret	 4
$LN9@HasSubKeys:
  000f0	01 00 00 00	 DD	 1
  000f4	00 00 00 00	 DD	 $LN8@HasSubKeys
$LN8@HasSubKeys:
  000f8	f4 ff ff ff	 DD	 -12			; fffffff4H
  000fc	04 00 00 00	 DD	 4
  00100	00 00 00 00	 DD	 $LN7@HasSubKeys
$LN7@HasSubKeys:
  00104	63		 DB	 99			; 00000063H
  00105	53		 DB	 83			; 00000053H
  00106	75		 DB	 117			; 00000075H
  00107	62		 DB	 98			; 00000062H
  00108	4b		 DB	 75			; 0000004bH
  00109	65		 DB	 101			; 00000065H
  0010a	79		 DB	 121			; 00000079H
  0010b	73		 DB	 115			; 00000073H
  0010c	00		 DB	 0
?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z ENDP	; ATL::CRegParser::HasSubKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?CanForceRemoveKey@CRegParser@ATL@@IAEHPB_W@Z
_TEXT	SEGMENT
_iNoDel$1 = -8						; size = 4
_this$ = -4						; size = 4
_szKey$ = 8						; size = 4
?CanForceRemoveKey@CRegParser@ATL@@IAEHPB_W@Z PROC	; ATL::CRegParser::CanForceRemoveKey, COMDAT
; _this$ = ecx

; 1103 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1104 : 	for (int iNoDel = 0; iNoDel < cbNeverDelete; iNoDel++)

  00018	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iNoDel$1[ebp], 0
  0001f	eb 09		 jmp	 SHORT $LN4@CanForceRe
$LN2@CanForceRe:
  00021	8b 45 f8	 mov	 eax, DWORD PTR _iNoDel$1[ebp]
  00024	83 c0 01	 add	 eax, 1
  00027	89 45 f8	 mov	 DWORD PTR _iNoDel$1[ebp], eax
$LN4@CanForceRe:
  0002a	83 7d f8 0c	 cmp	 DWORD PTR _iNoDel$1[ebp], 12 ; 0000000cH
  0002e	7d 28		 jge	 SHORT $LN3@CanForceRe

; 1105 : 		if (!lstrcmpi(szKey, rgszNeverDelete[iNoDel]))

  00030	8b f4		 mov	 esi, esp
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _iNoDel$1[ebp]
  00035	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?rgszNeverDelete@CRegParser@ATL@@1QBQB_WB[ecx*4]
  0003c	52		 push	 edx
  0003d	8b 45 08	 mov	 eax, DWORD PTR _szKey$[ebp]
  00040	50		 push	 eax
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpiW@8
  00047	3b f4		 cmp	 esi, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	85 c0		 test	 eax, eax
  00050	75 04		 jne	 SHORT $LN5@CanForceRe

; 1106 : 			 return FALSE;                       // We cannot delete it

  00052	33 c0		 xor	 eax, eax
  00054	eb 07		 jmp	 SHORT $LN1@CanForceRe
$LN5@CanForceRe:
  00056	eb c9		 jmp	 SHORT $LN2@CanForceRe
$LN3@CanForceRe:

; 1107 : 
; 1108 : 	return TRUE;

  00058	b8 01 00 00 00	 mov	 eax, 1
$LN1@CanForceRe:

; 1109 : }

  0005d	5e		 pop	 esi
  0005e	83 c4 08	 add	 esp, 8
  00061	3b ec		 cmp	 ebp, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 04 00	 ret	 4
?CanForceRemoveKey@CRegParser@ATL@@IAEHPB_W@Z ENDP	; ATL::CRegParser::CanForceRemoveKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PB_WPA_W@Z
_TEXT	SEGMENT
tv299 = -8908						; size = 4
tv215 = -8904						; size = 4
tv150 = -8900						; size = 4
tv136 = -8896						; size = 4
tv92 = -8892						; size = 4
$T1 = -8888						; size = 4
$T2 = -8884						; size = 8
$T3 = -8876						; size = 8
$T4 = -8868						; size = 4
$T5 = -8864						; size = 8
$T6 = -8856						; size = 8
$T7 = -8848						; size = 8
_irg$8 = -8840						; size = 4
_rgBinary$9 = -8832					; size = 260
_cbValDiv2$10 = -8568					; size = 4
_cbValue$11 = -8564					; size = 4
_lpszV$12 = -8560					; size = 4
__AtlSafeAllocaManager$13 = -8552			; size = 4
__lpa_ex$14 = -8544					; size = 4
__lpw_ex$15 = -8540					; size = 4
__acp_ex$16 = -8536					; size = 4
__convert_ex$17 = -8532					; size = 4
_ulVal$18 = -8524					; size = 4
_r$19 = -8516						; size = 4
_q$20 = -8512						; size = 4
_p$21 = -8508						; size = 4
_pszDestValue$22 = -8500				; size = 260
_nLen$23 = -8236					; size = 4
_nIDRes$ = -8232					; size = 4
_lRes$ = -8228						; size = 4
_vt$ = -8220						; size = 2
_szValue$ = -8208					; size = 8192
_hr$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_rkParent$ = 8						; size = 4
_szValueName$ = 12					; size = 4
_szToken$ = 16						; size = 4
?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PB_WPA_W@Z PROC ; ATL::CRegParser::AddValue, COMDAT
; _this$ = ecx

; 971  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 cc 22 00 00	 mov	 eax, 8908		; 000022ccH
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	51		 push	 ecx
  00010	8d bd 34 dd ff
	ff		 lea	 edi, DWORD PTR [ebp-8908]
  00016	b9 b3 08 00 00	 mov	 ecx, 2227		; 000008b3H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	59		 pop	 ecx
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00028	33 c5		 xor	 eax, ebp
  0002a	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002d	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 972  : 	HRESULT hr;
; 973  : 
; 974  : 	TCHAR		szValue[MAX_VALUE];
; 975  : 	VARTYPE     vt = VT_EMPTY;

  00030	33 c0		 xor	 eax, eax
  00032	66 89 85 e4 df
	ff ff		 mov	 WORD PTR _vt$[ebp], ax

; 976  : 	LONG        lRes = ERROR_SUCCESS;

  00039	c7 85 dc df ff
	ff 00 00 00 00	 mov	 DWORD PTR _lRes$[ebp], 0

; 977  : 	UINT        nIDRes = 0;

  00043	c7 85 d8 df ff
	ff 00 00 00 00	 mov	 DWORD PTR _nIDRes$[ebp], 0

; 978  : 
; 979  : 	if (FAILED(hr = NextToken(szValue)))

  0004d	8d 8d f0 df ff
	ff		 lea	 ecx, DWORD PTR _szValue$[ebp]
  00053	51		 push	 ecx
  00054	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  0005c	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  0005f	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00063	7d 08		 jge	 SHORT $LN9@AddValue

; 980  : 		return hr;

  00065	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  00068	e9 58 06 00 00	 jmp	 $LN1@AddValue
$LN9@AddValue:

; 981  : 	if (!VTFromRegType(szValue, vt))

  0006d	8d 95 e4 df ff
	ff		 lea	 edx, DWORD PTR _vt$[ebp]
  00073	52		 push	 edx
  00074	8d 85 f0 df ff
	ff		 lea	 eax, DWORD PTR _szValue$[ebp]
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?VTFromRegType@CRegParser@ATL@@KAHPB_WAAG@Z ; ATL::CRegParser::VTFromRegType
  00080	83 c4 08	 add	 esp, 8
  00083	85 c0		 test	 eax, eax
  00085	75 49		 jne	 SHORT $LN10@AddValue

; 982  : 	{
; 983  : 		ATLTRACE(atlTraceRegistrar, 0, _T("%Ts Type not supported\n"), szValue);

  00087	8d 8d f0 df ff
	ff		 lea	 ecx, DWORD PTR _szValue$[ebp]
  0008d	51		 push	 ecx
  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_1DA@BDBPEMM@?$AA?$CF?$AAT?$AAs?$AA?5?$AAT?$AAy?$AAp?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAu@
  00093	6a 00		 push	 0
  00095	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  0009a	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  0009f	50		 push	 eax
  000a0	68 d7 03 00 00	 push	 983			; 000003d7H
  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000aa	8d 8d 70 dd ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  000b0	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000b5	50		 push	 eax
  000b6	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000bb	83 c4 14	 add	 esp, 20			; 00000014H

; 984  : 		return GenerateError(E_ATL_TYPE_NOT_SUPPORTED);

  000be	68 0f 02 00 00	 push	 527			; 0000020fH
  000c3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	e8 00 00 00 00	 call	 ?GenerateError@CRegParser@ATL@@IAEJI@Z ; ATL::CRegParser::GenerateError
  000cb	e9 f5 05 00 00	 jmp	 $LN1@AddValue
$LN10@AddValue:

; 985  : 	}
; 986  : 
; 987  : 	SkipWhiteSpace();

  000d0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	e8 00 00 00 00	 call	 ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ ; ATL::CRegParser::SkipWhiteSpace

; 988  : 	if (FAILED(hr = NextToken(szValue)))

  000d8	8d 95 f0 df ff
	ff		 lea	 edx, DWORD PTR _szValue$[ebp]
  000de	52		 push	 edx
  000df	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e2	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  000e7	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  000ea	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000ee	7d 08		 jge	 SHORT $LN11@AddValue

; 989  : 		return hr;

  000f0	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  000f3	e9 cd 05 00 00	 jmp	 $LN1@AddValue
$LN11@AddValue:

; 990  : 
; 991  : 	switch (vt)

  000f8	0f b7 85 e4 df
	ff ff		 movzx	 eax, WORD PTR _vt$[ebp]
  000ff	89 85 44 dd ff
	ff		 mov	 DWORD PTR tv92[ebp], eax
  00105	83 bd 44 dd ff
	ff 13		 cmp	 DWORD PTR tv92[ebp], 19	; 00000013H
  0010c	7f 28		 jg	 SHORT $LN32@AddValue
  0010e	83 bd 44 dd ff
	ff 13		 cmp	 DWORD PTR tv92[ebp], 19	; 00000013H
  00115	0f 84 91 02 00
	00		 je	 $LN18@AddValue
  0011b	83 bd 44 dd ff
	ff 08		 cmp	 DWORD PTR tv92[ebp], 8
  00122	74 23		 je	 SHORT $LN12@AddValue
  00124	83 bd 44 dd ff
	ff 11		 cmp	 DWORD PTR tv92[ebp], 17	; 00000011H
  0012b	0f 84 9f 03 00
	00		 je	 $LN20@AddValue
  00131	e9 4f 05 00 00	 jmp	 $LN2@AddValue
$LN32@AddValue:
  00136	81 bd 44 dd ff
	ff 08 40 00 00	 cmp	 DWORD PTR tv92[ebp], 16392 ; 00004008H
  00140	74 7e		 je	 SHORT $LN13@AddValue
  00142	e9 3e 05 00 00	 jmp	 $LN2@AddValue
$LN12@AddValue:

; 992  : 	{
; 993  : 	case VT_BSTR:
; 994  : 		{
; 995  : 			lRes = rkParent.SetStringValue(szValueName, szValue);

  00147	6a 01		 push	 1
  00149	8d 8d f0 df ff
	ff		 lea	 ecx, DWORD PTR _szValue$[ebp]
  0014f	51		 push	 ecx
  00150	8b 55 0c	 mov	 edx, DWORD PTR _szValueName$[ebp]
  00153	52		 push	 edx
  00154	8b 4d 08	 mov	 ecx, DWORD PTR _rkParent$[ebp]
  00157	e8 00 00 00 00	 call	 ?SetStringValue@CRegKey@ATL@@QAEJPB_W0K@Z ; ATL::CRegKey::SetStringValue
  0015c	89 85 dc df ff
	ff		 mov	 DWORD PTR _lRes$[ebp], eax

; 996  : 			ATLTRACE(atlTraceRegistrar, 2, _T("Setting Value %Ts at %Ts\n"), szValue, !szValueName ? _T("default") : szValueName);

  00162	83 7d 0c 00	 cmp	 DWORD PTR _szValueName$[ebp], 0
  00166	75 0c		 jne	 SHORT $LN26@AddValue
  00168	c7 85 40 dd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv136[ebp], OFFSET ??_C@_1BA@HANLFFFG@?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt@
  00172	eb 09		 jmp	 SHORT $LN27@AddValue
$LN26@AddValue:
  00174	8b 45 0c	 mov	 eax, DWORD PTR _szValueName$[ebp]
  00177	89 85 40 dd ff
	ff		 mov	 DWORD PTR tv136[ebp], eax
$LN27@AddValue:
  0017d	8b 8d 40 dd ff
	ff		 mov	 ecx, DWORD PTR tv136[ebp]
  00183	51		 push	 ecx
  00184	8d 95 f0 df ff
	ff		 lea	 edx, DWORD PTR _szValue$[ebp]
  0018a	52		 push	 edx
  0018b	68 00 00 00 00	 push	 OFFSET ??_C@_1DE@GENBDOHF@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF@
  00190	6a 02		 push	 2
  00192	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  00197	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  0019c	50		 push	 eax
  0019d	68 e4 03 00 00	 push	 996			; 000003e4H
  001a2	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  001a7	8d 8d 68 dd ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  001ad	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  001b2	50		 push	 eax
  001b3	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  001b8	83 c4 18	 add	 esp, 24			; 00000018H

; 997  : 			break;

  001bb	e9 c5 04 00 00	 jmp	 $LN2@AddValue
$LN13@AddValue:

; 998  : 		}
; 999  : 	case VT_BSTR | VT_BYREF:
; 1000 : 		{
; 1001 : 			ATLTRACE(atlTraceRegistrar, 2, _T("Setting Value %Ts at %Ts\n"), szValue, !szValueName ? _T("default") : szValueName);

  001c0	83 7d 0c 00	 cmp	 DWORD PTR _szValueName$[ebp], 0
  001c4	75 0c		 jne	 SHORT $LN28@AddValue
  001c6	c7 85 3c dd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv150[ebp], OFFSET ??_C@_1BA@HANLFFFG@?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt@
  001d0	eb 09		 jmp	 SHORT $LN29@AddValue
$LN28@AddValue:
  001d2	8b 45 0c	 mov	 eax, DWORD PTR _szValueName$[ebp]
  001d5	89 85 3c dd ff
	ff		 mov	 DWORD PTR tv150[ebp], eax
$LN29@AddValue:
  001db	8b 8d 3c dd ff
	ff		 mov	 ecx, DWORD PTR tv150[ebp]
  001e1	51		 push	 ecx
  001e2	8d 95 f0 df ff
	ff		 lea	 edx, DWORD PTR _szValue$[ebp]
  001e8	52		 push	 edx
  001e9	68 00 00 00 00	 push	 OFFSET ??_C@_1DE@GENBDOHF@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF@
  001ee	6a 02		 push	 2
  001f0	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  001f5	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  001fa	50		 push	 eax
  001fb	68 e9 03 00 00	 push	 1001			; 000003e9H
  00200	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00205	8d 8d 60 dd ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  0020b	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00216	83 c4 18	 add	 esp, 24			; 00000018H

; 1002 : 			int nLen = static_cast<int>(_tcslen(szValue) + 2); //Allocate space for double null termination.

  00219	8d 85 f0 df ff
	ff		 lea	 eax, DWORD PTR _szValue$[ebp]
  0021f	50		 push	 eax
  00220	e8 00 00 00 00	 call	 _wcslen
  00225	83 c4 04	 add	 esp, 4
  00228	83 c0 02	 add	 eax, 2
  0022b	89 85 d4 df ff
	ff		 mov	 DWORD PTR _nLen$23[ebp], eax

; 1003 : 			CTempBuffer<TCHAR, 256> pszDestValue;

  00231	8d 8d cc de ff
	ff		 lea	 ecx, DWORD PTR _pszDestValue$22[ebp]
  00237	e8 00 00 00 00	 call	 ??0?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>

; 1004 : 			//nLen should be >= the max size of the target buffer.
; 1005 : 			ATLTRY(pszDestValue.Allocate(nLen));

  0023c	8b 8d d4 df ff
	ff		 mov	 ecx, DWORD PTR _nLen$23[ebp]
  00242	51		 push	 ecx
  00243	8d 8d cc de ff
	ff		 lea	 ecx, DWORD PTR _pszDestValue$22[ebp]
  00249	e8 00 00 00 00	 call	 ?Allocate@?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPA_WI@Z ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::Allocate

; 1006 : 			if (pszDestValue != NULL)

  0024e	8d 8d cc de ff
	ff		 lea	 ecx, DWORD PTR _pszDestValue$22[ebp]
  00254	e8 00 00 00 00	 call	 ??B?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::operator wchar_t *
  00259	85 c0		 test	 eax, eax
  0025b	0f 84 31 01 00
	00		 je	 $LN14@AddValue

; 1007 : 			{
; 1008 : 				TCHAR* p = pszDestValue;

  00261	8d 8d cc de ff
	ff		 lea	 ecx, DWORD PTR _pszDestValue$22[ebp]
  00267	e8 00 00 00 00	 call	 ??B?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::operator wchar_t *
  0026c	89 85 c4 de ff
	ff		 mov	 DWORD PTR _p$21[ebp], eax

; 1009 : 				TCHAR* q = szValue;

  00272	8d 95 f0 df ff
	ff		 lea	 edx, DWORD PTR _szValue$[ebp]
  00278	89 95 c0 de ff
	ff		 mov	 DWORD PTR _q$20[ebp], edx

; 1010 : 				nLen = 0;

  0027e	c7 85 d4 df ff
	ff 00 00 00 00	 mov	 DWORD PTR _nLen$23[ebp], 0
$LN4@AddValue:

; 1011 : 				while (*q != _T('\0'))

  00288	8b 85 c0 de ff
	ff		 mov	 eax, DWORD PTR _q$20[ebp]
  0028e	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00291	85 c9		 test	 ecx, ecx
  00293	0f 84 b4 00 00
	00		 je	 $LN5@AddValue

; 1012 : 				{
; 1013 : 					TCHAR* r = CharNext(q);

  00299	8b f4		 mov	 esi, esp
  0029b	8b 95 c0 de ff
	ff		 mov	 edx, DWORD PTR _q$20[ebp]
  002a1	52		 push	 edx
  002a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  002a8	3b f4		 cmp	 esi, esp
  002aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002af	89 85 bc de ff
	ff		 mov	 DWORD PTR _r$19[ebp], eax

; 1014 : 					if (*q == _T('\\') && *r == _T('0'))

  002b5	8b 85 c0 de ff
	ff		 mov	 eax, DWORD PTR _q$20[ebp]
  002bb	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  002be	83 f9 5c	 cmp	 ecx, 92			; 0000005cH
  002c1	75 46		 jne	 SHORT $LN16@AddValue
  002c3	8b 95 bc de ff
	ff		 mov	 edx, DWORD PTR _r$19[ebp]
  002c9	0f b7 02	 movzx	 eax, WORD PTR [edx]
  002cc	83 f8 30	 cmp	 eax, 48			; 00000030H
  002cf	75 38		 jne	 SHORT $LN16@AddValue

; 1015 : 					{
; 1016 : 						*p++ = _T('\0');

  002d1	33 c9		 xor	 ecx, ecx
  002d3	8b 95 c4 de ff
	ff		 mov	 edx, DWORD PTR _p$21[ebp]
  002d9	66 89 0a	 mov	 WORD PTR [edx], cx
  002dc	8b 85 c4 de ff
	ff		 mov	 eax, DWORD PTR _p$21[ebp]
  002e2	83 c0 02	 add	 eax, 2
  002e5	89 85 c4 de ff
	ff		 mov	 DWORD PTR _p$21[ebp], eax

; 1017 : 						q = CharNext(r);

  002eb	8b f4		 mov	 esi, esp
  002ed	8b 8d bc de ff
	ff		 mov	 ecx, DWORD PTR _r$19[ebp]
  002f3	51		 push	 ecx
  002f4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  002fa	3b f4		 cmp	 esi, esp
  002fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00301	89 85 c0 de ff
	ff		 mov	 DWORD PTR _q$20[ebp], eax

; 1018 : 					}

  00307	eb 30		 jmp	 SHORT $LN17@AddValue
$LN16@AddValue:

; 1019 : 					else
; 1020 : 					{
; 1021 : 						*p = *q;

  00309	8b 95 c4 de ff
	ff		 mov	 edx, DWORD PTR _p$21[ebp]
  0030f	8b 85 c0 de ff
	ff		 mov	 eax, DWORD PTR _q$20[ebp]
  00315	66 8b 08	 mov	 cx, WORD PTR [eax]
  00318	66 89 0a	 mov	 WORD PTR [edx], cx

; 1022 : #ifndef _UNICODE
; 1023 : 						if (IsDBCSLeadByte(*q))
; 1024 : 						{
; 1025 : 							p++;
; 1026 : 							q++;
; 1027 : 							//Protect from Lead byte followed by the zero terminator.May skip beyond the end of the string.
; 1028 : 							if (*q == _T('\0')) { break; }
; 1029 : 							*p = *q;
; 1030 : 						}
; 1031 : #endif
; 1032 : 						p++;

  0031b	8b 95 c4 de ff
	ff		 mov	 edx, DWORD PTR _p$21[ebp]
  00321	83 c2 02	 add	 edx, 2
  00324	89 95 c4 de ff
	ff		 mov	 DWORD PTR _p$21[ebp], edx

; 1033 : 						q++;

  0032a	8b 85 c0 de ff
	ff		 mov	 eax, DWORD PTR _q$20[ebp]
  00330	83 c0 02	 add	 eax, 2
  00333	89 85 c0 de ff
	ff		 mov	 DWORD PTR _q$20[ebp], eax
$LN17@AddValue:

; 1034 : 					}
; 1035 : 					nLen ++;

  00339	8b 8d d4 df ff
	ff		 mov	 ecx, DWORD PTR _nLen$23[ebp]
  0033f	83 c1 01	 add	 ecx, 1
  00342	89 8d d4 df ff
	ff		 mov	 DWORD PTR _nLen$23[ebp], ecx

; 1036 : 				}

  00348	e9 3b ff ff ff	 jmp	 $LN4@AddValue
$LN5@AddValue:

; 1037 : 			   //Always terminate with 2 null characters.
; 1038 : 				*p = _T('\0');

  0034d	33 d2		 xor	 edx, edx
  0034f	8b 85 c4 de ff
	ff		 mov	 eax, DWORD PTR _p$21[ebp]
  00355	66 89 10	 mov	 WORD PTR [eax], dx

; 1039 : 				p++;

  00358	8b 8d c4 de ff
	ff		 mov	 ecx, DWORD PTR _p$21[ebp]
  0035e	83 c1 02	 add	 ecx, 2
  00361	89 8d c4 de ff
	ff		 mov	 DWORD PTR _p$21[ebp], ecx

; 1040 : 			    *p = _T('\0');

  00367	33 d2		 xor	 edx, edx
  00369	8b 85 c4 de ff
	ff		 mov	 eax, DWORD PTR _p$21[ebp]
  0036f	66 89 10	 mov	 WORD PTR [eax], dx

; 1041 : 				lRes = rkParent.SetMultiStringValue(szValueName, pszDestValue);

  00372	8d 8d cc de ff
	ff		 lea	 ecx, DWORD PTR _pszDestValue$22[ebp]
  00378	e8 00 00 00 00	 call	 ??B?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::operator wchar_t *
  0037d	50		 push	 eax
  0037e	8b 4d 0c	 mov	 ecx, DWORD PTR _szValueName$[ebp]
  00381	51		 push	 ecx
  00382	8b 4d 08	 mov	 ecx, DWORD PTR _rkParent$[ebp]
  00385	e8 00 00 00 00	 call	 ?SetMultiStringValue@CRegKey@ATL@@QAEJPB_W0@Z ; ATL::CRegKey::SetMultiStringValue
  0038a	89 85 dc df ff
	ff		 mov	 DWORD PTR _lRes$[ebp], eax

; 1042 : 			}

  00390	eb 0a		 jmp	 SHORT $LN15@AddValue
$LN14@AddValue:

; 1043 : 			else
; 1044 : 			{
; 1045 : 				lRes = ERROR_OUTOFMEMORY;

  00392	c7 85 dc df ff
	ff 0e 00 00 00	 mov	 DWORD PTR _lRes$[ebp], 14 ; 0000000eH
$LN15@AddValue:

; 1046 : 			}
; 1047 : 		}

  0039c	8d 8d cc de ff
	ff		 lea	 ecx, DWORD PTR _pszDestValue$22[ebp]
  003a2	e8 00 00 00 00	 call	 ??1?$CTempBuffer@_W$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<wchar_t,256,ATL::CCRTAllocator>::~CTempBuffer<wchar_t,256,ATL::CCRTAllocator>

; 1048 : 		break;

  003a7	e9 d9 02 00 00	 jmp	 $LN2@AddValue
$LN18@AddValue:

; 1049 : 	case VT_UI4:
; 1050 : 		{
; 1051 : 			ULONG ulVal;
; 1052 : 			USES_CONVERSION_EX;

  003ac	c7 85 ac de ff
	ff 00 00 00 00	 mov	 DWORD PTR __convert_ex$17[ebp], 0
  003b6	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  003bb	89 85 a8 de ff
	ff		 mov	 DWORD PTR __acp_ex$16[ebp], eax
  003c1	c7 85 a4 de ff
	ff 00 00 00 00	 mov	 DWORD PTR __lpw_ex$15[ebp], 0
  003cb	c7 85 a0 de ff
	ff 00 00 00 00	 mov	 DWORD PTR __lpa_ex$14[ebp], 0
  003d5	8d 8d 98 de ff
	ff		 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$13[ebp]
  003db	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>

; 1053 : 
; 1054 : 			LPOLESTR lpszV = T2OLE_EX(szValue, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  003e0	68 00 04 00 00	 push	 1024			; 00000400H
  003e5	8d 95 f0 df ff
	ff		 lea	 edx, DWORD PTR _szValue$[ebp]
  003eb	52		 push	 edx
  003ec	e8 00 00 00 00	 call	 ?T2OLE_EX@@YAPA_WPA_WI@Z ; T2OLE_EX
  003f1	83 c4 08	 add	 esp, 8
  003f4	89 85 90 de ff
	ff		 mov	 DWORD PTR _lpszV$12[ebp], eax

; 1055 : 	#ifndef _UNICODE
; 1056 : 			if(lpszV == NULL)
; 1057 : 				return E_OUTOFMEMORY;
; 1058 : 	#endif
; 1059 : 
; 1060 : 			hr = VarUI4FromStr(lpszV, 0, 0, &ulVal);

  003fa	8b f4		 mov	 esi, esp
  003fc	8d 85 b4 de ff
	ff		 lea	 eax, DWORD PTR _ulVal$18[ebp]
  00402	50		 push	 eax
  00403	6a 00		 push	 0
  00405	6a 00		 push	 0
  00407	8b 8d 90 de ff
	ff		 mov	 ecx, DWORD PTR _lpszV$12[ebp]
  0040d	51		 push	 ecx
  0040e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VarUI4FromStr@16
  00414	3b f4		 cmp	 esi, esp
  00416	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0041b	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 1061 :             if (FAILED(hr))

  0041e	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00422	7d 1f		 jge	 SHORT $LN19@AddValue

; 1062 :                 return hr;

  00424	8b 55 f4	 mov	 edx, DWORD PTR _hr$[ebp]
  00427	89 95 5c dd ff
	ff		 mov	 DWORD PTR $T4[ebp], edx
  0042d	8d 8d 98 de ff
	ff		 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$13[ebp]
  00433	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00438	8b 85 5c dd ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  0043e	e9 82 02 00 00	 jmp	 $LN1@AddValue
$LN19@AddValue:

; 1063 : 
; 1064 : 			lRes = rkParent.SetDWORDValue(szValueName, ulVal);

  00443	8b 85 b4 de ff
	ff		 mov	 eax, DWORD PTR _ulVal$18[ebp]
  00449	50		 push	 eax
  0044a	8b 4d 0c	 mov	 ecx, DWORD PTR _szValueName$[ebp]
  0044d	51		 push	 ecx
  0044e	8b 4d 08	 mov	 ecx, DWORD PTR _rkParent$[ebp]
  00451	e8 00 00 00 00	 call	 ?SetDWORDValue@CRegKey@ATL@@QAEJPB_WK@Z ; ATL::CRegKey::SetDWORDValue
  00456	89 85 dc df ff
	ff		 mov	 DWORD PTR _lRes$[ebp], eax

; 1065 : 			ATLTRACE(atlTraceRegistrar, 2, _T("Setting Value %d at %Ts\n"), ulVal, !szValueName ? _T("default") : szValueName);

  0045c	83 7d 0c 00	 cmp	 DWORD PTR _szValueName$[ebp], 0
  00460	75 0c		 jne	 SHORT $LN30@AddValue
  00462	c7 85 38 dd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv215[ebp], OFFSET ??_C@_1BA@HANLFFFG@?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt@
  0046c	eb 09		 jmp	 SHORT $LN31@AddValue
$LN30@AddValue:
  0046e	8b 55 0c	 mov	 edx, DWORD PTR _szValueName$[ebp]
  00471	89 95 38 dd ff
	ff		 mov	 DWORD PTR tv215[ebp], edx
$LN31@AddValue:
  00477	8b 85 38 dd ff
	ff		 mov	 eax, DWORD PTR tv215[ebp]
  0047d	50		 push	 eax
  0047e	8b 8d b4 de ff
	ff		 mov	 ecx, DWORD PTR _ulVal$18[ebp]
  00484	51		 push	 ecx
  00485	68 00 00 00 00	 push	 OFFSET ??_C@_1DC@OPMJCKIB@?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF@
  0048a	6a 02		 push	 2
  0048c	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  00491	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  00496	50		 push	 eax
  00497	68 29 04 00 00	 push	 1065			; 00000429H
  0049c	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  004a1	8d 8d 54 dd ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  004a7	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  004ac	50		 push	 eax
  004ad	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  004b2	83 c4 18	 add	 esp, 24			; 00000018H

; 1066 : 			break;

  004b5	8d 8d 98 de ff
	ff		 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$13[ebp]
  004bb	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  004c0	e9 c0 01 00 00	 jmp	 $LN2@AddValue

; 1067 : 		}

  004c5	8d 8d 98 de ff
	ff		 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$13[ebp]
  004cb	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
$LN20@AddValue:

; 1068 : 	case VT_UI1:
; 1069 : 		{
; 1070 : 			int cbValue = static_cast<int>(_tcslen(szValue));

  004d0	8d 95 f0 df ff
	ff		 lea	 edx, DWORD PTR _szValue$[ebp]
  004d6	52		 push	 edx
  004d7	e8 00 00 00 00	 call	 _wcslen
  004dc	83 c4 04	 add	 esp, 4
  004df	89 85 8c de ff
	ff		 mov	 DWORD PTR _cbValue$11[ebp], eax

; 1071 : 			if (cbValue & 0x00000001)

  004e5	8b 85 8c de ff
	ff		 mov	 eax, DWORD PTR _cbValue$11[ebp]
  004eb	83 e0 01	 and	 eax, 1
  004ee	74 3a		 je	 SHORT $LN21@AddValue

; 1072 : 			{
; 1073 : 				ATLTRACE(atlTraceRegistrar, 0, _T("Binary Data does not fall on BYTE boundries\n"));

  004f0	68 00 00 00 00	 push	 OFFSET ??_C@_1FK@OIDGAAMP@?$AAB?$AAi?$AAn?$AAa?$AAr?$AAy?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AAd?$AAo?$AAe@
  004f5	6a 00		 push	 0
  004f7	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  004fc	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  00501	50		 push	 eax
  00502	68 31 04 00 00	 push	 1073			; 00000431H
  00507	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0050c	8d 8d 4c dd ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00512	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00517	50		 push	 eax
  00518	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0051d	83 c4 10	 add	 esp, 16			; 00000010H

; 1074 : 				return E_FAIL;

  00520	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00525	e9 9b 01 00 00	 jmp	 $LN1@AddValue
$LN21@AddValue:

; 1075 : 			}
; 1076 : 			int cbValDiv2 = cbValue/2;

  0052a	8b 85 8c de ff
	ff		 mov	 eax, DWORD PTR _cbValue$11[ebp]
  00530	99		 cdq
  00531	2b c2		 sub	 eax, edx
  00533	d1 f8		 sar	 eax, 1
  00535	89 85 88 de ff
	ff		 mov	 DWORD PTR _cbValDiv2$10[ebp], eax

; 1077 : 			CTempBuffer<BYTE, 256> rgBinary;

  0053b	8d 8d 80 dd ff
	ff		 lea	 ecx, DWORD PTR _rgBinary$9[ebp]
  00541	e8 00 00 00 00	 call	 ??0?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>

; 1078 : 			ATLTRY(rgBinary.Allocate(cbValDiv2));

  00546	8b 8d 88 de ff
	ff		 mov	 ecx, DWORD PTR _cbValDiv2$10[ebp]
  0054c	51		 push	 ecx
  0054d	8d 8d 80 dd ff
	ff		 lea	 ecx, DWORD PTR _rgBinary$9[ebp]
  00553	e8 00 00 00 00	 call	 ?Allocate@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::Allocate

; 1079 : 			if (rgBinary == NULL)

  00558	8d 8d 80 dd ff
	ff		 lea	 ecx, DWORD PTR _rgBinary$9[ebp]
  0055e	e8 00 00 00 00	 call	 ??B?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPAEXZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::operator unsigned char *
  00563	85 c0		 test	 eax, eax
  00565	75 20		 jne	 SHORT $LN22@AddValue

; 1080 : 				return E_FAIL;

  00567	c7 85 48 dd ff
	ff 05 40 00 80	 mov	 DWORD PTR $T1[ebp], -2147467259 ; 80004005H
  00571	8d 8d 80 dd ff
	ff		 lea	 ecx, DWORD PTR _rgBinary$9[ebp]
  00577	e8 00 00 00 00	 call	 ??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::~CTempBuffer<unsigned char,256,ATL::CCRTAllocator>
  0057c	8b 85 48 dd ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  00582	e9 3e 01 00 00	 jmp	 $LN1@AddValue
$LN22@AddValue:

; 1081 : 			memset(rgBinary, 0, cbValDiv2);

  00587	8b 95 88 de ff
	ff		 mov	 edx, DWORD PTR _cbValDiv2$10[ebp]
  0058d	52		 push	 edx
  0058e	6a 00		 push	 0
  00590	8d 8d 80 dd ff
	ff		 lea	 ecx, DWORD PTR _rgBinary$9[ebp]
  00596	e8 00 00 00 00	 call	 ??B?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPAEXZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::operator unsigned char *
  0059b	50		 push	 eax
  0059c	e8 00 00 00 00	 call	 _memset
  005a1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1082 : 			for (int irg = 0; irg < cbValue; irg++)

  005a4	c7 85 78 dd ff
	ff 00 00 00 00	 mov	 DWORD PTR _irg$8[ebp], 0
  005ae	eb 0f		 jmp	 SHORT $LN8@AddValue
$LN6@AddValue:
  005b0	8b 85 78 dd ff
	ff		 mov	 eax, DWORD PTR _irg$8[ebp]
  005b6	83 c0 01	 add	 eax, 1
  005b9	89 85 78 dd ff
	ff		 mov	 DWORD PTR _irg$8[ebp], eax
$LN8@AddValue:
  005bf	8b 8d 78 dd ff
	ff		 mov	 ecx, DWORD PTR _irg$8[ebp]
  005c5	3b 8d 8c de ff
	ff		 cmp	 ecx, DWORD PTR _cbValue$11[ebp]
  005cb	7d 67		 jge	 SHORT $LN7@AddValue

; 1083 : 				rgBinary[(irg/2)] |= (ChToByte(szValue[irg])) << (4*(1 - (irg & 0x00000001)));

  005cd	8d 8d 80 dd ff
	ff		 lea	 ecx, DWORD PTR _rgBinary$9[ebp]
  005d3	e8 00 00 00 00	 call	 ??B?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPAEXZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::operator unsigned char *
  005d8	8b c8		 mov	 ecx, eax
  005da	8b 85 78 dd ff
	ff		 mov	 eax, DWORD PTR _irg$8[ebp]
  005e0	99		 cdq
  005e1	2b c2		 sub	 eax, edx
  005e3	d1 f8		 sar	 eax, 1
  005e5	03 c8		 add	 ecx, eax
  005e7	89 8d 34 dd ff
	ff		 mov	 DWORD PTR tv299[ebp], ecx
  005ed	8b 95 78 dd ff
	ff		 mov	 edx, DWORD PTR _irg$8[ebp]
  005f3	0f b7 84 55 f0
	df ff ff	 movzx	 eax, WORD PTR _szValue$[ebp+edx*2]
  005fb	50		 push	 eax
  005fc	e8 00 00 00 00	 call	 ?ChToByte@CRegParser@ATL@@KAE_W@Z ; ATL::CRegParser::ChToByte
  00601	83 c4 04	 add	 esp, 4
  00604	0f b6 d0	 movzx	 edx, al
  00607	8b 85 78 dd ff
	ff		 mov	 eax, DWORD PTR _irg$8[ebp]
  0060d	83 e0 01	 and	 eax, 1
  00610	b9 01 00 00 00	 mov	 ecx, 1
  00615	2b c8		 sub	 ecx, eax
  00617	c1 e1 02	 shl	 ecx, 2
  0061a	d3 e2		 shl	 edx, cl
  0061c	8b 8d 34 dd ff
	ff		 mov	 ecx, DWORD PTR tv299[ebp]
  00622	0f b6 01	 movzx	 eax, BYTE PTR [ecx]
  00625	0b c2		 or	 eax, edx
  00627	8b 8d 34 dd ff
	ff		 mov	 ecx, DWORD PTR tv299[ebp]
  0062d	88 01		 mov	 BYTE PTR [ecx], al
  0062f	e9 7c ff ff ff	 jmp	 $LN6@AddValue
$LN7@AddValue:

; 1084 : 			lRes = RegSetValueEx(rkParent, szValueName, 0, REG_BINARY, rgBinary, cbValDiv2);

  00634	8b f4		 mov	 esi, esp
  00636	8b 95 88 de ff
	ff		 mov	 edx, DWORD PTR _cbValDiv2$10[ebp]
  0063c	52		 push	 edx
  0063d	8d 8d 80 dd ff
	ff		 lea	 ecx, DWORD PTR _rgBinary$9[ebp]
  00643	e8 00 00 00 00	 call	 ??B?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPAEXZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::operator unsigned char *
  00648	50		 push	 eax
  00649	6a 03		 push	 3
  0064b	6a 00		 push	 0
  0064d	8b 45 0c	 mov	 eax, DWORD PTR _szValueName$[ebp]
  00650	50		 push	 eax
  00651	8b 4d 08	 mov	 ecx, DWORD PTR _rkParent$[ebp]
  00654	e8 00 00 00 00	 call	 ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ ; ATL::CRegKey::operator HKEY__ *
  00659	50		 push	 eax
  0065a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegSetValueExW@24
  00660	3b f4		 cmp	 esi, esp
  00662	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00667	89 85 dc df ff
	ff		 mov	 DWORD PTR _lRes$[ebp], eax

; 1085 : 			break;

  0066d	8d 8d 80 dd ff
	ff		 lea	 ecx, DWORD PTR _rgBinary$9[ebp]
  00673	e8 00 00 00 00	 call	 ??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::~CTempBuffer<unsigned char,256,ATL::CCRTAllocator>
  00678	eb 0b		 jmp	 SHORT $LN2@AddValue

; 1086 : 		}

  0067a	8d 8d 80 dd ff
	ff		 lea	 ecx, DWORD PTR _rgBinary$9[ebp]
  00680	e8 00 00 00 00	 call	 ??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::~CTempBuffer<unsigned char,256,ATL::CCRTAllocator>
$LN2@AddValue:

; 1087 : 	}
; 1088 : 
; 1089 : 	if (ERROR_SUCCESS != lRes)

  00685	83 bd dc df ff
	ff 00		 cmp	 DWORD PTR _lRes$[ebp], 0
  0068c	74 1b		 je	 SHORT $LN23@AddValue

; 1090 : 	{
; 1091 : 		nIDRes = E_ATL_VALUE_SET_FAILED;

  0068e	c7 85 d8 df ff
	ff 04 02 00 00	 mov	 DWORD PTR _nIDRes$[ebp], 516 ; 00000204H

; 1092 : 		return AtlHresultFromWin32(lRes);

  00698	8b 8d dc df ff
	ff		 mov	 ecx, DWORD PTR _lRes$[ebp]
  0069e	51		 push	 ecx
  0069f	e8 00 00 00 00	 call	 ?AtlHresultFromWin32@ATL@@YAJK@Z ; ATL::AtlHresultFromWin32
  006a4	83 c4 04	 add	 esp, 4
  006a7	eb 1c		 jmp	 SHORT $LN1@AddValue
$LN23@AddValue:

; 1093 : 	}
; 1094 : 
; 1095 : 	if (FAILED(hr = NextToken(szToken)))

  006a9	8b 55 10	 mov	 edx, DWORD PTR _szToken$[ebp]
  006ac	52		 push	 edx
  006ad	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006b0	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  006b5	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  006b8	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  006bc	7d 05		 jge	 SHORT $LN24@AddValue

; 1096 : 		return hr;

  006be	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  006c1	eb 02		 jmp	 SHORT $LN1@AddValue
$LN24@AddValue:

; 1097 : 
; 1098 : 	return S_OK;

  006c3	33 c0		 xor	 eax, eax
$LN1@AddValue:

; 1099 : }

  006c5	52		 push	 edx
  006c6	8b cd		 mov	 ecx, ebp
  006c8	50		 push	 eax
  006c9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN40@AddValue
  006cf	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  006d4	58		 pop	 eax
  006d5	5a		 pop	 edx
  006d6	5f		 pop	 edi
  006d7	5e		 pop	 esi
  006d8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006db	33 cd		 xor	 ecx, ebp
  006dd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006e2	81 c4 cc 22 00
	00		 add	 esp, 8908		; 000022ccH
  006e8	3b ec		 cmp	 ebp, esp
  006ea	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006ef	8b e5		 mov	 esp, ebp
  006f1	5d		 pop	 ebp
  006f2	c2 0c 00	 ret	 12			; 0000000cH
  006f5	0f 1f 00	 npad	 3
$LN40@AddValue:
  006f8	06 00 00 00	 DD	 6
  006fc	00 00 00 00	 DD	 $LN39@AddValue
$LN39@AddValue:
  00700	f0 df ff ff	 DD	 -8208			; ffffdff0H
  00704	00 20 00 00	 DD	 8192			; 00002000H
  00708	00 00 00 00	 DD	 $LN33@AddValue
  0070c	e4 df ff ff	 DD	 -8220			; ffffdfe4H
  00710	02 00 00 00	 DD	 2
  00714	00 00 00 00	 DD	 $LN34@AddValue
  00718	cc de ff ff	 DD	 -8500			; ffffdeccH
  0071c	04 01 00 00	 DD	 260			; 00000104H
  00720	00 00 00 00	 DD	 $LN35@AddValue
  00724	b4 de ff ff	 DD	 -8524			; ffffdeb4H
  00728	04 00 00 00	 DD	 4
  0072c	00 00 00 00	 DD	 $LN36@AddValue
  00730	98 de ff ff	 DD	 -8552			; ffffde98H
  00734	04 00 00 00	 DD	 4
  00738	00 00 00 00	 DD	 $LN37@AddValue
  0073c	80 dd ff ff	 DD	 -8832			; ffffdd80H
  00740	04 01 00 00	 DD	 260			; 00000104H
  00744	00 00 00 00	 DD	 $LN38@AddValue
$LN38@AddValue:
  00748	72		 DB	 114			; 00000072H
  00749	67		 DB	 103			; 00000067H
  0074a	42		 DB	 66			; 00000042H
  0074b	69		 DB	 105			; 00000069H
  0074c	6e		 DB	 110			; 0000006eH
  0074d	61		 DB	 97			; 00000061H
  0074e	72		 DB	 114			; 00000072H
  0074f	79		 DB	 121			; 00000079H
  00750	00		 DB	 0
$LN37@AddValue:
  00751	5f		 DB	 95			; 0000005fH
  00752	41		 DB	 65			; 00000041H
  00753	74		 DB	 116			; 00000074H
  00754	6c		 DB	 108			; 0000006cH
  00755	53		 DB	 83			; 00000053H
  00756	61		 DB	 97			; 00000061H
  00757	66		 DB	 102			; 00000066H
  00758	65		 DB	 101			; 00000065H
  00759	41		 DB	 65			; 00000041H
  0075a	6c		 DB	 108			; 0000006cH
  0075b	6c		 DB	 108			; 0000006cH
  0075c	6f		 DB	 111			; 0000006fH
  0075d	63		 DB	 99			; 00000063H
  0075e	61		 DB	 97			; 00000061H
  0075f	4d		 DB	 77			; 0000004dH
  00760	61		 DB	 97			; 00000061H
  00761	6e		 DB	 110			; 0000006eH
  00762	61		 DB	 97			; 00000061H
  00763	67		 DB	 103			; 00000067H
  00764	65		 DB	 101			; 00000065H
  00765	72		 DB	 114			; 00000072H
  00766	00		 DB	 0
$LN36@AddValue:
  00767	75		 DB	 117			; 00000075H
  00768	6c		 DB	 108			; 0000006cH
  00769	56		 DB	 86			; 00000056H
  0076a	61		 DB	 97			; 00000061H
  0076b	6c		 DB	 108			; 0000006cH
  0076c	00		 DB	 0
$LN35@AddValue:
  0076d	70		 DB	 112			; 00000070H
  0076e	73		 DB	 115			; 00000073H
  0076f	7a		 DB	 122			; 0000007aH
  00770	44		 DB	 68			; 00000044H
  00771	65		 DB	 101			; 00000065H
  00772	73		 DB	 115			; 00000073H
  00773	74		 DB	 116			; 00000074H
  00774	56		 DB	 86			; 00000056H
  00775	61		 DB	 97			; 00000061H
  00776	6c		 DB	 108			; 0000006cH
  00777	75		 DB	 117			; 00000075H
  00778	65		 DB	 101			; 00000065H
  00779	00		 DB	 0
$LN34@AddValue:
  0077a	76		 DB	 118			; 00000076H
  0077b	74		 DB	 116			; 00000074H
  0077c	00		 DB	 0
$LN33@AddValue:
  0077d	73		 DB	 115			; 00000073H
  0077e	7a		 DB	 122			; 0000007aH
  0077f	56		 DB	 86			; 00000056H
  00780	61		 DB	 97			; 00000061H
  00781	6c		 DB	 108			; 0000006cH
  00782	75		 DB	 117			; 00000075H
  00783	65		 DB	 101			; 00000065H
  00784	00		 DB	 0
?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PB_WPA_W@Z ENDP ; ATL::CRegParser::AddValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?NextToken@CRegParser@ATL@@IAEJPA_W@Z
_TEXT	SEGMENT
$T1 = -40						; size = 8
_i$2 = -32						; size = 4
_nChars$3 = -28						; size = 4
_pchPrev$4 = -24					; size = 4
_i$5 = -20						; size = 4
_nChars$6 = -16						; size = 4
_pchPrev$7 = -12					; size = 4
_szOrig$ = -8						; size = 4
_this$ = -4						; size = 4
_szToken$ = 8						; size = 4
?NextToken@CRegParser@ATL@@IAEJPA_W@Z PROC		; ATL::CRegParser::NextToken, COMDAT
; _this$ = ecx

; 902  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d d8	 lea	 edi, DWORD PTR [ebp-40]
  0000c	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 903  : 	SkipWhiteSpace();

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ ; ATL::CRegParser::SkipWhiteSpace

; 904  : 
; 905  : 	// NextToken cannot be called at EOS
; 906  : 	if (_T('\0') == *m_pchCur)

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 08		 mov	 ecx, DWORD PTR [eax]
  00029	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0002c	85 d2		 test	 edx, edx
  0002e	75 12		 jne	 SHORT $LN12@NextToken

; 907  : 		return GenerateError(E_ATL_UNEXPECTED_EOS);

  00030	68 03 02 00 00	 push	 515			; 00000203H
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?GenerateError@CRegParser@ATL@@IAEJI@Z ; ATL::CRegParser::GenerateError
  0003d	e9 48 02 00 00	 jmp	 $LN1@NextToken
$LN12@NextToken:

; 908  : 
; 909  : 	LPCTSTR szOrig = szToken;

  00042	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  00045	89 45 f8	 mov	 DWORD PTR _szOrig$[ebp], eax

; 910  : 	// handle quoted value / key
; 911  : 	if (chQuote == *m_pchCur)

  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004d	0f b7 02	 movzx	 eax, WORD PTR [edx]
  00050	83 f8 27	 cmp	 eax, 39			; 00000027H
  00053	0f 85 6a 01 00
	00		 jne	 $LN7@NextToken

; 912  : 	{
; 913  : 		m_pchCur = CharNext(m_pchCur);

  00059	8b f4		 mov	 esi, esp
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00060	52		 push	 edx
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  00067	3b f4		 cmp	 esi, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	89 01		 mov	 DWORD PTR [ecx], eax
$LN2@NextToken:

; 914  : 
; 915  : 		while (_T('\0') != *m_pchCur && !EndOfVar())

  00073	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00076	8b 02		 mov	 eax, DWORD PTR [edx]
  00078	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0007b	85 c9		 test	 ecx, ecx
  0007d	0f 84 ce 00 00
	00		 je	 $LN3@NextToken
  00083	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	e8 00 00 00 00	 call	 ?EndOfVar@CRegParser@ATL@@IAEHXZ ; ATL::CRegParser::EndOfVar
  0008b	85 c0		 test	 eax, eax
  0008d	0f 85 be 00 00
	00		 jne	 $LN3@NextToken

; 916  : 		{
; 917  : 			if (chQuote == *m_pchCur) // If it is a quote that means we must skip it

  00093	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00096	8b 02		 mov	 eax, DWORD PTR [edx]
  00098	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0009b	83 f9 27	 cmp	 ecx, 39			; 00000027H
  0009e	75 1a		 jne	 SHORT $LN15@NextToken

; 918  : 				m_pchCur = CharNext(m_pchCur);

  000a0	8b f4		 mov	 esi, esp
  000a2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a5	8b 02		 mov	 eax, DWORD PTR [edx]
  000a7	50		 push	 eax
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  000ae	3b f4		 cmp	 esi, esp
  000b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	89 01		 mov	 DWORD PTR [ecx], eax
$LN15@NextToken:

; 919  : 
; 920  : 			LPTSTR pchPrev = m_pchCur;

  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 02		 mov	 eax, DWORD PTR [edx]
  000bf	89 45 f4	 mov	 DWORD PTR _pchPrev$7[ebp], eax

; 921  : 			m_pchCur = CharNext(m_pchCur);

  000c2	8b f4		 mov	 esi, esp
  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c9	52		 push	 edx
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  000d0	3b f4		 cmp	 esi, esp
  000d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	89 01		 mov	 DWORD PTR [ecx], eax

; 922  : 
; 923  : 			INT_PTR nChars = m_pchCur - pchPrev;

  000dc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000df	8b 02		 mov	 eax, DWORD PTR [edx]
  000e1	2b 45 f4	 sub	 eax, DWORD PTR _pchPrev$7[ebp]
  000e4	d1 f8		 sar	 eax, 1
  000e6	89 45 f0	 mov	 DWORD PTR _nChars$6[ebp], eax

; 924  : 
; 925  : 			// Make sure we have room for nChars plus terminating NULL
; 926  : 			if ((szToken + nChars + 1) >= szOrig + MAX_VALUE)

  000e9	8b 4d f0	 mov	 ecx, DWORD PTR _nChars$6[ebp]
  000ec	8b 55 08	 mov	 edx, DWORD PTR _szToken$[ebp]
  000ef	8d 44 4a 02	 lea	 eax, DWORD PTR [edx+ecx*2+2]
  000f3	8b 4d f8	 mov	 ecx, DWORD PTR _szOrig$[ebp]
  000f6	81 c1 00 20 00
	00		 add	 ecx, 8192		; 00002000H
  000fc	3b c1		 cmp	 eax, ecx
  000fe	72 12		 jb	 SHORT $LN16@NextToken

; 927  : 				return GenerateError(E_ATL_VALUE_TOO_LARGE);

  00100	68 15 02 00 00	 push	 533			; 00000215H
  00105	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00108	e8 00 00 00 00	 call	 ?GenerateError@CRegParser@ATL@@IAEJI@Z ; ATL::CRegParser::GenerateError
  0010d	e9 78 01 00 00	 jmp	 $LN1@NextToken
$LN16@NextToken:

; 928  : 
; 929  : 			for (int i = 0; i < (int)nChars; i++, szToken++, pchPrev++)

  00112	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$5[ebp], 0
  00119	eb 1b		 jmp	 SHORT $LN6@NextToken
$LN4@NextToken:
  0011b	8b 55 ec	 mov	 edx, DWORD PTR _i$5[ebp]
  0011e	83 c2 01	 add	 edx, 1
  00121	89 55 ec	 mov	 DWORD PTR _i$5[ebp], edx
  00124	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  00127	83 c0 02	 add	 eax, 2
  0012a	89 45 08	 mov	 DWORD PTR _szToken$[ebp], eax
  0012d	8b 4d f4	 mov	 ecx, DWORD PTR _pchPrev$7[ebp]
  00130	83 c1 02	 add	 ecx, 2
  00133	89 4d f4	 mov	 DWORD PTR _pchPrev$7[ebp], ecx
$LN6@NextToken:
  00136	8b 55 ec	 mov	 edx, DWORD PTR _i$5[ebp]
  00139	3b 55 f0	 cmp	 edx, DWORD PTR _nChars$6[ebp]
  0013c	7d 0e		 jge	 SHORT $LN5@NextToken

; 930  : 				*szToken = *pchPrev;

  0013e	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  00141	8b 4d f4	 mov	 ecx, DWORD PTR _pchPrev$7[ebp]
  00144	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00147	66 89 10	 mov	 WORD PTR [eax], dx
  0014a	eb cf		 jmp	 SHORT $LN4@NextToken
$LN5@NextToken:

; 931  : 		}

  0014c	e9 22 ff ff ff	 jmp	 $LN2@NextToken
$LN3@NextToken:

; 932  : 
; 933  : 		if (_T('\0') == *m_pchCur)

  00151	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00154	8b 08		 mov	 ecx, DWORD PTR [eax]
  00156	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00159	85 d2		 test	 edx, edx
  0015b	75 3f		 jne	 SHORT $LN17@NextToken

; 934  : 		{
; 935  : 			ATLTRACE(atlTraceRegistrar, 0, _T("NextToken : Unexpected End of File\n"));

  0015d	68 00 00 00 00	 push	 OFFSET ??_C@_1EI@CDDJHMMA@?$AAN?$AAe?$AAx?$AAt?$AAT?$AAo?$AAk?$AAe?$AAn?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAe@
  00162	6a 00		 push	 0
  00164	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  00169	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  0016e	50		 push	 eax
  0016f	68 a7 03 00 00	 push	 935			; 000003a7H
  00174	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00179	8d 4d d8	 lea	 ecx, DWORD PTR $T1[ebp]
  0017c	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00187	83 c4 10	 add	 esp, 16			; 00000010H

; 936  : 			return GenerateError(E_ATL_UNEXPECTED_EOS);

  0018a	68 03 02 00 00	 push	 515			; 00000203H
  0018f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00192	e8 00 00 00 00	 call	 ?GenerateError@CRegParser@ATL@@IAEJI@Z ; ATL::CRegParser::GenerateError
  00197	e9 ee 00 00 00	 jmp	 $LN1@NextToken
$LN17@NextToken:

; 937  : 		}
; 938  : 
; 939  : 		*szToken = _T('\0');

  0019c	33 c0		 xor	 eax, eax
  0019e	8b 4d 08	 mov	 ecx, DWORD PTR _szToken$[ebp]
  001a1	66 89 01	 mov	 WORD PTR [ecx], ax

; 940  : 		m_pchCur = CharNext(m_pchCur);

  001a4	8b f4		 mov	 esi, esp
  001a6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001a9	8b 02		 mov	 eax, DWORD PTR [edx]
  001ab	50		 push	 eax
  001ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  001b2	3b f4		 cmp	 esi, esp
  001b4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001bc	89 01		 mov	 DWORD PTR [ecx], eax

; 941  : 	}

  001be	e9 c5 00 00 00	 jmp	 $LN14@NextToken
$LN7@NextToken:

; 942  : 
; 943  : 	else
; 944  : 	{
; 945  : 		// Handle non-quoted ie parse up till first "White Space"
; 946  : 		while (_T('\0') != *m_pchCur && !IsSpace(*m_pchCur))

  001c3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001c6	8b 02		 mov	 eax, DWORD PTR [edx]
  001c8	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  001cb	85 c9		 test	 ecx, ecx
  001cd	0f 84 ad 00 00
	00		 je	 $LN8@NextToken
  001d3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001d6	8b 02		 mov	 eax, DWORD PTR [edx]
  001d8	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  001db	51		 push	 ecx
  001dc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001df	e8 00 00 00 00	 call	 ?IsSpace@CRegParser@ATL@@IAEH_W@Z ; ATL::CRegParser::IsSpace
  001e4	85 c0		 test	 eax, eax
  001e6	0f 85 94 00 00
	00		 jne	 $LN8@NextToken

; 947  : 		{
; 948  : 			LPTSTR pchPrev = m_pchCur;

  001ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001ef	8b 02		 mov	 eax, DWORD PTR [edx]
  001f1	89 45 e8	 mov	 DWORD PTR _pchPrev$4[ebp], eax

; 949  : 			m_pchCur = CharNext(m_pchCur);

  001f4	8b f4		 mov	 esi, esp
  001f6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f9	8b 11		 mov	 edx, DWORD PTR [ecx]
  001fb	52		 push	 edx
  001fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  00202	3b f4		 cmp	 esi, esp
  00204	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00209	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0020c	89 01		 mov	 DWORD PTR [ecx], eax

; 950  : 
; 951  : 			INT_PTR nChars = m_pchCur - pchPrev;

  0020e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00211	8b 02		 mov	 eax, DWORD PTR [edx]
  00213	2b 45 e8	 sub	 eax, DWORD PTR _pchPrev$4[ebp]
  00216	d1 f8		 sar	 eax, 1
  00218	89 45 e4	 mov	 DWORD PTR _nChars$3[ebp], eax

; 952  : 
; 953  : 			// Make sure we have room for nChars plus terminating NULL
; 954  : 			if ((szToken + nChars + 1) >= szOrig + MAX_VALUE)

  0021b	8b 4d e4	 mov	 ecx, DWORD PTR _nChars$3[ebp]
  0021e	8b 55 08	 mov	 edx, DWORD PTR _szToken$[ebp]
  00221	8d 44 4a 02	 lea	 eax, DWORD PTR [edx+ecx*2+2]
  00225	8b 4d f8	 mov	 ecx, DWORD PTR _szOrig$[ebp]
  00228	81 c1 00 20 00
	00		 add	 ecx, 8192		; 00002000H
  0022e	3b c1		 cmp	 eax, ecx
  00230	72 0f		 jb	 SHORT $LN18@NextToken

; 955  : 				return GenerateError(E_ATL_VALUE_TOO_LARGE);

  00232	68 15 02 00 00	 push	 533			; 00000215H
  00237	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0023a	e8 00 00 00 00	 call	 ?GenerateError@CRegParser@ATL@@IAEJI@Z ; ATL::CRegParser::GenerateError
  0023f	eb 49		 jmp	 SHORT $LN1@NextToken
$LN18@NextToken:

; 956  : 
; 957  : 			for (int i = 0; i < (int)nChars; i++, szToken++, pchPrev++)

  00241	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00248	eb 1b		 jmp	 SHORT $LN11@NextToken
$LN9@NextToken:
  0024a	8b 55 e0	 mov	 edx, DWORD PTR _i$2[ebp]
  0024d	83 c2 01	 add	 edx, 1
  00250	89 55 e0	 mov	 DWORD PTR _i$2[ebp], edx
  00253	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  00256	83 c0 02	 add	 eax, 2
  00259	89 45 08	 mov	 DWORD PTR _szToken$[ebp], eax
  0025c	8b 4d e8	 mov	 ecx, DWORD PTR _pchPrev$4[ebp]
  0025f	83 c1 02	 add	 ecx, 2
  00262	89 4d e8	 mov	 DWORD PTR _pchPrev$4[ebp], ecx
$LN11@NextToken:
  00265	8b 55 e0	 mov	 edx, DWORD PTR _i$2[ebp]
  00268	3b 55 e4	 cmp	 edx, DWORD PTR _nChars$3[ebp]
  0026b	7d 0e		 jge	 SHORT $LN10@NextToken

; 958  : 				*szToken = *pchPrev;

  0026d	8b 45 08	 mov	 eax, DWORD PTR _szToken$[ebp]
  00270	8b 4d e8	 mov	 ecx, DWORD PTR _pchPrev$4[ebp]
  00273	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00276	66 89 10	 mov	 WORD PTR [eax], dx
  00279	eb cf		 jmp	 SHORT $LN9@NextToken
$LN10@NextToken:

; 959  : 		}

  0027b	e9 43 ff ff ff	 jmp	 $LN7@NextToken
$LN8@NextToken:

; 960  : 
; 961  : 		*szToken = _T('\0');

  00280	33 c0		 xor	 eax, eax
  00282	8b 4d 08	 mov	 ecx, DWORD PTR _szToken$[ebp]
  00285	66 89 01	 mov	 WORD PTR [ecx], ax
$LN14@NextToken:

; 962  : 	}
; 963  : 	return S_OK;

  00288	33 c0		 xor	 eax, eax
$LN1@NextToken:

; 964  : }

  0028a	5f		 pop	 edi
  0028b	5e		 pop	 esi
  0028c	83 c4 28	 add	 esp, 40			; 00000028H
  0028f	3b ec		 cmp	 ebp, esp
  00291	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00296	8b e5		 mov	 esp, ebp
  00298	5d		 pop	 ebp
  00299	c2 04 00	 ret	 4
?NextToken@CRegParser@ATL@@IAEJPA_W@Z ENDP		; ATL::CRegParser::NextToken
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ PROC		; ATL::CRegParser::SkipWhiteSpace, COMDAT
; _this$ = ecx

; 895  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN2@SkipWhiteS:

; 896  : 	while(IsSpace(*m_pchCur))

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00017	52		 push	 edx
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?IsSpace@CRegParser@ATL@@IAEH_W@Z ; ATL::CRegParser::IsSpace
  00020	85 c0		 test	 eax, eax
  00022	74 1c		 je	 SHORT $LN1@SkipWhiteS

; 897  : 		m_pchCur = CharNext(m_pchCur);

  00024	8b f4		 mov	 esi, esp
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	51		 push	 ecx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  00032	3b f4		 cmp	 esi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003c	89 02		 mov	 DWORD PTR [edx], eax
  0003e	eb cf		 jmp	 SHORT $LN2@SkipWhiteS
$LN1@SkipWhiteS:

; 898  : }

  00040	5e		 pop	 esi
  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ ENDP		; ATL::CRegParser::SkipWhiteSpace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?RegisterBuffer@CRegParser@ATL@@QAEJPA_WH@Z
_TEXT	SEGMENT
$T1 = -8264						; size = 8
$T2 = -8256						; size = 8
$T3 = -8248						; size = 8
$T4 = -8240						; size = 8
_szRegAtRegister$5 = -8232				; size = 4
_hkBase$6 = -8228					; size = 4
_szReg$ = -8220						; size = 4
_hr$ = -8212						; size = 4
_szToken$ = -8204					; size = 8192
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_szBuffer$ = 8						; size = 4
_bRegister$ = 12					; size = 4
?RegisterBuffer@CRegParser@ATL@@QAEJPA_WH@Z PROC	; ATL::CRegParser::RegisterBuffer, COMDAT
; _this$ = ecx

; 1346 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 48 20 00 00	 mov	 eax, 8264		; 00002048H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	51		 push	 ecx
  00010	8d bd b8 df ff
	ff		 lea	 edi, DWORD PTR [ebp-8264]
  00016	b9 12 08 00 00	 mov	 ecx, 2066		; 00000812H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	59		 pop	 ecx
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00028	33 c5		 xor	 eax, ebp
  0002a	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002d	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1347 : 	TCHAR   szToken[MAX_VALUE];
; 1348 : 	HRESULT hr = S_OK;

  00030	c7 85 ec df ff
	ff 00 00 00 00	 mov	 DWORD PTR _hr$[ebp], 0

; 1349 : 
; 1350 : 	LPTSTR szReg = NULL;

  0003a	c7 85 e4 df ff
	ff 00 00 00 00	 mov	 DWORD PTR _szReg$[ebp], 0

; 1351 : 	hr = PreProcessBuffer(szBuffer, &szReg);

  00044	8d 85 e4 df ff
	ff		 lea	 eax, DWORD PTR _szReg$[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d 08	 mov	 ecx, DWORD PTR _szBuffer$[ebp]
  0004e	51		 push	 ecx
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?PreProcessBuffer@CRegParser@ATL@@QAEJPA_WPAPA_W@Z ; ATL::CRegParser::PreProcessBuffer
  00057	89 85 ec df ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 1352 : 	if (FAILED(hr))

  0005d	83 bd ec df ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00064	7d 0b		 jge	 SHORT $LN4@RegisterBu

; 1353 : 		return hr;

  00066	8b 85 ec df ff
	ff		 mov	 eax, DWORD PTR _hr$[ebp]
  0006c	e9 58 02 00 00	 jmp	 $LN1@RegisterBu
$LN4@RegisterBu:

; 1354 : 
; 1355 : 	ATLTRACE(atlTraceRegistrar, 0, _T("%Ts\n"), szReg);

  00071	8b 95 e4 df ff
	ff		 mov	 edx, DWORD PTR _szReg$[ebp]
  00077	52		 push	 edx
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_19IGGGDNCK@?$AA?$CF?$AAT?$AAs?$AA?6@
  0007d	6a 00		 push	 0
  0007f	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  00084	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  00089	50		 push	 eax
  0008a	68 4b 05 00 00	 push	 1355			; 0000054bH
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00094	8d 8d d0 df ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  0009a	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000a5	83 c4 14	 add	 esp, 20			; 00000014H

; 1356 : 
; 1357 : 	m_pchCur = szReg;

  000a8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ab	8b 8d e4 df ff
	ff		 mov	 ecx, DWORD PTR _szReg$[ebp]
  000b1	89 08		 mov	 DWORD PTR [eax], ecx
$LN2@RegisterBu:

; 1358 : 
; 1359 : 	// Preprocess szReg
; 1360 : 
; 1361 : 	while (_T('\0') != *m_pchCur)

  000b3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000b6	8b 02		 mov	 eax, DWORD PTR [edx]
  000b8	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000bb	85 c9		 test	 ecx, ecx
  000bd	0f 84 ea 01 00
	00		 je	 $LN3@RegisterBu

; 1362 : 	{
; 1363 : 		if (FAILED(hr = NextToken(szToken)))

  000c3	8d 95 f4 df ff
	ff		 lea	 edx, DWORD PTR _szToken$[ebp]
  000c9	52		 push	 edx
  000ca	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  000d2	89 85 ec df ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  000d8	83 bd ec df ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000df	7d 05		 jge	 SHORT $LN5@RegisterBu

; 1364 : 			break;

  000e1	e9 c7 01 00 00	 jmp	 $LN3@RegisterBu
$LN5@RegisterBu:

; 1365 : 		HKEY hkBase;
; 1366 : 		if ((hkBase = HKeyFromString(szToken)) == NULL)

  000e6	8d 85 f4 df ff
	ff		 lea	 eax, DWORD PTR _szToken$[ebp]
  000ec	50		 push	 eax
  000ed	e8 00 00 00 00	 call	 ?HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PA_W@Z ; ATL::CRegParser::HKeyFromString
  000f2	83 c4 04	 add	 esp, 4
  000f5	89 85 dc df ff
	ff		 mov	 DWORD PTR _hkBase$6[ebp], eax
  000fb	83 bd dc df ff
	ff 00		 cmp	 DWORD PTR _hkBase$6[ebp], 0
  00102	75 4f		 jne	 SHORT $LN6@RegisterBu

; 1367 : 		{
; 1368 : 			ATLTRACE(atlTraceRegistrar, 0, _T("HKeyFromString failed on %Ts\n"), szToken);

  00104	8d 8d f4 df ff
	ff		 lea	 ecx, DWORD PTR _szToken$[ebp]
  0010a	51		 push	 ecx
  0010b	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@JFHAPNGI@?$AAH?$AAK?$AAe?$AAy?$AAF?$AAr?$AAo?$AAm?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5@
  00110	6a 00		 push	 0
  00112	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  00117	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  0011c	50		 push	 eax
  0011d	68 58 05 00 00	 push	 1368			; 00000558H
  00122	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00127	8d 8d c8 df ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  0012d	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00132	50		 push	 eax
  00133	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00138	83 c4 14	 add	 esp, 20			; 00000014H

; 1369 : 			hr = GenerateError(E_ATL_BAD_HKEY);

  0013b	68 0c 02 00 00	 push	 524			; 0000020cH
  00140	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00143	e8 00 00 00 00	 call	 ?GenerateError@CRegParser@ATL@@IAEJI@Z ; ATL::CRegParser::GenerateError
  00148	89 85 ec df ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 1370 : 			break;

  0014e	e9 5a 01 00 00	 jmp	 $LN3@RegisterBu
$LN6@RegisterBu:

; 1371 : 		}
; 1372 : 
; 1373 : 		if (FAILED(hr = NextToken(szToken)))

  00153	8d 95 f4 df ff
	ff		 lea	 edx, DWORD PTR _szToken$[ebp]
  00159	52		 push	 edx
  0015a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0015d	e8 00 00 00 00	 call	 ?NextToken@CRegParser@ATL@@IAEJPA_W@Z ; ATL::CRegParser::NextToken
  00162	89 85 ec df ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  00168	83 bd ec df ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  0016f	7d 05		 jge	 SHORT $LN7@RegisterBu

; 1374 : 			break;

  00171	e9 37 01 00 00	 jmp	 $LN3@RegisterBu
$LN7@RegisterBu:

; 1375 : 
; 1376 : 		if (chLeftBracket != *szToken)

  00176	b8 02 00 00 00	 mov	 eax, 2
  0017b	6b c8 00	 imul	 ecx, eax, 0
  0017e	0f b7 94 0d f4
	df ff ff	 movzx	 edx, WORD PTR _szToken$[ebp+ecx]
  00186	83 fa 7b	 cmp	 edx, 123		; 0000007bH
  00189	74 4f		 je	 SHORT $LN8@RegisterBu

; 1377 : 		{
; 1378 : 			ATLTRACE(atlTraceRegistrar, 0, _T("Syntax error, expecting a {, found a %Ts\n"), szToken);

  0018b	8d 85 f4 df ff
	ff		 lea	 eax, DWORD PTR _szToken$[ebp]
  00191	50		 push	 eax
  00192	68 00 00 00 00	 push	 OFFSET ??_C@_1FE@MCPBFDLN@?$AAS?$AAy?$AAn?$AAt?$AAa?$AAx?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?0?$AA?5?$AAe@
  00197	6a 00		 push	 0
  00199	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  0019e	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  001a3	50		 push	 eax
  001a4	68 62 05 00 00	 push	 1378			; 00000562H
  001a9	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  001ae	8d 8d c0 df ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  001b4	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  001b9	50		 push	 eax
  001ba	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  001bf	83 c4 14	 add	 esp, 20			; 00000014H

; 1379 : 			hr = GenerateError(E_ATL_MISSING_OPENKEY_TOKEN);

  001c2	68 0d 02 00 00	 push	 525			; 0000020dH
  001c7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ca	e8 00 00 00 00	 call	 ?GenerateError@CRegParser@ATL@@IAEJI@Z ; ATL::CRegParser::GenerateError
  001cf	89 85 ec df ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 1380 : 			break;

  001d5	e9 d3 00 00 00	 jmp	 $LN3@RegisterBu
$LN8@RegisterBu:

; 1381 : 		}
; 1382 : 		if (bRegister)

  001da	83 7d 0c 00	 cmp	 DWORD PTR _bRegister$[ebp], 0
  001de	0f 84 8f 00 00
	00		 je	 $LN9@RegisterBu

; 1383 : 		{
; 1384 : 			LPTSTR szRegAtRegister = m_pchCur;

  001e4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e7	8b 11		 mov	 edx, DWORD PTR [ecx]
  001e9	89 95 d8 df ff
	ff		 mov	 DWORD PTR _szRegAtRegister$5[ebp], edx

; 1385 : 			hr = RegisterSubkeys(szToken, hkBase, bRegister);

  001ef	6a 00		 push	 0
  001f1	8b 45 0c	 mov	 eax, DWORD PTR _bRegister$[ebp]
  001f4	50		 push	 eax
  001f5	8b 8d dc df ff
	ff		 mov	 ecx, DWORD PTR _hkBase$6[ebp]
  001fb	51		 push	 ecx
  001fc	8d 95 f4 df ff
	ff		 lea	 edx, DWORD PTR _szToken$[ebp]
  00202	52		 push	 edx
  00203	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00206	e8 00 00 00 00	 call	 ?RegisterSubkeys@CRegParser@ATL@@IAEJPA_WPAUHKEY__@@HH@Z ; ATL::CRegParser::RegisterSubkeys
  0020b	89 85 ec df ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 1386 : 			if (FAILED(hr))

  00211	83 bd ec df ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00218	7d 57		 jge	 SHORT $LN11@RegisterBu

; 1387 : 			{
; 1388 : 				ATLTRACE(atlTraceRegistrar, 0, _T("Failed to register, cleaning up!\n"));

  0021a	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@EMAKHHOG@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs@
  0021f	6a 00		 push	 0
  00221	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  00226	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  0022b	50		 push	 eax
  0022c	68 6c 05 00 00	 push	 1388			; 0000056cH
  00231	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00236	8d 8d b8 df ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0023c	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00241	50		 push	 eax
  00242	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00247	83 c4 10	 add	 esp, 16			; 00000010H

; 1389 : 				m_pchCur = szRegAtRegister;

  0024a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0024d	8b 8d d8 df ff
	ff		 mov	 ecx, DWORD PTR _szRegAtRegister$5[ebp]
  00253	89 08		 mov	 DWORD PTR [eax], ecx

; 1390 : 				RegisterSubkeys(szToken, hkBase, FALSE);

  00255	6a 00		 push	 0
  00257	6a 00		 push	 0
  00259	8b 95 dc df ff
	ff		 mov	 edx, DWORD PTR _hkBase$6[ebp]
  0025f	52		 push	 edx
  00260	8d 85 f4 df ff
	ff		 lea	 eax, DWORD PTR _szToken$[ebp]
  00266	50		 push	 eax
  00267	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0026a	e8 00 00 00 00	 call	 ?RegisterSubkeys@CRegParser@ATL@@IAEJPA_WPAUHKEY__@@HH@Z ; ATL::CRegParser::RegisterSubkeys

; 1391 : 				break;

  0026f	eb 3c		 jmp	 SHORT $LN3@RegisterBu
$LN11@RegisterBu:

; 1392 : 			}
; 1393 : 		}

  00271	eb 2d		 jmp	 SHORT $LN10@RegisterBu
$LN9@RegisterBu:

; 1394 : 		else
; 1395 : 		{
; 1396 : 			if (FAILED(hr = RegisterSubkeys(szToken, hkBase, bRegister)))

  00273	6a 00		 push	 0
  00275	8b 4d 0c	 mov	 ecx, DWORD PTR _bRegister$[ebp]
  00278	51		 push	 ecx
  00279	8b 95 dc df ff
	ff		 mov	 edx, DWORD PTR _hkBase$6[ebp]
  0027f	52		 push	 edx
  00280	8d 85 f4 df ff
	ff		 lea	 eax, DWORD PTR _szToken$[ebp]
  00286	50		 push	 eax
  00287	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0028a	e8 00 00 00 00	 call	 ?RegisterSubkeys@CRegParser@ATL@@IAEJPA_WPAUHKEY__@@HH@Z ; ATL::CRegParser::RegisterSubkeys
  0028f	89 85 ec df ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  00295	83 bd ec df ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  0029c	7d 02		 jge	 SHORT $LN10@RegisterBu

; 1397 : 				break;

  0029e	eb 0d		 jmp	 SHORT $LN3@RegisterBu
$LN10@RegisterBu:

; 1398 : 		}
; 1399 : 
; 1400 : 		SkipWhiteSpace();

  002a0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002a3	e8 00 00 00 00	 call	 ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ ; ATL::CRegParser::SkipWhiteSpace

; 1401 : 	}

  002a8	e9 06 fe ff ff	 jmp	 $LN2@RegisterBu
$LN3@RegisterBu:

; 1402 : 	CoTaskMemFree(szReg);

  002ad	8b f4		 mov	 esi, esp
  002af	8b 8d e4 df ff
	ff		 mov	 ecx, DWORD PTR _szReg$[ebp]
  002b5	51		 push	 ecx
  002b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoTaskMemFree@4
  002bc	3b f4		 cmp	 esi, esp
  002be	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1403 : 	return hr;

  002c3	8b 85 ec df ff
	ff		 mov	 eax, DWORD PTR _hr$[ebp]
$LN1@RegisterBu:

; 1404 : }

  002c9	52		 push	 edx
  002ca	8b cd		 mov	 ecx, ebp
  002cc	50		 push	 eax
  002cd	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN17@RegisterBu
  002d3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  002d8	58		 pop	 eax
  002d9	5a		 pop	 edx
  002da	5f		 pop	 edi
  002db	5e		 pop	 esi
  002dc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002df	33 cd		 xor	 ecx, ebp
  002e1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002e6	81 c4 48 20 00
	00		 add	 esp, 8264		; 00002048H
  002ec	3b ec		 cmp	 ebp, esp
  002ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002f3	8b e5		 mov	 esp, ebp
  002f5	5d		 pop	 ebp
  002f6	c2 08 00	 ret	 8
  002f9	0f 1f 00	 npad	 3
$LN17@RegisterBu:
  002fc	02 00 00 00	 DD	 2
  00300	00 00 00 00	 DD	 $LN16@RegisterBu
$LN16@RegisterBu:
  00304	f4 df ff ff	 DD	 -8204			; ffffdff4H
  00308	00 20 00 00	 DD	 8192			; 00002000H
  0030c	00 00 00 00	 DD	 $LN14@RegisterBu
  00310	e4 df ff ff	 DD	 -8220			; ffffdfe4H
  00314	04 00 00 00	 DD	 4
  00318	00 00 00 00	 DD	 $LN15@RegisterBu
$LN15@RegisterBu:
  0031c	73		 DB	 115			; 00000073H
  0031d	7a		 DB	 122			; 0000007aH
  0031e	52		 DB	 82			; 00000052H
  0031f	65		 DB	 101			; 00000065H
  00320	67		 DB	 103			; 00000067H
  00321	00		 DB	 0
$LN14@RegisterBu:
  00322	73		 DB	 115			; 00000073H
  00323	7a		 DB	 122			; 0000007aH
  00324	54		 DB	 84			; 00000054H
  00325	6f		 DB	 111			; 0000006fH
  00326	6b		 DB	 107			; 0000006bH
  00327	65		 DB	 101			; 00000065H
  00328	6e		 DB	 110			; 0000006eH
  00329	00		 DB	 0
?RegisterBuffer@CRegParser@ATL@@QAEJPA_WH@Z ENDP	; ATL::CRegParser::RegisterBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?PreProcessBuffer@CRegParser@ATL@@QAEJPA_WPAPA_W@Z
_TEXT	SEGMENT
$T1 = -172						; size = 4
$T2 = -168						; size = 8
$T3 = -160						; size = 4
$T4 = -156						; size = 4
_lpszVar$5 = -152					; size = 4
_buf$6 = -144						; size = 64
_nLength$7 = -76					; size = 4
_lpszNext$8 = -72					; size = 4
_szRootKey$9 = -68					; size = 4
_szEndHKCU$10 = -64					; size = 4
_szStartHKCU$11 = -60					; size = 4
_bInsideQuotes$ = -54					; size = 1
_bRedirectionPresent$ = -53				; size = 1
_nNestingLevel$ = -52					; size = 4
_bRedirectionEnabled$ = -41				; size = 1
_hr$ = -36						; size = 4
_pb$ = -28						; size = 12
_nSize$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpszReg$ = 8						; size = 4
_ppszReg$ = 12						; size = 4
?PreProcessBuffer@CRegParser@ATL@@QAEJPA_WPAPA_W@Z PROC	; ATL::CRegParser::PreProcessBuffer, COMDAT
; _this$ = ecx

; 1175 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ac 00 00
	00		 sub	 esp, 172		; 000000acH
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 54 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-172]
  00012	b9 2b 00 00 00	 mov	 ecx, 43			; 0000002bH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1176 : 	ATLASSERT(lpszReg != NULL);

  0002c	83 7d 08 00	 cmp	 DWORD PTR _lpszReg$[ebp], 0
  00030	75 26		 jne	 SHORT $LN36@PreProcess
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@ODFKMBGC@?$AAl?$AAp?$AAs?$AAz?$AAR?$AAe?$AAg?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0003c	6a 00		 push	 0
  0003e	68 98 04 00 00	 push	 1176			; 00000498H
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IGDLHBDL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00048	6a 02		 push	 2
  0004a	e8 00 00 00 00	 call	 __CrtDbgReportW
  0004f	83 c4 18	 add	 esp, 24			; 00000018H
  00052	83 f8 01	 cmp	 eax, 1
  00055	75 01		 jne	 SHORT $LN36@PreProcess
  00057	cc		 int	 3
$LN36@PreProcess:

; 1177 : 	ATLASSERT(ppszReg != NULL);

  00058	83 7d 0c 00	 cmp	 DWORD PTR _ppszReg$[ebp], 0
  0005c	75 26		 jne	 SHORT $LN37@PreProcess
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@DGLFCBHI@?$AAp?$AAp?$AAs?$AAz?$AAR?$AAe?$AAg?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00068	6a 00		 push	 0
  0006a	68 99 04 00 00	 push	 1177			; 00000499H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IGDLHBDL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00074	6a 02		 push	 2
  00076	e8 00 00 00 00	 call	 __CrtDbgReportW
  0007b	83 c4 18	 add	 esp, 24			; 00000018H
  0007e	83 f8 01	 cmp	 eax, 1
  00081	75 01		 jne	 SHORT $LN37@PreProcess
  00083	cc		 int	 3
$LN37@PreProcess:

; 1178 : 
; 1179 : 	if (lpszReg == NULL || ppszReg == NULL)

  00084	83 7d 08 00	 cmp	 DWORD PTR _lpszReg$[ebp], 0
  00088	74 06		 je	 SHORT $LN7@PreProcess
  0008a	83 7d 0c 00	 cmp	 DWORD PTR _ppszReg$[ebp], 0
  0008e	75 0a		 jne	 SHORT $LN6@PreProcess
$LN7@PreProcess:

; 1180 : 		return E_POINTER;

  00090	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00095	e9 2e 04 00 00	 jmp	 $LN1@PreProcess
$LN6@PreProcess:

; 1181 : 
; 1182 : 	*ppszReg = NULL;

  0009a	8b 55 0c	 mov	 edx, DWORD PTR _ppszReg$[ebp]
  0009d	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 1183 : 	int nSize = static_cast<int>(_tcslen(lpszReg))*2;

  000a3	8b 45 08	 mov	 eax, DWORD PTR _lpszReg$[ebp]
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 _wcslen
  000ac	83 c4 04	 add	 esp, 4
  000af	d1 e0		 shl	 eax, 1
  000b1	89 45 f4	 mov	 DWORD PTR _nSize$[ebp], eax

; 1184 : 	CParseBuffer pb(nSize);

  000b4	8b 4d f4	 mov	 ecx, DWORD PTR _nSize$[ebp]
  000b7	51		 push	 ecx
  000b8	8d 4d e4	 lea	 ecx, DWORD PTR _pb$[ebp]
  000bb	e8 00 00 00 00	 call	 ??0CParseBuffer@CRegParser@ATL@@QAE@H@Z ; ATL::CRegParser::CParseBuffer::CParseBuffer

; 1185 : 	if (pb.p == NULL)

  000c0	83 7d ec 00	 cmp	 DWORD PTR _pb$[ebp+8], 0
  000c4	75 1d		 jne	 SHORT $LN8@PreProcess

; 1186 : 		return E_OUTOFMEMORY;

  000c6	c7 85 64 ff ff
	ff 0e 00 07 80	 mov	 DWORD PTR $T4[ebp], -2147024882 ; 8007000eH
  000d0	8d 4d e4	 lea	 ecx, DWORD PTR _pb$[ebp]
  000d3	e8 00 00 00 00	 call	 ??1CParseBuffer@CRegParser@ATL@@QAE@XZ ; ATL::CRegParser::CParseBuffer::~CParseBuffer
  000d8	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  000de	e9 e5 03 00 00	 jmp	 $LN1@PreProcess
$LN8@PreProcess:

; 1187 : 	m_pchCur = lpszReg;

  000e3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e6	8b 45 08	 mov	 eax, DWORD PTR _lpszReg$[ebp]
  000e9	89 02		 mov	 DWORD PTR [edx], eax

; 1188 : 	HRESULT hr = S_OK;

  000eb	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 1189 : 
; 1190 : 	bool bRedirectionEnabled = false;

  000f2	c6 45 d7 00	 mov	 BYTE PTR _bRedirectionEnabled$[ebp], 0

; 1191 : 	hr = AtlGetPerUserRegistration(&bRedirectionEnabled);

  000f6	8d 4d d7	 lea	 ecx, DWORD PTR _bRedirectionEnabled$[ebp]
  000f9	51		 push	 ecx
  000fa	e8 00 00 00 00	 call	 ?AtlGetPerUserRegistration@ATL@@YGJPA_N@Z ; ATL::AtlGetPerUserRegistration
  000ff	89 45 dc	 mov	 DWORD PTR _hr$[ebp], eax

; 1192 : 	if( FAILED(hr) )

  00102	83 7d dc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00106	7d 1c		 jge	 SHORT $LN9@PreProcess

; 1193 : 	{
; 1194 : 		return hr;

  00108	8b 55 dc	 mov	 edx, DWORD PTR _hr$[ebp]
  0010b	89 95 60 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], edx
  00111	8d 4d e4	 lea	 ecx, DWORD PTR _pb$[ebp]
  00114	e8 00 00 00 00	 call	 ??1CParseBuffer@CRegParser@ATL@@QAE@XZ ; ATL::CRegParser::CParseBuffer::~CParseBuffer
  00119	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0011f	e9 a4 03 00 00	 jmp	 $LN1@PreProcess
$LN9@PreProcess:

; 1195 : 	}
; 1196 : 
; 1197 : 	// nNestingLevel is used to avoid checking for unnecessary root key replacements
; 1198 : 	// since all of them are expected to be at the top level.
; 1199 : 	int nNestingLevel = 0;

  00124	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _nNestingLevel$[ebp], 0

; 1200 : 	bool bRedirectionPresent = false;

  0012b	c6 45 cb 00	 mov	 BYTE PTR _bRedirectionPresent$[ebp], 0

; 1201 : 	bool bInsideQuotes = false;

  0012f	c6 45 ca 00	 mov	 BYTE PTR _bInsideQuotes$[ebp], 0
$LN2@PreProcess:

; 1202 : 
; 1203 : 	while (*m_pchCur != _T('\0')) // look for end

  00133	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00136	8b 08		 mov	 ecx, DWORD PTR [eax]
  00138	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0013b	85 d2		 test	 edx, edx
  0013d	0f 84 5b 03 00
	00		 je	 $LN3@PreProcess

; 1204 : 	{
; 1205 : 		if ( true == bRedirectionEnabled )

  00143	0f b6 45 d7	 movzx	 eax, BYTE PTR _bRedirectionEnabled$[ebp]
  00147	83 f8 01	 cmp	 eax, 1
  0014a	0f 85 a1 01 00
	00		 jne	 $LN10@PreProcess

; 1206 : 		{
; 1207 : 			LPCOLESTR szStartHKCU = L"HKCU\r\n{\tSoftware\r\n\t{\r\n\t\tClasses";

  00150	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _szStartHKCU$11[ebp], OFFSET ??_C@_1EA@NHKLICFA@?$AAH?$AAK?$AAC?$AAU?$AA?$AN?$AA?6?$AA?$HL?$AA?7?$AAS?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr@

; 1208 : 			LPCOLESTR szEndHKCU = L"\r\n\t}\r\n}\r\n";

  00157	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _szEndHKCU$10[ebp], OFFSET ??_C@_1BE@LJOLIMEM@?$AA?$AN?$AA?6?$AA?7?$AA?$HN?$AA?$AN?$AA?6?$AA?$HN?$AA?$AN?$AA?6@

; 1209 : 
; 1210 : 			if ( 0 == nNestingLevel )

  0015e	83 7d cc 00	 cmp	 DWORD PTR _nNestingLevel$[ebp], 0
  00162	0f 85 bd 00 00
	00		 jne	 $LN11@PreProcess

; 1211 : 			{
; 1212 : 				// Then we should be reading a root key. HKCR, HKCU, etc
; 1213 : 				TCHAR* szRootKey = NULL;

  00168	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _szRootKey$9[ebp], 0

; 1214 : 				if( NULL != ( szRootKey = _tcsstr(m_pchCur, _T("HKCR")) ) &&	// if HKCR is found.

  0016f	68 00 00 00 00	 push	 OFFSET ??_C@_19NCHLBIN@?$AAH?$AAK?$AAC?$AAR@
  00174	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00177	8b 11		 mov	 edx, DWORD PTR [ecx]
  00179	52		 push	 edx
  0017a	e8 00 00 00 00	 call	 ?wcsstr@@YAPA_WPA_WPB_W@Z ; wcsstr
  0017f	83 c4 08	 add	 esp, 8
  00182	89 45 bc	 mov	 DWORD PTR _szRootKey$9[ebp], eax
  00185	83 7d bc 00	 cmp	 DWORD PTR _szRootKey$9[ebp], 0
  00189	0f 84 96 00 00
	00		 je	 $LN11@PreProcess
  0018f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00192	8b 4d bc	 mov	 ecx, DWORD PTR _szRootKey$9[ebp]
  00195	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00197	0f 85 88 00 00
	00		 jne	 $LN11@PreProcess

; 1215 : 					(szRootKey == m_pchCur) )	// if HKCR is the first token.
; 1216 : 				{
; 1217 : 					// Skip HKCR
; 1218 : 					m_pchCur = CharNext(m_pchCur);

  0019d	8b f4		 mov	 esi, esp
  0019f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001a2	8b 02		 mov	 eax, DWORD PTR [edx]
  001a4	50		 push	 eax
  001a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  001ab	3b f4		 cmp	 esi, esp
  001ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001b5	89 01		 mov	 DWORD PTR [ecx], eax

; 1219 : 					m_pchCur = CharNext(m_pchCur);

  001b7	8b f4		 mov	 esi, esp
  001b9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001bc	8b 02		 mov	 eax, DWORD PTR [edx]
  001be	50		 push	 eax
  001bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  001c5	3b f4		 cmp	 esi, esp
  001c7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001cc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001cf	89 01		 mov	 DWORD PTR [ecx], eax

; 1220 : 					m_pchCur = CharNext(m_pchCur);

  001d1	8b f4		 mov	 esi, esp
  001d3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001d6	8b 02		 mov	 eax, DWORD PTR [edx]
  001d8	50		 push	 eax
  001d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  001df	3b f4		 cmp	 esi, esp
  001e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001e6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e9	89 01		 mov	 DWORD PTR [ecx], eax

; 1221 : 					m_pchCur = CharNext(m_pchCur);

  001eb	8b f4		 mov	 esi, esp
  001ed	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001f0	8b 02		 mov	 eax, DWORD PTR [edx]
  001f2	50		 push	 eax
  001f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  001f9	3b f4		 cmp	 esi, esp
  001fb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00200	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00203	89 01		 mov	 DWORD PTR [ecx], eax

; 1222 : 
; 1223 : 					// Add HKCU
; 1224 : 					if (!pb.AddString(szStartHKCU))

  00205	8b 55 c4	 mov	 edx, DWORD PTR _szStartHKCU$11[ebp]
  00208	52		 push	 edx
  00209	8d 4d e4	 lea	 ecx, DWORD PTR _pb$[ebp]
  0020c	e8 00 00 00 00	 call	 ?AddString@CParseBuffer@CRegParser@ATL@@QAEHPB_W@Z ; ATL::CRegParser::CParseBuffer::AddString
  00211	85 c0		 test	 eax, eax
  00213	75 0c		 jne	 SHORT $LN13@PreProcess

; 1225 : 					{
; 1226 : 						hr = E_OUTOFMEMORY;

  00215	c7 45 dc 0e 00
	07 80		 mov	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH

; 1227 : 						break;

  0021c	e9 7d 02 00 00	 jmp	 $LN3@PreProcess
$LN13@PreProcess:

; 1228 : 					}
; 1229 : 
; 1230 : 					bRedirectionPresent = true;

  00221	c6 45 cb 01	 mov	 BYTE PTR _bRedirectionPresent$[ebp], 1
$LN11@PreProcess:

; 1231 : 				}
; 1232 : 			}
; 1233 : 
; 1234 : 			if ( chQuote == *m_pchCur )

  00225	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00228	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022a	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0022d	83 fa 27	 cmp	 edx, 39			; 00000027H
  00230	75 58		 jne	 SHORT $LN14@PreProcess

; 1235 : 			{
; 1236 : 				if( false == bInsideQuotes )

  00232	0f b6 45 ca	 movzx	 eax, BYTE PTR _bInsideQuotes$[ebp]
  00236	85 c0		 test	 eax, eax
  00238	75 06		 jne	 SHORT $LN15@PreProcess

; 1237 : 				{
; 1238 : 					bInsideQuotes = true;

  0023a	c6 45 ca 01	 mov	 BYTE PTR _bInsideQuotes$[ebp], 1

; 1239 : 				}

  0023e	eb 4a		 jmp	 SHORT $LN14@PreProcess
$LN15@PreProcess:

; 1240 : 				else
; 1241 : 				{
; 1242 : 					// Make sure it is not an escaped sequence.
; 1243 : 					if( EndOfVar() )

  00240	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00243	e8 00 00 00 00	 call	 ?EndOfVar@CRegParser@ATL@@IAEHXZ ; ATL::CRegParser::EndOfVar
  00248	85 c0		 test	 eax, eax
  0024a	74 06		 je	 SHORT $LN17@PreProcess

; 1244 : 					{
; 1245 : 						bInsideQuotes = false;

  0024c	c6 45 ca 00	 mov	 BYTE PTR _bInsideQuotes$[ebp], 0

; 1246 : 					}

  00250	eb 38		 jmp	 SHORT $LN14@PreProcess
$LN17@PreProcess:

; 1247 : 					else
; 1248 : 					{
; 1249 : 						// An escaped single quote...
; 1250 : 						m_pchCur = CharNext(m_pchCur);

  00252	8b f4		 mov	 esi, esp
  00254	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00257	8b 11		 mov	 edx, DWORD PTR [ecx]
  00259	52		 push	 edx
  0025a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  00260	3b f4		 cmp	 esi, esp
  00262	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00267	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0026a	89 01		 mov	 DWORD PTR [ecx], eax

; 1251 : 						if (!pb.AddChar(m_pchCur))

  0026c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0026f	8b 02		 mov	 eax, DWORD PTR [edx]
  00271	50		 push	 eax
  00272	8d 4d e4	 lea	 ecx, DWORD PTR _pb$[ebp]
  00275	e8 00 00 00 00	 call	 ?AddChar@CParseBuffer@CRegParser@ATL@@QAEHPB_W@Z ; ATL::CRegParser::CParseBuffer::AddChar
  0027a	85 c0		 test	 eax, eax
  0027c	75 0c		 jne	 SHORT $LN14@PreProcess

; 1252 : 						{
; 1253 : 							hr = E_OUTOFMEMORY;

  0027e	c7 45 dc 0e 00
	07 80		 mov	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH

; 1254 : 							break;

  00285	e9 14 02 00 00	 jmp	 $LN3@PreProcess
$LN14@PreProcess:

; 1255 : 						}
; 1256 : 					}
; 1257 : 				}
; 1258 : 			}
; 1259 : 
; 1260 : 			if ( (false == bInsideQuotes) && (*m_pchCur == _T('{')) )

  0028a	0f b6 4d ca	 movzx	 ecx, BYTE PTR _bInsideQuotes$[ebp]
  0028e	85 c9		 test	 ecx, ecx
  00290	75 16		 jne	 SHORT $LN20@PreProcess
  00292	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00295	8b 02		 mov	 eax, DWORD PTR [edx]
  00297	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0029a	83 f9 7b	 cmp	 ecx, 123		; 0000007bH
  0029d	75 09		 jne	 SHORT $LN20@PreProcess

; 1261 : 			{
; 1262 : 				++nNestingLevel;

  0029f	8b 55 cc	 mov	 edx, DWORD PTR _nNestingLevel$[ebp]
  002a2	83 c2 01	 add	 edx, 1
  002a5	89 55 cc	 mov	 DWORD PTR _nNestingLevel$[ebp], edx
$LN20@PreProcess:

; 1263 : 			}
; 1264 : 
; 1265 : 			if ( (false == bInsideQuotes) && (*m_pchCur == _T('}')) )

  002a8	0f b6 45 ca	 movzx	 eax, BYTE PTR _bInsideQuotes$[ebp]
  002ac	85 c0		 test	 eax, eax
  002ae	75 41		 jne	 SHORT $LN10@PreProcess
  002b0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002b3	8b 11		 mov	 edx, DWORD PTR [ecx]
  002b5	0f b7 02	 movzx	 eax, WORD PTR [edx]
  002b8	83 f8 7d	 cmp	 eax, 125		; 0000007dH
  002bb	75 34		 jne	 SHORT $LN10@PreProcess

; 1266 : 			{
; 1267 : 				--nNestingLevel;

  002bd	8b 4d cc	 mov	 ecx, DWORD PTR _nNestingLevel$[ebp]
  002c0	83 e9 01	 sub	 ecx, 1
  002c3	89 4d cc	 mov	 DWORD PTR _nNestingLevel$[ebp], ecx

; 1268 : 				if ( (0 == nNestingLevel) && (true == bRedirectionPresent) )

  002c6	75 29		 jne	 SHORT $LN10@PreProcess
  002c8	0f b6 55 cb	 movzx	 edx, BYTE PTR _bRedirectionPresent$[ebp]
  002cc	83 fa 01	 cmp	 edx, 1
  002cf	75 20		 jne	 SHORT $LN10@PreProcess

; 1269 : 				{
; 1270 : 					if (!pb.AddString(szEndHKCU))

  002d1	8b 45 c0	 mov	 eax, DWORD PTR _szEndHKCU$10[ebp]
  002d4	50		 push	 eax
  002d5	8d 4d e4	 lea	 ecx, DWORD PTR _pb$[ebp]
  002d8	e8 00 00 00 00	 call	 ?AddString@CParseBuffer@CRegParser@ATL@@QAEHPB_W@Z ; ATL::CRegParser::CParseBuffer::AddString
  002dd	85 c0		 test	 eax, eax
  002df	75 0c		 jne	 SHORT $LN23@PreProcess

; 1271 : 					{
; 1272 : 						hr = E_OUTOFMEMORY;

  002e1	c7 45 dc 0e 00
	07 80		 mov	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH

; 1273 : 						break;

  002e8	e9 b1 01 00 00	 jmp	 $LN3@PreProcess
$LN23@PreProcess:

; 1274 : 					}
; 1275 : 
; 1276 : 					bRedirectionPresent = false;

  002ed	c6 45 cb 00	 mov	 BYTE PTR _bRedirectionPresent$[ebp], 0
$LN10@PreProcess:

; 1277 : 				}
; 1278 : 			}
; 1279 : 		}
; 1280 : 
; 1281 : 		if (*m_pchCur == _T('%'))

  002f1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002f4	8b 11		 mov	 edx, DWORD PTR [ecx]
  002f6	0f b7 02	 movzx	 eax, WORD PTR [edx]
  002f9	83 f8 25	 cmp	 eax, 37			; 00000025H
  002fc	0f 85 62 01 00
	00		 jne	 $LN24@PreProcess

; 1282 : 		{
; 1283 : 			m_pchCur = CharNext(m_pchCur);

  00302	8b f4		 mov	 esi, esp
  00304	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00307	8b 11		 mov	 edx, DWORD PTR [ecx]
  00309	52		 push	 edx
  0030a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  00310	3b f4		 cmp	 esi, esp
  00312	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00317	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0031a	89 01		 mov	 DWORD PTR [ecx], eax

; 1284 : 			if (*m_pchCur == _T('%'))

  0031c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0031f	8b 02		 mov	 eax, DWORD PTR [edx]
  00321	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00324	83 f9 25	 cmp	 ecx, 37			; 00000025H
  00327	75 23		 jne	 SHORT $LN26@PreProcess

; 1285 : 			{
; 1286 : 				if (!pb.AddChar(m_pchCur))

  00329	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0032c	8b 02		 mov	 eax, DWORD PTR [edx]
  0032e	50		 push	 eax
  0032f	8d 4d e4	 lea	 ecx, DWORD PTR _pb$[ebp]
  00332	e8 00 00 00 00	 call	 ?AddChar@CParseBuffer@CRegParser@ATL@@QAEHPB_W@Z ; ATL::CRegParser::CParseBuffer::AddChar
  00337	85 c0		 test	 eax, eax
  00339	75 0c		 jne	 SHORT $LN28@PreProcess

; 1287 : 				{
; 1288 : 					hr = E_OUTOFMEMORY;

  0033b	c7 45 dc 0e 00
	07 80		 mov	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH

; 1289 : 					break;

  00342	e9 57 01 00 00	 jmp	 $LN3@PreProcess
$LN28@PreProcess:

; 1290 : 				}
; 1291 : 			}

  00347	e9 16 01 00 00	 jmp	 $LN27@PreProcess
$LN26@PreProcess:

; 1292 : 			else
; 1293 : 			{
; 1294 : 				LPTSTR lpszNext = StrChr(m_pchCur, _T('%'));

  0034c	6a 25		 push	 37			; 00000025H
  0034e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00351	8b 11		 mov	 edx, DWORD PTR [ecx]
  00353	52		 push	 edx
  00354	e8 00 00 00 00	 call	 ?StrChrW@CRegParser@ATL@@KAPA_WPA_W_W@Z ; ATL::CRegParser::StrChrW
  00359	83 c4 08	 add	 esp, 8
  0035c	89 45 b8	 mov	 DWORD PTR _lpszNext$8[ebp], eax

; 1295 : 				if (lpszNext == NULL)

  0035f	83 7d b8 00	 cmp	 DWORD PTR _lpszNext$8[ebp], 0
  00363	75 45		 jne	 SHORT $LN29@PreProcess

; 1296 : 				{
; 1297 : 					ATLTRACE(atlTraceRegistrar, 0, _T("Error no closing %% found\n"));

  00365	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@KOLNJMBJ@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAn?$AAo?$AA?5?$AAc?$AAl?$AAo?$AAs?$AAi?$AAn@
  0036a	6a 00		 push	 0
  0036c	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  00371	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8,0>::operator unsigned int
  00376	50		 push	 eax
  00377	68 11 05 00 00	 push	 1297			; 00000511H
  0037c	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@NIKGFAOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00381	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00387	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0038c	50		 push	 eax
  0038d	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00392	83 c4 10	 add	 esp, 16			; 00000010H

; 1298 : 					hr = GenerateError(E_ATL_UNEXPECTED_EOS);

  00395	68 03 02 00 00	 push	 515			; 00000203H
  0039a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0039d	e8 00 00 00 00	 call	 ?GenerateError@CRegParser@ATL@@IAEJI@Z ; ATL::CRegParser::GenerateError
  003a2	89 45 dc	 mov	 DWORD PTR _hr$[ebp], eax

; 1299 : 					break;

  003a5	e9 f4 00 00 00	 jmp	 $LN3@PreProcess
$LN29@PreProcess:

; 1300 : 				}
; 1301 : 				if ((lpszNext-m_pchCur) > 31)

  003aa	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003ad	8b 4d b8	 mov	 ecx, DWORD PTR _lpszNext$8[ebp]
  003b0	2b 08		 sub	 ecx, DWORD PTR [eax]
  003b2	d1 f9		 sar	 ecx, 1
  003b4	83 f9 1f	 cmp	 ecx, 31			; 0000001fH
  003b7	7e 0c		 jle	 SHORT $LN30@PreProcess

; 1302 : 				{
; 1303 : 					hr = E_FAIL;

  003b9	c7 45 dc 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H

; 1304 : 					break;

  003c0	e9 d9 00 00 00	 jmp	 $LN3@PreProcess
$LN30@PreProcess:

; 1305 : 				}
; 1306 : 				int nLength = int(lpszNext - m_pchCur);

  003c5	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003c8	8b 45 b8	 mov	 eax, DWORD PTR _lpszNext$8[ebp]
  003cb	2b 02		 sub	 eax, DWORD PTR [edx]
  003cd	d1 f8		 sar	 eax, 1
  003cf	89 45 b4	 mov	 DWORD PTR _nLength$7[ebp], eax

; 1307 : 				TCHAR buf[32];
; 1308 : 				Checked::tcsncpy_s(buf, _countof(buf), m_pchCur, nLength);

  003d2	8b 4d b4	 mov	 ecx, DWORD PTR _nLength$7[ebp]
  003d5	51		 push	 ecx
  003d6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003d9	8b 02		 mov	 eax, DWORD PTR [edx]
  003db	50		 push	 eax
  003dc	6a 20		 push	 32			; 00000020H
  003de	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _buf$6[ebp]
  003e4	51		 push	 ecx
  003e5	e8 00 00 00 00	 call	 ?tcsncpy_s@Checked@ATL@@YAHPA_WIPB_WI@Z ; ATL::Checked::tcsncpy_s
  003ea	83 c4 10	 add	 esp, 16			; 00000010H

; 1309 : 				LPCOLESTR lpszVar = m_pRegObj->StrFromMap(buf);

  003ed	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _buf$6[ebp]
  003f3	52		 push	 edx
  003f4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003f7	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  003fa	e8 00 00 00 00	 call	 ?StrFromMap@CRegObject@ATL@@QAEPB_WPA_W@Z ; ATL::CRegObject::StrFromMap
  003ff	89 85 68 ff ff
	ff		 mov	 DWORD PTR _lpszVar$5[ebp], eax

; 1310 : 				if (lpszVar == NULL)

  00405	83 bd 68 ff ff
	ff 00		 cmp	 DWORD PTR _lpszVar$5[ebp], 0
  0040c	75 12		 jne	 SHORT $LN31@PreProcess

; 1311 : 				{
; 1312 : 					hr = GenerateError(E_ATL_NOT_IN_MAP);

  0040e	68 02 02 00 00	 push	 514			; 00000202H
  00413	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00416	e8 00 00 00 00	 call	 ?GenerateError@CRegParser@ATL@@IAEJI@Z ; ATL::CRegParser::GenerateError
  0041b	89 45 dc	 mov	 DWORD PTR _hr$[ebp], eax

; 1313 : 					break;

  0041e	eb 7e		 jmp	 SHORT $LN3@PreProcess
$LN31@PreProcess:

; 1314 : 				}
; 1315 : 				if (!pb.AddString(lpszVar))

  00420	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _lpszVar$5[ebp]
  00426	51		 push	 ecx
  00427	8d 4d e4	 lea	 ecx, DWORD PTR _pb$[ebp]
  0042a	e8 00 00 00 00	 call	 ?AddString@CParseBuffer@CRegParser@ATL@@QAEHPB_W@Z ; ATL::CRegParser::CParseBuffer::AddString
  0042f	85 c0		 test	 eax, eax
  00431	75 09		 jne	 SHORT $LN4@PreProcess

; 1316 : 				{
; 1317 : 					hr = E_OUTOFMEMORY;

  00433	c7 45 dc 0e 00
	07 80		 mov	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH

; 1318 : 					break;

  0043a	eb 62		 jmp	 SHORT $LN3@PreProcess
$LN4@PreProcess:

; 1319 : 				}
; 1320 : 
; 1321 : 				while (m_pchCur != lpszNext)

  0043c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0043f	8b 02		 mov	 eax, DWORD PTR [edx]
  00441	3b 45 b8	 cmp	 eax, DWORD PTR _lpszNext$8[ebp]
  00444	74 1c		 je	 SHORT $LN27@PreProcess

; 1322 : 					m_pchCur = CharNext(m_pchCur);

  00446	8b f4		 mov	 esi, esp
  00448	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0044b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0044d	52		 push	 edx
  0044e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  00454	3b f4		 cmp	 esi, esp
  00456	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0045b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0045e	89 01		 mov	 DWORD PTR [ecx], eax
  00460	eb da		 jmp	 SHORT $LN4@PreProcess
$LN27@PreProcess:

; 1323 : 			}
; 1324 : 		}

  00462	eb 1b		 jmp	 SHORT $LN25@PreProcess
$LN24@PreProcess:

; 1325 : 		else
; 1326 : 		{
; 1327 : 			if (!pb.AddChar(m_pchCur))

  00464	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00467	8b 02		 mov	 eax, DWORD PTR [edx]
  00469	50		 push	 eax
  0046a	8d 4d e4	 lea	 ecx, DWORD PTR _pb$[ebp]
  0046d	e8 00 00 00 00	 call	 ?AddChar@CParseBuffer@CRegParser@ATL@@QAEHPB_W@Z ; ATL::CRegParser::CParseBuffer::AddChar
  00472	85 c0		 test	 eax, eax
  00474	75 09		 jne	 SHORT $LN25@PreProcess

; 1328 : 			{
; 1329 : 				hr = E_OUTOFMEMORY;

  00476	c7 45 dc 0e 00
	07 80		 mov	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH

; 1330 : 				break;

  0047d	eb 1f		 jmp	 SHORT $LN3@PreProcess
$LN25@PreProcess:

; 1331 : 			}
; 1332 : 		}
; 1333 : 
; 1334 : 		m_pchCur = CharNext(m_pchCur);

  0047f	8b f4		 mov	 esi, esp
  00481	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00484	8b 11		 mov	 edx, DWORD PTR [ecx]
  00486	52		 push	 edx
  00487	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharNextW@4
  0048d	3b f4		 cmp	 esi, esp
  0048f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00494	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00497	89 01		 mov	 DWORD PTR [ecx], eax

; 1335 : 	}

  00499	e9 95 fc ff ff	 jmp	 $LN2@PreProcess
$LN3@PreProcess:

; 1336 : 	if (SUCCEEDED(hr))

  0049e	83 7d dc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  004a2	7c 0d		 jl	 SHORT $LN34@PreProcess

; 1337 : 		*ppszReg = pb.Detach();

  004a4	8d 4d e4	 lea	 ecx, DWORD PTR _pb$[ebp]
  004a7	e8 00 00 00 00	 call	 ?Detach@CParseBuffer@CRegParser@ATL@@QAEPA_WXZ ; ATL::CRegParser::CParseBuffer::Detach
  004ac	8b 55 0c	 mov	 edx, DWORD PTR _ppszReg$[ebp]
  004af	89 02		 mov	 DWORD PTR [edx], eax
$LN34@PreProcess:

; 1338 : 	return hr;

  004b1	8b 45 dc	 mov	 eax, DWORD PTR _hr$[ebp]
  004b4	89 85 54 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  004ba	8d 4d e4	 lea	 ecx, DWORD PTR _pb$[ebp]
  004bd	e8 00 00 00 00	 call	 ??1CParseBuffer@CRegParser@ATL@@QAE@XZ ; ATL::CRegParser::CParseBuffer::~CParseBuffer
  004c2	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
$LN1@PreProcess:

; 1339 : }

  004c8	52		 push	 edx
  004c9	8b cd		 mov	 ecx, ebp
  004cb	50		 push	 eax
  004cc	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN42@PreProcess
  004d2	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  004d7	58		 pop	 eax
  004d8	5a		 pop	 edx
  004d9	5f		 pop	 edi
  004da	5e		 pop	 esi
  004db	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004de	33 cd		 xor	 ecx, ebp
  004e0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004e5	81 c4 ac 00 00
	00		 add	 esp, 172		; 000000acH
  004eb	3b ec		 cmp	 ebp, esp
  004ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004f2	8b e5		 mov	 esp, ebp
  004f4	5d		 pop	 ebp
  004f5	c2 08 00	 ret	 8
$LN42@PreProcess:
  004f8	03 00 00 00	 DD	 3
  004fc	00 00 00 00	 DD	 $LN41@PreProcess
$LN41@PreProcess:
  00500	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00504	0c 00 00 00	 DD	 12			; 0000000cH
  00508	00 00 00 00	 DD	 $LN38@PreProcess
  0050c	d7 ff ff ff	 DD	 -41			; ffffffd7H
  00510	01 00 00 00	 DD	 1
  00514	00 00 00 00	 DD	 $LN39@PreProcess
  00518	70 ff ff ff	 DD	 -144			; ffffff70H
  0051c	40 00 00 00	 DD	 64			; 00000040H
  00520	00 00 00 00	 DD	 $LN40@PreProcess
$LN40@PreProcess:
  00524	62		 DB	 98			; 00000062H
  00525	75		 DB	 117			; 00000075H
  00526	66		 DB	 102			; 00000066H
  00527	00		 DB	 0
$LN39@PreProcess:
  00528	62		 DB	 98			; 00000062H
  00529	52		 DB	 82			; 00000052H
  0052a	65		 DB	 101			; 00000065H
  0052b	64		 DB	 100			; 00000064H
  0052c	69		 DB	 105			; 00000069H
  0052d	72		 DB	 114			; 00000072H
  0052e	65		 DB	 101			; 00000065H
  0052f	63		 DB	 99			; 00000063H
  00530	74		 DB	 116			; 00000074H
  00531	69		 DB	 105			; 00000069H
  00532	6f		 DB	 111			; 0000006fH
  00533	6e		 DB	 110			; 0000006eH
  00534	45		 DB	 69			; 00000045H
  00535	6e		 DB	 110			; 0000006eH
  00536	61		 DB	 97			; 00000061H
  00537	62		 DB	 98			; 00000062H
  00538	6c		 DB	 108			; 0000006cH
  00539	65		 DB	 101			; 00000065H
  0053a	64		 DB	 100			; 00000064H
  0053b	00		 DB	 0
$LN38@PreProcess:
  0053c	70		 DB	 112			; 00000070H
  0053d	62		 DB	 98			; 00000062H
  0053e	00		 DB	 0
?PreProcessBuffer@CRegParser@ATL@@QAEJPA_WPAPA_W@Z ENDP	; ATL::CRegParser::PreProcessBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ??0CRegParser@ATL@@QAE@PAVCRegObject@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pRegObj$ = 8						; size = 4
??0CRegParser@ATL@@QAE@PAVCRegObject@1@@Z PROC		; ATL::CRegParser::CRegParser, COMDAT
; _this$ = ecx

; 875  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 876  : 	m_pRegObj = pRegObj;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _pRegObj$[ebp]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 877  : 	m_pchCur = NULL;

  00017	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 878  : }

  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??0CRegParser@ATL@@QAE@PAVCRegObject@1@@Z ENDP		; ATL::CRegParser::CRegParser
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Free@?$CAutoVectorPtr@_W@ATL@@QAEXXZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
?Free@?$CAutoVectorPtr@_W@ATL@@QAEXXZ PROC		; ATL::CAutoVectorPtr<wchar_t>::Free, COMDAT
; _this$ = ecx

; 826  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 827  : 		delete[] m_p;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 4d f8	 mov	 DWORD PTR $T1[ebp], ecx
  0001f	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00028	83 c4 04	 add	 esp, 4

; 828  : 		m_p = NULL;

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 829  : 	}

  00034	83 c4 08	 add	 esp, 8
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?Free@?$CAutoVectorPtr@_W@ATL@@QAEXXZ ENDP		; ATL::CAutoVectorPtr<wchar_t>::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Detach@?$CAutoVectorPtr@_W@ATL@@QAEPA_WXZ
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@?$CAutoVectorPtr@_W@ATL@@QAEPA_WXZ PROC		; ATL::CAutoVectorPtr<wchar_t>::Detach, COMDAT
; _this$ = ecx

; 816  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 817  : 		T* p;
; 818  : 
; 819  : 		p = m_p;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 4d f8	 mov	 DWORD PTR _p$[ebp], ecx

; 820  : 		m_p = NULL;

  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 821  : 
; 822  : 		return( p );

  00028	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]

; 823  : 	}

  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?Detach@?$CAutoVectorPtr@_W@ATL@@QAEPA_WXZ ENDP		; ATL::CAutoVectorPtr<wchar_t>::Detach
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Attach@?$CAutoVectorPtr@_W@ATL@@QAEXPA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
?Attach@?$CAutoVectorPtr@_W@ATL@@QAEXPA_W@Z PROC	; ATL::CAutoVectorPtr<wchar_t>::Attach, COMDAT
; _this$ = ecx

; 810  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@Attach:

; 811  : 		ATLASSUME( m_p == NULL );

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN2@Attach
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@EMCLECFJ@?$AAm?$AA_?$AAp?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 2b 03 00 00	 push	 811			; 0000032bH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN2@Attach
  0003b	cc		 int	 3
$LN2@Attach:
  0003c	33 d2		 xor	 edx, edx
  0003e	75 ce		 jne	 SHORT $LN4@Attach

; 812  : 		m_p = p;

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00046	89 08		 mov	 DWORD PTR [eax], ecx

; 813  : 	}

  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?Attach@?$CAutoVectorPtr@_W@ATL@@QAEXPA_W@Z ENDP	; ATL::CAutoVectorPtr<wchar_t>::Attach
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??1?$CAutoVectorPtr@_W@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CAutoVectorPtr@_W@ATL@@QAE@XZ PROC			; ATL::CAutoVectorPtr<wchar_t>::~CAutoVectorPtr<wchar_t>, COMDAT
; _this$ = ecx

; 741  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 742  : 		Free();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?Free@?$CAutoVectorPtr@_W@ATL@@QAEXXZ ; ATL::CAutoVectorPtr<wchar_t>::Free

; 743  : 	}

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CAutoVectorPtr@_W@ATL@@QAE@XZ ENDP			; ATL::CAutoVectorPtr<wchar_t>::~CAutoVectorPtr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??0?$CAutoVectorPtr@_W@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CAutoVectorPtr@_W@ATL@@QAE@XZ PROC			; ATL::CAutoVectorPtr<wchar_t>::CAutoVectorPtr<wchar_t>, COMDAT
; _this$ = ecx

; 730  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 729  : 		m_p( NULL )

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 731  : 	}

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CAutoVectorPtr@_W@ATL@@QAE@XZ ENDP			; ATL::CAutoVectorPtr<wchar_t>::CAutoVectorPtr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CExpansionVector@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CExpansionVector@ATL@@QAE@XZ PROC			; ATL::CExpansionVector::CExpansionVector, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0CExpansionVector@ATL@@QAE@XZ ENDP			; ATL::CExpansionVector::CExpansionVector
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?ClearReplacements@CExpansionVector@ATL@@QAEJXZ
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
?ClearReplacements@CExpansionVector@ATL@@QAEJXZ PROC	; ATL::CExpansionVector::ClearReplacements, COMDAT
; _this$ = ecx

; 152  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 153  : 		for (int i = 0; i < GetSize(); i++)

  0001a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$3[ebp], 0
  00021	eb 09		 jmp	 SHORT $LN4@ClearRepla
$LN2@ClearRepla:
  00023	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00026	83 c0 01	 add	 eax, 1
  00029	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@ClearRepla:
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetSize@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHXZ ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::GetSize
  00034	39 45 f8	 cmp	 DWORD PTR _i$3[ebp], eax
  00037	7d 3c		 jge	 SHORT $LN3@ClearRepla

; 154  : 		{
; 155  : 			delete []GetKeyAt(i);

  00039	8b 4d f8	 mov	 ecx, DWORD PTR _i$3[ebp]
  0003c	51		 push	 ecx
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?GetKeyAt@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPA_WH@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::GetKeyAt
  00045	8b 10		 mov	 edx, DWORD PTR [eax]
  00047	89 55 f4	 mov	 DWORD PTR $T2[ebp], edx
  0004a	8b 45 f4	 mov	 eax, DWORD PTR $T2[ebp]
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00053	83 c4 04	 add	 esp, 4

; 156  : 			delete []GetValueAt(i);

  00056	8b 4d f8	 mov	 ecx, DWORD PTR _i$3[ebp]
  00059	51		 push	 ecx
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	e8 00 00 00 00	 call	 ?GetValueAt@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPA_WH@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::GetValueAt
  00062	8b 10		 mov	 edx, DWORD PTR [eax]
  00064	89 55 f0	 mov	 DWORD PTR $T1[ebp], edx
  00067	8b 45 f0	 mov	 eax, DWORD PTR $T1[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00070	83 c4 04	 add	 esp, 4

; 157  : 		}

  00073	eb ae		 jmp	 SHORT $LN2@ClearRepla
$LN3@ClearRepla:

; 158  : 		RemoveAll();

  00075	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::RemoveAll

; 159  : 		return S_OK;

  0007d	33 c0		 xor	 eax, eax

; 160  : 	}

  0007f	83 c4 10	 add	 esp, 16			; 00000010H
  00082	3b ec		 cmp	 ebp, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
?ClearReplacements@CExpansionVector@ATL@@QAEJXZ ENDP	; ATL::CExpansionVector::ClearReplacements
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?Add@CExpansionVector@ATL@@QAEHPB_W0@Z
_TEXT	SEGMENT
tv194 = -80						; size = 4
$T1 = -76						; size = 4
$T2 = -72						; size = 4
$T3 = -68						; size = 4
_spValue$ = -60						; size = 4
_szValue$ = -48						; size = 4
_cbValue$ = -40						; size = 4
_spKey$ = -32						; size = 4
_szKey$ = -20						; size = 4
_cbKey$ = -12						; size = 4
_hRes$ = -8						; size = 4
_this$ = -4						; size = 4
_lpszKey$ = 8						; size = 4
_lpszValue$ = 12					; size = 4
?Add@CExpansionVector@ATL@@QAEHPB_W0@Z PROC		; ATL::CExpansionVector::Add, COMDAT
; _this$ = ecx

; 111  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d b0	 lea	 edi, DWORD PTR [ebp-80]
  0000b	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 112  : 		ATLASSERT(lpszKey != NULL && lpszValue != NULL);

  0001b	83 7d 08 00	 cmp	 DWORD PTR _lpszKey$[ebp], 0
  0001f	74 06		 je	 SHORT $LN16@Add
  00021	83 7d 0c 00	 cmp	 DWORD PTR _lpszValue$[ebp], 0
  00025	75 23		 jne	 SHORT $LN17@Add
$LN16@Add:
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1DO@EIGOLNAA@?$AAl?$AAp?$AAs?$AAz?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00031	6a 00		 push	 0
  00033	6a 70		 push	 112			; 00000070H
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IGDLHBDL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0003a	6a 02		 push	 2
  0003c	e8 00 00 00 00	 call	 __CrtDbgReportW
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN17@Add
  00049	cc		 int	 3
$LN17@Add:

; 113  : 		if (lpszKey == NULL || lpszValue == NULL)

  0004a	83 7d 08 00	 cmp	 DWORD PTR _lpszKey$[ebp], 0
  0004e	74 06		 je	 SHORT $LN9@Add
  00050	83 7d 0c 00	 cmp	 DWORD PTR _lpszValue$[ebp], 0
  00054	75 07		 jne	 SHORT $LN8@Add
$LN9@Add:

; 114  : 			return FALSE;

  00056	33 c0		 xor	 eax, eax
  00058	e9 b9 01 00 00	 jmp	 $LN1@Add
$LN8@Add:

; 115  : 
; 116  : 		HRESULT hRes = S_OK;

  0005d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hRes$[ebp], 0

; 117  : 
; 118  : 		size_t cbKey = (_tcslen(lpszKey)+1)*sizeof(TCHAR);

  00064	8b 4d 08	 mov	 ecx, DWORD PTR _lpszKey$[ebp]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 _wcslen
  0006d	83 c4 04	 add	 esp, 4
  00070	8d 54 00 02	 lea	 edx, DWORD PTR [eax+eax+2]
  00074	89 55 f4	 mov	 DWORD PTR _cbKey$[ebp], edx

; 119  : 		TCHAR* szKey = NULL;

  00077	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _szKey$[ebp], 0

; 120  : 
; 121  : 		szKey = _ATL_NEW TCHAR[cbKey];

  0007e	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00083	33 c9		 xor	 ecx, ecx
  00085	8b 45 f4	 mov	 eax, DWORD PTR _cbKey$[ebp]
  00088	ba 02 00 00 00	 mov	 edx, 2
  0008d	f7 e2		 mul	 edx
  0008f	0f 90 c1	 seto	 cl
  00092	f7 d9		 neg	 ecx
  00094	0b c8		 or	 ecx, eax
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 ??_U@YAPAXIABUnothrow_t@std@@@Z ; operator new[]
  0009c	83 c4 08	 add	 esp, 8
  0009f	89 45 bc	 mov	 DWORD PTR $T3[ebp], eax
  000a2	8b 45 bc	 mov	 eax, DWORD PTR $T3[ebp]
  000a5	89 45 ec	 mov	 DWORD PTR _szKey$[ebp], eax

; 122  : 		CAutoVectorPtr<TCHAR> spKey;

  000a8	8d 4d e0	 lea	 ecx, DWORD PTR _spKey$[ebp]
  000ab	e8 00 00 00 00	 call	 ??0?$CAutoVectorPtr@_W@ATL@@QAE@XZ ; ATL::CAutoVectorPtr<wchar_t>::CAutoVectorPtr<wchar_t>
$LN4@Add:

; 123  : 		ATLASSUME(szKey != NULL);

  000b0	83 7d ec 00	 cmp	 DWORD PTR _szKey$[ebp], 0
  000b4	75 23		 jne	 SHORT $LN2@Add
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@MMFPEKL@?$AAs?$AAz?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000c0	6a 00		 push	 0
  000c2	6a 7b		 push	 123			; 0000007bH
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IGDLHBDL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000c9	6a 02		 push	 2
  000cb	e8 00 00 00 00	 call	 __CrtDbgReportW
  000d0	83 c4 18	 add	 esp, 24			; 00000018H
  000d3	83 f8 01	 cmp	 eax, 1
  000d6	75 01		 jne	 SHORT $LN2@Add
  000d8	cc		 int	 3
$LN2@Add:
  000d9	33 d2		 xor	 edx, edx
  000db	75 d3		 jne	 SHORT $LN4@Add

; 124  : 		spKey.Attach(szKey);

  000dd	8b 45 ec	 mov	 eax, DWORD PTR _szKey$[ebp]
  000e0	50		 push	 eax
  000e1	8d 4d e0	 lea	 ecx, DWORD PTR _spKey$[ebp]
  000e4	e8 00 00 00 00	 call	 ?Attach@?$CAutoVectorPtr@_W@ATL@@QAEXPA_W@Z ; ATL::CAutoVectorPtr<wchar_t>::Attach

; 125  : 
; 126  : 		size_t cbValue = (ocslen(lpszValue)+1)*sizeof(OLECHAR);

  000e9	8b 4d 0c	 mov	 ecx, DWORD PTR _lpszValue$[ebp]
  000ec	51		 push	 ecx
  000ed	e8 00 00 00 00	 call	 ?ocslen@@YAHPB_W@Z	; ocslen
  000f2	83 c4 04	 add	 esp, 4
  000f5	8d 54 00 02	 lea	 edx, DWORD PTR [eax+eax+2]
  000f9	89 55 d8	 mov	 DWORD PTR _cbValue$[ebp], edx

; 127  : 		LPOLESTR szValue = NULL;

  000fc	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _szValue$[ebp], 0

; 128  : 		szValue = _ATL_NEW OLECHAR[cbValue];

  00103	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00108	33 c9		 xor	 ecx, ecx
  0010a	8b 45 d8	 mov	 eax, DWORD PTR _cbValue$[ebp]
  0010d	ba 02 00 00 00	 mov	 edx, 2
  00112	f7 e2		 mul	 edx
  00114	0f 90 c1	 seto	 cl
  00117	f7 d9		 neg	 ecx
  00119	0b c8		 or	 ecx, eax
  0011b	51		 push	 ecx
  0011c	e8 00 00 00 00	 call	 ??_U@YAPAXIABUnothrow_t@std@@@Z ; operator new[]
  00121	83 c4 08	 add	 esp, 8
  00124	89 45 b8	 mov	 DWORD PTR $T2[ebp], eax
  00127	8b 45 b8	 mov	 eax, DWORD PTR $T2[ebp]
  0012a	89 45 d0	 mov	 DWORD PTR _szValue$[ebp], eax

; 129  : 		CAutoVectorPtr<OLECHAR> spValue;

  0012d	8d 4d c4	 lea	 ecx, DWORD PTR _spValue$[ebp]
  00130	e8 00 00 00 00	 call	 ??0?$CAutoVectorPtr@_W@ATL@@QAE@XZ ; ATL::CAutoVectorPtr<wchar_t>::CAutoVectorPtr<wchar_t>
$LN7@Add:

; 130  : 		ATLASSUME(szValue != NULL);

  00135	83 7d d0 00	 cmp	 DWORD PTR _szValue$[ebp], 0
  00139	75 26		 jne	 SHORT $LN5@Add
  0013b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@LDPHGFPN@?$AAs?$AAz?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00140	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00145	6a 00		 push	 0
  00147	68 82 00 00 00	 push	 130			; 00000082H
  0014c	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IGDLHBDL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00151	6a 02		 push	 2
  00153	e8 00 00 00 00	 call	 __CrtDbgReportW
  00158	83 c4 18	 add	 esp, 24			; 00000018H
  0015b	83 f8 01	 cmp	 eax, 1
  0015e	75 01		 jne	 SHORT $LN5@Add
  00160	cc		 int	 3
$LN5@Add:
  00161	33 d2		 xor	 edx, edx
  00163	75 d0		 jne	 SHORT $LN7@Add

; 131  : 		spValue.Attach(szValue);

  00165	8b 45 d0	 mov	 eax, DWORD PTR _szValue$[ebp]
  00168	50		 push	 eax
  00169	8d 4d c4	 lea	 ecx, DWORD PTR _spValue$[ebp]
  0016c	e8 00 00 00 00	 call	 ?Attach@?$CAutoVectorPtr@_W@ATL@@QAEXPA_W@Z ; ATL::CAutoVectorPtr<wchar_t>::Attach

; 132  : 
; 133  : 		if (szKey == NULL || szValue == NULL)

  00171	83 7d ec 00	 cmp	 DWORD PTR _szKey$[ebp], 0
  00175	74 06		 je	 SHORT $LN12@Add
  00177	83 7d d0 00	 cmp	 DWORD PTR _szValue$[ebp], 0
  0017b	75 09		 jne	 SHORT $LN10@Add
$LN12@Add:

; 134  : 			hRes = E_OUTOFMEMORY;

  0017d	c7 45 f8 0e 00
	07 80		 mov	 DWORD PTR _hRes$[ebp], -2147024882 ; 8007000eH
  00184	eb 4b		 jmp	 SHORT $LN11@Add
$LN10@Add:

; 135  : 		else
; 136  : 		{
; 137  : 			Checked::memcpy_s(szKey, cbKey, lpszKey, cbKey);

  00186	8b 4d f4	 mov	 ecx, DWORD PTR _cbKey$[ebp]
  00189	51		 push	 ecx
  0018a	8b 55 08	 mov	 edx, DWORD PTR _lpszKey$[ebp]
  0018d	52		 push	 edx
  0018e	8b 45 f4	 mov	 eax, DWORD PTR _cbKey$[ebp]
  00191	50		 push	 eax
  00192	8b 4d ec	 mov	 ecx, DWORD PTR _szKey$[ebp]
  00195	51		 push	 ecx
  00196	e8 00 00 00 00	 call	 ?memcpy_s@Checked@ATL@@YAXPAXIPBXI@Z ; ATL::Checked::memcpy_s
  0019b	83 c4 10	 add	 esp, 16			; 00000010H

; 138  : 			Checked::memcpy_s(szValue, cbValue, lpszValue, cbValue);

  0019e	8b 55 d8	 mov	 edx, DWORD PTR _cbValue$[ebp]
  001a1	52		 push	 edx
  001a2	8b 45 0c	 mov	 eax, DWORD PTR _lpszValue$[ebp]
  001a5	50		 push	 eax
  001a6	8b 4d d8	 mov	 ecx, DWORD PTR _cbValue$[ebp]
  001a9	51		 push	 ecx
  001aa	8b 55 d0	 mov	 edx, DWORD PTR _szValue$[ebp]
  001ad	52		 push	 edx
  001ae	e8 00 00 00 00	 call	 ?memcpy_s@Checked@ATL@@YAXPAXIPBXI@Z ; ATL::Checked::memcpy_s
  001b3	83 c4 10	 add	 esp, 16			; 00000010H

; 139  : 			if (!CSimpleMap<LPTSTR, LPOLESTR, CExpansionVectorEqualHelper>::Add(szKey, szValue))

  001b6	8d 45 d0	 lea	 eax, DWORD PTR _szValue$[ebp]
  001b9	50		 push	 eax
  001ba	8d 4d ec	 lea	 ecx, DWORD PTR _szKey$[ebp]
  001bd	51		 push	 ecx
  001be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001c1	e8 00 00 00 00	 call	 ?Add@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEHABQA_W0@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Add
  001c6	85 c0		 test	 eax, eax
  001c8	75 07		 jne	 SHORT $LN11@Add

; 140  : 				hRes = E_OUTOFMEMORY;

  001ca	c7 45 f8 0e 00
	07 80		 mov	 DWORD PTR _hRes$[ebp], -2147024882 ; 8007000eH
$LN11@Add:

; 141  : 		}
; 142  : 		if (SUCCEEDED(hRes))

  001d1	83 7d f8 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  001d5	7c 10		 jl	 SHORT $LN14@Add

; 143  : 		{
; 144  : 			spKey.Detach();

  001d7	8d 4d e0	 lea	 ecx, DWORD PTR _spKey$[ebp]
  001da	e8 00 00 00 00	 call	 ?Detach@?$CAutoVectorPtr@_W@ATL@@QAEPA_WXZ ; ATL::CAutoVectorPtr<wchar_t>::Detach

; 145  : 			spValue.Detach();

  001df	8d 4d c4	 lea	 ecx, DWORD PTR _spValue$[ebp]
  001e2	e8 00 00 00 00	 call	 ?Detach@?$CAutoVectorPtr@_W@ATL@@QAEPA_WXZ ; ATL::CAutoVectorPtr<wchar_t>::Detach
$LN14@Add:

; 146  : 		}
; 147  : 		return SUCCEEDED(hRes);

  001e7	83 7d f8 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  001eb	7c 09		 jl	 SHORT $LN20@Add
  001ed	c7 45 b0 01 00
	00 00		 mov	 DWORD PTR tv194[ebp], 1
  001f4	eb 07		 jmp	 SHORT $LN21@Add
$LN20@Add:
  001f6	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv194[ebp], 0
$LN21@Add:
  001fd	8b 55 b0	 mov	 edx, DWORD PTR tv194[ebp]
  00200	89 55 b4	 mov	 DWORD PTR $T1[ebp], edx
  00203	8d 4d c4	 lea	 ecx, DWORD PTR _spValue$[ebp]
  00206	e8 00 00 00 00	 call	 ??1?$CAutoVectorPtr@_W@ATL@@QAE@XZ ; ATL::CAutoVectorPtr<wchar_t>::~CAutoVectorPtr<wchar_t>
  0020b	8d 4d e0	 lea	 ecx, DWORD PTR _spKey$[ebp]
  0020e	e8 00 00 00 00	 call	 ??1?$CAutoVectorPtr@_W@ATL@@QAE@XZ ; ATL::CAutoVectorPtr<wchar_t>::~CAutoVectorPtr<wchar_t>
  00213	8b 45 b4	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@Add:

; 148  : 	}

  00216	52		 push	 edx
  00217	8b cd		 mov	 ecx, ebp
  00219	50		 push	 eax
  0021a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN27@Add
  00220	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00225	58		 pop	 eax
  00226	5a		 pop	 edx
  00227	5f		 pop	 edi
  00228	83 c4 50	 add	 esp, 80			; 00000050H
  0022b	3b ec		 cmp	 ebp, esp
  0022d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00232	8b e5		 mov	 esp, ebp
  00234	5d		 pop	 ebp
  00235	c2 08 00	 ret	 8
$LN27@Add:
  00238	04 00 00 00	 DD	 4
  0023c	00 00 00 00	 DD	 $LN26@Add
$LN26@Add:
  00240	ec ff ff ff	 DD	 -20			; ffffffecH
  00244	04 00 00 00	 DD	 4
  00248	00 00 00 00	 DD	 $LN22@Add
  0024c	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00250	04 00 00 00	 DD	 4
  00254	00 00 00 00	 DD	 $LN23@Add
  00258	d0 ff ff ff	 DD	 -48			; ffffffd0H
  0025c	04 00 00 00	 DD	 4
  00260	00 00 00 00	 DD	 $LN24@Add
  00264	c4 ff ff ff	 DD	 -60			; ffffffc4H
  00268	04 00 00 00	 DD	 4
  0026c	00 00 00 00	 DD	 $LN25@Add
$LN25@Add:
  00270	73		 DB	 115			; 00000073H
  00271	70		 DB	 112			; 00000070H
  00272	56		 DB	 86			; 00000056H
  00273	61		 DB	 97			; 00000061H
  00274	6c		 DB	 108			; 0000006cH
  00275	75		 DB	 117			; 00000075H
  00276	65		 DB	 101			; 00000065H
  00277	00		 DB	 0
$LN24@Add:
  00278	73		 DB	 115			; 00000073H
  00279	7a		 DB	 122			; 0000007aH
  0027a	56		 DB	 86			; 00000056H
  0027b	61		 DB	 97			; 00000061H
  0027c	6c		 DB	 108			; 0000006cH
  0027d	75		 DB	 117			; 00000075H
  0027e	65		 DB	 101			; 00000065H
  0027f	00		 DB	 0
$LN23@Add:
  00280	73		 DB	 115			; 00000073H
  00281	70		 DB	 112			; 00000070H
  00282	4b		 DB	 75			; 0000004bH
  00283	65		 DB	 101			; 00000065H
  00284	79		 DB	 121			; 00000079H
  00285	00		 DB	 0
$LN22@Add:
  00286	73		 DB	 115			; 00000073H
  00287	7a		 DB	 122			; 0000007aH
  00288	4b		 DB	 75			; 0000004bH
  00289	65		 DB	 101			; 00000065H
  0028a	79		 DB	 121			; 00000079H
  0028b	00		 DB	 0
?Add@CExpansionVector@ATL@@QAEHPB_W0@Z ENDP		; ATL::CExpansionVector::Add
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ??1CExpansionVector@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CExpansionVector@ATL@@QAE@XZ PROC			; ATL::CExpansionVector::~CExpansionVector, COMDAT
; _this$ = ecx

; 103  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 104  : 		 ClearReplacements();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?ClearReplacements@CExpansionVector@ATL@@QAEJXZ ; ATL::CExpansionVector::ClearReplacements

; 105  : 	}

  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::~CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1CExpansionVector@ATL@@QAE@XZ ENDP			; ATL::CExpansionVector::~CExpansionVector
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ?InternalSetAtIndex@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXHABQA_W0@Z
_TEXT	SEGMENT
tv91 = -20						; size = 4
tv77 = -16						; size = 4
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_key$ = 12						; size = 4
_val$ = 16						; size = 4
?InternalSetAtIndex@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXHABQA_W0@Z PROC ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::InternalSetAtIndex, COMDAT
; _this$ = ecx

; 513  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 514  : 		new(m_aKey + nIndex) Wrapper<TKey>(key);

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 08		 mov	 ecx, DWORD PTR [eax]
  00022	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00025	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00028	50		 push	 eax
  00029	6a 04		 push	 4
  0002b	e8 00 00 00 00	 call	 ??$?2PA_W@?$Wrapper@PA_W@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPA_W@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Wrapper<wchar_t *>::operator new<wchar_t *>
  00030	83 c4 08	 add	 esp, 8
  00033	89 45 f8	 mov	 DWORD PTR $T2[ebp], eax
  00036	83 7d f8 00	 cmp	 DWORD PTR $T2[ebp], 0
  0003a	74 11		 je	 SHORT $LN3@InternalSe
  0003c	8b 4d 0c	 mov	 ecx, DWORD PTR _key$[ebp]
  0003f	51		 push	 ecx
  00040	8b 4d f8	 mov	 ecx, DWORD PTR $T2[ebp]
  00043	e8 00 00 00 00	 call	 ??0?$Wrapper@PA_W@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQA_W@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Wrapper<wchar_t *>::Wrapper<wchar_t *>
  00048	89 45 f0	 mov	 DWORD PTR tv77[ebp], eax
  0004b	eb 07		 jmp	 SHORT $LN4@InternalSe
$LN3@InternalSe:
  0004d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN4@InternalSe:

; 515  : 		new(m_aVal + nIndex) Wrapper<TVal>(val);

  00054	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00057	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0005d	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00060	52		 push	 edx
  00061	6a 04		 push	 4
  00063	e8 00 00 00 00	 call	 ??$?2PA_W@?$Wrapper@PA_W@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPA_W@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Wrapper<wchar_t *>::operator new<wchar_t *>
  00068	83 c4 08	 add	 esp, 8
  0006b	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  0006e	83 7d f4 00	 cmp	 DWORD PTR $T1[ebp], 0
  00072	74 11		 je	 SHORT $LN5@InternalSe
  00074	8b 45 10	 mov	 eax, DWORD PTR _val$[ebp]
  00077	50		 push	 eax
  00078	8b 4d f4	 mov	 ecx, DWORD PTR $T1[ebp]
  0007b	e8 00 00 00 00	 call	 ??0?$Wrapper@PA_W@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQA_W@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Wrapper<wchar_t *>::Wrapper<wchar_t *>
  00080	89 45 ec	 mov	 DWORD PTR tv91[ebp], eax
  00083	eb 07		 jmp	 SHORT $LN1@InternalSe
$LN5@InternalSe:
  00085	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
$LN1@InternalSe:

; 516  : 	}

  0008c	83 c4 14	 add	 esp, 20			; 00000014H
  0008f	3b ec		 cmp	 ebp, esp
  00091	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c2 0c 00	 ret	 12			; 0000000cH
?InternalSetAtIndex@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXHABQA_W0@Z ENDP ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::InternalSetAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ?FindKey@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHABQA_W@Z
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?FindKey@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHABQA_W@Z PROC ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::FindKey, COMDAT
; _this$ = ecx

; 455  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 456  : 		for(int i = 0; i < m_nSize; i++)

  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001e	eb 09		 jmp	 SHORT $LN4@FindKey
$LN2@FindKey:
  00020	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00023	83 c0 01	 add	 eax, 1
  00026	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@FindKey:
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	8b 55 f8	 mov	 edx, DWORD PTR _i$1[ebp]
  0002f	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00032	7d 28		 jge	 SHORT $LN3@FindKey

; 457  : 		{
; 458  : 			if(TEqual::IsEqualKey(m_aKey[i], key))

  00034	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	51		 push	 ecx
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	8b 02		 mov	 eax, DWORD PTR [edx]
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  00042	8b 14 88	 mov	 edx, DWORD PTR [eax+ecx*4]
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ?IsEqualKey@CExpansionVectorEqualHelper@ATL@@SA_NQA_W0@Z ; ATL::CExpansionVectorEqualHelper::IsEqualKey
  0004b	83 c4 08	 add	 esp, 8
  0004e	0f b6 c0	 movzx	 eax, al
  00051	85 c0		 test	 eax, eax
  00053	74 05		 je	 SHORT $LN5@FindKey

; 459  : 				return i;

  00055	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00058	eb 05		 jmp	 SHORT $LN1@FindKey
$LN5@FindKey:

; 460  : 		}

  0005a	eb c4		 jmp	 SHORT $LN2@FindKey
$LN3@FindKey:

; 461  : 		return -1;  // not found

  0005c	83 c8 ff	 or	 eax, -1
$LN1@FindKey:

; 462  : 	}

  0005f	83 c4 08	 add	 esp, 8
  00062	3b ec		 cmp	 ebp, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
?FindKey@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHABQA_W@Z ENDP ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::FindKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ?GetValueAt@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPA_WH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?GetValueAt@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPA_WH@Z PROC ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::GetValueAt, COMDAT
; _this$ = ecx

; 446  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 447  : 		ATLASSERT(nIndex >= 0 && nIndex < m_nSize);

  0000e	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00012	7c 0b		 jl	 SHORT $LN5@GetValueAt
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001a	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0001d	7c 26		 jl	 SHORT $LN6@GetValueAt
$LN5@GetValueAt:
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00029	6a 00		 push	 0
  0002b	68 bf 01 00 00	 push	 447			; 000001bfH
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_1OK@FGCLCILL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00035	6a 02		 push	 2
  00037	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003c	83 c4 18	 add	 esp, 24			; 00000018H
  0003f	83 f8 01	 cmp	 eax, 1
  00042	75 01		 jne	 SHORT $LN6@GetValueAt
  00044	cc		 int	 3
$LN6@GetValueAt:

; 448  : 		if(nIndex < 0 || nIndex >= m_nSize)

  00045	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00049	7c 0b		 jl	 SHORT $LN3@GetValueAt
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00051	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00054	7c 0c		 jl	 SHORT $LN2@GetValueAt
$LN3@GetValueAt:

; 449  : 			_AtlRaiseException((DWORD)EXCEPTION_ARRAY_BOUNDS_EXCEEDED);

  00056	6a 01		 push	 1
  00058	68 8c 00 00 c0	 push	 -1073741684		; c000008cH
  0005d	e8 00 00 00 00	 call	 ?_AtlRaiseException@ATL@@YAXKK@Z ; ATL::_AtlRaiseException
$LN2@GetValueAt:

; 450  : 
; 451  : 		return m_aVal[nIndex];

  00062	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00065	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00068	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0006b	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
$LN4@GetValueAt:

; 452  : 	}

  0006e	83 c4 04	 add	 esp, 4
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
?GetValueAt@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPA_WH@Z ENDP ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::GetValueAt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ?GetKeyAt@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPA_WH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?GetKeyAt@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPA_WH@Z PROC ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::GetKeyAt, COMDAT
; _this$ = ecx

; 438  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 439  : 		ATLASSERT(nIndex >= 0 && nIndex < m_nSize);

  0000e	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00012	7c 0b		 jl	 SHORT $LN5@GetKeyAt
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001a	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0001d	7c 26		 jl	 SHORT $LN6@GetKeyAt
$LN5@GetKeyAt:
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00029	6a 00		 push	 0
  0002b	68 b7 01 00 00	 push	 439			; 000001b7H
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_1OK@FGCLCILL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00035	6a 02		 push	 2
  00037	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003c	83 c4 18	 add	 esp, 24			; 00000018H
  0003f	83 f8 01	 cmp	 eax, 1
  00042	75 01		 jne	 SHORT $LN6@GetKeyAt
  00044	cc		 int	 3
$LN6@GetKeyAt:

; 440  : 		if(nIndex < 0 || nIndex >= m_nSize)

  00045	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00049	7c 0b		 jl	 SHORT $LN3@GetKeyAt
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00051	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00054	7c 0c		 jl	 SHORT $LN2@GetKeyAt
$LN3@GetKeyAt:

; 441  : 			_AtlRaiseException((DWORD)EXCEPTION_ARRAY_BOUNDS_EXCEEDED);

  00056	6a 01		 push	 1
  00058	68 8c 00 00 c0	 push	 -1073741684		; c000008cH
  0005d	e8 00 00 00 00	 call	 ?_AtlRaiseException@ATL@@YAXKK@Z ; ATL::_AtlRaiseException
$LN2@GetKeyAt:

; 442  : 
; 443  : 		return m_aKey[nIndex];

  00062	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00065	8b 02		 mov	 eax, DWORD PTR [edx]
  00067	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0006a	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
$LN4@GetKeyAt:

; 444  : 	}

  0006d	83 c4 04	 add	 esp, 4
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
?GetKeyAt@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPA_WH@Z ENDP ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::GetKeyAt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ?Lookup@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEPA_WABQA_W@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?Lookup@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEPA_WABQA_W@Z PROC ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Lookup, COMDAT
; _this$ = ecx

; 424  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 425  : 		int nIndex = FindKey(key);

  00017	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?FindKey@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHABQA_W@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::FindKey
  00023	89 45 f8	 mov	 DWORD PTR _nIndex$[ebp], eax

; 426  : 		if(nIndex == -1)

  00026	83 7d f8 ff	 cmp	 DWORD PTR _nIndex$[ebp], -1
  0002a	75 04		 jne	 SHORT $LN2@Lookup

; 427  : 			return NULL;    // must be able to convert

  0002c	33 c0		 xor	 eax, eax
  0002e	eb 0e		 jmp	 SHORT $LN1@Lookup
$LN2@Lookup:

; 428  : 		return GetValueAt(nIndex);

  00030	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00033	51		 push	 ecx
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?GetValueAt@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPA_WH@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::GetValueAt
  0003c	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1@Lookup:

; 429  : 	}

  0003e	83 c4 08	 add	 esp, 8
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
?Lookup@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEPA_WABQA_W@Z ENDP ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Lookup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ?RemoveAll@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ PROC ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::RemoveAll, COMDAT
; _this$ = ecx

; 391  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 392  : 		if(m_aKey != NULL)

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001d	74 36		 je	 SHORT $LN5@RemoveAll

; 393  : 		{
; 394  : 			for(int i = 0; i < m_nSize; i++)

  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00026	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00028	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002b	83 c1 01	 add	 ecx, 1
  0002e	89 4d f8	 mov	 DWORD PTR _i$1[ebp], ecx
$LN4@RemoveAll:
  00031	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00037	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0003a	7d 02		 jge	 SHORT $LN3@RemoveAll

; 395  : 			{
; 396  : 				m_aKey[i].~TKey();
; 397  : 				m_aVal[i].~TVal();
; 398  : 			}

  0003c	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 399  : 			free(m_aKey);

  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	8b 11		 mov	 edx, DWORD PTR [ecx]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 _free
  00049	83 c4 04	 add	 esp, 4

; 400  : 			m_aKey = NULL;

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN5@RemoveAll:

; 401  : 		}
; 402  : 		if(m_aVal != NULL)

  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  0005c	74 19		 je	 SHORT $LN6@RemoveAll

; 403  : 		{
; 404  : 			free(m_aVal);

  0005e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00061	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 _free
  0006a	83 c4 04	 add	 esp, 4

; 405  : 			m_aVal = NULL;

  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
$LN6@RemoveAll:

; 406  : 		}
; 407  : 
; 408  : 		m_nSize = 0;

  00077	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0007a	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 409  : 	}

  00081	83 c4 08	 add	 esp, 8
  00084	3b ec		 cmp	 ebp, esp
  00086	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c3		 ret	 0
?RemoveAll@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ?Add@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEHABQA_W0@Z
_TEXT	SEGMENT
_pVal$ = -12						; size = 4
_pKey$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_val$ = 12						; size = 4
?Add@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEHABQA_W0@Z PROC ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Add, COMDAT
; _this$ = ecx

; 345  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 346  : 		TKey* pKey;
; 347  : 		pKey = (TKey*)_recalloc(m_aKey, (m_nSize + 1), sizeof(TKey));

  0001e	6a 04		 push	 4
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00026	83 c1 01	 add	 ecx, 1
  00029	51		 push	 ecx
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	8b 02		 mov	 eax, DWORD PTR [edx]
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 __recalloc
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH
  00038	89 45 f8	 mov	 DWORD PTR _pKey$[ebp], eax

; 348  : 		if(pKey == NULL)

  0003b	83 7d f8 00	 cmp	 DWORD PTR _pKey$[ebp], 0
  0003f	75 04		 jne	 SHORT $LN2@Add

; 349  : 			return FALSE;

  00041	33 c0		 xor	 eax, eax
  00043	eb 64		 jmp	 SHORT $LN1@Add
$LN2@Add:

; 350  : 		m_aKey = pKey;

  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	8b 55 f8	 mov	 edx, DWORD PTR _pKey$[ebp]
  0004b	89 11		 mov	 DWORD PTR [ecx], edx

; 351  : 		TVal* pVal;
; 352  : 		pVal = (TVal*)_recalloc(m_aVal, (m_nSize + 1), sizeof(TVal));

  0004d	6a 04		 push	 4
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00055	83 c1 01	 add	 ecx, 1
  00058	51		 push	 ecx
  00059	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0005f	50		 push	 eax
  00060	e8 00 00 00 00	 call	 __recalloc
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH
  00068	89 45 f4	 mov	 DWORD PTR _pVal$[ebp], eax

; 353  : 		if(pVal == NULL)

  0006b	83 7d f4 00	 cmp	 DWORD PTR _pVal$[ebp], 0
  0006f	75 04		 jne	 SHORT $LN3@Add

; 354  : 			return FALSE;

  00071	33 c0		 xor	 eax, eax
  00073	eb 34		 jmp	 SHORT $LN1@Add
$LN3@Add:

; 355  : 		m_aVal = pVal;

  00075	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	8b 55 f4	 mov	 edx, DWORD PTR _pVal$[ebp]
  0007b	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 356  : 		InternalSetAtIndex(m_nSize, key, val);

  0007e	8b 45 0c	 mov	 eax, DWORD PTR _val$[ebp]
  00081	50		 push	 eax
  00082	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  00085	51		 push	 ecx
  00086	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00089	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0008c	50		 push	 eax
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?InternalSetAtIndex@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXHABQA_W0@Z ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::InternalSetAtIndex

; 357  : 		m_nSize++;

  00095	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0009b	83 c2 01	 add	 edx, 1
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 358  : 		return TRUE;

  000a4	b8 01 00 00 00	 mov	 eax, 1
$LN1@Add:

; 359  : 	}

  000a9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ac	3b ec		 cmp	 ebp, esp
  000ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b3	8b e5		 mov	 esp, ebp
  000b5	5d		 pop	 ebp
  000b6	c2 08 00	 ret	 8
?Add@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEHABQA_W0@Z ENDP ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ?GetSize@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSize@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHXZ PROC ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::GetSize, COMDAT
; _this$ = ecx

; 339  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 340  : 		return m_nSize;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 341  : 	}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetSize@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHXZ ENDP ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ??1?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ PROC ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::~CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>, COMDAT
; _this$ = ecx

; 333  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 334  : 		RemoveAll();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::RemoveAll

; 335  : 	}

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::~CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ PROC ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>, COMDAT
; _this$ = ecx

; 329  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 328  : 		m_aKey(NULL), m_aVal(NULL), m_nSize(0)

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00021	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00024	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 330  : 	}

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??0?$CSimpleMap@PA_WPA_WVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>::CSimpleMap<wchar_t *,wchar_t *,ATL::CExpansionVectorEqualHelper>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\statreg.h
;	COMDAT ?IsEqualKey@CExpansionVectorEqualHelper@ATL@@SA_NQA_W0@Z
_TEXT	SEGMENT
_k1$ = 8						; size = 4
_k2$ = 12						; size = 4
?IsEqualKey@CExpansionVectorEqualHelper@ATL@@SA_NQA_W0@Z PROC ; ATL::CExpansionVectorEqualHelper::IsEqualKey, COMDAT

; 82   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 83   : 		if (lstrcmpi(k1, k2) == 0)

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR _k2$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _k1$[ebp]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpiW@8
  00014	3b f4		 cmp	 esi, esp
  00016	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001b	85 c0		 test	 eax, eax
  0001d	75 04		 jne	 SHORT $LN2@IsEqualKey

; 84   : 			return true;

  0001f	b0 01		 mov	 al, 1
  00021	eb 02		 jmp	 SHORT $LN1@IsEqualKey
$LN2@IsEqualKey:

; 85   : 		return false;

  00023	32 c0		 xor	 al, al
$LN1@IsEqualKey:

; 86   : 	}

  00025	5e		 pop	 esi
  00026	3b ec		 cmp	 ebp, esp
  00028	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?IsEqualKey@CExpansionVectorEqualHelper@ATL@@SA_NQA_W0@Z ENDP ; ATL::CExpansionVectorEqualHelper::IsEqualKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCComModule@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCComModule@ATL@@UAEPAXI@Z PROC			; ATL::CComModule::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CComModule@ATL@@UAE@XZ ; ATL::CComModule::~CComModule
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 30		 push	 48			; 00000030H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GCComModule@ATL@@UAEPAXI@Z ENDP			; ATL::CComModule::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?UpdateRegistryFromResource@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_nResID$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_pMapEntries$ = 20					; size = 4
?UpdateRegistryFromResource@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z PROC ; ATL::CComModule::UpdateRegistryFromResource, COMDAT

; 4912 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4913 : 		return CAtlModuleT<CComModule>::UpdateRegistryFromResource(nResID, bRegister, pMapEntries);

  00003	8b 45 14	 mov	 eax, DWORD PTR _pMapEntries$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR _bRegister$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 0c	 mov	 edx, DWORD PTR _nResID$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ?UpdateRegistryFromResource@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CAtlModule::UpdateRegistryFromResource

; 4914 : 	}

  00018	3b ec		 cmp	 ebp, esp
  0001a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
?UpdateRegistryFromResource@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CComModule::UpdateRegistryFromResource
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?UpdateRegistryFromResource@CComModule@ATL@@UAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_lpszRes$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_pMapEntries$ = 20					; size = 4
?UpdateRegistryFromResource@CComModule@ATL@@UAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z PROC ; ATL::CComModule::UpdateRegistryFromResource, COMDAT

; 4905 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4906 : 		return CAtlModuleT<CComModule>::UpdateRegistryFromResource(lpszRes, bRegister, pMapEntries);

  00003	8b 45 14	 mov	 eax, DWORD PTR _pMapEntries$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR _bRegister$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 0c	 mov	 edx, DWORD PTR _lpszRes$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ?UpdateRegistryFromResource@CAtlModule@ATL@@QAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CAtlModule::UpdateRegistryFromResource

; 4907 : 	}

  00018	3b ec		 cmp	 ebp, esp
  0001a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
?UpdateRegistryFromResource@CComModule@ATL@@UAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CComModule::UpdateRegistryFromResource
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_nResID$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_pMapEntries$ = 20					; size = 4
?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z PROC ; ATL::CComModule::UpdateRegistryFromResourceD, COMDAT

; 4894 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4895 : 		(nResID);
; 4896 : 		(bRegister);
; 4897 : 		(pMapEntries);
; 4898 : 		return E_FAIL;

  00003	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H

; 4899 : 	}

  00008	5d		 pop	 ebp
  00009	c2 10 00	 ret	 16			; 00000010H
?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CComModule::UpdateRegistryFromResourceD
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_lpszRes$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_pMapEntries$ = 20					; size = 4
?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z PROC ; ATL::CComModule::UpdateRegistryFromResourceD, COMDAT

; 4883 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4884 : 		(lpszRes);
; 4885 : 		(bRegister);
; 4886 : 		(pMapEntries);
; 4887 : 		return E_FAIL;

  00003	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H

; 4888 : 	}

  00008	5d		 pop	 ebp
  00009	c2 10 00	 ret	 16			; 00000010H
?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CComModule::UpdateRegistryFromResourceD
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?UnregisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT
_pEntry$ = -12						; size = 4
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_bUnRegTypeLib$ = 8					; size = 4
_pCLSID$ = 12						; size = 4
?UnregisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z PROC ; ATL::CComModule::UnregisterServer, COMDAT
; _this$ = ecx

; 7952 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 7953 : 	HRESULT hr = S_OK;

  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 7954 : 	_ATL_OBJMAP_ENTRY* pEntry = m_pObjMap;

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0002c	89 4d f4	 mov	 DWORD PTR _pEntry$[ebp], ecx

; 7955 : 	if (pEntry != NULL)

  0002f	83 7d f4 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  00033	74 7b		 je	 SHORT $LN5@Unregister

; 7956 : 	{
; 7957 : 		for (;pEntry->pclsid != NULL; pEntry++)

  00035	eb 09		 jmp	 SHORT $LN4@Unregister
$LN2@Unregister:
  00037	8b 55 f4	 mov	 edx, DWORD PTR _pEntry$[ebp]
  0003a	83 c2 24	 add	 edx, 36			; 00000024H
  0003d	89 55 f4	 mov	 DWORD PTR _pEntry$[ebp], edx
$LN4@Unregister:
  00040	8b 45 f4	 mov	 eax, DWORD PTR _pEntry$[ebp]
  00043	83 38 00	 cmp	 DWORD PTR [eax], 0
  00046	74 68		 je	 SHORT $LN5@Unregister

; 7958 : 		{
; 7959 : 			if (pCLSID != NULL)

  00048	83 7d 0c 00	 cmp	 DWORD PTR _pCLSID$[ebp], 0
  0004c	74 18		 je	 SHORT $LN6@Unregister

; 7960 : 			{
; 7961 : 				if (!IsEqualGUID(*pCLSID, *pEntry->pclsid))

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	52		 push	 edx
  00054	8b 45 0c	 mov	 eax, DWORD PTR _pCLSID$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 _IsEqualGUID
  0005d	83 c4 08	 add	 esp, 8
  00060	85 c0		 test	 eax, eax
  00062	75 02		 jne	 SHORT $LN6@Unregister

; 7962 : 					continue;

  00064	eb d1		 jmp	 SHORT $LN2@Unregister
$LN6@Unregister:

; 7963 : 			}
; 7964 : 			hr = AtlRegisterClassCategoriesHelper( *pEntry->pclsid,

  00066	6a 00		 push	 0
  00068	8b 4d f4	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  0006b	8b f4		 mov	 esi, esp
  0006d	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00070	ff d2		 call	 edx
  00072	3b f4		 cmp	 esi, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	50		 push	 eax
  0007a	8b 45 f4	 mov	 eax, DWORD PTR _pEntry$[ebp]
  0007d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z ; ATL::AtlRegisterClassCategoriesHelper
  00085	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 7965 : 				pEntry->pfnGetCategoryMap(), FALSE );
; 7966 : 			if (FAILED(hr))

  00088	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0008c	7d 02		 jge	 SHORT $LN8@Unregister

; 7967 : 				break;

  0008e	eb 20		 jmp	 SHORT $LN5@Unregister
$LN8@Unregister:

; 7968 : 			hr = pEntry->pfnUpdateRegistry(FALSE); //unregister

  00090	8b f4		 mov	 esi, esp
  00092	6a 00		 push	 0
  00094	8b 55 f4	 mov	 edx, DWORD PTR _pEntry$[ebp]
  00097	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0009a	ff d0		 call	 eax
  0009c	3b f4		 cmp	 esi, esp
  0009e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a3	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 7969 : 			if (FAILED(hr))

  000a6	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000aa	7d 02		 jge	 SHORT $LN9@Unregister

; 7970 : 				break;

  000ac	eb 02		 jmp	 SHORT $LN5@Unregister
$LN9@Unregister:

; 7971 : 		}

  000ae	eb 87		 jmp	 SHORT $LN2@Unregister
$LN5@Unregister:

; 7972 : 	}
; 7973 : 	if (SUCCEEDED(hr))

  000b0	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000b4	7c 13		 jl	 SHORT $LN10@Unregister

; 7974 : 		hr = CAtlModuleT<CComModule>::UnregisterServer(bUnRegTypeLib, pCLSID);

  000b6	8b 4d 0c	 mov	 ecx, DWORD PTR _pCLSID$[ebp]
  000b9	51		 push	 ecx
  000ba	8b 55 08	 mov	 edx, DWORD PTR _bUnRegTypeLib$[ebp]
  000bd	52		 push	 edx
  000be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	e8 00 00 00 00	 call	 ?UnregisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CAtlModuleT<ATL::CComModule>::UnregisterServer
  000c6	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN10@Unregister:

; 7975 : 	return hr;

  000c9	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]

; 7976 : }

  000cc	5e		 pop	 esi
  000cd	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d0	3b ec		 cmp	 ebp, esp
  000d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c2 08 00	 ret	 8
?UnregisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z ENDP ; ATL::CComModule::UnregisterServer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?RegisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT
_pEntry$ = -12						; size = 4
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_bRegTypeLib$ = 8					; size = 4
_pCLSID$ = 12						; size = 4
?RegisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z PROC	; ATL::CComModule::RegisterServer, COMDAT
; _this$ = ecx

; 7923 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 7924 : 	HRESULT hr = S_OK;

  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 7925 : 	_ATL_OBJMAP_ENTRY* pEntry = m_pObjMap;

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0002c	89 4d f4	 mov	 DWORD PTR _pEntry$[ebp], ecx

; 7926 : 	if (pEntry != NULL)

  0002f	83 7d f4 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  00033	74 7b		 je	 SHORT $LN5@RegisterSe

; 7927 : 	{
; 7928 : 		for (;pEntry->pclsid != NULL; pEntry++)

  00035	eb 09		 jmp	 SHORT $LN4@RegisterSe
$LN2@RegisterSe:
  00037	8b 55 f4	 mov	 edx, DWORD PTR _pEntry$[ebp]
  0003a	83 c2 24	 add	 edx, 36			; 00000024H
  0003d	89 55 f4	 mov	 DWORD PTR _pEntry$[ebp], edx
$LN4@RegisterSe:
  00040	8b 45 f4	 mov	 eax, DWORD PTR _pEntry$[ebp]
  00043	83 38 00	 cmp	 DWORD PTR [eax], 0
  00046	74 68		 je	 SHORT $LN5@RegisterSe

; 7929 : 		{
; 7930 : 			if (pCLSID != NULL)

  00048	83 7d 0c 00	 cmp	 DWORD PTR _pCLSID$[ebp], 0
  0004c	74 18		 je	 SHORT $LN6@RegisterSe

; 7931 : 			{
; 7932 : 				if (!IsEqualGUID(*pCLSID, *pEntry->pclsid))

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	52		 push	 edx
  00054	8b 45 0c	 mov	 eax, DWORD PTR _pCLSID$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 _IsEqualGUID
  0005d	83 c4 08	 add	 esp, 8
  00060	85 c0		 test	 eax, eax
  00062	75 02		 jne	 SHORT $LN6@RegisterSe

; 7933 : 					continue;

  00064	eb d1		 jmp	 SHORT $LN2@RegisterSe
$LN6@RegisterSe:

; 7934 : 			}
; 7935 : 			hr = pEntry->pfnUpdateRegistry(TRUE);

  00066	8b f4		 mov	 esi, esp
  00068	6a 01		 push	 1
  0006a	8b 4d f4	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  0006d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00070	ff d2		 call	 edx
  00072	3b f4		 cmp	 esi, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 7936 : 			if (FAILED(hr))

  0007c	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00080	7d 02		 jge	 SHORT $LN8@RegisterSe

; 7937 : 				break;

  00082	eb 2c		 jmp	 SHORT $LN5@RegisterSe
$LN8@RegisterSe:

; 7938 : 			hr = AtlRegisterClassCategoriesHelper( *pEntry->pclsid,

  00084	6a 01		 push	 1
  00086	8b 45 f4	 mov	 eax, DWORD PTR _pEntry$[ebp]
  00089	8b f4		 mov	 esi, esp
  0008b	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0008e	ff d1		 call	 ecx
  00090	3b f4		 cmp	 esi, esp
  00092	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00097	50		 push	 eax
  00098	8b 55 f4	 mov	 edx, DWORD PTR _pEntry$[ebp]
  0009b	8b 02		 mov	 eax, DWORD PTR [edx]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z ; ATL::AtlRegisterClassCategoriesHelper
  000a3	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 7939 : 				pEntry->pfnGetCategoryMap(), TRUE );
; 7940 : 			if (FAILED(hr))

  000a6	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000aa	7d 02		 jge	 SHORT $LN9@RegisterSe

; 7941 : 				break;

  000ac	eb 02		 jmp	 SHORT $LN5@RegisterSe
$LN9@RegisterSe:

; 7942 : 		}

  000ae	eb 87		 jmp	 SHORT $LN2@RegisterSe
$LN5@RegisterSe:

; 7943 : 	}
; 7944 : 	if (SUCCEEDED(hr))

  000b0	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000b4	7c 13		 jl	 SHORT $LN10@RegisterSe

; 7945 : 		hr = CAtlModuleT<CComModule>::RegisterServer(bRegTypeLib, pCLSID);

  000b6	8b 4d 0c	 mov	 ecx, DWORD PTR _pCLSID$[ebp]
  000b9	51		 push	 ecx
  000ba	8b 55 08	 mov	 edx, DWORD PTR _bRegTypeLib$[ebp]
  000bd	52		 push	 edx
  000be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	e8 00 00 00 00	 call	 ?RegisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CAtlModuleT<ATL::CComModule>::RegisterServer
  000c6	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN10@RegisterSe:

; 7946 : 	return hr;

  000c9	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]

; 7947 : }

  000cc	5e		 pop	 esi
  000cd	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d0	3b ec		 cmp	 ebp, esp
  000d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c2 08 00	 ret	 8
?RegisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z ENDP	; ATL::CComModule::RegisterServer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?GetClassObject@CComModule@ATL@@QAEJABU_GUID@@0PAPAX@Z
_TEXT	SEGMENT
$T1 = -36						; size = 8
_lock$2 = -24						; size = 8
_pEntry$3 = -12						; size = 4
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_rclsid$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?GetClassObject@CComModule@ATL@@QAEJABU_GUID@@0PAPAX@Z PROC ; ATL::CComModule::GetClassObject, COMDAT
; _this$ = ecx

; 7816 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00012	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00015	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00018	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00021	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00024	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00027	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 7817 : 	*ppv = NULL;

  0002a	8b 45 10	 mov	 eax, DWORD PTR _ppv$[ebp]
  0002d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 7818 : 	HRESULT hr = S_OK;

  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 7819 : 
; 7820 : 	if (m_pObjMap != NULL)

  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 79 2c 00	 cmp	 DWORD PTR [ecx+44], 0
  00041	0f 84 42 01 00
	00		 je	 $LN4@GetClassOb

; 7821 : 	{
; 7822 : 		const _ATL_OBJMAP_ENTRY* pEntry = m_pObjMap;

  00047	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004a	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  0004d	89 45 f4	 mov	 DWORD PTR _pEntry$3[ebp], eax
$LN2@GetClassOb:

; 7823 : 
; 7824 : 		while (pEntry->pclsid != NULL)

  00050	8b 4d f4	 mov	 ecx, DWORD PTR _pEntry$3[ebp]
  00053	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00056	0f 84 2d 01 00
	00		 je	 $LN4@GetClassOb

; 7825 : 		{
; 7826 : 			if ((pEntry->pfnGetClassObject != NULL) && InlineIsEqualGUID(rclsid, *pEntry->pclsid))

  0005c	8b 55 f4	 mov	 edx, DWORD PTR _pEntry$3[ebp]
  0005f	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00063	0f 84 12 01 00
	00		 je	 $LN5@GetClassOb
  00069	8b 45 f4	 mov	 eax, DWORD PTR _pEntry$3[ebp]
  0006c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006e	51		 push	 ecx
  0006f	8b 55 08	 mov	 edx, DWORD PTR _rclsid$[ebp]
  00072	52		 push	 edx
  00073	e8 00 00 00 00	 call	 _InlineIsEqualGUID
  00078	83 c4 08	 add	 esp, 8
  0007b	85 c0		 test	 eax, eax
  0007d	0f 84 f8 00 00
	00		 je	 $LN5@GetClassOb

; 7827 : 			{
; 7828 : 				if (pEntry->pCF == NULL)

  00083	8b 45 f4	 mov	 eax, DWORD PTR _pEntry$3[ebp]
  00086	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0008a	0f 85 b9 00 00
	00		 jne	 $LN6@GetClassOb

; 7829 : 				{
; 7830 : 					CComCritSecLock<CComCriticalSection> lock(_AtlComModule.m_csObjMap, false);

  00090	6a 00		 push	 0
  00092	68 10 00 00 00	 push	 OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A+16
  00097	8d 4d e8	 lea	 ecx, DWORD PTR _lock$2[ebp]
  0009a	e8 00 00 00 00	 call	 ??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>

; 7831 : 					hr = lock.Lock();

  0009f	8d 4d e8	 lea	 ecx, DWORD PTR _lock$2[ebp]
  000a2	e8 00 00 00 00	 call	 ?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
  000a7	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 7832 : 					if (FAILED(hr))

  000aa	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000ae	7d 61		 jge	 SHORT $LN7@GetClassOb

; 7833 : 					{
; 7834 : 						ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to lock critical section in CComModule::GetClassObject\n"));

  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@OONIPMJC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
  000b5	6a 00		 push	 0
  000b7	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  000bc	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  000c1	50		 push	 eax
  000c2	68 9a 1e 00 00	 push	 7834			; 00001e9aH
  000c7	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000cc	8d 4d dc	 lea	 ecx, DWORD PTR $T1[ebp]
  000cf	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000da	83 c4 10	 add	 esp, 16			; 00000010H

; 7835 : 						ATLASSERT(FALSE);

  000dd	33 c9		 xor	 ecx, ecx
  000df	75 26		 jne	 SHORT $LN12@GetClassOb
  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  000e6	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000eb	6a 00		 push	 0
  000ed	68 9b 1e 00 00	 push	 7835			; 00001e9bH
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000f7	6a 02		 push	 2
  000f9	e8 00 00 00 00	 call	 __CrtDbgReportW
  000fe	83 c4 18	 add	 esp, 24			; 00000018H
  00101	83 f8 01	 cmp	 eax, 1
  00104	75 01		 jne	 SHORT $LN12@GetClassOb
  00106	cc		 int	 3
$LN12@GetClassOb:

; 7836 : 						break;

  00107	8d 4d e8	 lea	 ecx, DWORD PTR _lock$2[ebp]
  0010a	e8 00 00 00 00	 call	 ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
  0010f	eb 78		 jmp	 SHORT $LN4@GetClassOb
$LN7@GetClassOb:

; 7837 : 					}
; 7838 : 
; 7839 : 					if (pEntry->pCF == NULL)

  00111	8b 45 f4	 mov	 eax, DWORD PTR _pEntry$3[ebp]
  00114	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00118	75 27		 jne	 SHORT $LN8@GetClassOb

; 7840 : 					{
; 7841 : 						hr = pEntry->pfnGetClassObject(pEntry->pfnCreateInstance, __uuidof(IUnknown), (LPVOID*)&pEntry->pCF);

  0011a	8b 4d f4	 mov	 ecx, DWORD PTR _pEntry$3[ebp]
  0011d	83 c1 10	 add	 ecx, 16			; 00000010H
  00120	8b f4		 mov	 esi, esp
  00122	51		 push	 ecx
  00123	68 00 00 00 00	 push	 OFFSET __GUID_00000000_0000_0000_c000_000000000046
  00128	8b 55 f4	 mov	 edx, DWORD PTR _pEntry$3[ebp]
  0012b	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0012e	50		 push	 eax
  0012f	8b 4d f4	 mov	 ecx, DWORD PTR _pEntry$3[ebp]
  00132	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00135	ff d2		 call	 edx
  00137	3b f4		 cmp	 esi, esp
  00139	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013e	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN8@GetClassOb:

; 7842 : 					}
; 7843 : 				}

  00141	8d 4d e8	 lea	 ecx, DWORD PTR _lock$2[ebp]
  00144	e8 00 00 00 00	 call	 ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
$LN6@GetClassOb:

; 7844 : 
; 7845 : 				if (pEntry->pCF != NULL)

  00149	8b 45 f4	 mov	 eax, DWORD PTR _pEntry$3[ebp]
  0014c	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00150	74 27		 je	 SHORT $LN9@GetClassOb

; 7846 : 				{
; 7847 : 					hr = pEntry->pCF->QueryInterface(riid, ppv);

  00152	8b f4		 mov	 esi, esp
  00154	8b 4d 10	 mov	 ecx, DWORD PTR _ppv$[ebp]
  00157	51		 push	 ecx
  00158	8b 55 0c	 mov	 edx, DWORD PTR _riid$[ebp]
  0015b	52		 push	 edx
  0015c	8b 45 f4	 mov	 eax, DWORD PTR _pEntry$3[ebp]
  0015f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00162	8b 55 f4	 mov	 edx, DWORD PTR _pEntry$3[ebp]
  00165	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00168	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0016a	50		 push	 eax
  0016b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0016d	ff d2		 call	 edx
  0016f	3b f4		 cmp	 esi, esp
  00171	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00176	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN9@GetClassOb:

; 7848 : 				}
; 7849 : 				break;

  00179	eb 0e		 jmp	 SHORT $LN4@GetClassOb
$LN5@GetClassOb:

; 7850 : 			}
; 7851 : 			pEntry++;

  0017b	8b 45 f4	 mov	 eax, DWORD PTR _pEntry$3[ebp]
  0017e	83 c0 24	 add	 eax, 36			; 00000024H
  00181	89 45 f4	 mov	 DWORD PTR _pEntry$3[ebp], eax

; 7852 : 		}

  00184	e9 c7 fe ff ff	 jmp	 $LN2@GetClassOb
$LN4@GetClassOb:

; 7853 : 	}
; 7854 : 
; 7855 : 	if (*ppv == NULL && hr == S_OK)

  00189	8b 4d 10	 mov	 ecx, DWORD PTR _ppv$[ebp]
  0018c	83 39 00	 cmp	 DWORD PTR [ecx], 0
  0018f	75 1f		 jne	 SHORT $LN10@GetClassOb
  00191	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00195	75 19		 jne	 SHORT $LN10@GetClassOb

; 7856 : 	{
; 7857 : 		hr = AtlComModuleGetClassObject(&_AtlComModule, rclsid, riid, ppv);

  00197	8b 55 10	 mov	 edx, DWORD PTR _ppv$[ebp]
  0019a	52		 push	 edx
  0019b	8b 45 0c	 mov	 eax, DWORD PTR _riid$[ebp]
  0019e	50		 push	 eax
  0019f	8b 4d 08	 mov	 ecx, DWORD PTR _rclsid$[ebp]
  001a2	51		 push	 ecx
  001a3	68 00 00 00 00	 push	 OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A
  001a8	e8 00 00 00 00	 call	 ?AtlComModuleGetClassObject@ATL@@YGJPAU_ATL_COM_MODULE70@1@ABU_GUID@@1PAPAX@Z ; ATL::AtlComModuleGetClassObject
  001ad	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN10@GetClassOb:

; 7858 : 	}
; 7859 : 
; 7860 : 	return hr;

  001b0	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]

; 7861 : }

  001b3	52		 push	 edx
  001b4	8b cd		 mov	 ecx, ebp
  001b6	50		 push	 eax
  001b7	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN15@GetClassOb
  001bd	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001c2	58		 pop	 eax
  001c3	5a		 pop	 edx
  001c4	5e		 pop	 esi
  001c5	83 c4 24	 add	 esp, 36			; 00000024H
  001c8	3b ec		 cmp	 ebp, esp
  001ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001cf	8b e5		 mov	 esp, ebp
  001d1	5d		 pop	 ebp
  001d2	c2 0c 00	 ret	 12			; 0000000cH
  001d5	0f 1f 00	 npad	 3
$LN15@GetClassOb:
  001d8	01 00 00 00	 DD	 1
  001dc	00 00 00 00	 DD	 $LN14@GetClassOb
$LN14@GetClassOb:
  001e0	e8 ff ff ff	 DD	 -24			; ffffffe8H
  001e4	08 00 00 00	 DD	 8
  001e8	00 00 00 00	 DD	 $LN13@GetClassOb
$LN13@GetClassOb:
  001ec	6c		 DB	 108			; 0000006cH
  001ed	6f		 DB	 111			; 0000006fH
  001ee	63		 DB	 99			; 00000063H
  001ef	6b		 DB	 107			; 0000006bH
  001f0	00		 DB	 0
?GetClassObject@CComModule@ATL@@QAEJABU_GUID@@0PAPAX@Z ENDP ; ATL::CComModule::GetClassObject
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Term@CComModule@ATL@@QAEXXZ
_TEXT	SEGMENT
_ppEntry$1 = -12					; size = 4
_pEntry$ = -8						; size = 4
_this$ = -4						; size = 4
?Term@CComModule@ATL@@QAEXXZ PROC			; ATL::CComModule::Term, COMDAT
; _this$ = ecx

; 7784 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 7785 : 	_ATL_OBJMAP_ENTRY* pEntry;
; 7786 : 	if (m_pObjMap != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 2c 00	 cmp	 DWORD PTR [eax+44], 0
  00026	74 5f		 je	 SHORT $LN7@Term

; 7787 : 	{
; 7788 : 		pEntry = m_pObjMap;

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  0002e	89 55 f8	 mov	 DWORD PTR _pEntry$[ebp], edx
$LN2@Term:

; 7789 : 		while (pEntry->pclsid != NULL)

  00031	8b 45 f8	 mov	 eax, DWORD PTR _pEntry$[ebp]
  00034	83 38 00	 cmp	 DWORD PTR [eax], 0
  00037	74 4e		 je	 SHORT $LN7@Term

; 7790 : 		{
; 7791 : 			if (pEntry->pCF != NULL)

  00039	8b 4d f8	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  0003c	83 79 10 00	 cmp	 DWORD PTR [ecx+16], 0
  00040	74 1d		 je	 SHORT $LN8@Term

; 7792 : 				pEntry->pCF->Release();

  00042	8b 55 f8	 mov	 edx, DWORD PTR _pEntry$[ebp]
  00045	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00048	8b 4d f8	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  0004b	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0004e	8b 00		 mov	 eax, DWORD PTR [eax]
  00050	8b f4		 mov	 esi, esp
  00052	52		 push	 edx
  00053	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00056	ff d1		 call	 ecx
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN8@Term:

; 7793 : 			pEntry->pCF = NULL;

  0005f	8b 55 f8	 mov	 edx, DWORD PTR _pEntry$[ebp]
  00062	c7 42 10 00 00
	00 00		 mov	 DWORD PTR [edx+16], 0

; 7794 : 			pEntry->pfnObjectMain(false); //cleanup class resources

  00069	8b f4		 mov	 esi, esp
  0006b	6a 00		 push	 0
  0006d	8b 45 f8	 mov	 eax, DWORD PTR _pEntry$[ebp]
  00070	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00073	ff d1		 call	 ecx
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 7795 : 			pEntry++;

  0007c	8b 55 f8	 mov	 edx, DWORD PTR _pEntry$[ebp]
  0007f	83 c2 24	 add	 edx, 36			; 00000024H
  00082	89 55 f8	 mov	 DWORD PTR _pEntry$[ebp], edx

; 7796 : 		}

  00085	eb aa		 jmp	 SHORT $LN2@Term
$LN7@Term:

; 7797 : 	}
; 7798 : 
; 7799 : 	for (_ATL_OBJMAP_ENTRY_EX** ppEntry = _AtlComModule.m_ppAutoObjMapFirst; ppEntry < _AtlComModule.m_ppAutoObjMapLast; ppEntry++)

  00087	a1 08 00 00 00	 mov	 eax, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+8
  0008c	89 45 f4	 mov	 DWORD PTR _ppEntry$1[ebp], eax
  0008f	eb 09		 jmp	 SHORT $LN6@Term
$LN4@Term:
  00091	8b 4d f4	 mov	 ecx, DWORD PTR _ppEntry$1[ebp]
  00094	83 c1 04	 add	 ecx, 4
  00097	89 4d f4	 mov	 DWORD PTR _ppEntry$1[ebp], ecx
$LN6@Term:
  0009a	8b 55 f4	 mov	 edx, DWORD PTR _ppEntry$1[ebp]
  0009d	3b 15 0c 00 00
	00		 cmp	 edx, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+12
  000a3	73 1f		 jae	 SHORT $LN5@Term

; 7800 : 	{
; 7801 : 		if (*ppEntry != NULL)

  000a5	8b 45 f4	 mov	 eax, DWORD PTR _ppEntry$1[ebp]
  000a8	83 38 00	 cmp	 DWORD PTR [eax], 0
  000ab	74 15		 je	 SHORT $LN9@Term

; 7802 : 			(*ppEntry)->pfnObjectMain(false); //cleanup class resources

  000ad	8b f4		 mov	 esi, esp
  000af	6a 00		 push	 0
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR _ppEntry$1[ebp]
  000b4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b6	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  000b9	ff d0		 call	 eax
  000bb	3b f4		 cmp	 esi, esp
  000bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN9@Term:

; 7803 : 	}

  000c2	eb cd		 jmp	 SHORT $LN4@Term
$LN5@Term:

; 7804 : #if defined(_DEBUG) && !defined(_ATL_NO_WIN_SUPPORT)
; 7805 : 	// Prevent false memory leak reporting. ~CAtlWinModule may be too late.
; 7806 : 	_AtlWinModule.Term();

  000c4	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  000c9	e8 00 00 00 00	 call	 ?Term@CAtlWinModule@ATL@@QAEXXZ ; ATL::CAtlWinModule::Term

; 7807 : #endif	// _DEBUG
; 7808 : 
; 7809 : 	CAtlModuleT<CComModule>::Term();

  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	e8 00 00 00 00	 call	 ?Term@CAtlModule@ATL@@QAEXXZ ; ATL::CAtlModule::Term

; 7810 : }

  000d6	5e		 pop	 esi
  000d7	83 c4 0c	 add	 esp, 12			; 0000000cH
  000da	3b ec		 cmp	 ebp, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e1	8b e5		 mov	 esp, ebp
  000e3	5d		 pop	 ebp
  000e4	c3		 ret	 0
?Term@CComModule@ATL@@QAEXXZ ENDP			; ATL::CComModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Init@CComModule@ATL@@QAEJPAU_ATL_OBJMAP_ENTRY30@2@PAUHINSTANCE__@@PBU_GUID@@@Z
_TEXT	SEGMENT
_ppEntry$1 = -12					; size = 4
_pEntry$ = -8						; size = 4
_this$ = -4						; size = 4
_p$ = 8							; size = 4
___formal$ = 12						; size = 4
_plibid$ = 16						; size = 4
?Init@CComModule@ATL@@QAEJPAU_ATL_OBJMAP_ENTRY30@2@PAUHINSTANCE__@@PBU_GUID@@@Z PROC ; ATL::CComModule::Init, COMDAT
; _this$ = ecx

; 7757 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 7758 : 	if (plibid != NULL)

  0001f	83 7d 10 00	 cmp	 DWORD PTR _plibid$[ebp], 0
  00023	74 26		 je	 SHORT $LN7@Init

; 7759 : 		m_libid = *plibid;

  00025	8b 45 10	 mov	 eax, DWORD PTR _plibid$[ebp]
  00028	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002a	89 0d 00 00 00
	00		 mov	 DWORD PTR ?m_libid@CAtlModule@ATL@@2U_GUID@@A, ecx
  00030	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00033	89 15 04 00 00
	00		 mov	 DWORD PTR ?m_libid@CAtlModule@ATL@@2U_GUID@@A+4, edx
  00039	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0003c	89 0d 08 00 00
	00		 mov	 DWORD PTR ?m_libid@CAtlModule@ATL@@2U_GUID@@A+8, ecx
  00042	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00045	89 15 0c 00 00
	00		 mov	 DWORD PTR ?m_libid@CAtlModule@ATL@@2U_GUID@@A+12, edx
$LN7@Init:

; 7760 : 
; 7761 : 	_ATL_OBJMAP_ENTRY* pEntry;
; 7762 : 	if (p != (_ATL_OBJMAP_ENTRY*)-1)

  0004b	83 7d 08 ff	 cmp	 DWORD PTR _p$[ebp], -1
  0004f	74 41		 je	 SHORT $LN8@Init

; 7763 : 	{
; 7764 : 		m_pObjMap = p;

  00051	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00054	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00057	89 48 2c	 mov	 DWORD PTR [eax+44], ecx

; 7765 : 		if (m_pObjMap != NULL)

  0005a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	83 7a 2c 00	 cmp	 DWORD PTR [edx+44], 0
  00061	74 2f		 je	 SHORT $LN8@Init

; 7766 : 		{
; 7767 : 			pEntry = m_pObjMap;

  00063	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00066	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00069	89 4d f8	 mov	 DWORD PTR _pEntry$[ebp], ecx
$LN2@Init:

; 7768 : 			while (pEntry->pclsid != NULL)

  0006c	8b 55 f8	 mov	 edx, DWORD PTR _pEntry$[ebp]
  0006f	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00072	74 1e		 je	 SHORT $LN8@Init

; 7769 : 			{
; 7770 : 				pEntry->pfnObjectMain(true); //initialize class resources

  00074	8b f4		 mov	 esi, esp
  00076	6a 01		 push	 1
  00078	8b 45 f8	 mov	 eax, DWORD PTR _pEntry$[ebp]
  0007b	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0007e	ff d1		 call	 ecx
  00080	3b f4		 cmp	 esi, esp
  00082	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 7771 : 				pEntry++;

  00087	8b 55 f8	 mov	 edx, DWORD PTR _pEntry$[ebp]
  0008a	83 c2 24	 add	 edx, 36			; 00000024H
  0008d	89 55 f8	 mov	 DWORD PTR _pEntry$[ebp], edx

; 7772 : 			}

  00090	eb da		 jmp	 SHORT $LN2@Init
$LN8@Init:

; 7773 : 		}
; 7774 : 	}
; 7775 : 	for (_ATL_OBJMAP_ENTRY_EX** ppEntry = _AtlComModule.m_ppAutoObjMapFirst; ppEntry < _AtlComModule.m_ppAutoObjMapLast; ppEntry++)

  00092	a1 08 00 00 00	 mov	 eax, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+8
  00097	89 45 f4	 mov	 DWORD PTR _ppEntry$1[ebp], eax
  0009a	eb 09		 jmp	 SHORT $LN6@Init
$LN4@Init:
  0009c	8b 4d f4	 mov	 ecx, DWORD PTR _ppEntry$1[ebp]
  0009f	83 c1 04	 add	 ecx, 4
  000a2	89 4d f4	 mov	 DWORD PTR _ppEntry$1[ebp], ecx
$LN6@Init:
  000a5	8b 55 f4	 mov	 edx, DWORD PTR _ppEntry$1[ebp]
  000a8	3b 15 0c 00 00
	00		 cmp	 edx, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+12
  000ae	73 1f		 jae	 SHORT $LN5@Init

; 7776 : 	{
; 7777 : 		if (*ppEntry != NULL)

  000b0	8b 45 f4	 mov	 eax, DWORD PTR _ppEntry$1[ebp]
  000b3	83 38 00	 cmp	 DWORD PTR [eax], 0
  000b6	74 15		 je	 SHORT $LN10@Init

; 7778 : 			(*ppEntry)->pfnObjectMain(true); //initialize class resources

  000b8	8b f4		 mov	 esi, esp
  000ba	6a 01		 push	 1
  000bc	8b 4d f4	 mov	 ecx, DWORD PTR _ppEntry$1[ebp]
  000bf	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c1	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  000c4	ff d0		 call	 eax
  000c6	3b f4		 cmp	 esi, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN10@Init:

; 7779 : 	}

  000cd	eb cd		 jmp	 SHORT $LN4@Init
$LN5@Init:

; 7780 : 	return S_OK;

  000cf	33 c0		 xor	 eax, eax

; 7781 : }

  000d1	5e		 pop	 esi
  000d2	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d5	3b ec		 cmp	 ebp, esp
  000d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000dc	8b e5		 mov	 esp, ebp
  000de	5d		 pop	 ebp
  000df	c2 0c 00	 ret	 12			; 0000000cH
?Init@CComModule@ATL@@QAEJPAU_ATL_OBJMAP_ENTRY30@2@PAUHINSTANCE__@@PBU_GUID@@@Z ENDP ; ATL::CComModule::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??1CComModule@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComModule@ATL@@UAE@XZ PROC				; ATL::CComModule::~CComModule, COMDAT
; _this$ = ecx

; 4716 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CComModule@ATL@@6B@

; 4717 : #if !defined(_ATL_NATIVE_INITIALIZATION)
; 4718 : #pragma warning(push)  // disable 4483
; 4719 : #pragma warning(disable:4483)
; 4720 : 		using namespace __identifier("<AtlImplementationDetails>");
; 4721 : #pragma warning(pop)  // disable 4483
; 4722 : 		ATLASSERT(ComModuleInitialized == true);
; 4723 : 		// If ComModuleHelper.Module == NULL it mean that DllMain has not been called, so we assume CComModule lives in
; 4724 : 		// an exe and not in a dll
; 4725 : 		if (ComModuleHelper.Module != NULL)
; 4726 : 		{
; 4727 : 			ATLASSERT(ComModuleHelper.Module == this);
; 4728 : 			_DllMain(ComModuleHelper.Instance, DLL_PROCESS_DETACH, NULL, ComModuleHelper.ObjectMap, ComModuleHelper.LibraryId);
; 4729 : 		}
; 4730 : #endif
; 4731 : 	}

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ??1?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAE@XZ
  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??1CComModule@ATL@@UAE@XZ ENDP				; ATL::CComModule::~CComModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??0CComModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComModule@ATL@@QAE@XZ PROC				; ATL::CComModule::CComModule, COMDAT
; _this$ = ecx

; 4692 : 	CComModule()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAE@XZ ; ATL::CAtlModuleT<ATL::CComModule>::CAtlModuleT<ATL::CComModule>
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CComModule@ATL@@6B@

; 4693 : 	{
; 4694 : 		// Should have only one instance of a class
; 4695 : 		// derived from CComModule in a project.
; 4696 : 		ATLASSERT(_pModule == NULL);

  0001f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_pModule@ATL@@3PAVCComModule@1@A, 0 ; ATL::_pModule
  00026	74 26		 je	 SHORT $LN3@CComModule
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@NFPICFEL@?$AA_?$AAp?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00032	6a 00		 push	 0
  00034	68 58 12 00 00	 push	 4696			; 00001258H
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0003e	6a 02		 push	 2
  00040	e8 00 00 00 00	 call	 __CrtDbgReportW
  00045	83 c4 18	 add	 esp, 24			; 00000018H
  00048	83 f8 01	 cmp	 eax, 1
  0004b	75 01		 jne	 SHORT $LN3@CComModule
  0004d	cc		 int	 3
$LN3@CComModule:

; 4697 : 		_pModule = this;

  0004e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00051	89 15 00 00 00
	00		 mov	 DWORD PTR ?_pModule@ATL@@3PAVCComModule@1@A, edx ; ATL::_pModule

; 4698 : #if !defined(_ATL_NATIVE_INITIALIZATION)
; 4699 : #pragma warning(push)  // disable 4483
; 4700 : #pragma warning(disable:4483)
; 4701 : 		using namespace __identifier("<AtlImplementationDetails>");
; 4702 : #pragma warning(pop)  // disable 4483
; 4703 : 		ATLASSERT(ComModuleInitialized == false);
; 4704 : 		// If ComModuleHelper.Module == NULL it mean that DllMain has not been called, so we assume CComModule lives in
; 4705 : 		// an exe and not in a dll
; 4706 : 		if (ComModuleHelper.Module != NULL)
; 4707 : 		{
; 4708 : 			ATLASSERT(ComModuleHelper.Module == this);
; 4709 : 			_DllMain(ComModuleHelper.Instance, DLL_PROCESS_ATTACH, NULL, ComModuleHelper.ObjectMap, ComModuleHelper.LibraryId);
; 4710 : 		}
; 4711 : 		ComModuleInitialized = true;
; 4712 : #endif
; 4713 : 	}

  00057	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	83 c4 04	 add	 esp, 4
  0005d	3b ec		 cmp	 ebp, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
??0CComModule@ATL@@QAE@XZ ENDP				; ATL::CComModule::CComModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAE@XZ PROC	; ATL::CAtlModuleT<ATL::CComModule>::~CAtlModuleT<ATL::CComModule>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CAtlModule@ATL@@UAE@XZ ; ATL::CAtlModule::~CAtlModule
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAE@XZ ENDP	; ATL::CAtlModuleT<ATL::CComModule>::~CAtlModuleT<ATL::CComModule>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?GetAppId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAPB_WXZ
_TEXT	SEGMENT
?GetAppId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAPB_WXZ PROC ; ATL::CAtlModuleT<ATL::CComModule>::GetAppId, COMDAT

; 3362 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3363 : 		return OLESTR("");

  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_11LOCGONAA@@

; 3364 : 	}

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetAppId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAPB_WXZ ENDP ; ATL::CAtlModuleT<ATL::CComModule>::GetAppId
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AddCommonRGSReplacements@?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAEJPAUIRegistrarBase@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pRegistrar$ = 8					; size = 4
?AddCommonRGSReplacements@?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAEJPAUIRegistrarBase@@@Z PROC ; ATL::CAtlModuleT<ATL::CComModule>::AddCommonRGSReplacements, COMDAT
; _this$ = ecx

; 3357 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3358 : 		return pRegistrar->AddReplacement(L"APPID", T::GetAppId());

  0000f	e8 00 00 00 00	 call	 ?GetAppId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAPB_WXZ ; ATL::CAtlModuleT<ATL::CComModule>::GetAppId
  00014	8b f4		 mov	 esi, esp
  00016	50		 push	 eax
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD@
  0001c	8b 45 08	 mov	 eax, DWORD PTR _pRegistrar$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 55 08	 mov	 edx, DWORD PTR _pRegistrar$[ebp]
  00024	52		 push	 edx
  00025	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00028	ff d0		 call	 eax
  0002a	3b f4		 cmp	 esi, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 3359 : 	}

  00031	5e		 pop	 esi
  00032	83 c4 04	 add	 esp, 4
  00035	3b ec		 cmp	 ebp, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
?AddCommonRGSReplacements@?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAEJPAUIRegistrarBase@@@Z ENDP ; ATL::CAtlModuleT<ATL::CComModule>::AddCommonRGSReplacements
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?UnregisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_bUnRegTypeLib$ = 8					; size = 4
_pCLSID$ = 12						; size = 4
?UnregisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z PROC ; ATL::CAtlModuleT<ATL::CComModule>::UnregisterServer, COMDAT
; _this$ = ecx

; 3318 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3319 : 		(bUnRegTypeLib);
; 3320 : 		(pCLSID);
; 3321 : 
; 3322 : 		HRESULT hr = S_OK;

  00018	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 3323 : 
; 3324 : #ifndef _ATL_NO_PERF_SUPPORT
; 3325 : 
; 3326 : 		if (_pPerfUnRegFunc != NULL)

  0001f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_pPerfUnRegFunc@ATL@@3P6AJXZA, 0 ; ATL::_pPerfUnRegFunc
  00026	74 12		 je	 SHORT $LN2@Unregister

; 3327 : 			hr = (*_pPerfUnRegFunc)();

  00028	8b f4		 mov	 esi, esp
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR ?_pPerfUnRegFunc@ATL@@3P6AJXZA ; ATL::_pPerfUnRegFunc
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN2@Unregister:

; 3328 : 
; 3329 : #endif
; 3330 : 
; 3331 : #ifndef _ATL_NO_COM_SUPPORT
; 3332 : 
; 3333 : 		if (SUCCEEDED(hr))

  0003a	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0003e	7c 15		 jl	 SHORT $LN3@Unregister

; 3334 : 			hr = _AtlComModule.UnregisterServer(bUnRegTypeLib, pCLSID);

  00040	8b 45 0c	 mov	 eax, DWORD PTR _pCLSID$[ebp]
  00043	50		 push	 eax
  00044	8b 4d 08	 mov	 ecx, DWORD PTR _bUnRegTypeLib$[ebp]
  00047	51		 push	 ecx
  00048	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  0004d	e8 00 00 00 00	 call	 ?UnregisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CAtlComModule::UnregisterServer
  00052	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN3@Unregister:

; 3335 : 
; 3336 : #endif	// _ATL_NO_COM_SUPPORT
; 3337 : 
; 3338 : 		return hr;

  00055	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]

; 3339 : 
; 3340 : 	}

  00058	5e		 pop	 esi
  00059	83 c4 08	 add	 esp, 8
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 08 00	 ret	 8
?UnregisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z ENDP ; ATL::CAtlModuleT<ATL::CComModule>::UnregisterServer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?RegisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_bRegTypeLib$ = 8					; size = 4
_pCLSID$ = 12						; size = 4
?RegisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z PROC ; ATL::CAtlModuleT<ATL::CComModule>::RegisterServer, COMDAT
; _this$ = ecx

; 3292 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3293 : 		(pCLSID);
; 3294 : 		(bRegTypeLib);
; 3295 : 
; 3296 : 		HRESULT hr = S_OK;

  00018	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 3297 : 
; 3298 : #ifndef _ATL_NO_COM_SUPPORT
; 3299 : 
; 3300 : 		hr = _AtlComModule.RegisterServer(bRegTypeLib, pCLSID);

  0001f	8b 45 0c	 mov	 eax, DWORD PTR _pCLSID$[ebp]
  00022	50		 push	 eax
  00023	8b 4d 08	 mov	 ecx, DWORD PTR _bRegTypeLib$[ebp]
  00026	51		 push	 ecx
  00027	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  0002c	e8 00 00 00 00	 call	 ?RegisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CAtlComModule::RegisterServer
  00031	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3301 : 
; 3302 : #endif	// _ATL_NO_COM_SUPPORT
; 3303 : 
; 3304 : 
; 3305 : #ifndef _ATL_NO_PERF_SUPPORT
; 3306 : 
; 3307 : 		if (SUCCEEDED(hr) && _pPerfRegFunc != NULL)

  00034	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00038	7c 25		 jl	 SHORT $LN2@RegisterSe
  0003a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA, 0 ; ATL::_pPerfRegFunc
  00041	74 1c		 je	 SHORT $LN2@RegisterSe

; 3308 : 			hr = (*_pPerfRegFunc)(_AtlBaseModule.m_hInst);

  00043	8b f4		 mov	 esi, esp
  00045	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4
  0004b	52		 push	 edx
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA ; ATL::_pPerfRegFunc
  00052	83 c4 04	 add	 esp, 4
  00055	3b f4		 cmp	 esi, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN2@RegisterSe:

; 3309 : 
; 3310 : #endif
; 3311 : 
; 3312 : 		return hr;

  0005f	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]

; 3313 : 	}

  00062	5e		 pop	 esi
  00063	83 c4 08	 add	 esp, 8
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 08 00	 ret	 8
?RegisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z ENDP ; ATL::CAtlModuleT<ATL::CComModule>::RegisterServer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?InitLibId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAXXZ
_TEXT	SEGMENT
?InitLibId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAXXZ PROC ; ATL::CAtlModuleT<ATL::CComModule>::InitLibId, COMDAT

; 3284 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3285 : 	}

  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?InitLibId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAXXZ ENDP ; ATL::CAtlModuleT<ATL::CComModule>::InitLibId
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??0?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAE@XZ PROC	; ATL::CAtlModuleT<ATL::CComModule>::CAtlModuleT<ATL::CComModule>, COMDAT
; _this$ = ecx

; 3278 : 	CAtlModuleT() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3279 : 	{

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0CAtlModule@ATL@@QAE@XZ ; ATL::CAtlModule::CAtlModule

; 3280 : 		T::InitLibId();

  00016	e8 00 00 00 00	 call	 ?InitLibId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAXXZ ; ATL::CAtlModuleT<ATL::CComModule>::InitLibId

; 3281 : 	}

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??0?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CAtlModuleT<ATL::CComModule>::CAtlModuleT<ATL::CComModule>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?EscapeSingleQuote@CAtlModule@ATL@@SAXPA_WIPB_W@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_lpDest$ = 8						; size = 4
_destSizeInChars$ = 12					; size = 4
_lp$ = 16						; size = 4
?EscapeSingleQuote@CAtlModule@ATL@@SAXPA_WIPB_W@Z PROC	; ATL::CAtlModule::EscapeSingleQuote, COMDAT

; 3148 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 3149 : 		if (destSizeInChars == 0)

  0000b	83 7d 0c 00	 cmp	 DWORD PTR _destSizeInChars$[ebp], 0
  0000f	75 05		 jne	 SHORT $LN5@EscapeSing

; 3150 : 		{
; 3151 : 			return;

  00011	e9 8a 00 00 00	 jmp	 $LN1@EscapeSing
$LN5@EscapeSing:

; 3152 : 		}
; 3153 : 		UINT i = 0;

  00016	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0

; 3154 : 		// copy characters to the destination buffer but leave the last char to be NULL.
; 3155 : 		for (i=0; i < destSizeInChars-1 && *lp; i++)

  0001d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00024	eb 09		 jmp	 SHORT $LN4@EscapeSing
$LN2@EscapeSing:
  00026	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00029	83 c0 01	 add	 eax, 1
  0002c	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN4@EscapeSing:
  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR _destSizeInChars$[ebp]
  00032	83 e9 01	 sub	 ecx, 1
  00035	39 4d fc	 cmp	 DWORD PTR _i$[ebp], ecx
  00038	73 5e		 jae	 SHORT $LN3@EscapeSing
  0003a	8b 55 10	 mov	 edx, DWORD PTR _lp$[ebp]
  0003d	0f b7 02	 movzx	 eax, WORD PTR [edx]
  00040	85 c0		 test	 eax, eax
  00042	74 54		 je	 SHORT $LN3@EscapeSing

; 3156 : 		{
; 3157 : 			*lpDest++ = *lp;

  00044	8b 4d 08	 mov	 ecx, DWORD PTR _lpDest$[ebp]
  00047	8b 55 10	 mov	 edx, DWORD PTR _lp$[ebp]
  0004a	66 8b 02	 mov	 ax, WORD PTR [edx]
  0004d	66 89 01	 mov	 WORD PTR [ecx], ax
  00050	8b 4d 08	 mov	 ecx, DWORD PTR _lpDest$[ebp]
  00053	83 c1 02	 add	 ecx, 2
  00056	89 4d 08	 mov	 DWORD PTR _lpDest$[ebp], ecx

; 3158 : 			// make sure we won't promote lpDest behind the buffer limit.
; 3159 : 			if (*lp == '\'' && ++i < destSizeInChars-1)

  00059	8b 55 10	 mov	 edx, DWORD PTR _lp$[ebp]
  0005c	0f b7 02	 movzx	 eax, WORD PTR [edx]
  0005f	83 f8 27	 cmp	 eax, 39			; 00000027H
  00062	75 29		 jne	 SHORT $LN6@EscapeSing
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00067	83 c1 01	 add	 ecx, 1
  0006a	89 4d fc	 mov	 DWORD PTR _i$[ebp], ecx
  0006d	8b 55 0c	 mov	 edx, DWORD PTR _destSizeInChars$[ebp]
  00070	83 ea 01	 sub	 edx, 1
  00073	39 55 fc	 cmp	 DWORD PTR _i$[ebp], edx
  00076	73 15		 jae	 SHORT $LN6@EscapeSing

; 3160 : 				*lpDest++ = *lp;

  00078	8b 45 08	 mov	 eax, DWORD PTR _lpDest$[ebp]
  0007b	8b 4d 10	 mov	 ecx, DWORD PTR _lp$[ebp]
  0007e	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00081	66 89 10	 mov	 WORD PTR [eax], dx
  00084	8b 45 08	 mov	 eax, DWORD PTR _lpDest$[ebp]
  00087	83 c0 02	 add	 eax, 2
  0008a	89 45 08	 mov	 DWORD PTR _lpDest$[ebp], eax
$LN6@EscapeSing:

; 3161 : 			lp++;

  0008d	8b 4d 10	 mov	 ecx, DWORD PTR _lp$[ebp]
  00090	83 c1 02	 add	 ecx, 2
  00093	89 4d 10	 mov	 DWORD PTR _lp$[ebp], ecx

; 3162 : 		}

  00096	eb 8e		 jmp	 SHORT $LN2@EscapeSing
$LN3@EscapeSing:

; 3163 : 		*lpDest = '\0';

  00098	33 d2		 xor	 edx, edx
  0009a	8b 45 08	 mov	 eax, DWORD PTR _lpDest$[ebp]
  0009d	66 89 10	 mov	 WORD PTR [eax], dx
$LN1@EscapeSing:

; 3164 : 	}

  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c3		 ret	 0
?EscapeSingleQuote@CAtlModule@ATL@@SAXPA_WIPB_W@Z ENDP	; ATL::CAtlModule::EscapeSingleQuote
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?UpdateRegistryFromResource@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
tv200 = -2760						; size = 4
$T1 = -2756						; size = 4
$T2 = -2752						; size = 4
$T3 = -2748						; size = 4
$T4 = -2744						; size = 4
$T5 = -2740						; size = 4
$T6 = -2736						; size = 4
$T7 = -2732						; size = 4
$T8 = -2728						; size = 4
$T9 = -2724						; size = 4
_szType$ = -2720					; size = 4
_nLen$10 = -2716					; size = 4
_pszModuleQuote$11 = -2708				; size = 1048
_hRes$ = -1656						; size = 4
_pszModuleUnquoted$ = -1648				; size = 1040
_pszModule$ = -604					; size = 4
_dwFLen$ = -600						; size = 4
_hInst$ = -596						; size = 4
_szModule$ = -588					; size = 520
__AtlSafeAllocaManager$ = -60				; size = 4
__lpa_ex$ = -52						; size = 4
__lpw_ex$ = -48						; size = 4
__acp_ex$ = -44						; size = 4
__convert_ex$ = -40					; size = 4
_hr$ = -36						; size = 4
_ro$ = -28						; size = 20
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_nResID$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_pMapEntries$ = 20					; size = 4
?UpdateRegistryFromResource@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z PROC ; ATL::CAtlModule::UpdateRegistryFromResource, COMDAT

; 6641 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c8 0a 00
	00		 sub	 esp, 2760		; 00000ac8H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 38 f5 ff
	ff		 lea	 edi, DWORD PTR [ebp-2760]
  00011	b9 b2 02 00 00	 mov	 ecx, 690		; 000002b2H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 6642 : 	CRegObject ro;

  00027	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0CRegObject@ATL@@QAE@XZ

; 6643 : 	HRESULT hr = ro.FinalConstruct();

  0002f	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  00032	e8 00 00 00 00	 call	 ?FinalConstruct@CRegObject@ATL@@QAEJXZ ; ATL::CRegObject::FinalConstruct
  00037	89 45 dc	 mov	 DWORD PTR _hr$[ebp], eax

; 6644 : 	if (FAILED(hr))

  0003a	83 7d dc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0003e	7d 1c		 jge	 SHORT $LN7@UpdateRegi

; 6645 : 	{
; 6646 : 		return hr;

  00040	8b 45 dc	 mov	 eax, DWORD PTR _hr$[ebp]
  00043	89 85 5c f5 ff
	ff		 mov	 DWORD PTR $T9[ebp], eax
  00049	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  0004c	e8 00 00 00 00	 call	 ??1CRegObject@ATL@@UAE@XZ ; ATL::CRegObject::~CRegObject
  00051	8b 85 5c f5 ff
	ff		 mov	 eax, DWORD PTR $T9[ebp]
  00057	e9 ae 03 00 00	 jmp	 $LN19@UpdateRegi
$LN7@UpdateRegi:

; 6647 : 	}
; 6648 : 
; 6649 : 	if (pMapEntries != NULL)

  0005c	83 7d 14 00	 cmp	 DWORD PTR _pMapEntries$[ebp], 0
  00060	74 5c		 je	 SHORT $LN8@UpdateRegi
$LN2@UpdateRegi:

; 6650 : 	{
; 6651 : 		while (pMapEntries->szKey != NULL)

  00062	8b 4d 14	 mov	 ecx, DWORD PTR _pMapEntries$[ebp]
  00065	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00068	74 54		 je	 SHORT $LN8@UpdateRegi
$LN6@UpdateRegi:

; 6652 : 		{
; 6653 : 			ATLASSUME(NULL != pMapEntries->szData);

  0006a	8b 55 14	 mov	 edx, DWORD PTR _pMapEntries$[ebp]
  0006d	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  00071	75 26		 jne	 SHORT $LN4@UpdateRegi
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_1DC@HEJCCJC@?$AA0?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAp?$AAM?$AAa?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe@
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0007d	6a 00		 push	 0
  0007f	68 fd 19 00 00	 push	 6653			; 000019fdH
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00089	6a 02		 push	 2
  0008b	e8 00 00 00 00	 call	 __CrtDbgReportW
  00090	83 c4 18	 add	 esp, 24			; 00000018H
  00093	83 f8 01	 cmp	 eax, 1
  00096	75 01		 jne	 SHORT $LN4@UpdateRegi
  00098	cc		 int	 3
$LN4@UpdateRegi:
  00099	33 c9		 xor	 ecx, ecx
  0009b	75 cd		 jne	 SHORT $LN6@UpdateRegi

; 6654 : 			ro.AddReplacement(pMapEntries->szKey, pMapEntries->szData);

  0009d	8b 55 14	 mov	 edx, DWORD PTR _pMapEntries$[ebp]
  000a0	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000a3	50		 push	 eax
  000a4	8b 4d 14	 mov	 ecx, DWORD PTR _pMapEntries$[ebp]
  000a7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a9	52		 push	 edx
  000aa	8d 45 e4	 lea	 eax, DWORD PTR _ro$[ebp]
  000ad	50		 push	 eax
  000ae	e8 00 00 00 00	 call	 ?AddReplacement@CRegObject@ATL@@UAGJPB_W0@Z ; ATL::CRegObject::AddReplacement

; 6655 : 			pMapEntries++;

  000b3	8b 4d 14	 mov	 ecx, DWORD PTR _pMapEntries$[ebp]
  000b6	83 c1 08	 add	 ecx, 8
  000b9	89 4d 14	 mov	 DWORD PTR _pMapEntries$[ebp], ecx

; 6656 : 		}

  000bc	eb a4		 jmp	 SHORT $LN2@UpdateRegi
$LN8@UpdateRegi:

; 6657 : 	}
; 6658 : 
; 6659 : 	hr = AddCommonRGSReplacements(&ro);

  000be	8b f4		 mov	 esi, esp
  000c0	8d 55 e4	 lea	 edx, DWORD PTR _ro$[ebp]
  000c3	52		 push	 edx
  000c4	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	8b 10		 mov	 edx, DWORD PTR [eax]
  000c9	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  000cc	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000cf	ff d0		 call	 eax
  000d1	3b f4		 cmp	 esi, esp
  000d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d8	89 45 dc	 mov	 DWORD PTR _hr$[ebp], eax

; 6660 : 	if (FAILED(hr))

  000db	83 7d dc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000df	7d 1c		 jge	 SHORT $LN9@UpdateRegi

; 6661 : 		return hr;

  000e1	8b 4d dc	 mov	 ecx, DWORD PTR _hr$[ebp]
  000e4	89 8d 58 f5 ff
	ff		 mov	 DWORD PTR $T8[ebp], ecx
  000ea	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  000ed	e8 00 00 00 00	 call	 ??1CRegObject@ATL@@UAE@XZ ; ATL::CRegObject::~CRegObject
  000f2	8b 85 58 f5 ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  000f8	e9 0d 03 00 00	 jmp	 $LN19@UpdateRegi
$LN9@UpdateRegi:

; 6662 : 
; 6663 : 	USES_CONVERSION_EX;

  000fd	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR __convert_ex$[ebp], 0
  00104	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00109	89 45 d4	 mov	 DWORD PTR __acp_ex$[ebp], eax
  0010c	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR __lpw_ex$[ebp], 0
  00113	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR __lpa_ex$[ebp], 0
  0011a	8d 4d c4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0011d	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>

; 6664 : 	TCHAR szModule[MAX_PATH];
; 6665 : 	HINSTANCE hInst = _AtlBaseModule.GetModuleInstance();

  00122	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A ; ATL::_AtlBaseModule
  00127	e8 00 00 00 00	 call	 ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
  0012c	89 85 ac fd ff
	ff		 mov	 DWORD PTR _hInst$[ebp], eax

; 6666 : 	DWORD dwFLen = GetModuleFileName(hInst, szModule, MAX_PATH);

  00132	8b f4		 mov	 esi, esp
  00134	68 04 01 00 00	 push	 260			; 00000104H
  00139	8d 95 b4 fd ff
	ff		 lea	 edx, DWORD PTR _szModule$[ebp]
  0013f	52		 push	 edx
  00140	8b 85 ac fd ff
	ff		 mov	 eax, DWORD PTR _hInst$[ebp]
  00146	50		 push	 eax
  00147	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleFileNameW@12
  0014d	3b f4		 cmp	 esi, esp
  0014f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00154	89 85 a8 fd ff
	ff		 mov	 DWORD PTR _dwFLen$[ebp], eax

; 6667 : 	if( dwFLen == 0 )

  0015a	83 bd a8 fd ff
	ff 00		 cmp	 DWORD PTR _dwFLen$[ebp], 0
  00161	75 28		 jne	 SHORT $LN10@UpdateRegi

; 6668 : 		return AtlHresultFromLastError();

  00163	e8 00 00 00 00	 call	 ?AtlHresultFromLastError@ATL@@YAJXZ ; ATL::AtlHresultFromLastError
  00168	89 85 54 f5 ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  0016e	8d 4d c4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00171	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00176	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  00179	e8 00 00 00 00	 call	 ??1CRegObject@ATL@@UAE@XZ ; ATL::CRegObject::~CRegObject
  0017e	8b 85 54 f5 ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00184	e9 81 02 00 00	 jmp	 $LN19@UpdateRegi
  00189	eb 37		 jmp	 SHORT $LN11@UpdateRegi
$LN10@UpdateRegi:

; 6669 : 	else if( dwFLen == MAX_PATH )

  0018b	81 bd a8 fd ff
	ff 04 01 00 00	 cmp	 DWORD PTR _dwFLen$[ebp], 260 ; 00000104H
  00195	75 2b		 jne	 SHORT $LN11@UpdateRegi

; 6670 : 		return HRESULT_FROM_WIN32(ERROR_INSUFFICIENT_BUFFER);

  00197	6a 7a		 push	 122			; 0000007aH
  00199	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  0019e	83 c4 04	 add	 esp, 4
  001a1	89 85 50 f5 ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  001a7	8d 4d c4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  001aa	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  001af	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  001b2	e8 00 00 00 00	 call	 ??1CRegObject@ATL@@UAE@XZ ; ATL::CRegObject::~CRegObject
  001b7	8b 85 50 f5 ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  001bd	e9 48 02 00 00	 jmp	 $LN19@UpdateRegi
$LN11@UpdateRegi:

; 6671 : 
; 6672 : 	LPOLESTR pszModule = NULL;

  001c2	c7 85 a4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _pszModule$[ebp], 0

; 6673 : 	pszModule = T2OLE_EX(szModule, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  001cc	68 00 04 00 00	 push	 1024			; 00000400H
  001d1	8d 8d b4 fd ff
	ff		 lea	 ecx, DWORD PTR _szModule$[ebp]
  001d7	51		 push	 ecx
  001d8	e8 00 00 00 00	 call	 ?T2OLE_EX@@YAPA_WPA_WI@Z ; T2OLE_EX
  001dd	83 c4 08	 add	 esp, 8
  001e0	89 85 a4 fd ff
	ff		 mov	 DWORD PTR _pszModule$[ebp], eax

; 6674 : #ifndef _UNICODE
; 6675 : 	if(pszModule == NULL)
; 6676 : 		return E_OUTOFMEMORY;
; 6677 : #endif
; 6678 : 
; 6679 : 	OLECHAR pszModuleUnquoted[_MAX_PATH * 2];
; 6680 : 	EscapeSingleQuote(pszModuleUnquoted, _countof(pszModuleUnquoted), pszModule);

  001e6	8b 95 a4 fd ff
	ff		 mov	 edx, DWORD PTR _pszModule$[ebp]
  001ec	52		 push	 edx
  001ed	68 08 02 00 00	 push	 520			; 00000208H
  001f2	8d 85 90 f9 ff
	ff		 lea	 eax, DWORD PTR _pszModuleUnquoted$[ebp]
  001f8	50		 push	 eax
  001f9	e8 00 00 00 00	 call	 ?EscapeSingleQuote@CAtlModule@ATL@@SAXPA_WIPB_W@Z ; ATL::CAtlModule::EscapeSingleQuote
  001fe	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6681 : 
; 6682 : 	HRESULT hRes;
; 6683 : 	if ((hInst == NULL) || (hInst == GetModuleHandle(NULL))) // register as EXE

  00201	83 bd ac fd ff
	ff 00		 cmp	 DWORD PTR _hInst$[ebp], 0
  00208	74 1d		 je	 SHORT $LN15@UpdateRegi
  0020a	8b f4		 mov	 esi, esp
  0020c	6a 00		 push	 0
  0020e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleW@4
  00214	3b f4		 cmp	 esi, esp
  00216	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0021b	39 85 ac fd ff
	ff		 cmp	 DWORD PTR _hInst$[ebp], eax
  00221	0f 85 d4 00 00
	00		 jne	 $LN13@UpdateRegi
$LN15@UpdateRegi:

; 6684 : 	{
; 6685 : 		// If Registering as an EXE, then we quote the resultant path.
; 6686 : 		// We don't do it for a DLL, because LoadLibrary fails if the path is
; 6687 : 		// quoted
; 6688 : 		OLECHAR pszModuleQuote[(_MAX_PATH + _ATL_QUOTES_SPACE)*2];
; 6689 : 		pszModuleQuote[0] = OLESTR('\"');

  00227	b9 02 00 00 00	 mov	 ecx, 2
  0022c	6b d1 00	 imul	 edx, ecx, 0
  0022f	b8 22 00 00 00	 mov	 eax, 34			; 00000022H
  00234	66 89 84 15 6c
	f5 ff ff	 mov	 WORD PTR _pszModuleQuote$11[ebp+edx], ax

; 6690 : 		if(!ocscpy_s(pszModuleQuote + 1, (_MAX_PATH + _ATL_QUOTES_SPACE)*2 - 1, pszModuleUnquoted))

  0023c	8d 8d 90 f9 ff
	ff		 lea	 ecx, DWORD PTR _pszModuleUnquoted$[ebp]
  00242	51		 push	 ecx
  00243	68 0b 02 00 00	 push	 523			; 0000020bH
  00248	8d 95 6e f5 ff
	ff		 lea	 edx, DWORD PTR _pszModuleQuote$11[ebp+2]
  0024e	52		 push	 edx
  0024f	e8 00 00 00 00	 call	 ?ocscpy_s@@YA_NPA_WIPB_W@Z ; ocscpy_s
  00254	83 c4 0c	 add	 esp, 12			; 0000000cH
  00257	0f b6 c0	 movzx	 eax, al
  0025a	85 c0		 test	 eax, eax
  0025c	75 25		 jne	 SHORT $LN16@UpdateRegi

; 6691 : 		{
; 6692 : 			return E_FAIL;

  0025e	c7 85 4c f5 ff
	ff 05 40 00 80	 mov	 DWORD PTR $T5[ebp], -2147467259 ; 80004005H
  00268	8d 4d c4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0026b	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00270	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  00273	e8 00 00 00 00	 call	 ??1CRegObject@ATL@@UAE@XZ ; ATL::CRegObject::~CRegObject
  00278	8b 85 4c f5 ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  0027e	e9 87 01 00 00	 jmp	 $LN19@UpdateRegi
$LN16@UpdateRegi:

; 6693 : 		}
; 6694 : 		size_t nLen = ocslen(pszModuleQuote);

  00283	8d 8d 6c f5 ff
	ff		 lea	 ecx, DWORD PTR _pszModuleQuote$11[ebp]
  00289	51		 push	 ecx
  0028a	e8 00 00 00 00	 call	 ?ocslen@@YAHPB_W@Z	; ocslen
  0028f	83 c4 04	 add	 esp, 4
  00292	89 85 64 f5 ff
	ff		 mov	 DWORD PTR _nLen$10[ebp], eax

; 6695 : 		pszModuleQuote[nLen] = OLESTR('\"');

  00298	ba 22 00 00 00	 mov	 edx, 34			; 00000022H
  0029d	8b 85 64 f5 ff
	ff		 mov	 eax, DWORD PTR _nLen$10[ebp]
  002a3	66 89 94 45 6c
	f5 ff ff	 mov	 WORD PTR _pszModuleQuote$11[ebp+eax*2], dx

; 6696 : 		pszModuleQuote[nLen + 1] = 0;

  002ab	8b 8d 64 f5 ff
	ff		 mov	 ecx, DWORD PTR _nLen$10[ebp]
  002b1	8d 54 09 02	 lea	 edx, DWORD PTR [ecx+ecx+2]
  002b5	89 95 48 f5 ff
	ff		 mov	 DWORD PTR $T4[ebp], edx
  002bb	81 bd 48 f5 ff
	ff 18 04 00 00	 cmp	 DWORD PTR $T4[ebp], 1048 ; 00000418H
  002c5	73 02		 jae	 SHORT $LN21@UpdateRegi
  002c7	eb 05		 jmp	 SHORT $LN22@UpdateRegi
$LN21@UpdateRegi:
  002c9	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN22@UpdateRegi:
  002ce	33 c0		 xor	 eax, eax
  002d0	8b 8d 48 f5 ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
  002d6	66 89 84 0d 6c
	f5 ff ff	 mov	 WORD PTR _pszModuleQuote$11[ebp+ecx], ax

; 6697 : 
; 6698 : 		hRes = ro.AddReplacement(OLESTR("Module"), pszModuleQuote);

  002de	8d 95 6c f5 ff
	ff		 lea	 edx, DWORD PTR _pszModuleQuote$11[ebp]
  002e4	52		 push	 edx
  002e5	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe@
  002ea	8d 45 e4	 lea	 eax, DWORD PTR _ro$[ebp]
  002ed	50		 push	 eax
  002ee	e8 00 00 00 00	 call	 ?AddReplacement@CRegObject@ATL@@UAGJPB_W0@Z ; ATL::CRegObject::AddReplacement
  002f3	89 85 88 f9 ff
	ff		 mov	 DWORD PTR _hRes$[ebp], eax

; 6699 : 	}

  002f9	eb 1b		 jmp	 SHORT $LN14@UpdateRegi
$LN13@UpdateRegi:

; 6700 : 	else
; 6701 : 	{
; 6702 : 		hRes = ro.AddReplacement(OLESTR("Module"), pszModuleUnquoted);

  002fb	8d 8d 90 f9 ff
	ff		 lea	 ecx, DWORD PTR _pszModuleUnquoted$[ebp]
  00301	51		 push	 ecx
  00302	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe@
  00307	8d 55 e4	 lea	 edx, DWORD PTR _ro$[ebp]
  0030a	52		 push	 edx
  0030b	e8 00 00 00 00	 call	 ?AddReplacement@CRegObject@ATL@@UAGJPB_W0@Z ; ATL::CRegObject::AddReplacement
  00310	89 85 88 f9 ff
	ff		 mov	 DWORD PTR _hRes$[ebp], eax
$LN14@UpdateRegi:

; 6703 : 	}
; 6704 : 
; 6705 : 	if(FAILED(hRes))

  00316	83 bd 88 f9 ff
	ff 00		 cmp	 DWORD PTR _hRes$[ebp], 0
  0031d	7d 27		 jge	 SHORT $LN17@UpdateRegi

; 6706 : 		return hRes;

  0031f	8b 85 88 f9 ff
	ff		 mov	 eax, DWORD PTR _hRes$[ebp]
  00325	89 85 44 f5 ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  0032b	8d 4d c4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0032e	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00333	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  00336	e8 00 00 00 00	 call	 ??1CRegObject@ATL@@UAE@XZ ; ATL::CRegObject::~CRegObject
  0033b	8b 85 44 f5 ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  00341	e9 c4 00 00 00	 jmp	 $LN19@UpdateRegi
$LN17@UpdateRegi:

; 6707 : 
; 6708 : 	hRes = ro.AddReplacement(OLESTR("Module_Raw"), pszModuleUnquoted);

  00346	8d 8d 90 f9 ff
	ff		 lea	 ecx, DWORD PTR _pszModuleUnquoted$[ebp]
  0034c	51		 push	 ecx
  0034d	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@JBACFMF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA_?$AAR?$AAa?$AAw@
  00352	8d 55 e4	 lea	 edx, DWORD PTR _ro$[ebp]
  00355	52		 push	 edx
  00356	e8 00 00 00 00	 call	 ?AddReplacement@CRegObject@ATL@@UAGJPB_W0@Z ; ATL::CRegObject::AddReplacement
  0035b	89 85 88 f9 ff
	ff		 mov	 DWORD PTR _hRes$[ebp], eax

; 6709 : 	if(FAILED(hRes))

  00361	83 bd 88 f9 ff
	ff 00		 cmp	 DWORD PTR _hRes$[ebp], 0
  00368	7d 24		 jge	 SHORT $LN18@UpdateRegi

; 6710 : 		return hRes;

  0036a	8b 85 88 f9 ff
	ff		 mov	 eax, DWORD PTR _hRes$[ebp]
  00370	89 85 40 f5 ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00376	8d 4d c4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00379	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  0037e	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  00381	e8 00 00 00 00	 call	 ??1CRegObject@ATL@@UAE@XZ ; ATL::CRegObject::~CRegObject
  00386	8b 85 40 f5 ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  0038c	eb 7c		 jmp	 SHORT $LN19@UpdateRegi
$LN18@UpdateRegi:

; 6711 : 
; 6712 : 	LPCOLESTR szType = OLESTR("REGISTRY");

  0038e	c7 85 60 f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _szType$[ebp], OFFSET ??_C@_1BC@KAILKFFG@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY@

; 6713 : 	hr = (bRegister) ? ro.ResourceRegister(pszModule, nResID, szType) :

  00398	83 7d 10 00	 cmp	 DWORD PTR _bRegister$[ebp], 0
  0039c	74 23		 je	 SHORT $LN23@UpdateRegi
  0039e	8b 8d 60 f5 ff
	ff		 mov	 ecx, DWORD PTR _szType$[ebp]
  003a4	51		 push	 ecx
  003a5	8b 55 0c	 mov	 edx, DWORD PTR _nResID$[ebp]
  003a8	52		 push	 edx
  003a9	8b 85 a4 fd ff
	ff		 mov	 eax, DWORD PTR _pszModule$[ebp]
  003af	50		 push	 eax
  003b0	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  003b3	51		 push	 ecx
  003b4	e8 00 00 00 00	 call	 ?ResourceRegister@CRegObject@ATL@@QAGJPB_WI0@Z ; ATL::CRegObject::ResourceRegister
  003b9	89 85 38 f5 ff
	ff		 mov	 DWORD PTR tv200[ebp], eax
  003bf	eb 21		 jmp	 SHORT $LN24@UpdateRegi
$LN23@UpdateRegi:
  003c1	8b 95 60 f5 ff
	ff		 mov	 edx, DWORD PTR _szType$[ebp]
  003c7	52		 push	 edx
  003c8	8b 45 0c	 mov	 eax, DWORD PTR _nResID$[ebp]
  003cb	50		 push	 eax
  003cc	8b 8d a4 fd ff
	ff		 mov	 ecx, DWORD PTR _pszModule$[ebp]
  003d2	51		 push	 ecx
  003d3	8d 55 e4	 lea	 edx, DWORD PTR _ro$[ebp]
  003d6	52		 push	 edx
  003d7	e8 00 00 00 00	 call	 ?ResourceUnregister@CRegObject@ATL@@QAGJPB_WI0@Z ; ATL::CRegObject::ResourceUnregister
  003dc	89 85 38 f5 ff
	ff		 mov	 DWORD PTR tv200[ebp], eax
$LN24@UpdateRegi:
  003e2	8b 85 38 f5 ff
	ff		 mov	 eax, DWORD PTR tv200[ebp]
  003e8	89 45 dc	 mov	 DWORD PTR _hr$[ebp], eax

; 6714 : 		ro.ResourceUnregister(pszModule, nResID, szType);
; 6715 : 	return hr;

  003eb	8b 4d dc	 mov	 ecx, DWORD PTR _hr$[ebp]
  003ee	89 8d 3c f5 ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  003f4	8d 4d c4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  003f7	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  003fc	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  003ff	e8 00 00 00 00	 call	 ??1CRegObject@ATL@@UAE@XZ ; ATL::CRegObject::~CRegObject
  00404	8b 85 3c f5 ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
$LN19@UpdateRegi:

; 6716 : }

  0040a	52		 push	 edx
  0040b	8b cd		 mov	 ecx, ebp
  0040d	50		 push	 eax
  0040e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN31@UpdateRegi
  00414	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00419	58		 pop	 eax
  0041a	5a		 pop	 edx
  0041b	5f		 pop	 edi
  0041c	5e		 pop	 esi
  0041d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00420	33 cd		 xor	 ecx, ebp
  00422	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00427	81 c4 c8 0a 00
	00		 add	 esp, 2760		; 00000ac8H
  0042d	3b ec		 cmp	 ebp, esp
  0042f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00434	8b e5		 mov	 esp, ebp
  00436	5d		 pop	 ebp
  00437	c2 10 00	 ret	 16			; 00000010H
  0043a	66 90		 npad	 2
$LN31@UpdateRegi:
  0043c	05 00 00 00	 DD	 5
  00440	00 00 00 00	 DD	 $LN30@UpdateRegi
$LN30@UpdateRegi:
  00444	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00448	14 00 00 00	 DD	 20			; 00000014H
  0044c	00 00 00 00	 DD	 $LN25@UpdateRegi
  00450	c4 ff ff ff	 DD	 -60			; ffffffc4H
  00454	04 00 00 00	 DD	 4
  00458	00 00 00 00	 DD	 $LN26@UpdateRegi
  0045c	b4 fd ff ff	 DD	 -588			; fffffdb4H
  00460	08 02 00 00	 DD	 520			; 00000208H
  00464	00 00 00 00	 DD	 $LN27@UpdateRegi
  00468	90 f9 ff ff	 DD	 -1648			; fffff990H
  0046c	10 04 00 00	 DD	 1040			; 00000410H
  00470	00 00 00 00	 DD	 $LN28@UpdateRegi
  00474	6c f5 ff ff	 DD	 -2708			; fffff56cH
  00478	18 04 00 00	 DD	 1048			; 00000418H
  0047c	00 00 00 00	 DD	 $LN29@UpdateRegi
$LN29@UpdateRegi:
  00480	70		 DB	 112			; 00000070H
  00481	73		 DB	 115			; 00000073H
  00482	7a		 DB	 122			; 0000007aH
  00483	4d		 DB	 77			; 0000004dH
  00484	6f		 DB	 111			; 0000006fH
  00485	64		 DB	 100			; 00000064H
  00486	75		 DB	 117			; 00000075H
  00487	6c		 DB	 108			; 0000006cH
  00488	65		 DB	 101			; 00000065H
  00489	51		 DB	 81			; 00000051H
  0048a	75		 DB	 117			; 00000075H
  0048b	6f		 DB	 111			; 0000006fH
  0048c	74		 DB	 116			; 00000074H
  0048d	65		 DB	 101			; 00000065H
  0048e	00		 DB	 0
$LN28@UpdateRegi:
  0048f	70		 DB	 112			; 00000070H
  00490	73		 DB	 115			; 00000073H
  00491	7a		 DB	 122			; 0000007aH
  00492	4d		 DB	 77			; 0000004dH
  00493	6f		 DB	 111			; 0000006fH
  00494	64		 DB	 100			; 00000064H
  00495	75		 DB	 117			; 00000075H
  00496	6c		 DB	 108			; 0000006cH
  00497	65		 DB	 101			; 00000065H
  00498	55		 DB	 85			; 00000055H
  00499	6e		 DB	 110			; 0000006eH
  0049a	71		 DB	 113			; 00000071H
  0049b	75		 DB	 117			; 00000075H
  0049c	6f		 DB	 111			; 0000006fH
  0049d	74		 DB	 116			; 00000074H
  0049e	65		 DB	 101			; 00000065H
  0049f	64		 DB	 100			; 00000064H
  004a0	00		 DB	 0
$LN27@UpdateRegi:
  004a1	73		 DB	 115			; 00000073H
  004a2	7a		 DB	 122			; 0000007aH
  004a3	4d		 DB	 77			; 0000004dH
  004a4	6f		 DB	 111			; 0000006fH
  004a5	64		 DB	 100			; 00000064H
  004a6	75		 DB	 117			; 00000075H
  004a7	6c		 DB	 108			; 0000006cH
  004a8	65		 DB	 101			; 00000065H
  004a9	00		 DB	 0
$LN26@UpdateRegi:
  004aa	5f		 DB	 95			; 0000005fH
  004ab	41		 DB	 65			; 00000041H
  004ac	74		 DB	 116			; 00000074H
  004ad	6c		 DB	 108			; 0000006cH
  004ae	53		 DB	 83			; 00000053H
  004af	61		 DB	 97			; 00000061H
  004b0	66		 DB	 102			; 00000066H
  004b1	65		 DB	 101			; 00000065H
  004b2	41		 DB	 65			; 00000041H
  004b3	6c		 DB	 108			; 0000006cH
  004b4	6c		 DB	 108			; 0000006cH
  004b5	6f		 DB	 111			; 0000006fH
  004b6	63		 DB	 99			; 00000063H
  004b7	61		 DB	 97			; 00000061H
  004b8	4d		 DB	 77			; 0000004dH
  004b9	61		 DB	 97			; 00000061H
  004ba	6e		 DB	 110			; 0000006eH
  004bb	61		 DB	 97			; 00000061H
  004bc	67		 DB	 103			; 00000067H
  004bd	65		 DB	 101			; 00000065H
  004be	72		 DB	 114			; 00000072H
  004bf	00		 DB	 0
$LN25@UpdateRegi:
  004c0	72		 DB	 114			; 00000072H
  004c1	6f		 DB	 111			; 0000006fH
  004c2	00		 DB	 0
?UpdateRegistryFromResource@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CAtlModule::UpdateRegistryFromResource
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?UpdateRegistryFromResource@CAtlModule@ATL@@QAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
tv203 = -2764						; size = 4
$T1 = -2760						; size = 4
$T2 = -2756						; size = 4
$T3 = -2752						; size = 4
$T4 = -2748						; size = 4
$T5 = -2744						; size = 4
$T6 = -2740						; size = 4
$T7 = -2736						; size = 4
$T8 = -2732						; size = 4
$T9 = -2728						; size = 4
_pszRes$ = -2724					; size = 4
_szType$ = -2720					; size = 4
_nLen$10 = -2716					; size = 4
_pszModuleQuote$11 = -2708				; size = 1048
_hRes$ = -1656						; size = 4
_pszModuleUnquoted$ = -1648				; size = 1040
_pszModule$ = -604					; size = 4
_dwFLen$ = -600						; size = 4
_hInst$ = -596						; size = 4
_szModule$ = -588					; size = 520
__AtlSafeAllocaManager$ = -60				; size = 4
__lpa_ex$ = -52						; size = 4
__lpw_ex$ = -48						; size = 4
__acp_ex$ = -44						; size = 4
__convert_ex$ = -40					; size = 4
_hr$ = -36						; size = 4
_ro$ = -28						; size = 20
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_lpszRes$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_pMapEntries$ = 20					; size = 4
?UpdateRegistryFromResource@CAtlModule@ATL@@QAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z PROC ; ATL::CAtlModule::UpdateRegistryFromResource, COMDAT

; 6555 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 0a 00
	00		 sub	 esp, 2764		; 00000accH
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 34 f5 ff
	ff		 lea	 edi, DWORD PTR [ebp-2764]
  00011	b9 b3 02 00 00	 mov	 ecx, 691		; 000002b3H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 6556 : 	CRegObject ro;

  00027	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0CRegObject@ATL@@QAE@XZ

; 6557 : 	HRESULT hr = ro.FinalConstruct();

  0002f	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  00032	e8 00 00 00 00	 call	 ?FinalConstruct@CRegObject@ATL@@QAEJXZ ; ATL::CRegObject::FinalConstruct
  00037	89 45 dc	 mov	 DWORD PTR _hr$[ebp], eax

; 6558 : 	if (FAILED(hr))

  0003a	83 7d dc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0003e	7d 1c		 jge	 SHORT $LN7@UpdateRegi

; 6559 : 	{
; 6560 : 		return hr;

  00040	8b 45 dc	 mov	 eax, DWORD PTR _hr$[ebp]
  00043	89 85 58 f5 ff
	ff		 mov	 DWORD PTR $T9[ebp], eax
  00049	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  0004c	e8 00 00 00 00	 call	 ??1CRegObject@ATL@@UAE@XZ ; ATL::CRegObject::~CRegObject
  00051	8b 85 58 f5 ff
	ff		 mov	 eax, DWORD PTR $T9[ebp]
  00057	e9 ce 03 00 00	 jmp	 $LN19@UpdateRegi
$LN7@UpdateRegi:

; 6561 : 	}
; 6562 : 
; 6563 : 	if (pMapEntries != NULL)

  0005c	83 7d 14 00	 cmp	 DWORD PTR _pMapEntries$[ebp], 0
  00060	74 5c		 je	 SHORT $LN8@UpdateRegi
$LN2@UpdateRegi:

; 6564 : 	{
; 6565 : 		while (pMapEntries->szKey != NULL)

  00062	8b 4d 14	 mov	 ecx, DWORD PTR _pMapEntries$[ebp]
  00065	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00068	74 54		 je	 SHORT $LN8@UpdateRegi
$LN6@UpdateRegi:

; 6566 : 		{
; 6567 : 			ATLASSUME(NULL != pMapEntries->szData);

  0006a	8b 55 14	 mov	 edx, DWORD PTR _pMapEntries$[ebp]
  0006d	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  00071	75 26		 jne	 SHORT $LN4@UpdateRegi
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_1DC@HEJCCJC@?$AA0?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAp?$AAM?$AAa?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe@
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0007d	6a 00		 push	 0
  0007f	68 a7 19 00 00	 push	 6567			; 000019a7H
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00089	6a 02		 push	 2
  0008b	e8 00 00 00 00	 call	 __CrtDbgReportW
  00090	83 c4 18	 add	 esp, 24			; 00000018H
  00093	83 f8 01	 cmp	 eax, 1
  00096	75 01		 jne	 SHORT $LN4@UpdateRegi
  00098	cc		 int	 3
$LN4@UpdateRegi:
  00099	33 c9		 xor	 ecx, ecx
  0009b	75 cd		 jne	 SHORT $LN6@UpdateRegi

; 6568 : 			ro.AddReplacement(pMapEntries->szKey, pMapEntries->szData);

  0009d	8b 55 14	 mov	 edx, DWORD PTR _pMapEntries$[ebp]
  000a0	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000a3	50		 push	 eax
  000a4	8b 4d 14	 mov	 ecx, DWORD PTR _pMapEntries$[ebp]
  000a7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a9	52		 push	 edx
  000aa	8d 45 e4	 lea	 eax, DWORD PTR _ro$[ebp]
  000ad	50		 push	 eax
  000ae	e8 00 00 00 00	 call	 ?AddReplacement@CRegObject@ATL@@UAGJPB_W0@Z ; ATL::CRegObject::AddReplacement

; 6569 : 			pMapEntries++;

  000b3	8b 4d 14	 mov	 ecx, DWORD PTR _pMapEntries$[ebp]
  000b6	83 c1 08	 add	 ecx, 8
  000b9	89 4d 14	 mov	 DWORD PTR _pMapEntries$[ebp], ecx

; 6570 : 		}

  000bc	eb a4		 jmp	 SHORT $LN2@UpdateRegi
$LN8@UpdateRegi:

; 6571 : 	}
; 6572 : 
; 6573 : 	hr = AddCommonRGSReplacements(&ro);

  000be	8b f4		 mov	 esi, esp
  000c0	8d 55 e4	 lea	 edx, DWORD PTR _ro$[ebp]
  000c3	52		 push	 edx
  000c4	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	8b 10		 mov	 edx, DWORD PTR [eax]
  000c9	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  000cc	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000cf	ff d0		 call	 eax
  000d1	3b f4		 cmp	 esi, esp
  000d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d8	89 45 dc	 mov	 DWORD PTR _hr$[ebp], eax

; 6574 : 	if (FAILED(hr))

  000db	83 7d dc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000df	7d 1c		 jge	 SHORT $LN9@UpdateRegi

; 6575 : 		return hr;

  000e1	8b 4d dc	 mov	 ecx, DWORD PTR _hr$[ebp]
  000e4	89 8d 54 f5 ff
	ff		 mov	 DWORD PTR $T8[ebp], ecx
  000ea	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  000ed	e8 00 00 00 00	 call	 ??1CRegObject@ATL@@UAE@XZ ; ATL::CRegObject::~CRegObject
  000f2	8b 85 54 f5 ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  000f8	e9 2d 03 00 00	 jmp	 $LN19@UpdateRegi
$LN9@UpdateRegi:

; 6576 : 
; 6577 : 	USES_CONVERSION_EX;

  000fd	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR __convert_ex$[ebp], 0
  00104	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00109	89 45 d4	 mov	 DWORD PTR __acp_ex$[ebp], eax
  0010c	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR __lpw_ex$[ebp], 0
  00113	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR __lpa_ex$[ebp], 0
  0011a	8d 4d c4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0011d	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>

; 6578 : 	TCHAR szModule[MAX_PATH];
; 6579 : 	HINSTANCE hInst = _AtlBaseModule.GetModuleInstance();

  00122	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A ; ATL::_AtlBaseModule
  00127	e8 00 00 00 00	 call	 ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
  0012c	89 85 ac fd ff
	ff		 mov	 DWORD PTR _hInst$[ebp], eax

; 6580 : 	DWORD dwFLen = GetModuleFileName(hInst, szModule, MAX_PATH);

  00132	8b f4		 mov	 esi, esp
  00134	68 04 01 00 00	 push	 260			; 00000104H
  00139	8d 95 b4 fd ff
	ff		 lea	 edx, DWORD PTR _szModule$[ebp]
  0013f	52		 push	 edx
  00140	8b 85 ac fd ff
	ff		 mov	 eax, DWORD PTR _hInst$[ebp]
  00146	50		 push	 eax
  00147	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleFileNameW@12
  0014d	3b f4		 cmp	 esi, esp
  0014f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00154	89 85 a8 fd ff
	ff		 mov	 DWORD PTR _dwFLen$[ebp], eax

; 6581 : 	if( dwFLen == 0 )

  0015a	83 bd a8 fd ff
	ff 00		 cmp	 DWORD PTR _dwFLen$[ebp], 0
  00161	75 28		 jne	 SHORT $LN10@UpdateRegi

; 6582 : 		return AtlHresultFromLastError();

  00163	e8 00 00 00 00	 call	 ?AtlHresultFromLastError@ATL@@YAJXZ ; ATL::AtlHresultFromLastError
  00168	89 85 50 f5 ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  0016e	8d 4d c4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00171	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00176	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  00179	e8 00 00 00 00	 call	 ??1CRegObject@ATL@@UAE@XZ ; ATL::CRegObject::~CRegObject
  0017e	8b 85 50 f5 ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00184	e9 a1 02 00 00	 jmp	 $LN19@UpdateRegi
  00189	eb 37		 jmp	 SHORT $LN11@UpdateRegi
$LN10@UpdateRegi:

; 6583 : 	else if( dwFLen == MAX_PATH )

  0018b	81 bd a8 fd ff
	ff 04 01 00 00	 cmp	 DWORD PTR _dwFLen$[ebp], 260 ; 00000104H
  00195	75 2b		 jne	 SHORT $LN11@UpdateRegi

; 6584 : 		return HRESULT_FROM_WIN32(ERROR_INSUFFICIENT_BUFFER);

  00197	6a 7a		 push	 122			; 0000007aH
  00199	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  0019e	83 c4 04	 add	 esp, 4
  001a1	89 85 4c f5 ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  001a7	8d 4d c4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  001aa	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  001af	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  001b2	e8 00 00 00 00	 call	 ??1CRegObject@ATL@@UAE@XZ ; ATL::CRegObject::~CRegObject
  001b7	8b 85 4c f5 ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  001bd	e9 68 02 00 00	 jmp	 $LN19@UpdateRegi
$LN11@UpdateRegi:

; 6585 : 
; 6586 : 	LPOLESTR pszModule = NULL;

  001c2	c7 85 a4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _pszModule$[ebp], 0

; 6587 : 	pszModule = T2OLE_EX(szModule, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  001cc	68 00 04 00 00	 push	 1024			; 00000400H
  001d1	8d 8d b4 fd ff
	ff		 lea	 ecx, DWORD PTR _szModule$[ebp]
  001d7	51		 push	 ecx
  001d8	e8 00 00 00 00	 call	 ?T2OLE_EX@@YAPA_WPA_WI@Z ; T2OLE_EX
  001dd	83 c4 08	 add	 esp, 8
  001e0	89 85 a4 fd ff
	ff		 mov	 DWORD PTR _pszModule$[ebp], eax

; 6588 : #ifndef _UNICODE
; 6589 : 	if(pszModule == NULL)
; 6590 : 		return E_OUTOFMEMORY;
; 6591 : #endif
; 6592 : 
; 6593 : 	OLECHAR pszModuleUnquoted[_MAX_PATH * 2];
; 6594 : 	EscapeSingleQuote(pszModuleUnquoted, _countof(pszModuleUnquoted), pszModule);

  001e6	8b 95 a4 fd ff
	ff		 mov	 edx, DWORD PTR _pszModule$[ebp]
  001ec	52		 push	 edx
  001ed	68 08 02 00 00	 push	 520			; 00000208H
  001f2	8d 85 90 f9 ff
	ff		 lea	 eax, DWORD PTR _pszModuleUnquoted$[ebp]
  001f8	50		 push	 eax
  001f9	e8 00 00 00 00	 call	 ?EscapeSingleQuote@CAtlModule@ATL@@SAXPA_WIPB_W@Z ; ATL::CAtlModule::EscapeSingleQuote
  001fe	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6595 : 
; 6596 : 	HRESULT hRes;
; 6597 : 	if ((hInst == NULL) || (hInst == GetModuleHandle(NULL))) // register as EXE

  00201	83 bd ac fd ff
	ff 00		 cmp	 DWORD PTR _hInst$[ebp], 0
  00208	74 1d		 je	 SHORT $LN15@UpdateRegi
  0020a	8b f4		 mov	 esi, esp
  0020c	6a 00		 push	 0
  0020e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleW@4
  00214	3b f4		 cmp	 esi, esp
  00216	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0021b	39 85 ac fd ff
	ff		 cmp	 DWORD PTR _hInst$[ebp], eax
  00221	0f 85 d4 00 00
	00		 jne	 $LN13@UpdateRegi
$LN15@UpdateRegi:

; 6598 : 	{
; 6599 : 		// If Registering as an EXE, then we quote the resultant path.
; 6600 : 		// We don't do it for a DLL, because LoadLibrary fails if the path is
; 6601 : 		// quoted
; 6602 : 		OLECHAR pszModuleQuote[(_MAX_PATH + _ATL_QUOTES_SPACE)*2];
; 6603 : 		pszModuleQuote[0] = OLESTR('\"');

  00227	b9 02 00 00 00	 mov	 ecx, 2
  0022c	6b d1 00	 imul	 edx, ecx, 0
  0022f	b8 22 00 00 00	 mov	 eax, 34			; 00000022H
  00234	66 89 84 15 6c
	f5 ff ff	 mov	 WORD PTR _pszModuleQuote$11[ebp+edx], ax

; 6604 : 		if(!ocscpy_s(pszModuleQuote + 1, (_MAX_PATH + _ATL_QUOTES_SPACE)*2 - 1, pszModuleUnquoted))

  0023c	8d 8d 90 f9 ff
	ff		 lea	 ecx, DWORD PTR _pszModuleUnquoted$[ebp]
  00242	51		 push	 ecx
  00243	68 0b 02 00 00	 push	 523			; 0000020bH
  00248	8d 95 6e f5 ff
	ff		 lea	 edx, DWORD PTR _pszModuleQuote$11[ebp+2]
  0024e	52		 push	 edx
  0024f	e8 00 00 00 00	 call	 ?ocscpy_s@@YA_NPA_WIPB_W@Z ; ocscpy_s
  00254	83 c4 0c	 add	 esp, 12			; 0000000cH
  00257	0f b6 c0	 movzx	 eax, al
  0025a	85 c0		 test	 eax, eax
  0025c	75 25		 jne	 SHORT $LN16@UpdateRegi

; 6605 : 		{
; 6606 : 			return E_FAIL;

  0025e	c7 85 48 f5 ff
	ff 05 40 00 80	 mov	 DWORD PTR $T5[ebp], -2147467259 ; 80004005H
  00268	8d 4d c4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0026b	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00270	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  00273	e8 00 00 00 00	 call	 ??1CRegObject@ATL@@UAE@XZ ; ATL::CRegObject::~CRegObject
  00278	8b 85 48 f5 ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  0027e	e9 a7 01 00 00	 jmp	 $LN19@UpdateRegi
$LN16@UpdateRegi:

; 6607 : 		}
; 6608 : 		size_t nLen = ocslen(pszModuleQuote);

  00283	8d 8d 6c f5 ff
	ff		 lea	 ecx, DWORD PTR _pszModuleQuote$11[ebp]
  00289	51		 push	 ecx
  0028a	e8 00 00 00 00	 call	 ?ocslen@@YAHPB_W@Z	; ocslen
  0028f	83 c4 04	 add	 esp, 4
  00292	89 85 64 f5 ff
	ff		 mov	 DWORD PTR _nLen$10[ebp], eax

; 6609 : 		pszModuleQuote[nLen] = OLESTR('\"');

  00298	ba 22 00 00 00	 mov	 edx, 34			; 00000022H
  0029d	8b 85 64 f5 ff
	ff		 mov	 eax, DWORD PTR _nLen$10[ebp]
  002a3	66 89 94 45 6c
	f5 ff ff	 mov	 WORD PTR _pszModuleQuote$11[ebp+eax*2], dx

; 6610 : 		pszModuleQuote[nLen + 1] = 0;

  002ab	8b 8d 64 f5 ff
	ff		 mov	 ecx, DWORD PTR _nLen$10[ebp]
  002b1	8d 54 09 02	 lea	 edx, DWORD PTR [ecx+ecx+2]
  002b5	89 95 44 f5 ff
	ff		 mov	 DWORD PTR $T4[ebp], edx
  002bb	81 bd 44 f5 ff
	ff 18 04 00 00	 cmp	 DWORD PTR $T4[ebp], 1048 ; 00000418H
  002c5	73 02		 jae	 SHORT $LN21@UpdateRegi
  002c7	eb 05		 jmp	 SHORT $LN22@UpdateRegi
$LN21@UpdateRegi:
  002c9	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN22@UpdateRegi:
  002ce	33 c0		 xor	 eax, eax
  002d0	8b 8d 44 f5 ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
  002d6	66 89 84 0d 6c
	f5 ff ff	 mov	 WORD PTR _pszModuleQuote$11[ebp+ecx], ax

; 6611 : 
; 6612 : 		hRes = ro.AddReplacement(OLESTR("Module"), pszModuleQuote);

  002de	8d 95 6c f5 ff
	ff		 lea	 edx, DWORD PTR _pszModuleQuote$11[ebp]
  002e4	52		 push	 edx
  002e5	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe@
  002ea	8d 45 e4	 lea	 eax, DWORD PTR _ro$[ebp]
  002ed	50		 push	 eax
  002ee	e8 00 00 00 00	 call	 ?AddReplacement@CRegObject@ATL@@UAGJPB_W0@Z ; ATL::CRegObject::AddReplacement
  002f3	89 85 88 f9 ff
	ff		 mov	 DWORD PTR _hRes$[ebp], eax

; 6613 : 	}

  002f9	eb 1b		 jmp	 SHORT $LN14@UpdateRegi
$LN13@UpdateRegi:

; 6614 : 	else
; 6615 : 	{
; 6616 : 		hRes = ro.AddReplacement(OLESTR("Module"), pszModuleUnquoted);

  002fb	8d 8d 90 f9 ff
	ff		 lea	 ecx, DWORD PTR _pszModuleUnquoted$[ebp]
  00301	51		 push	 ecx
  00302	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe@
  00307	8d 55 e4	 lea	 edx, DWORD PTR _ro$[ebp]
  0030a	52		 push	 edx
  0030b	e8 00 00 00 00	 call	 ?AddReplacement@CRegObject@ATL@@UAGJPB_W0@Z ; ATL::CRegObject::AddReplacement
  00310	89 85 88 f9 ff
	ff		 mov	 DWORD PTR _hRes$[ebp], eax
$LN14@UpdateRegi:

; 6617 : 	}
; 6618 : 
; 6619 : 	if(FAILED(hRes))

  00316	83 bd 88 f9 ff
	ff 00		 cmp	 DWORD PTR _hRes$[ebp], 0
  0031d	7d 27		 jge	 SHORT $LN17@UpdateRegi

; 6620 : 		return hRes;

  0031f	8b 85 88 f9 ff
	ff		 mov	 eax, DWORD PTR _hRes$[ebp]
  00325	89 85 40 f5 ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  0032b	8d 4d c4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0032e	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00333	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  00336	e8 00 00 00 00	 call	 ??1CRegObject@ATL@@UAE@XZ ; ATL::CRegObject::~CRegObject
  0033b	8b 85 40 f5 ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  00341	e9 e4 00 00 00	 jmp	 $LN19@UpdateRegi
$LN17@UpdateRegi:

; 6621 : 
; 6622 : 	hRes = ro.AddReplacement(OLESTR("Module_Raw"), pszModuleUnquoted);

  00346	8d 8d 90 f9 ff
	ff		 lea	 ecx, DWORD PTR _pszModuleUnquoted$[ebp]
  0034c	51		 push	 ecx
  0034d	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@JBACFMF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA_?$AAR?$AAa?$AAw@
  00352	8d 55 e4	 lea	 edx, DWORD PTR _ro$[ebp]
  00355	52		 push	 edx
  00356	e8 00 00 00 00	 call	 ?AddReplacement@CRegObject@ATL@@UAGJPB_W0@Z ; ATL::CRegObject::AddReplacement
  0035b	89 85 88 f9 ff
	ff		 mov	 DWORD PTR _hRes$[ebp], eax

; 6623 : 	if(FAILED(hRes))

  00361	83 bd 88 f9 ff
	ff 00		 cmp	 DWORD PTR _hRes$[ebp], 0
  00368	7d 27		 jge	 SHORT $LN18@UpdateRegi

; 6624 : 		return hRes;

  0036a	8b 85 88 f9 ff
	ff		 mov	 eax, DWORD PTR _hRes$[ebp]
  00370	89 85 3c f5 ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00376	8d 4d c4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00379	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  0037e	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  00381	e8 00 00 00 00	 call	 ??1CRegObject@ATL@@UAE@XZ ; ATL::CRegObject::~CRegObject
  00386	8b 85 3c f5 ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  0038c	e9 99 00 00 00	 jmp	 $LN19@UpdateRegi
$LN18@UpdateRegi:

; 6625 : 
; 6626 : 	LPCOLESTR szType = OLESTR("REGISTRY");

  00391	c7 85 60 f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _szType$[ebp], OFFSET ??_C@_1BC@KAILKFFG@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY@

; 6627 : 	LPCOLESTR pszRes = T2COLE_EX(lpszRes, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  0039b	68 00 04 00 00	 push	 1024			; 00000400H
  003a0	8b 4d 0c	 mov	 ecx, DWORD PTR _lpszRes$[ebp]
  003a3	51		 push	 ecx
  003a4	e8 00 00 00 00	 call	 ?T2COLE_EX@@YAPB_WPB_WI@Z ; T2COLE_EX
  003a9	83 c4 08	 add	 esp, 8
  003ac	89 85 5c f5 ff
	ff		 mov	 DWORD PTR _pszRes$[ebp], eax

; 6628 : #ifndef _UNICODE
; 6629 : 	if(pszRes == NULL)
; 6630 : 		return E_OUTOFMEMORY;
; 6631 : #endif
; 6632 : 	hr = (bRegister) ? ro.ResourceRegisterSz(pszModule, pszRes, szType) :

  003b2	83 7d 10 00	 cmp	 DWORD PTR _bRegister$[ebp], 0
  003b6	74 26		 je	 SHORT $LN23@UpdateRegi
  003b8	8b 95 60 f5 ff
	ff		 mov	 edx, DWORD PTR _szType$[ebp]
  003be	52		 push	 edx
  003bf	8b 85 5c f5 ff
	ff		 mov	 eax, DWORD PTR _pszRes$[ebp]
  003c5	50		 push	 eax
  003c6	8b 8d a4 fd ff
	ff		 mov	 ecx, DWORD PTR _pszModule$[ebp]
  003cc	51		 push	 ecx
  003cd	8d 55 e4	 lea	 edx, DWORD PTR _ro$[ebp]
  003d0	52		 push	 edx
  003d1	e8 00 00 00 00	 call	 ?ResourceRegisterSz@CRegObject@ATL@@QAGJPB_W00@Z ; ATL::CRegObject::ResourceRegisterSz
  003d6	89 85 34 f5 ff
	ff		 mov	 DWORD PTR tv203[ebp], eax
  003dc	eb 24		 jmp	 SHORT $LN24@UpdateRegi
$LN23@UpdateRegi:
  003de	8b 85 60 f5 ff
	ff		 mov	 eax, DWORD PTR _szType$[ebp]
  003e4	50		 push	 eax
  003e5	8b 8d 5c f5 ff
	ff		 mov	 ecx, DWORD PTR _pszRes$[ebp]
  003eb	51		 push	 ecx
  003ec	8b 95 a4 fd ff
	ff		 mov	 edx, DWORD PTR _pszModule$[ebp]
  003f2	52		 push	 edx
  003f3	8d 45 e4	 lea	 eax, DWORD PTR _ro$[ebp]
  003f6	50		 push	 eax
  003f7	e8 00 00 00 00	 call	 ?ResourceUnregisterSz@CRegObject@ATL@@QAGJPB_W00@Z ; ATL::CRegObject::ResourceUnregisterSz
  003fc	89 85 34 f5 ff
	ff		 mov	 DWORD PTR tv203[ebp], eax
$LN24@UpdateRegi:
  00402	8b 8d 34 f5 ff
	ff		 mov	 ecx, DWORD PTR tv203[ebp]
  00408	89 4d dc	 mov	 DWORD PTR _hr$[ebp], ecx

; 6633 : 		ro.ResourceUnregisterSz(pszModule, pszRes, szType);
; 6634 : 	return hr;

  0040b	8b 55 dc	 mov	 edx, DWORD PTR _hr$[ebp]
  0040e	89 95 38 f5 ff
	ff		 mov	 DWORD PTR $T1[ebp], edx
  00414	8d 4d c4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00417	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  0041c	8d 4d e4	 lea	 ecx, DWORD PTR _ro$[ebp]
  0041f	e8 00 00 00 00	 call	 ??1CRegObject@ATL@@UAE@XZ ; ATL::CRegObject::~CRegObject
  00424	8b 85 38 f5 ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
$LN19@UpdateRegi:

; 6635 : }

  0042a	52		 push	 edx
  0042b	8b cd		 mov	 ecx, ebp
  0042d	50		 push	 eax
  0042e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN31@UpdateRegi
  00434	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00439	58		 pop	 eax
  0043a	5a		 pop	 edx
  0043b	5f		 pop	 edi
  0043c	5e		 pop	 esi
  0043d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00440	33 cd		 xor	 ecx, ebp
  00442	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00447	81 c4 cc 0a 00
	00		 add	 esp, 2764		; 00000accH
  0044d	3b ec		 cmp	 ebp, esp
  0044f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00454	8b e5		 mov	 esp, ebp
  00456	5d		 pop	 ebp
  00457	c2 10 00	 ret	 16			; 00000010H
  0045a	66 90		 npad	 2
$LN31@UpdateRegi:
  0045c	05 00 00 00	 DD	 5
  00460	00 00 00 00	 DD	 $LN30@UpdateRegi
$LN30@UpdateRegi:
  00464	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00468	14 00 00 00	 DD	 20			; 00000014H
  0046c	00 00 00 00	 DD	 $LN25@UpdateRegi
  00470	c4 ff ff ff	 DD	 -60			; ffffffc4H
  00474	04 00 00 00	 DD	 4
  00478	00 00 00 00	 DD	 $LN26@UpdateRegi
  0047c	b4 fd ff ff	 DD	 -588			; fffffdb4H
  00480	08 02 00 00	 DD	 520			; 00000208H
  00484	00 00 00 00	 DD	 $LN27@UpdateRegi
  00488	90 f9 ff ff	 DD	 -1648			; fffff990H
  0048c	10 04 00 00	 DD	 1040			; 00000410H
  00490	00 00 00 00	 DD	 $LN28@UpdateRegi
  00494	6c f5 ff ff	 DD	 -2708			; fffff56cH
  00498	18 04 00 00	 DD	 1048			; 00000418H
  0049c	00 00 00 00	 DD	 $LN29@UpdateRegi
$LN29@UpdateRegi:
  004a0	70		 DB	 112			; 00000070H
  004a1	73		 DB	 115			; 00000073H
  004a2	7a		 DB	 122			; 0000007aH
  004a3	4d		 DB	 77			; 0000004dH
  004a4	6f		 DB	 111			; 0000006fH
  004a5	64		 DB	 100			; 00000064H
  004a6	75		 DB	 117			; 00000075H
  004a7	6c		 DB	 108			; 0000006cH
  004a8	65		 DB	 101			; 00000065H
  004a9	51		 DB	 81			; 00000051H
  004aa	75		 DB	 117			; 00000075H
  004ab	6f		 DB	 111			; 0000006fH
  004ac	74		 DB	 116			; 00000074H
  004ad	65		 DB	 101			; 00000065H
  004ae	00		 DB	 0
$LN28@UpdateRegi:
  004af	70		 DB	 112			; 00000070H
  004b0	73		 DB	 115			; 00000073H
  004b1	7a		 DB	 122			; 0000007aH
  004b2	4d		 DB	 77			; 0000004dH
  004b3	6f		 DB	 111			; 0000006fH
  004b4	64		 DB	 100			; 00000064H
  004b5	75		 DB	 117			; 00000075H
  004b6	6c		 DB	 108			; 0000006cH
  004b7	65		 DB	 101			; 00000065H
  004b8	55		 DB	 85			; 00000055H
  004b9	6e		 DB	 110			; 0000006eH
  004ba	71		 DB	 113			; 00000071H
  004bb	75		 DB	 117			; 00000075H
  004bc	6f		 DB	 111			; 0000006fH
  004bd	74		 DB	 116			; 00000074H
  004be	65		 DB	 101			; 00000065H
  004bf	64		 DB	 100			; 00000064H
  004c0	00		 DB	 0
$LN27@UpdateRegi:
  004c1	73		 DB	 115			; 00000073H
  004c2	7a		 DB	 122			; 0000007aH
  004c3	4d		 DB	 77			; 0000004dH
  004c4	6f		 DB	 111			; 0000006fH
  004c5	64		 DB	 100			; 00000064H
  004c6	75		 DB	 117			; 00000075H
  004c7	6c		 DB	 108			; 0000006cH
  004c8	65		 DB	 101			; 00000065H
  004c9	00		 DB	 0
$LN26@UpdateRegi:
  004ca	5f		 DB	 95			; 0000005fH
  004cb	41		 DB	 65			; 00000041H
  004cc	74		 DB	 116			; 00000074H
  004cd	6c		 DB	 108			; 0000006cH
  004ce	53		 DB	 83			; 00000053H
  004cf	61		 DB	 97			; 00000061H
  004d0	66		 DB	 102			; 00000066H
  004d1	65		 DB	 101			; 00000065H
  004d2	41		 DB	 65			; 00000041H
  004d3	6c		 DB	 108			; 0000006cH
  004d4	6c		 DB	 108			; 0000006cH
  004d5	6f		 DB	 111			; 0000006fH
  004d6	63		 DB	 99			; 00000063H
  004d7	61		 DB	 97			; 00000061H
  004d8	4d		 DB	 77			; 0000004dH
  004d9	61		 DB	 97			; 00000061H
  004da	6e		 DB	 110			; 0000006eH
  004db	61		 DB	 97			; 00000061H
  004dc	67		 DB	 103			; 00000067H
  004dd	65		 DB	 101			; 00000065H
  004de	72		 DB	 114			; 00000072H
  004df	00		 DB	 0
$LN25@UpdateRegi:
  004e0	72		 DB	 114			; 00000072H
  004e1	6f		 DB	 111			; 0000006fH
  004e2	00		 DB	 0
?UpdateRegistryFromResource@CAtlModule@ATL@@QAGJPB_WHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CAtlModule::UpdateRegistryFromResource
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_ppGIT$ = 8						; size = 4
?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z PROC ; ATL::CAtlModule::GetGITPtr, COMDAT
; _this$ = ecx

; 3108 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3109 : 		ATLASSERT(ppGIT != NULL);

  00018	83 7d 08 00	 cmp	 DWORD PTR _ppGIT$[ebp], 0
  0001c	75 26		 jne	 SHORT $LN9@GetGITPtr
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@LENCCAOJ@?$AAp?$AAp?$AAG?$AAI?$AAT?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00028	6a 00		 push	 0
  0002a	68 25 0c 00 00	 push	 3109			; 00000c25H
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00034	6a 02		 push	 2
  00036	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003b	83 c4 18	 add	 esp, 24			; 00000018H
  0003e	83 f8 01	 cmp	 eax, 1
  00041	75 01		 jne	 SHORT $LN9@GetGITPtr
  00043	cc		 int	 3
$LN9@GetGITPtr:

; 3110 : 
; 3111 : 		if (ppGIT == NULL)

  00044	83 7d 08 00	 cmp	 DWORD PTR _ppGIT$[ebp], 0
  00048	75 0a		 jne	 SHORT $LN5@GetGITPtr

; 3112 : 			return E_POINTER;

  0004a	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0004f	e9 9b 00 00 00	 jmp	 $LN1@GetGITPtr
$LN5@GetGITPtr:

; 3113 : 
; 3114 : 		HRESULT hr = S_OK;

  00054	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 3115 : 		if (m_pGIT == NULL)

  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	83 79 28 00	 cmp	 DWORD PTR [ecx+40], 0
  00062	75 27		 jne	 SHORT $LN6@GetGITPtr

; 3116 : 		{
; 3117 : 			hr = ::CoCreateInstance(CLSID_StdGlobalInterfaceTable, NULL, CLSCTX_INPROC_SERVER,

  00064	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00067	83 c2 28	 add	 edx, 40			; 00000028H
  0006a	8b f4		 mov	 esi, esp
  0006c	52		 push	 edx
  0006d	68 00 00 00 00	 push	 OFFSET __GUID_00000146_0000_0000_c000_000000000046
  00072	6a 01		 push	 1
  00074	6a 00		 push	 0
  00076	68 00 00 00 00	 push	 OFFSET _CLSID_StdGlobalInterfaceTable
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoCreateInstance@20
  00081	3b f4		 cmp	 esi, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN6@GetGITPtr:

; 3118 : 				__uuidof(IGlobalInterfaceTable), (void**)&m_pGIT);
; 3119 : 		}
; 3120 : 
; 3121 : 		if (SUCCEEDED(hr))

  0008b	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0008f	7c 5b		 jl	 SHORT $LN7@GetGITPtr
$LN4@GetGITPtr:

; 3122 : 		{
; 3123 : 			ATLASSUME(m_pGIT != NULL);

  00091	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00094	83 78 28 00	 cmp	 DWORD PTR [eax+40], 0
  00098	75 26		 jne	 SHORT $LN2@GetGITPtr
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_1BI@JBLBCKD@?$AAm?$AA_?$AAp?$AAG?$AAI?$AAT?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000a4	6a 00		 push	 0
  000a6	68 33 0c 00 00	 push	 3123			; 00000c33H
  000ab	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000b0	6a 02		 push	 2
  000b2	e8 00 00 00 00	 call	 __CrtDbgReportW
  000b7	83 c4 18	 add	 esp, 24			; 00000018H
  000ba	83 f8 01	 cmp	 eax, 1
  000bd	75 01		 jne	 SHORT $LN2@GetGITPtr
  000bf	cc		 int	 3
$LN2@GetGITPtr:
  000c0	33 d2		 xor	 edx, edx
  000c2	75 cd		 jne	 SHORT $LN4@GetGITPtr

; 3124 : 			*ppGIT = m_pGIT;

  000c4	8b 45 08	 mov	 eax, DWORD PTR _ppGIT$[ebp]
  000c7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ca	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  000cd	89 10		 mov	 DWORD PTR [eax], edx

; 3125 : 			m_pGIT->AddRef();

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000d5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d8	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  000db	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000dd	8b f4		 mov	 esi, esp
  000df	50		 push	 eax
  000e0	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000e3	ff d2		 call	 edx
  000e5	3b f4		 cmp	 esi, esp
  000e7	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN7@GetGITPtr:

; 3126 : 		}
; 3127 : 		return hr;

  000ec	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
$LN1@GetGITPtr:

; 3128 : 	}

  000ef	5e		 pop	 esi
  000f0	83 c4 08	 add	 esp, 8
  000f3	3b ec		 cmp	 ebp, esp
  000f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fa	8b e5		 mov	 esp, ebp
  000fc	5d		 pop	 ebp
  000fd	c2 04 00	 ret	 4
?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z ENDP ; ATL::CAtlModule::GetGITPtr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AddTermFunc@CAtlModule@ATL@@QAEJP6GXK@ZK@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_this$ = -4						; size = 4
_pFunc$ = 8						; size = 4
_dw$ = 12						; size = 4
?AddTermFunc@CAtlModule@ATL@@QAEJP6GXK@ZK@Z PROC	; ATL::CAtlModule::AddTermFunc, COMDAT
; _this$ = ecx

; 3103 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3104 : 		return AtlModuleAddTermFunc(this, pFunc, dw);

  00017	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001b	74 0b		 je	 SHORT $LN3@AddTermFun
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	83 c0 04	 add	 eax, 4
  00023	89 45 f8	 mov	 DWORD PTR tv71[ebp], eax
  00026	eb 07		 jmp	 SHORT $LN4@AddTermFun
$LN3@AddTermFun:
  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN4@AddTermFun:
  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR _dw$[ebp]
  00032	51		 push	 ecx
  00033	8b 55 08	 mov	 edx, DWORD PTR _pFunc$[ebp]
  00036	52		 push	 edx
  00037	8b 45 f8	 mov	 eax, DWORD PTR tv71[ebp]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE70@1@P6GXK@ZK@Z ; ATL::AtlModuleAddTermFunc

; 3105 : 	}

  00040	83 c4 08	 add	 esp, 8
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 08 00	 ret	 8
?AddTermFunc@CAtlModule@ATL@@QAEJP6GXK@ZK@Z ENDP	; ATL::CAtlModule::AddTermFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?GetLockCount@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLockCount@CAtlModule@ATL@@UAEJXZ PROC		; ATL::CAtlModule::GetLockCount, COMDAT
; _this$ = ecx

; 3096 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3097 : 		return m_nLockCnt;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 3098 : 	}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetLockCount@CAtlModule@ATL@@UAEJXZ ENDP		; ATL::CAtlModule::GetLockCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Unlock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Unlock@CAtlModule@ATL@@UAEJXZ PROC			; ATL::CAtlModule::Unlock, COMDAT
; _this$ = ecx

; 3091 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3092 : 		return CComGlobalsThreadModel::Decrement(&m_nLockCnt);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 08	 add	 eax, 8
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z ; ATL::CComMultiThreadModel::Decrement

; 3093 : 	}

  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?Unlock@CAtlModule@ATL@@UAEJXZ ENDP			; ATL::CAtlModule::Unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Lock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Lock@CAtlModule@ATL@@UAEJXZ PROC			; ATL::CAtlModule::Lock, COMDAT
; _this$ = ecx

; 3086 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3087 : 		return CComGlobalsThreadModel::Increment(&m_nLockCnt);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 08	 add	 eax, 8
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z ; ATL::CComMultiThreadModel::Increment

; 3088 : 	}

  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?Lock@CAtlModule@ATL@@UAEJXZ ENDP			; ATL::CAtlModule::Lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlModule@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAtlModule@ATL@@UAE@XZ PROC				; ATL::CAtlModule::~CAtlModule, COMDAT
; _this$ = ecx

; 3081 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3082 : 		Term();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?Term@CAtlModule@ATL@@QAEXXZ ; ATL::CAtlModule::Term

; 3083 : 	}

  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 04	 add	 ecx, 4
  0001c	e8 00 00 00 00	 call	 ??1_ATL_MODULE70@ATL@@QAE@XZ
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
??1CAtlModule@ATL@@UAE@XZ ENDP				; ATL::CAtlModule::~CAtlModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlModule@ATL@@QAEXXZ
_TEXT	SEGMENT
tv80 = -8						; size = 4
_this$ = -4						; size = 4
?Term@CAtlModule@ATL@@QAEXXZ PROC			; ATL::CAtlModule::Term, COMDAT
; _this$ = ecx

; 3060 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3061 : 		// cbSize == 0 indicates that Term has already been called
; 3062 : 		if (cbSize == 0)

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001f	75 02		 jne	 SHORT $LN2@Term

; 3063 : 			return;

  00021	eb 6f		 jmp	 SHORT $LN1@Term
$LN2@Term:

; 3064 : 
; 3065 : 		// Call term functions
; 3066 : 		if (m_pTermFuncs != NULL)

  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  0002a	74 2b		 je	 SHORT $LN3@Term

; 3067 : 		{
; 3068 : 			AtlCallTermFunc(this);

  0002c	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  00030	74 0b		 je	 SHORT $LN6@Term
  00032	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00035	83 c2 04	 add	 edx, 4
  00038	89 55 f8	 mov	 DWORD PTR tv80[ebp], edx
  0003b	eb 07		 jmp	 SHORT $LN7@Term
$LN6@Term:
  0003d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN7@Term:
  00044	8b 45 f8	 mov	 eax, DWORD PTR tv80[ebp]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z ; ATL::AtlCallTermFunc

; 3069 : 			m_pTermFuncs = NULL;

  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
$LN3@Term:

; 3070 : 		}
; 3071 : 
; 3072 : 		if (m_pGIT != NULL)

  00057	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005a	83 7a 28 00	 cmp	 DWORD PTR [edx+40], 0
  0005e	74 1d		 je	 SHORT $LN4@Term

; 3073 : 			m_pGIT->Release();

  00060	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00066	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00069	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  0006c	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0006e	8b f4		 mov	 esi, esp
  00070	50		 push	 eax
  00071	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00074	ff d2		 call	 edx
  00076	3b f4		 cmp	 esi, esp
  00078	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@Term:

; 3074 : 
; 3075 : 		m_csStaticDataInitAndTypeInfo.Term();

  0007d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	83 c1 10	 add	 ecx, 16			; 00000010H
  00083	e8 00 00 00 00	 call	 ?Term@CComCriticalSection@ATL@@QAEJXZ ; ATL::CComCriticalSection::Term

; 3076 : 
; 3077 : 		cbSize = 0;

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN1@Term:

; 3078 : 	}

  00092	5e		 pop	 esi
  00093	83 c4 08	 add	 esp, 8
  00096	3b ec		 cmp	 ebp, esp
  00098	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c3		 ret	 0
?Term@CAtlModule@ATL@@QAEXXZ ENDP			; ATL::CAtlModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlModule@ATL@@QAE@XZ
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
??0CAtlModule@ATL@@QAE@XZ PROC				; ATL::CAtlModule::CAtlModule, COMDAT
; _this$ = ecx

; 3035 : 	CAtlModule() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 04	 add	 ecx, 4
  00024	e8 00 00 00 00	 call	 ??0_ATL_MODULE70@ATL@@QAE@XZ

; 3036 : 	{
; 3037 : 		// Should have only one instance of a class
; 3038 : 		// derived from CAtlModule in a project.
; 3039 : 		ATLASSERT(_pAtlModule == NULL);

  00029	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A, 0 ; ATL::_pAtlModule
  00030	74 26		 je	 SHORT $LN4@CAtlModule
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_1CC@DNHFMIHP@?$AA_?$AAp?$AAA?$AAt?$AAl?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5@
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0003c	6a 00		 push	 0
  0003e	68 df 0b 00 00	 push	 3039			; 00000bdfH
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00048	6a 02		 push	 2
  0004a	e8 00 00 00 00	 call	 __CrtDbgReportW
  0004f	83 c4 18	 add	 esp, 24			; 00000018H
  00052	83 f8 01	 cmp	 eax, 1
  00055	75 01		 jne	 SHORT $LN4@CAtlModule
  00057	cc		 int	 3
$LN4@CAtlModule:

; 3040 : 		cbSize = 0;

  00058	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 3041 : 		m_pTermFuncs = NULL;

  00062	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00065	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 3042 : 
; 3043 : 		m_nLockCnt = 0;

  0006c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 3044 : 		_pAtlModule = this;

  00076	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	89 0d 00 00 00
	00		 mov	 DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A, ecx ; ATL::_pAtlModule

; 3045 : 		m_pGIT = NULL;

  0007f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00082	c7 42 28 00 00
	00 00		 mov	 DWORD PTR [edx+40], 0

; 3046 : 
; 3047 : 		if (FAILED(m_csStaticDataInitAndTypeInfo.Init()))

  00089	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	83 c1 10	 add	 ecx, 16			; 00000010H
  0008f	e8 00 00 00 00	 call	 ?Init@CComCriticalSection@ATL@@QAEJXZ ; ATL::CComCriticalSection::Init
  00094	85 c0		 test	 eax, eax
  00096	7d 60		 jge	 SHORT $LN2@CAtlModule

; 3048 : 		{
; 3049 : 			ATLTRACE(atlTraceGeneral, 0, _T("ERROR : Unable to initialize critical section in CAtlModule\n"));

  00098	68 00 00 00 00	 push	 OFFSET ??_C@_1HK@DFMOIGDB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
  0009d	6a 00		 push	 0
  0009f	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
  000a4	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$00$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<1,0>::operator unsigned int
  000a9	50		 push	 eax
  000aa	68 e9 0b 00 00	 push	 3049			; 00000be9H
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000b4	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  000b7	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000c2	83 c4 10	 add	 esp, 16			; 00000010H

; 3050 : 			ATLASSERT(0);

  000c5	33 c0		 xor	 eax, eax
  000c7	75 26		 jne	 SHORT $LN5@CAtlModule
  000c9	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000d3	6a 00		 push	 0
  000d5	68 ea 0b 00 00	 push	 3050			; 00000beaH
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000df	6a 02		 push	 2
  000e1	e8 00 00 00 00	 call	 __CrtDbgReportW
  000e6	83 c4 18	 add	 esp, 24			; 00000018H
  000e9	83 f8 01	 cmp	 eax, 1
  000ec	75 01		 jne	 SHORT $LN5@CAtlModule
  000ee	cc		 int	 3
$LN5@CAtlModule:

; 3051 : 			CAtlBaseModule::m_bInitFailed = true;

  000ef	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 3052 : 			return;

  000f6	eb 0a		 jmp	 SHORT $LN1@CAtlModule
$LN2@CAtlModule:

; 3053 : 		}
; 3054 : 
; 3055 : 		// Set cbSize on success.
; 3056 : 		cbSize = sizeof(_ATL_MODULE);

  000f8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000fb	c7 42 04 24 00
	00 00		 mov	 DWORD PTR [edx+4], 36	; 00000024H
$LN1@CAtlModule:

; 3057 : 	}

  00102	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00105	83 c4 0c	 add	 esp, 12			; 0000000cH
  00108	3b ec		 cmp	 ebp, esp
  0010a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010f	8b e5		 mov	 esp, ebp
  00111	5d		 pop	 ebp
  00112	c3		 ret	 0
??0CAtlModule@ATL@@QAE@XZ ENDP				; ATL::CAtlModule::CAtlModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F_AtlWinModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlWinModule'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  00008	e8 00 00 00 00	 call	 ??1CAtlWinModule@ATL@@QAE@XZ ; ATL::CAtlWinModule::~CAtlWinModule
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??__F_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlWinModule''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlWinModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlWinModule'', COMDAT

; 2972 : __declspec(selectany) CAtlWinModule _AtlWinModule;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  00008	e8 00 00 00 00	 call	 ??0CAtlWinModule@ATL@@QAE@XZ ; ATL::CAtlWinModule::CAtlWinModule
  0000d	68 00 00 00 00	 push	 OFFSET ??__F_AtlWinModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlWinModule''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	3b ec		 cmp	 ebp, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??__E_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlWinModule''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?ExtractCreateWndData@CAtlWinModule@ATL@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ExtractCreateWndData@CAtlWinModule@ATL@@QAEPAXXZ PROC	; ATL::CAtlWinModule::ExtractCreateWndData, COMDAT
; _this$ = ecx

; 2966 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2967 : 		return AtlWinModuleExtractCreateWndData(this);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?AtlWinModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleExtractCreateWndData

; 2968 : 	}

  00017	83 c4 04	 add	 esp, 4
  0001a	3b ec		 cmp	 ebp, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?ExtractCreateWndData@CAtlWinModule@ATL@@QAEPAXXZ ENDP	; ATL::CAtlWinModule::ExtractCreateWndData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AddCreateWndData@CAtlWinModule@ATL@@QAEXPAU_AtlCreateWndData@2@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_pObject$ = 12						; size = 4
?AddCreateWndData@CAtlWinModule@ATL@@QAEXPAU_AtlCreateWndData@2@PAX@Z PROC ; ATL::CAtlWinModule::AddCreateWndData, COMDAT
; _this$ = ecx

; 2961 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2962 : 		AtlWinModuleAddCreateWndData(this, pData, pObject);

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _pObject$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _pData$[ebp]
  00015	51		 push	 ecx
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	52		 push	 edx
  0001a	e8 00 00 00 00	 call	 ?AtlWinModuleAddCreateWndData@ATL@@YGXPAU_ATL_WIN_MODULE70@1@PAU_AtlCreateWndData@1@PAX@Z ; ATL::AtlWinModuleAddCreateWndData

; 2963 : 	}

  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?AddCreateWndData@CAtlWinModule@ATL@@QAEXPAU_AtlCreateWndData@2@PAX@Z ENDP ; ATL::CAtlWinModule::AddCreateWndData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlWinModule@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Term@CAtlWinModule@ATL@@QAEXXZ PROC			; ATL::CAtlWinModule::Term, COMDAT
; _this$ = ecx

; 2956 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2957 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A ; ATL::_AtlBaseModule
  00013	e8 00 00 00 00	 call	 ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
  00018	50		 push	 eax
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm

; 2958 : 	}

  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?Term@CAtlWinModule@ATL@@QAEXXZ ENDP			; ATL::CAtlWinModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAtlWinModule@ATL@@QAE@XZ PROC			; ATL::CAtlWinModule::~CAtlWinModule, COMDAT
; _this$ = ecx

; 2951 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2952 : 		Term();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?Term@CAtlWinModule@ATL@@QAEXXZ ; ATL::CAtlWinModule::Term

; 2953 : 	}

  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::~CAtlWinModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
??0CAtlWinModule@ATL@@QAE@XZ PROC			; ATL::CAtlWinModule::CAtlWinModule, COMDAT
; _this$ = ecx

; 2937 : 	CAtlWinModule()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ??0_ATL_WIN_MODULE70@ATL@@QAE@XZ

; 2938 : 	{
; 2939 : 		cbSize = sizeof(_ATL_WIN_MODULE);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 00 2c 00 00
	00		 mov	 DWORD PTR [eax], 44	; 0000002cH

; 2940 : 		HRESULT hr = AtlWinModuleInit(this);

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	51		 push	 ecx
  0002c	e8 00 00 00 00	 call	 ?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
  00031	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 2941 : 		if (FAILED(hr))

  00034	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00038	7d 3a		 jge	 SHORT $LN1@CAtlWinMod

; 2942 : 		{
; 2943 : 			ATLASSERT(0);

  0003a	33 d2		 xor	 edx, edx
  0003c	75 26		 jne	 SHORT $LN4@CAtlWinMod
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00048	6a 00		 push	 0
  0004a	68 7f 0b 00 00	 push	 2943			; 00000b7fH
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00054	6a 02		 push	 2
  00056	e8 00 00 00 00	 call	 __CrtDbgReportW
  0005b	83 c4 18	 add	 esp, 24			; 00000018H
  0005e	83 f8 01	 cmp	 eax, 1
  00061	75 01		 jne	 SHORT $LN4@CAtlWinMod
  00063	cc		 int	 3
$LN4@CAtlWinMod:

; 2944 : 			CAtlBaseModule::m_bInitFailed = true;

  00064	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2945 : 			cbSize = 0;

  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$LN1@CAtlWinMod:

; 2946 : 			return;
; 2947 : 		}
; 2948 : 	}

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	83 c4 08	 add	 esp, 8
  0007a	3b ec		 cmp	 ebp, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c3		 ret	 0
??0CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::CAtlWinModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F_AtlComModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlComModule'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  00008	e8 00 00 00 00	 call	 ??1CAtlComModule@ATL@@QAE@XZ ; ATL::CAtlComModule::~CAtlComModule
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??__F_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlComModule''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlComModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlComModule'', COMDAT

; 2716 : __declspec(selectany) CAtlComModule _AtlComModule;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  00008	e8 00 00 00 00	 call	 ??0CAtlComModule@ATL@@QAE@XZ ; ATL::CAtlComModule::CAtlComModule
  0000d	68 00 00 00 00	 push	 OFFSET ??__F_AtlComModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlComModule''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	3b ec		 cmp	 ebp, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??__E_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlComModule''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?UnregisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bRegTypeLib$ = 8					; size = 4
_pCLSID$ = 12						; size = 4
?UnregisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z PROC ; ATL::CAtlComModule::UnregisterServer, COMDAT
; _this$ = ecx

; 2696 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2697 : 		return AtlComModuleUnregisterServer(this, bRegTypeLib, pCLSID);

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _pCLSID$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _bRegTypeLib$[ebp]
  00015	51		 push	 ecx
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	52		 push	 edx
  0001a	e8 00 00 00 00	 call	 ?AtlComModuleUnregisterServer@ATL@@YGJPAU_ATL_COM_MODULE70@1@HPBU_GUID@@@Z ; ATL::AtlComModuleUnregisterServer

; 2698 : 	}

  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?UnregisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z ENDP ; ATL::CAtlComModule::UnregisterServer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?RegisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bRegTypeLib$ = 8					; size = 4
_pCLSID$ = 12						; size = 4
?RegisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z PROC ; ATL::CAtlComModule::RegisterServer, COMDAT
; _this$ = ecx

; 2686 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2687 : 		return AtlComModuleRegisterServer(this, bRegTypeLib, pCLSID);

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _pCLSID$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _bRegTypeLib$[ebp]
  00015	51		 push	 ecx
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	52		 push	 edx
  0001a	e8 00 00 00 00	 call	 ?AtlComModuleRegisterServer@ATL@@YGJPAU_ATL_COM_MODULE70@1@HPBU_GUID@@@Z ; ATL::AtlComModuleRegisterServer

; 2688 : 	}

  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?RegisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z ENDP ; ATL::CAtlComModule::RegisterServer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlComModule@ATL@@QAEXXZ
_TEXT	SEGMENT
_factory$1 = -16					; size = 4
_pCache$2 = -12						; size = 4
_ppEntry$3 = -8						; size = 4
_this$ = -4						; size = 4
?Term@CAtlComModule@ATL@@QAEXXZ PROC			; ATL::CAtlComModule::Term, COMDAT
; _this$ = ecx

; 2613 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2614 : 		if (cbSize == 0)

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 38 00	 cmp	 DWORD PTR [eax], 0
  00021	75 05		 jne	 SHORT $LN5@Term

; 2615 : 			return;

  00023	e9 88 00 00 00	 jmp	 $LN1@Term
$LN5@Term:

; 2616 : 
; 2617 : 		for (_ATL_OBJMAP_ENTRY_EX** ppEntry = m_ppAutoObjMapFirst; ppEntry < m_ppAutoObjMapLast; ppEntry++)

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002e	89 55 f8	 mov	 DWORD PTR _ppEntry$3[ebp], edx
  00031	eb 09		 jmp	 SHORT $LN4@Term
$LN2@Term:
  00033	8b 45 f8	 mov	 eax, DWORD PTR _ppEntry$3[ebp]
  00036	83 c0 04	 add	 eax, 4
  00039	89 45 f8	 mov	 DWORD PTR _ppEntry$3[ebp], eax
$LN4@Term:
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 55 f8	 mov	 edx, DWORD PTR _ppEntry$3[ebp]
  00042	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00045	73 55		 jae	 SHORT $LN3@Term

; 2618 : 		{
; 2619 : 			if (*ppEntry != NULL)

  00047	8b 45 f8	 mov	 eax, DWORD PTR _ppEntry$3[ebp]
  0004a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0004d	74 4b		 je	 SHORT $LN6@Term

; 2620 : 			{
; 2621 : 				_ATL_OBJMAP_CACHE* pCache = (**ppEntry).pCache;

  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _ppEntry$3[ebp]
  00052	8b 11		 mov	 edx, DWORD PTR [ecx]
  00054	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00057	89 45 f4	 mov	 DWORD PTR _pCache$2[ebp], eax

; 2622 : 
; 2623 : 				if (pCache->pCF != NULL)

  0005a	8b 4d f4	 mov	 ecx, DWORD PTR _pCache$2[ebp]
  0005d	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00060	74 38		 je	 SHORT $LN6@Term

; 2624 : 				{
; 2625 : 					// Decode factory pointer if it's not null
; 2626 : 					IUnknown *factory = reinterpret_cast<IUnknown*>(::DecodePointer(pCache->pCF));

  00062	8b f4		 mov	 esi, esp
  00064	8b 55 f4	 mov	 edx, DWORD PTR _pCache$2[ebp]
  00067	8b 02		 mov	 eax, DWORD PTR [edx]
  00069	50		 push	 eax
  0006a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DecodePointer@4
  00070	3b f4		 cmp	 esi, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	89 45 f0	 mov	 DWORD PTR _factory$1[ebp], eax

; 2627 : 					_Analysis_assume_(factory != nullptr);
; 2628 : 					factory->Release();

  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _factory$1[ebp]
  0007d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007f	8b f4		 mov	 esi, esp
  00081	8b 45 f0	 mov	 eax, DWORD PTR _factory$1[ebp]
  00084	50		 push	 eax
  00085	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00088	ff d1		 call	 ecx
  0008a	3b f4		 cmp	 esi, esp
  0008c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2629 : 					pCache->pCF = NULL;

  00091	8b 55 f4	 mov	 edx, DWORD PTR _pCache$2[ebp]
  00094	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
$LN6@Term:

; 2630 : 				}
; 2631 : 			}
; 2632 : 		}

  0009a	eb 97		 jmp	 SHORT $LN2@Term
$LN3@Term:

; 2633 : 		m_csObjMap.Term();

  0009c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	83 c1 10	 add	 ecx, 16			; 00000010H
  000a2	e8 00 00 00 00	 call	 ?Term@CComCriticalSection@ATL@@QAEJXZ ; ATL::CComCriticalSection::Term

; 2634 : 		// Set to 0 to indicate that this function has been called
; 2635 : 		// At this point no one should be concerned about cbsize
; 2636 : 		// having the correct value
; 2637 : 		cbSize = 0;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN1@Term:

; 2638 : 	}

  000b0	5e		 pop	 esi
  000b1	83 c4 10	 add	 esp, 16			; 00000010H
  000b4	3b ec		 cmp	 ebp, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c3		 ret	 0
?Term@CAtlComModule@ATL@@QAEXXZ ENDP			; ATL::CAtlComModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlComModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAtlComModule@ATL@@QAE@XZ PROC			; ATL::CAtlComModule::~CAtlComModule, COMDAT
; _this$ = ecx

; 2607 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2608 : 		Term();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?Term@CAtlComModule@ATL@@QAEXXZ ; ATL::CAtlComModule::Term

; 2609 : 	}

  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1_ATL_COM_MODULE70@ATL@@QAE@XZ
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1CAtlComModule@ATL@@QAE@XZ ENDP			; ATL::CAtlComModule::~CAtlComModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlComModule@ATL@@QAE@XZ
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
??0CAtlComModule@ATL@@QAE@XZ PROC			; ATL::CAtlComModule::CAtlComModule, COMDAT
; _this$ = ecx

; 2586 : 	CAtlComModule() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ??0_ATL_COM_MODULE70@ATL@@QAE@XZ

; 2587 : 	{
; 2588 : 		cbSize = 0;

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 2589 : 
; 2590 : 		m_hInstTypeLib = reinterpret_cast<HINSTANCE>(&__ImageBase);

  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ___ImageBase

; 2591 : 
; 2592 : 		m_ppAutoObjMapFirst = &__pobjMapEntryFirst + 1;

  00039	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003c	c7 42 08 04 00
	00 00		 mov	 DWORD PTR [edx+8], OFFSET ___pobjMapEntryFirst+4

; 2593 : 		m_ppAutoObjMapLast = &__pobjMapEntryLast;

  00043	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00046	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ___pobjMapEntryLast

; 2594 : 
; 2595 : 		if (FAILED(m_csObjMap.Init()))

  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	83 c1 10	 add	 ecx, 16			; 00000010H
  00053	e8 00 00 00 00	 call	 ?Init@CComCriticalSection@ATL@@QAEJXZ ; ATL::CComCriticalSection::Init
  00058	85 c0		 test	 eax, eax
  0005a	7d 60		 jge	 SHORT $LN2@CAtlComMod

; 2596 : 		{
; 2597 : 			ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to initialize critical section in CAtlComModule\n"));

  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
  00061	6a 00		 push	 0
  00063	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00068	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  0006d	50		 push	 eax
  0006e	68 25 0a 00 00	 push	 2597			; 00000a25H
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00078	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  0007b	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00086	83 c4 10	 add	 esp, 16			; 00000010H

; 2598 : 			ATLASSERT(0);

  00089	33 c9		 xor	 ecx, ecx
  0008b	75 26		 jne	 SHORT $LN4@CAtlComMod
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00097	6a 00		 push	 0
  00099	68 26 0a 00 00	 push	 2598			; 00000a26H
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a3	6a 02		 push	 2
  000a5	e8 00 00 00 00	 call	 __CrtDbgReportW
  000aa	83 c4 18	 add	 esp, 24			; 00000018H
  000ad	83 f8 01	 cmp	 eax, 1
  000b0	75 01		 jne	 SHORT $LN4@CAtlComMod
  000b2	cc		 int	 3
$LN4@CAtlComMod:

; 2599 : 			CAtlBaseModule::m_bInitFailed = true;

  000b3	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2600 : 			return;

  000ba	eb 09		 jmp	 SHORT $LN1@CAtlComMod
$LN2@CAtlComMod:

; 2601 : 		}
; 2602 : 		// Set cbSize on success.
; 2603 : 		cbSize = sizeof(_ATL_COM_MODULE);

  000bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	c7 00 28 00 00
	00		 mov	 DWORD PTR [eax], 40	; 00000028H
$LN1@CAtlComMod:

; 2604 : 	}

  000c5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000cb	3b ec		 cmp	 ebp, esp
  000cd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c3		 ret	 0
??0CAtlComModule@ATL@@QAE@XZ ENDP			; ATL::CAtlComModule::CAtlComModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?DeleteValue@CRegKey@ATL@@QAEJPB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszValue$ = 8						; size = 4
?DeleteValue@CRegKey@ATL@@QAEJPB_W@Z PROC		; ATL::CRegKey::DeleteValue, COMDAT
; _this$ = ecx

; 5796 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@DeleteValu:

; 5797 : 	ATLASSUME(m_hKey != NULL);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	75 26		 jne	 SHORT $LN2@DeleteValu
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_1BI@KCHMLGAI@?$AAm?$AA_?$AAh?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00021	6a 00		 push	 0
  00023	68 a5 16 00 00	 push	 5797			; 000016a5H
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002d	6a 02		 push	 2
  0002f	e8 00 00 00 00	 call	 __CrtDbgReportW
  00034	83 c4 18	 add	 esp, 24			; 00000018H
  00037	83 f8 01	 cmp	 eax, 1
  0003a	75 01		 jne	 SHORT $LN2@DeleteValu
  0003c	cc		 int	 3
$LN2@DeleteValu:
  0003d	33 d2		 xor	 edx, edx
  0003f	75 ce		 jne	 SHORT $LN4@DeleteValu

; 5798 : 	return RegDeleteValue(m_hKey, (LPTSTR)lpszValue);

  00041	8b f4		 mov	 esi, esp
  00043	8b 45 08	 mov	 eax, DWORD PTR _lpszValue$[ebp]
  00046	50		 push	 eax
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004c	52		 push	 edx
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegDeleteValueW@8
  00053	3b f4		 cmp	 esi, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 5799 : }

  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?DeleteValue@CRegKey@ATL@@QAEJPB_W@Z ENDP		; ATL::CRegKey::DeleteValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPB_W@Z
_TEXT	SEGMENT
$T1 = -600						; size = 4
$T2 = -596						; size = 4
$T3 = -592						; size = 4
$T4 = -588						; size = 8
_szBuffer$ = -576					; size = 512
_dwSize$ = -56						; size = 4
_time$ = -44						; size = 8
_lRes$ = -32						; size = 4
_key$ = -24						; size = 12
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpszKey$ = 8						; size = 4
?RecurseDeleteKey@CRegKey@ATL@@QAEJPB_W@Z PROC		; ATL::CRegKey::RecurseDeleteKey, COMDAT
; _this$ = ecx

; 6338 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 58 02 00
	00		 sub	 esp, 600		; 00000258H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd a8 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-600]
  00012	b9 96 00 00 00	 mov	 ecx, 150		; 00000096H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 6339 : 	CRegKey key;

  0002c	6a 00		 push	 0
  0002e	8d 4d e8	 lea	 ecx, DWORD PTR _key$[ebp]
  00031	e8 00 00 00 00	 call	 ??0CRegKey@ATL@@QAE@PAVCAtlTransactionManager@1@@Z ; ATL::CRegKey::CRegKey

; 6340 : 	LONG lRes = key.Open(m_hKey, lpszKey, KEY_READ | KEY_WRITE | m_samWOW64);

  00036	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00039	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003c	81 c9 1f 00 02
	00		 or	 ecx, 131103		; 0002001fH
  00042	51		 push	 ecx
  00043	8b 55 08	 mov	 edx, DWORD PTR _lpszKey$[ebp]
  00046	52		 push	 edx
  00047	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	51		 push	 ecx
  0004d	8d 4d e8	 lea	 ecx, DWORD PTR _key$[ebp]
  00050	e8 00 00 00 00	 call	 ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PB_WK@Z ; ATL::CRegKey::Open
  00055	89 45 e0	 mov	 DWORD PTR _lRes$[ebp], eax

; 6341 : 	if (lRes != ERROR_SUCCESS)

  00058	83 7d e0 00	 cmp	 DWORD PTR _lRes$[ebp], 0
  0005c	74 60		 je	 SHORT $LN4@RecurseDel

; 6342 : 	{
; 6343 : 		if (lRes != ERROR_FILE_NOT_FOUND && lRes != ERROR_PATH_NOT_FOUND)

  0005e	83 7d e0 02	 cmp	 DWORD PTR _lRes$[ebp], 2
  00062	74 3e		 je	 SHORT $LN5@RecurseDel
  00064	83 7d e0 03	 cmp	 DWORD PTR _lRes$[ebp], 3
  00068	74 38		 je	 SHORT $LN5@RecurseDel

; 6344 : 		{
; 6345 : 			ATLTRACE(atlTraceCOM, 0, _T("CRegKey::RecurseDeleteKey : Failed to Open Key %Ts(Error = %d)\n"), lpszKey, lRes);

  0006a	8b 55 e0	 mov	 edx, DWORD PTR _lRes$[ebp]
  0006d	52		 push	 edx
  0006e	8b 45 08	 mov	 eax, DWORD PTR _lpszKey$[ebp]
  00071	50		 push	 eax
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_1IA@CIKBLAHF@?$AAC?$AAR?$AAe?$AAg?$AAK?$AAe?$AAy?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAu?$AAr?$AAs@
  00077	6a 00		 push	 0
  00079	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  0007e	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00083	50		 push	 eax
  00084	68 c9 18 00 00	 push	 6345			; 000018c9H
  00089	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0008e	8d 8d b4 fd ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00094	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  0009f	83 c4 18	 add	 esp, 24			; 00000018H
$LN5@RecurseDel:

; 6346 : 		}
; 6347 : 		return lRes;

  000a2	8b 4d e0	 mov	 ecx, DWORD PTR _lRes$[ebp]
  000a5	89 8d b0 fd ff
	ff		 mov	 DWORD PTR $T3[ebp], ecx
  000ab	8d 4d e8	 lea	 ecx, DWORD PTR _key$[ebp]
  000ae	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  000b3	8b 85 b0 fd ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  000b9	e9 97 00 00 00	 jmp	 $LN1@RecurseDel
$LN4@RecurseDel:

; 6348 : 	}
; 6349 : 	FILETIME time;
; 6350 : 	DWORD dwSize = 256;

  000be	c7 45 c8 00 01
	00 00		 mov	 DWORD PTR _dwSize$[ebp], 256 ; 00000100H
$LN2@RecurseDel:

; 6351 : 	TCHAR szBuffer[256];
; 6352 : 	while (RegEnumKeyEx(key.m_hKey, 0, szBuffer, &dwSize, NULL, NULL, NULL,
; 6353 : 		&time)==ERROR_SUCCESS)

  000c5	8b f4		 mov	 esi, esp
  000c7	8d 55 d4	 lea	 edx, DWORD PTR _time$[ebp]
  000ca	52		 push	 edx
  000cb	6a 00		 push	 0
  000cd	6a 00		 push	 0
  000cf	6a 00		 push	 0
  000d1	8d 45 c8	 lea	 eax, DWORD PTR _dwSize$[ebp]
  000d4	50		 push	 eax
  000d5	8d 8d c0 fd ff
	ff		 lea	 ecx, DWORD PTR _szBuffer$[ebp]
  000db	51		 push	 ecx
  000dc	6a 00		 push	 0
  000de	8b 55 e8	 mov	 edx, DWORD PTR _key$[ebp]
  000e1	52		 push	 edx
  000e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegEnumKeyExW@32
  000e8	3b f4		 cmp	 esi, esp
  000ea	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ef	85 c0		 test	 eax, eax
  000f1	75 3a		 jne	 SHORT $LN3@RecurseDel

; 6354 : 	{
; 6355 : 		lRes = key.RecurseDeleteKey(szBuffer);

  000f3	8d 85 c0 fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  000f9	50		 push	 eax
  000fa	8d 4d e8	 lea	 ecx, DWORD PTR _key$[ebp]
  000fd	e8 00 00 00 00	 call	 ?RecurseDeleteKey@CRegKey@ATL@@QAEJPB_W@Z ; ATL::CRegKey::RecurseDeleteKey
  00102	89 45 e0	 mov	 DWORD PTR _lRes$[ebp], eax

; 6356 : 		if (lRes != ERROR_SUCCESS)

  00105	83 7d e0 00	 cmp	 DWORD PTR _lRes$[ebp], 0
  00109	74 19		 je	 SHORT $LN6@RecurseDel

; 6357 : 			return lRes;

  0010b	8b 4d e0	 mov	 ecx, DWORD PTR _lRes$[ebp]
  0010e	89 8d ac fd ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  00114	8d 4d e8	 lea	 ecx, DWORD PTR _key$[ebp]
  00117	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  0011c	8b 85 ac fd ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00122	eb 31		 jmp	 SHORT $LN1@RecurseDel
$LN6@RecurseDel:

; 6358 : 		dwSize = 256;

  00124	c7 45 c8 00 01
	00 00		 mov	 DWORD PTR _dwSize$[ebp], 256 ; 00000100H

; 6359 : 	}

  0012b	eb 98		 jmp	 SHORT $LN2@RecurseDel
$LN3@RecurseDel:

; 6360 : 	key.Close();

  0012d	8d 4d e8	 lea	 ecx, DWORD PTR _key$[ebp]
  00130	e8 00 00 00 00	 call	 ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close

; 6361 : 	return DeleteSubKey(lpszKey);

  00135	8b 55 08	 mov	 edx, DWORD PTR _lpszKey$[ebp]
  00138	52		 push	 edx
  00139	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013c	e8 00 00 00 00	 call	 ?DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z ; ATL::CRegKey::DeleteSubKey
  00141	89 85 a8 fd ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00147	8d 4d e8	 lea	 ecx, DWORD PTR _key$[ebp]
  0014a	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  0014f	8b 85 a8 fd ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
$LN1@RecurseDel:

; 6362 : }

  00155	52		 push	 edx
  00156	8b cd		 mov	 ecx, ebp
  00158	50		 push	 eax
  00159	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@RecurseDel
  0015f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00164	58		 pop	 eax
  00165	5a		 pop	 edx
  00166	5f		 pop	 edi
  00167	5e		 pop	 esi
  00168	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0016b	33 cd		 xor	 ecx, ebp
  0016d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00172	81 c4 58 02 00
	00		 add	 esp, 600		; 00000258H
  00178	3b ec		 cmp	 ebp, esp
  0017a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0017f	8b e5		 mov	 esp, ebp
  00181	5d		 pop	 ebp
  00182	c2 04 00	 ret	 4
  00185	0f 1f 00	 npad	 3
$LN13@RecurseDel:
  00188	04 00 00 00	 DD	 4
  0018c	00 00 00 00	 DD	 $LN12@RecurseDel
$LN12@RecurseDel:
  00190	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00194	0c 00 00 00	 DD	 12			; 0000000cH
  00198	00 00 00 00	 DD	 $LN8@RecurseDel
  0019c	d4 ff ff ff	 DD	 -44			; ffffffd4H
  001a0	08 00 00 00	 DD	 8
  001a4	00 00 00 00	 DD	 $LN9@RecurseDel
  001a8	c8 ff ff ff	 DD	 -56			; ffffffc8H
  001ac	04 00 00 00	 DD	 4
  001b0	00 00 00 00	 DD	 $LN10@RecurseDel
  001b4	c0 fd ff ff	 DD	 -576			; fffffdc0H
  001b8	00 02 00 00	 DD	 512			; 00000200H
  001bc	00 00 00 00	 DD	 $LN11@RecurseDel
$LN11@RecurseDel:
  001c0	73		 DB	 115			; 00000073H
  001c1	7a		 DB	 122			; 0000007aH
  001c2	42		 DB	 66			; 00000042H
  001c3	75		 DB	 117			; 00000075H
  001c4	66		 DB	 102			; 00000066H
  001c5	66		 DB	 102			; 00000066H
  001c6	65		 DB	 101			; 00000065H
  001c7	72		 DB	 114			; 00000072H
  001c8	00		 DB	 0
$LN10@RecurseDel:
  001c9	64		 DB	 100			; 00000064H
  001ca	77		 DB	 119			; 00000077H
  001cb	53		 DB	 83			; 00000053H
  001cc	69		 DB	 105			; 00000069H
  001cd	7a		 DB	 122			; 0000007aH
  001ce	65		 DB	 101			; 00000065H
  001cf	00		 DB	 0
$LN9@RecurseDel:
  001d0	74		 DB	 116			; 00000074H
  001d1	69		 DB	 105			; 00000069H
  001d2	6d		 DB	 109			; 0000006dH
  001d3	65		 DB	 101			; 00000065H
  001d4	00		 DB	 0
$LN8@RecurseDel:
  001d5	6b		 DB	 107			; 0000006bH
  001d6	65		 DB	 101			; 00000065H
  001d7	79		 DB	 121			; 00000079H
  001d8	00		 DB	 0
?RecurseDeleteKey@CRegKey@ATL@@QAEJPB_W@Z ENDP		; ATL::CRegKey::RecurseDeleteKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z
_TEXT	SEGMENT
_hAdvapi32$1 = -8					; size = 4
_this$ = -4						; size = 4
_lpszSubKey$ = 8					; size = 4
?DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z PROC		; ATL::CRegKey::DeleteSubKey, COMDAT
; _this$ = ecx

; 5755 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@DeleteSubK:

; 5756 : 	ATLASSUME(m_hKey != NULL);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001e	75 26		 jne	 SHORT $LN2@DeleteSubK
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_1BI@KCHMLGAI@?$AAm?$AA_?$AAh?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0002a	6a 00		 push	 0
  0002c	68 7c 16 00 00	 push	 5756			; 0000167cH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00036	6a 02		 push	 2
  00038	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003d	83 c4 18	 add	 esp, 24			; 00000018H
  00040	83 f8 01	 cmp	 eax, 1
  00043	75 01		 jne	 SHORT $LN2@DeleteSubK
  00045	cc		 int	 3
$LN2@DeleteSubK:
  00046	33 d2		 xor	 edx, edx
  00048	75 ce		 jne	 SHORT $LN4@DeleteSubK

; 5757 : 
; 5758 : 	if (m_pTM != NULL)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00051	74 1a		 je	 SHORT $LN5@DeleteSubK

; 5759 : 	{
; 5760 : 		return m_pTM->RegDeleteKey(m_hKey, lpszSubKey);

  00053	8b 4d 08	 mov	 ecx, DWORD PTR _lpszSubKey$[ebp]
  00056	51		 push	 ecx
  00057	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005a	8b 02		 mov	 eax, DWORD PTR [edx]
  0005c	50		 push	 eax
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00063	e8 00 00 00 00	 call	 ?RegDeleteKeyW@CAtlTransactionManager@ATL@@QAEJPAUHKEY__@@PB_W@Z ; ATL::CAtlTransactionManager::RegDeleteKeyW
  00068	e9 92 00 00 00	 jmp	 $LN1@DeleteSubK
$LN5@DeleteSubK:

; 5761 : 	}
; 5762 : 
; 5763 : #if WINVER >= 0x0501
; 5764 : #ifdef _UNICODE
; 5765 : 	static decltype(RegDeleteKeyExW) *pfnRegDeleteKeyEx = NULL;
; 5766 : #else
; 5767 : 	static decltype(RegDeleteKeyExA) *pfnRegDeleteKeyEx = NULL;
; 5768 : #endif	// _UNICODE
; 5769 : 	static bool bInitialized = false;
; 5770 : 
; 5771 : 	if (!bInitialized)

  0006d	0f b6 15 00 00
	00 00		 movzx	 edx, BYTE PTR ?bInitialized@?1??DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z@4_NA ; `ATL::CRegKey::DeleteSubKey'::`2'::bInitialized
  00074	85 d2		 test	 edx, edx
  00076	75 41		 jne	 SHORT $LN6@DeleteSubK

; 5772 : 	{
; 5773 : 		HMODULE hAdvapi32 = GetModuleHandle(_T("Advapi32.dll"));

  00078	8b f4		 mov	 esi, esp
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@BIGILECK@?$AAA?$AAd?$AAv?$AAa?$AAp?$AAi?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl@
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleW@4
  00085	3b f4		 cmp	 esi, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008c	89 45 f8	 mov	 DWORD PTR _hAdvapi32$1[ebp], eax

; 5774 : 		if (hAdvapi32 != NULL)

  0008f	83 7d f8 00	 cmp	 DWORD PTR _hAdvapi32$1[ebp], 0
  00093	74 1d		 je	 SHORT $LN7@DeleteSubK

; 5775 : 		{
; 5776 : #ifdef _UNICODE
; 5777 : 			pfnRegDeleteKeyEx = (decltype(RegDeleteKeyExW) *)GetProcAddress(hAdvapi32, "RegDeleteKeyExW");

  00095	8b f4		 mov	 esi, esp
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@LILAPHGE@RegDeleteKeyExW@
  0009c	8b 45 f8	 mov	 eax, DWORD PTR _hAdvapi32$1[ebp]
  0009f	50		 push	 eax
  000a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  000a6	3b f4		 cmp	 esi, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ad	a3 00 00 00 00	 mov	 DWORD PTR ?pfnRegDeleteKeyEx@?1??DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z@4P6GJPAUHKEY__@@0KK@ZA, eax ; `ATL::CRegKey::DeleteSubKey'::`2'::pfnRegDeleteKeyEx
$LN7@DeleteSubK:

; 5778 : #else
; 5779 : 			pfnRegDeleteKeyEx = (decltype(RegDeleteKeyExA) *)GetProcAddress(hAdvapi32, "RegDeleteKeyExA");
; 5780 : #endif	// _UNICODE
; 5781 : 		}
; 5782 : 		bInitialized = true;

  000b2	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?bInitialized@?1??DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z@4_NA, 1 ; `ATL::CRegKey::DeleteSubKey'::`2'::bInitialized
$LN6@DeleteSubK:

; 5783 : 	}
; 5784 : 
; 5785 : 	if (pfnRegDeleteKeyEx != NULL)

  000b9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pfnRegDeleteKeyEx@?1??DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z@4P6GJPAUHKEY__@@0KK@ZA, 0 ; `ATL::CRegKey::DeleteSubKey'::`2'::pfnRegDeleteKeyEx
  000c0	74 24		 je	 SHORT $LN8@DeleteSubK

; 5786 : 	{
; 5787 : 		return pfnRegDeleteKeyEx(m_hKey, lpszSubKey, m_samWOW64, 0);

  000c2	8b f4		 mov	 esi, esp
  000c4	6a 00		 push	 0
  000c6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000cc	52		 push	 edx
  000cd	8b 45 08	 mov	 eax, DWORD PTR _lpszSubKey$[ebp]
  000d0	50		 push	 eax
  000d1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	52		 push	 edx
  000d7	ff 15 00 00 00
	00		 call	 DWORD PTR ?pfnRegDeleteKeyEx@?1??DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z@4P6GJPAUHKEY__@@0KK@ZA ; `ATL::CRegKey::DeleteSubKey'::`2'::pfnRegDeleteKeyEx
  000dd	3b f4		 cmp	 esi, esp
  000df	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e4	eb 19		 jmp	 SHORT $LN1@DeleteSubK
$LN8@DeleteSubK:

; 5788 : 	}
; 5789 : 
; 5790 : #endif	// WINVER
; 5791 : 
; 5792 : 	return RegDeleteKey(m_hKey, lpszSubKey);

  000e6	8b f4		 mov	 esi, esp
  000e8	8b 45 08	 mov	 eax, DWORD PTR _lpszSubKey$[ebp]
  000eb	50		 push	 eax
  000ec	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ef	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f1	52		 push	 edx
  000f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegDeleteKeyW@8
  000f8	3b f4		 cmp	 esi, esp
  000fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@DeleteSubK:

; 5793 : }

  000ff	5e		 pop	 esi
  00100	83 c4 08	 add	 esp, 8
  00103	3b ec		 cmp	 ebp, esp
  00105	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010a	8b e5		 mov	 esp, ebp
  0010c	5d		 pop	 ebp
  0010d	c2 04 00	 ret	 4
?DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z ENDP		; ATL::CRegKey::DeleteSubKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hKey$ = 8						; size = 4
?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z PROC		; ATL::CRegKey::Attach, COMDAT
; _this$ = ecx

; 5747 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@Attach:

; 5748 : 	ATLASSUME(m_hKey == NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN2@Attach
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_1BI@JPOONHGO@?$AAm?$AA_?$AAh?$AAK?$AAe?$AAy?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 74 16 00 00	 push	 5748			; 00001674H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN2@Attach
  0003b	cc		 int	 3
$LN2@Attach:
  0003c	33 d2		 xor	 edx, edx
  0003e	75 ce		 jne	 SHORT $LN4@Attach

; 5749 : 	m_hKey = hKey;

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	8b 4d 08	 mov	 ecx, DWORD PTR _hKey$[ebp]
  00046	89 08		 mov	 DWORD PTR [eax], ecx

; 5750 : 	m_samWOW64 = 0;

  00048	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0

; 5751 : 	m_pTM = NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 5752 : }

  0005c	83 c4 04	 add	 esp, 4
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 04 00	 ret	 4
?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z ENDP		; ATL::CRegKey::Attach
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Detach@CRegKey@ATL@@QAEPAUHKEY__@@XZ
_TEXT	SEGMENT
_hKey$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@CRegKey@ATL@@QAEPAUHKEY__@@XZ PROC		; ATL::CRegKey::Detach, COMDAT
; _this$ = ecx

; 5738 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5739 : 	HKEY hKey = m_hKey;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 4d f8	 mov	 DWORD PTR _hKey$[ebp], ecx

; 5740 : 	m_hKey = NULL;

  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 5741 : 	m_samWOW64 = 0;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 5742 : 	m_pTM = NULL;

  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 5743 : 	return hKey;

  0003c	8b 45 f8	 mov	 eax, DWORD PTR _hKey$[ebp]

; 5744 : }

  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?Detach@CRegKey@ATL@@QAEPAUHKEY__@@XZ ENDP		; ATL::CRegKey::Detach
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT
_lRes$ = -8						; size = 4
_this$ = -4						; size = 4
?Close@CRegKey@ATL@@QAEJXZ PROC				; ATL::CRegKey::Close, COMDAT
; _this$ = ecx

; 5802 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5803 : 	LONG lRes = ERROR_SUCCESS;

  00018	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lRes$[ebp], 0

; 5804 : 	if (m_hKey != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 38 00	 cmp	 DWORD PTR [eax], 0
  00025	74 21		 je	 SHORT $LN2@Close

; 5805 : 	{
; 5806 : 		lRes = RegCloseKey(m_hKey);

  00027	8b f4		 mov	 esi, esp
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002e	52		 push	 edx
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	89 45 f8	 mov	 DWORD PTR _lRes$[ebp], eax

; 5807 : 		m_hKey = NULL;

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN2@Close:

; 5808 : 	}
; 5809 : 	m_samWOW64 = 0;

  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 5810 : 	return lRes;

  00052	8b 45 f8	 mov	 eax, DWORD PTR _lRes$[ebp]

; 5811 : }

  00055	5e		 pop	 esi
  00056	83 c4 08	 add	 esp, 8
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
?Close@CRegKey@ATL@@QAEJXZ ENDP				; ATL::CRegKey::Close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PB_WK@Z
_TEXT	SEGMENT
tv91 = -24						; size = 4
_lRes$ = -20						; size = 4
_hKey$ = -12						; size = 4
_this$ = -4						; size = 4
_hKeyParent$ = 8					; size = 4
_lpszKeyName$ = 12					; size = 4
_samDesired$ = 16					; size = 4
?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PB_WK@Z PROC		; ATL::CRegKey::Open, COMDAT
; _this$ = ecx

; 5882 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@Open:

; 5883 : 	ATLASSUME(hKeyParent != NULL);

  00021	83 7d 08 00	 cmp	 DWORD PTR _hKeyParent$[ebp], 0
  00025	75 26		 jne	 SHORT $LN2@Open
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@JAHJEEHI@?$AAh?$AAK?$AAe?$AAy?$AAP?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00031	6a 00		 push	 0
  00033	68 fb 16 00 00	 push	 5883			; 000016fbH
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0003d	6a 02		 push	 2
  0003f	e8 00 00 00 00	 call	 __CrtDbgReportW
  00044	83 c4 18	 add	 esp, 24			; 00000018H
  00047	83 f8 01	 cmp	 eax, 1
  0004a	75 01		 jne	 SHORT $LN2@Open
  0004c	cc		 int	 3
$LN2@Open:
  0004d	33 c9		 xor	 ecx, ecx
  0004f	75 d0		 jne	 SHORT $LN4@Open

; 5884 : 	HKEY hKey = NULL;

  00051	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _hKey$[ebp], 0

; 5885 : 	LONG lRes = m_pTM != NULL ?

  00058	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005b	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0005f	74 22		 je	 SHORT $LN8@Open
  00061	8d 45 f4	 lea	 eax, DWORD PTR _hKey$[ebp]
  00064	50		 push	 eax
  00065	8b 4d 10	 mov	 ecx, DWORD PTR _samDesired$[ebp]
  00068	51		 push	 ecx
  00069	6a 00		 push	 0
  0006b	8b 55 0c	 mov	 edx, DWORD PTR _lpszKeyName$[ebp]
  0006e	52		 push	 edx
  0006f	8b 45 08	 mov	 eax, DWORD PTR _hKeyParent$[ebp]
  00072	50		 push	 eax
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00079	e8 00 00 00 00	 call	 ?RegOpenKeyExW@CAtlTransactionManager@ATL@@QAEJPAUHKEY__@@PB_WKKPAPAU3@@Z ; ATL::CAtlTransactionManager::RegOpenKeyExW
  0007e	89 45 e8	 mov	 DWORD PTR tv91[ebp], eax
  00081	eb 24		 jmp	 SHORT $LN9@Open
$LN8@Open:
  00083	8b f4		 mov	 esi, esp
  00085	8d 55 f4	 lea	 edx, DWORD PTR _hKey$[ebp]
  00088	52		 push	 edx
  00089	8b 45 10	 mov	 eax, DWORD PTR _samDesired$[ebp]
  0008c	50		 push	 eax
  0008d	6a 00		 push	 0
  0008f	8b 4d 0c	 mov	 ecx, DWORD PTR _lpszKeyName$[ebp]
  00092	51		 push	 ecx
  00093	8b 55 08	 mov	 edx, DWORD PTR _hKeyParent$[ebp]
  00096	52		 push	 edx
  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegOpenKeyExW@20
  0009d	3b f4		 cmp	 esi, esp
  0009f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a4	89 45 e8	 mov	 DWORD PTR tv91[ebp], eax
$LN9@Open:
  000a7	8b 45 e8	 mov	 eax, DWORD PTR tv91[ebp]
  000aa	89 45 ec	 mov	 DWORD PTR _lRes$[ebp], eax

; 5886 : 		m_pTM->RegOpenKeyEx(hKeyParent, lpszKeyName, 0, samDesired, &hKey) :
; 5887 : 		RegOpenKeyEx(hKeyParent, lpszKeyName, 0, samDesired, &hKey);
; 5888 : 	if (lRes == ERROR_SUCCESS)

  000ad	83 7d ec 00	 cmp	 DWORD PTR _lRes$[ebp], 0
  000b1	75 4e		 jne	 SHORT $LN5@Open

; 5889 : 	{
; 5890 : 		lRes = Close();

  000b3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	e8 00 00 00 00	 call	 ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close
  000bb	89 45 ec	 mov	 DWORD PTR _lRes$[ebp], eax

; 5891 : 		ATLASSERT(lRes == ERROR_SUCCESS);

  000be	83 7d ec 00	 cmp	 DWORD PTR _lRes$[ebp], 0
  000c2	74 26		 je	 SHORT $LN10@Open
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@OMKLFNDM@?$AAl?$AAR?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AAL@
  000c9	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000ce	6a 00		 push	 0
  000d0	68 03 17 00 00	 push	 5891			; 00001703H
  000d5	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000da	6a 02		 push	 2
  000dc	e8 00 00 00 00	 call	 __CrtDbgReportW
  000e1	83 c4 18	 add	 esp, 24			; 00000018H
  000e4	83 f8 01	 cmp	 eax, 1
  000e7	75 01		 jne	 SHORT $LN10@Open
  000e9	cc		 int	 3
$LN10@Open:

; 5892 : 		m_hKey = hKey;

  000ea	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ed	8b 45 f4	 mov	 eax, DWORD PTR _hKey$[ebp]
  000f0	89 02		 mov	 DWORD PTR [edx], eax

; 5893 : #if WINVER >= 0x0501
; 5894 : 		m_samWOW64 = samDesired & (KEY_WOW64_32KEY | KEY_WOW64_64KEY);

  000f2	8b 4d 10	 mov	 ecx, DWORD PTR _samDesired$[ebp]
  000f5	81 e1 00 03 00
	00		 and	 ecx, 768		; 00000300H
  000fb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000fe	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$LN5@Open:

; 5895 : #endif
; 5896 : 	}
; 5897 : 	return lRes;

  00101	8b 45 ec	 mov	 eax, DWORD PTR _lRes$[ebp]

; 5898 : }

  00104	52		 push	 edx
  00105	8b cd		 mov	 ecx, ebp
  00107	50		 push	 eax
  00108	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Open
  0010e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00113	58		 pop	 eax
  00114	5a		 pop	 edx
  00115	5e		 pop	 esi
  00116	83 c4 18	 add	 esp, 24			; 00000018H
  00119	3b ec		 cmp	 ebp, esp
  0011b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00120	8b e5		 mov	 esp, ebp
  00122	5d		 pop	 ebp
  00123	c2 0c 00	 ret	 12			; 0000000cH
  00126	66 90		 npad	 2
$LN13@Open:
  00128	01 00 00 00	 DD	 1
  0012c	00 00 00 00	 DD	 $LN12@Open
$LN12@Open:
  00130	f4 ff ff ff	 DD	 -12			; fffffff4H
  00134	04 00 00 00	 DD	 4
  00138	00 00 00 00	 DD	 $LN11@Open
$LN11@Open:
  0013c	68		 DB	 104			; 00000068H
  0013d	4b		 DB	 75			; 0000004bH
  0013e	65		 DB	 101			; 00000065H
  0013f	79		 DB	 121			; 00000079H
  00140	00		 DB	 0
?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PB_WK@Z ENDP		; ATL::CRegKey::Open
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?atlCreate@CRegKey@ATL@@QAEJPAUHKEY__@@PB_WPA_WKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT
tv130 = -36						; size = 4
_lRes$ = -32						; size = 4
_hKey$ = -24						; size = 4
_dw$ = -12						; size = 4
_this$ = -4						; size = 4
_hKeyParent$ = 8					; size = 4
_lpszKeyName$ = 12					; size = 4
_lpszClass$ = 16					; size = 4
_dwOptions$ = 20					; size = 4
_samDesired$ = 24					; size = 4
_lpSecAttr$ = 28					; size = 4
_lpdwDisposition$ = 32					; size = 4
?atlCreate@CRegKey@ATL@@QAEJPAUHKEY__@@PB_WPA_WKKPAU_SECURITY_ATTRIBUTES@@PAK@Z PROC ; ATL::CRegKey::atlCreate, COMDAT
; _this$ = ecx

; 5857 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00012	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00015	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00018	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00021	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00024	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00027	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5858 : 	ATLASSERT(hKeyParent != NULL);

  0002a	83 7d 08 00	 cmp	 DWORD PTR _hKeyParent$[ebp], 0
  0002e	75 26		 jne	 SHORT $LN5@atlCreate
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@JAHJEEHI@?$AAh?$AAK?$AAe?$AAy?$AAP?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0003a	6a 00		 push	 0
  0003c	68 e2 16 00 00	 push	 5858			; 000016e2H
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00046	6a 02		 push	 2
  00048	e8 00 00 00 00	 call	 __CrtDbgReportW
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
  00050	83 f8 01	 cmp	 eax, 1
  00053	75 01		 jne	 SHORT $LN5@atlCreate
  00055	cc		 int	 3
$LN5@atlCreate:

; 5859 : 	DWORD dw;
; 5860 : 	HKEY hKey = NULL;

  00056	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _hKey$[ebp], 0

; 5861 : 	LONG lRes = m_pTM != NULL ?

  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00064	74 32		 je	 SHORT $LN6@atlCreate
  00066	8d 55 f4	 lea	 edx, DWORD PTR _dw$[ebp]
  00069	52		 push	 edx
  0006a	8d 45 e8	 lea	 eax, DWORD PTR _hKey$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d 1c	 mov	 ecx, DWORD PTR _lpSecAttr$[ebp]
  00071	51		 push	 ecx
  00072	8b 55 18	 mov	 edx, DWORD PTR _samDesired$[ebp]
  00075	52		 push	 edx
  00076	8b 45 14	 mov	 eax, DWORD PTR _dwOptions$[ebp]
  00079	50		 push	 eax
  0007a	8b 4d 10	 mov	 ecx, DWORD PTR _lpszClass$[ebp]
  0007d	51		 push	 ecx
  0007e	6a 00		 push	 0
  00080	8b 55 0c	 mov	 edx, DWORD PTR _lpszKeyName$[ebp]
  00083	52		 push	 edx
  00084	8b 45 08	 mov	 eax, DWORD PTR _hKeyParent$[ebp]
  00087	50		 push	 eax
  00088	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0008e	e8 00 00 00 00	 call	 ?RegCreateKeyExW@CAtlTransactionManager@ATL@@QAEJPAUHKEY__@@PB_WKPA_WKKQAU_SECURITY_ATTRIBUTES@@PAPAU3@PAK@Z ; ATL::CAtlTransactionManager::RegCreateKeyExW
  00093	89 45 dc	 mov	 DWORD PTR tv130[ebp], eax
  00096	eb 34		 jmp	 SHORT $LN7@atlCreate
$LN6@atlCreate:
  00098	8b f4		 mov	 esi, esp
  0009a	8d 55 f4	 lea	 edx, DWORD PTR _dw$[ebp]
  0009d	52		 push	 edx
  0009e	8d 45 e8	 lea	 eax, DWORD PTR _hKey$[ebp]
  000a1	50		 push	 eax
  000a2	8b 4d 1c	 mov	 ecx, DWORD PTR _lpSecAttr$[ebp]
  000a5	51		 push	 ecx
  000a6	8b 55 18	 mov	 edx, DWORD PTR _samDesired$[ebp]
  000a9	52		 push	 edx
  000aa	8b 45 14	 mov	 eax, DWORD PTR _dwOptions$[ebp]
  000ad	50		 push	 eax
  000ae	8b 4d 10	 mov	 ecx, DWORD PTR _lpszClass$[ebp]
  000b1	51		 push	 ecx
  000b2	6a 00		 push	 0
  000b4	8b 55 0c	 mov	 edx, DWORD PTR _lpszKeyName$[ebp]
  000b7	52		 push	 edx
  000b8	8b 45 08	 mov	 eax, DWORD PTR _hKeyParent$[ebp]
  000bb	50		 push	 eax
  000bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCreateKeyExW@36
  000c2	3b f4		 cmp	 esi, esp
  000c4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c9	89 45 dc	 mov	 DWORD PTR tv130[ebp], eax
$LN7@atlCreate:
  000cc	8b 4d dc	 mov	 ecx, DWORD PTR tv130[ebp]
  000cf	89 4d e0	 mov	 DWORD PTR _lRes$[ebp], ecx

; 5862 : 		m_pTM->RegCreateKeyEx(hKeyParent, lpszKeyName, 0, lpszClass, dwOptions, samDesired, lpSecAttr, &hKey, &dw) :
; 5863 : 		RegCreateKeyEx(hKeyParent, lpszKeyName, 0, lpszClass, dwOptions, samDesired, lpSecAttr, &hKey, &dw);
; 5864 : 	if (lRes == ERROR_SUCCESS)

  000d2	83 7d e0 00	 cmp	 DWORD PTR _lRes$[ebp], 0
  000d6	75 2f		 jne	 SHORT $LN2@atlCreate

; 5865 : 	{
; 5866 :     	if (lpdwDisposition != NULL)

  000d8	83 7d 20 00	 cmp	 DWORD PTR _lpdwDisposition$[ebp], 0
  000dc	74 08		 je	 SHORT $LN3@atlCreate

; 5867 : 		    *lpdwDisposition = dw;

  000de	8b 55 20	 mov	 edx, DWORD PTR _lpdwDisposition$[ebp]
  000e1	8b 45 f4	 mov	 eax, DWORD PTR _dw$[ebp]
  000e4	89 02		 mov	 DWORD PTR [edx], eax
$LN3@atlCreate:

; 5868 : 
; 5869 :         lRes = Close();

  000e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e9	e8 00 00 00 00	 call	 ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close
  000ee	89 45 e0	 mov	 DWORD PTR _lRes$[ebp], eax

; 5870 : 		m_hKey = hKey;

  000f1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	8b 55 e8	 mov	 edx, DWORD PTR _hKey$[ebp]
  000f7	89 11		 mov	 DWORD PTR [ecx], edx

; 5871 : #if WINVER >= 0x0501
; 5872 : 		m_samWOW64 = samDesired & (KEY_WOW64_32KEY | KEY_WOW64_64KEY);

  000f9	8b 45 18	 mov	 eax, DWORD PTR _samDesired$[ebp]
  000fc	25 00 03 00 00	 and	 eax, 768		; 00000300H
  00101	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00104	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN2@atlCreate:

; 5873 : #endif
; 5874 : 	}
; 5875 : 	return lRes;

  00107	8b 45 e0	 mov	 eax, DWORD PTR _lRes$[ebp]

; 5876 : }

  0010a	52		 push	 edx
  0010b	8b cd		 mov	 ecx, ebp
  0010d	50		 push	 eax
  0010e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@atlCreate
  00114	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00119	58		 pop	 eax
  0011a	5a		 pop	 edx
  0011b	5e		 pop	 esi
  0011c	83 c4 24	 add	 esp, 36			; 00000024H
  0011f	3b ec		 cmp	 ebp, esp
  00121	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 1c 00	 ret	 28			; 0000001cH
$LN11@atlCreate:
  0012c	02 00 00 00	 DD	 2
  00130	00 00 00 00	 DD	 $LN10@atlCreate
$LN10@atlCreate:
  00134	f4 ff ff ff	 DD	 -12			; fffffff4H
  00138	04 00 00 00	 DD	 4
  0013c	00 00 00 00	 DD	 $LN8@atlCreate
  00140	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00144	04 00 00 00	 DD	 4
  00148	00 00 00 00	 DD	 $LN9@atlCreate
$LN9@atlCreate:
  0014c	68		 DB	 104			; 00000068H
  0014d	4b		 DB	 75			; 0000004bH
  0014e	65		 DB	 101			; 00000065H
  0014f	79		 DB	 121			; 00000079H
  00150	00		 DB	 0
$LN8@atlCreate:
  00151	64		 DB	 100			; 00000064H
  00152	77		 DB	 119			; 00000077H
  00153	00		 DB	 0
?atlCreate@CRegKey@ATL@@QAEJPAUHKEY__@@PB_WPA_WKKPAU_SECURITY_ATTRIBUTES@@PAK@Z ENDP ; ATL::CRegKey::atlCreate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?SetMultiStringValue@CRegKey@ATL@@QAEJPB_W0@Z
_TEXT	SEGMENT
tv77 = -24						; size = 4
___atl_condVal$1 = -20					; size = 4
_nLength$ = -16						; size = 4
_nBytes$ = -12						; size = 4
_pszTemp$ = -8						; size = 4
_this$ = -4						; size = 4
_pszValueName$ = 8					; size = 4
_pszValue$ = 12						; size = 4
?SetMultiStringValue@CRegKey@ATL@@QAEJPB_W0@Z PROC	; ATL::CRegKey::SetMultiStringValue, COMDAT
; _this$ = ecx

; 6273 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@SetMultiSt:

; 6274 : 	LPCTSTR pszTemp;
; 6275 : 	ULONG nBytes;
; 6276 : 	ULONG nLength;
; 6277 : 
; 6278 : 	ATLASSUME(m_hKey != NULL);

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 38 00	 cmp	 DWORD PTR [eax], 0
  00027	75 26		 jne	 SHORT $LN2@SetMultiSt
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_1BI@KCHMLGAI@?$AAm?$AA_?$AAh?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00033	6a 00		 push	 0
  00035	68 86 18 00 00	 push	 6278			; 00001886H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0003f	6a 02		 push	 2
  00041	e8 00 00 00 00	 call	 __CrtDbgReportW
  00046	83 c4 18	 add	 esp, 24			; 00000018H
  00049	83 f8 01	 cmp	 eax, 1
  0004c	75 01		 jne	 SHORT $LN2@SetMultiSt
  0004e	cc		 int	 3
$LN2@SetMultiSt:
  0004f	33 d2		 xor	 edx, edx
  00051	75 ce		 jne	 SHORT $LN4@SetMultiSt
$LN7@SetMultiSt:

; 6279 : 	ATLENSURE_RETURN_VAL(pszValue != NULL, ERROR_INVALID_DATA);

  00053	83 7d 0c 00	 cmp	 DWORD PTR _pszValue$[ebp], 0
  00057	74 09		 je	 SHORT $LN14@SetMultiSt
  00059	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR tv77[ebp], 1
  00060	eb 07		 jmp	 SHORT $LN15@SetMultiSt
$LN14@SetMultiSt:
  00062	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN15@SetMultiSt:
  00069	8b 45 e8	 mov	 eax, DWORD PTR tv77[ebp]
  0006c	89 45 ec	 mov	 DWORD PTR ___atl_condVal$1[ebp], eax
  0006f	83 7d ec 00	 cmp	 DWORD PTR ___atl_condVal$1[ebp], 0
  00073	75 26		 jne	 SHORT $LN16@SetMultiSt
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0007f	6a 00		 push	 0
  00081	68 87 18 00 00	 push	 6279			; 00001887H
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0008b	6a 02		 push	 2
  0008d	e8 00 00 00 00	 call	 __CrtDbgReportW
  00092	83 c4 18	 add	 esp, 24			; 00000018H
  00095	83 f8 01	 cmp	 eax, 1
  00098	75 01		 jne	 SHORT $LN16@SetMultiSt
  0009a	cc		 int	 3
$LN16@SetMultiSt:
  0009b	83 7d ec 00	 cmp	 DWORD PTR ___atl_condVal$1[ebp], 0
  0009f	75 07		 jne	 SHORT $LN5@SetMultiSt
  000a1	b8 0d 00 00 00	 mov	 eax, 13			; 0000000dH
  000a6	eb 66		 jmp	 SHORT $LN1@SetMultiSt
$LN5@SetMultiSt:
  000a8	33 d2		 xor	 edx, edx
  000aa	75 a7		 jne	 SHORT $LN7@SetMultiSt

; 6280 : 
; 6281 : 	// Find the total length (in bytes) of all of the strings, including the
; 6282 : 	// terminating '\0' of each string, and the second '\0' that terminates
; 6283 : 	// the list.
; 6284 : 	nBytes = 0;

  000ac	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nBytes$[ebp], 0

; 6285 : 	pszTemp = pszValue;

  000b3	8b 45 0c	 mov	 eax, DWORD PTR _pszValue$[ebp]
  000b6	89 45 f8	 mov	 DWORD PTR _pszTemp$[ebp], eax
$LN10@SetMultiSt:

; 6286 : 	do
; 6287 : 	{
; 6288 : 		nLength = static_cast<ULONG>(_tcslen(pszTemp))+1;

  000b9	8b 4d f8	 mov	 ecx, DWORD PTR _pszTemp$[ebp]
  000bc	51		 push	 ecx
  000bd	e8 00 00 00 00	 call	 _wcslen
  000c2	83 c4 04	 add	 esp, 4
  000c5	83 c0 01	 add	 eax, 1
  000c8	89 45 f0	 mov	 DWORD PTR _nLength$[ebp], eax

; 6289 : 		pszTemp += nLength;

  000cb	8b 55 f0	 mov	 edx, DWORD PTR _nLength$[ebp]
  000ce	8b 45 f8	 mov	 eax, DWORD PTR _pszTemp$[ebp]
  000d1	8d 0c 50	 lea	 ecx, DWORD PTR [eax+edx*2]
  000d4	89 4d f8	 mov	 DWORD PTR _pszTemp$[ebp], ecx

; 6290 : 		nBytes += nLength*sizeof(TCHAR);

  000d7	8b 55 f0	 mov	 edx, DWORD PTR _nLength$[ebp]
  000da	8b 45 f4	 mov	 eax, DWORD PTR _nBytes$[ebp]
  000dd	8d 0c 50	 lea	 ecx, DWORD PTR [eax+edx*2]
  000e0	89 4d f4	 mov	 DWORD PTR _nBytes$[ebp], ecx

; 6291 : 	} while (nLength != 1);

  000e3	83 7d f0 01	 cmp	 DWORD PTR _nLength$[ebp], 1
  000e7	75 d0		 jne	 SHORT $LN10@SetMultiSt

; 6292 : 
; 6293 : 	return ::RegSetValueEx(m_hKey, pszValueName, 0, REG_MULTI_SZ, reinterpret_cast<const BYTE*>(pszValue),

  000e9	8b f4		 mov	 esi, esp
  000eb	8b 55 f4	 mov	 edx, DWORD PTR _nBytes$[ebp]
  000ee	52		 push	 edx
  000ef	8b 45 0c	 mov	 eax, DWORD PTR _pszValue$[ebp]
  000f2	50		 push	 eax
  000f3	6a 07		 push	 7
  000f5	6a 00		 push	 0
  000f7	8b 4d 08	 mov	 ecx, DWORD PTR _pszValueName$[ebp]
  000fa	51		 push	 ecx
  000fb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000fe	8b 02		 mov	 eax, DWORD PTR [edx]
  00100	50		 push	 eax
  00101	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegSetValueExW@24
  00107	3b f4		 cmp	 esi, esp
  00109	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@SetMultiSt:

; 6294 : 		nBytes);
; 6295 : }

  0010e	5e		 pop	 esi
  0010f	83 c4 18	 add	 esp, 24			; 00000018H
  00112	3b ec		 cmp	 ebp, esp
  00114	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00119	8b e5		 mov	 esp, ebp
  0011b	5d		 pop	 ebp
  0011c	c2 08 00	 ret	 8
?SetMultiStringValue@CRegKey@ATL@@QAEJPB_W0@Z ENDP	; ATL::CRegKey::SetMultiStringValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?SetStringValue@CRegKey@ATL@@QAEJPB_W0K@Z
_TEXT	SEGMENT
tv77 = -12						; size = 4
___atl_condVal$1 = -8					; size = 4
_this$ = -4						; size = 4
_pszValueName$ = 8					; size = 4
_pszValue$ = 12						; size = 4
_dwType$ = 16						; size = 4
?SetStringValue@CRegKey@ATL@@QAEJPB_W0K@Z PROC		; ATL::CRegKey::SetStringValue, COMDAT
; _this$ = ecx

; 6262 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@SetStringV:

; 6263 : 	ATLASSUME(m_hKey != NULL);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 38 00	 cmp	 DWORD PTR [eax], 0
  00025	75 26		 jne	 SHORT $LN2@SetStringV
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1BI@KCHMLGAI@?$AAm?$AA_?$AAh?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00031	6a 00		 push	 0
  00033	68 77 18 00 00	 push	 6263			; 00001877H
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0003d	6a 02		 push	 2
  0003f	e8 00 00 00 00	 call	 __CrtDbgReportW
  00044	83 c4 18	 add	 esp, 24			; 00000018H
  00047	83 f8 01	 cmp	 eax, 1
  0004a	75 01		 jne	 SHORT $LN2@SetStringV
  0004c	cc		 int	 3
$LN2@SetStringV:
  0004d	33 d2		 xor	 edx, edx
  0004f	75 ce		 jne	 SHORT $LN4@SetStringV
$LN7@SetStringV:

; 6264 : 	ATLENSURE_RETURN_VAL(pszValue != NULL, ERROR_INVALID_DATA);

  00051	83 7d 0c 00	 cmp	 DWORD PTR _pszValue$[ebp], 0
  00055	74 09		 je	 SHORT $LN11@SetStringV
  00057	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv77[ebp], 1
  0005e	eb 07		 jmp	 SHORT $LN12@SetStringV
$LN11@SetStringV:
  00060	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN12@SetStringV:
  00067	8b 45 f4	 mov	 eax, DWORD PTR tv77[ebp]
  0006a	89 45 f8	 mov	 DWORD PTR ___atl_condVal$1[ebp], eax
  0006d	83 7d f8 00	 cmp	 DWORD PTR ___atl_condVal$1[ebp], 0
  00071	75 26		 jne	 SHORT $LN13@SetStringV
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0007d	6a 00		 push	 0
  0007f	68 78 18 00 00	 push	 6264			; 00001878H
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00089	6a 02		 push	 2
  0008b	e8 00 00 00 00	 call	 __CrtDbgReportW
  00090	83 c4 18	 add	 esp, 24			; 00000018H
  00093	83 f8 01	 cmp	 eax, 1
  00096	75 01		 jne	 SHORT $LN13@SetStringV
  00098	cc		 int	 3
$LN13@SetStringV:
  00099	83 7d f8 00	 cmp	 DWORD PTR ___atl_condVal$1[ebp], 0
  0009d	75 07		 jne	 SHORT $LN5@SetStringV
  0009f	b8 0d 00 00 00	 mov	 eax, 13			; 0000000dH
  000a4	eb 6a		 jmp	 SHORT $LN1@SetStringV
$LN5@SetStringV:
  000a6	33 d2		 xor	 edx, edx
  000a8	75 a7		 jne	 SHORT $LN7@SetStringV

; 6265 : 	ATLASSERT((dwType == REG_SZ) || (dwType == REG_EXPAND_SZ));

  000aa	83 7d 10 01	 cmp	 DWORD PTR _dwType$[ebp], 1
  000ae	74 2c		 je	 SHORT $LN14@SetStringV
  000b0	83 7d 10 02	 cmp	 DWORD PTR _dwType$[ebp], 2
  000b4	74 26		 je	 SHORT $LN14@SetStringV
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@MAMCHIIA@?$AA?$CI?$AAd?$AAw?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CI?$AA?5?$AA1?$AAu@
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000c0	6a 00		 push	 0
  000c2	68 79 18 00 00	 push	 6265			; 00001879H
  000c7	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000cc	6a 02		 push	 2
  000ce	e8 00 00 00 00	 call	 __CrtDbgReportW
  000d3	83 c4 18	 add	 esp, 24			; 00000018H
  000d6	83 f8 01	 cmp	 eax, 1
  000d9	75 01		 jne	 SHORT $LN14@SetStringV
  000db	cc		 int	 3
$LN14@SetStringV:

; 6266 : 
; 6267 : 	return ::RegSetValueEx(m_hKey, pszValueName, 0, dwType, reinterpret_cast<const BYTE*>(pszValue), (static_cast<DWORD>(_tcslen(pszValue))+1)*sizeof(TCHAR));

  000dc	8b 4d 0c	 mov	 ecx, DWORD PTR _pszValue$[ebp]
  000df	51		 push	 ecx
  000e0	e8 00 00 00 00	 call	 _wcslen
  000e5	83 c4 04	 add	 esp, 4
  000e8	8d 54 00 02	 lea	 edx, DWORD PTR [eax+eax+2]
  000ec	8b f4		 mov	 esi, esp
  000ee	52		 push	 edx
  000ef	8b 45 0c	 mov	 eax, DWORD PTR _pszValue$[ebp]
  000f2	50		 push	 eax
  000f3	8b 4d 10	 mov	 ecx, DWORD PTR _dwType$[ebp]
  000f6	51		 push	 ecx
  000f7	6a 00		 push	 0
  000f9	8b 55 08	 mov	 edx, DWORD PTR _pszValueName$[ebp]
  000fc	52		 push	 edx
  000fd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00100	8b 08		 mov	 ecx, DWORD PTR [eax]
  00102	51		 push	 ecx
  00103	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegSetValueExW@24
  00109	3b f4		 cmp	 esi, esp
  0010b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@SetStringV:

; 6268 : }

  00110	5e		 pop	 esi
  00111	83 c4 0c	 add	 esp, 12			; 0000000cH
  00114	3b ec		 cmp	 ebp, esp
  00116	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011b	8b e5		 mov	 esp, ebp
  0011d	5d		 pop	 ebp
  0011e	c2 0c 00	 ret	 12			; 0000000cH
?SetStringValue@CRegKey@ATL@@QAEJPB_W0K@Z ENDP		; ATL::CRegKey::SetStringValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?SetDWORDValue@CRegKey@ATL@@QAEJPB_WK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszValueName$ = 8					; size = 4
_dwValue$ = 12						; size = 4
?SetDWORDValue@CRegKey@ATL@@QAEJPB_WK@Z PROC		; ATL::CRegKey::SetDWORDValue, COMDAT
; _this$ = ecx

; 6245 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@SetDWORDVa:

; 6246 : 	ATLASSUME(m_hKey != NULL);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	75 26		 jne	 SHORT $LN2@SetDWORDVa
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_1BI@KCHMLGAI@?$AAm?$AA_?$AAh?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00021	6a 00		 push	 0
  00023	68 66 18 00 00	 push	 6246			; 00001866H
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002d	6a 02		 push	 2
  0002f	e8 00 00 00 00	 call	 __CrtDbgReportW
  00034	83 c4 18	 add	 esp, 24			; 00000018H
  00037	83 f8 01	 cmp	 eax, 1
  0003a	75 01		 jne	 SHORT $LN2@SetDWORDVa
  0003c	cc		 int	 3
$LN2@SetDWORDVa:
  0003d	33 d2		 xor	 edx, edx
  0003f	75 ce		 jne	 SHORT $LN4@SetDWORDVa

; 6247 : 	return ::RegSetValueEx(m_hKey, pszValueName, 0, REG_DWORD, reinterpret_cast<const BYTE*>(&dwValue), sizeof(DWORD));

  00041	8b f4		 mov	 esi, esp
  00043	6a 04		 push	 4
  00045	8d 45 0c	 lea	 eax, DWORD PTR _dwValue$[ebp]
  00048	50		 push	 eax
  00049	6a 04		 push	 4
  0004b	6a 00		 push	 0
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR _pszValueName$[ebp]
  00050	51		 push	 ecx
  00051	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00054	8b 02		 mov	 eax, DWORD PTR [edx]
  00056	50		 push	 eax
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegSetValueExW@24
  0005d	3b f4		 cmp	 esi, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 6248 : }

  00064	5e		 pop	 esi
  00065	83 c4 04	 add	 esp, 4
  00068	3b ec		 cmp	 ebp, esp
  0006a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c2 08 00	 ret	 8
?SetDWORDValue@CRegKey@ATL@@QAEJPB_WK@Z ENDP		; ATL::CRegKey::SetDWORDValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCRegKey@ATL@@QBEPAUHKEY__@@XZ PROC			; ATL::CRegKey::operator HKEY__ *, COMDAT
; _this$ = ecx

; 5733 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5734 : 	return m_hKey;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 5735 : }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??BCRegKey@ATL@@QBEPAUHKEY__@@XZ ENDP			; ATL::CRegKey::operator HKEY__ *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CRegKey@ATL@@QAE@XZ PROC				; ATL::CRegKey::~CRegKey, COMDAT
; _this$ = ecx

; 5716 : {Close();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CRegKey@ATL@@QAE@XZ ENDP				; ATL::CRegKey::~CRegKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??0CRegKey@ATL@@QAE@PAUHKEY__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hKey$ = 8						; size = 4
??0CRegKey@ATL@@QAE@PAUHKEY__@@@Z PROC			; ATL::CRegKey::CRegKey, COMDAT
; _this$ = ecx

; 5712 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5711 : 	m_hKey(hKey), m_samWOW64(0), m_pTM(NULL)

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _hKey$[ebp]
  00014	89 08		 mov	 DWORD PTR [eax], ecx
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 5713 : }

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0CRegKey@ATL@@QAE@PAUHKEY__@@@Z ENDP			; ATL::CRegKey::CRegKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ??0CRegKey@ATL@@QAE@PAVCAtlTransactionManager@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pTM$ = 8						; size = 4
??0CRegKey@ATL@@QAE@PAVCAtlTransactionManager@1@@Z PROC	; ATL::CRegKey::CRegKey, COMDAT
; _this$ = ecx

; 5697 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5696 : 	m_hKey( NULL ), m_samWOW64(0), m_pTM(pTM)

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00021	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00024	8b 45 08	 mov	 eax, DWORD PTR _pTM$[ebp]
  00027	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 5698 : }

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0CRegKey@ATL@@QAE@PAVCAtlTransactionManager@1@@Z ENDP	; ATL::CRegKey::CRegKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z
_TEXT	SEGMENT
tv76 = -4						; size = 4
_rguid1$ = 8						; size = 4
?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z PROC		; ATL::InlineIsEqualUnknown, COMDAT

; 666  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 667  :    return (

  0000b	b8 04 00 00 00	 mov	 eax, 4
  00010	6b c8 00	 imul	 ecx, eax, 0
  00013	8b 55 08	 mov	 edx, DWORD PTR _rguid1$[ebp]
  00016	83 3c 0a 00	 cmp	 DWORD PTR [edx+ecx], 0
  0001a	75 41		 jne	 SHORT $LN3@InlineIsEq
  0001c	b8 04 00 00 00	 mov	 eax, 4
  00021	c1 e0 00	 shl	 eax, 0
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _rguid1$[ebp]
  00027	83 3c 01 00	 cmp	 DWORD PTR [ecx+eax], 0
  0002b	75 30		 jne	 SHORT $LN3@InlineIsEq
  0002d	ba 04 00 00 00	 mov	 edx, 4
  00032	d1 e2		 shl	 edx, 1
  00034	8b 45 08	 mov	 eax, DWORD PTR _rguid1$[ebp]
  00037	81 3c 10 c0 00
	00 00		 cmp	 DWORD PTR [eax+edx], 192 ; 000000c0H
  0003e	75 1d		 jne	 SHORT $LN3@InlineIsEq
  00040	b9 04 00 00 00	 mov	 ecx, 4
  00045	6b d1 03	 imul	 edx, ecx, 3
  00048	8b 45 08	 mov	 eax, DWORD PTR _rguid1$[ebp]
  0004b	81 3c 10 00 00
	00 46		 cmp	 DWORD PTR [eax+edx], 1174405120 ; 46000000H
  00052	75 09		 jne	 SHORT $LN3@InlineIsEq
  00054	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  0005b	eb 07		 jmp	 SHORT $LN4@InlineIsEq
$LN3@InlineIsEq:
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@InlineIsEq:
  00064	8b 45 fc	 mov	 eax, DWORD PTR tv76[ebp]

; 668  : 	  ((PLONG) &rguid1)[0] == 0 &&
; 669  : 	  ((PLONG) &rguid1)[1] == 0 &&
; 670  : #ifdef _ATL_BYTESWAP
; 671  : 	  ((PLONG) &rguid1)[2] == 0xC0000000 &&
; 672  : 	  ((PLONG) &rguid1)[3] == 0x00000046);
; 673  : #else
; 674  : 	  ((PLONG) &rguid1)[2] == 0x000000C0 &&
; 675  : 	  ((PLONG) &rguid1)[3] == 0x46000000);
; 676  : #endif
; 677  : }

  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z ENDP		; ATL::InlineIsEqualUnknown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_WIN_MODULE70@1@@Z
_TEXT	SEGMENT
$T1 = -48						; size = 4
$T2 = -44						; size = 4
$T3 = -40						; size = 8
_pPrev$4 = -32						; size = 4
_dwThreadID$5 = -28					; size = 4
_pEntry$ = -24						; size = 4
_lock$ = -16						; size = 8
_pv$ = -4						; size = 4
_pWinModule$ = 8					; size = 4
?AtlWinModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_WIN_MODULE70@1@@Z PROC ; ATL::AtlWinModuleExtractCreateWndData, COMDAT

; 8359 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d d0	 lea	 edi, DWORD PTR [ebp-48]
  0000b	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd

; 8360 : 	if (pWinModule == NULL)

  00017	83 7d 08 00	 cmp	 DWORD PTR _pWinModule$[ebp], 0
  0001b	75 07		 jne	 SHORT $LN4@AtlWinModu

; 8361 : 		return NULL;

  0001d	33 c0		 xor	 eax, eax
  0001f	e9 16 01 00 00	 jmp	 $LN1@AtlWinModu
$LN4@AtlWinModu:

; 8362 : 
; 8363 : 	void* pv = NULL;

  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pv$[ebp], 0

; 8364 : 	CComCritSecLock<CComCriticalSection> lock(pWinModule->m_csWindowCreate, false);

  0002b	6a 00		 push	 0
  0002d	8b 45 08	 mov	 eax, DWORD PTR _pWinModule$[ebp]
  00030	83 c0 04	 add	 eax, 4
  00033	50		 push	 eax
  00034	8d 4d f0	 lea	 ecx, DWORD PTR _lock$[ebp]
  00037	e8 00 00 00 00	 call	 ??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>

; 8365 : 	if (FAILED(lock.Lock()))

  0003c	8d 4d f0	 lea	 ecx, DWORD PTR _lock$[ebp]
  0003f	e8 00 00 00 00	 call	 ?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
  00044	85 c0		 test	 eax, eax
  00046	7d 6d		 jge	 SHORT $LN5@AtlWinModu

; 8366 : 	{
; 8367 : 		ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Unable to lock critical section in AtlWinModuleExtractCreateWndData\n"));

  00048	68 00 00 00 00	 push	 OFFSET ??_C@_1JK@PCFOBMDH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
  0004d	6a 00		 push	 0
  0004f	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  00054	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<32,0>::operator unsigned int
  00059	50		 push	 eax
  0005a	68 af 20 00 00	 push	 8367			; 000020afH
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00064	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00067	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00072	83 c4 10	 add	 esp, 16			; 00000010H

; 8368 : 		ATLASSERT(0);

  00075	33 c9		 xor	 ecx, ecx
  00077	75 26		 jne	 SHORT $LN11@AtlWinModu
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00083	6a 00		 push	 0
  00085	68 b0 20 00 00	 push	 8368			; 000020b0H
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0008f	6a 02		 push	 2
  00091	e8 00 00 00 00	 call	 __CrtDbgReportW
  00096	83 c4 18	 add	 esp, 24			; 00000018H
  00099	83 f8 01	 cmp	 eax, 1
  0009c	75 01		 jne	 SHORT $LN11@AtlWinModu
  0009e	cc		 int	 3
$LN11@AtlWinModu:

; 8369 : 		return pv;

  0009f	8b 45 fc	 mov	 eax, DWORD PTR _pv$[ebp]
  000a2	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  000a5	8d 4d f0	 lea	 ecx, DWORD PTR _lock$[ebp]
  000a8	e8 00 00 00 00	 call	 ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
  000ad	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  000b0	e9 85 00 00 00	 jmp	 $LN1@AtlWinModu
$LN5@AtlWinModu:

; 8370 : 	}
; 8371 : 	_AtlCreateWndData* pEntry = pWinModule->m_pCreateWndList;

  000b5	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  000b8	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  000bb	89 55 e8	 mov	 DWORD PTR _pEntry$[ebp], edx

; 8372 : 	if(pEntry != NULL)

  000be	83 7d e8 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  000c2	74 65		 je	 SHORT $LN6@AtlWinModu

; 8373 : 	{
; 8374 : 		DWORD dwThreadID = ::GetCurrentThreadId();

  000c4	8b f4		 mov	 esi, esp
  000c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentThreadId@0
  000cc	3b f4		 cmp	 esi, esp
  000ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d3	89 45 e4	 mov	 DWORD PTR _dwThreadID$5[ebp], eax

; 8375 : 		_AtlCreateWndData* pPrev = NULL;

  000d6	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pPrev$4[ebp], 0
$LN2@AtlWinModu:

; 8376 : 		while(pEntry != NULL)

  000dd	83 7d e8 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  000e1	74 46		 je	 SHORT $LN6@AtlWinModu

; 8377 : 		{
; 8378 : 			if(pEntry->m_dwThreadID == dwThreadID)

  000e3	8b 45 e8	 mov	 eax, DWORD PTR _pEntry$[ebp]
  000e6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000e9	3b 4d e4	 cmp	 ecx, DWORD PTR _dwThreadID$5[ebp]
  000ec	75 2a		 jne	 SHORT $LN7@AtlWinModu

; 8379 : 			{
; 8380 : 				if(pPrev == NULL)

  000ee	83 7d e0 00	 cmp	 DWORD PTR _pPrev$4[ebp], 0
  000f2	75 0e		 jne	 SHORT $LN8@AtlWinModu

; 8381 : 					pWinModule->m_pCreateWndList = pEntry->m_pNext;

  000f4	8b 55 08	 mov	 edx, DWORD PTR _pWinModule$[ebp]
  000f7	8b 45 e8	 mov	 eax, DWORD PTR _pEntry$[ebp]
  000fa	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000fd	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx
  00100	eb 0c		 jmp	 SHORT $LN9@AtlWinModu
$LN8@AtlWinModu:

; 8382 : 				else
; 8383 : 					pPrev->m_pNext = pEntry->m_pNext;

  00102	8b 55 e0	 mov	 edx, DWORD PTR _pPrev$4[ebp]
  00105	8b 45 e8	 mov	 eax, DWORD PTR _pEntry$[ebp]
  00108	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0010b	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN9@AtlWinModu:

; 8384 : 				pv = pEntry->m_pThis;

  0010e	8b 55 e8	 mov	 edx, DWORD PTR _pEntry$[ebp]
  00111	8b 02		 mov	 eax, DWORD PTR [edx]
  00113	89 45 fc	 mov	 DWORD PTR _pv$[ebp], eax

; 8385 : 				break;

  00116	eb 11		 jmp	 SHORT $LN6@AtlWinModu
$LN7@AtlWinModu:

; 8386 : 			}
; 8387 : 			pPrev = pEntry;

  00118	8b 4d e8	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  0011b	89 4d e0	 mov	 DWORD PTR _pPrev$4[ebp], ecx

; 8388 : 			pEntry = pEntry->m_pNext;

  0011e	8b 55 e8	 mov	 edx, DWORD PTR _pEntry$[ebp]
  00121	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00124	89 45 e8	 mov	 DWORD PTR _pEntry$[ebp], eax

; 8389 : 		}

  00127	eb b4		 jmp	 SHORT $LN2@AtlWinModu
$LN6@AtlWinModu:

; 8390 : 	}
; 8391 : 	return pv;

  00129	8b 4d fc	 mov	 ecx, DWORD PTR _pv$[ebp]
  0012c	89 4d d0	 mov	 DWORD PTR $T1[ebp], ecx
  0012f	8d 4d f0	 lea	 ecx, DWORD PTR _lock$[ebp]
  00132	e8 00 00 00 00	 call	 ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
  00137	8b 45 d0	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@AtlWinModu:

; 8392 : }

  0013a	52		 push	 edx
  0013b	8b cd		 mov	 ecx, ebp
  0013d	50		 push	 eax
  0013e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN14@AtlWinModu
  00144	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00149	58		 pop	 eax
  0014a	5a		 pop	 edx
  0014b	5f		 pop	 edi
  0014c	5e		 pop	 esi
  0014d	83 c4 30	 add	 esp, 48			; 00000030H
  00150	3b ec		 cmp	 ebp, esp
  00152	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00157	8b e5		 mov	 esp, ebp
  00159	5d		 pop	 ebp
  0015a	c2 04 00	 ret	 4
  0015d	0f 1f 00	 npad	 3
$LN14@AtlWinModu:
  00160	01 00 00 00	 DD	 1
  00164	00 00 00 00	 DD	 $LN13@AtlWinModu
$LN13@AtlWinModu:
  00168	f0 ff ff ff	 DD	 -16			; fffffff0H
  0016c	08 00 00 00	 DD	 8
  00170	00 00 00 00	 DD	 $LN12@AtlWinModu
$LN12@AtlWinModu:
  00174	6c		 DB	 108			; 0000006cH
  00175	6f		 DB	 111			; 0000006fH
  00176	63		 DB	 99			; 00000063H
  00177	6b		 DB	 107			; 0000006bH
  00178	00		 DB	 0
?AtlWinModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_WIN_MODULE70@1@@Z ENDP ; ATL::AtlWinModuleExtractCreateWndData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleAddCreateWndData@ATL@@YGXPAU_ATL_WIN_MODULE70@1@PAU_AtlCreateWndData@1@PAX@Z
_TEXT	SEGMENT
$T1 = -24						; size = 8
_lock$ = -12						; size = 8
_pWinModule$ = 8					; size = 4
_pData$ = 12						; size = 4
_pObject$ = 16						; size = 4
?AtlWinModuleAddCreateWndData@ATL@@YGXPAU_ATL_WIN_MODULE70@1@PAU_AtlCreateWndData@1@PAX@Z PROC ; ATL::AtlWinModuleAddCreateWndData, COMDAT

; 8336 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 8337 : 	if (pWinModule == NULL)

  0001e	83 7d 08 00	 cmp	 DWORD PTR _pWinModule$[ebp], 0
  00022	75 0c		 jne	 SHORT $LN2@AtlWinModu

; 8338 : 		_AtlRaiseException((DWORD)EXCEPTION_ACCESS_VIOLATION);

  00024	6a 01		 push	 1
  00026	68 05 00 00 c0	 push	 -1073741819		; c0000005H
  0002b	e8 00 00 00 00	 call	 ?_AtlRaiseException@ATL@@YAXKK@Z ; ATL::_AtlRaiseException
$LN2@AtlWinModu:

; 8339 : 
; 8340 : 	ATLASSERT(pData != NULL && pObject != NULL);

  00030	83 7d 0c 00	 cmp	 DWORD PTR _pData$[ebp], 0
  00034	74 06		 je	 SHORT $LN7@AtlWinModu
  00036	83 7d 10 00	 cmp	 DWORD PTR _pObject$[ebp], 0
  0003a	75 26		 jne	 SHORT $LN8@AtlWinModu
$LN7@AtlWinModu:
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@BEGLAIHK@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00046	6a 00		 push	 0
  00048	68 94 20 00 00	 push	 8340			; 00002094H
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00052	6a 02		 push	 2
  00054	e8 00 00 00 00	 call	 __CrtDbgReportW
  00059	83 c4 18	 add	 esp, 24			; 00000018H
  0005c	83 f8 01	 cmp	 eax, 1
  0005f	75 01		 jne	 SHORT $LN8@AtlWinModu
  00061	cc		 int	 3
$LN8@AtlWinModu:

; 8341 : 	if(pData == NULL || pObject == NULL)

  00062	83 7d 0c 00	 cmp	 DWORD PTR _pData$[ebp], 0
  00066	74 06		 je	 SHORT $LN4@AtlWinModu
  00068	83 7d 10 00	 cmp	 DWORD PTR _pObject$[ebp], 0
  0006c	75 0c		 jne	 SHORT $LN3@AtlWinModu
$LN4@AtlWinModu:

; 8342 : 		_AtlRaiseException((DWORD)EXCEPTION_ACCESS_VIOLATION);

  0006e	6a 01		 push	 1
  00070	68 05 00 00 c0	 push	 -1073741819		; c0000005H
  00075	e8 00 00 00 00	 call	 ?_AtlRaiseException@ATL@@YAXKK@Z ; ATL::_AtlRaiseException
$LN3@AtlWinModu:

; 8343 : 
; 8344 : 	pData->m_pThis = pObject;

  0007a	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  0007d	8b 55 10	 mov	 edx, DWORD PTR _pObject$[ebp]
  00080	89 11		 mov	 DWORD PTR [ecx], edx

; 8345 : 	pData->m_dwThreadID = ::GetCurrentThreadId();

  00082	8b f4		 mov	 esi, esp
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentThreadId@0
  0008a	3b f4		 cmp	 esi, esp
  0008c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00091	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  00094	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 8346 : 	CComCritSecLock<CComCriticalSection> lock(pWinModule->m_csWindowCreate, false);

  00097	6a 00		 push	 0
  00099	8b 55 08	 mov	 edx, DWORD PTR _pWinModule$[ebp]
  0009c	83 c2 04	 add	 edx, 4
  0009f	52		 push	 edx
  000a0	8d 4d f4	 lea	 ecx, DWORD PTR _lock$[ebp]
  000a3	e8 00 00 00 00	 call	 ??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>

; 8347 : 	if (FAILED(lock.Lock()))

  000a8	8d 4d f4	 lea	 ecx, DWORD PTR _lock$[ebp]
  000ab	e8 00 00 00 00	 call	 ?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
  000b0	85 c0		 test	 eax, eax
  000b2	7d 61		 jge	 SHORT $LN5@AtlWinModu

; 8348 : 	{
; 8349 : 		ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Unable to lock critical section in AtlWinModuleAddCreateWndData\n"));

  000b4	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@NCPNLOIP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
  000b9	6a 00		 push	 0
  000bb	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  000c0	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<32,0>::operator unsigned int
  000c5	50		 push	 eax
  000c6	68 9d 20 00 00	 push	 8349			; 0000209dH
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000d0	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  000d3	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000d8	50		 push	 eax
  000d9	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000de	83 c4 10	 add	 esp, 16			; 00000010H

; 8350 : 		ATLASSERT(0);

  000e1	33 c0		 xor	 eax, eax
  000e3	75 26		 jne	 SHORT $LN9@AtlWinModu
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  000ea	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000ef	6a 00		 push	 0
  000f1	68 9e 20 00 00	 push	 8350			; 0000209eH
  000f6	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000fb	6a 02		 push	 2
  000fd	e8 00 00 00 00	 call	 __CrtDbgReportW
  00102	83 c4 18	 add	 esp, 24			; 00000018H
  00105	83 f8 01	 cmp	 eax, 1
  00108	75 01		 jne	 SHORT $LN9@AtlWinModu
  0010a	cc		 int	 3
$LN9@AtlWinModu:

; 8351 : 		return;

  0010b	8d 4d f4	 lea	 ecx, DWORD PTR _lock$[ebp]
  0010e	e8 00 00 00 00	 call	 ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
  00113	eb 1d		 jmp	 SHORT $LN6@AtlWinModu
$LN5@AtlWinModu:

; 8352 : 	}
; 8353 : 	pData->m_pNext = pWinModule->m_pCreateWndList;

  00115	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00118	8b 45 08	 mov	 eax, DWORD PTR _pWinModule$[ebp]
  0011b	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0011e	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 8354 : 	pWinModule->m_pCreateWndList = pData;

  00121	8b 55 08	 mov	 edx, DWORD PTR _pWinModule$[ebp]
  00124	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00127	89 42 1c	 mov	 DWORD PTR [edx+28], eax

; 8355 : }

  0012a	8d 4d f4	 lea	 ecx, DWORD PTR _lock$[ebp]
  0012d	e8 00 00 00 00	 call	 ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
$LN6@AtlWinModu:
  00132	52		 push	 edx
  00133	8b cd		 mov	 ecx, ebp
  00135	50		 push	 eax
  00136	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@AtlWinModu
  0013c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00141	58		 pop	 eax
  00142	5a		 pop	 edx
  00143	5e		 pop	 esi
  00144	83 c4 18	 add	 esp, 24			; 00000018H
  00147	3b ec		 cmp	 ebp, esp
  00149	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014e	8b e5		 mov	 esp, ebp
  00150	5d		 pop	 ebp
  00151	c2 0c 00	 ret	 12			; 0000000cH
$LN12@AtlWinModu:
  00154	01 00 00 00	 DD	 1
  00158	00 00 00 00	 DD	 $LN11@AtlWinModu
$LN11@AtlWinModu:
  0015c	f4 ff ff ff	 DD	 -12			; fffffff4H
  00160	08 00 00 00	 DD	 8
  00164	00 00 00 00	 DD	 $LN10@AtlWinModu
$LN10@AtlWinModu:
  00168	6c		 DB	 108			; 0000006cH
  00169	6f		 DB	 111			; 0000006fH
  0016a	63		 DB	 99			; 00000063H
  0016b	6b		 DB	 107			; 0000006bH
  0016c	00		 DB	 0
?AtlWinModuleAddCreateWndData@ATL@@YGXPAU_ATL_WIN_MODULE70@1@PAU_AtlCreateWndData@1@PAX@Z ENDP ; ATL::AtlWinModuleAddCreateWndData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT
_i$1 = -4						; size = 4
_pWinModule$ = 8					; size = 4
_hInst$ = 12						; size = 4
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z PROC ; ATL::AtlWinModuleTerm, COMDAT

; 7652 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 7653 : 	if (pWinModule == NULL)

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pWinModule$[ebp], 0
  00010	75 0a		 jne	 SHORT $LN5@AtlWinModu

; 7654 : 		return E_INVALIDARG;

  00012	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00017	e9 86 00 00 00	 jmp	 $LN1@AtlWinModu
$LN5@AtlWinModu:

; 7655 : 	if (pWinModule->cbSize == 0)

  0001c	8b 45 08	 mov	 eax, DWORD PTR _pWinModule$[ebp]
  0001f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00022	75 04		 jne	 SHORT $LN6@AtlWinModu

; 7656 : 		return S_OK;

  00024	33 c0		 xor	 eax, eax
  00026	eb 7a		 jmp	 SHORT $LN1@AtlWinModu
$LN6@AtlWinModu:

; 7657 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

  00028	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  0002b	83 39 2c	 cmp	 DWORD PTR [ecx], 44	; 0000002cH
  0002e	74 07		 je	 SHORT $LN7@AtlWinModu

; 7658 : 		return E_INVALIDARG;

  00030	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00035	eb 6b		 jmp	 SHORT $LN1@AtlWinModu
$LN7@AtlWinModu:

; 7659 : 
; 7660 : 	for (int i = 0; i < pWinModule->m_rgWindowClassAtoms.GetSize(); i++)

  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0003e	eb 09		 jmp	 SHORT $LN4@AtlWinModu
$LN2@AtlWinModu:
  00040	8b 55 fc	 mov	 edx, DWORD PTR _i$1[ebp]
  00043	83 c2 01	 add	 edx, 1
  00046	89 55 fc	 mov	 DWORD PTR _i$1[ebp], edx
$LN4@AtlWinModu:
  00049	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  0004c	83 c1 20	 add	 ecx, 32			; 00000020H
  0004f	e8 00 00 00 00	 call	 ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
  00054	39 45 fc	 cmp	 DWORD PTR _i$1[ebp], eax
  00057	7d 28		 jge	 SHORT $LN3@AtlWinModu

; 7661 : 		UnregisterClass((LPCTSTR)pWinModule->m_rgWindowClassAtoms[i], hInst);

  00059	8b f4		 mov	 esi, esp
  0005b	8b 45 0c	 mov	 eax, DWORD PTR _hInst$[ebp]
  0005e	50		 push	 eax
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR _i$1[ebp]
  00062	51		 push	 ecx
  00063	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  00066	83 c1 20	 add	 ecx, 32			; 00000020H
  00069	e8 00 00 00 00	 call	 ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
  0006e	0f b7 10	 movzx	 edx, WORD PTR [eax]
  00071	52		 push	 edx
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UnregisterClassW@8
  00078	3b f4		 cmp	 esi, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007f	eb bf		 jmp	 SHORT $LN2@AtlWinModu
$LN3@AtlWinModu:

; 7662 : 	pWinModule->m_rgWindowClassAtoms.RemoveAll();

  00081	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  00084	83 c1 20	 add	 ecx, 32			; 00000020H
  00087	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll

; 7663 : 	pWinModule->m_csWindowCreate.Term();

  0008c	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  0008f	83 c1 04	 add	 ecx, 4
  00092	e8 00 00 00 00	 call	 ?Term@CComCriticalSection@ATL@@QAEJXZ ; ATL::CComCriticalSection::Term

; 7664 : 	pWinModule->cbSize = 0;

  00097	8b 45 08	 mov	 eax, DWORD PTR _pWinModule$[ebp]
  0009a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 7665 : 	return S_OK;

  000a0	33 c0		 xor	 eax, eax
$LN1@AtlWinModu:

; 7666 : }

  000a2	5e		 pop	 esi
  000a3	83 c4 04	 add	 esp, 4
  000a6	3b ec		 cmp	 ebp, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c2 08 00	 ret	 8
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ENDP ; ATL::AtlWinModuleTerm
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_hr$ = -4						; size = 4
_pWinModule$ = 8					; size = 4
?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z PROC ; ATL::AtlWinModuleInit, COMDAT

; 8396 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 8397 : 	if (pWinModule == NULL)

  0001b	83 7d 08 00	 cmp	 DWORD PTR _pWinModule$[ebp], 0
  0001f	75 0a		 jne	 SHORT $LN2@AtlWinModu

; 8398 : 		return E_INVALIDARG;

  00021	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00026	e9 87 00 00 00	 jmp	 $LN1@AtlWinModu
$LN2@AtlWinModu:

; 8399 : 
; 8400 : 	// check only in the DLL
; 8401 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

  0002b	8b 45 08	 mov	 eax, DWORD PTR _pWinModule$[ebp]
  0002e	83 38 2c	 cmp	 DWORD PTR [eax], 44	; 0000002cH
  00031	74 07		 je	 SHORT $LN3@AtlWinModu

; 8402 : 		return E_INVALIDARG;

  00033	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00038	eb 78		 jmp	 SHORT $LN1@AtlWinModu
$LN3@AtlWinModu:

; 8403 : 
; 8404 : 	pWinModule->m_pCreateWndList = NULL;

  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  0003d	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0

; 8405 : 
; 8406 : 	HRESULT hr = pWinModule->m_csWindowCreate.Init();

  00044	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  00047	83 c1 04	 add	 ecx, 4
  0004a	e8 00 00 00 00	 call	 ?Init@CComCriticalSection@ATL@@QAEJXZ ; ATL::CComCriticalSection::Init
  0004f	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 8407 : 	if (FAILED(hr))

  00052	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00056	7d 57		 jge	 SHORT $LN4@AtlWinModu

; 8408 : 	{
; 8409 : 		ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Unable to initialize critical section in AtlWinModuleInit\n"));

  00058	68 00 00 00 00	 push	 OFFSET ??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
  0005d	6a 00		 push	 0
  0005f	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  00064	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<32,0>::operator unsigned int
  00069	50		 push	 eax
  0006a	68 d9 20 00 00	 push	 8409			; 000020d9H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00074	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00077	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00082	83 c4 10	 add	 esp, 16			; 00000010H

; 8410 : 		ATLASSERT(0);

  00085	33 d2		 xor	 edx, edx
  00087	75 26		 jne	 SHORT $LN4@AtlWinModu
  00089	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00093	6a 00		 push	 0
  00095	68 da 20 00 00	 push	 8410			; 000020daH
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0009f	6a 02		 push	 2
  000a1	e8 00 00 00 00	 call	 __CrtDbgReportW
  000a6	83 c4 18	 add	 esp, 24			; 00000018H
  000a9	83 f8 01	 cmp	 eax, 1
  000ac	75 01		 jne	 SHORT $LN4@AtlWinModu
  000ae	cc		 int	 3
$LN4@AtlWinModu:

; 8411 : 	}
; 8412 : 	return hr;

  000af	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
$LN1@AtlWinModu:

; 8413 : }

  000b2	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b5	3b ec		 cmp	 ebp, esp
  000b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bc	8b e5		 mov	 esp, ebp
  000be	5d		 pop	 ebp
  000bf	c2 04 00	 ret	 4
?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ENDP ; ATL::AtlWinModuleInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
_pNext$ = -8						; size = 4
_pElem$ = -4						; size = 4
_pModule$ = 8						; size = 4
?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z PROC	; ATL::AtlCallTermFunc, COMDAT

; 8452 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 8453 : 	if (pModule == NULL)

  0001c	83 7d 08 00	 cmp	 DWORD PTR _pModule$[ebp], 0
  00020	75 0c		 jne	 SHORT $LN4@AtlCallTer

; 8454 : 		_AtlRaiseException((DWORD)EXCEPTION_ACCESS_VIOLATION);

  00022	6a 01		 push	 1
  00024	68 05 00 00 c0	 push	 -1073741819		; c0000005H
  00029	e8 00 00 00 00	 call	 ?_AtlRaiseException@ATL@@YAXKK@Z ; ATL::_AtlRaiseException
$LN4@AtlCallTer:

; 8455 : 
; 8456 : 	_ATL_TERMFUNC_ELEM* pElem = pModule->m_pTermFuncs;

  0002e	8b 45 08	 mov	 eax, DWORD PTR _pModule$[ebp]
  00031	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00034	89 4d fc	 mov	 DWORD PTR _pElem$[ebp], ecx

; 8457 : 	_ATL_TERMFUNC_ELEM* pNext = NULL;

  00037	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pNext$[ebp], 0
$LN2@AtlCallTer:

; 8458 : 	while (pElem != NULL)

  0003e	83 7d fc 00	 cmp	 DWORD PTR _pElem$[ebp], 0
  00042	74 3c		 je	 SHORT $LN3@AtlCallTer

; 8459 : 	{
; 8460 : 		pElem->pFunc(pElem->dw);

  00044	8b f4		 mov	 esi, esp
  00046	8b 55 fc	 mov	 edx, DWORD PTR _pElem$[ebp]
  00049	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004c	50		 push	 eax
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _pElem$[ebp]
  00050	8b 11		 mov	 edx, DWORD PTR [ecx]
  00052	ff d2		 call	 edx
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 8461 : 		pNext = pElem->pNext;

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _pElem$[ebp]
  0005e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00061	89 4d f8	 mov	 DWORD PTR _pNext$[ebp], ecx

; 8462 : 		delete pElem;

  00064	8b 55 fc	 mov	 edx, DWORD PTR _pElem$[ebp]
  00067	89 55 f4	 mov	 DWORD PTR $T1[ebp], edx
  0006a	6a 0c		 push	 12			; 0000000cH
  0006c	8b 45 f4	 mov	 eax, DWORD PTR $T1[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00075	83 c4 08	 add	 esp, 8

; 8463 : 		pElem = pNext;

  00078	8b 4d f8	 mov	 ecx, DWORD PTR _pNext$[ebp]
  0007b	89 4d fc	 mov	 DWORD PTR _pElem$[ebp], ecx

; 8464 : 	}

  0007e	eb be		 jmp	 SHORT $LN2@AtlCallTer
$LN3@AtlCallTer:

; 8465 : 	pModule->m_pTermFuncs = NULL;

  00080	8b 55 08	 mov	 edx, DWORD PTR _pModule$[ebp]
  00083	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
$LN5@AtlCallTer:

; 8466 : }

  0008a	5e		 pop	 esi
  0008b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008e	3b ec		 cmp	 ebp, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c2 04 00	 ret	 4
?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z ENDP	; ATL::AtlCallTermFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE70@1@P6GXK@ZK@Z
_TEXT	SEGMENT
$T1 = -40						; size = 8
$T2 = -32						; size = 4
$T3 = -28						; size = 4
_lock$4 = -20						; size = 8
_pNew$ = -8						; size = 4
_hr$ = -4						; size = 4
_pModule$ = 8						; size = 4
_pFunc$ = 12						; size = 4
_dw$ = 16						; size = 4
?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE70@1@P6GXK@ZK@Z PROC ; ATL::AtlModuleAddTermFunc, COMDAT

; 8422 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	57		 push	 edi
  00007	8d 7d d8	 lea	 edi, DWORD PTR [ebp-40]
  0000a	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd

; 8423 : 	if (pModule == NULL)

  00016	83 7d 08 00	 cmp	 DWORD PTR _pModule$[ebp], 0
  0001a	75 0a		 jne	 SHORT $LN2@AtlModuleA

; 8424 : 		return E_INVALIDARG;

  0001c	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00021	e9 f1 00 00 00	 jmp	 $LN1@AtlModuleA
$LN2@AtlModuleA:

; 8425 : 
; 8426 : 	HRESULT hr = S_OK;

  00026	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 8427 : 	_ATL_TERMFUNC_ELEM* pNew = _ATL_NEW _ATL_TERMFUNC_ELEM;

  0002d	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00032	6a 0c		 push	 12			; 0000000cH
  00034	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00039	83 c4 08	 add	 esp, 8
  0003c	89 45 e4	 mov	 DWORD PTR $T3[ebp], eax
  0003f	8b 45 e4	 mov	 eax, DWORD PTR $T3[ebp]
  00042	89 45 f8	 mov	 DWORD PTR _pNew$[ebp], eax

; 8428 : 	if (pNew == NULL)

  00045	83 7d f8 00	 cmp	 DWORD PTR _pNew$[ebp], 0
  00049	75 0c		 jne	 SHORT $LN3@AtlModuleA

; 8429 : 		hr = E_OUTOFMEMORY;

  0004b	c7 45 fc 0e 00
	07 80		 mov	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH
  00052	e9 bd 00 00 00	 jmp	 $LN4@AtlModuleA
$LN3@AtlModuleA:

; 8430 : 	else
; 8431 : 	{
; 8432 : 		pNew->pFunc = pFunc;

  00057	8b 4d f8	 mov	 ecx, DWORD PTR _pNew$[ebp]
  0005a	8b 55 0c	 mov	 edx, DWORD PTR _pFunc$[ebp]
  0005d	89 11		 mov	 DWORD PTR [ecx], edx

; 8433 : 		pNew->dw = dw;

  0005f	8b 45 f8	 mov	 eax, DWORD PTR _pNew$[ebp]
  00062	8b 4d 10	 mov	 ecx, DWORD PTR _dw$[ebp]
  00065	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 8434 : 		CComCritSecLock<CComCriticalSection> lock(pModule->m_csStaticDataInitAndTypeInfo, false);

  00068	6a 00		 push	 0
  0006a	8b 55 08	 mov	 edx, DWORD PTR _pModule$[ebp]
  0006d	83 c2 0c	 add	 edx, 12			; 0000000cH
  00070	52		 push	 edx
  00071	8d 4d ec	 lea	 ecx, DWORD PTR _lock$4[ebp]
  00074	e8 00 00 00 00	 call	 ??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>

; 8435 : 		hr = lock.Lock();

  00079	8d 4d ec	 lea	 ecx, DWORD PTR _lock$4[ebp]
  0007c	e8 00 00 00 00	 call	 ?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
  00081	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 8436 : 		if (SUCCEEDED(hr))

  00084	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00088	7c 17		 jl	 SHORT $LN5@AtlModuleA

; 8437 : 		{
; 8438 : 			pNew->pNext = pModule->m_pTermFuncs;

  0008a	8b 45 f8	 mov	 eax, DWORD PTR _pNew$[ebp]
  0008d	8b 4d 08	 mov	 ecx, DWORD PTR _pModule$[ebp]
  00090	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00093	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 8439 : 			pModule->m_pTermFuncs = pNew;

  00096	8b 45 08	 mov	 eax, DWORD PTR _pModule$[ebp]
  00099	8b 4d f8	 mov	 ecx, DWORD PTR _pNew$[ebp]
  0009c	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 8440 : 		}

  0009f	eb 6b		 jmp	 SHORT $LN6@AtlModuleA
$LN5@AtlModuleA:

; 8441 : 		else
; 8442 : 		{
; 8443 : 			delete pNew;

  000a1	8b 55 f8	 mov	 edx, DWORD PTR _pNew$[ebp]
  000a4	89 55 e0	 mov	 DWORD PTR $T2[ebp], edx
  000a7	6a 0c		 push	 12			; 0000000cH
  000a9	8b 45 e0	 mov	 eax, DWORD PTR $T2[ebp]
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000b2	83 c4 08	 add	 esp, 8

; 8444 : 			ATLTRACE(atlTraceGeneral, 0, _T("ERROR : Unable to lock critical section in AtlModuleAddTermFunc\n"));

  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_1IC@DIIBMAJJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
  000ba	6a 00		 push	 0
  000bc	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
  000c1	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$00$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<1,0>::operator unsigned int
  000c6	50		 push	 eax
  000c7	68 fc 20 00 00	 push	 8444			; 000020fcH
  000cc	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000d1	8d 4d d8	 lea	 ecx, DWORD PTR $T1[ebp]
  000d4	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000df	83 c4 10	 add	 esp, 16			; 00000010H

; 8445 : 			ATLASSERT(0);

  000e2	33 c9		 xor	 ecx, ecx
  000e4	75 26		 jne	 SHORT $LN6@AtlModuleA
  000e6	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  000eb	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000f0	6a 00		 push	 0
  000f2	68 fd 20 00 00	 push	 8445			; 000020fdH
  000f7	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000fc	6a 02		 push	 2
  000fe	e8 00 00 00 00	 call	 __CrtDbgReportW
  00103	83 c4 18	 add	 esp, 24			; 00000018H
  00106	83 f8 01	 cmp	 eax, 1
  00109	75 01		 jne	 SHORT $LN6@AtlModuleA
  0010b	cc		 int	 3
$LN6@AtlModuleA:

; 8446 : 		}
; 8447 : 	}

  0010c	8d 4d ec	 lea	 ecx, DWORD PTR _lock$4[ebp]
  0010f	e8 00 00 00 00	 call	 ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
$LN4@AtlModuleA:

; 8448 : 	return hr;

  00114	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
$LN1@AtlModuleA:

; 8449 : }

  00117	52		 push	 edx
  00118	8b cd		 mov	 ecx, ebp
  0011a	50		 push	 eax
  0011b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@AtlModuleA
  00121	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00126	58		 pop	 eax
  00127	5a		 pop	 edx
  00128	5f		 pop	 edi
  00129	83 c4 28	 add	 esp, 40			; 00000028H
  0012c	3b ec		 cmp	 ebp, esp
  0012e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00133	8b e5		 mov	 esp, ebp
  00135	5d		 pop	 ebp
  00136	c2 0c 00	 ret	 12			; 0000000cH
  00139	0f 1f 00	 npad	 3
$LN11@AtlModuleA:
  0013c	01 00 00 00	 DD	 1
  00140	00 00 00 00	 DD	 $LN10@AtlModuleA
$LN10@AtlModuleA:
  00144	ec ff ff ff	 DD	 -20			; ffffffecH
  00148	08 00 00 00	 DD	 8
  0014c	00 00 00 00	 DD	 $LN9@AtlModuleA
$LN9@AtlModuleA:
  00150	6c		 DB	 108			; 0000006cH
  00151	6f		 DB	 111			; 0000006fH
  00152	63		 DB	 99			; 00000063H
  00153	6b		 DB	 107			; 0000006bH
  00154	00		 DB	 0
?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE70@1@P6GXK@ZK@Z ENDP ; ATL::AtlModuleAddTermFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlComModuleUnregisterServer@ATL@@YGJPAU_ATL_COM_MODULE70@1@HPBU_GUID@@@Z
_TEXT	SEGMENT
_pEntry$1 = -12						; size = 4
_ppEntry$2 = -8						; size = 4
_hr$ = -4						; size = 4
_pComModule$ = 8					; size = 4
_bUnRegTypeLib$ = 12					; size = 4
_pCLSID$ = 16						; size = 4
?AtlComModuleUnregisterServer@ATL@@YGJPAU_ATL_COM_MODULE70@1@HPBU_GUID@@@Z PROC ; ATL::AtlComModuleUnregisterServer, COMDAT

; 7617 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 7618 : 	ATLASSERT(pComModule != NULL);

  0001c	83 7d 08 00	 cmp	 DWORD PTR _pComModule$[ebp], 0
  00020	75 26		 jne	 SHORT $LN13@AtlComModu
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@GAOMIJFK@?$AAp?$AAC?$AAo?$AAm?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0002c	6a 00		 push	 0
  0002e	68 c2 1d 00 00	 push	 7618			; 00001dc2H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00038	6a 02		 push	 2
  0003a	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003f	83 c4 18	 add	 esp, 24			; 00000018H
  00042	83 f8 01	 cmp	 eax, 1
  00045	75 01		 jne	 SHORT $LN13@AtlComModu
  00047	cc		 int	 3
$LN13@AtlComModu:

; 7619 : 	if (pComModule == NULL)

  00048	83 7d 08 00	 cmp	 DWORD PTR _pComModule$[ebp], 0
  0004c	75 0a		 jne	 SHORT $LN5@AtlComModu

; 7620 : 		return E_INVALIDARG;

  0004e	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00053	e9 c1 00 00 00	 jmp	 $LN1@AtlComModu
$LN5@AtlComModu:

; 7621 : 
; 7622 : 	HRESULT hr = S_OK;

  00058	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 7623 : 
; 7624 : 	for (_ATL_OBJMAP_ENTRY_EX** ppEntry = pComModule->m_ppAutoObjMapFirst; ppEntry < pComModule->m_ppAutoObjMapLast; ppEntry++)

  0005f	8b 4d 08	 mov	 ecx, DWORD PTR _pComModule$[ebp]
  00062	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00065	89 55 f8	 mov	 DWORD PTR _ppEntry$2[ebp], edx
  00068	eb 09		 jmp	 SHORT $LN4@AtlComModu
$LN2@AtlComModu:
  0006a	8b 45 f8	 mov	 eax, DWORD PTR _ppEntry$2[ebp]
  0006d	83 c0 04	 add	 eax, 4
  00070	89 45 f8	 mov	 DWORD PTR _ppEntry$2[ebp], eax
$LN4@AtlComModu:
  00073	8b 4d 08	 mov	 ecx, DWORD PTR _pComModule$[ebp]
  00076	8b 55 f8	 mov	 edx, DWORD PTR _ppEntry$2[ebp]
  00079	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  0007c	73 7b		 jae	 SHORT $LN3@AtlComModu

; 7625 : 	{
; 7626 : 		if (*ppEntry != NULL)

  0007e	8b 45 f8	 mov	 eax, DWORD PTR _ppEntry$2[ebp]
  00081	83 38 00	 cmp	 DWORD PTR [eax], 0
  00084	74 6e		 je	 SHORT $LN6@AtlComModu

; 7627 : 		{
; 7628 : 			_ATL_OBJMAP_ENTRY_EX* pEntry = *ppEntry;

  00086	8b 4d f8	 mov	 ecx, DWORD PTR _ppEntry$2[ebp]
  00089	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008b	89 55 f4	 mov	 DWORD PTR _pEntry$1[ebp], edx

; 7629 : 			if (pCLSID != NULL)

  0008e	83 7d 10 00	 cmp	 DWORD PTR _pCLSID$[ebp], 0
  00092	74 18		 je	 SHORT $LN7@AtlComModu

; 7630 : 			{
; 7631 : 				if (!IsEqualGUID(*pCLSID, *pEntry->pclsid))

  00094	8b 45 f4	 mov	 eax, DWORD PTR _pEntry$1[ebp]
  00097	8b 08		 mov	 ecx, DWORD PTR [eax]
  00099	51		 push	 ecx
  0009a	8b 55 10	 mov	 edx, DWORD PTR _pCLSID$[ebp]
  0009d	52		 push	 edx
  0009e	e8 00 00 00 00	 call	 _IsEqualGUID
  000a3	83 c4 08	 add	 esp, 8
  000a6	85 c0		 test	 eax, eax
  000a8	75 02		 jne	 SHORT $LN7@AtlComModu

; 7632 : 					continue;

  000aa	eb be		 jmp	 SHORT $LN2@AtlComModu
$LN7@AtlComModu:

; 7633 : 			}
; 7634 : 			hr = AtlRegisterClassCategoriesHelper( *pEntry->pclsid, pEntry->pfnGetCategoryMap(), FALSE );

  000ac	6a 00		 push	 0
  000ae	8b 45 f4	 mov	 eax, DWORD PTR _pEntry$1[ebp]
  000b1	8b f4		 mov	 esi, esp
  000b3	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b6	ff d1		 call	 ecx
  000b8	3b f4		 cmp	 esi, esp
  000ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bf	50		 push	 eax
  000c0	8b 55 f4	 mov	 edx, DWORD PTR _pEntry$1[ebp]
  000c3	8b 02		 mov	 eax, DWORD PTR [edx]
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z ; ATL::AtlRegisterClassCategoriesHelper
  000cb	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 7635 : 			if (FAILED(hr))

  000ce	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000d2	7d 02		 jge	 SHORT $LN9@AtlComModu

; 7636 : 				break;

  000d4	eb 23		 jmp	 SHORT $LN3@AtlComModu
$LN9@AtlComModu:

; 7637 : 			hr = pEntry->pfnUpdateRegistry(FALSE); //unregister

  000d6	8b f4		 mov	 esi, esp
  000d8	6a 00		 push	 0
  000da	8b 4d f4	 mov	 ecx, DWORD PTR _pEntry$1[ebp]
  000dd	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000e0	ff d2		 call	 edx
  000e2	3b f4		 cmp	 esi, esp
  000e4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e9	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 7638 : 			if (FAILED(hr))

  000ec	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000f0	7d 02		 jge	 SHORT $LN6@AtlComModu

; 7639 : 				break;

  000f2	eb 05		 jmp	 SHORT $LN3@AtlComModu
$LN6@AtlComModu:

; 7640 : 		}
; 7641 : 	}

  000f4	e9 71 ff ff ff	 jmp	 $LN2@AtlComModu
$LN3@AtlComModu:

; 7642 : 	if (SUCCEEDED(hr) && bUnRegTypeLib)

  000f9	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000fd	7c 17		 jl	 SHORT $LN11@AtlComModu
  000ff	83 7d 0c 00	 cmp	 DWORD PTR _bUnRegTypeLib$[ebp], 0
  00103	74 11		 je	 SHORT $LN11@AtlComModu

; 7643 : 		hr = AtlUnRegisterTypeLib(pComModule->m_hInstTypeLib, 0);

  00105	6a 00		 push	 0
  00107	8b 45 08	 mov	 eax, DWORD PTR _pComModule$[ebp]
  0010a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0010d	51		 push	 ecx
  0010e	e8 00 00 00 00	 call	 ?AtlUnRegisterTypeLib@ATL@@YGJPAUHINSTANCE__@@PB_W@Z ; ATL::AtlUnRegisterTypeLib
  00113	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax
$LN11@AtlComModu:

; 7644 : 
; 7645 : 	return hr;

  00116	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
$LN1@AtlComModu:

; 7646 : }

  00119	5e		 pop	 esi
  0011a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0011d	3b ec		 cmp	 ebp, esp
  0011f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c2 0c 00	 ret	 12			; 0000000cH
?AtlComModuleUnregisterServer@ATL@@YGJPAU_ATL_COM_MODULE70@1@HPBU_GUID@@@Z ENDP ; ATL::AtlComModuleUnregisterServer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlComModuleRegisterServer@ATL@@YGJPAU_ATL_COM_MODULE70@1@HPBU_GUID@@@Z
_TEXT	SEGMENT
_pEntry$1 = -12						; size = 4
_ppEntry$2 = -8						; size = 4
_hr$ = -4						; size = 4
_pComModule$ = 8					; size = 4
_bRegTypeLib$ = 12					; size = 4
_pCLSID$ = 16						; size = 4
?AtlComModuleRegisterServer@ATL@@YGJPAU_ATL_COM_MODULE70@1@HPBU_GUID@@@Z PROC ; ATL::AtlComModuleRegisterServer, COMDAT

; 7573 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 7574 : 	ATLASSERT(pComModule != NULL);

  0001c	83 7d 08 00	 cmp	 DWORD PTR _pComModule$[ebp], 0
  00020	75 26		 jne	 SHORT $LN16@AtlComModu
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@GAOMIJFK@?$AAp?$AAC?$AAo?$AAm?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0002c	6a 00		 push	 0
  0002e	68 96 1d 00 00	 push	 7574			; 00001d96H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00038	6a 02		 push	 2
  0003a	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003f	83 c4 18	 add	 esp, 24			; 00000018H
  00042	83 f8 01	 cmp	 eax, 1
  00045	75 01		 jne	 SHORT $LN16@AtlComModu
  00047	cc		 int	 3
$LN16@AtlComModu:

; 7575 : 	if (pComModule == NULL)

  00048	83 7d 08 00	 cmp	 DWORD PTR _pComModule$[ebp], 0
  0004c	75 0a		 jne	 SHORT $LN8@AtlComModu

; 7576 : 		return E_INVALIDARG;

  0004e	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00053	e9 23 01 00 00	 jmp	 $LN1@AtlComModu
$LN8@AtlComModu:

; 7577 : 	ATLASSERT(pComModule->m_hInstTypeLib != NULL);

  00058	8b 4d 08	 mov	 ecx, DWORD PTR _pComModule$[ebp]
  0005b	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  0005f	75 26		 jne	 SHORT $LN17@AtlComModu
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1EA@JIHAIGJA@?$AAp?$AAC?$AAo?$AAm?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?9?$AA?$DO?$AAm?$AA_?$AAh@
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0006b	6a 00		 push	 0
  0006d	68 99 1d 00 00	 push	 7577			; 00001d99H
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00077	6a 02		 push	 2
  00079	e8 00 00 00 00	 call	 __CrtDbgReportW
  0007e	83 c4 18	 add	 esp, 24			; 00000018H
  00081	83 f8 01	 cmp	 eax, 1
  00084	75 01		 jne	 SHORT $LN17@AtlComModu
  00086	cc		 int	 3
$LN17@AtlComModu:

; 7578 : 
; 7579 : 	HRESULT hr = S_OK;

  00087	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 7580 : 
; 7581 : 	for (_ATL_OBJMAP_ENTRY_EX** ppEntry = pComModule->m_ppAutoObjMapFirst; ppEntry < pComModule->m_ppAutoObjMapLast; ppEntry++)

  0008e	8b 45 08	 mov	 eax, DWORD PTR _pComModule$[ebp]
  00091	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00094	89 4d f8	 mov	 DWORD PTR _ppEntry$2[ebp], ecx
  00097	eb 09		 jmp	 SHORT $LN4@AtlComModu
$LN2@AtlComModu:
  00099	8b 55 f8	 mov	 edx, DWORD PTR _ppEntry$2[ebp]
  0009c	83 c2 04	 add	 edx, 4
  0009f	89 55 f8	 mov	 DWORD PTR _ppEntry$2[ebp], edx
$LN4@AtlComModu:
  000a2	8b 45 08	 mov	 eax, DWORD PTR _pComModule$[ebp]
  000a5	8b 4d f8	 mov	 ecx, DWORD PTR _ppEntry$2[ebp]
  000a8	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  000ab	73 7b		 jae	 SHORT $LN3@AtlComModu

; 7582 : 	{
; 7583 : 		if (*ppEntry != NULL)

  000ad	8b 55 f8	 mov	 edx, DWORD PTR _ppEntry$2[ebp]
  000b0	83 3a 00	 cmp	 DWORD PTR [edx], 0
  000b3	74 6e		 je	 SHORT $LN9@AtlComModu

; 7584 : 		{
; 7585 : 			_ATL_OBJMAP_ENTRY_EX* pEntry = *ppEntry;

  000b5	8b 45 f8	 mov	 eax, DWORD PTR _ppEntry$2[ebp]
  000b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ba	89 4d f4	 mov	 DWORD PTR _pEntry$1[ebp], ecx

; 7586 : 			if (pCLSID != NULL)

  000bd	83 7d 10 00	 cmp	 DWORD PTR _pCLSID$[ebp], 0
  000c1	74 18		 je	 SHORT $LN10@AtlComModu

; 7587 : 			{
; 7588 : 				if (!IsEqualGUID(*pCLSID, *pEntry->pclsid))

  000c3	8b 55 f4	 mov	 edx, DWORD PTR _pEntry$1[ebp]
  000c6	8b 02		 mov	 eax, DWORD PTR [edx]
  000c8	50		 push	 eax
  000c9	8b 4d 10	 mov	 ecx, DWORD PTR _pCLSID$[ebp]
  000cc	51		 push	 ecx
  000cd	e8 00 00 00 00	 call	 _IsEqualGUID
  000d2	83 c4 08	 add	 esp, 8
  000d5	85 c0		 test	 eax, eax
  000d7	75 02		 jne	 SHORT $LN10@AtlComModu

; 7589 : 					continue;

  000d9	eb be		 jmp	 SHORT $LN2@AtlComModu
$LN10@AtlComModu:

; 7590 : 			}
; 7591 : 			hr = pEntry->pfnUpdateRegistry(TRUE);

  000db	8b f4		 mov	 esi, esp
  000dd	6a 01		 push	 1
  000df	8b 55 f4	 mov	 edx, DWORD PTR _pEntry$1[ebp]
  000e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000e5	ff d0		 call	 eax
  000e7	3b f4		 cmp	 esi, esp
  000e9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ee	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 7592 : 			if (FAILED(hr))

  000f1	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000f5	7d 02		 jge	 SHORT $LN12@AtlComModu

; 7593 : 				break;

  000f7	eb 2f		 jmp	 SHORT $LN3@AtlComModu
$LN12@AtlComModu:

; 7594 : 			hr = AtlRegisterClassCategoriesHelper( *pEntry->pclsid,

  000f9	6a 01		 push	 1
  000fb	8b 4d f4	 mov	 ecx, DWORD PTR _pEntry$1[ebp]
  000fe	8b f4		 mov	 esi, esp
  00100	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00103	ff d2		 call	 edx
  00105	3b f4		 cmp	 esi, esp
  00107	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010c	50		 push	 eax
  0010d	8b 45 f4	 mov	 eax, DWORD PTR _pEntry$1[ebp]
  00110	8b 08		 mov	 ecx, DWORD PTR [eax]
  00112	51		 push	 ecx
  00113	e8 00 00 00 00	 call	 ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z ; ATL::AtlRegisterClassCategoriesHelper
  00118	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 7595 : 				pEntry->pfnGetCategoryMap(), TRUE );
; 7596 : 			if (FAILED(hr))

  0011b	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0011f	7d 02		 jge	 SHORT $LN9@AtlComModu

; 7597 : 				break;

  00121	eb 05		 jmp	 SHORT $LN3@AtlComModu
$LN9@AtlComModu:

; 7598 : 		}
; 7599 : 	}

  00123	e9 71 ff ff ff	 jmp	 $LN2@AtlComModu
$LN3@AtlComModu:

; 7600 : 
; 7601 : 	if (SUCCEEDED(hr) && bRegTypeLib)

  00128	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0012c	7c 4a		 jl	 SHORT $LN14@AtlComModu
  0012e	83 7d 0c 00	 cmp	 DWORD PTR _bRegTypeLib$[ebp], 0
  00132	74 44		 je	 SHORT $LN14@AtlComModu
$LN7@AtlComModu:

; 7602 : 	{
; 7603 : 		ATLASSUME(pComModule->m_hInstTypeLib != NULL);

  00134	8b 55 08	 mov	 edx, DWORD PTR _pComModule$[ebp]
  00137	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  0013b	75 26		 jne	 SHORT $LN5@AtlComModu
  0013d	68 00 00 00 00	 push	 OFFSET ??_C@_1EA@JIHAIGJA@?$AAp?$AAC?$AAo?$AAm?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?9?$AA?$DO?$AAm?$AA_?$AAh@
  00142	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00147	6a 00		 push	 0
  00149	68 b3 1d 00 00	 push	 7603			; 00001db3H
  0014e	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00153	6a 02		 push	 2
  00155	e8 00 00 00 00	 call	 __CrtDbgReportW
  0015a	83 c4 18	 add	 esp, 24			; 00000018H
  0015d	83 f8 01	 cmp	 eax, 1
  00160	75 01		 jne	 SHORT $LN5@AtlComModu
  00162	cc		 int	 3
$LN5@AtlComModu:
  00163	33 c9		 xor	 ecx, ecx
  00165	75 cd		 jne	 SHORT $LN7@AtlComModu

; 7604 : 		hr = AtlRegisterTypeLib(pComModule->m_hInstTypeLib, 0);

  00167	6a 00		 push	 0
  00169	8b 55 08	 mov	 edx, DWORD PTR _pComModule$[ebp]
  0016c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0016f	50		 push	 eax
  00170	e8 00 00 00 00	 call	 ?AtlRegisterTypeLib@ATL@@YGJPAUHINSTANCE__@@PB_W@Z ; ATL::AtlRegisterTypeLib
  00175	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax
$LN14@AtlComModu:

; 7605 : 	}
; 7606 : 
; 7607 : 	return hr;

  00178	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
$LN1@AtlComModu:

; 7608 : }

  0017b	5e		 pop	 esi
  0017c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0017f	3b ec		 cmp	 ebp, esp
  00181	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00186	8b e5		 mov	 esp, ebp
  00188	5d		 pop	 ebp
  00189	c2 0c 00	 ret	 12			; 0000000cH
?AtlComModuleRegisterServer@ATL@@YGJPAU_ATL_COM_MODULE70@1@HPBU_GUID@@@Z ENDP ; ATL::AtlComModuleRegisterServer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlUnRegisterTypeLib@ATL@@YGJPAUHINSTANCE__@@PB_W@Z
_TEXT	SEGMENT
tv167 = -76						; size = 4
tv95 = -72						; size = 4
$T1 = -68						; size = 4
$T2 = -64						; size = 4
_hmodOleAut$3 = -60					; size = 4
_bRedirectionEnabled$4 = -49				; size = 1
_pfnUnRegisterTypeLib$5 = -44				; size = 4
_ptla$6 = -36						; size = 4
_hr$ = -28						; size = 4
_pTypeLib$ = -20					; size = 4
_bstrPath$ = -8						; size = 4
_hInstTypeLib$ = 8					; size = 4
_lpszIndex$ = 12					; size = 4
?AtlUnRegisterTypeLib@ATL@@YGJPAUHINSTANCE__@@PB_W@Z PROC ; ATL::AtlUnRegisterTypeLib, COMDAT

; 7353 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  0000b	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd

; 7354 : 	CComBSTR bstrPath;

  00017	8d 4d f8	 lea	 ecx, DWORD PTR _bstrPath$[ebp]
  0001a	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::CComBSTR

; 7355 : 	CComPtr<ITypeLib> pTypeLib;

  0001f	8d 4d ec	 lea	 ecx, DWORD PTR _pTypeLib$[ebp]
  00022	e8 00 00 00 00	 call	 ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ ; ATL::CComPtr<ITypeLib>::CComPtr<ITypeLib>

; 7356 : 	HRESULT hr = AtlLoadTypeLib(hInstTypeLib, lpszIndex, &bstrPath, &pTypeLib);

  00027	8d 4d ec	 lea	 ecx, DWORD PTR _pTypeLib$[ebp]
  0002a	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ ; ATL::CComPtrBase<ITypeLib>::operator&
  0002f	50		 push	 eax
  00030	8d 4d f8	 lea	 ecx, DWORD PTR _bstrPath$[ebp]
  00033	e8 00 00 00 00	 call	 ??ICComBSTR@ATL@@QAEPAPA_WXZ ; ATL::CComBSTR::operator&
  00038	50		 push	 eax
  00039	8b 45 0c	 mov	 eax, DWORD PTR _lpszIndex$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _hInstTypeLib$[ebp]
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ?AtlLoadTypeLib@ATL@@YGJPAUHINSTANCE__@@PB_WPAPA_WPAPAUITypeLib@@@Z ; ATL::AtlLoadTypeLib
  00046	89 45 e4	 mov	 DWORD PTR _hr$[ebp], eax

; 7357 : 	if (SUCCEEDED(hr))

  00049	83 7d e4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0004d	0f 8c 15 01 00
	00		 jl	 $LN2@AtlUnRegis

; 7358 : 	{
; 7359 : 		TLIBATTR* ptla;
; 7360 : 		hr = pTypeLib->GetLibAttr(&ptla);

  00053	8d 4d ec	 lea	 ecx, DWORD PTR _pTypeLib$[ebp]
  00056	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ ; ATL::CComPtrBase<ITypeLib>::operator->
  0005b	89 45 b8	 mov	 DWORD PTR tv95[ebp], eax
  0005e	8b f4		 mov	 esi, esp
  00060	8d 55 dc	 lea	 edx, DWORD PTR _ptla$6[ebp]
  00063	52		 push	 edx
  00064	8b 45 b8	 mov	 eax, DWORD PTR tv95[ebp]
  00067	50		 push	 eax
  00068	8b 4d b8	 mov	 ecx, DWORD PTR tv95[ebp]
  0006b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006d	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00070	ff d0		 call	 eax
  00072	3b f4		 cmp	 esi, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	89 45 e4	 mov	 DWORD PTR _hr$[ebp], eax

; 7361 : 		if (SUCCEEDED(hr))

  0007c	83 7d e4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00080	0f 8c e2 00 00
	00		 jl	 $LN2@AtlUnRegis

; 7362 : 		{
; 7363 : 			typedef HRESULT (STDAPICALLTYPE *PFNUNREGISTERTYPELIB)(REFGUID, WORD /* wVerMajor */, WORD /* wVerMinor */, LCID, SYSKIND);
; 7364 : 			PFNUNREGISTERTYPELIB pfnUnRegisterTypeLib = NULL;

  00086	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _pfnUnRegisterTypeLib$5[ebp], 0

; 7365 : 
; 7366 : 			bool bRedirectionEnabled = false;

  0008d	c6 45 cf 00	 mov	 BYTE PTR _bRedirectionEnabled$4[ebp], 0

; 7367 : 			hr = AtlGetPerUserRegistration(&bRedirectionEnabled);

  00091	8d 4d cf	 lea	 ecx, DWORD PTR _bRedirectionEnabled$4[ebp]
  00094	51		 push	 ecx
  00095	e8 00 00 00 00	 call	 ?AtlGetPerUserRegistration@ATL@@YGJPA_N@Z ; ATL::AtlGetPerUserRegistration
  0009a	89 45 e4	 mov	 DWORD PTR _hr$[ebp], eax

; 7368 : 			if( FAILED(hr) )

  0009d	83 7d e4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000a1	7d 1e		 jge	 SHORT $LN4@AtlUnRegis

; 7369 : 			{
; 7370 : 				return hr;

  000a3	8b 55 e4	 mov	 edx, DWORD PTR _hr$[ebp]
  000a6	89 55 c0	 mov	 DWORD PTR $T2[ebp], edx
  000a9	8d 4d ec	 lea	 ecx, DWORD PTR _pTypeLib$[ebp]
  000ac	e8 00 00 00 00	 call	 ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
  000b1	8d 4d f8	 lea	 ecx, DWORD PTR _bstrPath$[ebp]
  000b4	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  000b9	8b 45 c0	 mov	 eax, DWORD PTR $T2[ebp]
  000bc	e9 c0 00 00 00	 jmp	 $LN1@AtlUnRegis
$LN4@AtlUnRegis:

; 7371 : 			}
; 7372 : 
; 7373 : 			if( true == bRedirectionEnabled )

  000c1	0f b6 45 cf	 movzx	 eax, BYTE PTR _bRedirectionEnabled$4[ebp]
  000c5	83 f8 01	 cmp	 eax, 1
  000c8	75 38		 jne	 SHORT $LN5@AtlUnRegis

; 7374 : 			{
; 7375 : 				HMODULE hmodOleAut=::GetModuleHandleW(L"OLEAUT32.DLL");

  000ca	8b f4		 mov	 esi, esp
  000cc	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@EDKOLFBJ@?$AAO?$AAL?$AAE?$AAA?$AAU?$AAT?$AA3?$AA2?$AA?4?$AAD?$AAL?$AAL@
  000d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleW@4
  000d7	3b f4		 cmp	 esi, esp
  000d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000de	89 45 c4	 mov	 DWORD PTR _hmodOleAut$3[ebp], eax

; 7376 : 				if(hmodOleAut)

  000e1	83 7d c4 00	 cmp	 DWORD PTR _hmodOleAut$3[ebp], 0
  000e5	74 1b		 je	 SHORT $LN5@AtlUnRegis

; 7377 : 				{
; 7378 : 					pfnUnRegisterTypeLib=reinterpret_cast<PFNUNREGISTERTYPELIB>(::GetProcAddress(hmodOleAut, "UnRegisterTypeLibForUser"));

  000e7	8b f4		 mov	 esi, esp
  000e9	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@CNLFOMHB@UnRegisterTypeLibForUser@
  000ee	8b 4d c4	 mov	 ecx, DWORD PTR _hmodOleAut$3[ebp]
  000f1	51		 push	 ecx
  000f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  000f8	3b f4		 cmp	 esi, esp
  000fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ff	89 45 d4	 mov	 DWORD PTR _pfnUnRegisterTypeLib$5[ebp], eax
$LN5@AtlUnRegis:

; 7379 : 				}
; 7380 : 			}
; 7381 : 
; 7382 : 			if( NULL == pfnUnRegisterTypeLib )

  00102	83 7d d4 00	 cmp	 DWORD PTR _pfnUnRegisterTypeLib$5[ebp], 0
  00106	75 09		 jne	 SHORT $LN7@AtlUnRegis

; 7383 : 			{
; 7384 : 				pfnUnRegisterTypeLib = (PFNUNREGISTERTYPELIB)&UnRegisterTypeLib;

  00108	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp__UnRegisterTypeLib@20
  0010e	89 55 d4	 mov	 DWORD PTR _pfnUnRegisterTypeLib$5[ebp], edx
$LN7@AtlUnRegis:

; 7385 : 			}
; 7386 : 
; 7387 : 			hr = pfnUnRegisterTypeLib(ptla->guid, ptla->wMajorVerNum, ptla->wMinorVerNum, ptla->lcid, ptla->syskind);

  00111	8b f4		 mov	 esi, esp
  00113	8b 45 dc	 mov	 eax, DWORD PTR _ptla$6[ebp]
  00116	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00119	51		 push	 ecx
  0011a	8b 55 dc	 mov	 edx, DWORD PTR _ptla$6[ebp]
  0011d	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00120	50		 push	 eax
  00121	8b 4d dc	 mov	 ecx, DWORD PTR _ptla$6[ebp]
  00124	0f b7 51 1a	 movzx	 edx, WORD PTR [ecx+26]
  00128	52		 push	 edx
  00129	8b 45 dc	 mov	 eax, DWORD PTR _ptla$6[ebp]
  0012c	0f b7 48 18	 movzx	 ecx, WORD PTR [eax+24]
  00130	51		 push	 ecx
  00131	8b 55 dc	 mov	 edx, DWORD PTR _ptla$6[ebp]
  00134	52		 push	 edx
  00135	ff 55 d4	 call	 DWORD PTR _pfnUnRegisterTypeLib$5[ebp]
  00138	3b f4		 cmp	 esi, esp
  0013a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013f	89 45 e4	 mov	 DWORD PTR _hr$[ebp], eax

; 7388 : 
; 7389 : 			pTypeLib->ReleaseTLibAttr(ptla);

  00142	8d 4d ec	 lea	 ecx, DWORD PTR _pTypeLib$[ebp]
  00145	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ ; ATL::CComPtrBase<ITypeLib>::operator->
  0014a	89 45 b4	 mov	 DWORD PTR tv167[ebp], eax
  0014d	8b f4		 mov	 esi, esp
  0014f	8b 45 dc	 mov	 eax, DWORD PTR _ptla$6[ebp]
  00152	50		 push	 eax
  00153	8b 4d b4	 mov	 ecx, DWORD PTR tv167[ebp]
  00156	51		 push	 ecx
  00157	8b 55 b4	 mov	 edx, DWORD PTR tv167[ebp]
  0015a	8b 02		 mov	 eax, DWORD PTR [edx]
  0015c	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0015f	ff d1		 call	 ecx
  00161	3b f4		 cmp	 esi, esp
  00163	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@AtlUnRegis:

; 7390 : 		}
; 7391 : 	}
; 7392 : 	return hr;

  00168	8b 55 e4	 mov	 edx, DWORD PTR _hr$[ebp]
  0016b	89 55 bc	 mov	 DWORD PTR $T1[ebp], edx
  0016e	8d 4d ec	 lea	 ecx, DWORD PTR _pTypeLib$[ebp]
  00171	e8 00 00 00 00	 call	 ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
  00176	8d 4d f8	 lea	 ecx, DWORD PTR _bstrPath$[ebp]
  00179	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  0017e	8b 45 bc	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@AtlUnRegis:

; 7393 : }

  00181	52		 push	 edx
  00182	8b cd		 mov	 ecx, ebp
  00184	50		 push	 eax
  00185	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN14@AtlUnRegis
  0018b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00190	58		 pop	 eax
  00191	5a		 pop	 edx
  00192	5f		 pop	 edi
  00193	5e		 pop	 esi
  00194	83 c4 4c	 add	 esp, 76			; 0000004cH
  00197	3b ec		 cmp	 ebp, esp
  00199	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0019e	8b e5		 mov	 esp, ebp
  001a0	5d		 pop	 ebp
  001a1	c2 08 00	 ret	 8
$LN14@AtlUnRegis:
  001a4	04 00 00 00	 DD	 4
  001a8	00 00 00 00	 DD	 $LN13@AtlUnRegis
$LN13@AtlUnRegis:
  001ac	f8 ff ff ff	 DD	 -8			; fffffff8H
  001b0	04 00 00 00	 DD	 4
  001b4	00 00 00 00	 DD	 $LN9@AtlUnRegis
  001b8	ec ff ff ff	 DD	 -20			; ffffffecH
  001bc	04 00 00 00	 DD	 4
  001c0	00 00 00 00	 DD	 $LN10@AtlUnRegis
  001c4	dc ff ff ff	 DD	 -36			; ffffffdcH
  001c8	04 00 00 00	 DD	 4
  001cc	00 00 00 00	 DD	 $LN11@AtlUnRegis
  001d0	cf ff ff ff	 DD	 -49			; ffffffcfH
  001d4	01 00 00 00	 DD	 1
  001d8	00 00 00 00	 DD	 $LN12@AtlUnRegis
$LN12@AtlUnRegis:
  001dc	62		 DB	 98			; 00000062H
  001dd	52		 DB	 82			; 00000052H
  001de	65		 DB	 101			; 00000065H
  001df	64		 DB	 100			; 00000064H
  001e0	69		 DB	 105			; 00000069H
  001e1	72		 DB	 114			; 00000072H
  001e2	65		 DB	 101			; 00000065H
  001e3	63		 DB	 99			; 00000063H
  001e4	74		 DB	 116			; 00000074H
  001e5	69		 DB	 105			; 00000069H
  001e6	6f		 DB	 111			; 0000006fH
  001e7	6e		 DB	 110			; 0000006eH
  001e8	45		 DB	 69			; 00000045H
  001e9	6e		 DB	 110			; 0000006eH
  001ea	61		 DB	 97			; 00000061H
  001eb	62		 DB	 98			; 00000062H
  001ec	6c		 DB	 108			; 0000006cH
  001ed	65		 DB	 101			; 00000065H
  001ee	64		 DB	 100			; 00000064H
  001ef	00		 DB	 0
$LN11@AtlUnRegis:
  001f0	70		 DB	 112			; 00000070H
  001f1	74		 DB	 116			; 00000074H
  001f2	6c		 DB	 108			; 0000006cH
  001f3	61		 DB	 97			; 00000061H
  001f4	00		 DB	 0
$LN10@AtlUnRegis:
  001f5	70		 DB	 112			; 00000070H
  001f6	54		 DB	 84			; 00000054H
  001f7	79		 DB	 121			; 00000079H
  001f8	70		 DB	 112			; 00000070H
  001f9	65		 DB	 101			; 00000065H
  001fa	4c		 DB	 76			; 0000004cH
  001fb	69		 DB	 105			; 00000069H
  001fc	62		 DB	 98			; 00000062H
  001fd	00		 DB	 0
$LN9@AtlUnRegis:
  001fe	62		 DB	 98			; 00000062H
  001ff	73		 DB	 115			; 00000073H
  00200	74		 DB	 116			; 00000074H
  00201	72		 DB	 114			; 00000072H
  00202	50		 DB	 80			; 00000050H
  00203	61		 DB	 97			; 00000061H
  00204	74		 DB	 116			; 00000074H
  00205	68		 DB	 104			; 00000068H
  00206	00		 DB	 0
?AtlUnRegisterTypeLib@ATL@@YGJPAUHINSTANCE__@@PB_W@Z ENDP ; ATL::AtlUnRegisterTypeLib
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlRegisterTypeLib@ATL@@YGJPAUHINSTANCE__@@PB_W@Z
_TEXT	SEGMENT
tv130 = -616						; size = 4
$T1 = -612						; size = 4
$T2 = -608						; size = 4
$T3 = -604						; size = 4
$T4 = -600						; size = 4
_hmodOleAut$5 = -596					; size = 4
_bRedirectionEnabled$6 = -585				; size = 1
_pfnRegisterTypeLib$7 = -580				; size = 4
_bstrHelpFile$8 = -572					; size = 4
_szDirBuffer$9 = -560					; size = 520
_szDir$10 = -36						; size = 4
_hr$ = -32						; size = 4
_pTypeLib$ = -24					; size = 4
_bstrPath$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_hInstTypeLib$ = 8					; size = 4
_lpszIndex$ = 12					; size = 4
?AtlRegisterTypeLib@ATL@@YGJPAUHINSTANCE__@@PB_W@Z PROC	; ATL::AtlRegisterTypeLib, COMDAT

; 7398 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 68 02 00
	00		 sub	 esp, 616		; 00000268H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 98 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-616]
  00011	b9 9a 00 00 00	 mov	 ecx, 154		; 0000009aH
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 7399 : 	CComBSTR bstrPath;

  00027	8d 4d f4	 lea	 ecx, DWORD PTR _bstrPath$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::CComBSTR

; 7400 : 	CComPtr<ITypeLib> pTypeLib;

  0002f	8d 4d e8	 lea	 ecx, DWORD PTR _pTypeLib$[ebp]
  00032	e8 00 00 00 00	 call	 ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ ; ATL::CComPtr<ITypeLib>::CComPtr<ITypeLib>

; 7401 : 	HRESULT hr = AtlLoadTypeLib(hInstTypeLib, lpszIndex, &bstrPath, &pTypeLib);

  00037	8d 4d e8	 lea	 ecx, DWORD PTR _pTypeLib$[ebp]
  0003a	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ ; ATL::CComPtrBase<ITypeLib>::operator&
  0003f	50		 push	 eax
  00040	8d 4d f4	 lea	 ecx, DWORD PTR _bstrPath$[ebp]
  00043	e8 00 00 00 00	 call	 ??ICComBSTR@ATL@@QAEPAPA_WXZ ; ATL::CComBSTR::operator&
  00048	50		 push	 eax
  00049	8b 45 0c	 mov	 eax, DWORD PTR _lpszIndex$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR _hInstTypeLib$[ebp]
  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 ?AtlLoadTypeLib@ATL@@YGJPAUHINSTANCE__@@PB_WPAPA_WPAPAUITypeLib@@@Z ; ATL::AtlLoadTypeLib
  00056	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax

; 7402 : 	if (SUCCEEDED(hr))

  00059	83 7d e0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0005d	0f 8c 07 02 00
	00		 jl	 $LN2@AtlRegiste

; 7403 : 	{
; 7404 : 		LPCOLESTR szDir=NULL;

  00063	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _szDir$10[ebp], 0

; 7405 : 		OLECHAR szDirBuffer[MAX_PATH];
; 7406 : 		CComBSTR bstrHelpFile;

  0006a	8d 8d c4 fd ff
	ff		 lea	 ecx, DWORD PTR _bstrHelpFile$8[ebp]
  00070	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::CComBSTR

; 7407 : 		hr = pTypeLib->GetDocumentation(-1, NULL, NULL, NULL, &bstrHelpFile);

  00075	8d 4d e8	 lea	 ecx, DWORD PTR _pTypeLib$[ebp]
  00078	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ ; ATL::CComPtrBase<ITypeLib>::operator->
  0007d	89 85 98 fd ff
	ff		 mov	 DWORD PTR tv130[ebp], eax
  00083	8d 8d c4 fd ff
	ff		 lea	 ecx, DWORD PTR _bstrHelpFile$8[ebp]
  00089	e8 00 00 00 00	 call	 ??ICComBSTR@ATL@@QAEPAPA_WXZ ; ATL::CComBSTR::operator&
  0008e	8b f4		 mov	 esi, esp
  00090	50		 push	 eax
  00091	6a 00		 push	 0
  00093	6a 00		 push	 0
  00095	6a 00		 push	 0
  00097	6a ff		 push	 -1
  00099	8b 95 98 fd ff
	ff		 mov	 edx, DWORD PTR tv130[ebp]
  0009f	52		 push	 edx
  000a0	8b 85 98 fd ff
	ff		 mov	 eax, DWORD PTR tv130[ebp]
  000a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a8	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  000ab	ff d2		 call	 edx
  000ad	3b f4		 cmp	 esi, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b4	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax

; 7408 : 		if (SUCCEEDED(hr) && bstrHelpFile != NULL)

  000b7	83 7d e0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000bb	0f 8c bc 00 00
	00		 jl	 $LN3@AtlRegiste
  000c1	6a 00		 push	 0
  000c3	8d 8d c4 fd ff
	ff		 lea	 ecx, DWORD PTR _bstrHelpFile$8[ebp]
  000c9	e8 00 00 00 00	 call	 ??9CComBSTR@ATL@@QBE_NH@Z ; ATL::CComBSTR::operator!=
  000ce	0f b6 c0	 movzx	 eax, al
  000d1	85 c0		 test	 eax, eax
  000d3	0f 84 a4 00 00
	00		 je	 $LN3@AtlRegiste

; 7409 : 		{
; 7410 : 			Checked::wcsncpy_s(szDirBuffer, MAX_PATH, bstrHelpFile.m_str, bstrHelpFile.Length());

  000d9	8d 8d c4 fd ff
	ff		 lea	 ecx, DWORD PTR _bstrHelpFile$8[ebp]
  000df	e8 00 00 00 00	 call	 ?Length@CComBSTR@ATL@@QBEIXZ ; ATL::CComBSTR::Length
  000e4	50		 push	 eax
  000e5	8b 8d c4 fd ff
	ff		 mov	 ecx, DWORD PTR _bstrHelpFile$8[ebp]
  000eb	51		 push	 ecx
  000ec	68 04 01 00 00	 push	 260			; 00000104H
  000f1	8d 95 d0 fd ff
	ff		 lea	 edx, DWORD PTR _szDirBuffer$9[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ?wcsncpy_s@Checked@ATL@@YAHPA_WIPB_WI@Z ; ATL::Checked::wcsncpy_s
  000fd	83 c4 10	 add	 esp, 16			; 00000010H

; 7411 : 			szDirBuffer[MAX_PATH - 1] = 0;

  00100	b8 02 00 00 00	 mov	 eax, 2
  00105	69 c8 03 01 00
	00		 imul	 ecx, eax, 259
  0010b	89 8d a8 fd ff
	ff		 mov	 DWORD PTR $T4[ebp], ecx
  00111	81 bd a8 fd ff
	ff 08 02 00 00	 cmp	 DWORD PTR $T4[ebp], 520	; 00000208H
  0011b	73 02		 jae	 SHORT $LN9@AtlRegiste
  0011d	eb 05		 jmp	 SHORT $LN10@AtlRegiste
$LN9@AtlRegiste:
  0011f	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN10@AtlRegiste:
  00124	33 d2		 xor	 edx, edx
  00126	8b 85 a8 fd ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  0012c	66 89 94 05 d0
	fd ff ff	 mov	 WORD PTR _szDirBuffer$9[ebp+eax], dx

; 7412 : 
; 7413 : 			// truncate at the directory level
; 7414 : 			szDirBuffer[AtlGetDirLen(szDirBuffer)] = 0;

  00134	8d 8d d0 fd ff
	ff		 lea	 ecx, DWORD PTR _szDirBuffer$9[ebp]
  0013a	51		 push	 ecx
  0013b	e8 00 00 00 00	 call	 ?AtlGetDirLen@ATL@@YGIPB_W@Z ; ATL::AtlGetDirLen
  00140	d1 e0		 shl	 eax, 1
  00142	89 85 a4 fd ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00148	81 bd a4 fd ff
	ff 08 02 00 00	 cmp	 DWORD PTR $T3[ebp], 520	; 00000208H
  00152	73 02		 jae	 SHORT $LN11@AtlRegiste
  00154	eb 05		 jmp	 SHORT $LN12@AtlRegiste
$LN11@AtlRegiste:
  00156	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN12@AtlRegiste:
  0015b	33 d2		 xor	 edx, edx
  0015d	8b 85 a4 fd ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  00163	66 89 94 05 d0
	fd ff ff	 mov	 WORD PTR _szDirBuffer$9[ebp+eax], dx

; 7415 : 
; 7416 : 			szDir=&szDirBuffer[0];

  0016b	b9 02 00 00 00	 mov	 ecx, 2
  00170	6b d1 00	 imul	 edx, ecx, 0
  00173	8d 84 15 d0 fd
	ff ff		 lea	 eax, DWORD PTR _szDirBuffer$9[ebp+edx]
  0017a	89 45 dc	 mov	 DWORD PTR _szDir$10[ebp], eax
$LN3@AtlRegiste:

; 7417 : 		}
; 7418 : 
; 7419 : 		typedef HRESULT (STDAPICALLTYPE *PFNREGISTERTYPELIB)(ITypeLib *, LPCOLESTR /* const szFullPath */, LPCOLESTR /* const szHelpDir */);
; 7420 : 		PFNREGISTERTYPELIB pfnRegisterTypeLib = NULL;

  0017d	c7 85 bc fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _pfnRegisterTypeLib$7[ebp], 0

; 7421 : 
; 7422 : 		bool bRedirectionEnabled = false;

  00187	c6 85 b7 fd ff
	ff 00		 mov	 BYTE PTR _bRedirectionEnabled$6[ebp], 0

; 7423 : 		hr = AtlGetPerUserRegistration(&bRedirectionEnabled);

  0018e	8d 8d b7 fd ff
	ff		 lea	 ecx, DWORD PTR _bRedirectionEnabled$6[ebp]
  00194	51		 push	 ecx
  00195	e8 00 00 00 00	 call	 ?AtlGetPerUserRegistration@ATL@@YGJPA_N@Z ; ATL::AtlGetPerUserRegistration
  0019a	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax

; 7424 : 		if( FAILED(hr) )

  0019d	83 7d e0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001a1	7d 2f		 jge	 SHORT $LN4@AtlRegiste

; 7425 : 		{
; 7426 : 			return hr;

  001a3	8b 55 e0	 mov	 edx, DWORD PTR _hr$[ebp]
  001a6	89 95 a0 fd ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  001ac	8d 8d c4 fd ff
	ff		 lea	 ecx, DWORD PTR _bstrHelpFile$8[ebp]
  001b2	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  001b7	8d 4d e8	 lea	 ecx, DWORD PTR _pTypeLib$[ebp]
  001ba	e8 00 00 00 00	 call	 ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
  001bf	8d 4d f4	 lea	 ecx, DWORD PTR _bstrPath$[ebp]
  001c2	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  001c7	8b 85 a0 fd ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  001cd	e9 b7 00 00 00	 jmp	 $LN8@AtlRegiste
$LN4@AtlRegiste:

; 7427 : 		}
; 7428 : 
; 7429 : 		if( true == bRedirectionEnabled )

  001d2	0f b6 85 b7 fd
	ff ff		 movzx	 eax, BYTE PTR _bRedirectionEnabled$6[ebp]
  001d9	83 f8 01	 cmp	 eax, 1
  001dc	75 44		 jne	 SHORT $LN5@AtlRegiste

; 7430 : 		{
; 7431 : 			HMODULE hmodOleAut=::GetModuleHandleW(L"OLEAUT32.DLL");

  001de	8b f4		 mov	 esi, esp
  001e0	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@EDKOLFBJ@?$AAO?$AAL?$AAE?$AAA?$AAU?$AAT?$AA3?$AA2?$AA?4?$AAD?$AAL?$AAL@
  001e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleW@4
  001eb	3b f4		 cmp	 esi, esp
  001ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f2	89 85 ac fd ff
	ff		 mov	 DWORD PTR _hmodOleAut$5[ebp], eax

; 7432 : 			if(hmodOleAut)

  001f8	83 bd ac fd ff
	ff 00		 cmp	 DWORD PTR _hmodOleAut$5[ebp], 0
  001ff	74 21		 je	 SHORT $LN5@AtlRegiste

; 7433 : 			{
; 7434 : 				pfnRegisterTypeLib=reinterpret_cast<PFNREGISTERTYPELIB>(::GetProcAddress(hmodOleAut, "RegisterTypeLibForUser"));

  00201	8b f4		 mov	 esi, esp
  00203	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LBOMMKPJ@RegisterTypeLibForUser@
  00208	8b 8d ac fd ff
	ff		 mov	 ecx, DWORD PTR _hmodOleAut$5[ebp]
  0020e	51		 push	 ecx
  0020f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00215	3b f4		 cmp	 esi, esp
  00217	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0021c	89 85 bc fd ff
	ff		 mov	 DWORD PTR _pfnRegisterTypeLib$7[ebp], eax
$LN5@AtlRegiste:

; 7435 : 			}
; 7436 : 		}
; 7437 : 
; 7438 : 		if( NULL == pfnRegisterTypeLib )

  00222	83 bd bc fd ff
	ff 00		 cmp	 DWORD PTR _pfnRegisterTypeLib$7[ebp], 0
  00229	75 0c		 jne	 SHORT $LN7@AtlRegiste

; 7439 : 		{
; 7440 : 			pfnRegisterTypeLib = (PFNREGISTERTYPELIB)&RegisterTypeLib;

  0022b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp__RegisterTypeLib@12
  00231	89 95 bc fd ff
	ff		 mov	 DWORD PTR _pfnRegisterTypeLib$7[ebp], edx
$LN7@AtlRegiste:

; 7441 : 		}
; 7442 : 
; 7443 : 		hr = pfnRegisterTypeLib(pTypeLib, bstrPath, szDir);

  00237	8b f4		 mov	 esi, esp
  00239	8b 45 dc	 mov	 eax, DWORD PTR _szDir$10[ebp]
  0023c	50		 push	 eax
  0023d	8d 4d f4	 lea	 ecx, DWORD PTR _bstrPath$[ebp]
  00240	e8 00 00 00 00	 call	 ??BCComBSTR@ATL@@QBEPA_WXZ ; ATL::CComBSTR::operator wchar_t *
  00245	50		 push	 eax
  00246	8d 4d e8	 lea	 ecx, DWORD PTR _pTypeLib$[ebp]
  00249	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ ; ATL::CComPtrBase<ITypeLib>::operator ITypeLib *
  0024e	50		 push	 eax
  0024f	ff 95 bc fd ff
	ff		 call	 DWORD PTR _pfnRegisterTypeLib$7[ebp]
  00255	3b f4		 cmp	 esi, esp
  00257	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0025c	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax

; 7444 : 
; 7445 : 	}

  0025f	8d 8d c4 fd ff
	ff		 lea	 ecx, DWORD PTR _bstrHelpFile$8[ebp]
  00265	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
$LN2@AtlRegiste:

; 7446 : 	return hr;

  0026a	8b 4d e0	 mov	 ecx, DWORD PTR _hr$[ebp]
  0026d	89 8d 9c fd ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  00273	8d 4d e8	 lea	 ecx, DWORD PTR _pTypeLib$[ebp]
  00276	e8 00 00 00 00	 call	 ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
  0027b	8d 4d f4	 lea	 ecx, DWORD PTR _bstrPath$[ebp]
  0027e	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  00283	8b 85 9c fd ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
$LN8@AtlRegiste:

; 7447 : }

  00289	52		 push	 edx
  0028a	8b cd		 mov	 ecx, ebp
  0028c	50		 push	 eax
  0028d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN19@AtlRegiste
  00293	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00298	58		 pop	 eax
  00299	5a		 pop	 edx
  0029a	5f		 pop	 edi
  0029b	5e		 pop	 esi
  0029c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0029f	33 cd		 xor	 ecx, ebp
  002a1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002a6	81 c4 68 02 00
	00		 add	 esp, 616		; 00000268H
  002ac	3b ec		 cmp	 ebp, esp
  002ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002b3	8b e5		 mov	 esp, ebp
  002b5	5d		 pop	 ebp
  002b6	c2 08 00	 ret	 8
  002b9	0f 1f 00	 npad	 3
$LN19@AtlRegiste:
  002bc	05 00 00 00	 DD	 5
  002c0	00 00 00 00	 DD	 $LN18@AtlRegiste
$LN18@AtlRegiste:
  002c4	f4 ff ff ff	 DD	 -12			; fffffff4H
  002c8	04 00 00 00	 DD	 4
  002cc	00 00 00 00	 DD	 $LN13@AtlRegiste
  002d0	e8 ff ff ff	 DD	 -24			; ffffffe8H
  002d4	04 00 00 00	 DD	 4
  002d8	00 00 00 00	 DD	 $LN14@AtlRegiste
  002dc	d0 fd ff ff	 DD	 -560			; fffffdd0H
  002e0	08 02 00 00	 DD	 520			; 00000208H
  002e4	00 00 00 00	 DD	 $LN15@AtlRegiste
  002e8	c4 fd ff ff	 DD	 -572			; fffffdc4H
  002ec	04 00 00 00	 DD	 4
  002f0	00 00 00 00	 DD	 $LN16@AtlRegiste
  002f4	b7 fd ff ff	 DD	 -585			; fffffdb7H
  002f8	01 00 00 00	 DD	 1
  002fc	00 00 00 00	 DD	 $LN17@AtlRegiste
$LN17@AtlRegiste:
  00300	62		 DB	 98			; 00000062H
  00301	52		 DB	 82			; 00000052H
  00302	65		 DB	 101			; 00000065H
  00303	64		 DB	 100			; 00000064H
  00304	69		 DB	 105			; 00000069H
  00305	72		 DB	 114			; 00000072H
  00306	65		 DB	 101			; 00000065H
  00307	63		 DB	 99			; 00000063H
  00308	74		 DB	 116			; 00000074H
  00309	69		 DB	 105			; 00000069H
  0030a	6f		 DB	 111			; 0000006fH
  0030b	6e		 DB	 110			; 0000006eH
  0030c	45		 DB	 69			; 00000045H
  0030d	6e		 DB	 110			; 0000006eH
  0030e	61		 DB	 97			; 00000061H
  0030f	62		 DB	 98			; 00000062H
  00310	6c		 DB	 108			; 0000006cH
  00311	65		 DB	 101			; 00000065H
  00312	64		 DB	 100			; 00000064H
  00313	00		 DB	 0
$LN16@AtlRegiste:
  00314	62		 DB	 98			; 00000062H
  00315	73		 DB	 115			; 00000073H
  00316	74		 DB	 116			; 00000074H
  00317	72		 DB	 114			; 00000072H
  00318	48		 DB	 72			; 00000048H
  00319	65		 DB	 101			; 00000065H
  0031a	6c		 DB	 108			; 0000006cH
  0031b	70		 DB	 112			; 00000070H
  0031c	46		 DB	 70			; 00000046H
  0031d	69		 DB	 105			; 00000069H
  0031e	6c		 DB	 108			; 0000006cH
  0031f	65		 DB	 101			; 00000065H
  00320	00		 DB	 0
$LN15@AtlRegiste:
  00321	73		 DB	 115			; 00000073H
  00322	7a		 DB	 122			; 0000007aH
  00323	44		 DB	 68			; 00000044H
  00324	69		 DB	 105			; 00000069H
  00325	72		 DB	 114			; 00000072H
  00326	42		 DB	 66			; 00000042H
  00327	75		 DB	 117			; 00000075H
  00328	66		 DB	 102			; 00000066H
  00329	66		 DB	 102			; 00000066H
  0032a	65		 DB	 101			; 00000065H
  0032b	72		 DB	 114			; 00000072H
  0032c	00		 DB	 0
$LN14@AtlRegiste:
  0032d	70		 DB	 112			; 00000070H
  0032e	54		 DB	 84			; 00000054H
  0032f	79		 DB	 121			; 00000079H
  00330	70		 DB	 112			; 00000070H
  00331	65		 DB	 101			; 00000065H
  00332	4c		 DB	 76			; 0000004cH
  00333	69		 DB	 105			; 00000069H
  00334	62		 DB	 98			; 00000062H
  00335	00		 DB	 0
$LN13@AtlRegiste:
  00336	62		 DB	 98			; 00000062H
  00337	73		 DB	 115			; 00000073H
  00338	74		 DB	 116			; 00000074H
  00339	72		 DB	 114			; 00000072H
  0033a	50		 DB	 80			; 00000050H
  0033b	61		 DB	 97			; 00000061H
  0033c	74		 DB	 116			; 00000074H
  0033d	68		 DB	 104			; 00000068H
  0033e	00		 DB	 0
?AtlRegisterTypeLib@ATL@@YGJPAUHINSTANCE__@@PB_W@Z ENDP	; ATL::AtlRegisterTypeLib
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlLoadTypeLib@ATL@@YGJPAUHINSTANCE__@@PB_WPAPA_WPAPAUITypeLib@@@Z
_TEXT	SEGMENT
$T1 = -656						; size = 4
$T2 = -652						; size = 4
$T3 = -648						; size = 4
$T4 = -644						; size = 4
$T5 = -640						; size = 4
$T6 = -636						; size = 4
_szExt$7 = -628						; size = 10
_hr$ = -612						; size = 4
_lpszModule$ = -608					; size = 4
_newLen$8 = -604					; size = 4
_nIndexLen$9 = -600					; size = 4
_lpcszIndex$10 = -596					; size = 4
_lpszExt$ = -592					; size = 4
_hRes$11 = -588						; size = 4
_dwFLen$ = -584						; size = 4
_szModule$ = -576					; size = 540
__AtlSafeAllocaManager$ = -28				; size = 4
__lpa_ex$ = -20						; size = 4
__lpw_ex$ = -16						; size = 4
__acp_ex$ = -12						; size = 4
__convert_ex$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_hInstTypeLib$ = 8					; size = 4
_lpszIndex$ = 12					; size = 4
_pbstrPath$ = 16					; size = 4
_ppTypeLib$ = 20					; size = 4
?AtlLoadTypeLib@ATL@@YGJPAUHINSTANCE__@@PB_WPAPA_WPAPAUITypeLib@@@Z PROC ; ATL::AtlLoadTypeLib, COMDAT

; 7114 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 02 00
	00		 sub	 esp, 656		; 00000290H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 70 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-656]
  00011	b9 a4 00 00 00	 mov	 ecx, 164		; 000000a4H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 7115 : 	ATLASSERT(pbstrPath != NULL && ppTypeLib != NULL);

  00027	83 7d 10 00	 cmp	 DWORD PTR _pbstrPath$[ebp], 0
  0002b	74 06		 je	 SHORT $LN16@AtlLoadTyp
  0002d	83 7d 14 00	 cmp	 DWORD PTR _ppTypeLib$[ebp], 0
  00031	75 26		 jne	 SHORT $LN17@AtlLoadTyp
$LN16@AtlLoadTyp:
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_1EC@GOCPDDCL@?$AAp?$AAb?$AAs?$AAt?$AAr?$AAP?$AAa?$AAt?$AAh?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5@
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0003d	6a 00		 push	 0
  0003f	68 cb 1b 00 00	 push	 7115			; 00001bcbH
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00049	6a 02		 push	 2
  0004b	e8 00 00 00 00	 call	 __CrtDbgReportW
  00050	83 c4 18	 add	 esp, 24			; 00000018H
  00053	83 f8 01	 cmp	 eax, 1
  00056	75 01		 jne	 SHORT $LN17@AtlLoadTyp
  00058	cc		 int	 3
$LN17@AtlLoadTyp:

; 7116 : 	if (pbstrPath == NULL || ppTypeLib == NULL)

  00059	83 7d 10 00	 cmp	 DWORD PTR _pbstrPath$[ebp], 0
  0005d	74 06		 je	 SHORT $LN3@AtlLoadTyp
  0005f	83 7d 14 00	 cmp	 DWORD PTR _ppTypeLib$[ebp], 0
  00063	75 0a		 jne	 SHORT $LN2@AtlLoadTyp
$LN3@AtlLoadTyp:

; 7117 : 		return E_POINTER;

  00065	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0006a	e9 67 03 00 00	 jmp	 $LN1@AtlLoadTyp
$LN2@AtlLoadTyp:

; 7118 : 
; 7119 : 	*pbstrPath = NULL;

  0006f	8b 4d 10	 mov	 ecx, DWORD PTR _pbstrPath$[ebp]
  00072	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 7120 : 	*ppTypeLib = NULL;

  00078	8b 55 14	 mov	 edx, DWORD PTR _ppTypeLib$[ebp]
  0007b	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 7121 : 
; 7122 : 	USES_CONVERSION_EX;

  00081	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __convert_ex$[ebp], 0
  00088	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  0008d	89 45 f4	 mov	 DWORD PTR __acp_ex$[ebp], eax
  00090	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __lpw_ex$[ebp], 0
  00097	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __lpa_ex$[ebp], 0
  0009e	8d 4d e4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  000a1	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>

; 7123 : 	ATLASSERT(hInstTypeLib != NULL);

  000a6	83 7d 08 00	 cmp	 DWORD PTR _hInstTypeLib$[ebp], 0
  000aa	75 26		 jne	 SHORT $LN18@AtlLoadTyp
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@MNLFIKHJ@?$AAh?$AAI?$AAn?$AAs?$AAt?$AAT?$AAy?$AAp?$AAe?$AAL?$AAi?$AAb?$AA?5?$AA?$CB?$AA?$DN@
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000b6	6a 00		 push	 0
  000b8	68 d3 1b 00 00	 push	 7123			; 00001bd3H
  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000c2	6a 02		 push	 2
  000c4	e8 00 00 00 00	 call	 __CrtDbgReportW
  000c9	83 c4 18	 add	 esp, 24			; 00000018H
  000cc	83 f8 01	 cmp	 eax, 1
  000cf	75 01		 jne	 SHORT $LN18@AtlLoadTyp
  000d1	cc		 int	 3
$LN18@AtlLoadTyp:

; 7124 : 	TCHAR szModule[_ATL_MAX_PATH_PLUS_INDEX];
; 7125 : 
; 7126 : 	DWORD dwFLen = GetModuleFileName(hInstTypeLib, szModule, MAX_PATH);

  000d2	8b f4		 mov	 esi, esp
  000d4	68 04 01 00 00	 push	 260			; 00000104H
  000d9	8d 8d c0 fd ff
	ff		 lea	 ecx, DWORD PTR _szModule$[ebp]
  000df	51		 push	 ecx
  000e0	8b 55 08	 mov	 edx, DWORD PTR _hInstTypeLib$[ebp]
  000e3	52		 push	 edx
  000e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleFileNameW@12
  000ea	3b f4		 cmp	 esi, esp
  000ec	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f1	89 85 b8 fd ff
	ff		 mov	 DWORD PTR _dwFLen$[ebp], eax

; 7127 : 	if( dwFLen == 0 )

  000f7	83 bd b8 fd ff
	ff 00		 cmp	 DWORD PTR _dwFLen$[ebp], 0
  000fe	75 2c		 jne	 SHORT $LN4@AtlLoadTyp

; 7128 : 	{
; 7129 : 		HRESULT hRes = AtlHresultFromLastError();

  00100	e8 00 00 00 00	 call	 ?AtlHresultFromLastError@ATL@@YAJXZ ; ATL::AtlHresultFromLastError
  00105	89 85 b4 fd ff
	ff		 mov	 DWORD PTR _hRes$11[ebp], eax

; 7130 : 		_Analysis_assume_(FAILED(hRes));
; 7131 : 		return hRes;

  0010b	8b 85 b4 fd ff
	ff		 mov	 eax, DWORD PTR _hRes$11[ebp]
  00111	89 85 84 fd ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  00117	8d 4d e4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0011a	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  0011f	8b 85 84 fd ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  00125	e9 ac 02 00 00	 jmp	 $LN1@AtlLoadTyp

; 7132 : 	}

  0012a	eb 2f		 jmp	 SHORT $LN5@AtlLoadTyp
$LN4@AtlLoadTyp:

; 7133 : 	else if( dwFLen == MAX_PATH )

  0012c	81 bd b8 fd ff
	ff 04 01 00 00	 cmp	 DWORD PTR _dwFLen$[ebp], 260 ; 00000104H
  00136	75 23		 jne	 SHORT $LN5@AtlLoadTyp

; 7134 : 		return HRESULT_FROM_WIN32(ERROR_INSUFFICIENT_BUFFER);

  00138	6a 7a		 push	 122			; 0000007aH
  0013a	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  0013f	83 c4 04	 add	 esp, 4
  00142	89 85 80 fd ff
	ff		 mov	 DWORD PTR $T5[ebp], eax
  00148	8d 4d e4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0014b	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00150	8b 85 80 fd ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  00156	e9 7b 02 00 00	 jmp	 $LN1@AtlLoadTyp
$LN5@AtlLoadTyp:

; 7135 : 
; 7136 : 	// get the extension pointer in case of fail
; 7137 : 	LPTSTR lpszExt = NULL;

  0015b	c7 85 b0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _lpszExt$[ebp], 0

; 7138 : 
; 7139 : 	lpszExt = AtlFindExtension(szModule);

  00165	8d 8d c0 fd ff
	ff		 lea	 ecx, DWORD PTR _szModule$[ebp]
  0016b	51		 push	 ecx
  0016c	e8 00 00 00 00	 call	 ?AtlFindExtension@ATL@@YAPA_WPB_W@Z ; ATL::AtlFindExtension
  00171	83 c4 04	 add	 esp, 4
  00174	89 85 b0 fd ff
	ff		 mov	 DWORD PTR _lpszExt$[ebp], eax

; 7140 : 
; 7141 : 	if (lpszIndex != NULL)

  0017a	83 7d 0c 00	 cmp	 DWORD PTR _lpszIndex$[ebp], 0
  0017e	0f 84 d2 00 00
	00		 je	 $LN7@AtlLoadTyp

; 7142 : 	{
; 7143 : 		LPCTSTR lpcszIndex = OLE2CT_EX(lpszIndex, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  00184	68 00 04 00 00	 push	 1024			; 00000400H
  00189	8b 55 0c	 mov	 edx, DWORD PTR _lpszIndex$[ebp]
  0018c	52		 push	 edx
  0018d	e8 00 00 00 00	 call	 ?OLE2CT_EX@@YAPB_WPB_WI@Z ; OLE2CT_EX
  00192	83 c4 08	 add	 esp, 8
  00195	89 85 ac fd ff
	ff		 mov	 DWORD PTR _lpcszIndex$10[ebp], eax

; 7144 : 		if(lpcszIndex == NULL)

  0019b	83 bd ac fd ff
	ff 00		 cmp	 DWORD PTR _lpcszIndex$10[ebp], 0
  001a2	75 1d		 jne	 SHORT $LN8@AtlLoadTyp

; 7145 : 		{
; 7146 : 			return E_OUTOFMEMORY;

  001a4	c7 85 7c fd ff
	ff 0e 00 07 80	 mov	 DWORD PTR $T4[ebp], -2147024882 ; 8007000eH
  001ae	8d 4d e4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  001b1	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  001b6	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  001bc	e9 15 02 00 00	 jmp	 $LN1@AtlLoadTyp
$LN8@AtlLoadTyp:

; 7147 : 		}
; 7148 : 		DWORD nIndexLen = static_cast<DWORD>(_tcslen(lpcszIndex));

  001c1	8b 85 ac fd ff
	ff		 mov	 eax, DWORD PTR _lpcszIndex$10[ebp]
  001c7	50		 push	 eax
  001c8	e8 00 00 00 00	 call	 _wcslen
  001cd	83 c4 04	 add	 esp, 4
  001d0	89 85 a8 fd ff
	ff		 mov	 DWORD PTR _nIndexLen$9[ebp], eax

; 7149 : 
; 7150 : 		DWORD newLen = dwFLen + nIndexLen;

  001d6	8b 8d b8 fd ff
	ff		 mov	 ecx, DWORD PTR _dwFLen$[ebp]
  001dc	03 8d a8 fd ff
	ff		 add	 ecx, DWORD PTR _nIndexLen$9[ebp]
  001e2	89 8d a4 fd ff
	ff		 mov	 DWORD PTR _newLen$8[ebp], ecx

; 7151 : 		if ((newLen < dwFLen) || (newLen < nIndexLen) || (newLen >= _ATL_MAX_PATH_PLUS_INDEX))

  001e8	8b 95 a4 fd ff
	ff		 mov	 edx, DWORD PTR _newLen$8[ebp]
  001ee	3b 95 b8 fd ff
	ff		 cmp	 edx, DWORD PTR _dwFLen$[ebp]
  001f4	72 1a		 jb	 SHORT $LN10@AtlLoadTyp
  001f6	8b 85 a4 fd ff
	ff		 mov	 eax, DWORD PTR _newLen$8[ebp]
  001fc	3b 85 a8 fd ff
	ff		 cmp	 eax, DWORD PTR _nIndexLen$9[ebp]
  00202	72 0c		 jb	 SHORT $LN10@AtlLoadTyp
  00204	81 bd a4 fd ff
	ff 0e 01 00 00	 cmp	 DWORD PTR _newLen$8[ebp], 270 ; 0000010eH
  0020e	72 1d		 jb	 SHORT $LN9@AtlLoadTyp
$LN10@AtlLoadTyp:

; 7152 : 			return E_FAIL;

  00210	c7 85 78 fd ff
	ff 05 40 00 80	 mov	 DWORD PTR $T3[ebp], -2147467259 ; 80004005H
  0021a	8d 4d e4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0021d	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00222	8b 85 78 fd ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  00228	e9 a9 01 00 00	 jmp	 $LN1@AtlLoadTyp
$LN9@AtlLoadTyp:

; 7153 : #ifdef UNICODE
; 7154 : 		Checked::wcscpy_s(szModule + dwFLen, _countof(szModule) - dwFLen, lpcszIndex);

  0022d	8b 8d ac fd ff
	ff		 mov	 ecx, DWORD PTR _lpcszIndex$10[ebp]
  00233	51		 push	 ecx
  00234	ba 0e 01 00 00	 mov	 edx, 270		; 0000010eH
  00239	2b 95 b8 fd ff
	ff		 sub	 edx, DWORD PTR _dwFLen$[ebp]
  0023f	52		 push	 edx
  00240	8b 85 b8 fd ff
	ff		 mov	 eax, DWORD PTR _dwFLen$[ebp]
  00246	8d 8c 45 c0 fd
	ff ff		 lea	 ecx, DWORD PTR _szModule$[ebp+eax*2]
  0024d	51		 push	 ecx
  0024e	e8 00 00 00 00	 call	 ?wcscpy_s@Checked@ATL@@YAXPA_WIPB_W@Z ; ATL::Checked::wcscpy_s
  00253	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@AtlLoadTyp:

; 7155 : #else
; 7156 : 		Checked::strcpy_s(szModule + dwFLen, _countof(szModule) - dwFLen, lpcszIndex);
; 7157 : #endif
; 7158 : 	}
; 7159 : 	LPOLESTR lpszModule = T2OLE_EX(szModule, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  00256	68 00 04 00 00	 push	 1024			; 00000400H
  0025b	8d 95 c0 fd ff
	ff		 lea	 edx, DWORD PTR _szModule$[ebp]
  00261	52		 push	 edx
  00262	e8 00 00 00 00	 call	 ?T2OLE_EX@@YAPA_WPA_WI@Z ; T2OLE_EX
  00267	83 c4 08	 add	 esp, 8
  0026a	89 85 a0 fd ff
	ff		 mov	 DWORD PTR _lpszModule$[ebp], eax

; 7160 : #ifndef _UNICODE
; 7161 : 	if(lpszModule == NULL)
; 7162 : 		return E_OUTOFMEMORY;
; 7163 : #endif
; 7164 : 	HRESULT hr = LoadTypeLib(lpszModule, ppTypeLib);

  00270	8b f4		 mov	 esi, esp
  00272	8b 45 14	 mov	 eax, DWORD PTR _ppTypeLib$[ebp]
  00275	50		 push	 eax
  00276	8b 8d a0 fd ff
	ff		 mov	 ecx, DWORD PTR _lpszModule$[ebp]
  0027c	51		 push	 ecx
  0027d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadTypeLib@8
  00283	3b f4		 cmp	 esi, esp
  00285	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0028a	89 85 9c fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 7165 : 	if (FAILED(hr))

  00290	83 bd 9c fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00297	0f 8d c5 00 00
	00		 jge	 $LN11@AtlLoadTyp

; 7166 : 	{
; 7167 : 		// typelib not in module, try <module>.tlb instead
; 7168 : 		const TCHAR szExt[] = _T(".tlb");

  0029d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ??_C@_19ILOCMLCJ@?$AA?4?$AAt?$AAl?$AAb@
  002a3	89 95 8c fd ff
	ff		 mov	 DWORD PTR _szExt$7[ebp], edx
  002a9	a1 04 00 00 00	 mov	 eax, DWORD PTR ??_C@_19ILOCMLCJ@?$AA?4?$AAt?$AAl?$AAb@+4
  002ae	89 85 90 fd ff
	ff		 mov	 DWORD PTR _szExt$7[ebp+4], eax
  002b4	66 8b 0d 08 00
	00 00		 mov	 cx, WORD PTR ??_C@_19ILOCMLCJ@?$AA?4?$AAt?$AAl?$AAb@+8
  002bb	66 89 8d 94 fd
	ff ff		 mov	 WORD PTR _szExt$7[ebp+8], cx

; 7169 : 		if ((lpszExt - szModule + _countof(szExt)) > _MAX_PATH)

  002c2	8b 95 b0 fd ff
	ff		 mov	 edx, DWORD PTR _lpszExt$[ebp]
  002c8	8d 85 c0 fd ff
	ff		 lea	 eax, DWORD PTR _szModule$[ebp]
  002ce	2b d0		 sub	 edx, eax
  002d0	d1 fa		 sar	 edx, 1
  002d2	83 c2 05	 add	 edx, 5
  002d5	81 fa 04 01 00
	00		 cmp	 edx, 260		; 00000104H
  002db	76 1d		 jbe	 SHORT $LN12@AtlLoadTyp

; 7170 : 			return E_FAIL;

  002dd	c7 85 74 fd ff
	ff 05 40 00 80	 mov	 DWORD PTR $T2[ebp], -2147467259 ; 80004005H
  002e7	8d 4d e4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  002ea	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  002ef	8b 85 74 fd ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  002f5	e9 dc 00 00 00	 jmp	 $LN1@AtlLoadTyp
$LN12@AtlLoadTyp:

; 7171 : 
; 7172 : #ifdef UNICODE
; 7173 : 		Checked::wcscpy_s(lpszExt, _countof(szModule) - (lpszExt - szModule), szExt);

  002fa	8d 8d 8c fd ff
	ff		 lea	 ecx, DWORD PTR _szExt$7[ebp]
  00300	51		 push	 ecx
  00301	8b 95 b0 fd ff
	ff		 mov	 edx, DWORD PTR _lpszExt$[ebp]
  00307	8d 85 c0 fd ff
	ff		 lea	 eax, DWORD PTR _szModule$[ebp]
  0030d	2b d0		 sub	 edx, eax
  0030f	d1 fa		 sar	 edx, 1
  00311	b9 0e 01 00 00	 mov	 ecx, 270		; 0000010eH
  00316	2b ca		 sub	 ecx, edx
  00318	51		 push	 ecx
  00319	8b 95 b0 fd ff
	ff		 mov	 edx, DWORD PTR _lpszExt$[ebp]
  0031f	52		 push	 edx
  00320	e8 00 00 00 00	 call	 ?wcscpy_s@Checked@ATL@@YAXPA_WIPB_W@Z ; ATL::Checked::wcscpy_s
  00325	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7174 : #else
; 7175 : 		Checked::strcpy_s(lpszExt, _countof(szModule) - (lpszExt - szModule), szExt);
; 7176 : #endif
; 7177 : 		lpszModule = T2OLE_EX(szModule, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  00328	68 00 04 00 00	 push	 1024			; 00000400H
  0032d	8d 85 c0 fd ff
	ff		 lea	 eax, DWORD PTR _szModule$[ebp]
  00333	50		 push	 eax
  00334	e8 00 00 00 00	 call	 ?T2OLE_EX@@YAPA_WPA_WI@Z ; T2OLE_EX
  00339	83 c4 08	 add	 esp, 8
  0033c	89 85 a0 fd ff
	ff		 mov	 DWORD PTR _lpszModule$[ebp], eax

; 7178 : #ifndef _UNICODE
; 7179 : 		if(lpszModule == NULL)
; 7180 : 			return E_OUTOFMEMORY;
; 7181 : #endif
; 7182 : 		hr = LoadTypeLib(lpszModule, ppTypeLib);

  00342	8b f4		 mov	 esi, esp
  00344	8b 4d 14	 mov	 ecx, DWORD PTR _ppTypeLib$[ebp]
  00347	51		 push	 ecx
  00348	8b 95 a0 fd ff
	ff		 mov	 edx, DWORD PTR _lpszModule$[ebp]
  0034e	52		 push	 edx
  0034f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadTypeLib@8
  00355	3b f4		 cmp	 esi, esp
  00357	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0035c	89 85 9c fd ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
$LN11@AtlLoadTyp:

; 7183 : 	}
; 7184 : 	if (SUCCEEDED(hr))

  00362	83 bd 9c fd ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00369	7c 51		 jl	 SHORT $LN13@AtlLoadTyp

; 7185 : 	{
; 7186 : 		*pbstrPath = ::SysAllocString(lpszModule);

  0036b	8b f4		 mov	 esi, esp
  0036d	8b 85 a0 fd ff
	ff		 mov	 eax, DWORD PTR _lpszModule$[ebp]
  00373	50		 push	 eax
  00374	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysAllocString@4
  0037a	3b f4		 cmp	 esi, esp
  0037c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00381	8b 4d 10	 mov	 ecx, DWORD PTR _pbstrPath$[ebp]
  00384	89 01		 mov	 DWORD PTR [ecx], eax

; 7187 : 		if (*pbstrPath == NULL)

  00386	8b 55 10	 mov	 edx, DWORD PTR _pbstrPath$[ebp]
  00389	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0038c	75 2e		 jne	 SHORT $LN13@AtlLoadTyp

; 7188 : 		{
; 7189 : 			hr = E_OUTOFMEMORY;

  0038e	c7 85 9c fd ff
	ff 0e 00 07 80	 mov	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH

; 7190 : 			(*ppTypeLib)->Release();

  00398	8b 45 14	 mov	 eax, DWORD PTR _ppTypeLib$[ebp]
  0039b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0039d	8b 55 14	 mov	 edx, DWORD PTR _ppTypeLib$[ebp]
  003a0	8b 02		 mov	 eax, DWORD PTR [edx]
  003a2	8b 09		 mov	 ecx, DWORD PTR [ecx]
  003a4	8b f4		 mov	 esi, esp
  003a6	50		 push	 eax
  003a7	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  003aa	ff d2		 call	 edx
  003ac	3b f4		 cmp	 esi, esp
  003ae	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 7191 : 			*ppTypeLib = NULL;

  003b3	8b 45 14	 mov	 eax, DWORD PTR _ppTypeLib$[ebp]
  003b6	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN13@AtlLoadTyp:

; 7192 : 		}
; 7193 : 	}
; 7194 : 	return hr;

  003bc	8b 8d 9c fd ff
	ff		 mov	 ecx, DWORD PTR _hr$[ebp]
  003c2	89 8d 70 fd ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  003c8	8d 4d e4	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  003cb	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  003d0	8b 85 70 fd ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
$LN1@AtlLoadTyp:

; 7195 : }

  003d6	52		 push	 edx
  003d7	8b cd		 mov	 ecx, ebp
  003d9	50		 push	 eax
  003da	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN23@AtlLoadTyp
  003e0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  003e5	58		 pop	 eax
  003e6	5a		 pop	 edx
  003e7	5f		 pop	 edi
  003e8	5e		 pop	 esi
  003e9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003ec	33 cd		 xor	 ecx, ebp
  003ee	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003f3	81 c4 90 02 00
	00		 add	 esp, 656		; 00000290H
  003f9	3b ec		 cmp	 ebp, esp
  003fb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00400	8b e5		 mov	 esp, ebp
  00402	5d		 pop	 ebp
  00403	c2 10 00	 ret	 16			; 00000010H
  00406	66 90		 npad	 2
$LN23@AtlLoadTyp:
  00408	03 00 00 00	 DD	 3
  0040c	00 00 00 00	 DD	 $LN22@AtlLoadTyp
$LN22@AtlLoadTyp:
  00410	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00414	04 00 00 00	 DD	 4
  00418	00 00 00 00	 DD	 $LN19@AtlLoadTyp
  0041c	c0 fd ff ff	 DD	 -576			; fffffdc0H
  00420	1c 02 00 00	 DD	 540			; 0000021cH
  00424	00 00 00 00	 DD	 $LN20@AtlLoadTyp
  00428	8c fd ff ff	 DD	 -628			; fffffd8cH
  0042c	0a 00 00 00	 DD	 10			; 0000000aH
  00430	00 00 00 00	 DD	 $LN21@AtlLoadTyp
$LN21@AtlLoadTyp:
  00434	73		 DB	 115			; 00000073H
  00435	7a		 DB	 122			; 0000007aH
  00436	45		 DB	 69			; 00000045H
  00437	78		 DB	 120			; 00000078H
  00438	74		 DB	 116			; 00000074H
  00439	00		 DB	 0
$LN20@AtlLoadTyp:
  0043a	73		 DB	 115			; 00000073H
  0043b	7a		 DB	 122			; 0000007aH
  0043c	4d		 DB	 77			; 0000004dH
  0043d	6f		 DB	 111			; 0000006fH
  0043e	64		 DB	 100			; 00000064H
  0043f	75		 DB	 117			; 00000075H
  00440	6c		 DB	 108			; 0000006cH
  00441	65		 DB	 101			; 00000065H
  00442	00		 DB	 0
$LN19@AtlLoadTyp:
  00443	5f		 DB	 95			; 0000005fH
  00444	41		 DB	 65			; 00000041H
  00445	74		 DB	 116			; 00000074H
  00446	6c		 DB	 108			; 0000006cH
  00447	53		 DB	 83			; 00000053H
  00448	61		 DB	 97			; 00000061H
  00449	66		 DB	 102			; 00000066H
  0044a	65		 DB	 101			; 00000065H
  0044b	41		 DB	 65			; 00000041H
  0044c	6c		 DB	 108			; 0000006cH
  0044d	6c		 DB	 108			; 0000006cH
  0044e	6f		 DB	 111			; 0000006fH
  0044f	63		 DB	 99			; 00000063H
  00450	61		 DB	 97			; 00000061H
  00451	4d		 DB	 77			; 0000004dH
  00452	61		 DB	 97			; 00000061H
  00453	6e		 DB	 110			; 0000006eH
  00454	61		 DB	 97			; 00000061H
  00455	67		 DB	 103			; 00000067H
  00456	65		 DB	 101			; 00000065H
  00457	72		 DB	 114			; 00000072H
  00458	00		 DB	 0
?AtlLoadTypeLib@ATL@@YGJPAUHINSTANCE__@@PB_WPAPA_WPAPAUITypeLib@@@Z ENDP ; ATL::AtlLoadTypeLib
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlGetPerUserRegistration@ATL@@YGJPA_N@Z
_TEXT	SEGMENT
_pbEnabled$ = 8						; size = 4
?AtlGetPerUserRegistration@ATL@@YGJPA_N@Z PROC		; ATL::AtlGetPerUserRegistration, COMDAT

; 7096 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 7097 : 	if (pbEnabled == NULL)

  00003	83 7d 08 00	 cmp	 DWORD PTR _pbEnabled$[ebp], 0
  00007	75 07		 jne	 SHORT $LN2@AtlGetPerU

; 7098 : 		return E_POINTER;

  00009	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0000e	eb 0d		 jmp	 SHORT $LN1@AtlGetPerU
$LN2@AtlGetPerU:

; 7099 : 
; 7100 : 	*pbEnabled = _AtlRegisterPerUser;

  00010	8b 45 08	 mov	 eax, DWORD PTR _pbEnabled$[ebp]
  00013	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR ?_AtlRegisterPerUser@ATL@@3_NA ; ATL::_AtlRegisterPerUser
  00019	88 08		 mov	 BYTE PTR [eax], cl

; 7101 : 	return S_OK;

  0001b	33 c0		 xor	 eax, eax
$LN1@AtlGetPerU:

; 7102 : }

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?AtlGetPerUserRegistration@ATL@@YGJPA_N@Z ENDP		; ATL::AtlGetPerUserRegistration
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z
_TEXT	SEGMENT
tv237 = -584						; size = 4
tv224 = -580						; size = 4
tv196 = -576						; size = 4
tv175 = -572						; size = 4
tv146 = -568						; size = 4
$T1 = -564						; size = 4
$T2 = -560						; size = 4
$T3 = -556						; size = 4
$T4 = -552						; size = 4
$T5 = -548						; size = 4
$T6 = -544						; size = 4
_lRes$7 = -540						; size = 4
_cbSubKeys$8 = -532					; size = 4
_key$9 = -520						; size = 12
_root$10 = -500						; size = 12
_szKey$11 = -480					; size = 256
_pszGUID$12 = -220					; size = 4
__AtlSafeAllocaManager$13 = -212			; size = 4
__lpa_ex$14 = -204					; size = 4
__lpw_ex$15 = -200					; size = 4
__acp_ex$16 = -196					; size = 4
__convert_ex$17 = -192					; size = 4
___atl_condVal$18 = -188				; size = 4
_szGUID$19 = -180					; size = 128
_catid$ = -44						; size = 16
_pEntry$ = -24						; size = 4
_hResult$ = -20						; size = 4
_pCatRegister$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_clsid$ = 8						; size = 4
_pCatMap$ = 12						; size = 4
_bRegister$ = 16					; size = 4
?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z PROC ; ATL::AtlRegisterClassCategoriesHelper, COMDAT

; 7201 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 48 02 00
	00		 sub	 esp, 584		; 00000248H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd b8 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-584]
  00011	b9 92 00 00 00	 mov	 ecx, 146		; 00000092H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 7202 :    CComPtr< ICatRegister > pCatRegister;

  00027	8d 4d f4	 lea	 ecx, DWORD PTR _pCatRegister$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ ; ATL::CComPtr<ICatRegister>::CComPtr<ICatRegister>

; 7203 :    HRESULT hResult;
; 7204 :    const struct _ATL_CATMAP_ENTRY* pEntry;
; 7205 :    CATID catid;
; 7206 : 
; 7207 :    if( pCatMap == NULL )

  0002f	83 7d 0c 00	 cmp	 DWORD PTR _pCatMap$[ebp], 0
  00033	75 1d		 jne	 SHORT $LN7@AtlRegiste

; 7208 :    {
; 7209 : 	  return( S_OK );

  00035	c7 85 e0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp], 0
  0003f	8d 4d f4	 lea	 ecx, DWORD PTR _pCatRegister$[ebp]
  00042	e8 00 00 00 00	 call	 ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
  00047	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  0004d	e9 9f 05 00 00	 jmp	 $LN1@AtlRegiste
$LN7@AtlRegiste:

; 7210 :    }
; 7211 : 
; 7212 :    if (InlineIsEqualGUID(clsid, GUID_NULL))

  00052	68 00 00 00 00	 push	 OFFSET _GUID_NULL
  00057	8b 45 08	 mov	 eax, DWORD PTR _clsid$[ebp]
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 _InlineIsEqualGUID
  00060	83 c4 08	 add	 esp, 8
  00063	85 c0		 test	 eax, eax
  00065	74 47		 je	 SHORT $LN8@AtlRegiste

; 7213 :    {
; 7214 : 	  ATLASSERT(0 && _T("Use OBJECT_ENTRY_NON_CREATEABLE_EX macro if you want to register class categories for non creatable objects."));

  00067	33 c9		 xor	 ecx, ecx
  00069	75 26		 jne	 SHORT $LN25@AtlRegiste
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1OK@NEECLFPA@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAL?$AA?$CC?$AAU?$AAs?$AAe?$AA?5?$AAO?$AAB?$AAJ?$AAE@
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00075	6a 00		 push	 0
  00077	68 2e 1c 00 00	 push	 7214			; 00001c2eH
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00081	6a 02		 push	 2
  00083	e8 00 00 00 00	 call	 __CrtDbgReportW
  00088	83 c4 18	 add	 esp, 24			; 00000018H
  0008b	83 f8 01	 cmp	 eax, 1
  0008e	75 01		 jne	 SHORT $LN25@AtlRegiste
  00090	cc		 int	 3
$LN25@AtlRegiste:

; 7215 : 	  return S_OK;

  00091	c7 85 dc fd ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp], 0
  0009b	8d 4d f4	 lea	 ecx, DWORD PTR _pCatRegister$[ebp]
  0009e	e8 00 00 00 00	 call	 ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
  000a3	8b 85 dc fd ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  000a9	e9 43 05 00 00	 jmp	 $LN1@AtlRegiste
$LN8@AtlRegiste:

; 7216 :    }
; 7217 : 
; 7218 :    hResult = CoCreateInstance( CLSID_StdComponentCategoriesMgr, NULL,

  000ae	8d 4d f4	 lea	 ecx, DWORD PTR _pCatRegister$[ebp]
  000b1	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ ; ATL::CComPtrBase<ICatRegister>::operator&
  000b6	8b f4		 mov	 esi, esp
  000b8	50		 push	 eax
  000b9	68 00 00 00 00	 push	 OFFSET __GUID_0002e012_0000_0000_c000_000000000046
  000be	6a 01		 push	 1
  000c0	6a 00		 push	 0
  000c2	68 00 00 00 00	 push	 OFFSET _CLSID_StdComponentCategoriesMgr
  000c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoCreateInstance@20
  000cd	3b f4		 cmp	 esi, esp
  000cf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d4	89 45 ec	 mov	 DWORD PTR _hResult$[ebp], eax

; 7219 : 	  CLSCTX_INPROC_SERVER, __uuidof(ICatRegister), (void**)&pCatRegister );
; 7220 :    if( FAILED( hResult ) )

  000d7	83 7d ec 00	 cmp	 DWORD PTR _hResult$[ebp], 0
  000db	7d 1d		 jge	 SHORT $LN9@AtlRegiste

; 7221 :    {
; 7222 : 	  // Since not all systems have the category manager installed, we'll allow
; 7223 : 	  // the registration to succeed even though we didn't register our
; 7224 : 	  // categories.  If you really want to register categories on a system
; 7225 : 	  // without the category manager, you can either manually add the
; 7226 : 	  // appropriate entries to your registry script (.rgs), or you can
; 7227 : 	  // redistribute comcat.dll.
; 7228 : 	  return( S_OK );

  000dd	c7 85 d8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp], 0
  000e7	8d 4d f4	 lea	 ecx, DWORD PTR _pCatRegister$[ebp]
  000ea	e8 00 00 00 00	 call	 ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
  000ef	8b 85 d8 fd ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  000f5	e9 f7 04 00 00	 jmp	 $LN1@AtlRegiste
$LN9@AtlRegiste:

; 7229 :    }
; 7230 : 
; 7231 :    hResult = S_OK;

  000fa	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _hResult$[ebp], 0

; 7232 :    pEntry = pCatMap;

  00101	8b 45 0c	 mov	 eax, DWORD PTR _pCatMap$[ebp]
  00104	89 45 e8	 mov	 DWORD PTR _pEntry$[ebp], eax
$LN2@AtlRegiste:

; 7233 :    while( pEntry->iType != _ATL_CATMAP_ENTRY_END )

  00107	8b 4d e8	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  0010a	83 39 00	 cmp	 DWORD PTR [ecx], 0
  0010d	0f 84 a6 01 00
	00		 je	 $LN3@AtlRegiste

; 7234 :    {
; 7235 : 	  catid = *pEntry->pcatid;

  00113	8b 55 e8	 mov	 edx, DWORD PTR _pEntry$[ebp]
  00116	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00119	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011b	89 4d d4	 mov	 DWORD PTR _catid$[ebp], ecx
  0011e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00121	89 55 d8	 mov	 DWORD PTR _catid$[ebp+4], edx
  00124	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00127	89 4d dc	 mov	 DWORD PTR _catid$[ebp+8], ecx
  0012a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0012d	89 55 e0	 mov	 DWORD PTR _catid$[ebp+12], edx

; 7236 : 	  if( bRegister )

  00130	83 7d 10 00	 cmp	 DWORD PTR _bRegister$[ebp], 0
  00134	0f 84 cf 00 00
	00		 je	 $LN10@AtlRegiste

; 7237 : 	  {
; 7238 : 		 if( pEntry->iType == _ATL_CATMAP_ENTRY_IMPLEMENTED )

  0013a	8b 45 e8	 mov	 eax, DWORD PTR _pEntry$[ebp]
  0013d	83 38 01	 cmp	 DWORD PTR [eax], 1
  00140	75 3a		 jne	 SHORT $LN12@AtlRegiste

; 7239 : 		 {
; 7240 : 			hResult = pCatRegister->RegisterClassImplCategories( clsid, 1,

  00142	8d 4d f4	 lea	 ecx, DWORD PTR _pCatRegister$[ebp]
  00145	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ ; ATL::CComPtrBase<ICatRegister>::operator->
  0014a	89 85 c8 fd ff
	ff		 mov	 DWORD PTR tv146[ebp], eax
  00150	8b f4		 mov	 esi, esp
  00152	8d 4d d4	 lea	 ecx, DWORD PTR _catid$[ebp]
  00155	51		 push	 ecx
  00156	6a 01		 push	 1
  00158	8b 55 08	 mov	 edx, DWORD PTR _clsid$[ebp]
  0015b	52		 push	 edx
  0015c	8b 85 c8 fd ff
	ff		 mov	 eax, DWORD PTR tv146[ebp]
  00162	50		 push	 eax
  00163	8b 8d c8 fd ff
	ff		 mov	 ecx, DWORD PTR tv146[ebp]
  00169	8b 11		 mov	 edx, DWORD PTR [ecx]
  0016b	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0016e	ff d0		 call	 eax
  00170	3b f4		 cmp	 esi, esp
  00172	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00177	89 45 ec	 mov	 DWORD PTR _hResult$[ebp], eax

; 7241 : 			   &catid );
; 7242 : 		 }

  0017a	eb 66		 jmp	 SHORT $LN13@AtlRegiste
$LN12@AtlRegiste:

; 7243 : 		 else
; 7244 : 		 {
; 7245 : 			ATLASSERT( pEntry->iType == _ATL_CATMAP_ENTRY_REQUIRED );

  0017c	8b 4d e8	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  0017f	83 39 02	 cmp	 DWORD PTR [ecx], 2
  00182	74 26		 je	 SHORT $LN26@AtlRegiste
  00184	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@IDMIONOG@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?9?$AA?$DO?$AAi?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$DN@
  00189	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0018e	6a 00		 push	 0
  00190	68 4d 1c 00 00	 push	 7245			; 00001c4dH
  00195	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0019a	6a 02		 push	 2
  0019c	e8 00 00 00 00	 call	 __CrtDbgReportW
  001a1	83 c4 18	 add	 esp, 24			; 00000018H
  001a4	83 f8 01	 cmp	 eax, 1
  001a7	75 01		 jne	 SHORT $LN26@AtlRegiste
  001a9	cc		 int	 3
$LN26@AtlRegiste:

; 7246 : 			hResult = pCatRegister->RegisterClassReqCategories( clsid, 1,

  001aa	8d 4d f4	 lea	 ecx, DWORD PTR _pCatRegister$[ebp]
  001ad	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ ; ATL::CComPtrBase<ICatRegister>::operator->
  001b2	89 85 c4 fd ff
	ff		 mov	 DWORD PTR tv175[ebp], eax
  001b8	8b f4		 mov	 esi, esp
  001ba	8d 45 d4	 lea	 eax, DWORD PTR _catid$[ebp]
  001bd	50		 push	 eax
  001be	6a 01		 push	 1
  001c0	8b 4d 08	 mov	 ecx, DWORD PTR _clsid$[ebp]
  001c3	51		 push	 ecx
  001c4	8b 95 c4 fd ff
	ff		 mov	 edx, DWORD PTR tv175[ebp]
  001ca	52		 push	 edx
  001cb	8b 85 c4 fd ff
	ff		 mov	 eax, DWORD PTR tv175[ebp]
  001d1	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d3	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  001d6	ff d2		 call	 edx
  001d8	3b f4		 cmp	 esi, esp
  001da	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001df	89 45 ec	 mov	 DWORD PTR _hResult$[ebp], eax
$LN13@AtlRegiste:

; 7247 : 			   &catid );
; 7248 : 		 }
; 7249 : 		 if( FAILED( hResult ) )

  001e2	83 7d ec 00	 cmp	 DWORD PTR _hResult$[ebp], 0
  001e6	7d 1c		 jge	 SHORT $LN14@AtlRegiste

; 7250 : 		 {
; 7251 : 			return( hResult );

  001e8	8b 45 ec	 mov	 eax, DWORD PTR _hResult$[ebp]
  001eb	89 85 d4 fd ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  001f1	8d 4d f4	 lea	 ecx, DWORD PTR _pCatRegister$[ebp]
  001f4	e8 00 00 00 00	 call	 ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
  001f9	8b 85 d4 fd ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  001ff	e9 ed 03 00 00	 jmp	 $LN1@AtlRegiste
$LN14@AtlRegiste:

; 7252 : 		 }
; 7253 : 	  }

  00204	e9 a2 00 00 00	 jmp	 $LN11@AtlRegiste
$LN10@AtlRegiste:

; 7254 : 	  else
; 7255 : 	  {
; 7256 : 		 if( pEntry->iType == _ATL_CATMAP_ENTRY_IMPLEMENTED )

  00209	8b 4d e8	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  0020c	83 39 01	 cmp	 DWORD PTR [ecx], 1
  0020f	75 37		 jne	 SHORT $LN15@AtlRegiste

; 7257 : 		 {
; 7258 : 			pCatRegister->UnRegisterClassImplCategories( clsid, 1, &catid );

  00211	8d 4d f4	 lea	 ecx, DWORD PTR _pCatRegister$[ebp]
  00214	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ ; ATL::CComPtrBase<ICatRegister>::operator->
  00219	89 85 c0 fd ff
	ff		 mov	 DWORD PTR tv196[ebp], eax
  0021f	8b f4		 mov	 esi, esp
  00221	8d 55 d4	 lea	 edx, DWORD PTR _catid$[ebp]
  00224	52		 push	 edx
  00225	6a 01		 push	 1
  00227	8b 45 08	 mov	 eax, DWORD PTR _clsid$[ebp]
  0022a	50		 push	 eax
  0022b	8b 8d c0 fd ff
	ff		 mov	 ecx, DWORD PTR tv196[ebp]
  00231	51		 push	 ecx
  00232	8b 95 c0 fd ff
	ff		 mov	 edx, DWORD PTR tv196[ebp]
  00238	8b 02		 mov	 eax, DWORD PTR [edx]
  0023a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0023d	ff d1		 call	 ecx
  0023f	3b f4		 cmp	 esi, esp
  00241	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 7259 : 		 }

  00246	eb 63		 jmp	 SHORT $LN11@AtlRegiste
$LN15@AtlRegiste:

; 7260 : 		 else
; 7261 : 		 {
; 7262 : 			ATLASSERT( pEntry->iType == _ATL_CATMAP_ENTRY_REQUIRED );

  00248	8b 55 e8	 mov	 edx, DWORD PTR _pEntry$[ebp]
  0024b	83 3a 02	 cmp	 DWORD PTR [edx], 2
  0024e	74 26		 je	 SHORT $LN27@AtlRegiste
  00250	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@IDMIONOG@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?9?$AA?$DO?$AAi?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$DN@
  00255	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0025a	6a 00		 push	 0
  0025c	68 5e 1c 00 00	 push	 7262			; 00001c5eH
  00261	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00266	6a 02		 push	 2
  00268	e8 00 00 00 00	 call	 __CrtDbgReportW
  0026d	83 c4 18	 add	 esp, 24			; 00000018H
  00270	83 f8 01	 cmp	 eax, 1
  00273	75 01		 jne	 SHORT $LN27@AtlRegiste
  00275	cc		 int	 3
$LN27@AtlRegiste:

; 7263 : 			pCatRegister->UnRegisterClassReqCategories( clsid, 1, &catid );

  00276	8d 4d f4	 lea	 ecx, DWORD PTR _pCatRegister$[ebp]
  00279	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ ; ATL::CComPtrBase<ICatRegister>::operator->
  0027e	89 85 bc fd ff
	ff		 mov	 DWORD PTR tv224[ebp], eax
  00284	8b f4		 mov	 esi, esp
  00286	8d 4d d4	 lea	 ecx, DWORD PTR _catid$[ebp]
  00289	51		 push	 ecx
  0028a	6a 01		 push	 1
  0028c	8b 55 08	 mov	 edx, DWORD PTR _clsid$[ebp]
  0028f	52		 push	 edx
  00290	8b 85 bc fd ff
	ff		 mov	 eax, DWORD PTR tv224[ebp]
  00296	50		 push	 eax
  00297	8b 8d bc fd ff
	ff		 mov	 ecx, DWORD PTR tv224[ebp]
  0029d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0029f	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  002a2	ff d0		 call	 eax
  002a4	3b f4		 cmp	 esi, esp
  002a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN11@AtlRegiste:

; 7264 : 		 }
; 7265 : 	  }
; 7266 : 	  pEntry++;

  002ab	8b 4d e8	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  002ae	83 c1 08	 add	 ecx, 8
  002b1	89 4d e8	 mov	 DWORD PTR _pEntry$[ebp], ecx

; 7267 :    }

  002b4	e9 4e fe ff ff	 jmp	 $LN2@AtlRegiste
$LN3@AtlRegiste:

; 7268 : 
; 7269 :    // When unregistering remove "Implemented Categories" and "Required Categories" subkeys if they are empty.
; 7270 :    if (!bRegister)

  002b9	83 7d 10 00	 cmp	 DWORD PTR _bRegister$[ebp], 0
  002bd	0f 85 16 03 00
	00		 jne	 $LN17@AtlRegiste
$LN6@AtlRegiste:

; 7271 :    {
; 7272 : 		OLECHAR szGUID[64];
; 7273 : 		ATLENSURE_RETURN_VAL(::StringFromGUID2(clsid, szGUID, 64), ERROR_INVALID_DATA);

  002c3	8b f4		 mov	 esi, esp
  002c5	6a 40		 push	 64			; 00000040H
  002c7	8d 95 4c ff ff
	ff		 lea	 edx, DWORD PTR _szGUID$19[ebp]
  002cd	52		 push	 edx
  002ce	8b 45 08	 mov	 eax, DWORD PTR _clsid$[ebp]
  002d1	50		 push	 eax
  002d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__StringFromGUID2@12
  002d8	3b f4		 cmp	 esi, esp
  002da	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002df	85 c0		 test	 eax, eax
  002e1	74 0c		 je	 SHORT $LN28@AtlRegiste
  002e3	c7 85 b8 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR tv237[ebp], 1
  002ed	eb 0a		 jmp	 SHORT $LN29@AtlRegiste
$LN28@AtlRegiste:
  002ef	c7 85 b8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv237[ebp], 0
$LN29@AtlRegiste:
  002f9	8b 8d b8 fd ff
	ff		 mov	 ecx, DWORD PTR tv237[ebp]
  002ff	89 8d 44 ff ff
	ff		 mov	 DWORD PTR ___atl_condVal$18[ebp], ecx
  00305	83 bd 44 ff ff
	ff 00		 cmp	 DWORD PTR ___atl_condVal$18[ebp], 0
  0030c	75 26		 jne	 SHORT $LN30@AtlRegiste
  0030e	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  00313	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00318	6a 00		 push	 0
  0031a	68 69 1c 00 00	 push	 7273			; 00001c69H
  0031f	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00324	6a 02		 push	 2
  00326	e8 00 00 00 00	 call	 __CrtDbgReportW
  0032b	83 c4 18	 add	 esp, 24			; 00000018H
  0032e	83 f8 01	 cmp	 eax, 1
  00331	75 01		 jne	 SHORT $LN30@AtlRegiste
  00333	cc		 int	 3
$LN30@AtlRegiste:
  00334	83 bd 44 ff ff
	ff 00		 cmp	 DWORD PTR ___atl_condVal$18[ebp], 0
  0033b	75 1d		 jne	 SHORT $LN4@AtlRegiste
  0033d	c7 85 d0 fd ff
	ff 0d 00 00 00	 mov	 DWORD PTR $T2[ebp], 13	; 0000000dH
  00347	8d 4d f4	 lea	 ecx, DWORD PTR _pCatRegister$[ebp]
  0034a	e8 00 00 00 00	 call	 ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
  0034f	8b 85 d0 fd ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00355	e9 97 02 00 00	 jmp	 $LN1@AtlRegiste
$LN4@AtlRegiste:
  0035a	33 c0		 xor	 eax, eax
  0035c	0f 85 61 ff ff
	ff		 jne	 $LN6@AtlRegiste

; 7274 : 		USES_CONVERSION_EX;

  00362	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR __convert_ex$17[ebp], 0
  0036c	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00371	89 85 3c ff ff
	ff		 mov	 DWORD PTR __acp_ex$16[ebp], eax
  00377	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR __lpw_ex$15[ebp], 0
  00381	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR __lpa_ex$14[ebp], 0
  0038b	8d 8d 2c ff ff
	ff		 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$13[ebp]
  00391	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>

; 7275 : 		TCHAR* pszGUID = OLE2T_EX(szGUID, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  00396	68 00 04 00 00	 push	 1024			; 00000400H
  0039b	8d 8d 4c ff ff
	ff		 lea	 ecx, DWORD PTR _szGUID$19[ebp]
  003a1	51		 push	 ecx
  003a2	e8 00 00 00 00	 call	 ?OLE2T_EX@@YAPA_WPA_WI@Z ; OLE2T_EX
  003a7	83 c4 08	 add	 esp, 8
  003aa	89 85 24 ff ff
	ff		 mov	 DWORD PTR _pszGUID$12[ebp], eax

; 7276 : 		if (pszGUID != NULL)

  003b0	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR _pszGUID$12[ebp], 0
  003b7	0f 84 11 02 00
	00		 je	 $LN19@AtlRegiste

; 7277 : 		{
; 7278 : 			TCHAR szKey[128];
; 7279 : #ifdef UNICODE
; 7280 : 			Checked::wcscpy_s(szKey, _countof(szKey), _T("CLSID\\"));

  003bd	68 00 00 00 00	 push	 OFFSET ??_C@_1O@FHBGLCIO@?$AAC?$AAL?$AAS?$AAI?$AAD?$AA?2@
  003c2	68 80 00 00 00	 push	 128			; 00000080H
  003c7	8d 95 20 fe ff
	ff		 lea	 edx, DWORD PTR _szKey$11[ebp]
  003cd	52		 push	 edx
  003ce	e8 00 00 00 00	 call	 ?wcscpy_s@Checked@ATL@@YAXPA_WIPB_W@Z ; ATL::Checked::wcscpy_s
  003d3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7281 : 			Checked::wcscat_s(szKey, _countof(szKey), pszGUID);

  003d6	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR _pszGUID$12[ebp]
  003dc	50		 push	 eax
  003dd	68 80 00 00 00	 push	 128			; 00000080H
  003e2	8d 8d 20 fe ff
	ff		 lea	 ecx, DWORD PTR _szKey$11[ebp]
  003e8	51		 push	 ecx
  003e9	e8 00 00 00 00	 call	 ?wcscat_s@Checked@ATL@@YAXPA_WIPB_W@Z ; ATL::Checked::wcscat_s
  003ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7282 : 			Checked::wcscat_s(szKey, _countof(szKey), _T("\\Required Categories"));

  003f1	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@IFBKBFAA@?$AA?2?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAd?$AA?5?$AAC?$AAa?$AAt?$AAe?$AAg@
  003f6	68 80 00 00 00	 push	 128			; 00000080H
  003fb	8d 95 20 fe ff
	ff		 lea	 edx, DWORD PTR _szKey$11[ebp]
  00401	52		 push	 edx
  00402	e8 00 00 00 00	 call	 ?wcscat_s@Checked@ATL@@YAXPA_WIPB_W@Z ; ATL::Checked::wcscat_s
  00407	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7283 : #else
; 7284 : 			Checked::strcpy_s(szKey, _countof(szKey), _T("CLSID\\"));
; 7285 : 			Checked::strcat_s(szKey, _countof(szKey), pszGUID);
; 7286 : 			Checked::strcat_s(szKey, _countof(szKey), _T("\\Required Categories"));
; 7287 : #endif
; 7288 : 
; 7289 : 			CRegKey root(HKEY_CLASSES_ROOT);

  0040a	68 00 00 00 80	 push	 -2147483648		; 80000000H
  0040f	8d 8d 0c fe ff
	ff		 lea	 ecx, DWORD PTR _root$10[ebp]
  00415	e8 00 00 00 00	 call	 ??0CRegKey@ATL@@QAE@PAUHKEY__@@@Z ; ATL::CRegKey::CRegKey

; 7290 : 			CRegKey key;

  0041a	6a 00		 push	 0
  0041c	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _key$9[ebp]
  00422	e8 00 00 00 00	 call	 ??0CRegKey@ATL@@QAE@PAVCAtlTransactionManager@1@@Z ; ATL::CRegKey::CRegKey

; 7291 : 			DWORD cbSubKeys = 0;

  00427	c7 85 ec fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _cbSubKeys$8[ebp], 0

; 7292 : 
; 7293 : 			LRESULT lRes = key.Open(root, szKey, KEY_READ);

  00431	68 19 00 02 00	 push	 131097			; 00020019H
  00436	8d 85 20 fe ff
	ff		 lea	 eax, DWORD PTR _szKey$11[ebp]
  0043c	50		 push	 eax
  0043d	8d 8d 0c fe ff
	ff		 lea	 ecx, DWORD PTR _root$10[ebp]
  00443	e8 00 00 00 00	 call	 ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ ; ATL::CRegKey::operator HKEY__ *
  00448	50		 push	 eax
  00449	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _key$9[ebp]
  0044f	e8 00 00 00 00	 call	 ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PB_WK@Z ; ATL::CRegKey::Open
  00454	89 85 e4 fd ff
	ff		 mov	 DWORD PTR _lRes$7[ebp], eax

; 7294 : 			if (lRes == ERROR_SUCCESS)

  0045a	83 bd e4 fd ff
	ff 00		 cmp	 DWORD PTR _lRes$7[ebp], 0
  00461	75 6b		 jne	 SHORT $LN20@AtlRegiste

; 7295 : 			{
; 7296 : 				lRes = RegQueryInfoKey(key, NULL, NULL, NULL, &cbSubKeys, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

  00463	8b f4		 mov	 esi, esp
  00465	6a 00		 push	 0
  00467	6a 00		 push	 0
  00469	6a 00		 push	 0
  0046b	6a 00		 push	 0
  0046d	6a 00		 push	 0
  0046f	6a 00		 push	 0
  00471	6a 00		 push	 0
  00473	8d 8d ec fd ff
	ff		 lea	 ecx, DWORD PTR _cbSubKeys$8[ebp]
  00479	51		 push	 ecx
  0047a	6a 00		 push	 0
  0047c	6a 00		 push	 0
  0047e	6a 00		 push	 0
  00480	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _key$9[ebp]
  00486	e8 00 00 00 00	 call	 ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ ; ATL::CRegKey::operator HKEY__ *
  0048b	50		 push	 eax
  0048c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegQueryInfoKeyW@48
  00492	3b f4		 cmp	 esi, esp
  00494	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00499	89 85 e4 fd ff
	ff		 mov	 DWORD PTR _lRes$7[ebp], eax

; 7297 : 				key.Close();

  0049f	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _key$9[ebp]
  004a5	e8 00 00 00 00	 call	 ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close

; 7298 : 				if (lRes == ERROR_SUCCESS && cbSubKeys == 0)

  004aa	83 bd e4 fd ff
	ff 00		 cmp	 DWORD PTR _lRes$7[ebp], 0
  004b1	75 1b		 jne	 SHORT $LN20@AtlRegiste
  004b3	83 bd ec fd ff
	ff 00		 cmp	 DWORD PTR _cbSubKeys$8[ebp], 0
  004ba	75 12		 jne	 SHORT $LN20@AtlRegiste

; 7299 : 				{
; 7300 : 					root.DeleteSubKey(szKey);

  004bc	8d 95 20 fe ff
	ff		 lea	 edx, DWORD PTR _szKey$11[ebp]
  004c2	52		 push	 edx
  004c3	8d 8d 0c fe ff
	ff		 lea	 ecx, DWORD PTR _root$10[ebp]
  004c9	e8 00 00 00 00	 call	 ?DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z ; ATL::CRegKey::DeleteSubKey
$LN20@AtlRegiste:

; 7301 : 				}
; 7302 : 			}
; 7303 : 
; 7304 : #ifdef UNICODE
; 7305 : 			Checked::wcscpy_s(szKey, _countof(szKey), _T("CLSID\\"));

  004ce	68 00 00 00 00	 push	 OFFSET ??_C@_1O@FHBGLCIO@?$AAC?$AAL?$AAS?$AAI?$AAD?$AA?2@
  004d3	68 80 00 00 00	 push	 128			; 00000080H
  004d8	8d 85 20 fe ff
	ff		 lea	 eax, DWORD PTR _szKey$11[ebp]
  004de	50		 push	 eax
  004df	e8 00 00 00 00	 call	 ?wcscpy_s@Checked@ATL@@YAXPA_WIPB_W@Z ; ATL::Checked::wcscpy_s
  004e4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7306 : 			Checked::wcscat_s(szKey, _countof(szKey), pszGUID);

  004e7	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR _pszGUID$12[ebp]
  004ed	51		 push	 ecx
  004ee	68 80 00 00 00	 push	 128			; 00000080H
  004f3	8d 95 20 fe ff
	ff		 lea	 edx, DWORD PTR _szKey$11[ebp]
  004f9	52		 push	 edx
  004fa	e8 00 00 00 00	 call	 ?wcscat_s@Checked@ATL@@YAXPA_WIPB_W@Z ; ATL::Checked::wcscat_s
  004ff	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7307 : 			Checked::wcscat_s(szKey, _countof(szKey), _T("\\Implemented Categories"));

  00502	68 00 00 00 00	 push	 OFFSET ??_C@_1DA@BIHALFED@?$AA?2?$AAI?$AAm?$AAp?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AAe?$AAd?$AA?5?$AAC?$AAa@
  00507	68 80 00 00 00	 push	 128			; 00000080H
  0050c	8d 85 20 fe ff
	ff		 lea	 eax, DWORD PTR _szKey$11[ebp]
  00512	50		 push	 eax
  00513	e8 00 00 00 00	 call	 ?wcscat_s@Checked@ATL@@YAXPA_WIPB_W@Z ; ATL::Checked::wcscat_s
  00518	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7308 : #else
; 7309 : 			Checked::strcpy_s(szKey, _countof(szKey), _T("CLSID\\"));
; 7310 : 			Checked::strcat_s(szKey, _countof(szKey), pszGUID);
; 7311 : 			Checked::strcat_s(szKey, _countof(szKey), _T("\\Implemented Categories"));
; 7312 : #endif
; 7313 : 			lRes = key.Open(root, szKey, KEY_READ);

  0051b	68 19 00 02 00	 push	 131097			; 00020019H
  00520	8d 8d 20 fe ff
	ff		 lea	 ecx, DWORD PTR _szKey$11[ebp]
  00526	51		 push	 ecx
  00527	8d 8d 0c fe ff
	ff		 lea	 ecx, DWORD PTR _root$10[ebp]
  0052d	e8 00 00 00 00	 call	 ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ ; ATL::CRegKey::operator HKEY__ *
  00532	50		 push	 eax
  00533	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _key$9[ebp]
  00539	e8 00 00 00 00	 call	 ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PB_WK@Z ; ATL::CRegKey::Open
  0053e	89 85 e4 fd ff
	ff		 mov	 DWORD PTR _lRes$7[ebp], eax

; 7314 : 			if (lRes == ERROR_SUCCESS)

  00544	83 bd e4 fd ff
	ff 00		 cmp	 DWORD PTR _lRes$7[ebp], 0
  0054b	75 6b		 jne	 SHORT $LN22@AtlRegiste

; 7315 : 			{
; 7316 : 				lRes = RegQueryInfoKey(key, NULL, NULL, NULL, &cbSubKeys, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

  0054d	8b f4		 mov	 esi, esp
  0054f	6a 00		 push	 0
  00551	6a 00		 push	 0
  00553	6a 00		 push	 0
  00555	6a 00		 push	 0
  00557	6a 00		 push	 0
  00559	6a 00		 push	 0
  0055b	6a 00		 push	 0
  0055d	8d 95 ec fd ff
	ff		 lea	 edx, DWORD PTR _cbSubKeys$8[ebp]
  00563	52		 push	 edx
  00564	6a 00		 push	 0
  00566	6a 00		 push	 0
  00568	6a 00		 push	 0
  0056a	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _key$9[ebp]
  00570	e8 00 00 00 00	 call	 ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ ; ATL::CRegKey::operator HKEY__ *
  00575	50		 push	 eax
  00576	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegQueryInfoKeyW@48
  0057c	3b f4		 cmp	 esi, esp
  0057e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00583	89 85 e4 fd ff
	ff		 mov	 DWORD PTR _lRes$7[ebp], eax

; 7317 : 				key.Close();

  00589	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _key$9[ebp]
  0058f	e8 00 00 00 00	 call	 ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close

; 7318 : 				if (lRes == ERROR_SUCCESS && cbSubKeys == 0)

  00594	83 bd e4 fd ff
	ff 00		 cmp	 DWORD PTR _lRes$7[ebp], 0
  0059b	75 1b		 jne	 SHORT $LN22@AtlRegiste
  0059d	83 bd ec fd ff
	ff 00		 cmp	 DWORD PTR _cbSubKeys$8[ebp], 0
  005a4	75 12		 jne	 SHORT $LN22@AtlRegiste

; 7319 : 				{
; 7320 : 					root.DeleteSubKey(szKey);

  005a6	8d 85 20 fe ff
	ff		 lea	 eax, DWORD PTR _szKey$11[ebp]
  005ac	50		 push	 eax
  005ad	8d 8d 0c fe ff
	ff		 lea	 ecx, DWORD PTR _root$10[ebp]
  005b3	e8 00 00 00 00	 call	 ?DeleteSubKey@CRegKey@ATL@@QAEJPB_W@Z ; ATL::CRegKey::DeleteSubKey
$LN22@AtlRegiste:

; 7321 : 				}
; 7322 : 			}
; 7323 : 		}

  005b8	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _key$9[ebp]
  005be	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
  005c3	8d 8d 0c fe ff
	ff		 lea	 ecx, DWORD PTR _root$10[ebp]
  005c9	e8 00 00 00 00	 call	 ??1CRegKey@ATL@@QAE@XZ	; ATL::CRegKey::~CRegKey
$LN19@AtlRegiste:

; 7324 : 	}

  005ce	8d 8d 2c ff ff
	ff		 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$13[ebp]
  005d4	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
$LN17@AtlRegiste:

; 7325 : 	return(S_OK);

  005d9	c7 85 cc fd ff
	ff 00 00 00 00	 mov	 DWORD PTR $T1[ebp], 0
  005e3	8d 4d f4	 lea	 ecx, DWORD PTR _pCatRegister$[ebp]
  005e6	e8 00 00 00 00	 call	 ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
  005eb	8b 85 cc fd ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
$LN1@AtlRegiste:

; 7326 : }

  005f1	52		 push	 edx
  005f2	8b cd		 mov	 ecx, ebp
  005f4	50		 push	 eax
  005f5	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN40@AtlRegiste
  005fb	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00600	58		 pop	 eax
  00601	5a		 pop	 edx
  00602	5f		 pop	 edi
  00603	5e		 pop	 esi
  00604	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00607	33 cd		 xor	 ecx, ebp
  00609	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0060e	81 c4 48 02 00
	00		 add	 esp, 584		; 00000248H
  00614	3b ec		 cmp	 ebp, esp
  00616	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0061b	8b e5		 mov	 esp, ebp
  0061d	5d		 pop	 ebp
  0061e	c2 0c 00	 ret	 12			; 0000000cH
  00621	0f 1f 00	 npad	 3
$LN40@AtlRegiste:
  00624	08 00 00 00	 DD	 8
  00628	00 00 00 00	 DD	 $LN39@AtlRegiste
$LN39@AtlRegiste:
  0062c	f4 ff ff ff	 DD	 -12			; fffffff4H
  00630	04 00 00 00	 DD	 4
  00634	00 00 00 00	 DD	 $LN31@AtlRegiste
  00638	d4 ff ff ff	 DD	 -44			; ffffffd4H
  0063c	10 00 00 00	 DD	 16			; 00000010H
  00640	00 00 00 00	 DD	 $LN32@AtlRegiste
  00644	4c ff ff ff	 DD	 -180			; ffffff4cH
  00648	80 00 00 00	 DD	 128			; 00000080H
  0064c	00 00 00 00	 DD	 $LN33@AtlRegiste
  00650	2c ff ff ff	 DD	 -212			; ffffff2cH
  00654	04 00 00 00	 DD	 4
  00658	00 00 00 00	 DD	 $LN34@AtlRegiste
  0065c	20 fe ff ff	 DD	 -480			; fffffe20H
  00660	00 01 00 00	 DD	 256			; 00000100H
  00664	00 00 00 00	 DD	 $LN35@AtlRegiste
  00668	0c fe ff ff	 DD	 -500			; fffffe0cH
  0066c	0c 00 00 00	 DD	 12			; 0000000cH
  00670	00 00 00 00	 DD	 $LN36@AtlRegiste
  00674	f8 fd ff ff	 DD	 -520			; fffffdf8H
  00678	0c 00 00 00	 DD	 12			; 0000000cH
  0067c	00 00 00 00	 DD	 $LN37@AtlRegiste
  00680	ec fd ff ff	 DD	 -532			; fffffdecH
  00684	04 00 00 00	 DD	 4
  00688	00 00 00 00	 DD	 $LN38@AtlRegiste
$LN38@AtlRegiste:
  0068c	63		 DB	 99			; 00000063H
  0068d	62		 DB	 98			; 00000062H
  0068e	53		 DB	 83			; 00000053H
  0068f	75		 DB	 117			; 00000075H
  00690	62		 DB	 98			; 00000062H
  00691	4b		 DB	 75			; 0000004bH
  00692	65		 DB	 101			; 00000065H
  00693	79		 DB	 121			; 00000079H
  00694	73		 DB	 115			; 00000073H
  00695	00		 DB	 0
$LN37@AtlRegiste:
  00696	6b		 DB	 107			; 0000006bH
  00697	65		 DB	 101			; 00000065H
  00698	79		 DB	 121			; 00000079H
  00699	00		 DB	 0
$LN36@AtlRegiste:
  0069a	72		 DB	 114			; 00000072H
  0069b	6f		 DB	 111			; 0000006fH
  0069c	6f		 DB	 111			; 0000006fH
  0069d	74		 DB	 116			; 00000074H
  0069e	00		 DB	 0
$LN35@AtlRegiste:
  0069f	73		 DB	 115			; 00000073H
  006a0	7a		 DB	 122			; 0000007aH
  006a1	4b		 DB	 75			; 0000004bH
  006a2	65		 DB	 101			; 00000065H
  006a3	79		 DB	 121			; 00000079H
  006a4	00		 DB	 0
$LN34@AtlRegiste:
  006a5	5f		 DB	 95			; 0000005fH
  006a6	41		 DB	 65			; 00000041H
  006a7	74		 DB	 116			; 00000074H
  006a8	6c		 DB	 108			; 0000006cH
  006a9	53		 DB	 83			; 00000053H
  006aa	61		 DB	 97			; 00000061H
  006ab	66		 DB	 102			; 00000066H
  006ac	65		 DB	 101			; 00000065H
  006ad	41		 DB	 65			; 00000041H
  006ae	6c		 DB	 108			; 0000006cH
  006af	6c		 DB	 108			; 0000006cH
  006b0	6f		 DB	 111			; 0000006fH
  006b1	63		 DB	 99			; 00000063H
  006b2	61		 DB	 97			; 00000061H
  006b3	4d		 DB	 77			; 0000004dH
  006b4	61		 DB	 97			; 00000061H
  006b5	6e		 DB	 110			; 0000006eH
  006b6	61		 DB	 97			; 00000061H
  006b7	67		 DB	 103			; 00000067H
  006b8	65		 DB	 101			; 00000065H
  006b9	72		 DB	 114			; 00000072H
  006ba	00		 DB	 0
$LN33@AtlRegiste:
  006bb	73		 DB	 115			; 00000073H
  006bc	7a		 DB	 122			; 0000007aH
  006bd	47		 DB	 71			; 00000047H
  006be	55		 DB	 85			; 00000055H
  006bf	49		 DB	 73			; 00000049H
  006c0	44		 DB	 68			; 00000044H
  006c1	00		 DB	 0
$LN32@AtlRegiste:
  006c2	63		 DB	 99			; 00000063H
  006c3	61		 DB	 97			; 00000061H
  006c4	74		 DB	 116			; 00000074H
  006c5	69		 DB	 105			; 00000069H
  006c6	64		 DB	 100			; 00000064H
  006c7	00		 DB	 0
$LN31@AtlRegiste:
  006c8	70		 DB	 112			; 00000070H
  006c9	43		 DB	 67			; 00000043H
  006ca	61		 DB	 97			; 00000061H
  006cb	74		 DB	 116			; 00000074H
  006cc	52		 DB	 82			; 00000052H
  006cd	65		 DB	 101			; 00000065H
  006ce	67		 DB	 103			; 00000067H
  006cf	69		 DB	 105			; 00000069H
  006d0	73		 DB	 115			; 00000073H
  006d1	74		 DB	 116			; 00000074H
  006d2	65		 DB	 101			; 00000065H
  006d3	72		 DB	 114			; 00000072H
  006d4	00		 DB	 0
?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z ENDP ; ATL::AtlRegisterClassCategoriesHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlComModuleGetClassObject@ATL@@YGJPAU_ATL_COM_MODULE70@1@ABU_GUID@@1PAPAX@Z
_TEXT	SEGMENT
$T1 = -56						; size = 8
_factory$2 = -48					; size = 4
_factory$3 = -40					; size = 4
_lock$4 = -28						; size = 8
_pCache$5 = -16						; size = 4
_pEntry$6 = -12						; size = 4
_ppEntry$7 = -8						; size = 4
_hr$ = -4						; size = 4
_pComModule$ = 8					; size = 4
_rclsid$ = 12						; size = 4
_riid$ = 16						; size = 4
_ppv$ = 20						; size = 4
?AtlComModuleGetClassObject@ATL@@YGJPAU_ATL_COM_MODULE70@1@ABU_GUID@@1PAPAX@Z PROC ; ATL::AtlComModuleGetClassObject, COMDAT

; 8102 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d c8	 lea	 edi, DWORD PTR [ebp-56]
  0000b	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd

; 8103 : 	if (ppv == NULL)

  00017	83 7d 14 00	 cmp	 DWORD PTR _ppv$[ebp], 0
  0001b	75 0a		 jne	 SHORT $LN5@AtlComModu

; 8104 : 	{
; 8105 : 		return E_POINTER;

  0001d	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00022	e9 10 02 00 00	 jmp	 $LN1@AtlComModu
$LN5@AtlComModu:

; 8106 : 	}
; 8107 : 
; 8108 : 	*ppv = NULL;

  00027	8b 45 14	 mov	 eax, DWORD PTR _ppv$[ebp]
  0002a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 8109 : 
; 8110 : 	ATLASSERT(pComModule != NULL);

  00030	83 7d 08 00	 cmp	 DWORD PTR _pComModule$[ebp], 0
  00034	75 26		 jne	 SHORT $LN17@AtlComModu
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@GAOMIJFK@?$AAp?$AAC?$AAo?$AAm?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00040	6a 00		 push	 0
  00042	68 ae 1f 00 00	 push	 8110			; 00001faeH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0004c	6a 02		 push	 2
  0004e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00053	83 c4 18	 add	 esp, 24			; 00000018H
  00056	83 f8 01	 cmp	 eax, 1
  00059	75 01		 jne	 SHORT $LN17@AtlComModu
  0005b	cc		 int	 3
$LN17@AtlComModu:

; 8111 : 	if (pComModule == NULL)

  0005c	83 7d 08 00	 cmp	 DWORD PTR _pComModule$[ebp], 0
  00060	75 0a		 jne	 SHORT $LN6@AtlComModu

; 8112 : 	{
; 8113 : 		return E_INVALIDARG;

  00062	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00067	e9 cb 01 00 00	 jmp	 $LN1@AtlComModu
$LN6@AtlComModu:

; 8114 : 	}
; 8115 : 
; 8116 : 	if (pComModule->cbSize == 0)  // Module hasn't been initialized

  0006c	8b 55 08	 mov	 edx, DWORD PTR _pComModule$[ebp]
  0006f	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00072	75 0a		 jne	 SHORT $LN7@AtlComModu

; 8117 : 	{
; 8118 : 		return E_UNEXPECTED;

  00074	b8 ff ff 00 80	 mov	 eax, -2147418113	; 8000ffffH
  00079	e9 b9 01 00 00	 jmp	 $LN1@AtlComModu
$LN7@AtlComModu:

; 8119 : 	}
; 8120 : 
; 8121 : 	HRESULT hr = S_OK;

  0007e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 8122 : 
; 8123 : 	for (_ATL_OBJMAP_ENTRY_EX** ppEntry = pComModule->m_ppAutoObjMapFirst; ppEntry < pComModule->m_ppAutoObjMapLast; ppEntry++)

  00085	8b 45 08	 mov	 eax, DWORD PTR _pComModule$[ebp]
  00088	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0008b	89 4d f8	 mov	 DWORD PTR _ppEntry$7[ebp], ecx
  0008e	eb 09		 jmp	 SHORT $LN4@AtlComModu
$LN2@AtlComModu:
  00090	8b 55 f8	 mov	 edx, DWORD PTR _ppEntry$7[ebp]
  00093	83 c2 04	 add	 edx, 4
  00096	89 55 f8	 mov	 DWORD PTR _ppEntry$7[ebp], edx
$LN4@AtlComModu:
  00099	8b 45 08	 mov	 eax, DWORD PTR _pComModule$[ebp]
  0009c	8b 4d f8	 mov	 ecx, DWORD PTR _ppEntry$7[ebp]
  0009f	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  000a2	0f 83 77 01 00
	00		 jae	 $LN3@AtlComModu

; 8124 : 	{
; 8125 : 		if (*ppEntry != NULL)

  000a8	8b 55 f8	 mov	 edx, DWORD PTR _ppEntry$7[ebp]
  000ab	83 3a 00	 cmp	 DWORD PTR [edx], 0
  000ae	0f 84 66 01 00
	00		 je	 $LN8@AtlComModu

; 8126 : 		{
; 8127 : 			const _ATL_OBJMAP_ENTRY_EX* pEntry = *ppEntry;

  000b4	8b 45 f8	 mov	 eax, DWORD PTR _ppEntry$7[ebp]
  000b7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b9	89 4d f4	 mov	 DWORD PTR _pEntry$6[ebp], ecx

; 8128 : 
; 8129 : 			if ((pEntry->pfnGetClassObject != NULL) && InlineIsEqualGUID(rclsid, *pEntry->pclsid))

  000bc	8b 55 f4	 mov	 edx, DWORD PTR _pEntry$6[ebp]
  000bf	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  000c3	0f 84 51 01 00
	00		 je	 $LN8@AtlComModu
  000c9	8b 45 f4	 mov	 eax, DWORD PTR _pEntry$6[ebp]
  000cc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ce	51		 push	 ecx
  000cf	8b 55 0c	 mov	 edx, DWORD PTR _rclsid$[ebp]
  000d2	52		 push	 edx
  000d3	e8 00 00 00 00	 call	 _InlineIsEqualGUID
  000d8	83 c4 08	 add	 esp, 8
  000db	85 c0		 test	 eax, eax
  000dd	0f 84 37 01 00
	00		 je	 $LN8@AtlComModu

; 8130 : 			{
; 8131 : 				_ATL_OBJMAP_CACHE* pCache = pEntry->pCache;

  000e3	8b 45 f4	 mov	 eax, DWORD PTR _pEntry$6[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	89 4d f0	 mov	 DWORD PTR _pCache$5[ebp], ecx

; 8132 : 
; 8133 : 				if (pCache->pCF == NULL)

  000ec	8b 55 f0	 mov	 edx, DWORD PTR _pCache$5[ebp]
  000ef	83 3a 00	 cmp	 DWORD PTR [edx], 0
  000f2	0f 85 df 00 00
	00		 jne	 $LN10@AtlComModu

; 8134 : 				{
; 8135 : 					CComCritSecLock<CComCriticalSection> lock(pComModule->m_csObjMap, false);

  000f8	6a 00		 push	 0
  000fa	8b 45 08	 mov	 eax, DWORD PTR _pComModule$[ebp]
  000fd	83 c0 10	 add	 eax, 16			; 00000010H
  00100	50		 push	 eax
  00101	8d 4d e4	 lea	 ecx, DWORD PTR _lock$4[ebp]
  00104	e8 00 00 00 00	 call	 ??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>

; 8136 : 					hr = lock.Lock();

  00109	8d 4d e4	 lea	 ecx, DWORD PTR _lock$4[ebp]
  0010c	e8 00 00 00 00	 call	 ?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
  00111	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 8137 : 					if (FAILED(hr))

  00114	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00118	7d 64		 jge	 SHORT $LN11@AtlComModu

; 8138 : 					{
; 8139 : 						ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to lock critical section in AtlComModuleGetClassObject\n"));

  0011a	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@BDEIDBOP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
  0011f	6a 00		 push	 0
  00121	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00126	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  0012b	50		 push	 eax
  0012c	68 cb 1f 00 00	 push	 8139			; 00001fcbH
  00131	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@KEBNGHII@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00136	8d 4d c8	 lea	 ecx, DWORD PTR $T1[ebp]
  00139	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0013e	50		 push	 eax
  0013f	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00144	83 c4 10	 add	 esp, 16			; 00000010H

; 8140 : 						ATLASSERT(FALSE);

  00147	33 c9		 xor	 ecx, ecx
  00149	75 26		 jne	 SHORT $LN18@AtlComModu
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  00150	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00155	6a 00		 push	 0
  00157	68 cc 1f 00 00	 push	 8140			; 00001fccH
  0015c	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00161	6a 02		 push	 2
  00163	e8 00 00 00 00	 call	 __CrtDbgReportW
  00168	83 c4 18	 add	 esp, 24			; 00000018H
  0016b	83 f8 01	 cmp	 eax, 1
  0016e	75 01		 jne	 SHORT $LN18@AtlComModu
  00170	cc		 int	 3
$LN18@AtlComModu:

; 8141 : 						break;

  00171	8d 4d e4	 lea	 ecx, DWORD PTR _lock$4[ebp]
  00174	e8 00 00 00 00	 call	 ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
  00179	e9 a1 00 00 00	 jmp	 $LN3@AtlComModu
$LN11@AtlComModu:

; 8142 : 					}
; 8143 : 
; 8144 : 					if (pCache->pCF == NULL)

  0017e	8b 45 f0	 mov	 eax, DWORD PTR _pCache$5[ebp]
  00181	83 38 00	 cmp	 DWORD PTR [eax], 0
  00184	75 49		 jne	 SHORT $LN12@AtlComModu

; 8145 : 					{
; 8146 : 						IUnknown *factory = NULL;

  00186	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _factory$3[ebp], 0

; 8147 : 						hr = pEntry->pfnGetClassObject(pEntry->pfnCreateInstance, __uuidof(IUnknown), reinterpret_cast<void**>(&factory));

  0018d	8b f4		 mov	 esi, esp
  0018f	8d 4d d8	 lea	 ecx, DWORD PTR _factory$3[ebp]
  00192	51		 push	 ecx
  00193	68 00 00 00 00	 push	 OFFSET __GUID_00000000_0000_0000_c000_000000000046
  00198	8b 55 f4	 mov	 edx, DWORD PTR _pEntry$6[ebp]
  0019b	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0019e	50		 push	 eax
  0019f	8b 4d f4	 mov	 ecx, DWORD PTR _pEntry$6[ebp]
  001a2	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  001a5	ff d2		 call	 edx
  001a7	3b f4		 cmp	 esi, esp
  001a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ae	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 8148 : 						if (SUCCEEDED(hr))

  001b1	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001b5	7c 18		 jl	 SHORT $LN12@AtlComModu

; 8149 : 						{
; 8150 : 							pCache->pCF = reinterpret_cast<IUnknown*>(::EncodePointer(factory));

  001b7	8b f4		 mov	 esi, esp
  001b9	8b 45 d8	 mov	 eax, DWORD PTR _factory$3[ebp]
  001bc	50		 push	 eax
  001bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EncodePointer@4
  001c3	3b f4		 cmp	 esi, esp
  001c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ca	8b 4d f0	 mov	 ecx, DWORD PTR _pCache$5[ebp]
  001cd	89 01		 mov	 DWORD PTR [ecx], eax
$LN12@AtlComModu:

; 8151 : 						}
; 8152 : 					}
; 8153 : 				}

  001cf	8d 4d e4	 lea	 ecx, DWORD PTR _lock$4[ebp]
  001d2	e8 00 00 00 00	 call	 ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
$LN10@AtlComModu:

; 8154 : 
; 8155 : 				if (pCache->pCF != NULL)

  001d7	8b 55 f0	 mov	 edx, DWORD PTR _pCache$5[ebp]
  001da	83 3a 00	 cmp	 DWORD PTR [edx], 0
  001dd	74 39		 je	 SHORT $LN14@AtlComModu

; 8156 : 				{
; 8157 : 					// Decode factory pointer
; 8158 : 					IUnknown* factory = reinterpret_cast<IUnknown*>(::DecodePointer(pCache->pCF));

  001df	8b f4		 mov	 esi, esp
  001e1	8b 45 f0	 mov	 eax, DWORD PTR _pCache$5[ebp]
  001e4	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e6	51		 push	 ecx
  001e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DecodePointer@4
  001ed	3b f4		 cmp	 esi, esp
  001ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f4	89 45 d0	 mov	 DWORD PTR _factory$2[ebp], eax

; 8159 : 					_Analysis_assume_(factory != nullptr);
; 8160 : 					hr = factory->QueryInterface(riid, ppv);

  001f7	8b f4		 mov	 esi, esp
  001f9	8b 55 14	 mov	 edx, DWORD PTR _ppv$[ebp]
  001fc	52		 push	 edx
  001fd	8b 45 10	 mov	 eax, DWORD PTR _riid$[ebp]
  00200	50		 push	 eax
  00201	8b 4d d0	 mov	 ecx, DWORD PTR _factory$2[ebp]
  00204	8b 11		 mov	 edx, DWORD PTR [ecx]
  00206	8b 45 d0	 mov	 eax, DWORD PTR _factory$2[ebp]
  00209	50		 push	 eax
  0020a	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0020c	ff d1		 call	 ecx
  0020e	3b f4		 cmp	 esi, esp
  00210	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00215	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax
$LN14@AtlComModu:

; 8161 : 				}
; 8162 : 				break;

  00218	eb 05		 jmp	 SHORT $LN3@AtlComModu
$LN8@AtlComModu:

; 8163 : 			}
; 8164 : 		}
; 8165 : 	}

  0021a	e9 71 fe ff ff	 jmp	 $LN2@AtlComModu
$LN3@AtlComModu:

; 8166 : 
; 8167 : 	if (*ppv == NULL && hr == S_OK)

  0021f	8b 55 14	 mov	 edx, DWORD PTR _ppv$[ebp]
  00222	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00225	75 0d		 jne	 SHORT $LN15@AtlComModu
  00227	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0022b	75 07		 jne	 SHORT $LN15@AtlComModu

; 8168 : 	{
; 8169 : 		hr = CLASS_E_CLASSNOTAVAILABLE;

  0022d	c7 45 fc 11 01
	04 80		 mov	 DWORD PTR _hr$[ebp], -2147221231 ; 80040111H
$LN15@AtlComModu:

; 8170 : 	}
; 8171 : 
; 8172 : 	return hr;

  00234	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
$LN1@AtlComModu:

; 8173 : }

  00237	52		 push	 edx
  00238	8b cd		 mov	 ecx, ebp
  0023a	50		 push	 eax
  0023b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN22@AtlComModu
  00241	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00246	58		 pop	 eax
  00247	5a		 pop	 edx
  00248	5f		 pop	 edi
  00249	5e		 pop	 esi
  0024a	83 c4 38	 add	 esp, 56			; 00000038H
  0024d	3b ec		 cmp	 ebp, esp
  0024f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00254	8b e5		 mov	 esp, ebp
  00256	5d		 pop	 ebp
  00257	c2 10 00	 ret	 16			; 00000010H
  0025a	66 90		 npad	 2
$LN22@AtlComModu:
  0025c	02 00 00 00	 DD	 2
  00260	00 00 00 00	 DD	 $LN21@AtlComModu
$LN21@AtlComModu:
  00264	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00268	08 00 00 00	 DD	 8
  0026c	00 00 00 00	 DD	 $LN19@AtlComModu
  00270	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00274	04 00 00 00	 DD	 4
  00278	00 00 00 00	 DD	 $LN20@AtlComModu
$LN20@AtlComModu:
  0027c	66		 DB	 102			; 00000066H
  0027d	61		 DB	 97			; 00000061H
  0027e	63		 DB	 99			; 00000063H
  0027f	74		 DB	 116			; 00000074H
  00280	6f		 DB	 111			; 0000006fH
  00281	72		 DB	 114			; 00000072H
  00282	79		 DB	 121			; 00000079H
  00283	00		 DB	 0
$LN19@AtlComModu:
  00284	6c		 DB	 108			; 0000006cH
  00285	6f		 DB	 111			; 0000006fH
  00286	63		 DB	 99			; 00000063H
  00287	6b		 DB	 107			; 0000006bH
  00288	00		 DB	 0
?AtlComModuleGetClassObject@ATL@@YGJPAU_ATL_COM_MODULE70@1@ABU_GUID@@1PAPAX@Z ENDP ; ATL::AtlComModuleGetClassObject
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv143 = -20						; size = 4
_pUnk$1 = -16						; size = 4
_bBlind$2 = -12						; size = 4
_hRes$ = -8						; size = 4
_pUnk$3 = -4						; size = 4
_pThis$ = 8						; size = 4
_pEntries$ = 12						; size = 4
_iid$ = 16						; size = 4
_ppvObject$ = 20					; size = 4
?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z PROC ; ATL::AtlInternalQueryInterface, COMDAT

; 8265 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 8266 : 	ATLASSERT(pThis != NULL);

  0001b	83 7d 08 00	 cmp	 DWORD PTR _pThis$[ebp], 0
  0001f	75 26		 jne	 SHORT $LN16@AtlInterna
  00021	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@PEGMCOIG@?$AAp?$AAT?$AAh?$AAi?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0002b	6a 00		 push	 0
  0002d	68 4a 20 00 00	 push	 8266			; 0000204aH
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00037	6a 02		 push	 2
  00039	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003e	83 c4 18	 add	 esp, 24			; 00000018H
  00041	83 f8 01	 cmp	 eax, 1
  00044	75 01		 jne	 SHORT $LN16@AtlInterna
  00046	cc		 int	 3
$LN16@AtlInterna:

; 8267 : 	ATLASSERT(pEntries!= NULL);

  00047	83 7d 0c 00	 cmp	 DWORD PTR _pEntries$[ebp], 0
  0004b	75 26		 jne	 SHORT $LN17@AtlInterna
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@ENABKMAI@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00052	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00057	6a 00		 push	 0
  00059	68 4b 20 00 00	 push	 8267			; 0000204bH
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00063	6a 02		 push	 2
  00065	e8 00 00 00 00	 call	 __CrtDbgReportW
  0006a	83 c4 18	 add	 esp, 24			; 00000018H
  0006d	83 f8 01	 cmp	 eax, 1
  00070	75 01		 jne	 SHORT $LN17@AtlInterna
  00072	cc		 int	 3
$LN17@AtlInterna:

; 8268 : 
; 8269 : 	if(pThis == NULL || pEntries == NULL)

  00073	83 7d 08 00	 cmp	 DWORD PTR _pThis$[ebp], 0
  00077	74 06		 je	 SHORT $LN6@AtlInterna
  00079	83 7d 0c 00	 cmp	 DWORD PTR _pEntries$[ebp], 0
  0007d	75 0a		 jne	 SHORT $LN5@AtlInterna
$LN6@AtlInterna:

; 8270 : 		return E_INVALIDARG;

  0007f	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00084	e9 90 01 00 00	 jmp	 $LN1@AtlInterna
$LN5@AtlInterna:

; 8271 : 
; 8272 : 	// First entry in the com map should be a simple map entry
; 8273 : 	ATLASSERT(pEntries->pFunc == _ATL_SIMPLEMAPENTRY);

  00089	8b 55 0c	 mov	 edx, DWORD PTR _pEntries$[ebp]
  0008c	83 7a 08 01	 cmp	 DWORD PTR [edx+8], 1
  00090	74 26		 je	 SHORT $LN18@AtlInterna
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_1GE@KALDMMBC@?$AAp?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?9?$AA?$DO?$AAp?$AAF?$AAu?$AAn?$AAc@
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0009c	6a 00		 push	 0
  0009e	68 51 20 00 00	 push	 8273			; 00002051H
  000a3	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a8	6a 02		 push	 2
  000aa	e8 00 00 00 00	 call	 __CrtDbgReportW
  000af	83 c4 18	 add	 esp, 24			; 00000018H
  000b2	83 f8 01	 cmp	 eax, 1
  000b5	75 01		 jne	 SHORT $LN18@AtlInterna
  000b7	cc		 int	 3
$LN18@AtlInterna:

; 8274 : 
; 8275 : 	if (ppvObject == NULL)

  000b8	83 7d 14 00	 cmp	 DWORD PTR _ppvObject$[ebp], 0
  000bc	75 0a		 jne	 SHORT $LN7@AtlInterna

; 8276 : 		return E_POINTER;

  000be	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  000c3	e9 51 01 00 00	 jmp	 $LN1@AtlInterna
$LN7@AtlInterna:

; 8277 : 
; 8278 : 	if (InlineIsEqualUnknown(iid)) // use first interface

  000c8	8b 4d 10	 mov	 ecx, DWORD PTR _iid$[ebp]
  000cb	51		 push	 ecx
  000cc	e8 00 00 00 00	 call	 ?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z ; ATL::InlineIsEqualUnknown
  000d1	85 c0		 test	 eax, eax
  000d3	74 32		 je	 SHORT $LN8@AtlInterna

; 8279 : 	{
; 8280 : 		IUnknown* pUnk = (IUnknown*)((INT_PTR)pThis+pEntries->dw);

  000d5	8b 55 0c	 mov	 edx, DWORD PTR _pEntries$[ebp]
  000d8	8b 45 08	 mov	 eax, DWORD PTR _pThis$[ebp]
  000db	03 42 04	 add	 eax, DWORD PTR [edx+4]
  000de	89 45 fc	 mov	 DWORD PTR _pUnk$3[ebp], eax

; 8281 : 		pUnk->AddRef();

  000e1	8b 4d fc	 mov	 ecx, DWORD PTR _pUnk$3[ebp]
  000e4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e6	8b f4		 mov	 esi, esp
  000e8	8b 45 fc	 mov	 eax, DWORD PTR _pUnk$3[ebp]
  000eb	50		 push	 eax
  000ec	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  000ef	ff d1		 call	 ecx
  000f1	3b f4		 cmp	 esi, esp
  000f3	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 8282 : 		*ppvObject = pUnk;

  000f8	8b 55 14	 mov	 edx, DWORD PTR _ppvObject$[ebp]
  000fb	8b 45 fc	 mov	 eax, DWORD PTR _pUnk$3[ebp]
  000fe	89 02		 mov	 DWORD PTR [edx], eax

; 8283 : 		return S_OK;

  00100	33 c0		 xor	 eax, eax
  00102	e9 12 01 00 00	 jmp	 $LN1@AtlInterna
$LN8@AtlInterna:

; 8284 : 	}

  00107	eb 09		 jmp	 SHORT $LN4@AtlInterna
$LN2@AtlInterna:

; 8285 : 
; 8286 : 	HRESULT hRes;
; 8287 : 
; 8288 : 	for (;; pEntries++)

  00109	8b 4d 0c	 mov	 ecx, DWORD PTR _pEntries$[ebp]
  0010c	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0010f	89 4d 0c	 mov	 DWORD PTR _pEntries$[ebp], ecx
$LN4@AtlInterna:

; 8289 : 	{
; 8290 : 		if (pEntries->pFunc == NULL)

  00112	8b 55 0c	 mov	 edx, DWORD PTR _pEntries$[ebp]
  00115	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00119	75 0c		 jne	 SHORT $LN9@AtlInterna

; 8291 : 		{
; 8292 : 			hRes = E_NOINTERFACE;

  0011b	c7 45 f8 02 40
	00 80		 mov	 DWORD PTR _hRes$[ebp], -2147467262 ; 80004002H

; 8293 : 			break;

  00122	e9 e6 00 00 00	 jmp	 $LN3@AtlInterna
$LN9@AtlInterna:

; 8294 : 		}
; 8295 : 
; 8296 : 		BOOL bBlind = (pEntries->piid == NULL);

  00127	8b 45 0c	 mov	 eax, DWORD PTR _pEntries$[ebp]
  0012a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0012d	75 09		 jne	 SHORT $LN19@AtlInterna
  0012f	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR tv143[ebp], 1
  00136	eb 07		 jmp	 SHORT $LN20@AtlInterna
$LN19@AtlInterna:
  00138	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN20@AtlInterna:
  0013f	8b 4d ec	 mov	 ecx, DWORD PTR tv143[ebp]
  00142	89 4d f4	 mov	 DWORD PTR _bBlind$2[ebp], ecx

; 8297 : 		if (bBlind || InlineIsEqualGUID(*(pEntries->piid), iid))

  00145	83 7d f4 00	 cmp	 DWORD PTR _bBlind$2[ebp], 0
  00149	75 1a		 jne	 SHORT $LN11@AtlInterna
  0014b	8b 55 10	 mov	 edx, DWORD PTR _iid$[ebp]
  0014e	52		 push	 edx
  0014f	8b 45 0c	 mov	 eax, DWORD PTR _pEntries$[ebp]
  00152	8b 08		 mov	 ecx, DWORD PTR [eax]
  00154	51		 push	 ecx
  00155	e8 00 00 00 00	 call	 _InlineIsEqualGUID
  0015a	83 c4 08	 add	 esp, 8
  0015d	85 c0		 test	 eax, eax
  0015f	0f 84 a3 00 00
	00		 je	 $LN10@AtlInterna
$LN11@AtlInterna:

; 8298 : 		{
; 8299 : 			if (pEntries->pFunc == _ATL_SIMPLEMAPENTRY) //offset

  00165	8b 55 0c	 mov	 edx, DWORD PTR _pEntries$[ebp]
  00168	83 7a 08 01	 cmp	 DWORD PTR [edx+8], 1
  0016c	75 5b		 jne	 SHORT $LN12@AtlInterna

; 8300 : 			{
; 8301 : 				ATLASSERT(!bBlind);

  0016e	83 7d f4 00	 cmp	 DWORD PTR _bBlind$2[ebp], 0
  00172	74 26		 je	 SHORT $LN21@AtlInterna
  00174	68 00 00 00 00	 push	 OFFSET ??_C@_1BA@JJDNGNLN@?$AA?$CB?$AAb?$AAB?$AAl?$AAi?$AAn?$AAd@
  00179	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0017e	6a 00		 push	 0
  00180	68 6d 20 00 00	 push	 8301			; 0000206dH
  00185	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@CIBKFAMP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0018a	6a 02		 push	 2
  0018c	e8 00 00 00 00	 call	 __CrtDbgReportW
  00191	83 c4 18	 add	 esp, 24			; 00000018H
  00194	83 f8 01	 cmp	 eax, 1
  00197	75 01		 jne	 SHORT $LN21@AtlInterna
  00199	cc		 int	 3
$LN21@AtlInterna:

; 8302 : 				IUnknown* pUnk = (IUnknown*)((INT_PTR)pThis+pEntries->dw);

  0019a	8b 4d 0c	 mov	 ecx, DWORD PTR _pEntries$[ebp]
  0019d	8b 55 08	 mov	 edx, DWORD PTR _pThis$[ebp]
  001a0	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  001a3	89 55 f0	 mov	 DWORD PTR _pUnk$1[ebp], edx

; 8303 : 				pUnk->AddRef();

  001a6	8b 45 f0	 mov	 eax, DWORD PTR _pUnk$1[ebp]
  001a9	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ab	8b f4		 mov	 esi, esp
  001ad	8b 55 f0	 mov	 edx, DWORD PTR _pUnk$1[ebp]
  001b0	52		 push	 edx
  001b1	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001b4	ff d0		 call	 eax
  001b6	3b f4		 cmp	 esi, esp
  001b8	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 8304 : 				*ppvObject = pUnk;

  001bd	8b 4d 14	 mov	 ecx, DWORD PTR _ppvObject$[ebp]
  001c0	8b 55 f0	 mov	 edx, DWORD PTR _pUnk$1[ebp]
  001c3	89 11		 mov	 DWORD PTR [ecx], edx

; 8305 : 				return S_OK;

  001c5	33 c0		 xor	 eax, eax
  001c7	eb 50		 jmp	 SHORT $LN1@AtlInterna
$LN12@AtlInterna:

; 8306 : 			}
; 8307 : 
; 8308 : 			// Actual function call
; 8309 : 
; 8310 : 			hRes = pEntries->pFunc(pThis,

  001c9	8b f4		 mov	 esi, esp
  001cb	8b 45 0c	 mov	 eax, DWORD PTR _pEntries$[ebp]
  001ce	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001d1	51		 push	 ecx
  001d2	8b 55 14	 mov	 edx, DWORD PTR _ppvObject$[ebp]
  001d5	52		 push	 edx
  001d6	8b 45 10	 mov	 eax, DWORD PTR _iid$[ebp]
  001d9	50		 push	 eax
  001da	8b 4d 08	 mov	 ecx, DWORD PTR _pThis$[ebp]
  001dd	51		 push	 ecx
  001de	8b 55 0c	 mov	 edx, DWORD PTR _pEntries$[ebp]
  001e1	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001e4	ff d0		 call	 eax
  001e6	3b f4		 cmp	 esi, esp
  001e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ed	89 45 f8	 mov	 DWORD PTR _hRes$[ebp], eax

; 8311 : 				iid, ppvObject, pEntries->dw);
; 8312 : 			if (hRes == S_OK)

  001f0	83 7d f8 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  001f4	75 04		 jne	 SHORT $LN13@AtlInterna

; 8313 : 				return S_OK;

  001f6	33 c0		 xor	 eax, eax
  001f8	eb 1f		 jmp	 SHORT $LN1@AtlInterna
$LN13@AtlInterna:

; 8314 : 			if (!bBlind && FAILED(hRes))

  001fa	83 7d f4 00	 cmp	 DWORD PTR _bBlind$2[ebp], 0
  001fe	75 08		 jne	 SHORT $LN10@AtlInterna
  00200	83 7d f8 00	 cmp	 DWORD PTR _hRes$[ebp], 0
  00204	7d 02		 jge	 SHORT $LN10@AtlInterna

; 8315 : 				break;

  00206	eb 05		 jmp	 SHORT $LN3@AtlInterna
$LN10@AtlInterna:

; 8316 : 		}
; 8317 : 	}

  00208	e9 fc fe ff ff	 jmp	 $LN2@AtlInterna
$LN3@AtlInterna:

; 8318 : 
; 8319 : 	*ppvObject = NULL;

  0020d	8b 4d 14	 mov	 ecx, DWORD PTR _ppvObject$[ebp]
  00210	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 8320 : 
; 8321 : 	return hRes;

  00216	8b 45 f8	 mov	 eax, DWORD PTR _hRes$[ebp]
$LN1@AtlInterna:

; 8322 : }

  00219	5e		 pop	 esi
  0021a	83 c4 14	 add	 esp, 20			; 00000014H
  0021d	3b ec		 cmp	 ebp, esp
  0021f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00224	8b e5		 mov	 esp, ebp
  00226	5d		 pop	 ebp
  00227	c2 10 00	 ret	 16			; 00000010H
?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z ENDP ; ATL::AtlInternalQueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_ATL_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_ATL_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_MODULE70::~_ATL_MODULE70, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00014	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QAE@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??1_ATL_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_MODULE70::~_ATL_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_ATL_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_ATL_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_MODULE70::_ATL_MODULE70, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00014	e8 00 00 00 00	 call	 ??0CComCriticalSection@ATL@@QAE@XZ ; ATL::CComCriticalSection::CComCriticalSection
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??0_ATL_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_MODULE70::_ATL_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 20	 add	 ecx, 32			; 00000020H
  00014	e8 00 00 00 00	 call	 ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	83 c1 04	 add	 ecx, 4
  0001f	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QAE@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 04	 add	 ecx, 4
  00014	e8 00 00 00 00	 call	 ??0CComCriticalSection@ATL@@QAE@XZ ; ATL::CComCriticalSection::CComCriticalSection
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	83 c1 20	 add	 ecx, 32			; 00000020H
  0001f	e8 00 00 00 00	 call	 ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	83 c4 04	 add	 esp, 4
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ?InternalSetAtIndex@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXHABG@Z
_TEXT	SEGMENT
tv77 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_t$ = 12						; size = 4
?InternalSetAtIndex@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXHABG@Z PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::InternalSetAtIndex, COMDAT
; _this$ = ecx

; 297  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 298  : 		new(m_aT + nIndex) Wrapper(t);

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 08		 mov	 ecx, DWORD PTR [eax]
  00023	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00026	8d 04 51	 lea	 eax, DWORD PTR [ecx+edx*2]
  00029	50		 push	 eax
  0002a	6a 02		 push	 2
  0002c	e8 00 00 00 00	 call	 ??$?2G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAPAXIPAG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::operator new<unsigned short>
  00031	83 c4 08	 add	 esp, 8
  00034	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  00037	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  0003b	74 11		 je	 SHORT $LN3@InternalSe
  0003d	8b 4d 0c	 mov	 ecx, DWORD PTR _t$[ebp]
  00040	51		 push	 ecx
  00041	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00044	e8 00 00 00 00	 call	 ??0Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@ABG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::Wrapper
  00049	89 45 f4	 mov	 DWORD PTR tv77[ebp], eax
  0004c	eb 07		 jmp	 SHORT $LN1@InternalSe
$LN3@InternalSe:
  0004e	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN1@InternalSe:

; 299  : 	}

  00055	83 c4 0c	 add	 esp, 12			; 0000000cH
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 08 00	 ret	 8
?InternalSetAtIndex@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXHABG@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::InternalSetAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[], COMDAT
; _this$ = ecx

; 236  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 237  : 		ATLASSERT(nIndex >= 0 && nIndex < m_nSize);

  0000e	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00012	7c 0b		 jl	 SHORT $LN5@operator
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001a	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  0001d	7c 26		 jl	 SHORT $LN6@operator
$LN5@operator:
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00029	6a 00		 push	 0
  0002b	68 ed 00 00 00	 push	 237			; 000000edH
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_1OK@FGCLCILL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00035	6a 02		 push	 2
  00037	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003c	83 c4 18	 add	 esp, 24			; 00000018H
  0003f	83 f8 01	 cmp	 eax, 1
  00042	75 01		 jne	 SHORT $LN6@operator
  00044	cc		 int	 3
$LN6@operator:

; 238  : 		if(nIndex < 0 || nIndex >= m_nSize)

  00045	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00049	7c 0b		 jl	 SHORT $LN3@operator
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00051	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00054	7c 0c		 jl	 SHORT $LN2@operator
$LN3@operator:

; 239  : 		{
; 240  : 			_AtlRaiseException((DWORD)EXCEPTION_ARRAY_BOUNDS_EXCEEDED);

  00056	6a 01		 push	 1
  00058	68 8c 00 00 c0	 push	 -1073741684		; c000008cH
  0005d	e8 00 00 00 00	 call	 ?_AtlRaiseException@ATL@@YAXKK@Z ; ATL::_AtlRaiseException
$LN2@operator:

; 241  : 		}
; 242  : 		return m_aT[nIndex];

  00062	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00065	8b 02		 mov	 eax, DWORD PTR [edx]
  00067	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0006a	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
$LN4@operator:

; 243  : 	}

  0006d	83 c4 04	 add	 esp, 4
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll, COMDAT
; _this$ = ecx

; 215  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 216  : 		if(m_aT != NULL)

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001d	74 36		 je	 SHORT $LN5@RemoveAll

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)

  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00026	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00028	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002b	83 c1 01	 add	 ecx, 1
  0002e	89 4d f8	 mov	 DWORD PTR _i$1[ebp], ecx
$LN4@RemoveAll:
  00031	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00037	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  0003a	7d 02		 jge	 SHORT $LN3@RemoveAll

; 219  : 				m_aT[i].~T();

  0003c	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 220  : 			free(m_aT);

  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	8b 11		 mov	 edx, DWORD PTR [ecx]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 _free
  00049	83 c4 04	 add	 esp, 4

; 221  : 			m_aT = NULL;

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN5@RemoveAll:

; 222  : 		}
; 223  : 		m_nSize = 0;

  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 224  : 		m_nAllocSize = 0;

  0005f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00062	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 225  :     }

  00069	83 c4 08	 add	 esp, 8
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ?Add@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEHABG@Z
_TEXT	SEGMENT
tv93 = -24						; size = 4
tv74 = -20						; size = 4
_nNewAllocSize$1 = -16					; size = 4
_aT$2 = -12						; size = 4
___atl_condVal$3 = -8					; size = 4
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?Add@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEHABG@Z PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Add, COMDAT
; _this$ = ecx

; 166  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 167  : 		if(m_nSize == m_nAllocSize)

  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00029	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0002c	0f 85 df 00 00
	00		 jne	 $LN8@Add
$LN4@Add:

; 168  : 		{
; 169  : 			// Make sure newElement is not a reference to an element in the array.
; 170  : 			// Or else, it will be invalidated by the reallocation.
; 171  : 			ATLENSURE(	(&t < m_aT) ||

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00038	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0003a	72 1c		 jb	 SHORT $LN14@Add
  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	8b 11		 mov	 edx, DWORD PTR [ecx]
  00047	8d 04 42	 lea	 eax, DWORD PTR [edx+eax*2]
  0004a	39 45 08	 cmp	 DWORD PTR _t$[ebp], eax
  0004d	73 09		 jae	 SHORT $LN14@Add
  0004f	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
  00056	eb 07		 jmp	 SHORT $LN15@Add
$LN14@Add:
  00058	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR tv74[ebp], 1
$LN15@Add:
  0005f	8b 4d ec	 mov	 ecx, DWORD PTR tv74[ebp]
  00062	89 4d f8	 mov	 DWORD PTR ___atl_condVal$3[ebp], ecx
$LN7@Add:
  00065	83 7d f8 00	 cmp	 DWORD PTR ___atl_condVal$3[ebp], 0
  00069	75 26		 jne	 SHORT $LN5@Add
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00075	6a 00		 push	 0
  00077	68 ac 00 00 00	 push	 172			; 000000acH
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_1OK@FGCLCILL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00081	6a 02		 push	 2
  00083	e8 00 00 00 00	 call	 __CrtDbgReportW
  00088	83 c4 18	 add	 esp, 24			; 00000018H
  0008b	83 f8 01	 cmp	 eax, 1
  0008e	75 01		 jne	 SHORT $LN5@Add
  00090	cc		 int	 3
$LN5@Add:
  00091	33 c0		 xor	 eax, eax
  00093	75 d0		 jne	 SHORT $LN7@Add
  00095	83 7d f8 00	 cmp	 DWORD PTR ___atl_condVal$3[ebp], 0
  00099	75 0a		 jne	 SHORT $LN2@Add
  0009b	68 05 40 00 80	 push	 -2147467259		; 80004005H
  000a0	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@Add:
  000a5	33 c9		 xor	 ecx, ecx
  000a7	75 89		 jne	 SHORT $LN4@Add

; 172  : 						(&t >= (m_aT + m_nAllocSize) ) );
; 173  : 
; 174  : 			T* aT;
; 175  : 			int nNewAllocSize = (m_nAllocSize == 0) ? 1 : (m_nSize * 2);

  000a9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ac	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  000b0	75 09		 jne	 SHORT $LN17@Add
  000b2	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR tv93[ebp], 1
  000b9	eb 0b		 jmp	 SHORT $LN18@Add
$LN17@Add:
  000bb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000be	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c1	d1 e1		 shl	 ecx, 1
  000c3	89 4d e8	 mov	 DWORD PTR tv93[ebp], ecx
$LN18@Add:
  000c6	8b 55 e8	 mov	 edx, DWORD PTR tv93[ebp]
  000c9	89 55 f0	 mov	 DWORD PTR _nNewAllocSize$1[ebp], edx

; 176  : 
; 177  : 			if (nNewAllocSize<0||nNewAllocSize>INT_MAX/sizeof(T))

  000cc	83 7d f0 00	 cmp	 DWORD PTR _nNewAllocSize$1[ebp], 0
  000d0	7c 09		 jl	 SHORT $LN11@Add
  000d2	81 7d f0 ff ff
	ff 3f		 cmp	 DWORD PTR _nNewAllocSize$1[ebp], 1073741823 ; 3fffffffH
  000d9	76 04		 jbe	 SHORT $LN10@Add
$LN11@Add:

; 178  : 			{
; 179  : 				return FALSE;

  000db	33 c0		 xor	 eax, eax
  000dd	eb 59		 jmp	 SHORT $LN13@Add
$LN10@Add:

; 180  : 			}
; 181  : 
; 182  : 			aT = (T*)_recalloc(m_aT, nNewAllocSize, sizeof(T));

  000df	6a 02		 push	 2
  000e1	8b 45 f0	 mov	 eax, DWORD PTR _nNewAllocSize$1[ebp]
  000e4	50		 push	 eax
  000e5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ea	52		 push	 edx
  000eb	e8 00 00 00 00	 call	 __recalloc
  000f0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f3	89 45 f4	 mov	 DWORD PTR _aT$2[ebp], eax

; 183  : 			if(aT == NULL)

  000f6	83 7d f4 00	 cmp	 DWORD PTR _aT$2[ebp], 0
  000fa	75 04		 jne	 SHORT $LN12@Add

; 184  : 				return FALSE;

  000fc	33 c0		 xor	 eax, eax
  000fe	eb 38		 jmp	 SHORT $LN13@Add
$LN12@Add:

; 185  : 			m_nAllocSize = nNewAllocSize;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f0	 mov	 ecx, DWORD PTR _nNewAllocSize$1[ebp]
  00106	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 186  : 			m_aT = aT;

  00109	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0010c	8b 45 f4	 mov	 eax, DWORD PTR _aT$2[ebp]
  0010f	89 02		 mov	 DWORD PTR [edx], eax
$LN8@Add:

; 187  : 		}
; 188  : 		InternalSetAtIndex(m_nSize, t);

  00111	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00114	51		 push	 ecx
  00115	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00118	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0011b	50		 push	 eax
  0011c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011f	e8 00 00 00 00	 call	 ?InternalSetAtIndex@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXHABG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::InternalSetAtIndex

; 189  : 		m_nSize++;

  00124	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00127	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012a	83 c2 01	 add	 edx, 1
  0012d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00130	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 190  : 		return TRUE;

  00133	b8 01 00 00 00	 mov	 eax, 1
$LN13@Add:

; 191  : 	}

  00138	83 c4 18	 add	 esp, 24			; 00000018H
  0013b	3b ec		 cmp	 ebp, esp
  0013d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00142	8b e5		 mov	 esp, ebp
  00144	5d		 pop	 ebp
  00145	c2 04 00	 ret	 4
?Add@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEHABG@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Add
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize, COMDAT
; _this$ = ecx

; 160  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 161  : 		return m_nSize;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 162  : 	}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 310  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 311  : 	RemoveAll();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll

; 312  : }

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 120  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00021	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00024	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 121  : 	}

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_ATL_COM_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_ATL_COM_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 10	 add	 ecx, 16			; 00000010H
  00014	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QAE@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??1_ATL_COM_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_ATL_COM_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_ATL_COM_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 10	 add	 ecx, 16			; 00000010H
  00014	e8 00 00 00 00	 call	 ??0CComCriticalSection@ATL@@QAE@XZ ; ATL::CComCriticalSection::CComCriticalSection
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??0_ATL_COM_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Decrement@CComSingleThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Decrement@CComSingleThreadModel@ATL@@SGKPAJ@Z PROC	; ATL::CComSingleThreadModel::Decrement, COMDAT

; 443  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 444  : 		return --(*p);

  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	83 e9 01	 sub	 ecx, 1
  0000b	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0000e	89 0a		 mov	 DWORD PTR [edx], ecx
  00010	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00013	8b 00		 mov	 eax, DWORD PTR [eax]

; 445  : 	}

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?Decrement@CComSingleThreadModel@ATL@@SGKPAJ@Z ENDP	; ATL::CComSingleThreadModel::Decrement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Increment@CComSingleThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Increment@CComSingleThreadModel@ATL@@SGKPAJ@Z PROC	; ATL::CComSingleThreadModel::Increment, COMDAT

; 439  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 440  : 		return ++(*p);

  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	83 c1 01	 add	 ecx, 1
  0000b	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0000e	89 0a		 mov	 DWORD PTR [edx], ecx
  00010	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00013	8b 00		 mov	 eax, DWORD PTR [eax]

; 441  : 	}

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?Increment@CComSingleThreadModel@ATL@@SGKPAJ@Z ENDP	; ATL::CComSingleThreadModel::Increment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z PROC	; ATL::CComMultiThreadModel::Decrement, COMDAT

; 426  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 427  : 		return ::InterlockedDecrement(p);

  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	83 c9 ff	 or	 ecx, -1
  00009	f0 0f c1 08	 lock	  xadd	 DWORD PTR [eax], ecx
  0000d	49		 dec	 ecx
  0000e	8b c1		 mov	 eax, ecx

; 428  : 	}

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z ENDP	; ATL::CComMultiThreadModel::Decrement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlbase.h
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z PROC	; ATL::CComMultiThreadModel::Increment, COMDAT

; 422  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 423  : 		return ::InterlockedIncrement(p);

  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	b9 01 00 00 00	 mov	 ecx, 1
  0000b	f0 0f c1 08	 lock	  xadd	 DWORD PTR [eax], ecx
  0000f	41		 inc	 ecx
  00010	8b c1		 mov	 eax, ecx

; 424  : 	}

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z ENDP	; ATL::CComMultiThreadModel::Increment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltransactionmanager.h
;	COMDAT ?RegDeleteKeyW@CAtlTransactionManager@ATL@@QAEJPAUHKEY__@@PB_W@Z
_TEXT	SEGMENT
_pfRegDeleteKeyTransacted$1 = -12			; size = 4
_hAdvAPI32$2 = -8					; size = 4
_this$ = -4						; size = 4
_hKey$ = 8						; size = 4
_lpSubKey$ = 12						; size = 4
?RegDeleteKeyW@CAtlTransactionManager@ATL@@QAEJPAUHKEY__@@PB_W@Z PROC ; ATL::CAtlTransactionManager::RegDeleteKeyW, COMDAT
; _this$ = ecx

; 664  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 665  : 	if (m_hTransaction != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 38 00	 cmp	 DWORD PTR [eax], 0
  00025	0f 84 95 00 00
	00		 je	 $LN2@RegDeleteK

; 666  : 	{
; 667  : 		HMODULE hAdvAPI32 = ::GetModuleHandle(_T("Advapi32.dll"));

  0002b	8b f4		 mov	 esi, esp
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@BIGILECK@?$AAA?$AAd?$AAv?$AAa?$AAp?$AAi?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl@
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleW@4
  00038	3b f4		 cmp	 esi, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	89 45 f8	 mov	 DWORD PTR _hAdvAPI32$2[ebp], eax

; 668  : 		ATLASSERT(hAdvAPI32 != NULL);

  00042	83 7d f8 00	 cmp	 DWORD PTR _hAdvAPI32$2[ebp], 0
  00046	75 26		 jne	 SHORT $LN8@RegDeleteK
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@KNMGNOCJ@?$AAh?$AAA?$AAd?$AAv?$AAA?$AAP?$AAI?$AA3?$AA2?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00052	6a 00		 push	 0
  00054	68 9c 02 00 00	 push	 668			; 0000029cH
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_1PO@GPALOAFP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0005e	6a 02		 push	 2
  00060	e8 00 00 00 00	 call	 __CrtDbgReportW
  00065	83 c4 18	 add	 esp, 24			; 00000018H
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 01		 jne	 SHORT $LN8@RegDeleteK
  0006d	cc		 int	 3
$LN8@RegDeleteK:

; 669  : 		if (hAdvAPI32 == NULL)

  0006e	83 7d f8 00	 cmp	 DWORD PTR _hAdvAPI32$2[ebp], 0
  00072	75 07		 jne	 SHORT $LN4@RegDeleteK

; 670  : 		{
; 671  : 			return ERROR_INVALID_FUNCTION;

  00074	b8 01 00 00 00	 mov	 eax, 1
  00079	eb 6c		 jmp	 SHORT $LN1@RegDeleteK
$LN4@RegDeleteK:

; 672  : 		}
; 673  : 
; 674  : #ifdef _UNICODE
; 675  : 		typedef LSTATUS (WINAPI* PFNREGDELETEKEYTRANSACTED)(HKEY, LPCWSTR, REGSAM, DWORD, HANDLE, PVOID);
; 676  : 		PFNREGDELETEKEYTRANSACTED pfRegDeleteKeyTransacted = (PFNREGDELETEKEYTRANSACTED)GetProcAddress(hAdvAPI32, "RegDeleteKeyTransactedW");

  0007b	8b f4		 mov	 esi, esp
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@HAKLOOGP@RegDeleteKeyTransactedW@
  00082	8b 55 f8	 mov	 edx, DWORD PTR _hAdvAPI32$2[ebp]
  00085	52		 push	 edx
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0008c	3b f4		 cmp	 esi, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	89 45 f4	 mov	 DWORD PTR _pfRegDeleteKeyTransacted$1[ebp], eax

; 677  : #else
; 678  : 		typedef LSTATUS (WINAPI* PFNREGDELETEKEYTRANSACTED)(HKEY, LPCSTR, REGSAM, DWORD, HANDLE, PVOID);
; 679  : 		PFNREGDELETEKEYTRANSACTED pfRegDeleteKeyTransacted = (PFNREGDELETEKEYTRANSACTED)GetProcAddress(hAdvAPI32, "RegDeleteKeyTransactedA");
; 680  : #endif
; 681  : 		if (pfRegDeleteKeyTransacted != NULL)

  00096	83 7d f4 00	 cmp	 DWORD PTR _pfRegDeleteKeyTransacted$1[ebp], 0
  0009a	74 22		 je	 SHORT $LN5@RegDeleteK

; 682  : 		{
; 683  : 			return (*pfRegDeleteKeyTransacted)(hKey, lpSubKey, 0, 0, m_hTransaction, NULL);

  0009c	8b f4		 mov	 esi, esp
  0009e	6a 00		 push	 0
  000a0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a5	51		 push	 ecx
  000a6	6a 00		 push	 0
  000a8	6a 00		 push	 0
  000aa	8b 55 0c	 mov	 edx, DWORD PTR _lpSubKey$[ebp]
  000ad	52		 push	 edx
  000ae	8b 45 08	 mov	 eax, DWORD PTR _hKey$[ebp]
  000b1	50		 push	 eax
  000b2	ff 55 f4	 call	 DWORD PTR _pfRegDeleteKeyTransacted$1[ebp]
  000b5	3b f4		 cmp	 esi, esp
  000b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bc	eb 29		 jmp	 SHORT $LN1@RegDeleteK
$LN5@RegDeleteK:

; 684  : 		}
; 685  : 	}

  000be	eb 22		 jmp	 SHORT $LN3@RegDeleteK
$LN2@RegDeleteK:

; 686  : 	else if (m_bFallback)

  000c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000c7	74 19		 je	 SHORT $LN3@RegDeleteK

; 687  : 	{
; 688  : 		return ::RegDeleteKey(hKey, lpSubKey);

  000c9	8b f4		 mov	 esi, esp
  000cb	8b 55 0c	 mov	 edx, DWORD PTR _lpSubKey$[ebp]
  000ce	52		 push	 edx
  000cf	8b 45 08	 mov	 eax, DWORD PTR _hKey$[ebp]
  000d2	50		 push	 eax
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegDeleteKeyW@8
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	eb 05		 jmp	 SHORT $LN1@RegDeleteK
$LN3@RegDeleteK:

; 689  : 	}
; 690  : 
; 691  : 	return ERROR_INVALID_FUNCTION;

  000e2	b8 01 00 00 00	 mov	 eax, 1
$LN1@RegDeleteK:

; 692  : }

  000e7	5e		 pop	 esi
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000eb	3b ec		 cmp	 ebp, esp
  000ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f2	8b e5		 mov	 esp, ebp
  000f4	5d		 pop	 ebp
  000f5	c2 08 00	 ret	 8
?RegDeleteKeyW@CAtlTransactionManager@ATL@@QAEJPAUHKEY__@@PB_W@Z ENDP ; ATL::CAtlTransactionManager::RegDeleteKeyW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltransactionmanager.h
;	COMDAT ?RegOpenKeyExW@CAtlTransactionManager@ATL@@QAEJPAUHKEY__@@PB_WKKPAPAU3@@Z
_TEXT	SEGMENT
_pfRegOpenKeyTransacted$1 = -12				; size = 4
_hAdvAPI32$2 = -8					; size = 4
_this$ = -4						; size = 4
_hKey$ = 8						; size = 4
_lpSubKey$ = 12						; size = 4
_ulOptions$ = 16					; size = 4
_samDesired$ = 20					; size = 4
_phkResult$ = 24					; size = 4
?RegOpenKeyExW@CAtlTransactionManager@ATL@@QAEJPAUHKEY__@@PB_WKKPAPAU3@@Z PROC ; ATL::CAtlTransactionManager::RegOpenKeyExW, COMDAT
; _this$ = ecx

; 593  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 594  : 	if (m_hTransaction != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 38 00	 cmp	 DWORD PTR [eax], 0
  00025	0f 84 a0 00 00
	00		 je	 $LN2@RegOpenKey

; 595  : 	{
; 596  : 		HMODULE hAdvAPI32 = ::GetModuleHandle(_T("Advapi32.dll"));

  0002b	8b f4		 mov	 esi, esp
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@BIGILECK@?$AAA?$AAd?$AAv?$AAa?$AAp?$AAi?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl@
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleW@4
  00038	3b f4		 cmp	 esi, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	89 45 f8	 mov	 DWORD PTR _hAdvAPI32$2[ebp], eax

; 597  : 		ATLASSERT(hAdvAPI32 != NULL);

  00042	83 7d f8 00	 cmp	 DWORD PTR _hAdvAPI32$2[ebp], 0
  00046	75 26		 jne	 SHORT $LN8@RegOpenKey
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@KNMGNOCJ@?$AAh?$AAA?$AAd?$AAv?$AAA?$AAP?$AAI?$AA3?$AA2?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00052	6a 00		 push	 0
  00054	68 55 02 00 00	 push	 597			; 00000255H
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_1PO@GPALOAFP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0005e	6a 02		 push	 2
  00060	e8 00 00 00 00	 call	 __CrtDbgReportW
  00065	83 c4 18	 add	 esp, 24			; 00000018H
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 01		 jne	 SHORT $LN8@RegOpenKey
  0006d	cc		 int	 3
$LN8@RegOpenKey:

; 598  : 		if (hAdvAPI32 == NULL)

  0006e	83 7d f8 00	 cmp	 DWORD PTR _hAdvAPI32$2[ebp], 0
  00072	75 0a		 jne	 SHORT $LN4@RegOpenKey

; 599  : 		{
; 600  : 			return ERROR_INVALID_FUNCTION;

  00074	b8 01 00 00 00	 mov	 eax, 1
  00079	e9 80 00 00 00	 jmp	 $LN1@RegOpenKey
$LN4@RegOpenKey:

; 601  : 		}
; 602  : 
; 603  : #ifdef _UNICODE
; 604  : 		typedef LSTATUS (WINAPI* PFNREGOPENKEYTRANSACTED)(HKEY, LPCWSTR, DWORD, REGSAM, PHKEY, HANDLE, PVOID);
; 605  : 		PFNREGOPENKEYTRANSACTED pfRegOpenKeyTransacted = (PFNREGOPENKEYTRANSACTED)GetProcAddress(hAdvAPI32, "RegOpenKeyTransactedW");

  0007e	8b f4		 mov	 esi, esp
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EKFFMJIO@RegOpenKeyTransactedW@
  00085	8b 55 f8	 mov	 edx, DWORD PTR _hAdvAPI32$2[ebp]
  00088	52		 push	 edx
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0008f	3b f4		 cmp	 esi, esp
  00091	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00096	89 45 f4	 mov	 DWORD PTR _pfRegOpenKeyTransacted$1[ebp], eax

; 606  : #else
; 607  : 		typedef LSTATUS (WINAPI* PFNREGOPENKEYTRANSACTED)(HKEY, LPCSTR, DWORD, REGSAM, PHKEY, HANDLE, PVOID);
; 608  : 		PFNREGOPENKEYTRANSACTED pfRegOpenKeyTransacted = (PFNREGOPENKEYTRANSACTED)GetProcAddress(hAdvAPI32, "RegOpenKeyTransactedA");
; 609  : #endif
; 610  : 		if (pfRegOpenKeyTransacted != NULL)

  00099	83 7d f4 00	 cmp	 DWORD PTR _pfRegOpenKeyTransacted$1[ebp], 0
  0009d	74 2a		 je	 SHORT $LN5@RegOpenKey

; 611  : 		{
; 612  : 			return (*pfRegOpenKeyTransacted)(hKey, lpSubKey, ulOptions, samDesired, phkResult, m_hTransaction, NULL);

  0009f	8b f4		 mov	 esi, esp
  000a1	6a 00		 push	 0
  000a3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a8	51		 push	 ecx
  000a9	8b 55 18	 mov	 edx, DWORD PTR _phkResult$[ebp]
  000ac	52		 push	 edx
  000ad	8b 45 14	 mov	 eax, DWORD PTR _samDesired$[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 10	 mov	 ecx, DWORD PTR _ulOptions$[ebp]
  000b4	51		 push	 ecx
  000b5	8b 55 0c	 mov	 edx, DWORD PTR _lpSubKey$[ebp]
  000b8	52		 push	 edx
  000b9	8b 45 08	 mov	 eax, DWORD PTR _hKey$[ebp]
  000bc	50		 push	 eax
  000bd	ff 55 f4	 call	 DWORD PTR _pfRegOpenKeyTransacted$1[ebp]
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	eb 35		 jmp	 SHORT $LN1@RegOpenKey
$LN5@RegOpenKey:

; 613  : 		}
; 614  : 	}

  000c9	eb 2e		 jmp	 SHORT $LN3@RegOpenKey
$LN2@RegOpenKey:

; 615  : 	else if (m_bFallback)

  000cb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ce	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000d2	74 25		 je	 SHORT $LN3@RegOpenKey

; 616  : 	{
; 617  : 		return ::RegOpenKeyEx(hKey, lpSubKey, ulOptions, samDesired, phkResult);

  000d4	8b f4		 mov	 esi, esp
  000d6	8b 55 18	 mov	 edx, DWORD PTR _phkResult$[ebp]
  000d9	52		 push	 edx
  000da	8b 45 14	 mov	 eax, DWORD PTR _samDesired$[ebp]
  000dd	50		 push	 eax
  000de	8b 4d 10	 mov	 ecx, DWORD PTR _ulOptions$[ebp]
  000e1	51		 push	 ecx
  000e2	8b 55 0c	 mov	 edx, DWORD PTR _lpSubKey$[ebp]
  000e5	52		 push	 edx
  000e6	8b 45 08	 mov	 eax, DWORD PTR _hKey$[ebp]
  000e9	50		 push	 eax
  000ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegOpenKeyExW@20
  000f0	3b f4		 cmp	 esi, esp
  000f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f7	eb 05		 jmp	 SHORT $LN1@RegOpenKey
$LN3@RegOpenKey:

; 618  : 	}
; 619  : 
; 620  : 	return ERROR_INVALID_FUNCTION;

  000f9	b8 01 00 00 00	 mov	 eax, 1
$LN1@RegOpenKey:

; 621  : }

  000fe	5e		 pop	 esi
  000ff	83 c4 0c	 add	 esp, 12			; 0000000cH
  00102	3b ec		 cmp	 ebp, esp
  00104	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00109	8b e5		 mov	 esp, ebp
  0010b	5d		 pop	 ebp
  0010c	c2 14 00	 ret	 20			; 00000014H
?RegOpenKeyExW@CAtlTransactionManager@ATL@@QAEJPAUHKEY__@@PB_WKKPAPAU3@@Z ENDP ; ATL::CAtlTransactionManager::RegOpenKeyExW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltransactionmanager.h
;	COMDAT ?RegCreateKeyExW@CAtlTransactionManager@ATL@@QAEJPAUHKEY__@@PB_WKPA_WKKQAU_SECURITY_ATTRIBUTES@@PAPAU3@PAK@Z
_TEXT	SEGMENT
_pfRegCreateKeyTransacted$1 = -12			; size = 4
_hAdvAPI32$2 = -8					; size = 4
_this$ = -4						; size = 4
_hKey$ = 8						; size = 4
_lpSubKey$ = 12						; size = 4
_dwReserved$ = 16					; size = 4
_lpClass$ = 20						; size = 4
_dwOptions$ = 24					; size = 4
_samDesired$ = 28					; size = 4
_lpSecurityAttributes$ = 32				; size = 4
_phkResult$ = 36					; size = 4
_lpdwDisposition$ = 40					; size = 4
?RegCreateKeyExW@CAtlTransactionManager@ATL@@QAEJPAUHKEY__@@PB_WKPA_WKKQAU_SECURITY_ATTRIBUTES@@PAPAU3@PAK@Z PROC ; ATL::CAtlTransactionManager::RegCreateKeyExW, COMDAT
; _this$ = ecx

; 633  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 634  : 	if (m_hTransaction != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 38 00	 cmp	 DWORD PTR [eax], 0
  00025	0f 84 b0 00 00
	00		 je	 $LN2@RegCreateK

; 635  : 	{
; 636  : 		HMODULE hAdvAPI32 = ::GetModuleHandle(_T("Advapi32.dll"));

  0002b	8b f4		 mov	 esi, esp
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@BIGILECK@?$AAA?$AAd?$AAv?$AAa?$AAp?$AAi?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl@
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleW@4
  00038	3b f4		 cmp	 esi, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	89 45 f8	 mov	 DWORD PTR _hAdvAPI32$2[ebp], eax

; 637  : 		ATLASSERT(hAdvAPI32 != NULL);

  00042	83 7d f8 00	 cmp	 DWORD PTR _hAdvAPI32$2[ebp], 0
  00046	75 26		 jne	 SHORT $LN8@RegCreateK
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@KNMGNOCJ@?$AAh?$AAA?$AAd?$AAv?$AAA?$AAP?$AAI?$AA3?$AA2?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00052	6a 00		 push	 0
  00054	68 7d 02 00 00	 push	 637			; 0000027dH
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_1PO@GPALOAFP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0005e	6a 02		 push	 2
  00060	e8 00 00 00 00	 call	 __CrtDbgReportW
  00065	83 c4 18	 add	 esp, 24			; 00000018H
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 01		 jne	 SHORT $LN8@RegCreateK
  0006d	cc		 int	 3
$LN8@RegCreateK:

; 638  : 		if (hAdvAPI32 == NULL)

  0006e	83 7d f8 00	 cmp	 DWORD PTR _hAdvAPI32$2[ebp], 0
  00072	75 0a		 jne	 SHORT $LN4@RegCreateK

; 639  : 		{
; 640  : 			return ERROR_INVALID_FUNCTION;

  00074	b8 01 00 00 00	 mov	 eax, 1
  00079	e9 a0 00 00 00	 jmp	 $LN1@RegCreateK
$LN4@RegCreateK:

; 641  : 		}
; 642  : 
; 643  : #ifdef _UNICODE
; 644  : 		typedef LSTATUS (WINAPI* PFNREGCREATEKEYTRANSACTED)(HKEY, LPCWSTR, DWORD, LPWSTR, DWORD, REGSAM, CONST LPSECURITY_ATTRIBUTES, PHKEY, LPDWORD, HANDLE, PVOID);
; 645  : 		PFNREGCREATEKEYTRANSACTED pfRegCreateKeyTransacted = (PFNREGCREATEKEYTRANSACTED)GetProcAddress(hAdvAPI32, "RegCreateKeyTransactedW");

  0007e	8b f4		 mov	 esi, esp
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@MNCFCPFK@RegCreateKeyTransactedW@
  00085	8b 55 f8	 mov	 edx, DWORD PTR _hAdvAPI32$2[ebp]
  00088	52		 push	 edx
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0008f	3b f4		 cmp	 esi, esp
  00091	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00096	89 45 f4	 mov	 DWORD PTR _pfRegCreateKeyTransacted$1[ebp], eax

; 646  : #else
; 647  : 		typedef LSTATUS (WINAPI* PFNREGCREATEKEYTRANSACTED)(HKEY, LPCSTR, DWORD, LPSTR, DWORD, REGSAM, CONST LPSECURITY_ATTRIBUTES, PHKEY, LPDWORD, HANDLE, PVOID);
; 648  : 		PFNREGCREATEKEYTRANSACTED pfRegCreateKeyTransacted = (PFNREGCREATEKEYTRANSACTED)GetProcAddress(hAdvAPI32, "RegCreateKeyTransactedA");
; 649  : #endif
; 650  : 		if (pfRegCreateKeyTransacted != NULL)

  00099	83 7d f4 00	 cmp	 DWORD PTR _pfRegCreateKeyTransacted$1[ebp], 0
  0009d	74 3a		 je	 SHORT $LN5@RegCreateK

; 651  : 		{
; 652  : 			return (*pfRegCreateKeyTransacted)(hKey, lpSubKey, dwReserved, lpClass, dwOptions, samDesired, lpSecurityAttributes, phkResult, lpdwDisposition, m_hTransaction, NULL);

  0009f	8b f4		 mov	 esi, esp
  000a1	6a 00		 push	 0
  000a3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a8	51		 push	 ecx
  000a9	8b 55 28	 mov	 edx, DWORD PTR _lpdwDisposition$[ebp]
  000ac	52		 push	 edx
  000ad	8b 45 24	 mov	 eax, DWORD PTR _phkResult$[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 20	 mov	 ecx, DWORD PTR _lpSecurityAttributes$[ebp]
  000b4	51		 push	 ecx
  000b5	8b 55 1c	 mov	 edx, DWORD PTR _samDesired$[ebp]
  000b8	52		 push	 edx
  000b9	8b 45 18	 mov	 eax, DWORD PTR _dwOptions$[ebp]
  000bc	50		 push	 eax
  000bd	8b 4d 14	 mov	 ecx, DWORD PTR _lpClass$[ebp]
  000c0	51		 push	 ecx
  000c1	8b 55 10	 mov	 edx, DWORD PTR _dwReserved$[ebp]
  000c4	52		 push	 edx
  000c5	8b 45 0c	 mov	 eax, DWORD PTR _lpSubKey$[ebp]
  000c8	50		 push	 eax
  000c9	8b 4d 08	 mov	 ecx, DWORD PTR _hKey$[ebp]
  000cc	51		 push	 ecx
  000cd	ff 55 f4	 call	 DWORD PTR _pfRegCreateKeyTransacted$1[ebp]
  000d0	3b f4		 cmp	 esi, esp
  000d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d7	eb 45		 jmp	 SHORT $LN1@RegCreateK
$LN5@RegCreateK:

; 653  : 		}
; 654  : 	}

  000d9	eb 3e		 jmp	 SHORT $LN3@RegCreateK
$LN2@RegCreateK:

; 655  : 	else if (m_bFallback)

  000db	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000de	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  000e2	74 35		 je	 SHORT $LN3@RegCreateK

; 656  : 	{
; 657  : 		return ::RegCreateKeyEx(hKey, lpSubKey, dwReserved, lpClass, dwOptions, samDesired, lpSecurityAttributes, phkResult, lpdwDisposition);

  000e4	8b f4		 mov	 esi, esp
  000e6	8b 45 28	 mov	 eax, DWORD PTR _lpdwDisposition$[ebp]
  000e9	50		 push	 eax
  000ea	8b 4d 24	 mov	 ecx, DWORD PTR _phkResult$[ebp]
  000ed	51		 push	 ecx
  000ee	8b 55 20	 mov	 edx, DWORD PTR _lpSecurityAttributes$[ebp]
  000f1	52		 push	 edx
  000f2	8b 45 1c	 mov	 eax, DWORD PTR _samDesired$[ebp]
  000f5	50		 push	 eax
  000f6	8b 4d 18	 mov	 ecx, DWORD PTR _dwOptions$[ebp]
  000f9	51		 push	 ecx
  000fa	8b 55 14	 mov	 edx, DWORD PTR _lpClass$[ebp]
  000fd	52		 push	 edx
  000fe	8b 45 10	 mov	 eax, DWORD PTR _dwReserved$[ebp]
  00101	50		 push	 eax
  00102	8b 4d 0c	 mov	 ecx, DWORD PTR _lpSubKey$[ebp]
  00105	51		 push	 ecx
  00106	8b 55 08	 mov	 edx, DWORD PTR _hKey$[ebp]
  00109	52		 push	 edx
  0010a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCreateKeyExW@36
  00110	3b f4		 cmp	 esi, esp
  00112	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00117	eb 05		 jmp	 SHORT $LN1@RegCreateK
$LN3@RegCreateK:

; 658  : 	}
; 659  : 
; 660  : 	return ERROR_INVALID_FUNCTION;

  00119	b8 01 00 00 00	 mov	 eax, 1
$LN1@RegCreateK:

; 661  : }

  0011e	5e		 pop	 esi
  0011f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00122	3b ec		 cmp	 ebp, esp
  00124	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00129	8b e5		 mov	 esp, ebp
  0012b	5d		 pop	 ebp
  0012c	c2 24 00	 ret	 36			; 00000024H
?RegCreateKeyExW@CAtlTransactionManager@ATL@@QAEJPAUHKEY__@@PB_WKPA_WKKQAU_SECURITY_ATTRIBUTES@@PAPAU3@PAK@Z ENDP ; ATL::CAtlTransactionManager::RegCreateKeyExW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IRegistrarBase@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IRegistrarBase@@QAE@XZ PROC				; IRegistrarBase::IRegistrarBase, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0IUnknown@@QAE@XZ
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0IRegistrarBase@@QAE@XZ ENDP				; IRegistrarBase::IRegistrarBase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\um\unknwnbase.h
;	COMDAT ??$QueryInterface@UIPersistStream@@@IUnknown@@QAGJPAPAUIPersistStream@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pp$ = 12						; size = 4
??$QueryInterface@UIPersistStream@@@IUnknown@@QAGJPAPAUIPersistStream@@@Z PROC ; IUnknown::QueryInterface<IPersistStream>, COMDAT

; 129  :             {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 130  :                 return QueryInterface(__uuidof(Q), (void **)pp);

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR _pp$[ebp]
  00009	50		 push	 eax
  0000a	68 00 00 00 00	 push	 OFFSET __GUID_00000109_0000_0000_c000_000000000046
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 11		 mov	 edx, DWORD PTR [ecx]
  00014	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00017	50		 push	 eax
  00018	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0001a	ff d1		 call	 ecx
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 131  :             }

  00023	5e		 pop	 esi
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
??$QueryInterface@UIPersistStream@@@IUnknown@@QAGJPAPAUIPersistStream@@@Z ENDP ; IUnknown::QueryInterface<IPersistStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlAdd@_K@ATL@@YAJPA_K_K1@Z
_TEXT	SEGMENT
tv74 = -8						; size = 8
_ptResult$ = 8						; size = 4
_tLeft$ = 12						; size = 8
_tRight$ = 20						; size = 8
??$AtlAdd@_K@ATL@@YAJPA_K_K1@Z PROC			; ATL::AtlAdd<unsigned __int64>, COMDAT

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 85   : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00014	83 c8 ff	 or	 eax, -1
  00017	2b 45 0c	 sub	 eax, DWORD PTR _tLeft$[ebp]
  0001a	b9 ff ff ff ff	 mov	 ecx, -1
  0001f	1b 4d 10	 sbb	 ecx, DWORD PTR _tLeft$[ebp+4]
  00022	89 45 f8	 mov	 DWORD PTR tv74[ebp], eax
  00025	89 4d fc	 mov	 DWORD PTR tv74[ebp+4], ecx
  00028	8b 55 fc	 mov	 edx, DWORD PTR tv74[ebp+4]
  0002b	3b 55 18	 cmp	 edx, DWORD PTR _tRight$[ebp+4]
  0002e	77 19		 ja	 SHORT $LN2@AtlAdd
  00030	72 08		 jb	 SHORT $LN4@AtlAdd
  00032	8b 45 f8	 mov	 eax, DWORD PTR tv74[ebp]
  00035	3b 45 14	 cmp	 eax, DWORD PTR _tRight$[ebp]
  00038	73 0f		 jae	 SHORT $LN2@AtlAdd
$LN4@AtlAdd:

; 86   : 	{
; 87   : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  0003a	68 16 02 00 00	 push	 534			; 00000216H
  0003f	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00044	83 c4 04	 add	 esp, 4
  00047	eb 16		 jmp	 SHORT $LN1@AtlAdd
$LN2@AtlAdd:

; 88   : 	}
; 89   : 	*ptResult= tLeft + tRight;

  00049	8b 4d 0c	 mov	 ecx, DWORD PTR _tLeft$[ebp]
  0004c	03 4d 14	 add	 ecx, DWORD PTR _tRight$[ebp]
  0004f	8b 55 10	 mov	 edx, DWORD PTR _tLeft$[ebp+4]
  00052	13 55 18	 adc	 edx, DWORD PTR _tRight$[ebp+4]
  00055	8b 45 08	 mov	 eax, DWORD PTR _ptResult$[ebp]
  00058	89 08		 mov	 DWORD PTR [eax], ecx
  0005a	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 90   : 	return S_OK;

  0005d	33 c0		 xor	 eax, eax
$LN1@AtlAdd:

; 91   : }

  0005f	83 c4 08	 add	 esp, 8
  00062	3b ec		 cmp	 ebp, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
??$AtlAdd@_K@ATL@@YAJPA_K_K1@Z ENDP			; ATL::AtlAdd<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IPersistStream>::~CComPtr<IPersistStream>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIPersistStream@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IPersistStream>::~CComPtrBase<IPersistStream>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IPersistStream>::~CComPtr<IPersistStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IPersistStream>::CComPtr<IPersistStream>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIPersistStream@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IPersistStream>::CComPtrBase<IPersistStream>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IPersistStream>::CComPtr<IPersistStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?Detach@?$CComPtrBase@UIPersistStream@@@ATL@@QAEPAUIPersistStream@@XZ
_TEXT	SEGMENT
_pt$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@?$CComPtrBase@UIPersistStream@@@ATL@@QAEPAUIPersistStream@@XZ PROC ; ATL::CComPtrBase<IPersistStream>::Detach, COMDAT
; _this$ = ecx

; 254  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 255  :         T* pt = p;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 4d f8	 mov	 DWORD PTR _pt$[ebp], ecx

; 256  :         p = NULL;

  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 257  :         return pt;

  00028	8b 45 f8	 mov	 eax, DWORD PTR _pt$[ebp]

; 258  :     }

  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?Detach@?$CComPtrBase@UIPersistStream@@@ATL@@QAEPAUIPersistStream@@XZ ENDP ; ATL::CComPtrBase<IPersistStream>::Detach
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??8?$CComPtrBase@UIPersistStream@@@ATL@@QBE_NPAUIPersistStream@@@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIPersistStream@@@ATL@@QBE_NPAUIPersistStream@@@Z PROC ; ATL::CComPtrBase<IPersistStream>::operator==, COMDAT
; _this$ = ecx

; 222  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 223  :         return p == pT;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	3b 4d 08	 cmp	 ecx, DWORD PTR _pT$[ebp]
  0001f	75 09		 jne	 SHORT $LN3@operator
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@operator:
  00031	8a 45 f8	 mov	 al, BYTE PTR tv66[ebp]

; 224  :     }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??8?$CComPtrBase@UIPersistStream@@@ATL@@QBE_NPAUIPersistStream@@@Z ENDP ; ATL::CComPtrBase<IPersistStream>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??9?$CComPtrBase@UIPersistStream@@@ATL@@QBE_NPAUIPersistStream@@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??9?$CComPtrBase@UIPersistStream@@@ATL@@QBE_NPAUIPersistStream@@@Z PROC ; ATL::CComPtrBase<IPersistStream>::operator!=, COMDAT
; _this$ = ecx

; 217  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  :         return !operator==(pT);

  00017	8b 45 08	 mov	 eax, DWORD PTR _pT$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIPersistStream@@@ATL@@QBE_NPAUIPersistStream@@@Z ; ATL::CComPtrBase<IPersistStream>::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]

; 219  :     }

  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$CComPtrBase@UIPersistStream@@@ATL@@QBE_NPAUIPersistStream@@@Z ENDP ; ATL::CComPtrBase<IPersistStream>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStream@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStream@@@1@XZ PROC ; ATL::CComPtrBase<IPersistStream>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStream@@@1@XZ ENDP ; ATL::CComPtrBase<IPersistStream>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ PROC ; ATL::CComPtrBase<IPersistStream>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ ENDP ; ATL::CComPtrBase<IPersistStream>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ PROC ; ATL::CComPtrBase<IPersistStream>::operator IPersistStream *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ ENDP ; ATL::CComPtrBase<IPersistStream>::operator IPersistStream *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIPersistStream@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IPersistStream>::~CComPtrBase<IPersistStream>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIPersistStream@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IPersistStream>::~CComPtrBase<IPersistStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIPersistStream@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIPersistStream@@@ATL@@IAE@XZ PROC	; ATL::CComPtrBase<IPersistStream>::CComPtrBase<IPersistStream>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIPersistStream@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IPersistStream>::CComPtrBase<IPersistStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?GetSizeMax@CComVariant@ATL@@QBEJPAT_ULARGE_INTEGER@@@Z
_TEXT	SEGMENT
tv195 = -92						; size = 4
tv81 = -88						; size = 4
_varBSTR$1 = -80					; size = 16
_bstr$2 = -60						; size = 4
_vtTmp$3 = -56						; size = 2
_nPersistSize$4 = -48					; size = 8
_spStream$5 = -32					; size = 4
_nSize$ = -20						; size = 8
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pcbSize$ = 8						; size = 4
?GetSizeMax@CComVariant@ATL@@QBEJPAT_ULARGE_INTEGER@@@Z PROC ; ATL::CComVariant::GetSizeMax, COMDAT
; _this$ = ecx

; 3226 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d a4	 lea	 edi, DWORD PTR [ebp-92]
  0000c	b9 17 00 00 00	 mov	 ecx, 23			; 00000017H
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3227 :     ATLASSERT(pcbSize != NULL);

  0001c	83 7d 08 00	 cmp	 DWORD PTR _pcbSize$[ebp], 0
  00020	75 26		 jne	 SHORT $LN22@GetSizeMax
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@EKMOGOFM@?$AAp?$AAc?$AAb?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0002c	6a 00		 push	 0
  0002e	68 9b 0c 00 00	 push	 3227			; 00000c9bH
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00038	6a 02		 push	 2
  0003a	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003f	83 c4 18	 add	 esp, 24			; 00000018H
  00042	83 f8 01	 cmp	 eax, 1
  00045	75 01		 jne	 SHORT $LN22@GetSizeMax
  00047	cc		 int	 3
$LN22@GetSizeMax:

; 3228 :     if (pcbSize == NULL)

  00048	83 7d 08 00	 cmp	 DWORD PTR _pcbSize$[ebp], 0
  0004c	75 0a		 jne	 SHORT $LN4@GetSizeMax

; 3229 :     {
; 3230 :         return E_INVALIDARG;

  0004e	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00053	e9 53 02 00 00	 jmp	 $LN1@GetSizeMax
$LN4@GetSizeMax:

; 3231 :     }
; 3232 : 
; 3233 :     HRESULT hr = S_OK;

  00058	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 3234 :     ULARGE_INTEGER nSize;
; 3235 :     nSize.QuadPart = sizeof(VARTYPE);

  0005f	33 c9		 xor	 ecx, ecx
  00061	c7 45 ec 02 00
	00 00		 mov	 DWORD PTR _nSize$[ebp], 2
  00068	89 4d f0	 mov	 DWORD PTR _nSize$[ebp+4], ecx

; 3236 : 
; 3237 :     switch (vt)

  0006b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006e	0f b7 02	 movzx	 eax, WORD PTR [edx]
  00071	89 45 a8	 mov	 DWORD PTR tv81[ebp], eax
  00074	8b 4d a8	 mov	 ecx, DWORD PTR tv81[ebp]
  00077	83 e9 02	 sub	 ecx, 2
  0007a	89 4d a8	 mov	 DWORD PTR tv81[ebp], ecx
  0007d	83 7d a8 15	 cmp	 DWORD PTR tv81[ebp], 21	; 00000015H
  00081	0f 87 82 01 00
	00		 ja	 $LN15@GetSizeMax
  00087	8b 55 a8	 mov	 edx, DWORD PTR tv81[ebp]
  0008a	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN24@GetSizeMax[edx]
  00091	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN25@GetSizeMax[eax*4]
$LN5@GetSizeMax:

; 3238 :     {
; 3239 :     case VT_UNKNOWN:
; 3240 :     case VT_DISPATCH:
; 3241 :         {
; 3242 :             nSize.LowPart += sizeof(CLSID);

  00098	8b 4d ec	 mov	 ecx, DWORD PTR _nSize$[ebp]
  0009b	83 c1 10	 add	 ecx, 16			; 00000010H
  0009e	89 4d ec	 mov	 DWORD PTR _nSize$[ebp], ecx

; 3243 : 
; 3244 :             if (punkVal != NULL)

  000a1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a4	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  000a8	0f 84 10 01 00
	00		 je	 $LN6@GetSizeMax

; 3245 :             {
; 3246 :                 CComPtr<IPersistStream> spStream;

  000ae	8d 4d e0	 lea	 ecx, DWORD PTR _spStream$5[ebp]
  000b1	e8 00 00 00 00	 call	 ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ ; ATL::CComPtr<IPersistStream>::CComPtr<IPersistStream>

; 3247 : 
; 3248 :                 hr = punkVal->QueryInterface(__uuidof(IPersistStream), (void**)&spStream);

  000b6	8d 4d e0	 lea	 ecx, DWORD PTR _spStream$5[ebp]
  000b9	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ ; ATL::CComPtrBase<IPersistStream>::operator&
  000be	8b f4		 mov	 esi, esp
  000c0	50		 push	 eax
  000c1	68 00 00 00 00	 push	 OFFSET __GUID_00000109_0000_0000_c000_000000000046
  000c6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000cc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000cf	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000d2	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000d4	50		 push	 eax
  000d5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d7	ff d2		 call	 edx
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3249 :                 if (FAILED(hr))

  000e3	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000e7	7d 40		 jge	 SHORT $LN7@GetSizeMax

; 3250 :                 {
; 3251 :                     hr = punkVal->QueryInterface(__uuidof(IPersistStreamInit), (void**)&spStream);

  000e9	8d 4d e0	 lea	 ecx, DWORD PTR _spStream$5[ebp]
  000ec	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ ; ATL::CComPtrBase<IPersistStream>::operator&
  000f1	8b f4		 mov	 esi, esp
  000f3	50		 push	 eax
  000f4	68 00 00 00 00	 push	 OFFSET __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
  000f9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fc	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ff	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00102	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00105	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00107	50		 push	 eax
  00108	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010a	ff d2		 call	 edx
  0010c	3b f4		 cmp	 esi, esp
  0010e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00113	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3252 :                     if (FAILED(hr))

  00116	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0011a	7d 0d		 jge	 SHORT $LN7@GetSizeMax

; 3253 :                     {
; 3254 :                         break;

  0011c	8d 4d e0	 lea	 ecx, DWORD PTR _spStream$5[ebp]
  0011f	e8 00 00 00 00	 call	 ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
  00124	e9 6b 01 00 00	 jmp	 $LN2@GetSizeMax
$LN7@GetSizeMax:

; 3255 :                     }
; 3256 :                 }
; 3257 : 
; 3258 :                 ULARGE_INTEGER nPersistSize;
; 3259 :                 nPersistSize.QuadPart = 0;

  00129	0f 57 c0	 xorps	 xmm0, xmm0
  0012c	66 0f 13 45 d0	 movlpd	 QWORD PTR _nPersistSize$4[ebp], xmm0

; 3260 : 
; 3261 :                 ATLASSERT(spStream != NULL);

  00131	6a 00		 push	 0
  00133	8d 4d e0	 lea	 ecx, DWORD PTR _spStream$5[ebp]
  00136	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIPersistStream@@@ATL@@QBE_NPAUIPersistStream@@@Z ; ATL::CComPtrBase<IPersistStream>::operator!=
  0013b	0f b6 c0	 movzx	 eax, al
  0013e	85 c0		 test	 eax, eax
  00140	75 26		 jne	 SHORT $LN23@GetSizeMax
  00142	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@JBGPBNEE@?$AAs?$AAp?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00147	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0014c	6a 00		 push	 0
  0014e	68 bd 0c 00 00	 push	 3261			; 00000cbdH
  00153	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00158	6a 02		 push	 2
  0015a	e8 00 00 00 00	 call	 __CrtDbgReportW
  0015f	83 c4 18	 add	 esp, 24			; 00000018H
  00162	83 f8 01	 cmp	 eax, 1
  00165	75 01		 jne	 SHORT $LN23@GetSizeMax
  00167	cc		 int	 3
$LN23@GetSizeMax:

; 3262 :                 hr = spStream->GetSizeMax(&nPersistSize);

  00168	8d 4d e0	 lea	 ecx, DWORD PTR _spStream$5[ebp]
  0016b	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStream@@@1@XZ ; ATL::CComPtrBase<IPersistStream>::operator->
  00170	89 45 a4	 mov	 DWORD PTR tv195[ebp], eax
  00173	8b f4		 mov	 esi, esp
  00175	8d 55 d0	 lea	 edx, DWORD PTR _nPersistSize$4[ebp]
  00178	52		 push	 edx
  00179	8b 45 a4	 mov	 eax, DWORD PTR tv195[ebp]
  0017c	50		 push	 eax
  0017d	8b 4d a4	 mov	 ecx, DWORD PTR tv195[ebp]
  00180	8b 11		 mov	 edx, DWORD PTR [ecx]
  00182	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00185	ff d0		 call	 eax
  00187	3b f4		 cmp	 esi, esp
  00189	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018e	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3263 :                 if (SUCCEEDED(hr))

  00191	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00195	7c 1f		 jl	 SHORT $LN9@GetSizeMax

; 3264 :                 {
; 3265 :                     hr = AtlAdd(&nSize.QuadPart, nSize.QuadPart, nPersistSize.QuadPart);

  00197	8b 4d d4	 mov	 ecx, DWORD PTR _nPersistSize$4[ebp+4]
  0019a	51		 push	 ecx
  0019b	8b 55 d0	 mov	 edx, DWORD PTR _nPersistSize$4[ebp]
  0019e	52		 push	 edx
  0019f	8b 45 f0	 mov	 eax, DWORD PTR _nSize$[ebp+4]
  001a2	50		 push	 eax
  001a3	8b 4d ec	 mov	 ecx, DWORD PTR _nSize$[ebp]
  001a6	51		 push	 ecx
  001a7	8d 55 ec	 lea	 edx, DWORD PTR _nSize$[ebp]
  001aa	52		 push	 edx
  001ab	e8 00 00 00 00	 call	 ??$AtlAdd@_K@ATL@@YAJPA_K_K1@Z ; ATL::AtlAdd<unsigned __int64>
  001b0	83 c4 14	 add	 esp, 20			; 00000014H
  001b3	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN9@GetSizeMax:

; 3266 :                 }
; 3267 :             }

  001b6	8d 4d e0	 lea	 ecx, DWORD PTR _spStream$5[ebp]
  001b9	e8 00 00 00 00	 call	 ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
$LN6@GetSizeMax:

; 3268 :         }
; 3269 :         break;

  001be	e9 d1 00 00 00	 jmp	 $LN2@GetSizeMax
$LN10@GetSizeMax:

; 3270 :     case VT_UI1:
; 3271 :     case VT_I1:
; 3272 :         nSize.LowPart += sizeof(BYTE);

  001c3	8b 45 ec	 mov	 eax, DWORD PTR _nSize$[ebp]
  001c6	83 c0 01	 add	 eax, 1
  001c9	89 45 ec	 mov	 DWORD PTR _nSize$[ebp], eax

; 3273 :         break;

  001cc	e9 c3 00 00 00	 jmp	 $LN2@GetSizeMax
$LN11@GetSizeMax:

; 3274 :     case VT_I2:
; 3275 :     case VT_UI2:
; 3276 :     case VT_BOOL:
; 3277 :         nSize.LowPart += sizeof(short);

  001d1	8b 4d ec	 mov	 ecx, DWORD PTR _nSize$[ebp]
  001d4	83 c1 02	 add	 ecx, 2
  001d7	89 4d ec	 mov	 DWORD PTR _nSize$[ebp], ecx

; 3278 :         break;

  001da	e9 b5 00 00 00	 jmp	 $LN2@GetSizeMax
$LN12@GetSizeMax:

; 3279 :     case VT_I4:
; 3280 :     case VT_UI4:
; 3281 :     case VT_R4:
; 3282 :     case VT_INT:
; 3283 :     case VT_UINT:
; 3284 :     case VT_ERROR:
; 3285 :         nSize.LowPart += sizeof(long);

  001df	8b 55 ec	 mov	 edx, DWORD PTR _nSize$[ebp]
  001e2	83 c2 04	 add	 edx, 4
  001e5	89 55 ec	 mov	 DWORD PTR _nSize$[ebp], edx

; 3286 :         break;

  001e8	e9 a7 00 00 00	 jmp	 $LN2@GetSizeMax
$LN13@GetSizeMax:

; 3287 :     case VT_I8:
; 3288 :     case VT_UI8:
; 3289 :         nSize.LowPart += sizeof(LONGLONG);

  001ed	8b 45 ec	 mov	 eax, DWORD PTR _nSize$[ebp]
  001f0	83 c0 08	 add	 eax, 8
  001f3	89 45 ec	 mov	 DWORD PTR _nSize$[ebp], eax

; 3290 :         break;

  001f6	e9 99 00 00 00	 jmp	 $LN2@GetSizeMax
$LN14@GetSizeMax:

; 3291 :     case VT_R8:
; 3292 :     case VT_CY:
; 3293 :     case VT_DATE:
; 3294 :         nSize.LowPart += sizeof(double);

  001fb	8b 4d ec	 mov	 ecx, DWORD PTR _nSize$[ebp]
  001fe	83 c1 08	 add	 ecx, 8
  00201	89 4d ec	 mov	 DWORD PTR _nSize$[ebp], ecx

; 3295 :         break;

  00204	e9 8b 00 00 00	 jmp	 $LN2@GetSizeMax
$LN15@GetSizeMax:

; 3296 :     default:
; 3297 :         {
; 3298 :             VARTYPE vtTmp = vt;

  00209	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0020c	66 8b 02	 mov	 ax, WORD PTR [edx]
  0020f	66 89 45 c8	 mov	 WORD PTR _vtTmp$3[ebp], ax

; 3299 :             BSTR bstr = NULL;

  00213	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _bstr$2[ebp], 0

; 3300 :             CComVariant varBSTR;

  0021a	8d 4d b0	 lea	 ecx, DWORD PTR _varBSTR$1[ebp]
  0021d	e8 00 00 00 00	 call	 ??0CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::CComVariant

; 3301 :             if (vtTmp != VT_BSTR)

  00222	0f b7 4d c8	 movzx	 ecx, WORD PTR _vtTmp$3[ebp]
  00226	83 f9 08	 cmp	 ecx, 8
  00229	74 35		 je	 SHORT $LN16@GetSizeMax

; 3302 :             {
; 3303 :                 hr = VariantChangeType(&varBSTR, const_cast<VARIANT*>((const VARIANT*)this), VARIANT_NOVALUEPROP, VT_BSTR);

  0022b	8b f4		 mov	 esi, esp
  0022d	6a 08		 push	 8
  0022f	6a 01		 push	 1
  00231	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00234	52		 push	 edx
  00235	8d 45 b0	 lea	 eax, DWORD PTR _varBSTR$1[ebp]
  00238	50		 push	 eax
  00239	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantChangeType@16
  0023f	3b f4		 cmp	 esi, esp
  00241	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00246	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3304 :                 if (SUCCEEDED(hr))

  00249	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0024d	7c 0f		 jl	 SHORT $LN18@GetSizeMax

; 3305 :                 {
; 3306 :                     bstr = varBSTR.bstrVal;

  0024f	8b 4d b8	 mov	 ecx, DWORD PTR _varBSTR$1[ebp+8]
  00252	89 4d c4	 mov	 DWORD PTR _bstr$2[ebp], ecx

; 3307 :                     vtTmp = VT_BSTR;

  00255	ba 08 00 00 00	 mov	 edx, 8
  0025a	66 89 55 c8	 mov	 WORD PTR _vtTmp$3[ebp], dx
$LN18@GetSizeMax:

; 3308 :                 }
; 3309 :             }

  0025e	eb 09		 jmp	 SHORT $LN17@GetSizeMax
$LN16@GetSizeMax:

; 3310 :             else
; 3311 :             {
; 3312 :                 bstr = bstrVal;

  00260	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00263	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00266	89 4d c4	 mov	 DWORD PTR _bstr$2[ebp], ecx
$LN17@GetSizeMax:

; 3313 :             }
; 3314 : 
; 3315 :             if (vtTmp == VT_BSTR)

  00269	0f b7 55 c8	 movzx	 edx, WORD PTR _vtTmp$3[ebp]
  0026d	83 fa 08	 cmp	 edx, 8
  00270	75 1a		 jne	 SHORT $LN19@GetSizeMax

; 3316 :             {
; 3317 :                 // Add the size of the length + string (in bytes) + NULL terminator.
; 3318 :                 nSize.QuadPart += CComBSTR::GetStreamSize(bstr);

  00272	8b 45 c4	 mov	 eax, DWORD PTR _bstr$2[ebp]
  00275	50		 push	 eax
  00276	e8 00 00 00 00	 call	 ?GetStreamSize@CComBSTR@ATL@@SAKPA_W@Z ; ATL::CComBSTR::GetStreamSize
  0027b	83 c4 04	 add	 esp, 4
  0027e	33 c9		 xor	 ecx, ecx
  00280	03 45 ec	 add	 eax, DWORD PTR _nSize$[ebp]
  00283	13 4d f0	 adc	 ecx, DWORD PTR _nSize$[ebp+4]
  00286	89 45 ec	 mov	 DWORD PTR _nSize$[ebp], eax
  00289	89 4d f0	 mov	 DWORD PTR _nSize$[ebp+4], ecx
$LN19@GetSizeMax:

; 3319 :             }
; 3320 :         }

  0028c	8d 4d b0	 lea	 ecx, DWORD PTR _varBSTR$1[ebp]
  0028f	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
$LN2@GetSizeMax:

; 3321 :     }
; 3322 : 
; 3323 :     if (SUCCEEDED(hr))

  00294	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00298	7c 0e		 jl	 SHORT $LN20@GetSizeMax

; 3324 :     {
; 3325 :         pcbSize->QuadPart = nSize.QuadPart;

  0029a	8b 55 08	 mov	 edx, DWORD PTR _pcbSize$[ebp]
  0029d	8b 45 ec	 mov	 eax, DWORD PTR _nSize$[ebp]
  002a0	8b 4d f0	 mov	 ecx, DWORD PTR _nSize$[ebp+4]
  002a3	89 02		 mov	 DWORD PTR [edx], eax
  002a5	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$LN20@GetSizeMax:

; 3326 :     }
; 3327 : 
; 3328 :     return hr;

  002a8	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
$LN1@GetSizeMax:

; 3329 : }

  002ab	52		 push	 edx
  002ac	8b cd		 mov	 ecx, ebp
  002ae	50		 push	 eax
  002af	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN31@GetSizeMax
  002b5	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  002ba	58		 pop	 eax
  002bb	5a		 pop	 edx
  002bc	5f		 pop	 edi
  002bd	5e		 pop	 esi
  002be	83 c4 5c	 add	 esp, 92			; 0000005cH
  002c1	3b ec		 cmp	 ebp, esp
  002c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002c8	8b e5		 mov	 esp, ebp
  002ca	5d		 pop	 ebp
  002cb	c2 04 00	 ret	 4
  002ce	66 90		 npad	 2
$LN31@GetSizeMax:
  002d0	04 00 00 00	 DD	 4
  002d4	00 00 00 00	 DD	 $LN30@GetSizeMax
$LN30@GetSizeMax:
  002d8	ec ff ff ff	 DD	 -20			; ffffffecH
  002dc	08 00 00 00	 DD	 8
  002e0	00 00 00 00	 DD	 $LN26@GetSizeMax
  002e4	e0 ff ff ff	 DD	 -32			; ffffffe0H
  002e8	04 00 00 00	 DD	 4
  002ec	00 00 00 00	 DD	 $LN27@GetSizeMax
  002f0	d0 ff ff ff	 DD	 -48			; ffffffd0H
  002f4	08 00 00 00	 DD	 8
  002f8	00 00 00 00	 DD	 $LN28@GetSizeMax
  002fc	b0 ff ff ff	 DD	 -80			; ffffffb0H
  00300	10 00 00 00	 DD	 16			; 00000010H
  00304	00 00 00 00	 DD	 $LN29@GetSizeMax
$LN29@GetSizeMax:
  00308	76		 DB	 118			; 00000076H
  00309	61		 DB	 97			; 00000061H
  0030a	72		 DB	 114			; 00000072H
  0030b	42		 DB	 66			; 00000042H
  0030c	53		 DB	 83			; 00000053H
  0030d	54		 DB	 84			; 00000054H
  0030e	52		 DB	 82			; 00000052H
  0030f	00		 DB	 0
$LN28@GetSizeMax:
  00310	6e		 DB	 110			; 0000006eH
  00311	50		 DB	 80			; 00000050H
  00312	65		 DB	 101			; 00000065H
  00313	72		 DB	 114			; 00000072H
  00314	73		 DB	 115			; 00000073H
  00315	69		 DB	 105			; 00000069H
  00316	73		 DB	 115			; 00000073H
  00317	74		 DB	 116			; 00000074H
  00318	53		 DB	 83			; 00000053H
  00319	69		 DB	 105			; 00000069H
  0031a	7a		 DB	 122			; 0000007aH
  0031b	65		 DB	 101			; 00000065H
  0031c	00		 DB	 0
$LN27@GetSizeMax:
  0031d	73		 DB	 115			; 00000073H
  0031e	70		 DB	 112			; 00000070H
  0031f	53		 DB	 83			; 00000053H
  00320	74		 DB	 116			; 00000074H
  00321	72		 DB	 114			; 00000072H
  00322	65		 DB	 101			; 00000065H
  00323	61		 DB	 97			; 00000061H
  00324	6d		 DB	 109			; 0000006dH
  00325	00		 DB	 0
$LN26@GetSizeMax:
  00326	6e		 DB	 110			; 0000006eH
  00327	53		 DB	 83			; 00000053H
  00328	69		 DB	 105			; 00000069H
  00329	7a		 DB	 122			; 0000007aH
  0032a	65		 DB	 101			; 00000065H
  0032b	00		 DB	 0
$LN25@GetSizeMax:
  0032c	00 00 00 00	 DD	 $LN11@GetSizeMax
  00330	00 00 00 00	 DD	 $LN12@GetSizeMax
  00334	00 00 00 00	 DD	 $LN14@GetSizeMax
  00338	00 00 00 00	 DD	 $LN5@GetSizeMax
  0033c	00 00 00 00	 DD	 $LN10@GetSizeMax
  00340	00 00 00 00	 DD	 $LN13@GetSizeMax
  00344	00 00 00 00	 DD	 $LN15@GetSizeMax
$LN24@GetSizeMax:
  00348	00		 DB	 0
  00349	01		 DB	 1
  0034a	01		 DB	 1
  0034b	02		 DB	 2
  0034c	02		 DB	 2
  0034d	02		 DB	 2
  0034e	06		 DB	 6
  0034f	03		 DB	 3
  00350	01		 DB	 1
  00351	00		 DB	 0
  00352	06		 DB	 6
  00353	03		 DB	 3
  00354	06		 DB	 6
  00355	06		 DB	 6
  00356	04		 DB	 4
  00357	04		 DB	 4
  00358	00		 DB	 0
  00359	01		 DB	 1
  0035a	05		 DB	 5
  0035b	05		 DB	 5
  0035c	01		 DB	 1
  0035d	01		 DB	 1
?GetSizeMax@CComVariant@ATL@@QBEJPAT_ULARGE_INTEGER@@@Z ENDP ; ATL::CComVariant::GetSizeMax
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?ReadFromStream@CComVariant@ATL@@QAEJPAUIStream@@GTClassesAllowedInStream@2@K@Z
_TEXT	SEGMENT
tv157 = -80						; size = 4
tv140 = -76						; size = 4
$T1 = -72						; size = 4
$T2 = -68						; size = 4
$T3 = -64						; size = 4
_nOffset$4 = -56					; size = 8
_bstrRead$ = -40					; size = 4
_cbRead$ = -28						; size = 4
_vtRead$ = -16						; size = 2
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pStream$ = 8						; size = 4
_vtExpected$ = 12					; size = 2
_rgclsidAllowed$ = 16					; size = 4
_cclsidAllowed$ = 20					; size = 4
?ReadFromStream@CComVariant@ATL@@QAEJPAUIStream@@GTClassesAllowedInStream@2@K@Z PROC ; ATL::CComVariant::ReadFromStream, COMDAT
; _this$ = ecx

; 3130 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d b0	 lea	 edi, DWORD PTR [ebp-80]
  0000c	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3131 :     ATLASSERT(pStream != NULL);

  0001c	83 7d 08 00	 cmp	 DWORD PTR _pStream$[ebp], 0
  00020	75 26		 jne	 SHORT $LN23@ReadFromSt
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@PMLCOGII@?$AAp?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0002c	6a 00		 push	 0
  0002e	68 3b 0c 00 00	 push	 3131			; 00000c3bH
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00038	6a 02		 push	 2
  0003a	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003f	83 c4 18	 add	 esp, 24			; 00000018H
  00042	83 f8 01	 cmp	 eax, 1
  00045	75 01		 jne	 SHORT $LN23@ReadFromSt
  00047	cc		 int	 3
$LN23@ReadFromSt:

; 3132 :     if(pStream == NULL)

  00048	83 7d 08 00	 cmp	 DWORD PTR _pStream$[ebp], 0
  0004c	75 0a		 jne	 SHORT $LN4@ReadFromSt

; 3133 :         return E_INVALIDARG;

  0004e	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00053	e9 53 02 00 00	 jmp	 $LN1@ReadFromSt
$LN4@ReadFromSt:

; 3134 : 
; 3135 :     HRESULT hr;
; 3136 :     hr = VariantClear(this);

  00058	8b f4		 mov	 esi, esp
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	51		 push	 ecx
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
  00064	3b f4		 cmp	 esi, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3137 :     if (FAILED(hr))

  0006e	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00072	7d 08		 jge	 SHORT $LN5@ReadFromSt

; 3138 :         return hr;

  00074	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  00077	e9 2f 02 00 00	 jmp	 $LN1@ReadFromSt
$LN5@ReadFromSt:

; 3139 :     VARTYPE vtRead = VT_EMPTY;

  0007c	33 d2		 xor	 edx, edx
  0007e	66 89 55 f0	 mov	 WORD PTR _vtRead$[ebp], dx

; 3140 :     ULONG cbRead = 0;

  00082	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cbRead$[ebp], 0

; 3141 : 
; 3142 :     hr = pStream->Read(&vtRead, sizeof(VARTYPE), &cbRead);

  00089	8b f4		 mov	 esi, esp
  0008b	8d 45 e4	 lea	 eax, DWORD PTR _cbRead$[ebp]
  0008e	50		 push	 eax
  0008f	6a 02		 push	 2
  00091	8d 4d f0	 lea	 ecx, DWORD PTR _vtRead$[ebp]
  00094	51		 push	 ecx
  00095	8b 55 08	 mov	 edx, DWORD PTR _pStream$[ebp]
  00098	8b 02		 mov	 eax, DWORD PTR [edx]
  0009a	8b 4d 08	 mov	 ecx, DWORD PTR _pStream$[ebp]
  0009d	51		 push	 ecx
  0009e	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000a1	ff d2		 call	 edx
  000a3	3b f4		 cmp	 esi, esp
  000a5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000aa	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3143 : ATLPREFAST_SUPPRESS(6102)
; 3144 :     if (hr == S_FALSE || (cbRead != sizeof(VARTYPE) && hr == S_OK))

  000ad	83 7d f8 01	 cmp	 DWORD PTR _hr$[ebp], 1
  000b1	74 0c		 je	 SHORT $LN7@ReadFromSt
  000b3	83 7d e4 02	 cmp	 DWORD PTR _cbRead$[ebp], 2
  000b7	74 0d		 je	 SHORT $LN6@ReadFromSt
  000b9	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000bd	75 07		 jne	 SHORT $LN6@ReadFromSt
$LN7@ReadFromSt:

; 3145 :         hr = E_FAIL;

  000bf	c7 45 f8 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H
$LN6@ReadFromSt:

; 3146 : ATLPREFAST_UNSUPPRESS()
; 3147 :     if (FAILED(hr))

  000c6	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000ca	7d 08		 jge	 SHORT $LN8@ReadFromSt

; 3148 :         return hr;

  000cc	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  000cf	e9 d7 01 00 00	 jmp	 $LN1@ReadFromSt
$LN8@ReadFromSt:

; 3149 :     if (vtExpected != VT_EMPTY && vtRead != vtExpected)

  000d4	0f b7 45 0c	 movzx	 eax, WORD PTR _vtExpected$[ebp]
  000d8	85 c0		 test	 eax, eax
  000da	74 16		 je	 SHORT $LN9@ReadFromSt
  000dc	0f b7 4d f0	 movzx	 ecx, WORD PTR _vtRead$[ebp]
  000e0	0f b7 55 0c	 movzx	 edx, WORD PTR _vtExpected$[ebp]
  000e4	3b ca		 cmp	 ecx, edx
  000e6	74 0a		 je	 SHORT $LN9@ReadFromSt

; 3150 :         return E_FAIL;

  000e8	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  000ed	e9 b9 01 00 00	 jmp	 $LN1@ReadFromSt
$LN9@ReadFromSt:

; 3151 : 
; 3152 :     vt = vtRead;

  000f2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f5	66 8b 4d f0	 mov	 cx, WORD PTR _vtRead$[ebp]
  000f9	66 89 08	 mov	 WORD PTR [eax], cx

; 3153 :     cbRead = 0;

  000fc	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cbRead$[ebp], 0

; 3154 :     switch (vtRead)

  00103	0f b7 55 f0	 movzx	 edx, WORD PTR _vtRead$[ebp]
  00107	89 55 b4	 mov	 DWORD PTR tv140[ebp], edx
  0010a	8b 45 b4	 mov	 eax, DWORD PTR tv140[ebp]
  0010d	83 e8 02	 sub	 eax, 2
  00110	89 45 b4	 mov	 DWORD PTR tv140[ebp], eax
  00113	83 7d b4 15	 cmp	 DWORD PTR tv140[ebp], 21 ; 00000015H
  00117	0f 87 9f 00 00
	00		 ja	 $LN2@ReadFromSt
  0011d	8b 4d b4	 mov	 ecx, DWORD PTR tv140[ebp]
  00120	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN26@ReadFromSt[ecx]
  00127	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN27@ReadFromSt[edx*4]
$LN10@ReadFromSt:

; 3155 :     {
; 3156 :     case VT_UNKNOWN:
; 3157 :     case VT_DISPATCH:
; 3158 :         {
; 3159 :             punkVal = NULL;

  0012e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00131	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 3160 :             hr = AtlInternalOleLoadFromStream(pStream,

  00138	0f b7 4d f0	 movzx	 ecx, WORD PTR _vtRead$[ebp]
  0013c	83 f9 0d	 cmp	 ecx, 13			; 0000000dH
  0013f	75 09		 jne	 SHORT $LN24@ReadFromSt
  00141	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv157[ebp], OFFSET __GUID_00000000_0000_0000_c000_000000000046
  00148	eb 07		 jmp	 SHORT $LN25@ReadFromSt
$LN24@ReadFromSt:
  0014a	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv157[ebp], OFFSET __GUID_00020400_0000_0000_c000_000000000046
$LN25@ReadFromSt:
  00151	8b 55 b0	 mov	 edx, DWORD PTR tv157[ebp]
  00154	89 55 c0	 mov	 DWORD PTR $T3[ebp], edx
  00157	8b 45 14	 mov	 eax, DWORD PTR _cclsidAllowed$[ebp]
  0015a	50		 push	 eax
  0015b	8b 4d 10	 mov	 ecx, DWORD PTR _rgclsidAllowed$[ebp]
  0015e	51		 push	 ecx
  0015f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00162	83 c2 08	 add	 edx, 8
  00165	52		 push	 edx
  00166	8b 45 c0	 mov	 eax, DWORD PTR $T3[ebp]
  00169	50		 push	 eax
  0016a	8b 4d 08	 mov	 ecx, DWORD PTR _pStream$[ebp]
  0016d	51		 push	 ecx
  0016e	e8 00 00 00 00	 call	 ?AtlInternalOleLoadFromStream@ATL@@YAJPAUIStream@@ABU_GUID@@PAPAXTClassesAllowedInStream@1@K@Z ; ATL::AtlInternalOleLoadFromStream
  00173	83 c4 14	 add	 esp, 20			; 00000014H
  00176	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3161 :                 (vtRead == VT_UNKNOWN) ? __uuidof(IUnknown) : __uuidof(IDispatch),
; 3162 :                 (void**)&punkVal, rgclsidAllowed, cclsidAllowed);
; 3163 :             // If IPictureDisp or IFontDisp property is not set,
; 3164 :             // OleLoadFromStream() will return REGDB_E_CLASSNOTREG.
; 3165 :             if (hr == REGDB_E_CLASSNOTREG)

  00179	81 7d f8 54 01
	04 80		 cmp	 DWORD PTR _hr$[ebp], -2147221164 ; 80040154H
  00180	75 07		 jne	 SHORT $LN11@ReadFromSt

; 3166 :                 hr = S_OK;

  00182	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
$LN11@ReadFromSt:

; 3167 :             return hr;

  00189	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  0018c	e9 1a 01 00 00	 jmp	 $LN1@ReadFromSt
$LN12@ReadFromSt:

; 3168 :         }
; 3169 :     case VT_UI1:
; 3170 :     case VT_I1:
; 3171 :         cbRead = sizeof(BYTE);

  00191	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR _cbRead$[ebp], 1

; 3172 :         break;

  00198	eb 22		 jmp	 SHORT $LN2@ReadFromSt
$LN13@ReadFromSt:

; 3173 :     case VT_I2:
; 3174 :     case VT_UI2:
; 3175 :     case VT_BOOL:
; 3176 :         cbRead = sizeof(short);

  0019a	c7 45 e4 02 00
	00 00		 mov	 DWORD PTR _cbRead$[ebp], 2

; 3177 :         break;

  001a1	eb 19		 jmp	 SHORT $LN2@ReadFromSt
$LN14@ReadFromSt:

; 3178 :     case VT_I4:
; 3179 :     case VT_UI4:
; 3180 :     case VT_R4:
; 3181 :     case VT_INT:
; 3182 :     case VT_UINT:
; 3183 :     case VT_ERROR:
; 3184 :         cbRead = sizeof(long);

  001a3	c7 45 e4 04 00
	00 00		 mov	 DWORD PTR _cbRead$[ebp], 4

; 3185 :         break;

  001aa	eb 10		 jmp	 SHORT $LN2@ReadFromSt
$LN15@ReadFromSt:

; 3186 :     case VT_I8:
; 3187 :     case VT_UI8:
; 3188 :         cbRead = sizeof(LONGLONG);

  001ac	c7 45 e4 08 00
	00 00		 mov	 DWORD PTR _cbRead$[ebp], 8

; 3189 :         break;

  001b3	eb 07		 jmp	 SHORT $LN2@ReadFromSt
$LN16@ReadFromSt:

; 3190 :     case VT_R8:
; 3191 :     case VT_CY:
; 3192 :     case VT_DATE:
; 3193 :         cbRead = sizeof(double);

  001b5	c7 45 e4 08 00
	00 00		 mov	 DWORD PTR _cbRead$[ebp], 8
$LN2@ReadFromSt:

; 3194 :         break;
; 3195 :     default:
; 3196 :         break;
; 3197 :     }
; 3198 :     if (cbRead != 0)

  001bc	83 7d e4 00	 cmp	 DWORD PTR _cbRead$[ebp], 0
  001c0	74 3c		 je	 SHORT $LN18@ReadFromSt

; 3199 :     {
; 3200 :         hr = pStream->Read((void*) &bVal, cbRead, NULL);

  001c2	8b f4		 mov	 esi, esp
  001c4	6a 00		 push	 0
  001c6	8b 55 e4	 mov	 edx, DWORD PTR _cbRead$[ebp]
  001c9	52		 push	 edx
  001ca	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001cd	83 c0 08	 add	 eax, 8
  001d0	50		 push	 eax
  001d1	8b 4d 08	 mov	 ecx, DWORD PTR _pStream$[ebp]
  001d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  001d6	8b 45 08	 mov	 eax, DWORD PTR _pStream$[ebp]
  001d9	50		 push	 eax
  001da	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  001dd	ff d1		 call	 ecx
  001df	3b f4		 cmp	 esi, esp
  001e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001e6	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3201 :         if (hr == S_FALSE)

  001e9	83 7d f8 01	 cmp	 DWORD PTR _hr$[ebp], 1
  001ed	75 07		 jne	 SHORT $LN19@ReadFromSt

; 3202 :             hr = E_FAIL;

  001ef	c7 45 f8 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H
$LN19@ReadFromSt:

; 3203 :         return hr;

  001f6	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  001f9	e9 ad 00 00 00	 jmp	 $LN1@ReadFromSt
$LN18@ReadFromSt:

; 3204 :     }
; 3205 :     CComBSTR bstrRead;

  001fe	8d 4d d8	 lea	 ecx, DWORD PTR _bstrRead$[ebp]
  00201	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::CComBSTR

; 3206 : 
; 3207 :     hr = bstrRead.ReadFromStream(pStream);

  00206	8b 55 08	 mov	 edx, DWORD PTR _pStream$[ebp]
  00209	52		 push	 edx
  0020a	8d 4d d8	 lea	 ecx, DWORD PTR _bstrRead$[ebp]
  0020d	e8 00 00 00 00	 call	 ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z ; ATL::CComBSTR::ReadFromStream
  00212	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3208 :     if (FAILED(hr))

  00215	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00219	7d 4b		 jge	 SHORT $LN20@ReadFromSt

; 3209 :     {
; 3210 :         // If CComBSTR::ReadFromStream failed, reset seek pointer to start of
; 3211 :         // variant type.
; 3212 :         LARGE_INTEGER nOffset;
; 3213 :         nOffset.QuadPart = -(static_cast<LONGLONG>(sizeof(VARTYPE)));

  0021b	83 c8 ff	 or	 eax, -1
  0021e	c7 45 c8 fe ff
	ff ff		 mov	 DWORD PTR _nOffset$4[ebp], -2 ; fffffffeH
  00225	89 45 cc	 mov	 DWORD PTR _nOffset$4[ebp+4], eax

; 3214 :         pStream->Seek(nOffset, STREAM_SEEK_CUR, NULL);

  00228	8b f4		 mov	 esi, esp
  0022a	6a 00		 push	 0
  0022c	6a 01		 push	 1
  0022e	8b 4d cc	 mov	 ecx, DWORD PTR _nOffset$4[ebp+4]
  00231	51		 push	 ecx
  00232	8b 55 c8	 mov	 edx, DWORD PTR _nOffset$4[ebp]
  00235	52		 push	 edx
  00236	8b 45 08	 mov	 eax, DWORD PTR _pStream$[ebp]
  00239	8b 08		 mov	 ecx, DWORD PTR [eax]
  0023b	8b 55 08	 mov	 edx, DWORD PTR _pStream$[ebp]
  0023e	52		 push	 edx
  0023f	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00242	ff d0		 call	 eax
  00244	3b f4		 cmp	 esi, esp
  00246	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 3215 :         vt = VT_EMPTY;

  0024b	33 c9		 xor	 ecx, ecx
  0024d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00250	66 89 0a	 mov	 WORD PTR [edx], cx

; 3216 :         return hr;

  00253	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  00256	89 45 bc	 mov	 DWORD PTR $T2[ebp], eax
  00259	8d 4d d8	 lea	 ecx, DWORD PTR _bstrRead$[ebp]
  0025c	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  00261	8b 45 bc	 mov	 eax, DWORD PTR $T2[ebp]
  00264	eb 45		 jmp	 SHORT $LN1@ReadFromSt
$LN20@ReadFromSt:

; 3217 :     }
; 3218 :     vt = VT_BSTR;

  00266	b9 08 00 00 00	 mov	 ecx, 8
  0026b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0026e	66 89 0a	 mov	 WORD PTR [edx], cx

; 3219 :     bstrVal = bstrRead.Detach();

  00271	8d 4d d8	 lea	 ecx, DWORD PTR _bstrRead$[ebp]
  00274	e8 00 00 00 00	 call	 ?Detach@CComBSTR@ATL@@QAEPA_WXZ ; ATL::CComBSTR::Detach
  00279	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0027c	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 3220 :     if (vtRead != VT_BSTR)

  0027f	0f b7 55 f0	 movzx	 edx, WORD PTR _vtRead$[ebp]
  00283	83 fa 08	 cmp	 edx, 8
  00286	74 12		 je	 SHORT $LN21@ReadFromSt

; 3221 :         hr = ChangeType(vtRead);

  00288	6a 00		 push	 0
  0028a	0f b7 45 f0	 movzx	 eax, WORD PTR _vtRead$[ebp]
  0028e	50		 push	 eax
  0028f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00292	e8 00 00 00 00	 call	 ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z ; ATL::CComVariant::ChangeType
  00297	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN21@ReadFromSt:

; 3222 :     return hr;

  0029a	8b 4d f8	 mov	 ecx, DWORD PTR _hr$[ebp]
  0029d	89 4d b8	 mov	 DWORD PTR $T1[ebp], ecx
  002a0	8d 4d d8	 lea	 ecx, DWORD PTR _bstrRead$[ebp]
  002a3	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  002a8	8b 45 b8	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@ReadFromSt:

; 3223 : }

  002ab	52		 push	 edx
  002ac	8b cd		 mov	 ecx, ebp
  002ae	50		 push	 eax
  002af	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN33@ReadFromSt
  002b5	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  002ba	58		 pop	 eax
  002bb	5a		 pop	 edx
  002bc	5f		 pop	 edi
  002bd	5e		 pop	 esi
  002be	83 c4 50	 add	 esp, 80			; 00000050H
  002c1	3b ec		 cmp	 ebp, esp
  002c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002c8	8b e5		 mov	 esp, ebp
  002ca	5d		 pop	 ebp
  002cb	c2 10 00	 ret	 16			; 00000010H
  002ce	66 90		 npad	 2
$LN33@ReadFromSt:
  002d0	04 00 00 00	 DD	 4
  002d4	00 00 00 00	 DD	 $LN32@ReadFromSt
$LN32@ReadFromSt:
  002d8	f0 ff ff ff	 DD	 -16			; fffffff0H
  002dc	02 00 00 00	 DD	 2
  002e0	00 00 00 00	 DD	 $LN28@ReadFromSt
  002e4	e4 ff ff ff	 DD	 -28			; ffffffe4H
  002e8	04 00 00 00	 DD	 4
  002ec	00 00 00 00	 DD	 $LN29@ReadFromSt
  002f0	d8 ff ff ff	 DD	 -40			; ffffffd8H
  002f4	04 00 00 00	 DD	 4
  002f8	00 00 00 00	 DD	 $LN30@ReadFromSt
  002fc	c8 ff ff ff	 DD	 -56			; ffffffc8H
  00300	08 00 00 00	 DD	 8
  00304	00 00 00 00	 DD	 $LN31@ReadFromSt
$LN31@ReadFromSt:
  00308	6e		 DB	 110			; 0000006eH
  00309	4f		 DB	 79			; 0000004fH
  0030a	66		 DB	 102			; 00000066H
  0030b	66		 DB	 102			; 00000066H
  0030c	73		 DB	 115			; 00000073H
  0030d	65		 DB	 101			; 00000065H
  0030e	74		 DB	 116			; 00000074H
  0030f	00		 DB	 0
$LN30@ReadFromSt:
  00310	62		 DB	 98			; 00000062H
  00311	73		 DB	 115			; 00000073H
  00312	74		 DB	 116			; 00000074H
  00313	72		 DB	 114			; 00000072H
  00314	52		 DB	 82			; 00000052H
  00315	65		 DB	 101			; 00000065H
  00316	61		 DB	 97			; 00000061H
  00317	64		 DB	 100			; 00000064H
  00318	00		 DB	 0
$LN29@ReadFromSt:
  00319	63		 DB	 99			; 00000063H
  0031a	62		 DB	 98			; 00000062H
  0031b	52		 DB	 82			; 00000052H
  0031c	65		 DB	 101			; 00000065H
  0031d	61		 DB	 97			; 00000061H
  0031e	64		 DB	 100			; 00000064H
  0031f	00		 DB	 0
$LN28@ReadFromSt:
  00320	76		 DB	 118			; 00000076H
  00321	74		 DB	 116			; 00000074H
  00322	52		 DB	 82			; 00000052H
  00323	65		 DB	 101			; 00000065H
  00324	61		 DB	 97			; 00000061H
  00325	64		 DB	 100			; 00000064H
  00326	00		 DB	 0
  00327	90		 npad	 1
$LN27@ReadFromSt:
  00328	00 00 00 00	 DD	 $LN13@ReadFromSt
  0032c	00 00 00 00	 DD	 $LN14@ReadFromSt
  00330	00 00 00 00	 DD	 $LN16@ReadFromSt
  00334	00 00 00 00	 DD	 $LN10@ReadFromSt
  00338	00 00 00 00	 DD	 $LN12@ReadFromSt
  0033c	00 00 00 00	 DD	 $LN15@ReadFromSt
  00340	00 00 00 00	 DD	 $LN2@ReadFromSt
$LN26@ReadFromSt:
  00344	00		 DB	 0
  00345	01		 DB	 1
  00346	01		 DB	 1
  00347	02		 DB	 2
  00348	02		 DB	 2
  00349	02		 DB	 2
  0034a	06		 DB	 6
  0034b	03		 DB	 3
  0034c	01		 DB	 1
  0034d	00		 DB	 0
  0034e	06		 DB	 6
  0034f	03		 DB	 3
  00350	06		 DB	 6
  00351	06		 DB	 6
  00352	04		 DB	 4
  00353	04		 DB	 4
  00354	00		 DB	 0
  00355	01		 DB	 1
  00356	05		 DB	 5
  00357	05		 DB	 5
  00358	01		 DB	 1
  00359	01		 DB	 1
?ReadFromStream@CComVariant@ATL@@QAEJPAUIStream@@GTClassesAllowedInStream@2@K@Z ENDP ; ATL::CComVariant::ReadFromStream
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?WriteToStream@CComVariant@ATL@@QAEJPAUIStream@@G@Z
_TEXT	SEGMENT
$T1 = -40						; size = 4
$T2 = -36						; size = 4
_hr$3 = -32						; size = 4
_varConv$4 = -24					; size = 16
_this$ = -4						; size = 4
_pStream$ = 8						; size = 4
_vtWrite$ = 12						; size = 2
?WriteToStream@CComVariant@ATL@@QAEJPAUIStream@@G@Z PROC ; ATL::CComVariant::WriteToStream, COMDAT
; _this$ = ecx

; 2953 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d d8	 lea	 edi, DWORD PTR [ebp-40]
  0000b	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2954 :         if (vtWrite != VT_EMPTY && vtWrite != vt)

  0001b	0f b7 45 0c	 movzx	 eax, WORD PTR _vtWrite$[ebp]
  0001f	85 c0		 test	 eax, eax
  00021	74 5f		 je	 SHORT $LN2@WriteToStr
  00023	0f b7 4d 0c	 movzx	 ecx, WORD PTR _vtWrite$[ebp]
  00027	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	0f b7 02	 movzx	 eax, WORD PTR [edx]
  0002d	3b c8		 cmp	 ecx, eax
  0002f	74 51		 je	 SHORT $LN2@WriteToStr

; 2955 :         {
; 2956 :             CComVariant varConv;

  00031	8d 4d e8	 lea	 ecx, DWORD PTR _varConv$4[ebp]
  00034	e8 00 00 00 00	 call	 ??0CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::CComVariant

; 2957 :             HRESULT hr = varConv.ChangeType(vtWrite, this);

  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	51		 push	 ecx
  0003d	0f b7 55 0c	 movzx	 edx, WORD PTR _vtWrite$[ebp]
  00041	52		 push	 edx
  00042	8d 4d e8	 lea	 ecx, DWORD PTR _varConv$4[ebp]
  00045	e8 00 00 00 00	 call	 ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z ; ATL::CComVariant::ChangeType
  0004a	89 45 e0	 mov	 DWORD PTR _hr$3[ebp], eax

; 2958 :             if (FAILED(hr))

  0004d	83 7d e0 00	 cmp	 DWORD PTR _hr$3[ebp], 0
  00051	7d 13		 jge	 SHORT $LN3@WriteToStr

; 2959 :             {
; 2960 :                 return hr;

  00053	8b 45 e0	 mov	 eax, DWORD PTR _hr$3[ebp]
  00056	89 45 dc	 mov	 DWORD PTR $T2[ebp], eax
  00059	8d 4d e8	 lea	 ecx, DWORD PTR _varConv$4[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  00061	8b 45 dc	 mov	 eax, DWORD PTR $T2[ebp]
  00064	eb 28		 jmp	 SHORT $LN1@WriteToStr
$LN3@WriteToStr:

; 2961 :             }
; 2962 :             return varConv.WriteToStream(pStream);

  00066	8b 4d 08	 mov	 ecx, DWORD PTR _pStream$[ebp]
  00069	51		 push	 ecx
  0006a	8d 4d e8	 lea	 ecx, DWORD PTR _varConv$4[ebp]
  0006d	e8 00 00 00 00	 call	 ?WriteToStream@CComVariant@ATL@@QAEJPAUIStream@@@Z ; ATL::CComVariant::WriteToStream
  00072	89 45 d8	 mov	 DWORD PTR $T1[ebp], eax
  00075	8d 4d e8	 lea	 ecx, DWORD PTR _varConv$4[ebp]
  00078	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  0007d	8b 45 d8	 mov	 eax, DWORD PTR $T1[ebp]
  00080	eb 0c		 jmp	 SHORT $LN1@WriteToStr
$LN2@WriteToStr:

; 2963 :         }
; 2964 :         return WriteToStream(pStream);

  00082	8b 55 08	 mov	 edx, DWORD PTR _pStream$[ebp]
  00085	52		 push	 edx
  00086	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?WriteToStream@CComVariant@ATL@@QAEJPAUIStream@@@Z ; ATL::CComVariant::WriteToStream
$LN1@WriteToStr:

; 2965 :     }

  0008e	52		 push	 edx
  0008f	8b cd		 mov	 ecx, ebp
  00091	50		 push	 eax
  00092	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@WriteToStr
  00098	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0009d	58		 pop	 eax
  0009e	5a		 pop	 edx
  0009f	5f		 pop	 edi
  000a0	83 c4 28	 add	 esp, 40			; 00000028H
  000a3	3b ec		 cmp	 ebp, esp
  000a5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c2 08 00	 ret	 8
$LN7@WriteToStr:
  000b0	01 00 00 00	 DD	 1
  000b4	00 00 00 00	 DD	 $LN6@WriteToStr
$LN6@WriteToStr:
  000b8	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000bc	10 00 00 00	 DD	 16			; 00000010H
  000c0	00 00 00 00	 DD	 $LN5@WriteToStr
$LN5@WriteToStr:
  000c4	76		 DB	 118			; 00000076H
  000c5	61		 DB	 97			; 00000061H
  000c6	72		 DB	 114			; 00000072H
  000c7	43		 DB	 67			; 00000043H
  000c8	6f		 DB	 111			; 0000006fH
  000c9	6e		 DB	 110			; 0000006eH
  000ca	76		 DB	 118			; 00000076H
  000cb	00		 DB	 0
?WriteToStream@CComVariant@ATL@@QAEJPAUIStream@@G@Z ENDP ; ATL::CComVariant::WriteToStream
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?WriteToStream@CComVariant@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT
tv88 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
$T3 = -72						; size = 4
$T4 = -68						; size = 4
$T5 = -64						; size = 4
_varBSTR$ = -56						; size = 16
_bstrWrite$ = -32					; size = 4
_spStream$6 = -20					; size = 4
_cbWrite$ = -12						; size = 4
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pStream$ = 8						; size = 4
?WriteToStream@CComVariant@ATL@@QAEJPAUIStream@@@Z PROC	; ATL::CComVariant::WriteToStream, COMDAT
; _this$ = ecx

; 3032 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d ac	 lea	 edi, DWORD PTR [ebp-84]
  0000c	b9 15 00 00 00	 mov	 ecx, 21			; 00000015H
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3033 :     if(pStream == NULL)

  0001c	83 7d 08 00	 cmp	 DWORD PTR _pStream$[ebp], 0
  00020	75 0a		 jne	 SHORT $LN4@WriteToStr

; 3034 :         return E_INVALIDARG;

  00022	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00027	e9 69 02 00 00	 jmp	 $LN1@WriteToStr
$LN4@WriteToStr:

; 3035 : 
; 3036 :     HRESULT hr = pStream->Write(&vt, sizeof(VARTYPE), NULL);

  0002c	8b f4		 mov	 esi, esp
  0002e	6a 00		 push	 0
  00030	6a 02		 push	 2
  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	50		 push	 eax
  00036	8b 4d 08	 mov	 ecx, DWORD PTR _pStream$[ebp]
  00039	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003b	8b 45 08	 mov	 eax, DWORD PTR _pStream$[ebp]
  0003e	50		 push	 eax
  0003f	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  00042	ff d1		 call	 ecx
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3037 :     if (FAILED(hr))

  0004e	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00052	7d 08		 jge	 SHORT $LN5@WriteToStr

; 3038 :         return hr;

  00054	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  00057	e9 39 02 00 00	 jmp	 $LN1@WriteToStr
$LN5@WriteToStr:

; 3039 : 
; 3040 :     int cbWrite = 0;

  0005c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _cbWrite$[ebp], 0

; 3041 :     switch (vt)

  00063	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00066	0f b7 02	 movzx	 eax, WORD PTR [edx]
  00069	89 45 ac	 mov	 DWORD PTR tv88[ebp], eax
  0006c	8b 4d ac	 mov	 ecx, DWORD PTR tv88[ebp]
  0006f	83 e9 02	 sub	 ecx, 2
  00072	89 4d ac	 mov	 DWORD PTR tv88[ebp], ecx
  00075	83 7d ac 15	 cmp	 DWORD PTR tv88[ebp], 21	; 00000015H
  00079	0f 87 40 01 00
	00		 ja	 $LN2@WriteToStr
  0007f	8b 55 ac	 mov	 edx, DWORD PTR tv88[ebp]
  00082	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN22@WriteToStr[edx]
  00089	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN23@WriteToStr[eax*4]
$LN6@WriteToStr:

; 3042 :     {
; 3043 :     case VT_UNKNOWN:
; 3044 :     case VT_DISPATCH:
; 3045 :         {
; 3046 :             CComPtr<IPersistStream> spStream;

  00090	8d 4d ec	 lea	 ecx, DWORD PTR _spStream$6[ebp]
  00093	e8 00 00 00 00	 call	 ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ ; ATL::CComPtr<IPersistStream>::CComPtr<IPersistStream>

; 3047 :             if (punkVal != NULL)

  00098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  0009f	0f 84 84 00 00
	00		 je	 $LN7@WriteToStr

; 3048 :             {
; 3049 :                 hr = punkVal->QueryInterface(__uuidof(IPersistStream), (void**)&spStream);

  000a5	8d 4d ec	 lea	 ecx, DWORD PTR _spStream$6[ebp]
  000a8	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ ; ATL::CComPtrBase<IPersistStream>::operator&
  000ad	8b f4		 mov	 esi, esp
  000af	50		 push	 eax
  000b0	68 00 00 00 00	 push	 OFFSET __GUID_00000109_0000_0000_c000_000000000046
  000b5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b8	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000c1	8b 00		 mov	 eax, DWORD PTR [eax]
  000c3	52		 push	 edx
  000c4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c6	ff d1		 call	 ecx
  000c8	3b f4		 cmp	 esi, esp
  000ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cf	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3050 :                 if (FAILED(hr))

  000d2	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000d6	7d 51		 jge	 SHORT $LN7@WriteToStr

; 3051 :                 {
; 3052 :                     hr = punkVal->QueryInterface(__uuidof(IPersistStreamInit), (void**)&spStream);

  000d8	8d 4d ec	 lea	 ecx, DWORD PTR _spStream$6[ebp]
  000db	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ ; ATL::CComPtrBase<IPersistStream>::operator&
  000e0	8b f4		 mov	 esi, esp
  000e2	50		 push	 eax
  000e3	68 00 00 00 00	 push	 OFFSET __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
  000e8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000eb	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000ee	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000f4	8b 00		 mov	 eax, DWORD PTR [eax]
  000f6	52		 push	 edx
  000f7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f9	ff d1		 call	 ecx
  000fb	3b f4		 cmp	 esi, esp
  000fd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00102	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3053 :                     if (FAILED(hr))

  00105	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00109	7d 1e		 jge	 SHORT $LN7@WriteToStr

; 3054 :                     {
; 3055 :                         spStream.Detach();

  0010b	8d 4d ec	 lea	 ecx, DWORD PTR _spStream$6[ebp]
  0010e	e8 00 00 00 00	 call	 ?Detach@?$CComPtrBase@UIPersistStream@@@ATL@@QAEPAUIPersistStream@@XZ ; ATL::CComPtrBase<IPersistStream>::Detach

; 3056 :                         return hr;

  00113	8b 55 f8	 mov	 edx, DWORD PTR _hr$[ebp]
  00116	89 55 c0	 mov	 DWORD PTR $T5[ebp], edx
  00119	8d 4d ec	 lea	 ecx, DWORD PTR _spStream$6[ebp]
  0011c	e8 00 00 00 00	 call	 ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
  00121	8b 45 c0	 mov	 eax, DWORD PTR $T5[ebp]
  00124	e9 6c 01 00 00	 jmp	 $LN1@WriteToStr
$LN7@WriteToStr:

; 3057 :                     }
; 3058 :                 }
; 3059 :             }
; 3060 :             if (spStream != NULL)

  00129	6a 00		 push	 0
  0012b	8d 4d ec	 lea	 ecx, DWORD PTR _spStream$6[ebp]
  0012e	e8 00 00 00 00	 call	 ??9?$CComPtrBase@UIPersistStream@@@ATL@@QBE_NPAUIPersistStream@@@Z ; ATL::CComPtrBase<IPersistStream>::operator!=
  00133	0f b6 c0	 movzx	 eax, al
  00136	85 c0		 test	 eax, eax
  00138	74 2f		 je	 SHORT $LN10@WriteToStr

; 3061 :                 return OleSaveToStream(spStream, pStream);

  0013a	8b f4		 mov	 esi, esp
  0013c	8b 4d 08	 mov	 ecx, DWORD PTR _pStream$[ebp]
  0013f	51		 push	 ecx
  00140	8d 4d ec	 lea	 ecx, DWORD PTR _spStream$6[ebp]
  00143	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ ; ATL::CComPtrBase<IPersistStream>::operator IPersistStream *
  00148	50		 push	 eax
  00149	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OleSaveToStream@8
  0014f	3b f4		 cmp	 esi, esp
  00151	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00156	89 45 bc	 mov	 DWORD PTR $T4[ebp], eax
  00159	8d 4d ec	 lea	 ecx, DWORD PTR _spStream$6[ebp]
  0015c	e8 00 00 00 00	 call	 ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
  00161	8b 45 bc	 mov	 eax, DWORD PTR $T4[ebp]
  00164	e9 2c 01 00 00	 jmp	 $LN1@WriteToStr
$LN10@WriteToStr:

; 3062 :             return WriteClassStm(pStream, CLSID_NULL);

  00169	8b f4		 mov	 esi, esp
  0016b	68 00 00 00 00	 push	 OFFSET _GUID_NULL
  00170	8b 55 08	 mov	 edx, DWORD PTR _pStream$[ebp]
  00173	52		 push	 edx
  00174	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WriteClassStm@8
  0017a	3b f4		 cmp	 esi, esp
  0017c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00181	89 45 b8	 mov	 DWORD PTR $T3[ebp], eax
  00184	8d 4d ec	 lea	 ecx, DWORD PTR _spStream$6[ebp]
  00187	e8 00 00 00 00	 call	 ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
  0018c	8b 45 b8	 mov	 eax, DWORD PTR $T3[ebp]
  0018f	e9 01 01 00 00	 jmp	 $LN1@WriteToStr
$LN11@WriteToStr:

; 3063 :         }
; 3064 :     case VT_UI1:
; 3065 :     case VT_I1:
; 3066 :         cbWrite = sizeof(BYTE);

  00194	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _cbWrite$[ebp], 1

; 3067 :         break;

  0019b	eb 22		 jmp	 SHORT $LN2@WriteToStr
$LN12@WriteToStr:

; 3068 :     case VT_I2:
; 3069 :     case VT_UI2:
; 3070 :     case VT_BOOL:
; 3071 :         cbWrite = sizeof(short);

  0019d	c7 45 f4 02 00
	00 00		 mov	 DWORD PTR _cbWrite$[ebp], 2

; 3072 :         break;

  001a4	eb 19		 jmp	 SHORT $LN2@WriteToStr
$LN13@WriteToStr:

; 3073 :     case VT_I4:
; 3074 :     case VT_UI4:
; 3075 :     case VT_R4:
; 3076 :     case VT_INT:
; 3077 :     case VT_UINT:
; 3078 :     case VT_ERROR:
; 3079 :         cbWrite = sizeof(long);

  001a6	c7 45 f4 04 00
	00 00		 mov	 DWORD PTR _cbWrite$[ebp], 4

; 3080 :         break;

  001ad	eb 10		 jmp	 SHORT $LN2@WriteToStr
$LN14@WriteToStr:

; 3081 :     case VT_I8:
; 3082 :     case VT_UI8:
; 3083 :         cbWrite = sizeof(LONGLONG);

  001af	c7 45 f4 08 00
	00 00		 mov	 DWORD PTR _cbWrite$[ebp], 8

; 3084 :         break;

  001b6	eb 07		 jmp	 SHORT $LN2@WriteToStr
$LN15@WriteToStr:

; 3085 :     case VT_R8:
; 3086 :     case VT_CY:
; 3087 :     case VT_DATE:
; 3088 :         cbWrite = sizeof(double);

  001b8	c7 45 f4 08 00
	00 00		 mov	 DWORD PTR _cbWrite$[ebp], 8
$LN2@WriteToStr:

; 3089 :         break;
; 3090 :     default:
; 3091 :         break;
; 3092 :     }
; 3093 :     if (cbWrite != 0)

  001bf	83 7d f4 00	 cmp	 DWORD PTR _cbWrite$[ebp], 0
  001c3	74 29		 je	 SHORT $LN17@WriteToStr

; 3094 :         return pStream->Write((void*) &bVal, cbWrite, NULL);

  001c5	8b f4		 mov	 esi, esp
  001c7	6a 00		 push	 0
  001c9	8b 45 f4	 mov	 eax, DWORD PTR _cbWrite$[ebp]
  001cc	50		 push	 eax
  001cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001d0	83 c1 08	 add	 ecx, 8
  001d3	51		 push	 ecx
  001d4	8b 55 08	 mov	 edx, DWORD PTR _pStream$[ebp]
  001d7	8b 02		 mov	 eax, DWORD PTR [edx]
  001d9	8b 4d 08	 mov	 ecx, DWORD PTR _pStream$[ebp]
  001dc	51		 push	 ecx
  001dd	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  001e0	ff d2		 call	 edx
  001e2	3b f4		 cmp	 esi, esp
  001e4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001e9	e9 a7 00 00 00	 jmp	 $LN1@WriteToStr
$LN17@WriteToStr:

; 3095 : 
; 3096 :     CComBSTR bstrWrite;

  001ee	8d 4d e0	 lea	 ecx, DWORD PTR _bstrWrite$[ebp]
  001f1	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::CComBSTR

; 3097 :     CComVariant varBSTR;

  001f6	8d 4d c8	 lea	 ecx, DWORD PTR _varBSTR$[ebp]
  001f9	e8 00 00 00 00	 call	 ??0CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::CComVariant

; 3098 :     if (vt != VT_BSTR)

  001fe	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00201	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00204	83 f9 08	 cmp	 ecx, 8
  00207	74 4d		 je	 SHORT $LN18@WriteToStr

; 3099 :     {
; 3100 :         hr = VariantChangeType(&varBSTR, this, VARIANT_NOVALUEPROP, VT_BSTR);

  00209	8b f4		 mov	 esi, esp
  0020b	6a 08		 push	 8
  0020d	6a 01		 push	 1
  0020f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00212	52		 push	 edx
  00213	8d 45 c8	 lea	 eax, DWORD PTR _varBSTR$[ebp]
  00216	50		 push	 eax
  00217	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantChangeType@16
  0021d	3b f4		 cmp	 esi, esp
  0021f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00224	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3101 :         if (FAILED(hr))

  00227	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0022b	7d 1b		 jge	 SHORT $LN20@WriteToStr

; 3102 :             return hr;

  0022d	8b 4d f8	 mov	 ecx, DWORD PTR _hr$[ebp]
  00230	89 4d b4	 mov	 DWORD PTR $T2[ebp], ecx
  00233	8d 4d c8	 lea	 ecx, DWORD PTR _varBSTR$[ebp]
  00236	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  0023b	8d 4d e0	 lea	 ecx, DWORD PTR _bstrWrite$[ebp]
  0023e	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  00243	8b 45 b4	 mov	 eax, DWORD PTR $T2[ebp]
  00246	eb 4d		 jmp	 SHORT $LN1@WriteToStr
$LN20@WriteToStr:

; 3103 :         bstrWrite.Attach(varBSTR.bstrVal);

  00248	8b 55 d0	 mov	 edx, DWORD PTR _varBSTR$[ebp+8]
  0024b	52		 push	 edx
  0024c	8d 4d e0	 lea	 ecx, DWORD PTR _bstrWrite$[ebp]
  0024f	e8 00 00 00 00	 call	 ?Attach@CComBSTR@ATL@@QAEXPA_W@Z ; ATL::CComBSTR::Attach

; 3104 :     }

  00254	eb 0f		 jmp	 SHORT $LN19@WriteToStr
$LN18@WriteToStr:

; 3105 :     else
; 3106 :         bstrWrite.Attach(bstrVal);

  00256	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00259	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0025c	51		 push	 ecx
  0025d	8d 4d e0	 lea	 ecx, DWORD PTR _bstrWrite$[ebp]
  00260	e8 00 00 00 00	 call	 ?Attach@CComBSTR@ATL@@QAEXPA_W@Z ; ATL::CComBSTR::Attach
$LN19@WriteToStr:

; 3107 : 
; 3108 :     hr = bstrWrite.WriteToStream(pStream);

  00265	8b 55 08	 mov	 edx, DWORD PTR _pStream$[ebp]
  00268	52		 push	 edx
  00269	8d 4d e0	 lea	 ecx, DWORD PTR _bstrWrite$[ebp]
  0026c	e8 00 00 00 00	 call	 ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z ; ATL::CComBSTR::WriteToStream
  00271	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3109 :     bstrWrite.Detach();

  00274	8d 4d e0	 lea	 ecx, DWORD PTR _bstrWrite$[ebp]
  00277	e8 00 00 00 00	 call	 ?Detach@CComBSTR@ATL@@QAEPA_WXZ ; ATL::CComBSTR::Detach

; 3110 :     return hr;

  0027c	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  0027f	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  00282	8d 4d c8	 lea	 ecx, DWORD PTR _varBSTR$[ebp]
  00285	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  0028a	8d 4d e0	 lea	 ecx, DWORD PTR _bstrWrite$[ebp]
  0028d	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  00292	8b 45 b0	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@WriteToStr:

; 3111 : }

  00295	52		 push	 edx
  00296	8b cd		 mov	 ecx, ebp
  00298	50		 push	 eax
  00299	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN28@WriteToStr
  0029f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  002a4	58		 pop	 eax
  002a5	5a		 pop	 edx
  002a6	5f		 pop	 edi
  002a7	5e		 pop	 esi
  002a8	83 c4 54	 add	 esp, 84			; 00000054H
  002ab	3b ec		 cmp	 ebp, esp
  002ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002b2	8b e5		 mov	 esp, ebp
  002b4	5d		 pop	 ebp
  002b5	c2 04 00	 ret	 4
$LN28@WriteToStr:
  002b8	03 00 00 00	 DD	 3
  002bc	00 00 00 00	 DD	 $LN27@WriteToStr
$LN27@WriteToStr:
  002c0	ec ff ff ff	 DD	 -20			; ffffffecH
  002c4	04 00 00 00	 DD	 4
  002c8	00 00 00 00	 DD	 $LN24@WriteToStr
  002cc	e0 ff ff ff	 DD	 -32			; ffffffe0H
  002d0	04 00 00 00	 DD	 4
  002d4	00 00 00 00	 DD	 $LN25@WriteToStr
  002d8	c8 ff ff ff	 DD	 -56			; ffffffc8H
  002dc	10 00 00 00	 DD	 16			; 00000010H
  002e0	00 00 00 00	 DD	 $LN26@WriteToStr
$LN26@WriteToStr:
  002e4	76		 DB	 118			; 00000076H
  002e5	61		 DB	 97			; 00000061H
  002e6	72		 DB	 114			; 00000072H
  002e7	42		 DB	 66			; 00000042H
  002e8	53		 DB	 83			; 00000053H
  002e9	54		 DB	 84			; 00000054H
  002ea	52		 DB	 82			; 00000052H
  002eb	00		 DB	 0
$LN25@WriteToStr:
  002ec	62		 DB	 98			; 00000062H
  002ed	73		 DB	 115			; 00000073H
  002ee	74		 DB	 116			; 00000074H
  002ef	72		 DB	 114			; 00000072H
  002f0	57		 DB	 87			; 00000057H
  002f1	72		 DB	 114			; 00000072H
  002f2	69		 DB	 105			; 00000069H
  002f3	74		 DB	 116			; 00000074H
  002f4	65		 DB	 101			; 00000065H
  002f5	00		 DB	 0
$LN24@WriteToStr:
  002f6	73		 DB	 115			; 00000073H
  002f7	70		 DB	 112			; 00000070H
  002f8	53		 DB	 83			; 00000053H
  002f9	74		 DB	 116			; 00000074H
  002fa	72		 DB	 114			; 00000072H
  002fb	65		 DB	 101			; 00000065H
  002fc	61		 DB	 97			; 00000061H
  002fd	6d		 DB	 109			; 0000006dH
  002fe	00		 DB	 0
  002ff	90		 npad	 1
$LN23@WriteToStr:
  00300	00 00 00 00	 DD	 $LN12@WriteToStr
  00304	00 00 00 00	 DD	 $LN13@WriteToStr
  00308	00 00 00 00	 DD	 $LN15@WriteToStr
  0030c	00 00 00 00	 DD	 $LN6@WriteToStr
  00310	00 00 00 00	 DD	 $LN11@WriteToStr
  00314	00 00 00 00	 DD	 $LN14@WriteToStr
  00318	00 00 00 00	 DD	 $LN2@WriteToStr
$LN22@WriteToStr:
  0031c	00		 DB	 0
  0031d	01		 DB	 1
  0031e	01		 DB	 1
  0031f	02		 DB	 2
  00320	02		 DB	 2
  00321	02		 DB	 2
  00322	06		 DB	 6
  00323	03		 DB	 3
  00324	01		 DB	 1
  00325	00		 DB	 0
  00326	06		 DB	 6
  00327	03		 DB	 3
  00328	06		 DB	 6
  00329	06		 DB	 6
  0032a	04		 DB	 4
  0032b	04		 DB	 4
  0032c	00		 DB	 0
  0032d	01		 DB	 1
  0032e	05		 DB	 5
  0032f	05		 DB	 5
  00330	01		 DB	 1
  00331	01		 DB	 1
?WriteToStream@CComVariant@ATL@@QAEJPAUIStream@@@Z ENDP	; ATL::CComVariant::WriteToStream
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z
_TEXT	SEGMENT
_pVar$ = -8						; size = 4
_this$ = -4						; size = 4
_vtNew$ = 8						; size = 2
_pSrc$ = 12						; size = 4
?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z PROC ; ATL::CComVariant::ChangeType, COMDAT
; _this$ = ecx

; 2931 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2932 :         VARIANT* pVar = const_cast<VARIANT*>(pSrc);

  00018	8b 45 0c	 mov	 eax, DWORD PTR _pSrc$[ebp]
  0001b	89 45 f8	 mov	 DWORD PTR _pVar$[ebp], eax

; 2933 :         // Convert in place if pSrc is NULL
; 2934 :         if (pVar == NULL)

  0001e	83 7d f8 00	 cmp	 DWORD PTR _pVar$[ebp], 0
  00022	75 06		 jne	 SHORT $LN2@ChangeType

; 2935 :             pVar = this;

  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	89 4d f8	 mov	 DWORD PTR _pVar$[ebp], ecx
$LN2@ChangeType:

; 2936 :         // Do nothing if doing in place convert and vts not different
; 2937 :         return ::VariantChangeType(this, pVar, 0, vtNew);

  0002a	8b f4		 mov	 esi, esp
  0002c	0f b7 55 08	 movzx	 edx, WORD PTR _vtNew$[ebp]
  00030	52		 push	 edx
  00031	6a 00		 push	 0
  00033	8b 45 f8	 mov	 eax, DWORD PTR _pVar$[ebp]
  00036	50		 push	 eax
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	51		 push	 ecx
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantChangeType@16
  00041	3b f4		 cmp	 esi, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2938 :     }

  00048	5e		 pop	 esi
  00049	83 c4 08	 add	 esp, 8
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z ENDP ; ATL::CComVariant::ChangeType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CComVariant@ATL@@QAEJXZ PROC			; ATL::CComVariant::Clear, COMDAT
; _this$ = ecx

; 2864 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2865 :         return ::VariantClear(this);

  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
  0001b	3b f4		 cmp	 esi, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2866 :     }

  00022	5e		 pop	 esi
  00023	83 c4 04	 add	 esp, 4
  00026	3b ec		 cmp	 ebp, esp
  00028	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
?Clear@CComVariant@ATL@@QAEJXZ ENDP			; ATL::CComVariant::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
??1CComVariant@ATL@@QAE@XZ PROC				; ATL::CComVariant::~CComVariant, COMDAT
; _this$ = ecx

; 2164 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2165 :         HRESULT hr = Clear();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?Clear@CComVariant@ATL@@QAEJXZ ; ATL::CComVariant::Clear
  0001f	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 2166 :         ATLASSERT(SUCCEEDED(hr));

  00022	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00026	7d 26		 jge	 SHORT $LN1@CComVarian
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@HIJGNINB@?$AA?$CI?$AA?$CI?$AA?$CI?$AAH?$AAR?$AAE?$AAS?$AAU?$AAL?$AAT?$AA?$CJ?$AA?$CI?$AAh?$AAr?$AA?$CJ@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00032	6a 00		 push	 0
  00034	68 76 08 00 00	 push	 2166			; 00000876H
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0003e	6a 02		 push	 2
  00040	e8 00 00 00 00	 call	 __CrtDbgReportW
  00045	83 c4 18	 add	 esp, 24			; 00000018H
  00048	83 f8 01	 cmp	 eax, 1
  0004b	75 01		 jne	 SHORT $LN1@CComVarian
  0004d	cc		 int	 3
$LN1@CComVarian:

; 2167 :         (hr);
; 2168 :     }

  0004e	83 c4 08	 add	 esp, 8
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
??1CComVariant@ATL@@QAE@XZ ENDP				; ATL::CComVariant::~CComVariant
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComVariant@ATL@@QAE@XZ PROC				; ATL::CComVariant::CComVariant, COMDAT
; _this$ = ecx

; 2157 :     CComVariant() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2158 :     {
; 2159 :         // Make sure that variant data are initialized to 0
; 2160 :         memset(this, 0, sizeof(tagVARIANT));

  0000f	6a 10		 push	 16			; 00000010H
  00011	6a 00		 push	 0
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 _memset
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2161 :         ::VariantInit(this);

  0001f	8b f4		 mov	 esi, esp
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	51		 push	 ecx
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2162 :     }

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	5e		 pop	 esi
  00036	83 c4 04	 add	 esp, 4
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
??0CComVariant@ATL@@QAE@XZ ENDP				; ATL::CComVariant::CComVariant
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?GetStreamSize@CComBSTR@ATL@@SAKPA_W@Z
_TEXT	SEGMENT
_ulSize$ = -4						; size = 4
_bstr$ = 8						; size = 4
?GetStreamSize@CComBSTR@ATL@@SAKPA_W@Z PROC		; ATL::CComBSTR::GetStreamSize, COMDAT

; 1661 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 1662 :         ULONG ulSize = sizeof(ULONG);

  0000c	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR _ulSize$[ebp], 4

; 1663 :         if (bstr != NULL)

  00013	83 7d 08 00	 cmp	 DWORD PTR _bstr$[ebp], 0
  00017	74 1d		 je	 SHORT $LN2@GetStreamS

; 1664 :         {
; 1665 :             ulSize += SysStringByteLen(bstr) + sizeof(OLECHAR);

  00019	8b f4		 mov	 esi, esp
  0001b	8b 45 08	 mov	 eax, DWORD PTR _bstr$[ebp]
  0001e	50		 push	 eax
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysStringByteLen@4
  00025	3b f4		 cmp	 esi, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _ulSize$[ebp]
  0002f	8d 54 01 02	 lea	 edx, DWORD PTR [ecx+eax+2]
  00033	89 55 fc	 mov	 DWORD PTR _ulSize$[ebp], edx
$LN2@GetStreamS:

; 1666 :         }
; 1667 : 
; 1668 :         return ulSize;

  00036	8b 45 fc	 mov	 eax, DWORD PTR _ulSize$[ebp]

; 1669 :     }

  00039	5e		 pop	 esi
  0003a	83 c4 04	 add	 esp, 4
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
?GetStreamSize@CComBSTR@ATL@@SAKPA_W@Z ENDP		; ATL::CComBSTR::GetStreamSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT
$T1 = -136						; size = 8
$T2 = -128						; size = 8
$T3 = -120						; size = 8
$T4 = -112						; size = 8
$T5 = -104						; size = 8
_nOffset$6 = -92					; size = 8
_ch$7 = -76						; size = 2
_hr$ = -68						; size = 4
_cbStrLen$ = -60					; size = 4
_cbRead$ = -48						; size = 4
_nZeroOffset$8 = -36					; size = 8
_nBegOffset$ = -20					; size = 8
_hrSeek$ = -8						; size = 4
_this$ = -4						; size = 4
_pStream$ = 8						; size = 4
?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z PROC	; ATL::CComBSTR::ReadFromStream, COMDAT
; _this$ = ecx

; 1495 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 78 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-136]
  00012	b9 22 00 00 00	 mov	 ecx, 34			; 00000022H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1496 :         ATLASSERT(pStream != NULL);

  00022	83 7d 08 00	 cmp	 DWORD PTR _pStream$[ebp], 0
  00026	75 26		 jne	 SHORT $LN23@ReadFromSt
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@PMLCOGII@?$AAp?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00032	6a 00		 push	 0
  00034	68 d8 05 00 00	 push	 1496			; 000005d8H
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0003e	6a 02		 push	 2
  00040	e8 00 00 00 00	 call	 __CrtDbgReportW
  00045	83 c4 18	 add	 esp, 24			; 00000018H
  00048	83 f8 01	 cmp	 eax, 1
  0004b	75 01		 jne	 SHORT $LN23@ReadFromSt
  0004d	cc		 int	 3
$LN23@ReadFromSt:

; 1497 :         if(pStream == NULL)

  0004e	83 7d 08 00	 cmp	 DWORD PTR _pStream$[ebp], 0
  00052	75 0a		 jne	 SHORT $LN2@ReadFromSt

; 1498 :         {
; 1499 :             return E_INVALIDARG;

  00054	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00059	e9 f3 02 00 00	 jmp	 $LN1@ReadFromSt
$LN2@ReadFromSt:

; 1500 :         }
; 1501 : 
; 1502 :         ATLASSERT(!*this); // should be empty

  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	e8 00 00 00 00	 call	 ??7CComBSTR@ATL@@QBE_NXZ ; ATL::CComBSTR::operator!
  00066	0f b6 c8	 movzx	 ecx, al
  00069	85 c9		 test	 ecx, ecx
  0006b	75 26		 jne	 SHORT $LN24@ReadFromSt
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_1O@CGPEODAD@?$AA?$CB?$AA?$CK?$AAt?$AAh?$AAi?$AAs@
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00077	6a 00		 push	 0
  00079	68 de 05 00 00	 push	 1502			; 000005deH
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00083	6a 02		 push	 2
  00085	e8 00 00 00 00	 call	 __CrtDbgReportW
  0008a	83 c4 18	 add	 esp, 24			; 00000018H
  0008d	83 f8 01	 cmp	 eax, 1
  00090	75 01		 jne	 SHORT $LN24@ReadFromSt
  00092	cc		 int	 3
$LN24@ReadFromSt:

; 1503 :         Empty();

  00093	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	e8 00 00 00 00	 call	 ?Empty@CComBSTR@ATL@@QAEXXZ ; ATL::CComBSTR::Empty

; 1504 : 
; 1505 :         HRESULT hrSeek;
; 1506 :         ULARGE_INTEGER nBegOffset;
; 1507 :         {
; 1508 :             LARGE_INTEGER nZeroOffset;
; 1509 :             nZeroOffset.QuadPart = 0L;

  0009b	0f 57 c0	 xorps	 xmm0, xmm0
  0009e	66 0f 13 45 dc	 movlpd	 QWORD PTR _nZeroOffset$8[ebp], xmm0

; 1510 :             hrSeek = pStream->Seek(nZeroOffset, STREAM_SEEK_CUR, &nBegOffset);

  000a3	8b f4		 mov	 esi, esp
  000a5	8d 45 ec	 lea	 eax, DWORD PTR _nBegOffset$[ebp]
  000a8	50		 push	 eax
  000a9	6a 01		 push	 1
  000ab	8b 4d e0	 mov	 ecx, DWORD PTR _nZeroOffset$8[ebp+4]
  000ae	51		 push	 ecx
  000af	8b 55 dc	 mov	 edx, DWORD PTR _nZeroOffset$8[ebp]
  000b2	52		 push	 edx
  000b3	8b 45 08	 mov	 eax, DWORD PTR _pStream$[ebp]
  000b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b8	8b 55 08	 mov	 edx, DWORD PTR _pStream$[ebp]
  000bb	52		 push	 edx
  000bc	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  000bf	ff d0		 call	 eax
  000c1	3b f4		 cmp	 esi, esp
  000c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c8	89 45 f8	 mov	 DWORD PTR _hrSeek$[ebp], eax

; 1511 :         }
; 1512 : 
; 1513 :         ULONG cbRead = 0;

  000cb	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _cbRead$[ebp], 0

; 1514 :         ULONG cbStrLen = 0;

  000d2	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _cbStrLen$[ebp], 0

; 1515 :         HRESULT hr = pStream->Read(reinterpret_cast<void*>(&cbStrLen), sizeof(cbStrLen), &cbRead);

  000d9	8b f4		 mov	 esi, esp
  000db	8d 4d d0	 lea	 ecx, DWORD PTR _cbRead$[ebp]
  000de	51		 push	 ecx
  000df	6a 04		 push	 4
  000e1	8d 55 c4	 lea	 edx, DWORD PTR _cbStrLen$[ebp]
  000e4	52		 push	 edx
  000e5	8b 45 08	 mov	 eax, DWORD PTR _pStream$[ebp]
  000e8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ea	8b 55 08	 mov	 edx, DWORD PTR _pStream$[ebp]
  000ed	52		 push	 edx
  000ee	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000f1	ff d0		 call	 eax
  000f3	3b f4		 cmp	 esi, esp
  000f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fa	89 45 bc	 mov	 DWORD PTR _hr$[ebp], eax

; 1516 : 
; 1517 :         if (SUCCEEDED(hr))

  000fd	83 7d bc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00101	0f 8c 0c 02 00
	00		 jl	 $LN3@ReadFromSt

; 1518 :         {
; 1519 :             // invalid data size
; 1520 :             if (sizeof(cbStrLen) != cbRead)

  00107	83 7d d0 04	 cmp	 DWORD PTR _cbRead$[ebp], 4
  0010b	74 39		 je	 SHORT $LN4@ReadFromSt

; 1521 :             {
; 1522 :                 ATLTRACE(atlTraceCOM, 0, _T("Input stream is corrupted."));

  0010d	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@PIJMPOJH@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAs?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AAi?$AAs@
  00112	6a 00		 push	 0
  00114	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00119	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  0011e	50		 push	 eax
  0011f	68 f2 05 00 00	 push	 1522			; 000005f2H
  00124	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@MGLNKGFD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00129	8d 4d 98	 lea	 ecx, DWORD PTR $T5[ebp]
  0012c	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00131	50		 push	 eax
  00132	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00137	83 c4 10	 add	 esp, 16			; 00000010H

; 1523 :                 hr = E_FAIL;

  0013a	c7 45 bc 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H

; 1524 :             }

  00141	e9 cd 01 00 00	 jmp	 $LN3@ReadFromSt
$LN4@ReadFromSt:

; 1525 :             // read NULL string
; 1526 :             else if (cbStrLen == 0)

  00146	83 7d c4 00	 cmp	 DWORD PTR _cbStrLen$[ebp], 0
  0014a	75 05		 jne	 SHORT $LN6@ReadFromSt

; 1527 :             {
; 1528 :             }

  0014c	e9 c2 01 00 00	 jmp	 $LN3@ReadFromSt
$LN6@ReadFromSt:

; 1529 :             // invalid data length
; 1530 :             else if (cbStrLen < sizeof(OLECHAR))

  00151	83 7d c4 02	 cmp	 DWORD PTR _cbStrLen$[ebp], 2
  00155	73 39		 jae	 SHORT $LN8@ReadFromSt

; 1531 :             {
; 1532 :                 ATLTRACE(atlTraceCOM, 0, _T("Input stream is corrupted."));

  00157	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@PIJMPOJH@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAs?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AAi?$AAs@
  0015c	6a 00		 push	 0
  0015e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00163	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00168	50		 push	 eax
  00169	68 fc 05 00 00	 push	 1532			; 000005fcH
  0016e	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@MGLNKGFD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00173	8d 4d 90	 lea	 ecx, DWORD PTR $T4[ebp]
  00176	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0017b	50		 push	 eax
  0017c	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00181	83 c4 10	 add	 esp, 16			; 00000010H

; 1533 :                 hr = E_FAIL;

  00184	c7 45 bc 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H

; 1534 :             }

  0018b	e9 83 01 00 00	 jmp	 $LN3@ReadFromSt
$LN8@ReadFromSt:

; 1535 :             // security checks for huge stream of data
; 1536 :             else if (cbStrLen > _ATL_STREAM_MAX_SIZE)

  00190	81 7d c4 00 00
	10 00		 cmp	 DWORD PTR _cbStrLen$[ebp], 1048576 ; 00100000H
  00197	76 39		 jbe	 SHORT $LN10@ReadFromSt

; 1537 :             {
; 1538 :                 ATLTRACE(atlTraceCOM, 0, _T("String exceeded the maximum allowed size see _ATL_STREAM_MAX_SIZE."));

  00199	68 00 00 00 00	 push	 OFFSET ??_C@_1IG@BFBDIBOK@?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAe?$AAd?$AAe?$AAd@
  0019e	6a 00		 push	 0
  001a0	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  001a5	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  001aa	50		 push	 eax
  001ab	68 02 06 00 00	 push	 1538			; 00000602H
  001b0	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@MGLNKGFD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  001b5	8d 4d 88	 lea	 ecx, DWORD PTR $T3[ebp]
  001b8	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  001bd	50		 push	 eax
  001be	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  001c3	83 c4 10	 add	 esp, 16			; 00000010H

; 1539 :                 hr = E_ACCESSDENIED;

  001c6	c7 45 bc 05 00
	07 80		 mov	 DWORD PTR _hr$[ebp], -2147024891 ; 80070005H

; 1540 :             }

  001cd	e9 41 01 00 00	 jmp	 $LN3@ReadFromSt
$LN10@ReadFromSt:

; 1541 :             else
; 1542 :             {
; 1543 :                 //subtract size for terminating NULL which we wrote out
; 1544 :                 cbStrLen -= sizeof(OLECHAR);

  001d2	8b 4d c4	 mov	 ecx, DWORD PTR _cbStrLen$[ebp]
  001d5	83 e9 02	 sub	 ecx, 2
  001d8	89 4d c4	 mov	 DWORD PTR _cbStrLen$[ebp], ecx

; 1545 : 
; 1546 :                 m_str = ::SysAllocStringByteLen(NULL, cbStrLen);

  001db	8b f4		 mov	 esi, esp
  001dd	8b 55 c4	 mov	 edx, DWORD PTR _cbStrLen$[ebp]
  001e0	52		 push	 edx
  001e1	6a 00		 push	 0
  001e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysAllocStringByteLen@8
  001e9	3b f4		 cmp	 esi, esp
  001eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f3	89 01		 mov	 DWORD PTR [ecx], eax

; 1547 :                 if (!*this)

  001f5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f8	e8 00 00 00 00	 call	 ??7CComBSTR@ATL@@QBE_NXZ ; ATL::CComBSTR::operator!
  001fd	0f b6 d0	 movzx	 edx, al
  00200	85 d2		 test	 edx, edx
  00202	74 0c		 je	 SHORT $LN12@ReadFromSt

; 1548 :                 {
; 1549 :                     hr = E_OUTOFMEMORY;

  00204	c7 45 bc 0e 00
	07 80		 mov	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH

; 1550 :                 }

  0020b	e9 03 01 00 00	 jmp	 $LN3@ReadFromSt
$LN12@ReadFromSt:

; 1551 :                 else
; 1552 :                 {
; 1553 :                     hr = pStream->Read(reinterpret_cast<void*>(m_str), cbStrLen, &cbRead);

  00210	8b f4		 mov	 esi, esp
  00212	8d 45 d0	 lea	 eax, DWORD PTR _cbRead$[ebp]
  00215	50		 push	 eax
  00216	8b 4d c4	 mov	 ecx, DWORD PTR _cbStrLen$[ebp]
  00219	51		 push	 ecx
  0021a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0021d	8b 02		 mov	 eax, DWORD PTR [edx]
  0021f	50		 push	 eax
  00220	8b 4d 08	 mov	 ecx, DWORD PTR _pStream$[ebp]
  00223	8b 11		 mov	 edx, DWORD PTR [ecx]
  00225	8b 45 08	 mov	 eax, DWORD PTR _pStream$[ebp]
  00228	50		 push	 eax
  00229	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  0022c	ff d1		 call	 ecx
  0022e	3b f4		 cmp	 esi, esp
  00230	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00235	89 45 bc	 mov	 DWORD PTR _hr$[ebp], eax

; 1554 : 
; 1555 :                     if (SUCCEEDED(hr))

  00238	83 7d bc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0023c	0f 8c ad 00 00
	00		 jl	 $LN14@ReadFromSt

; 1556 :                     {
; 1557 :                         if (cbRead != cbStrLen)

  00242	8b 55 d0	 mov	 edx, DWORD PTR _cbRead$[ebp]
  00245	3b 55 c4	 cmp	 edx, DWORD PTR _cbStrLen$[ebp]
  00248	74 36		 je	 SHORT $LN15@ReadFromSt

; 1558 :                         {
; 1559 :                             ATLTRACE(atlTraceCOM, 0, _T("Length of string data is different than expected."));

  0024a	68 00 00 00 00	 push	 OFFSET ??_C@_1GE@DKMFEMPD@?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AAo?$AAf?$AA?5?$AAs?$AAt?$AAr?$AAi?$AAn@
  0024f	6a 00		 push	 0
  00251	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00256	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  0025b	50		 push	 eax
  0025c	68 17 06 00 00	 push	 1559			; 00000617H
  00261	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@MGLNKGFD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00266	8d 4d 80	 lea	 ecx, DWORD PTR $T2[ebp]
  00269	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0026e	50		 push	 eax
  0026f	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00274	83 c4 10	 add	 esp, 16			; 00000010H

; 1560 :                             hr = E_FAIL;

  00277	c7 45 bc 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H

; 1561 :                         }

  0027e	eb 6f		 jmp	 SHORT $LN14@ReadFromSt
$LN15@ReadFromSt:

; 1562 :                         else
; 1563 :                         {
; 1564 :                             OLECHAR ch;
; 1565 :                             hr = pStream->Read(reinterpret_cast<void*>(&ch), sizeof(OLECHAR), &cbRead);

  00280	8b f4		 mov	 esi, esp
  00282	8d 45 d0	 lea	 eax, DWORD PTR _cbRead$[ebp]
  00285	50		 push	 eax
  00286	6a 02		 push	 2
  00288	8d 4d b4	 lea	 ecx, DWORD PTR _ch$7[ebp]
  0028b	51		 push	 ecx
  0028c	8b 55 08	 mov	 edx, DWORD PTR _pStream$[ebp]
  0028f	8b 02		 mov	 eax, DWORD PTR [edx]
  00291	8b 4d 08	 mov	 ecx, DWORD PTR _pStream$[ebp]
  00294	51		 push	 ecx
  00295	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00298	ff d2		 call	 edx
  0029a	3b f4		 cmp	 esi, esp
  0029c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a1	89 45 bc	 mov	 DWORD PTR _hr$[ebp], eax

; 1566 : 
; 1567 :                             if (SUCCEEDED(hr))

  002a4	83 7d bc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  002a8	7c 45		 jl	 SHORT $LN14@ReadFromSt

; 1568 :                             {
; 1569 : #ifndef _ATL_CCOMBSTR_READFROMSTREAM_INSECURE
; 1570 :                                 if (cbRead != sizeof(OLECHAR) || ch != L'\0')

  002aa	83 7d d0 02	 cmp	 DWORD PTR _cbRead$[ebp], 2
  002ae	75 08		 jne	 SHORT $LN19@ReadFromSt
  002b0	0f b7 45 b4	 movzx	 eax, WORD PTR _ch$7[ebp]
  002b4	85 c0		 test	 eax, eax
  002b6	74 37		 je	 SHORT $LN14@ReadFromSt
$LN19@ReadFromSt:

; 1571 : #else
; 1572 :                                 if (cbRead != sizeof(OLECHAR))
; 1573 : #endif
; 1574 :                                 {
; 1575 :                                     ATLTRACE(atlTraceCOM, 0, _T("Cannot read NULL terminator from stream."));

  002b8	68 00 00 00 00	 push	 OFFSET ??_C@_1FC@BKMPMMIF@?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAN?$AAU?$AAL@
  002bd	6a 00		 push	 0
  002bf	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  002c4	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  002c9	50		 push	 eax
  002ca	68 27 06 00 00	 push	 1575			; 00000627H
  002cf	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@MGLNKGFD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  002d4	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  002da	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  002df	50		 push	 eax
  002e0	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  002e5	83 c4 10	 add	 esp, 16			; 00000010H

; 1576 :                                     hr = E_FAIL;

  002e8	c7 45 bc 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H
$LN14@ReadFromSt:

; 1577 :                                 }
; 1578 :                             }
; 1579 :                         }
; 1580 :                     }
; 1581 : 
; 1582 :                     if (FAILED(hr))

  002ef	83 7d bc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  002f3	7d 1e		 jge	 SHORT $LN3@ReadFromSt

; 1583 :                     {
; 1584 : ATLPREFAST_SUPPRESS(6102)
; 1585 :                         ::SysFreeString(m_str);

  002f5	8b f4		 mov	 esi, esp
  002f7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002fa	8b 11		 mov	 edx, DWORD PTR [ecx]
  002fc	52		 push	 edx
  002fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysFreeString@4
  00303	3b f4		 cmp	 esi, esp
  00305	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1586 : ATLPREFAST_UNSUPPRESS()
; 1587 :                         m_str = NULL;

  0030a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0030d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN3@ReadFromSt:

; 1588 :                     }
; 1589 :                 }
; 1590 :             }
; 1591 :         }
; 1592 : 
; 1593 :         // If SysAllocStringByteLen or IStream::Read failed, reset seek
; 1594 :         // pointer to start of BSTR size.
; 1595 :         if (FAILED(hr) && SUCCEEDED(hrSeek))

  00313	83 7d bc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00317	7d 35		 jge	 SHORT $LN21@ReadFromSt
  00319	83 7d f8 00	 cmp	 DWORD PTR _hrSeek$[ebp], 0
  0031d	7c 2f		 jl	 SHORT $LN21@ReadFromSt

; 1596 :         {
; 1597 :             LARGE_INTEGER nOffset;
; 1598 :             nOffset.QuadPart = static_cast<LONGLONG>(nBegOffset.QuadPart);

  0031f	8b 4d ec	 mov	 ecx, DWORD PTR _nBegOffset$[ebp]
  00322	8b 55 f0	 mov	 edx, DWORD PTR _nBegOffset$[ebp+4]
  00325	89 4d a4	 mov	 DWORD PTR _nOffset$6[ebp], ecx
  00328	89 55 a8	 mov	 DWORD PTR _nOffset$6[ebp+4], edx

; 1599 :             pStream->Seek(nOffset, STREAM_SEEK_SET, NULL);

  0032b	8b f4		 mov	 esi, esp
  0032d	6a 00		 push	 0
  0032f	6a 00		 push	 0
  00331	8b 45 a8	 mov	 eax, DWORD PTR _nOffset$6[ebp+4]
  00334	50		 push	 eax
  00335	8b 4d a4	 mov	 ecx, DWORD PTR _nOffset$6[ebp]
  00338	51		 push	 ecx
  00339	8b 55 08	 mov	 edx, DWORD PTR _pStream$[ebp]
  0033c	8b 02		 mov	 eax, DWORD PTR [edx]
  0033e	8b 4d 08	 mov	 ecx, DWORD PTR _pStream$[ebp]
  00341	51		 push	 ecx
  00342	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00345	ff d2		 call	 edx
  00347	3b f4		 cmp	 esi, esp
  00349	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN21@ReadFromSt:

; 1600 :         }
; 1601 : 
; 1602 :         return hr;

  0034e	8b 45 bc	 mov	 eax, DWORD PTR _hr$[ebp]
$LN1@ReadFromSt:

; 1603 :     }

  00351	52		 push	 edx
  00352	8b cd		 mov	 ecx, ebp
  00354	50		 push	 eax
  00355	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN32@ReadFromSt
  0035b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00360	58		 pop	 eax
  00361	5a		 pop	 edx
  00362	5f		 pop	 edi
  00363	5e		 pop	 esi
  00364	81 c4 88 00 00
	00		 add	 esp, 136		; 00000088H
  0036a	3b ec		 cmp	 ebp, esp
  0036c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00371	8b e5		 mov	 esp, ebp
  00373	5d		 pop	 ebp
  00374	c2 04 00	 ret	 4
  00377	90		 npad	 1
$LN32@ReadFromSt:
  00378	06 00 00 00	 DD	 6
  0037c	00 00 00 00	 DD	 $LN31@ReadFromSt
$LN31@ReadFromSt:
  00380	ec ff ff ff	 DD	 -20			; ffffffecH
  00384	08 00 00 00	 DD	 8
  00388	00 00 00 00	 DD	 $LN25@ReadFromSt
  0038c	dc ff ff ff	 DD	 -36			; ffffffdcH
  00390	08 00 00 00	 DD	 8
  00394	00 00 00 00	 DD	 $LN26@ReadFromSt
  00398	d0 ff ff ff	 DD	 -48			; ffffffd0H
  0039c	04 00 00 00	 DD	 4
  003a0	00 00 00 00	 DD	 $LN27@ReadFromSt
  003a4	c4 ff ff ff	 DD	 -60			; ffffffc4H
  003a8	04 00 00 00	 DD	 4
  003ac	00 00 00 00	 DD	 $LN28@ReadFromSt
  003b0	b4 ff ff ff	 DD	 -76			; ffffffb4H
  003b4	02 00 00 00	 DD	 2
  003b8	00 00 00 00	 DD	 $LN29@ReadFromSt
  003bc	a4 ff ff ff	 DD	 -92			; ffffffa4H
  003c0	08 00 00 00	 DD	 8
  003c4	00 00 00 00	 DD	 $LN30@ReadFromSt
$LN30@ReadFromSt:
  003c8	6e		 DB	 110			; 0000006eH
  003c9	4f		 DB	 79			; 0000004fH
  003ca	66		 DB	 102			; 00000066H
  003cb	66		 DB	 102			; 00000066H
  003cc	73		 DB	 115			; 00000073H
  003cd	65		 DB	 101			; 00000065H
  003ce	74		 DB	 116			; 00000074H
  003cf	00		 DB	 0
$LN29@ReadFromSt:
  003d0	63		 DB	 99			; 00000063H
  003d1	68		 DB	 104			; 00000068H
  003d2	00		 DB	 0
$LN28@ReadFromSt:
  003d3	63		 DB	 99			; 00000063H
  003d4	62		 DB	 98			; 00000062H
  003d5	53		 DB	 83			; 00000053H
  003d6	74		 DB	 116			; 00000074H
  003d7	72		 DB	 114			; 00000072H
  003d8	4c		 DB	 76			; 0000004cH
  003d9	65		 DB	 101			; 00000065H
  003da	6e		 DB	 110			; 0000006eH
  003db	00		 DB	 0
$LN27@ReadFromSt:
  003dc	63		 DB	 99			; 00000063H
  003dd	62		 DB	 98			; 00000062H
  003de	52		 DB	 82			; 00000052H
  003df	65		 DB	 101			; 00000065H
  003e0	61		 DB	 97			; 00000061H
  003e1	64		 DB	 100			; 00000064H
  003e2	00		 DB	 0
$LN26@ReadFromSt:
  003e3	6e		 DB	 110			; 0000006eH
  003e4	5a		 DB	 90			; 0000005aH
  003e5	65		 DB	 101			; 00000065H
  003e6	72		 DB	 114			; 00000072H
  003e7	6f		 DB	 111			; 0000006fH
  003e8	4f		 DB	 79			; 0000004fH
  003e9	66		 DB	 102			; 00000066H
  003ea	66		 DB	 102			; 00000066H
  003eb	73		 DB	 115			; 00000073H
  003ec	65		 DB	 101			; 00000065H
  003ed	74		 DB	 116			; 00000074H
  003ee	00		 DB	 0
$LN25@ReadFromSt:
  003ef	6e		 DB	 110			; 0000006eH
  003f0	42		 DB	 66			; 00000042H
  003f1	65		 DB	 101			; 00000065H
  003f2	67		 DB	 103			; 00000067H
  003f3	4f		 DB	 79			; 0000004fH
  003f4	66		 DB	 102			; 00000066H
  003f5	66		 DB	 102			; 00000066H
  003f6	73		 DB	 115			; 00000073H
  003f7	65		 DB	 101			; 00000065H
  003f8	74		 DB	 116			; 00000074H
  003f9	00		 DB	 0
?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z ENDP	; ATL::CComBSTR::ReadFromStream
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT
_hr$ = -32						; size = 4
_cbStrLen$ = -24					; size = 4
_cb$ = -12						; size = 4
_this$ = -4						; size = 4
_pStream$ = 8						; size = 4
?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z PROC	; ATL::CComBSTR::WriteToStream, COMDAT
; _this$ = ecx

; 1469 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00012	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00015	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00018	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001b	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001e	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00021	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00024	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1470 :         ATLASSERT(pStream != NULL);

  00027	83 7d 08 00	 cmp	 DWORD PTR _pStream$[ebp], 0
  0002b	75 26		 jne	 SHORT $LN6@WriteToStr
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@PMLCOGII@?$AAp?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00037	6a 00		 push	 0
  00039	68 be 05 00 00	 push	 1470			; 000005beH
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00043	6a 02		 push	 2
  00045	e8 00 00 00 00	 call	 __CrtDbgReportW
  0004a	83 c4 18	 add	 esp, 24			; 00000018H
  0004d	83 f8 01	 cmp	 eax, 1
  00050	75 01		 jne	 SHORT $LN6@WriteToStr
  00052	cc		 int	 3
$LN6@WriteToStr:

; 1471 :         if(pStream == NULL)

  00053	83 7d 08 00	 cmp	 DWORD PTR _pStream$[ebp], 0
  00057	75 0a		 jne	 SHORT $LN2@WriteToStr

; 1472 :         {
; 1473 :             return E_INVALIDARG;

  00059	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  0005e	e9 a4 00 00 00	 jmp	 $LN1@WriteToStr
$LN2@WriteToStr:

; 1474 :         }
; 1475 : 
; 1476 :         ULONG cb;
; 1477 :         ULONG cbStrLen = CComBSTR::GetStreamSize(m_str);

  00063	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	8b 11		 mov	 edx, DWORD PTR [ecx]
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ?GetStreamSize@CComBSTR@ATL@@SAKPA_W@Z ; ATL::CComBSTR::GetStreamSize
  0006e	83 c4 04	 add	 esp, 4
  00071	89 45 e8	 mov	 DWORD PTR _cbStrLen$[ebp], eax

; 1478 :         ATLASSERT(cbStrLen >= sizeof(ULONG));

  00074	83 7d e8 04	 cmp	 DWORD PTR _cbStrLen$[ebp], 4
  00078	73 26		 jae	 SHORT $LN7@WriteToStr
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_1DE@KLNFNPEF@?$AAc?$AAb?$AAS?$AAt?$AAr?$AAL?$AAe?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAi?$AAz@
  0007f	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00084	6a 00		 push	 0
  00086	68 c6 05 00 00	 push	 1478			; 000005c6H
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00090	6a 02		 push	 2
  00092	e8 00 00 00 00	 call	 __CrtDbgReportW
  00097	83 c4 18	 add	 esp, 24			; 00000018H
  0009a	83 f8 01	 cmp	 eax, 1
  0009d	75 01		 jne	 SHORT $LN7@WriteToStr
  0009f	cc		 int	 3
$LN7@WriteToStr:

; 1479 :         cbStrLen -= sizeof(ULONG);

  000a0	8b 4d e8	 mov	 ecx, DWORD PTR _cbStrLen$[ebp]
  000a3	83 e9 04	 sub	 ecx, 4
  000a6	89 4d e8	 mov	 DWORD PTR _cbStrLen$[ebp], ecx

; 1480 : 
; 1481 :         HRESULT hr = pStream->Write((void*) &cbStrLen, sizeof(cbStrLen), &cb);

  000a9	8b f4		 mov	 esi, esp
  000ab	8d 55 f4	 lea	 edx, DWORD PTR _cb$[ebp]
  000ae	52		 push	 edx
  000af	6a 04		 push	 4
  000b1	8d 45 e8	 lea	 eax, DWORD PTR _cbStrLen$[ebp]
  000b4	50		 push	 eax
  000b5	8b 4d 08	 mov	 ecx, DWORD PTR _pStream$[ebp]
  000b8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ba	8b 45 08	 mov	 eax, DWORD PTR _pStream$[ebp]
  000bd	50		 push	 eax
  000be	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  000c1	ff d1		 call	 ecx
  000c3	3b f4		 cmp	 esi, esp
  000c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ca	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax

; 1482 :         if (FAILED(hr))

  000cd	83 7d e0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000d1	7d 05		 jge	 SHORT $LN3@WriteToStr

; 1483 :         {
; 1484 :             return hr;

  000d3	8b 45 e0	 mov	 eax, DWORD PTR _hr$[ebp]
  000d6	eb 2f		 jmp	 SHORT $LN1@WriteToStr
$LN3@WriteToStr:

; 1485 :         }
; 1486 : 
; 1487 :         if (cbStrLen == 0)

  000d8	83 7d e8 00	 cmp	 DWORD PTR _cbStrLen$[ebp], 0
  000dc	75 04		 jne	 SHORT $LN4@WriteToStr

; 1488 :         {
; 1489 :             return S_OK;

  000de	33 c0		 xor	 eax, eax
  000e0	eb 25		 jmp	 SHORT $LN1@WriteToStr
$LN4@WriteToStr:

; 1490 :         }
; 1491 :         return pStream->Write((void*) m_str, cbStrLen, &cb);

  000e2	8b f4		 mov	 esi, esp
  000e4	8d 55 f4	 lea	 edx, DWORD PTR _cb$[ebp]
  000e7	52		 push	 edx
  000e8	8b 45 e8	 mov	 eax, DWORD PTR _cbStrLen$[ebp]
  000eb	50		 push	 eax
  000ec	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ef	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f1	52		 push	 edx
  000f2	8b 45 08	 mov	 eax, DWORD PTR _pStream$[ebp]
  000f5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f7	8b 55 08	 mov	 edx, DWORD PTR _pStream$[ebp]
  000fa	52		 push	 edx
  000fb	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  000fe	ff d0		 call	 eax
  00100	3b f4		 cmp	 esi, esp
  00102	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@WriteToStr:

; 1492 :     }

  00107	52		 push	 edx
  00108	8b cd		 mov	 ecx, ebp
  0010a	50		 push	 eax
  0010b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@WriteToStr
  00111	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00116	58		 pop	 eax
  00117	5a		 pop	 edx
  00118	5e		 pop	 esi
  00119	83 c4 20	 add	 esp, 32			; 00000020H
  0011c	3b ec		 cmp	 ebp, esp
  0011e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00123	8b e5		 mov	 esp, ebp
  00125	5d		 pop	 ebp
  00126	c2 04 00	 ret	 4
  00129	0f 1f 00	 npad	 3
$LN11@WriteToStr:
  0012c	02 00 00 00	 DD	 2
  00130	00 00 00 00	 DD	 $LN10@WriteToStr
$LN10@WriteToStr:
  00134	f4 ff ff ff	 DD	 -12			; fffffff4H
  00138	04 00 00 00	 DD	 4
  0013c	00 00 00 00	 DD	 $LN8@WriteToStr
  00140	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00144	04 00 00 00	 DD	 4
  00148	00 00 00 00	 DD	 $LN9@WriteToStr
$LN9@WriteToStr:
  0014c	63		 DB	 99			; 00000063H
  0014d	62		 DB	 98			; 00000062H
  0014e	53		 DB	 83			; 00000053H
  0014f	74		 DB	 116			; 00000074H
  00150	72		 DB	 114			; 00000072H
  00151	4c		 DB	 76			; 0000004cH
  00152	65		 DB	 101			; 00000065H
  00153	6e		 DB	 110			; 0000006eH
  00154	00		 DB	 0
$LN8@WriteToStr:
  00155	63		 DB	 99			; 00000063H
  00156	62		 DB	 98			; 00000062H
  00157	00		 DB	 0
?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z ENDP	; ATL::CComBSTR::WriteToStream
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??8CComBSTR@ATL@@QBE_NH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nNull$ = 8						; size = 4
??8CComBSTR@ATL@@QBE_NH@Z PROC				; ATL::CComBSTR::operator==, COMDAT
; _this$ = ecx

; 1367 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1368 :         ATLASSERT(nNull == 0);

  0000e	83 7d 08 00	 cmp	 DWORD PTR _nNull$[ebp], 0
  00012	74 26		 je	 SHORT $LN3@operator
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@ILBPLEEF@?$AAn?$AAN?$AAu?$AAl?$AAl?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0001e	6a 00		 push	 0
  00020	68 58 05 00 00	 push	 1368			; 00000558H
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002a	6a 02		 push	 2
  0002c	e8 00 00 00 00	 call	 __CrtDbgReportW
  00031	83 c4 18	 add	 esp, 24			; 00000018H
  00034	83 f8 01	 cmp	 eax, 1
  00037	75 01		 jne	 SHORT $LN3@operator
  00039	cc		 int	 3
$LN3@operator:

; 1369 :         (void)nNull;
; 1370 :         return (!*this);

  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ??7CComBSTR@ATL@@QBE_NXZ ; ATL::CComBSTR::operator!

; 1371 :     }

  00042	83 c4 04	 add	 esp, 4
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
??8CComBSTR@ATL@@QBE_NH@Z ENDP				; ATL::CComBSTR::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??9CComBSTR@ATL@@QBE_NH@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_nNull$ = 8						; size = 4
??9CComBSTR@ATL@@QBE_NH@Z PROC				; ATL::CComBSTR::operator!=, COMDAT
; _this$ = ecx

; 1345 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1346 :         return !operator==(nNull);

  00017	8b 45 08	 mov	 eax, DWORD PTR _nNull$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8CComBSTR@ATL@@QBE_NH@Z ; ATL::CComBSTR::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]

; 1347 :     }

  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9CComBSTR@ATL@@QBE_NH@Z ENDP				; ATL::CComBSTR::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??7CComBSTR@ATL@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
??7CComBSTR@ATL@@QBE_NXZ PROC				; ATL::CComBSTR::operator!, COMDAT
; _this$ = ecx

; 985  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 986  :         return (m_str == NULL);

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001d	75 09		 jne	 SHORT $LN3@operator
  0001f	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00026	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@operator:
  0002f	8a 45 f8	 mov	 al, BYTE PTR tv66[ebp]

; 987  :     }

  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
??7CComBSTR@ATL@@QBE_NXZ ENDP				; ATL::CComBSTR::operator!
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?Empty@CComBSTR@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@CComBSTR@ATL@@QAEXXZ PROC			; ATL::CComBSTR::Empty, COMDAT
; _this$ = ecx

; 979  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 980  :         ::SysFreeString(m_str);

  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysFreeString@4
  0001d	3b f4		 cmp	 esi, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 981  :         m_str = NULL;

  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 982  :     }

  0002d	5e		 pop	 esi
  0002e	83 c4 04	 add	 esp, 4
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Empty@CComBSTR@ATL@@QAEXXZ ENDP			; ATL::CComBSTR::Empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPA_WXZ
_TEXT	SEGMENT
_s$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@CComBSTR@ATL@@QAEPA_WXZ PROC			; ATL::CComBSTR::Detach, COMDAT
; _this$ = ecx

; 972  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 973  :         BSTR s = m_str;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 4d f8	 mov	 DWORD PTR _s$[ebp], ecx

; 974  :         m_str = NULL;

  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 975  :         return s;

  00028	8b 45 f8	 mov	 eax, DWORD PTR _s$[ebp]

; 976  :     }

  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?Detach@CComBSTR@ATL@@QAEPA_WXZ ENDP			; ATL::CComBSTR::Detach
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?Attach@CComBSTR@ATL@@QAEXPA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_src$ = 8						; size = 4
?Attach@CComBSTR@ATL@@QAEXPA_W@Z PROC			; ATL::CComBSTR::Attach, COMDAT
; _this$ = ecx

; 963  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 964  :         if (m_str != src)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	3b 4d 08	 cmp	 ecx, DWORD PTR _src$[ebp]
  00017	74 1d		 je	 SHORT $LN1@Attach

; 965  :         {
; 966  :             ::SysFreeString(m_str);

  00019	8b f4		 mov	 esi, esp
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001e	8b 02		 mov	 eax, DWORD PTR [edx]
  00020	50		 push	 eax
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysFreeString@4
  00027	3b f4		 cmp	 esi, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 967  :             m_str = src;

  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	8b 55 08	 mov	 edx, DWORD PTR _src$[ebp]
  00034	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Attach:

; 968  :         }
; 969  :     }

  00036	5e		 pop	 esi
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?Attach@CComBSTR@ATL@@QAEXPA_W@Z ENDP			; ATL::CComBSTR::Attach
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??ICComBSTR@ATL@@QAEPAPA_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??ICComBSTR@ATL@@QAEPAPA_WXZ PROC			; ATL::CComBSTR::operator&, COMDAT
; _this$ = ecx

; 901  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 902  : #ifndef ATL_NO_CCOMBSTR_ADDRESS_OF_ASSERT
; 903  :         ATLASSERT(!*this);
; 904  : #endif
; 905  :         return &m_str;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 906  :     }

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??ICComBSTR@ATL@@QAEPAPA_WXZ ENDP			; ATL::CComBSTR::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??BCComBSTR@ATL@@QBEPA_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCComBSTR@ATL@@QBEPA_WXZ PROC				; ATL::CComBSTR::operator wchar_t *, COMDAT
; _this$ = ecx

; 889  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 890  :         return m_str;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 891  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??BCComBSTR@ATL@@QBEPA_WXZ ENDP				; ATL::CComBSTR::operator wchar_t *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Length@CComBSTR@ATL@@QBEIXZ PROC			; ATL::CComBSTR::Length, COMDAT
; _this$ = ecx

; 879  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 880  :         return ::SysStringLen(m_str);

  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysStringLen@4
  0001d	3b f4		 cmp	 esi, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 881  :     }

  00024	5e		 pop	 esi
  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?Length@CComBSTR@ATL@@QBEIXZ ENDP			; ATL::CComBSTR::Length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComBSTR@ATL@@QAE@XZ PROC				; ATL::CComBSTR::~CComBSTR, COMDAT
; _this$ = ecx

; 1673 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1674 :     ::SysFreeString(m_str);

  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysFreeString@4
  0001d	3b f4		 cmp	 esi, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1675 : }

  00024	5e		 pop	 esi
  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??1CComBSTR@ATL@@QAE@XZ ENDP				; ATL::CComBSTR::~CComBSTR
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComBSTR@ATL@@QAE@XZ PROC				; ATL::CComBSTR::CComBSTR, COMDAT
; _this$ = ecx

; 726  :     CComBSTR() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 727  :     {
; 728  :         m_str = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 729  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0CComBSTR@ATL@@QAE@XZ ENDP				; ATL::CComBSTR::CComBSTR
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IUnknown>::~CComPtr<IUnknown>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IUnknown>::~CComPtrBase<IUnknown>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IUnknown>::~CComPtr<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??4?$CComPtr@UIUnknown@@@ATL@@QAEPAUIUnknown@@PAU2@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??4?$CComPtr@UIUnknown@@@ATL@@QAEPAUIUnknown@@PAU2@@Z PROC ; ATL::CComPtr<IUnknown>::operator=, COMDAT
; _this$ = ecx

; 328  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 329  :         if(this->p!=lp)

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	3b 4d 08	 cmp	 ecx, DWORD PTR _lp$[ebp]
  0001f	74 1f		 je	 SHORT $LN2@operator

; 330  :         {
; 331  :             CComPtr(lp).Swap(*this);

  00021	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00024	52		 push	 edx
  00025	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]
  00028	50		 push	 eax
  00029	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  0002c	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ?Swap@?$CComPtrBase@UIUnknown@@@ATL@@IAEXAAV12@@Z ; ATL::CComPtrBase<IUnknown>::Swap
  00038	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003b	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
$LN2@operator:

; 332  :         }
; 333  :         return *this;

  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *

; 334  :     }

  00048	83 c4 08	 add	 esp, 8
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??4?$CComPtr@UIUnknown@@@ATL@@QAEPAUIUnknown@@PAU2@@Z ENDP ; ATL::CComPtr<IUnknown>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtr@UIUnknown@@@ATL@@QAE@ABV01@@Z PROC		; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>, COMDAT
; _this$ = ecx

; 325  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 324  :         CComPtrBase<T>(lp.p)

  0000e	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]
  00011	8b 08		 mov	 ecx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@PAUIUnknown@@@Z ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>

; 326  :     }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??0?$CComPtr@UIUnknown@@@ATL@@QAE@ABV01@@Z ENDP		; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z PROC	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>, COMDAT
; _this$ = ecx

; 321  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 320  :         CComPtrBase<T>(lp)

  0000e	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@PAUIUnknown@@@Z ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>

; 322  :     }

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z ENDP	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>, COMDAT
; _this$ = ecx

; 316  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>

; 318  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ
_TEXT	SEGMENT
_pt$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ PROC ; ATL::CComPtrBase<IUnknown>::Detach, COMDAT
; _this$ = ecx

; 254  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 255  :         T* pt = p;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 4d f8	 mov	 DWORD PTR _pt$[ebp], ecx

; 256  :         p = NULL;

  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 257  :         return pt;

  00028	8b 45 f8	 mov	 eax, DWORD PTR _pt$[ebp]

; 258  :     }

  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ ENDP ; ATL::CComPtrBase<IUnknown>::Detach
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??8?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z PROC ; ATL::CComPtrBase<IUnknown>::operator==, COMDAT
; _this$ = ecx

; 222  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 223  :         return p == pT;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	3b 4d 08	 cmp	 ecx, DWORD PTR _pT$[ebp]
  0001f	75 09		 jne	 SHORT $LN3@operator
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@operator:
  00031	8a 45 f8	 mov	 al, BYTE PTR tv66[ebp]

; 224  :     }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??8?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z ENDP ; ATL::CComPtrBase<IUnknown>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??9?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??9?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z PROC ; ATL::CComPtrBase<IUnknown>::operator!=, COMDAT
; _this$ = ecx

; 217  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  :         return !operator==(pT);

  00017	8b 45 08	 mov	 eax, DWORD PTR _pT$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z ; ATL::CComPtrBase<IUnknown>::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]

; 219  :     }

  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z ENDP ; ATL::CComPtrBase<IUnknown>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ PROC ; ATL::CComPtrBase<IUnknown>::operator->, COMDAT
; _this$ = ecx

; 203  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :         ATLASSERT(p!=NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	75 26		 jne	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19JHCPJMAL@?$AAp?$AA?$CB?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 cc 00 00 00	 push	 204			; 000000ccH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 205  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]

; 206  :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ENDP ; ATL::CComPtrBase<IUnknown>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ PROC ; ATL::CComPtrBase<IUnknown>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ENDP ; ATL::CComPtrBase<IUnknown>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ PROC ; ATL::CComPtrBase<IUnknown>::operator IUnknown *, COMDAT
; _this$ = ecx

; 187  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 188  :         return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 189  :     }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ENDP ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ PROC		; ATL::CComPtrBase<IUnknown>::~CComPtrBase<IUnknown>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<IUnknown>::~CComPtrBase<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?Swap@?$CComPtrBase@UIUnknown@@@ATL@@IAEXAAV12@@Z
_TEXT	SEGMENT
_pTemp$ = -8						; size = 4
_this$ = -4						; size = 4
_other$ = 8						; size = 4
?Swap@?$CComPtrBase@UIUnknown@@@ATL@@IAEXAAV12@@Z PROC	; ATL::CComPtrBase<IUnknown>::Swap, COMDAT
; _this$ = ecx

; 174  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 175  :         T* pTemp = p;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 4d f8	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 176  :         p = other.p;

  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	8b 45 08	 mov	 eax, DWORD PTR _other$[ebp]
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	89 0a		 mov	 DWORD PTR [edx], ecx

; 177  :         other.p = pTemp;

  00029	8b 55 08	 mov	 edx, DWORD PTR _other$[ebp]
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _pTemp$[ebp]
  0002f	89 02		 mov	 DWORD PTR [edx], eax

; 178  :     }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
?Swap@?$CComPtrBase@UIUnknown@@@ATL@@IAEXAAV12@@Z ENDP	; ATL::CComPtrBase<IUnknown>::Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@PAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@PAUIUnknown@@@Z PROC ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>, COMDAT
; _this$ = ecx

; 167  :     CComPtrBase(_Inout_opt_ T* lp) throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 168  :     {
; 169  :         p = lp;

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _lp$[ebp]
  00015	89 08		 mov	 DWORD PTR [eax], ecx

; 170  :         if (p != NULL)

  00017	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0001d	74 1b		 je	 SHORT $LN1@CComPtrBas

; 171  :             p->AddRef();

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 08		 mov	 ecx, DWORD PTR [eax]
  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	8b 02		 mov	 eax, DWORD PTR [edx]
  00029	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0002b	8b f4		 mov	 esi, esp
  0002d	50		 push	 eax
  0002e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00031	ff d2		 call	 edx
  00033	3b f4		 cmp	 esi, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 172  :     }

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	5e		 pop	 esi
  0003e	83 c4 04	 add	 esp, 4
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@PAUIUnknown@@@Z ENDP ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ PROC		; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IDispatch>::~CComPtr<IDispatch>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IDispatch>::~CComPtr<IDispatch>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?GetProperty@?$CComPtr@UIDispatch@@@ATL@@SAJPAUIDispatch@@JPAUtagVARIANT@@@Z
_TEXT	SEGMENT
$T1 = -32						; size = 8
_dispparamsNoArgs$ = -20				; size = 16
_pDispatch$ = 8						; size = 4
_dwDispID$ = 12						; size = 4
_pVar$ = 16						; size = 4
?GetProperty@?$CComPtr@UIDispatch@@@ATL@@SAJPAUIDispatch@@JPAUtagVARIANT@@@Z PROC ; ATL::CComPtr<IDispatch>::GetProperty, COMDAT

; 577  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00012	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00015	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00018	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001b	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001e	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00021	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 578  :         ATLASSERT(pDispatch);

  00024	83 7d 08 00	 cmp	 DWORD PTR _pDispatch$[ebp], 0
  00028	75 26		 jne	 SHORT $LN5@GetPropert
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@LOHOFOCD@?$AAp?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt?$AAc?$AAh@
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00034	6a 00		 push	 0
  00036	68 42 02 00 00	 push	 578			; 00000242H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00040	6a 02		 push	 2
  00042	e8 00 00 00 00	 call	 __CrtDbgReportW
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN5@GetPropert
  0004f	cc		 int	 3
$LN5@GetPropert:

; 579  :         ATLASSERT(pVar != NULL);

  00050	83 7d 10 00	 cmp	 DWORD PTR _pVar$[ebp], 0
  00054	75 26		 jne	 SHORT $LN6@GetPropert
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@GIHDMMGE@?$AAp?$AAV?$AAa?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00060	6a 00		 push	 0
  00062	68 43 02 00 00	 push	 579			; 00000243H
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0006c	6a 02		 push	 2
  0006e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00073	83 c4 18	 add	 esp, 24			; 00000018H
  00076	83 f8 01	 cmp	 eax, 1
  00079	75 01		 jne	 SHORT $LN6@GetPropert
  0007b	cc		 int	 3
$LN6@GetPropert:

; 580  :         if (pVar == NULL)

  0007c	83 7d 10 00	 cmp	 DWORD PTR _pVar$[ebp], 0
  00080	75 0a		 jne	 SHORT $LN2@GetPropert

; 581  :             return E_POINTER;

  00082	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00087	e9 89 00 00 00	 jmp	 $LN1@GetPropert
$LN2@GetPropert:

; 582  : 
; 583  :         if (pDispatch == NULL)

  0008c	83 7d 08 00	 cmp	 DWORD PTR _pDispatch$[ebp], 0
  00090	75 07		 jne	 SHORT $LN3@GetPropert

; 584  :             return E_INVALIDARG;

  00092	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00097	eb 7c		 jmp	 SHORT $LN1@GetPropert
$LN3@GetPropert:

; 585  : 
; 586  :         ATLTRACE(atlTraceCOM, 2, _T("CPropertyHelper::GetProperty\n"));

  00099	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@OIOAIJPB@?$AAC?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr@
  0009e	6a 02		 push	 2
  000a0	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  000a5	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  000aa	50		 push	 eax
  000ab	68 4a 02 00 00	 push	 586			; 0000024aH
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@MGLNKGFD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000b5	8d 4d e0	 lea	 ecx, DWORD PTR $T1[ebp]
  000b8	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000bd	50		 push	 eax
  000be	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000c3	83 c4 10	 add	 esp, 16			; 00000010H

; 587  :         DISPPARAMS dispparamsNoArgs = {NULL, NULL, 0, 0};

  000c6	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _dispparamsNoArgs$[ebp], 0
  000cd	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _dispparamsNoArgs$[ebp+4], 0
  000d4	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _dispparamsNoArgs$[ebp+8], 0
  000db	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dispparamsNoArgs$[ebp+12], 0

; 588  :         return pDispatch->Invoke(dwDispID, IID_NULL,

  000e2	8b f4		 mov	 esi, esp
  000e4	6a 00		 push	 0
  000e6	6a 00		 push	 0
  000e8	8b 55 10	 mov	 edx, DWORD PTR _pVar$[ebp]
  000eb	52		 push	 edx
  000ec	8d 45 ec	 lea	 eax, DWORD PTR _dispparamsNoArgs$[ebp]
  000ef	50		 push	 eax
  000f0	6a 02		 push	 2
  000f2	68 00 04 00 00	 push	 1024			; 00000400H
  000f7	68 00 00 00 00	 push	 OFFSET _GUID_NULL
  000fc	8b 4d 0c	 mov	 ecx, DWORD PTR _dwDispID$[ebp]
  000ff	51		 push	 ecx
  00100	8b 55 08	 mov	 edx, DWORD PTR _pDispatch$[ebp]
  00103	8b 02		 mov	 eax, DWORD PTR [edx]
  00105	8b 4d 08	 mov	 ecx, DWORD PTR _pDispatch$[ebp]
  00108	51		 push	 ecx
  00109	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0010c	ff d2		 call	 edx
  0010e	3b f4		 cmp	 esi, esp
  00110	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@GetPropert:

; 589  :                 LOCALE_USER_DEFAULT, DISPATCH_PROPERTYGET,
; 590  :                 &dispparamsNoArgs, pVar, NULL, NULL);
; 591  :     }

  00115	52		 push	 edx
  00116	8b cd		 mov	 ecx, ebp
  00118	50		 push	 eax
  00119	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@GetPropert
  0011f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00124	58		 pop	 eax
  00125	5a		 pop	 edx
  00126	5e		 pop	 esi
  00127	83 c4 20	 add	 esp, 32			; 00000020H
  0012a	3b ec		 cmp	 ebp, esp
  0012c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00131	8b e5		 mov	 esp, ebp
  00133	5d		 pop	 ebp
  00134	c3		 ret	 0
  00135	0f 1f 00	 npad	 3
$LN9@GetPropert:
  00138	01 00 00 00	 DD	 1
  0013c	00 00 00 00	 DD	 $LN8@GetPropert
$LN8@GetPropert:
  00140	ec ff ff ff	 DD	 -20			; ffffffecH
  00144	10 00 00 00	 DD	 16			; 00000010H
  00148	00 00 00 00	 DD	 $LN7@GetPropert
$LN7@GetPropert:
  0014c	64		 DB	 100			; 00000064H
  0014d	69		 DB	 105			; 00000069H
  0014e	73		 DB	 115			; 00000073H
  0014f	70		 DB	 112			; 00000070H
  00150	70		 DB	 112			; 00000070H
  00151	61		 DB	 97			; 00000061H
  00152	72		 DB	 114			; 00000072H
  00153	61		 DB	 97			; 00000061H
  00154	6d		 DB	 109			; 0000006dH
  00155	73		 DB	 115			; 00000073H
  00156	4e		 DB	 78			; 0000004eH
  00157	6f		 DB	 111			; 0000006fH
  00158	41		 DB	 65			; 00000041H
  00159	72		 DB	 114			; 00000072H
  0015a	67		 DB	 103			; 00000067H
  0015b	73		 DB	 115			; 00000073H
  0015c	00		 DB	 0
?GetProperty@?$CComPtr@UIDispatch@@@ATL@@SAJPAUIDispatch@@JPAUtagVARIANT@@@Z ENDP ; ATL::CComPtr<IDispatch>::GetProperty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?PutProperty@?$CComPtr@UIDispatch@@@ATL@@SAJPAUIDispatch@@JPAUtagVARIANT@@@Z
_TEXT	SEGMENT
$T1 = -48						; size = 8
_hr$2 = -40						; size = 4
_dispidPut$ = -32					; size = 4
_dispparams$ = -20					; size = 16
_pDispatch$ = 8						; size = 4
_dwDispID$ = 12						; size = 4
_pVar$ = 16						; size = 4
?PutProperty@?$CComPtr@UIDispatch@@@ATL@@SAJPAUIDispatch@@JPAUtagVARIANT@@@Z PROC ; ATL::CComPtr<IDispatch>::PutProperty, COMDAT

; 544  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d d0	 lea	 edi, DWORD PTR [ebp-48]
  0000b	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd

; 545  :         ATLASSERT(pDispatch);

  00017	83 7d 08 00	 cmp	 DWORD PTR _pDispatch$[ebp], 0
  0001b	75 26		 jne	 SHORT $LN8@PutPropert
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@LOHOFOCD@?$AAp?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt?$AAc?$AAh@
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00027	6a 00		 push	 0
  00029	68 21 02 00 00	 push	 545			; 00000221H
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00033	6a 02		 push	 2
  00035	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003a	83 c4 18	 add	 esp, 24			; 00000018H
  0003d	83 f8 01	 cmp	 eax, 1
  00040	75 01		 jne	 SHORT $LN8@PutPropert
  00042	cc		 int	 3
$LN8@PutPropert:

; 546  :         ATLASSERT(pVar != NULL);

  00043	83 7d 10 00	 cmp	 DWORD PTR _pVar$[ebp], 0
  00047	75 26		 jne	 SHORT $LN9@PutPropert
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@GIHDMMGE@?$AAp?$AAV?$AAa?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00053	6a 00		 push	 0
  00055	68 22 02 00 00	 push	 546			; 00000222H
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0005f	6a 02		 push	 2
  00061	e8 00 00 00 00	 call	 __CrtDbgReportW
  00066	83 c4 18	 add	 esp, 24			; 00000018H
  00069	83 f8 01	 cmp	 eax, 1
  0006c	75 01		 jne	 SHORT $LN9@PutPropert
  0006e	cc		 int	 3
$LN9@PutPropert:

; 547  :         if (pVar == NULL)

  0006f	83 7d 10 00	 cmp	 DWORD PTR _pVar$[ebp], 0
  00073	75 0a		 jne	 SHORT $LN2@PutPropert

; 548  :             return E_POINTER;

  00075	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0007a	e9 0d 01 00 00	 jmp	 $LN1@PutPropert
$LN2@PutPropert:

; 549  : 
; 550  :         if (pDispatch == NULL)

  0007f	83 7d 08 00	 cmp	 DWORD PTR _pDispatch$[ebp], 0
  00083	75 0a		 jne	 SHORT $LN3@PutPropert

; 551  :             return E_INVALIDARG;

  00085	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  0008a	e9 fd 00 00 00	 jmp	 $LN1@PutPropert
$LN3@PutPropert:

; 552  : 
; 553  :         ATLTRACE(atlTraceCOM, 2, _T("CPropertyHelper::PutProperty\n"));

  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@OFBKNGJC@?$AAC?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr@
  00094	6a 02		 push	 2
  00096	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  0009b	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  000a0	50		 push	 eax
  000a1	68 29 02 00 00	 push	 553			; 00000229H
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@MGLNKGFD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000ab	8d 4d d0	 lea	 ecx, DWORD PTR $T1[ebp]
  000ae	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  000b9	83 c4 10	 add	 esp, 16			; 00000010H

; 554  :         DISPPARAMS dispparams = {NULL, NULL, 1, 1};

  000bc	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _dispparams$[ebp], 0
  000c3	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _dispparams$[ebp+4], 0
  000ca	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _dispparams$[ebp+8], 1
  000d1	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _dispparams$[ebp+12], 1

; 555  :         dispparams.rgvarg = pVar;

  000d8	8b 55 10	 mov	 edx, DWORD PTR _pVar$[ebp]
  000db	89 55 ec	 mov	 DWORD PTR _dispparams$[ebp], edx

; 556  :         DISPID dispidPut = DISPID_PROPERTYPUT;

  000de	c7 45 e0 fd ff
	ff ff		 mov	 DWORD PTR _dispidPut$[ebp], -3 ; fffffffdH

; 557  :         dispparams.rgdispidNamedArgs = &dispidPut;

  000e5	8d 45 e0	 lea	 eax, DWORD PTR _dispidPut$[ebp]
  000e8	89 45 f0	 mov	 DWORD PTR _dispparams$[ebp+4], eax

; 558  : 
; 559  :         if (pVar->vt == VT_UNKNOWN || pVar->vt == VT_DISPATCH ||
; 560  :             (pVar->vt & VT_ARRAY) || (pVar->vt & VT_BYREF))

  000eb	8b 4d 10	 mov	 ecx, DWORD PTR _pVar$[ebp]
  000ee	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  000f1	83 fa 0d	 cmp	 edx, 13			; 0000000dH
  000f4	74 26		 je	 SHORT $LN5@PutPropert
  000f6	8b 45 10	 mov	 eax, DWORD PTR _pVar$[ebp]
  000f9	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000fc	83 f9 09	 cmp	 ecx, 9
  000ff	74 1b		 je	 SHORT $LN5@PutPropert
  00101	8b 55 10	 mov	 edx, DWORD PTR _pVar$[ebp]
  00104	0f b7 02	 movzx	 eax, WORD PTR [edx]
  00107	25 00 20 00 00	 and	 eax, 8192		; 00002000H
  0010c	75 0e		 jne	 SHORT $LN5@PutPropert
  0010e	8b 4d 10	 mov	 ecx, DWORD PTR _pVar$[ebp]
  00111	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00114	81 e2 00 40 00
	00		 and	 edx, 16384		; 00004000H
  0011a	74 3f		 je	 SHORT $LN4@PutPropert
$LN5@PutPropert:

; 561  :         {
; 562  :             HRESULT hr = pDispatch->Invoke(dwDispID, IID_NULL,

  0011c	8b f4		 mov	 esi, esp
  0011e	6a 00		 push	 0
  00120	6a 00		 push	 0
  00122	6a 00		 push	 0
  00124	8d 45 ec	 lea	 eax, DWORD PTR _dispparams$[ebp]
  00127	50		 push	 eax
  00128	6a 08		 push	 8
  0012a	68 00 04 00 00	 push	 1024			; 00000400H
  0012f	68 00 00 00 00	 push	 OFFSET _GUID_NULL
  00134	8b 4d 0c	 mov	 ecx, DWORD PTR _dwDispID$[ebp]
  00137	51		 push	 ecx
  00138	8b 55 08	 mov	 edx, DWORD PTR _pDispatch$[ebp]
  0013b	8b 02		 mov	 eax, DWORD PTR [edx]
  0013d	8b 4d 08	 mov	 ecx, DWORD PTR _pDispatch$[ebp]
  00140	51		 push	 ecx
  00141	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00144	ff d2		 call	 edx
  00146	3b f4		 cmp	 esi, esp
  00148	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014d	89 45 d8	 mov	 DWORD PTR _hr$2[ebp], eax

; 563  :                 LOCALE_USER_DEFAULT, DISPATCH_PROPERTYPUTREF,
; 564  :                 &dispparams, NULL, NULL, NULL);
; 565  :             if (SUCCEEDED(hr))

  00150	83 7d d8 00	 cmp	 DWORD PTR _hr$2[ebp], 0
  00154	7c 05		 jl	 SHORT $LN4@PutPropert

; 566  :                 return hr;

  00156	8b 45 d8	 mov	 eax, DWORD PTR _hr$2[ebp]
  00159	eb 31		 jmp	 SHORT $LN1@PutPropert
$LN4@PutPropert:

; 567  :         }
; 568  :         return pDispatch->Invoke(dwDispID, IID_NULL,

  0015b	8b f4		 mov	 esi, esp
  0015d	6a 00		 push	 0
  0015f	6a 00		 push	 0
  00161	6a 00		 push	 0
  00163	8d 45 ec	 lea	 eax, DWORD PTR _dispparams$[ebp]
  00166	50		 push	 eax
  00167	6a 04		 push	 4
  00169	68 00 04 00 00	 push	 1024			; 00000400H
  0016e	68 00 00 00 00	 push	 OFFSET _GUID_NULL
  00173	8b 4d 0c	 mov	 ecx, DWORD PTR _dwDispID$[ebp]
  00176	51		 push	 ecx
  00177	8b 55 08	 mov	 edx, DWORD PTR _pDispatch$[ebp]
  0017a	8b 02		 mov	 eax, DWORD PTR [edx]
  0017c	8b 4d 08	 mov	 ecx, DWORD PTR _pDispatch$[ebp]
  0017f	51		 push	 ecx
  00180	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00183	ff d2		 call	 edx
  00185	3b f4		 cmp	 esi, esp
  00187	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@PutPropert:

; 569  :                 LOCALE_USER_DEFAULT, DISPATCH_PROPERTYPUT,
; 570  :                 &dispparams, NULL, NULL, NULL);
; 571  :     }

  0018c	52		 push	 edx
  0018d	8b cd		 mov	 ecx, ebp
  0018f	50		 push	 eax
  00190	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@PutPropert
  00196	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0019b	58		 pop	 eax
  0019c	5a		 pop	 edx
  0019d	5f		 pop	 edi
  0019e	5e		 pop	 esi
  0019f	83 c4 30	 add	 esp, 48			; 00000030H
  001a2	3b ec		 cmp	 ebp, esp
  001a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a9	8b e5		 mov	 esp, ebp
  001ab	5d		 pop	 ebp
  001ac	c3		 ret	 0
  001ad	0f 1f 00	 npad	 3
$LN13@PutPropert:
  001b0	02 00 00 00	 DD	 2
  001b4	00 00 00 00	 DD	 $LN12@PutPropert
$LN12@PutPropert:
  001b8	ec ff ff ff	 DD	 -20			; ffffffecH
  001bc	10 00 00 00	 DD	 16			; 00000010H
  001c0	00 00 00 00	 DD	 $LN10@PutPropert
  001c4	e0 ff ff ff	 DD	 -32			; ffffffe0H
  001c8	04 00 00 00	 DD	 4
  001cc	00 00 00 00	 DD	 $LN11@PutPropert
$LN11@PutPropert:
  001d0	64		 DB	 100			; 00000064H
  001d1	69		 DB	 105			; 00000069H
  001d2	73		 DB	 115			; 00000073H
  001d3	70		 DB	 112			; 00000070H
  001d4	69		 DB	 105			; 00000069H
  001d5	64		 DB	 100			; 00000064H
  001d6	50		 DB	 80			; 00000050H
  001d7	75		 DB	 117			; 00000075H
  001d8	74		 DB	 116			; 00000074H
  001d9	00		 DB	 0
$LN10@PutPropert:
  001da	64		 DB	 100			; 00000064H
  001db	69		 DB	 105			; 00000069H
  001dc	73		 DB	 115			; 00000073H
  001dd	70		 DB	 112			; 00000070H
  001de	70		 DB	 112			; 00000070H
  001df	61		 DB	 97			; 00000061H
  001e0	72		 DB	 114			; 00000072H
  001e1	61		 DB	 97			; 00000061H
  001e2	6d		 DB	 109			; 0000006dH
  001e3	73		 DB	 115			; 00000073H
  001e4	00		 DB	 0
?PutProperty@?$CComPtr@UIDispatch@@@ATL@@SAJPAUIDispatch@@JPAUtagVARIANT@@@Z ENDP ; ATL::CComPtr<IDispatch>::PutProperty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?PutProperty@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwDispID$ = 8						; size = 4
_pVar$ = 12						; size = 4
?PutProperty@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@@Z PROC ; ATL::CComPtr<IDispatch>::PutProperty, COMDAT
; _this$ = ecx

; 446  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 447  :         return PutProperty(this->p, dwDispID, pVar);

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _pVar$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwDispID$[ebp]
  00015	51		 push	 ecx
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	8b 02		 mov	 eax, DWORD PTR [edx]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?PutProperty@?$CComPtr@UIDispatch@@@ATL@@SAJPAUIDispatch@@JPAUtagVARIANT@@@Z ; ATL::CComPtr<IDispatch>::PutProperty
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH

; 448  :     }

  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
?PutProperty@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@@Z ENDP ; ATL::CComPtr<IDispatch>::PutProperty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?GetProperty@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwDispID$ = 8						; size = 4
_pVar$ = 12						; size = 4
?GetProperty@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@@Z PROC ; ATL::CComPtr<IDispatch>::GetProperty, COMDAT
; _this$ = ecx

; 428  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 429  :         return GetProperty(this->p, dwDispID, pVar);

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _pVar$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwDispID$[ebp]
  00015	51		 push	 ecx
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	8b 02		 mov	 eax, DWORD PTR [edx]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?GetProperty@?$CComPtr@UIDispatch@@@ATL@@SAJPAUIDispatch@@JPAUtagVARIANT@@@Z ; ATL::CComPtr<IDispatch>::GetProperty
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH

; 430  :     }

  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
?GetProperty@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@@Z ENDP ; ATL::CComPtr<IDispatch>::GetProperty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>, COMDAT
; _this$ = ecx

; 373  :     CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 374  :     {

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>

; 375  :     }

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?Release@?$CComPtrBase@UIDispatch@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pTemp$ = -8						; size = 4
_this$ = -4						; size = 4
?Release@?$CComPtrBase@UIDispatch@@@ATL@@QAEXXZ PROC	; ATL::CComPtrBase<IDispatch>::Release, COMDAT
; _this$ = ecx

; 228  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 229  :         T* pTemp = p;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001d	89 4d f8	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 230  :         if (pTemp)

  00020	83 7d f8 00	 cmp	 DWORD PTR _pTemp$[ebp], 0
  00024	74 20		 je	 SHORT $LN1@Release

; 231  :         {
; 232  :             p = NULL;

  00026	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00029	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 233  :             pTemp->Release();

  0002f	8b 45 f8	 mov	 eax, DWORD PTR _pTemp$[ebp]
  00032	8b 08		 mov	 ecx, DWORD PTR [eax]
  00034	8b f4		 mov	 esi, esp
  00036	8b 55 f8	 mov	 edx, DWORD PTR _pTemp$[ebp]
  00039	52		 push	 edx
  0003a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0003d	ff d0		 call	 eax
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Release:

; 234  :         }
; 235  :     }

  00046	5e		 pop	 esi
  00047	83 c4 08	 add	 esp, 8
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
?Release@?$CComPtrBase@UIDispatch@@@ATL@@QAEXXZ ENDP	; ATL::CComPtrBase<IDispatch>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ PROC ; ATL::CComPtrBase<IDispatch>::operator&, COMDAT
; _this$ = ecx

; 198  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :         ATLASSERT(p==NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN3@operator
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_19LMDLLIGP@?$AAp?$AA?$DN?$AA?$DN?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 c7 00 00 00	 push	 199			; 000000c7H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN3@operator
  0003b	cc		 int	 3
$LN3@operator:

; 200  :         return &p;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 201  :     }

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ ENDP ; ATL::CComPtrBase<IDispatch>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ PROC		; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>, COMDAT
; _this$ = ecx

; 182  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  :         if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN1@CComPtrBas

; 184  :             p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CComPtrBas:

; 185  :     }

  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ PROC		; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>, COMDAT
; _this$ = ecx

; 163  :     CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     {
; 165  :         p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 166  :     }

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?AtlInternalOleLoadFromStream@ATL@@YAJPAUIStream@@ABU_GUID@@PAPAXTClassesAllowedInStream@1@K@Z
_TEXT	SEGMENT
tv202 = -76						; size = 4
$T1 = -72						; size = 4
$T2 = -68						; size = 4
$T3 = -64						; size = 4
_pPersistStm$ = -56					; size = 4
_i$4 = -48						; size = 4
_punkVal$ = -40						; size = 4
_hr$ = -32						; size = 4
_clsid$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_pStm$ = 8						; size = 4
_iidInterface$ = 12					; size = 4
_ppvObj$ = 16						; size = 4
_rgclsidAllowed$ = 20					; size = 4
_cclsidAllowed$ = 24					; size = 4
?AtlInternalOleLoadFromStream@ATL@@YAJPAUIStream@@ABU_GUID@@PAPAXTClassesAllowedInStream@1@K@Z PROC ; ATL::AtlInternalOleLoadFromStream, COMDAT

; 3413 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  0000b	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
$LN4@AtlInterna:

; 3414 :     ATLASSUME(pStm != NULL);

  00021	83 7d 08 00	 cmp	 DWORD PTR _pStm$[ebp], 0
  00025	75 26		 jne	 SHORT $LN2@AtlInterna
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@CANBMGJB@?$AAp?$AAS?$AAt?$AAm?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00031	6a 00		 push	 0
  00033	68 56 0d 00 00	 push	 3414			; 00000d56H
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0003d	6a 02		 push	 2
  0003f	e8 00 00 00 00	 call	 __CrtDbgReportW
  00044	83 c4 18	 add	 esp, 24			; 00000018H
  00047	83 f8 01	 cmp	 eax, 1
  0004a	75 01		 jne	 SHORT $LN2@AtlInterna
  0004c	cc		 int	 3
$LN2@AtlInterna:
  0004d	33 c9		 xor	 ecx, ecx
  0004f	75 d0		 jne	 SHORT $LN4@AtlInterna

; 3415 :     *ppvObj = NULL;

  00051	8b 55 10	 mov	 edx, DWORD PTR _ppvObj$[ebp]
  00054	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 3416 :     CLSID clsid;
; 3417 : 
; 3418 :     HRESULT hr = ReadClassStm(pStm, &clsid);

  0005a	8b f4		 mov	 esi, esp
  0005c	8d 45 e8	 lea	 eax, DWORD PTR _clsid$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d 08	 mov	 ecx, DWORD PTR _pStm$[ebp]
  00063	51		 push	 ecx
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReadClassStm@8
  0006a	3b f4		 cmp	 esi, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax

; 3419 : 
; 3420 :     if (FAILED(hr))

  00074	83 7d e0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00078	7d 08		 jge	 SHORT $LN11@AtlInterna

; 3421 :     {
; 3422 :         return hr;

  0007a	8b 45 e0	 mov	 eax, DWORD PTR _hr$[ebp]
  0007d	e9 9c 01 00 00	 jmp	 $LN1@AtlInterna
$LN11@AtlInterna:

; 3423 :     }
; 3424 : 
; 3425 :     CComPtr<IUnknown> punkVal;

  00082	8d 4d d8	 lea	 ecx, DWORD PTR _punkVal$[ebp]
  00085	e8 00 00 00 00	 call	 ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 3426 : 
; 3427 :     if (cclsidAllowed != 0)

  0008a	83 7d 18 00	 cmp	 DWORD PTR _cclsidAllowed$[ebp], 0
  0008e	74 78		 je	 SHORT $LN12@AtlInterna
$LN7@AtlInterna:

; 3428 :     {
; 3429 :         ATLASSUME(rgclsidAllowed.rgclsidAllowed != NULL);

  00090	83 7d 14 00	 cmp	 DWORD PTR _rgclsidAllowed$[ebp], 0
  00094	75 26		 jne	 SHORT $LN5@AtlInterna
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@GMHEAKOM@?$AAr?$AAg?$AAc?$AAl?$AAs?$AAi?$AAd?$AAA?$AAl?$AAl?$AAo?$AAw?$AAe?$AAd?$AA?4@
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000a0	6a 00		 push	 0
  000a2	68 65 0d 00 00	 push	 3429			; 00000d65H
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@NPBPGCCO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000ac	6a 02		 push	 2
  000ae	e8 00 00 00 00	 call	 __CrtDbgReportW
  000b3	83 c4 18	 add	 esp, 24			; 00000018H
  000b6	83 f8 01	 cmp	 eax, 1
  000b9	75 01		 jne	 SHORT $LN5@AtlInterna
  000bb	cc		 int	 3
$LN5@AtlInterna:
  000bc	33 c0		 xor	 eax, eax
  000be	75 d0		 jne	 SHORT $LN7@AtlInterna

; 3430 :         hr = E_ACCESSDENIED;

  000c0	c7 45 e0 05 00
	07 80		 mov	 DWORD PTR _hr$[ebp], -2147024891 ; 80070005H

; 3431 : 
; 3432 :         for(DWORD i = 0; i < cclsidAllowed; i++)

  000c7	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _i$4[ebp], 0
  000ce	eb 09		 jmp	 SHORT $LN10@AtlInterna
$LN8@AtlInterna:
  000d0	8b 4d d0	 mov	 ecx, DWORD PTR _i$4[ebp]
  000d3	83 c1 01	 add	 ecx, 1
  000d6	89 4d d0	 mov	 DWORD PTR _i$4[ebp], ecx
$LN10@AtlInterna:
  000d9	8b 55 d0	 mov	 edx, DWORD PTR _i$4[ebp]
  000dc	3b 55 18	 cmp	 edx, DWORD PTR _cclsidAllowed$[ebp]
  000df	73 25		 jae	 SHORT $LN9@AtlInterna

; 3433 :         {
; 3434 :             if (IsEqualCLSID(clsid, rgclsidAllowed.rgclsidAllowed[i]))

  000e1	8b 45 d0	 mov	 eax, DWORD PTR _i$4[ebp]
  000e4	c1 e0 04	 shl	 eax, 4
  000e7	03 45 14	 add	 eax, DWORD PTR _rgclsidAllowed$[ebp]
  000ea	50		 push	 eax
  000eb	8d 4d e8	 lea	 ecx, DWORD PTR _clsid$[ebp]
  000ee	51		 push	 ecx
  000ef	e8 00 00 00 00	 call	 _IsEqualGUID
  000f4	83 c4 08	 add	 esp, 8
  000f7	85 c0		 test	 eax, eax
  000f9	74 09		 je	 SHORT $LN14@AtlInterna

; 3435 :             {
; 3436 :                 hr = S_OK;

  000fb	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 3437 :                 break;

  00102	eb 02		 jmp	 SHORT $LN9@AtlInterna
$LN14@AtlInterna:

; 3438 :             }
; 3439 :         }

  00104	eb ca		 jmp	 SHORT $LN8@AtlInterna
$LN9@AtlInterna:

; 3440 :     }

  00106	eb 29		 jmp	 SHORT $LN13@AtlInterna
$LN12@AtlInterna:

; 3441 :     else if (rgclsidAllowed.pfnClsidAllowed != NULL)

  00108	83 7d 14 00	 cmp	 DWORD PTR _rgclsidAllowed$[ebp], 0
  0010c	74 23		 je	 SHORT $LN13@AtlInterna

; 3442 :     {
; 3443 :         hr = rgclsidAllowed.pfnClsidAllowed(clsid, iidInterface, reinterpret_cast<void**>(&punkVal));

  0010e	8d 4d d8	 lea	 ecx, DWORD PTR _punkVal$[ebp]
  00111	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
  00116	8b f4		 mov	 esi, esp
  00118	50		 push	 eax
  00119	8b 55 0c	 mov	 edx, DWORD PTR _iidInterface$[ebp]
  0011c	52		 push	 edx
  0011d	8d 45 e8	 lea	 eax, DWORD PTR _clsid$[ebp]
  00120	50		 push	 eax
  00121	ff 55 14	 call	 DWORD PTR _rgclsidAllowed$[ebp]
  00124	83 c4 0c	 add	 esp, 12			; 0000000cH
  00127	3b f4		 cmp	 esi, esp
  00129	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012e	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax
$LN13@AtlInterna:

; 3444 :     }
; 3445 : 
; 3446 :     if (FAILED(hr))

  00131	83 7d e0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00135	7d 16		 jge	 SHORT $LN16@AtlInterna

; 3447 :     {
; 3448 :         return hr;

  00137	8b 4d e0	 mov	 ecx, DWORD PTR _hr$[ebp]
  0013a	89 4d c0	 mov	 DWORD PTR $T3[ebp], ecx
  0013d	8d 4d d8	 lea	 ecx, DWORD PTR _punkVal$[ebp]
  00140	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
  00145	8b 45 c0	 mov	 eax, DWORD PTR $T3[ebp]
  00148	e9 d1 00 00 00	 jmp	 $LN1@AtlInterna
$LN16@AtlInterna:

; 3449 :     }
; 3450 : 
; 3451 :     if (punkVal == NULL)

  0014d	6a 00		 push	 0
  0014f	8d 4d d8	 lea	 ecx, DWORD PTR _punkVal$[ebp]
  00152	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z ; ATL::CComPtrBase<IUnknown>::operator==
  00157	0f b6 d0	 movzx	 edx, al
  0015a	85 d2		 test	 edx, edx
  0015c	74 43		 je	 SHORT $LN17@AtlInterna

; 3452 :     {
; 3453 :         hr = CoCreateInstance(clsid, NULL, CLSCTX_SERVER | CLSCTX_NO_CODE_DOWNLOAD, iidInterface, reinterpret_cast<void**>(&punkVal));

  0015e	8d 4d d8	 lea	 ecx, DWORD PTR _punkVal$[ebp]
  00161	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
  00166	8b f4		 mov	 esi, esp
  00168	50		 push	 eax
  00169	8b 45 0c	 mov	 eax, DWORD PTR _iidInterface$[ebp]
  0016c	50		 push	 eax
  0016d	68 15 04 00 00	 push	 1045			; 00000415H
  00172	6a 00		 push	 0
  00174	8d 4d e8	 lea	 ecx, DWORD PTR _clsid$[ebp]
  00177	51		 push	 ecx
  00178	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoCreateInstance@20
  0017e	3b f4		 cmp	 esi, esp
  00180	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00185	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax

; 3454 :         if (FAILED(hr))

  00188	83 7d e0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0018c	7d 13		 jge	 SHORT $LN17@AtlInterna

; 3455 :         {
; 3456 :             return hr;

  0018e	8b 55 e0	 mov	 edx, DWORD PTR _hr$[ebp]
  00191	89 55 bc	 mov	 DWORD PTR $T2[ebp], edx
  00194	8d 4d d8	 lea	 ecx, DWORD PTR _punkVal$[ebp]
  00197	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
  0019c	8b 45 bc	 mov	 eax, DWORD PTR $T2[ebp]
  0019f	eb 7d		 jmp	 SHORT $LN1@AtlInterna
$LN17@AtlInterna:

; 3457 :         }
; 3458 :     }
; 3459 : 
; 3460 :     CComPtr<IPersistStream> pPersistStm;

  001a1	8d 4d c8	 lea	 ecx, DWORD PTR _pPersistStm$[ebp]
  001a4	e8 00 00 00 00	 call	 ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ ; ATL::CComPtr<IPersistStream>::CComPtr<IPersistStream>

; 3461 :     hr = punkVal->QueryInterface(&pPersistStm);

  001a9	8d 4d c8	 lea	 ecx, DWORD PTR _pPersistStm$[ebp]
  001ac	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ ; ATL::CComPtrBase<IPersistStream>::operator&
  001b1	50		 push	 eax
  001b2	8d 4d d8	 lea	 ecx, DWORD PTR _punkVal$[ebp]
  001b5	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ; ATL::CComPtrBase<IUnknown>::operator->
  001ba	50		 push	 eax
  001bb	e8 00 00 00 00	 call	 ??$QueryInterface@UIPersistStream@@@IUnknown@@QAGJPAPAUIPersistStream@@@Z ; IUnknown::QueryInterface<IPersistStream>
  001c0	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax

; 3462 : 
; 3463 :     if (SUCCEEDED(hr))

  001c3	83 7d e0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001c7	7c 3c		 jl	 SHORT $LN19@AtlInterna

; 3464 :     {
; 3465 :         hr = pPersistStm->Load(pStm);

  001c9	8d 4d c8	 lea	 ecx, DWORD PTR _pPersistStm$[ebp]
  001cc	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStream@@@1@XZ ; ATL::CComPtrBase<IPersistStream>::operator->
  001d1	89 45 b4	 mov	 DWORD PTR tv202[ebp], eax
  001d4	8b f4		 mov	 esi, esp
  001d6	8b 45 08	 mov	 eax, DWORD PTR _pStm$[ebp]
  001d9	50		 push	 eax
  001da	8b 4d b4	 mov	 ecx, DWORD PTR tv202[ebp]
  001dd	51		 push	 ecx
  001de	8b 55 b4	 mov	 edx, DWORD PTR tv202[ebp]
  001e1	8b 02		 mov	 eax, DWORD PTR [edx]
  001e3	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  001e6	ff d1		 call	 ecx
  001e8	3b f4		 cmp	 esi, esp
  001ea	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ef	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax

; 3466 : 
; 3467 :         if (SUCCEEDED(hr))

  001f2	83 7d e0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001f6	7c 0d		 jl	 SHORT $LN19@AtlInterna

; 3468 :         {
; 3469 :             *ppvObj = punkVal.Detach();

  001f8	8d 4d d8	 lea	 ecx, DWORD PTR _punkVal$[ebp]
  001fb	e8 00 00 00 00	 call	 ?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::Detach
  00200	8b 55 10	 mov	 edx, DWORD PTR _ppvObj$[ebp]
  00203	89 02		 mov	 DWORD PTR [edx], eax
$LN19@AtlInterna:

; 3470 :         }
; 3471 :     }
; 3472 : 
; 3473 :     return hr;

  00205	8b 45 e0	 mov	 eax, DWORD PTR _hr$[ebp]
  00208	89 45 b8	 mov	 DWORD PTR $T1[ebp], eax
  0020b	8d 4d c8	 lea	 ecx, DWORD PTR _pPersistStm$[ebp]
  0020e	e8 00 00 00 00	 call	 ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
  00213	8d 4d d8	 lea	 ecx, DWORD PTR _punkVal$[ebp]
  00216	e8 00 00 00 00	 call	 ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
  0021b	8b 45 b8	 mov	 eax, DWORD PTR $T1[ebp]
$LN1@AtlInterna:

; 3474 : }

  0021e	52		 push	 edx
  0021f	8b cd		 mov	 ecx, ebp
  00221	50		 push	 eax
  00222	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN28@AtlInterna
  00228	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0022d	58		 pop	 eax
  0022e	5a		 pop	 edx
  0022f	5f		 pop	 edi
  00230	5e		 pop	 esi
  00231	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00234	33 cd		 xor	 ecx, ebp
  00236	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0023b	83 c4 4c	 add	 esp, 76			; 0000004cH
  0023e	3b ec		 cmp	 ebp, esp
  00240	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00245	8b e5		 mov	 esp, ebp
  00247	5d		 pop	 ebp
  00248	c3		 ret	 0
  00249	0f 1f 00	 npad	 3
$LN28@AtlInterna:
  0024c	03 00 00 00	 DD	 3
  00250	00 00 00 00	 DD	 $LN27@AtlInterna
$LN27@AtlInterna:
  00254	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00258	10 00 00 00	 DD	 16			; 00000010H
  0025c	00 00 00 00	 DD	 $LN24@AtlInterna
  00260	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00264	04 00 00 00	 DD	 4
  00268	00 00 00 00	 DD	 $LN25@AtlInterna
  0026c	c8 ff ff ff	 DD	 -56			; ffffffc8H
  00270	04 00 00 00	 DD	 4
  00274	00 00 00 00	 DD	 $LN26@AtlInterna
$LN26@AtlInterna:
  00278	70		 DB	 112			; 00000070H
  00279	50		 DB	 80			; 00000050H
  0027a	65		 DB	 101			; 00000065H
  0027b	72		 DB	 114			; 00000072H
  0027c	73		 DB	 115			; 00000073H
  0027d	69		 DB	 105			; 00000069H
  0027e	73		 DB	 115			; 00000073H
  0027f	74		 DB	 116			; 00000074H
  00280	53		 DB	 83			; 00000053H
  00281	74		 DB	 116			; 00000074H
  00282	6d		 DB	 109			; 0000006dH
  00283	00		 DB	 0
$LN25@AtlInterna:
  00284	70		 DB	 112			; 00000070H
  00285	75		 DB	 117			; 00000075H
  00286	6e		 DB	 110			; 0000006eH
  00287	6b		 DB	 107			; 0000006bH
  00288	56		 DB	 86			; 00000056H
  00289	61		 DB	 97			; 00000061H
  0028a	6c		 DB	 108			; 0000006cH
  0028b	00		 DB	 0
$LN24@AtlInterna:
  0028c	63		 DB	 99			; 00000063H
  0028d	6c		 DB	 108			; 0000006cH
  0028e	73		 DB	 115			; 00000073H
  0028f	69		 DB	 105			; 00000069H
  00290	64		 DB	 100			; 00000064H
  00291	00		 DB	 0
?AtlInternalOleLoadFromStream@ATL@@YAJPAUIStream@@ABU_GUID@@PAPAXTClassesAllowedInStream@1@K@Z ENDP ; ATL::AtlInternalOleLoadFromStream
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?AtlComQIPtrAssign2@ATL@@YAXPAPAUIUnknown@@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT
_pTemp$ = -4						; size = 4
_pp$ = 8						; size = 4
_lp$ = 12						; size = 4
_riid$ = 16						; size = 4
?AtlComQIPtrAssign2@ATL@@YAXPAPAUIUnknown@@PAU2@ABU_GUID@@@Z PROC ; ATL::AtlComQIPtrAssign2, COMDAT

; 55   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 56   :     IUnknown* pTemp = *pp; // takes ownership

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pp$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	89 4d fc	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 57   : 
; 58   :     if (lp == NULL || FAILED(lp->QueryInterface(riid, (void**)pp)))

  00014	83 7d 0c 00	 cmp	 DWORD PTR _lp$[ebp], 0
  00018	74 22		 je	 SHORT $LN3@AtlComQIPt
  0001a	8b f4		 mov	 esi, esp
  0001c	8b 55 08	 mov	 edx, DWORD PTR _pp$[ebp]
  0001f	52		 push	 edx
  00020	8b 45 10	 mov	 eax, DWORD PTR _riid$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _lp$[ebp]
  00027	8b 11		 mov	 edx, DWORD PTR [ecx]
  00029	8b 45 0c	 mov	 eax, DWORD PTR _lp$[ebp]
  0002c	50		 push	 eax
  0002d	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0002f	ff d1		 call	 ecx
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	85 c0		 test	 eax, eax
  0003a	7d 09		 jge	 SHORT $LN2@AtlComQIPt
$LN3@AtlComQIPt:

; 59   :         *pp = NULL;

  0003c	8b 55 08	 mov	 edx, DWORD PTR _pp$[ebp]
  0003f	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
$LN2@AtlComQIPt:

; 60   : 
; 61   :     if (pTemp)

  00045	83 7d fc 00	 cmp	 DWORD PTR _pTemp$[ebp], 0
  00049	74 17		 je	 SHORT $LN1@AtlComQIPt

; 62   :         pTemp->Release();

  0004b	8b 45 fc	 mov	 eax, DWORD PTR _pTemp$[ebp]
  0004e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00050	8b f4		 mov	 esi, esp
  00052	8b 55 fc	 mov	 edx, DWORD PTR _pTemp$[ebp]
  00055	52		 push	 edx
  00056	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00059	ff d0		 call	 eax
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@AtlComQIPt:

; 63   : }

  00062	5e		 pop	 esi
  00063	83 c4 04	 add	 esp, 4
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
?AtlComQIPtrAssign2@ATL@@YAXPAPAUIUnknown@@PAU2@ABU_GUID@@@Z ENDP ; ATL::AtlComQIPtrAssign2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?AtlHresultFromWin32@ATL@@YAJK@Z
_TEXT	SEGMENT
_nError$ = 8						; size = 4
?AtlHresultFromWin32@ATL@@YAJK@Z PROC			; ATL::AtlHresultFromWin32, COMDAT

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 45   :     return( HRESULT_FROM_WIN32( nError ) );

  00003	8b 45 08	 mov	 eax, DWORD PTR _nError$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  0000c	83 c4 04	 add	 esp, 4

; 46   : }

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?AtlHresultFromWin32@ATL@@YAJK@Z ENDP			; ATL::AtlHresultFromWin32
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcomcli.h
;	COMDAT ?AtlHresultFromLastError@ATL@@YAJXZ
_TEXT	SEGMENT
_dwErr$ = -4						; size = 4
?AtlHresultFromLastError@ATL@@YAJXZ PROC		; ATL::AtlHresultFromLastError, COMDAT

; 36   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 37   :     DWORD dwErr = ::GetLastError();

  0000c	8b f4		 mov	 esi, esp
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00014	3b f4		 cmp	 esi, esp
  00016	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001b	89 45 fc	 mov	 DWORD PTR _dwErr$[ebp], eax

; 38   :     return HRESULT_FROM_WIN32(dwErr);

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _dwErr$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00027	83 c4 04	 add	 esp, 4

; 39   : }

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?AtlHresultFromLastError@ATL@@YAJXZ ENDP		; ATL::AtlHresultFromLastError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControl.cpp
_TEXT	SEGMENT
_DllUnregisterServer@0 PROC

; 90   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 91   :     return _Module.UnregisterServer(TRUE);

  00003	6a 00		 push	 0
  00005	6a 01		 push	 1
  00007	b9 00 00 00 00	 mov	 ecx, OFFSET ?_Module@@3VCComModule@ATL@@A ; _Module
  0000c	e8 00 00 00 00	 call	 ?UnregisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CComModule::UnregisterServer

; 92   : }

  00011	3b ec		 cmp	 ebp, esp
  00013	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
_DllUnregisterServer@0 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControl.cpp
_TEXT	SEGMENT
_DllRegisterServer@0 PROC

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 82   :     // registers object, typelib and all interfaces in typelib
; 83   :     return _Module.RegisterServer(TRUE);

  00003	6a 00		 push	 0
  00005	6a 01		 push	 1
  00007	b9 00 00 00 00	 mov	 ecx, OFFSET ?_Module@@3VCComModule@ATL@@A ; _Module
  0000c	e8 00 00 00 00	 call	 ?RegisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z ; ATL::CComModule::RegisterServer

; 84   : }

  00011	3b ec		 cmp	 ebp, esp
  00013	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
_DllRegisterServer@0 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IEnumConnectionPoints@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IEnumConnectionPoints@@QAE@XZ PROC			; IEnumConnectionPoints::IEnumConnectionPoints, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0IUnknown@@QAE@XZ
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0IEnumConnectionPoints@@QAE@XZ ENDP			; IEnumConnectionPoints::IEnumConnectionPoints
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IEnumConnections@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IEnumConnections@@QAE@XZ PROC			; IEnumConnections::IEnumConnections, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0IUnknown@@QAE@XZ
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0IEnumConnections@@QAE@XZ ENDP			; IEnumConnections::IEnumConnections
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ PROC ; ATL::CAtlBaseModule::GetModuleInstance, COMDAT
; _this$ = ecx

; 289  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 290  : 		return m_hInst;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 291  : 	}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ENDP ; ATL::CAtlBaseModule::GetModuleInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ?Init@CComFakeCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CComFakeCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComFakeCriticalSection::Init, COMDAT
; _this$ = ecx

; 255  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 256  : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 257  : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?Init@CComFakeCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComFakeCriticalSection::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ?Unlock@CComFakeCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Unlock@CComFakeCriticalSection@ATL@@QAEJXZ PROC	; ATL::CComFakeCriticalSection::Unlock, COMDAT
; _this$ = ecx

; 251  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 252  : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 253  : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?Unlock@CComFakeCriticalSection@ATL@@QAEJXZ ENDP	; ATL::CComFakeCriticalSection::Unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ?Lock@CComFakeCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Lock@CComFakeCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComFakeCriticalSection::Lock, COMDAT
; _this$ = ecx

; 247  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 248  : 		return S_OK;

  0000e	33 c0		 xor	 eax, eax

; 249  : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?Lock@CComFakeCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComFakeCriticalSection::Lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CComAutoDeleteCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComAutoDeleteCriticalSection@ATL@@QAE@XZ PROC	; ATL::CComAutoDeleteCriticalSection::~CComAutoDeleteCriticalSection, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CComSafeDeleteCriticalSection@ATL@@QAE@XZ ; ATL::CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CComAutoDeleteCriticalSection@ATL@@QAE@XZ ENDP	; ATL::CComAutoDeleteCriticalSection::~CComAutoDeleteCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CComAutoDeleteCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComAutoDeleteCriticalSection@ATL@@QAE@XZ PROC	; ATL::CComAutoDeleteCriticalSection::CComAutoDeleteCriticalSection, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0CComSafeDeleteCriticalSection@ATL@@QAE@XZ ; ATL::CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0CComAutoDeleteCriticalSection@ATL@@QAE@XZ ENDP	; ATL::CComAutoDeleteCriticalSection::CComAutoDeleteCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ?Init@CComSafeDeleteCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
?Init@CComSafeDeleteCriticalSection@ATL@@QAEJXZ PROC	; ATL::CComSafeDeleteCriticalSection::Init, COMDAT
; _this$ = ecx

; 199  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 200  : 		ATLASSERT( !m_bInitialized );

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	0f b6 48 18	 movzx	 ecx, BYTE PTR [eax+24]
  0001e	85 c9		 test	 ecx, ecx
  00020	74 26		 je	 SHORT $LN4@Init
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@MNJCDMEH@?$AA?$CB?$AAm?$AA_?$AAb?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd@
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0002c	6a 00		 push	 0
  0002e	68 c8 00 00 00	 push	 200			; 000000c8H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@LDOGAJJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00038	6a 02		 push	 2
  0003a	e8 00 00 00 00	 call	 __CrtDbgReportW
  0003f	83 c4 18	 add	 esp, 24			; 00000018H
  00042	83 f8 01	 cmp	 eax, 1
  00045	75 01		 jne	 SHORT $LN4@Init
  00047	cc		 int	 3
$LN4@Init:

; 201  : 		HRESULT hr = CComCriticalSection::Init();

  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?Init@CComCriticalSection@ATL@@QAEJXZ ; ATL::CComCriticalSection::Init
  00050	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 202  : 		if (SUCCEEDED(hr))

  00053	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00057	7c 07		 jl	 SHORT $LN2@Init

; 203  : 		{
; 204  : 			m_bInitialized = true;

  00059	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	c6 40 18 01	 mov	 BYTE PTR [eax+24], 1
$LN2@Init:

; 205  : 		}
; 206  : 		return hr;

  00060	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]

; 207  : 	}

  00063	83 c4 08	 add	 esp, 8
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
?Init@CComSafeDeleteCriticalSection@ATL@@QAEJXZ ENDP	; ATL::CComSafeDeleteCriticalSection::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ??1CComSafeDeleteCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComSafeDeleteCriticalSection@ATL@@QAE@XZ PROC	; ATL::CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection, COMDAT
; _this$ = ecx

; 189  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 190  : 		if (!m_bInitialized)

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	0f b6 48 18	 movzx	 ecx, BYTE PTR [eax+24]
  00015	85 c9		 test	 ecx, ecx
  00017	75 02		 jne	 SHORT $LN2@CComSafeDe

; 191  : 		{
; 192  : 			return;

  00019	eb 0f		 jmp	 SHORT $LN1@CComSafeDe
$LN2@CComSafeDe:

; 193  : 		}
; 194  : 		m_bInitialized = false;

  0001b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001e	c6 42 18 00	 mov	 BYTE PTR [edx+24], 0

; 195  : 		CComCriticalSection::Term();

  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?Term@CComCriticalSection@ATL@@QAEJXZ ; ATL::CComCriticalSection::Term
$LN1@CComSafeDe:

; 196  : 	}

  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QAE@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00032	83 c4 04	 add	 esp, 4
  00035	3b ec		 cmp	 ebp, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??1CComSafeDeleteCriticalSection@ATL@@QAE@XZ ENDP	; ATL::CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ??0CComSafeDeleteCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComSafeDeleteCriticalSection@ATL@@QAE@XZ PROC	; ATL::CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection, COMDAT
; _this$ = ecx

; 185  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0CComCriticalSection@ATL@@QAE@XZ ; ATL::CComCriticalSection::CComCriticalSection

; 184  : 	CComSafeDeleteCriticalSection(): m_bInitialized(false)

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c6 40 18 00	 mov	 BYTE PTR [eax+24], 0

; 186  : 	}

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	83 c4 04	 add	 esp, 4
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
??0CComSafeDeleteCriticalSection@ATL@@QAE@XZ ENDP	; ATL::CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Term@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Term, COMDAT
; _this$ = ecx

; 154  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 155  : 		DeleteCriticalSection(&m_sec);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b f4		 mov	 esi, esp
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
  0001b	3b f4		 cmp	 esi, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 156  : 		return S_OK;

  00022	33 c0		 xor	 eax, eax

; 157  : 	}

  00024	5e		 pop	 esi
  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?Term@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ?Init@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_hRes$ = -8						; size = 4
_this$ = -4						; size = 4
?Init@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Init, COMDAT
; _this$ = ecx

; 143  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 144  : 		HRESULT hRes = S_OK;

  00018	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hRes$[ebp], 0

; 145  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

  0001f	6a 00		 push	 0
  00021	6a 00		 push	 0
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002f	85 c0		 test	 eax, eax
  00031	75 1b		 jne	 SHORT $LN2@Init

; 146  : 		{
; 147  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

  00033	8b f4		 mov	 esi, esp
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0003b	3b f4		 cmp	 esi, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00048	83 c4 04	 add	 esp, 4
  0004b	89 45 f8	 mov	 DWORD PTR _hRes$[ebp], eax
$LN2@Init:

; 148  : 		}
; 149  : 
; 150  : 		return hRes;

  0004e	8b 45 f8	 mov	 eax, DWORD PTR _hRes$[ebp]

; 151  : 	}

  00051	5e		 pop	 esi
  00052	83 c4 08	 add	 esp, 8
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?Init@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Unlock@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Unlock, COMDAT
; _this$ = ecx

; 138  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 139  : 		LeaveCriticalSection(&m_sec);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b f4		 mov	 esi, esp
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
  0001b	3b f4		 cmp	 esi, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 140  : 		return S_OK;

  00022	33 c0		 xor	 eax, eax

; 141  : 	}

  00024	5e		 pop	 esi
  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?Unlock@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ?Lock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Lock@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Lock, COMDAT
; _this$ = ecx

; 133  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 134  : 		EnterCriticalSection(&m_sec);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b f4		 mov	 esi, esp
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
  0001b	3b f4		 cmp	 esi, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 135  : 		return S_OK;

  00022	33 c0		 xor	 eax, eax

; 136  : 	}

  00024	5e		 pop	 esi
  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?Lock@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ??1CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::~CComCriticalSection, COMDAT
; _this$ = ecx

; 129  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 130  : 	}

  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??1CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::~CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlcore.h
;	COMDAT ??0CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::CComCriticalSection, COMDAT
; _this$ = ecx

; 123  : 	CComCriticalSection() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 124  : 	{
; 125  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

  0000e	6a 18		 push	 24			; 00000018H
  00010	6a 00		 push	 0
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 _memset
  0001b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 126  : 	}

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
??0CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlwinverapi.h
;	COMDAT ?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z
_TEXT	SEGMENT
_lpCriticalSection$ = 8					; size = 4
_dwSpinCount$ = 12					; size = 4
_Flags$ = 16						; size = 4
?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z PROC ; ATL::_AtlInitializeCriticalSectionEx, COMDAT

; 727  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 728  : #if (NTDDI_VERSION >= NTDDI_VISTA) && !defined(_USING_V110_SDK71_) && !defined(_ATL_XP_TARGETING)
; 729  : 	// InitializeCriticalSectionEx is available in Vista or later, desktop or store apps
; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 10	 mov	 eax, DWORD PTR _Flags$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR _dwSpinCount$[ebp]
  0000d	51		 push	 ecx
  0000e	8b 55 08	 mov	 edx, DWORD PTR _lpCriticalSection$[ebp]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSectionEx@12
  00018	3b f4		 cmp	 esi, esp
  0001a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 731  : #else
; 732  : 	UNREFERENCED_PARAMETER(Flags);
; 733  : 
; 734  : 	// ...otherwise fall back to using InitializeCriticalSectionAndSpinCount.
; 735  : 	return ::InitializeCriticalSectionAndSpinCount(lpCriticalSection, dwSpinCount);
; 736  : #endif
; 737  : }

  0001f	5e		 pop	 esi
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ENDP ; ATL::_AtlInitializeCriticalSectionEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlchecked.h
;	COMDAT ?wcscat_s@Checked@ATL@@YAXPA_WIPB_W@Z
_TEXT	SEGMENT
__Dst$ = 8						; size = 4
__SizeInChars$ = 12					; size = 4
__Src$ = 16						; size = 4
?wcscat_s@Checked@ATL@@YAXPA_WIPB_W@Z PROC		; ATL::Checked::wcscat_s, COMDAT

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 154  : 	ATLMFC_CRT_ERRORCHECK(::wcscat_s(_Dst, _SizeInChars, _Src));

  00003	8b 45 10	 mov	 eax, DWORD PTR __Src$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR __SizeInChars$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 08	 mov	 edx, DWORD PTR __Dst$[ebp]
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _wcscat_s
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?AtlCrtErrorCheck@ATL@@YAHH@Z ; ATL::AtlCrtErrorCheck
  0001d	83 c4 04	 add	 esp, 4

; 155  : }

  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?wcscat_s@Checked@ATL@@YAXPA_WIPB_W@Z ENDP		; ATL::Checked::wcscat_s
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlchecked.h
;	COMDAT ?tcsncpy_s@Checked@ATL@@YAHPA_WIPB_WI@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__SizeInChars$ = 12					; size = 4
__Source$ = 16						; size = 4
__Count$ = 20						; size = 4
?tcsncpy_s@Checked@ATL@@YAHPA_WIPB_WI@Z PROC		; ATL::Checked::tcsncpy_s, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 138  : 	return ATLMFC_CRT_ERRORCHECK(::_tcsncpy_s(_Dest, _SizeInChars, _Source,_Count));

  00003	8b 45 14	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Source$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 0c	 mov	 edx, DWORD PTR __SizeInChars$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _wcsncpy_s
  00018	83 c4 10	 add	 esp, 16			; 00000010H
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?AtlCrtErrorCheck@ATL@@YAHH@Z ; ATL::AtlCrtErrorCheck
  00021	83 c4 04	 add	 esp, 4

; 139  : }

  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?tcsncpy_s@Checked@ATL@@YAHPA_WIPB_WI@Z ENDP		; ATL::Checked::tcsncpy_s
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlchecked.h
;	COMDAT ?wcsncpy_s@Checked@ATL@@YAHPA_WIPB_WI@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__SizeInChars$ = 12					; size = 4
__Source$ = 16						; size = 4
__Count$ = 20						; size = 4
?wcsncpy_s@Checked@ATL@@YAHPA_WIPB_WI@Z PROC		; ATL::Checked::wcsncpy_s, COMDAT

; 128  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 129  : 	return ATLMFC_CRT_ERRORCHECK(::wcsncpy_s(_Dest, _SizeInChars, _Source,_Count));

  00003	8b 45 14	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Source$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 0c	 mov	 edx, DWORD PTR __SizeInChars$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _wcsncpy_s
  00018	83 c4 10	 add	 esp, 16			; 00000010H
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?AtlCrtErrorCheck@ATL@@YAHH@Z ; ATL::AtlCrtErrorCheck
  00021	83 c4 04	 add	 esp, 4

; 130  : }

  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?wcsncpy_s@Checked@ATL@@YAHPA_WIPB_WI@Z ENDP		; ATL::Checked::wcsncpy_s
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlchecked.h
;	COMDAT ?wcscpy_s@Checked@ATL@@YAXPA_WIPB_W@Z
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S1max$ = 12						; size = 4
__S2$ = 16						; size = 4
?wcscpy_s@Checked@ATL@@YAXPA_WIPB_W@Z PROC		; ATL::Checked::wcscpy_s, COMDAT

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 103  : 	ATLMFC_CRT_ERRORCHECK(::wcscpy_s(_S1, _S1max, _S2));

  00003	8b 45 10	 mov	 eax, DWORD PTR __S2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR __S1max$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 08	 mov	 edx, DWORD PTR __S1$[ebp]
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _wcscpy_s
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?AtlCrtErrorCheck@ATL@@YAHH@Z ; ATL::AtlCrtErrorCheck
  0001d	83 c4 04	 add	 esp, 4

; 104  : }

  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?wcscpy_s@Checked@ATL@@YAXPA_WIPB_W@Z ENDP		; ATL::Checked::wcscpy_s
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlchecked.h
;	COMDAT ?AtlCrtErrorCheck@ATL@@YAHH@Z
_TEXT	SEGMENT
tv64 = -4						; size = 4
_nError$ = 8						; size = 4
?AtlCrtErrorCheck@ATL@@YAHH@Z PROC			; ATL::AtlCrtErrorCheck, COMDAT

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 32   : 	switch(nError)

  0000b	8b 45 08	 mov	 eax, DWORD PTR _nError$[ebp]
  0000e	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  00011	83 7d fc 50	 cmp	 DWORD PTR tv64[ebp], 80	; 00000050H
  00015	77 2b		 ja	 SHORT $LN7@AtlCrtErro
  00017	8b 4d fc	 mov	 ecx, DWORD PTR tv64[ebp]
  0001a	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN9@AtlCrtErro[ecx]
  00021	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN10@AtlCrtErro[edx*4]
$LN4@AtlCrtErro:

; 33   : 	{
; 34   : 	case ENOMEM:
; 35   : 		AtlThrow(E_OUTOFMEMORY);

  00028	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  0002d	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl

; 36   : 		break;

  00032	eb 18		 jmp	 SHORT $LN2@AtlCrtErro
$LN5@AtlCrtErro:

; 37   : 	case EINVAL:
; 38   : 	case ERANGE:
; 39   : 		AtlThrow(E_INVALIDARG);

  00034	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00039	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl

; 40   : 		break;

  0003e	eb 0c		 jmp	 SHORT $LN2@AtlCrtErro
$LN6@AtlCrtErro:

; 41   : 	case 0:
; 42   : 	case STRUNCATE:
; 43   : 		break;

  00040	eb 0a		 jmp	 SHORT $LN2@AtlCrtErro
$LN7@AtlCrtErro:

; 44   : 	default:
; 45   : 		AtlThrow(E_FAIL);

  00042	68 05 40 00 80	 push	 -2147467259		; 80004005H
  00047	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@AtlCrtErro:

; 46   : 		break;
; 47   : 	}
; 48   : 	return nError;

  0004c	8b 45 08	 mov	 eax, DWORD PTR _nError$[ebp]
$LN8@AtlCrtErro:

; 49   : }

  0004f	83 c4 04	 add	 esp, 4
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
  0005d	0f 1f 00	 npad	 3
$LN10@AtlCrtErro:
  00060	00 00 00 00	 DD	 $LN6@AtlCrtErro
  00064	00 00 00 00	 DD	 $LN4@AtlCrtErro
  00068	00 00 00 00	 DD	 $LN5@AtlCrtErro
  0006c	00 00 00 00	 DD	 $LN7@AtlCrtErro
$LN9@AtlCrtErro:
  00070	00		 DB	 0
  00071	03		 DB	 3
  00072	03		 DB	 3
  00073	03		 DB	 3
  00074	03		 DB	 3
  00075	03		 DB	 3
  00076	03		 DB	 3
  00077	03		 DB	 3
  00078	03		 DB	 3
  00079	03		 DB	 3
  0007a	03		 DB	 3
  0007b	03		 DB	 3
  0007c	01		 DB	 1
  0007d	03		 DB	 3
  0007e	03		 DB	 3
  0007f	03		 DB	 3
  00080	03		 DB	 3
  00081	03		 DB	 3
  00082	03		 DB	 3
  00083	03		 DB	 3
  00084	03		 DB	 3
  00085	03		 DB	 3
  00086	02		 DB	 2
  00087	03		 DB	 3
  00088	03		 DB	 3
  00089	03		 DB	 3
  0008a	03		 DB	 3
  0008b	03		 DB	 3
  0008c	03		 DB	 3
  0008d	03		 DB	 3
  0008e	03		 DB	 3
  0008f	03		 DB	 3
  00090	03		 DB	 3
  00091	03		 DB	 3
  00092	02		 DB	 2
  00093	03		 DB	 3
  00094	03		 DB	 3
  00095	03		 DB	 3
  00096	03		 DB	 3
  00097	03		 DB	 3
  00098	03		 DB	 3
  00099	03		 DB	 3
  0009a	03		 DB	 3
  0009b	03		 DB	 3
  0009c	03		 DB	 3
  0009d	03		 DB	 3
  0009e	03		 DB	 3
  0009f	03		 DB	 3
  000a0	03		 DB	 3
  000a1	03		 DB	 3
  000a2	03		 DB	 3
  000a3	03		 DB	 3
  000a4	03		 DB	 3
  000a5	03		 DB	 3
  000a6	03		 DB	 3
  000a7	03		 DB	 3
  000a8	03		 DB	 3
  000a9	03		 DB	 3
  000aa	03		 DB	 3
  000ab	03		 DB	 3
  000ac	03		 DB	 3
  000ad	03		 DB	 3
  000ae	03		 DB	 3
  000af	03		 DB	 3
  000b0	03		 DB	 3
  000b1	03		 DB	 3
  000b2	03		 DB	 3
  000b3	03		 DB	 3
  000b4	03		 DB	 3
  000b5	03		 DB	 3
  000b6	03		 DB	 3
  000b7	03		 DB	 3
  000b8	03		 DB	 3
  000b9	03		 DB	 3
  000ba	03		 DB	 3
  000bb	03		 DB	 3
  000bc	03		 DB	 3
  000bd	03		 DB	 3
  000be	03		 DB	 3
  000bf	03		 DB	 3
  000c0	00		 DB	 0
?AtlCrtErrorCheck@ATL@@YAHH@Z ENDP			; ATL::AtlCrtErrorCheck
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlexcept.h
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT
_dwExceptionCode$ = 8					; size = 4
_dwExceptionFlags$ = 12					; size = 4
?_AtlRaiseException@ATL@@YAXKK@Z PROC			; ATL::_AtlRaiseException, COMDAT

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 31   : 	RaiseException( dwExceptionCode, dwExceptionFlags, 0, NULL );

  00004	8b f4		 mov	 esi, esp
  00006	6a 00		 push	 0
  00008	6a 00		 push	 0
  0000a	8b 45 0c	 mov	 eax, DWORD PTR _dwExceptionFlags$[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR _dwExceptionCode$[ebp]
  00011	51		 push	 ecx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RaiseException@16
  00018	3b f4		 cmp	 esi, esp
  0001a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 32   : }

  0001f	5e		 pop	 esi
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?_AtlRaiseException@ATL@@YAXKK@Z ENDP			; ATL::_AtlRaiseException
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ
_TEXT	SEGMENT
_ptr$ = -16						; size = 4
_ple$ = -8						; size = 4
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ PROC		; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 436  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 437  : 		CPreserveLastError ple;

  0001a	8d 4d f8	 lea	 ecx, DWORD PTR _ple$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0CPreserveLastError@ATL@@QAE@XZ ; ATL::CPreserveLastError::CPreserveLastError

; 438  : 		va_list ptr; va_start(ptr, pszFmt);

  00022	8d 45 18	 lea	 eax, DWORD PTR _pszFmt$[ebp+4]
  00025	89 45 f0	 mov	 DWORD PTR _ptr$[ebp], eax

; 439  : 		ATL::CTrace::TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

  00028	8b 4d f0	 mov	 ecx, DWORD PTR _ptr$[ebp]
  0002b	51		 push	 ecx
  0002c	8b 55 14	 mov	 edx, DWORD PTR _pszFmt$[ebp]
  0002f	52		 push	 edx
  00030	8b 45 10	 mov	 eax, DWORD PTR _nLevel$[ebp]
  00033	50		 push	 eax
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR _dwCategory$[ebp]
  00037	51		 push	 ecx
  00038	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0003b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0003e	50		 push	 eax
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 11		 mov	 edx, DWORD PTR [ecx]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z ; ATL::CTrace::TraceV
  0004a	83 c4 18	 add	 esp, 24			; 00000018H

; 440  : 		va_end(ptr);

  0004d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _ptr$[ebp], 0

; 441  : 	}

  00054	8d 4d f8	 lea	 ecx, DWORD PTR _ple$[ebp]
  00057	e8 00 00 00 00	 call	 ??1CPreserveLastError@ATL@@QAE@XZ ; ATL::CPreserveLastError::~CPreserveLastError
  0005c	52		 push	 edx
  0005d	8b cd		 mov	 ecx, ebp
  0005f	50		 push	 eax
  00060	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@operator
  00066	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006b	58		 pop	 eax
  0006c	5a		 pop	 edx
  0006d	83 c4 14	 add	 esp, 20			; 00000014H
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
  0007b	90		 npad	 1
$LN5@operator:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN4@operator
$LN4@operator:
  00084	f8 ff ff ff	 DD	 -8			; fffffff8H
  00088	04 00 00 00	 DD	 4
  0008c	00 00 00 00	 DD	 $LN3@operator
$LN3@operator:
  00090	70		 DB	 112			; 00000070H
  00091	6c		 DB	 108			; 0000006cH
  00092	65		 DB	 101			; 00000065H
  00093	00		 DB	 0
??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 411  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 410  : 		: m_pszFileName(pszFileName), m_nLineNo(nLineNo)

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _pszFileName$[ebp]
  00014	89 08		 mov	 DWORD PTR [eax], ecx
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	8b 45 0c	 mov	 eax, DWORD PTR _nLineNo$[ebp]
  0001c	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 412  : 	}

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??1CPreserveLastError@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPreserveLastError@ATL@@QAE@XZ PROC			; ATL::CPreserveLastError::~CPreserveLastError, COMDAT
; _this$ = ecx

; 396  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 397  : 		SetLastError(m_dwLastError);

  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetLastError@4
  0001d	3b f4		 cmp	 esi, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 398  : 	}

  00024	5e		 pop	 esi
  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??1CPreserveLastError@ATL@@QAE@XZ ENDP			; ATL::CPreserveLastError::~CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0CPreserveLastError@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPreserveLastError@ATL@@QAE@XZ PROC			; ATL::CPreserveLastError::CPreserveLastError, COMDAT
; _this$ = ecx

; 390  : 	CPreserveLastError()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 391  : 	{
; 392  : 		m_dwLastError = GetLastError();

  0000f	8b f4		 mov	 esi, esp
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00017	3b f4		 cmp	 esi, esp
  00019	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	89 01		 mov	 DWORD PTR [ecx], eax

; 393  : 	}

  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5e		 pop	 esi
  00027	83 c4 04	 add	 esp, 4
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
??0CPreserveLastError@ATL@@QAE@XZ ENDP			; ATL::CPreserveLastError::CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_nBytes$ = -12						; size = 4
_this$ = -4						; size = 4
_nElements$ = 8						; size = 4
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 455  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 456  : 		size_t nBytes=0;

  0001a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nBytes$[ebp], 0

; 457  : 		if(FAILED(::ATL::AtlMultiply(&nBytes, nElements, sizeof(T))))

  00021	6a 02		 push	 2
  00023	8b 45 08	 mov	 eax, DWORD PTR _nElements$[ebp]
  00026	50		 push	 eax
  00027	8d 4d f4	 lea	 ecx, DWORD PTR _nBytes$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$AtlMultiply@I@ATL@@YAJPAIII@Z ; ATL::AtlMultiply<unsigned int>
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH
  00033	85 c0		 test	 eax, eax
  00035	7d 04		 jge	 SHORT $LN2@Allocate

; 458  : 		{
; 459  : 			return false;

  00037	32 c0		 xor	 al, al
  00039	eb 0c		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 460  : 		}
; 461  : 		return this->AllocateBytes(nBytes);

  0003b	8b 55 f4	 mov	 edx, DWORD PTR _nBytes$[ebp]
  0003e	52		 push	 edx
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
$LN1@Allocate:

; 462  : 	}

  00047	52		 push	 edx
  00048	8b cd		 mov	 ecx, ebp
  0004a	50		 push	 eax
  0004b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@Allocate
  00051	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00056	58		 pop	 eax
  00057	5a		 pop	 edx
  00058	83 c4 10	 add	 esp, 16			; 00000010H
  0005b	3b ec		 cmp	 ebp, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
$LN6@Allocate:
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN5@Allocate
$LN5@Allocate:
  00070	f4 ff ff ff	 DD	 -12			; fffffff4H
  00074	04 00 00 00	 DD	 4
  00078	00 00 00 00	 DD	 $LN4@Allocate
$LN4@Allocate:
  0007c	6e		 DB	 110			; 0000006eH
  0007d	42		 DB	 66			; 00000042H
  0007e	79		 DB	 121			; 00000079H
  0007f	74		 DB	 116			; 00000074H
  00080	65		 DB	 101			; 00000065H
  00081	73		 DB	 115			; 00000073H
  00082	00		 DB	 0
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 434  : 	CHeapPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 435  : 	{

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>

; 436  : 	}

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free, COMDAT
; _this$ = ecx

; 407  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		Allocator::Free(m_pData);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 08		 mov	 ecx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPAX@Z ; ATL::CCRTAllocator::Free
  00019	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0001c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001f	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 410  : 	}

  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes, COMDAT
; _this$ = ecx

; 381  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 382  : 		ATLASSERT(m_pData == NULL);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 26		 je	 SHORT $LN4@AllocateBy
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00020	6a 00		 push	 0
  00022	68 7e 01 00 00	 push	 382			; 0000017eH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@EFJOHFCD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002c	6a 02		 push	 2
  0002e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	83 f8 01	 cmp	 eax, 1
  00039	75 01		 jne	 SHORT $LN4@AllocateBy
  0003b	cc		 int	 3
$LN4@AllocateBy:

; 383  : 		m_pData = static_cast<T*>(Allocator::Allocate(nBytes));

  0003c	8b 55 08	 mov	 edx, DWORD PTR _nBytes$[ebp]
  0003f	52		 push	 edx
  00040	e8 00 00 00 00	 call	 ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ; ATL::CCRTAllocator::Allocate
  00045	83 c4 04	 add	 esp, 4
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	89 01		 mov	 DWORD PTR [ecx], eax

; 384  : 		if (m_pData == NULL)

  0004d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00050	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00053	75 04		 jne	 SHORT $LN2@AllocateBy

; 385  : 			return false;

  00055	32 c0		 xor	 al, al
  00057	eb 02		 jmp	 SHORT $LN1@AllocateBy
$LN2@AllocateBy:

; 386  : 
; 387  : 		return true;

  00059	b0 01		 mov	 al, 1
$LN1@AllocateBy:

; 388  : 	}

  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *, COMDAT
; _this$ = ecx

; 363  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 364  : 		return m_pData;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 365  : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 349  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 350  : 		Free();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free

; 351  : 	}

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 336  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 335  : 		m_pData(NULL)

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 337  : 	}

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z
_TEXT	SEGMENT
_pszCategory$ = 8					; size = 4
_nCategory$ = 12					; size = 4
?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 330  : 		if (pszCategory == nullptr)

  00003	83 7d 08 00	 cmp	 DWORD PTR _pszCategory$[ebp], 0
  00007	75 02		 jne	 SHORT $LN2@RegisterCa

; 331  : 		{
; 332  : 			return;

  00009	eb 74		 jmp	 SHORT $LN1@RegisterCa
$LN2@RegisterCa:

; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  0000b	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 32 ; ATL::CTrace::m_nLastCategory, 00000020H
  00012	72 2c		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  00014	33 c0		 xor	 eax, eax
  00016	75 26		 jne	 SHORT $LN5@RegisterCa
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00022	6a 00		 push	 0
  00024	68 51 01 00 00	 push	 337			; 00000151H
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@DGDFBHKA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0002e	6a 02		 push	 2
  00030	e8 00 00 00 00	 call	 __CrtDbgReportW
  00035	83 c4 18	 add	 esp, 24			; 00000018H
  00038	83 f8 01	 cmp	 eax, 1
  0003b	75 01		 jne	 SHORT $LN5@RegisterCa
  0003d	cc		 int	 3
$LN5@RegisterCa:

; 338  : 			return;

  0003e	eb 3f		 jmp	 SHORT $LN1@RegisterCa
$LN3@RegisterCa:

; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  00040	69 15 00 00 00
	00 04 01 00 00	 imul	 edx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  0004a	8b 45 0c	 mov	 eax, DWORD PTR _nCategory$[ebp]
  0004d	89 82 00 00 00
	00		 mov	 DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[edx], eax

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);

  00053	8b 4d 08	 mov	 ecx, DWORD PTR _pszCategory$[ebp]
  00056	51		 push	 ecx
  00057	6a 7f		 push	 127			; 0000007fH
  00059	69 15 00 00 00
	00 04 01 00 00	 imul	 edx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  00063	81 c2 04 00 00
	00		 add	 edx, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 _wcscpy_s
  0006f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	
; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);
; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);
; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  00077	83 c0 01	 add	 eax, 1
  0007a	a3 00 00 00 00	 mov	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z
_TEXT	SEGMENT
_vsnwprintf_result$ = -20				; size = 4
_wszBuf$ = -12						; size = 4
_cchNeeded$ = -4					; size = 4
_pszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
_dwCategory$ = 16					; size = 4
_nLevel$ = 20						; size = 4
_pwszFmt$ = 24						; size = 4
_args$ = 28						; size = 4
?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 281  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 282  : #if _MSC_VER < 1900
; 283  : 		int cchNeeded = _vscwprintf(pwszFmt, args);
; 284  : #else
; 285  : 		// Explicitly request the legacy wide format specifiers mode from the CRT,
; 286  : 		// for compatibility with previous versions.  While the CRT supports two
; 287  : 		// modes, the ATL and MFC functions that accept format strings only support
; 288  : 		// legacy mode format strings.
; 289  : 		int cchNeeded = __stdio_common_vswprintf(

  0001a	8b 45 1c	 mov	 eax, DWORD PTR _args$[ebp]
  0001d	50		 push	 eax
  0001e	6a 00		 push	 0
  00020	8b 4d 18	 mov	 ecx, DWORD PTR _pwszFmt$[ebp]
  00023	51		 push	 ecx
  00024	6a 00		 push	 0
  00026	6a 00		 push	 0
  00028	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	83 ca 02	 or	 edx, 2
  00032	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00035	83 ca 04	 or	 edx, 4
  00038	50		 push	 eax
  00039	52		 push	 edx
  0003a	e8 00 00 00 00	 call	 ___stdio_common_vswprintf
  0003f	83 c4 1c	 add	 esp, 28			; 0000001cH
  00042	89 45 fc	 mov	 DWORD PTR _cchNeeded$[ebp], eax

; 290  : 			_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS |
; 291  : 			_CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR |
; 292  : 			_CRT_INTERNAL_PRINTF_LEGACY_WIDE_SPECIFIERS,
; 293  : 			NULL, 0, pwszFmt, NULL, args);
; 294  : #endif
; 295  : 		if (cchNeeded < 0)

  00045	83 7d fc 00	 cmp	 DWORD PTR _cchNeeded$[ebp], 0
  00049	7d 05		 jge	 SHORT $LN2@TraceV

; 296  : 		{
; 297  : 			return;

  0004b	e9 b2 00 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:

; 298  : 		}
; 299  : 
; 300  : 		CHeapPtr<wchar_t> wszBuf;

  00050	8d 4d f4	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00053	e8 00 00 00 00	 call	 ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>

; 301  : 		if (!wszBuf.Allocate(cchNeeded + 1))

  00058	8b 4d fc	 mov	 ecx, DWORD PTR _cchNeeded$[ebp]
  0005b	83 c1 01	 add	 ecx, 1
  0005e	51		 push	 ecx
  0005f	8d 4d f4	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00062	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  00067	0f b6 d0	 movzx	 edx, al
  0006a	85 d2		 test	 edx, edx
  0006c	75 0d		 jne	 SHORT $LN3@TraceV

; 302  : 		{
; 303  : 			return;

  0006e	8d 4d f4	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00071	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  00076	e9 87 00 00 00	 jmp	 $LN1@TraceV
$LN3@TraceV:

; 304  : 		}
; 305  : 
; 306  : 		wszBuf[0] = '\0';

  0007b	8d 4d f4	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  0007e	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00083	b9 02 00 00 00	 mov	 ecx, 2
  00088	6b d1 00	 imul	 edx, ecx, 0
  0008b	33 c9		 xor	 ecx, ecx
  0008d	66 89 0c 10	 mov	 WORD PTR [eax+edx], cx

; 307  : 
; 308  : #if _MSC_VER < 1900
; 309  : 		if (_vsnwprintf_s(wszBuf, cchNeeded + 1, cchNeeded, pwszFmt, args) == -1)
; 310  : #else
; 311  : 		// Explicitly request the legacy wide format specifiers mode from the CRT,
; 312  : 		// for compatibility with previous versions.  While the CRT supports two
; 313  : 		// modes, the ATL and MFC functions that accept format strings only support
; 314  : 		// legacy mode format strings.
; 315  : 		int const vsnwprintf_result = __stdio_common_vsnwprintf_s(

  00091	8b 55 1c	 mov	 edx, DWORD PTR _args$[ebp]
  00094	52		 push	 edx
  00095	6a 00		 push	 0
  00097	8b 45 18	 mov	 eax, DWORD PTR _pwszFmt$[ebp]
  0009a	50		 push	 eax
  0009b	8b 4d fc	 mov	 ecx, DWORD PTR _cchNeeded$[ebp]
  0009e	51		 push	 ecx
  0009f	8b 55 fc	 mov	 edx, DWORD PTR _cchNeeded$[ebp]
  000a2	83 c2 01	 add	 edx, 1
  000a5	52		 push	 edx
  000a6	8d 4d f4	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  000a9	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	83 c9 04	 or	 ecx, 4
  000b9	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000bc	52		 push	 edx
  000bd	51		 push	 ecx
  000be	e8 00 00 00 00	 call	 ___stdio_common_vsnwprintf_s
  000c3	83 c4 20	 add	 esp, 32			; 00000020H
  000c6	89 45 ec	 mov	 DWORD PTR _vsnwprintf_result$[ebp], eax

; 316  : 			_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS |
; 317  : 			_CRT_INTERNAL_PRINTF_LEGACY_WIDE_SPECIFIERS,
; 318  : 			wszBuf, cchNeeded + 1, cchNeeded, pwszFmt, NULL, args);
; 319  : 		if (vsnwprintf_result < 0)

  000c9	83 7d ec 00	 cmp	 DWORD PTR _vsnwprintf_result$[ebp], 0
  000cd	7d 0a		 jge	 SHORT $LN4@TraceV

; 320  : #endif
; 321  : 		{
; 322  : 			return;

  000cf	8d 4d f4	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  000d2	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  000d7	eb 29		 jmp	 SHORT $LN1@TraceV
$LN4@TraceV:

; 323  : 		}
; 324  : 
; 325  : 		TraceV(pszFileName, nLine, dwCategory, nLevel, wszBuf);

  000d9	8d 4d f4	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  000dc	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  000e1	50		 push	 eax
  000e2	8b 45 14	 mov	 eax, DWORD PTR _nLevel$[ebp]
  000e5	50		 push	 eax
  000e6	8b 4d 10	 mov	 ecx, DWORD PTR _dwCategory$[ebp]
  000e9	51		 push	 ecx
  000ea	8b 55 0c	 mov	 edx, DWORD PTR _nLine$[ebp]
  000ed	52		 push	 edx
  000ee	8b 45 08	 mov	 eax, DWORD PTR _pszFileName$[ebp]
  000f1	50		 push	 eax
  000f2	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z ; ATL::CTrace::TraceV
  000f7	83 c4 14	 add	 esp, 20			; 00000014H

; 326  : 	}

  000fa	8d 4d f4	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  000fd	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
$LN1@TraceV:
  00102	52		 push	 edx
  00103	8b cd		 mov	 ecx, ebp
  00105	50		 push	 eax
  00106	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@TraceV
  0010c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00111	58		 pop	 eax
  00112	5a		 pop	 edx
  00113	83 c4 14	 add	 esp, 20			; 00000014H
  00116	3b ec		 cmp	 ebp, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c3		 ret	 0
  00121	0f 1f 00	 npad	 3
$LN8@TraceV:
  00124	01 00 00 00	 DD	 1
  00128	00 00 00 00	 DD	 $LN7@TraceV
$LN7@TraceV:
  0012c	f4 ff ff ff	 DD	 -12			; fffffff4H
  00130	04 00 00 00	 DD	 4
  00134	00 00 00 00	 DD	 $LN6@TraceV
$LN6@TraceV:
  00138	77		 DB	 119			; 00000077H
  00139	73		 DB	 115			; 00000073H
  0013a	7a		 DB	 122			; 0000007aH
  0013b	42		 DB	 66			; 00000042H
  0013c	75		 DB	 117			; 00000075H
  0013d	66		 DB	 102			; 00000066H
  0013e	00		 DB	 0
?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z
_TEXT	SEGMENT
_fileName$ = -2608					; size = 520
_wszBuf$ = -2080					; size = 4
_chCount$ = -2072					; size = 4
_pwszCategoryName$ = -2068				; size = 4
_categoryLength$ = -2064				; size = 4
_wszCategory$ = -2056					; size = 2048
__$ArrayPad$ = -4					; size = 4
_pszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
_dwCategory$ = 16					; size = 4
_nLevel$ = 20						; size = 4
_pwszMessage$ = 24					; size = 4
?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 150  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 34 0a 00
	00		 sub	 esp, 2612		; 00000a34H
  00009	57		 push	 edi
  0000a	8d bd cc f5 ff
	ff		 lea	 edi, DWORD PTR [ebp-2612]
  00010	b9 8d 02 00 00	 mov	 ecx, 653		; 0000028dH
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00021	33 c5		 xor	 eax, ebp
  00023	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 151  : 		if (CTrace::m_nLevel == CTrace::DisableTracing || CTrace::m_nLevel < nLevel || (CTrace::m_nCategory & dwCategory) == 0)

  00026	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?m_nLevel@CTrace@ATL@@1IA, -1 ; ATL::CTrace::m_nLevel
  0002d	74 15		 je	 SHORT $LN3@TraceV
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLevel@CTrace@ATL@@1IA ; ATL::CTrace::m_nLevel
  00034	3b 45 14	 cmp	 eax, DWORD PTR _nLevel$[ebp]
  00037	72 0b		 jb	 SHORT $LN3@TraceV
  00039	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nCategory
  0003f	23 4d 10	 and	 ecx, DWORD PTR _dwCategory$[ebp]
  00042	75 05		 jne	 SHORT $LN2@TraceV
$LN3@TraceV:

; 152  : 		{
; 153  : 			return;

  00044	e9 c0 01 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:

; 154  : 		}
; 155  : 
; 156  : 		wchar_t wszCategory[TraceBufferSize] = {'\0'};

  00049	68 00 08 00 00	 push	 2048			; 00000800H
  0004e	6a 00		 push	 0
  00050	8d 95 f8 f7 ff
	ff		 lea	 edx, DWORD PTR _wszCategory$[ebp]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 _memset
  0005c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 157  : 		int categoryLength = 0;

  0005f	c7 85 f0 f7 ff
	ff 00 00 00 00	 mov	 DWORD PTR _categoryLength$[ebp], 0

; 158  : 		const wchar_t *const pwszCategoryName = GetCategoryName(dwCategory);

  00069	8b 45 10	 mov	 eax, DWORD PTR _dwCategory$[ebp]
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?GetCategoryName@CTrace@ATL@@CAPA_WI@Z ; ATL::CTrace::GetCategoryName
  00072	83 c4 04	 add	 esp, 4
  00075	89 85 ec f7 ff
	ff		 mov	 DWORD PTR _pwszCategoryName$[ebp], eax

; 159  : 		if (pwszCategoryName != nullptr)

  0007b	83 bd ec f7 ff
	ff 00		 cmp	 DWORD PTR _pwszCategoryName$[ebp], 0
  00082	74 36		 je	 SHORT $LN4@TraceV

; 160  : 		{
; 161  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%ls - ", pwszCategoryName)) == -1)

  00084	8b 8d ec f7 ff
	ff		 mov	 ecx, DWORD PTR _pwszCategoryName$[ebp]
  0008a	51		 push	 ecx
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
  00090	68 00 04 00 00	 push	 1024			; 00000400H
  00095	8d 95 f8 f7 ff
	ff		 lea	 edx, DWORD PTR _wszCategory$[ebp]
  0009b	52		 push	 edx
  0009c	e8 00 00 00 00	 call	 _swprintf_s
  000a1	83 c4 10	 add	 esp, 16			; 00000010H
  000a4	89 85 f0 f7 ff
	ff		 mov	 DWORD PTR _categoryLength$[ebp], eax
  000aa	83 bd f0 f7 ff
	ff ff		 cmp	 DWORD PTR _categoryLength$[ebp], -1
  000b1	75 05		 jne	 SHORT $LN6@TraceV

; 162  : 			{
; 163  : 				return;

  000b3	e9 51 01 00 00	 jmp	 $LN1@TraceV
$LN6@TraceV:

; 164  : 			}
; 165  : 		}

  000b8	eb 31		 jmp	 SHORT $LN5@TraceV
$LN4@TraceV:

; 166  : 		else
; 167  : 		{
; 168  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%u - ", dwCategory)) == -1)

  000ba	8b 45 10	 mov	 eax, DWORD PTR _dwCategory$[ebp]
  000bd	50		 push	 eax
  000be	68 00 00 00 00	 push	 OFFSET ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
  000c3	68 00 04 00 00	 push	 1024			; 00000400H
  000c8	8d 8d f8 f7 ff
	ff		 lea	 ecx, DWORD PTR _wszCategory$[ebp]
  000ce	51		 push	 ecx
  000cf	e8 00 00 00 00	 call	 _swprintf_s
  000d4	83 c4 10	 add	 esp, 16			; 00000010H
  000d7	89 85 f0 f7 ff
	ff		 mov	 DWORD PTR _categoryLength$[ebp], eax
  000dd	83 bd f0 f7 ff
	ff ff		 cmp	 DWORD PTR _categoryLength$[ebp], -1
  000e4	75 05		 jne	 SHORT $LN5@TraceV

; 169  : 			{
; 170  : 				return;

  000e6	e9 1e 01 00 00	 jmp	 $LN1@TraceV
$LN5@TraceV:

; 171  : 			}
; 172  : 		}
; 173  : 
; 174  : 		int chCount = (int)wcslen(pwszMessage) + categoryLength + 1;

  000eb	8b 55 18	 mov	 edx, DWORD PTR _pwszMessage$[ebp]
  000ee	52		 push	 edx
  000ef	e8 00 00 00 00	 call	 _wcslen
  000f4	83 c4 04	 add	 esp, 4
  000f7	8b 8d f0 f7 ff
	ff		 mov	 ecx, DWORD PTR _categoryLength$[ebp]
  000fd	8d 54 08 01	 lea	 edx, DWORD PTR [eax+ecx+1]
  00101	89 95 e8 f7 ff
	ff		 mov	 DWORD PTR _chCount$[ebp], edx

; 175  : 		CHeapPtr<wchar_t> wszBuf;

  00107	8d 8d e0 f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  0010d	e8 00 00 00 00	 call	 ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>

; 176  : 		if (!wszBuf.Allocate(chCount))

  00112	8b 85 e8 f7 ff
	ff		 mov	 eax, DWORD PTR _chCount$[ebp]
  00118	50		 push	 eax
  00119	8d 8d e0 f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  0011f	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  00124	0f b6 c8	 movzx	 ecx, al
  00127	85 c9		 test	 ecx, ecx
  00129	75 10		 jne	 SHORT $LN8@TraceV

; 177  : 		{
; 178  : 			return;

  0012b	8d 8d e0 f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00131	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  00136	e9 ce 00 00 00	 jmp	 $LN1@TraceV
$LN8@TraceV:

; 179  : 		}
; 180  : 
; 181  : 		wszBuf[0] = '\0';

  0013b	8d 8d e0 f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00141	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00146	ba 02 00 00 00	 mov	 edx, 2
  0014b	6b ca 00	 imul	 ecx, edx, 0
  0014e	33 d2		 xor	 edx, edx
  00150	66 89 14 08	 mov	 WORD PTR [eax+ecx], dx

; 182  : 
; 183  : 		if (swprintf_s(wszBuf, chCount, L"%ls%ls", wszCategory, pwszMessage) == -1)

  00154	8b 45 18	 mov	 eax, DWORD PTR _pwszMessage$[ebp]
  00157	50		 push	 eax
  00158	8d 8d f8 f7 ff
	ff		 lea	 ecx, DWORD PTR _wszCategory$[ebp]
  0015e	51		 push	 ecx
  0015f	68 00 00 00 00	 push	 OFFSET ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
  00164	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _chCount$[ebp]
  0016a	52		 push	 edx
  0016b	8d 8d e0 f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00171	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00176	50		 push	 eax
  00177	e8 00 00 00 00	 call	 _swprintf_s
  0017c	83 c4 14	 add	 esp, 20			; 00000014H
  0017f	83 f8 ff	 cmp	 eax, -1
  00182	75 0d		 jne	 SHORT $LN9@TraceV

; 184  : 		{
; 185  : 			return;

  00184	8d 8d e0 f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  0018a	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  0018f	eb 78		 jmp	 SHORT $LN1@TraceV
$LN9@TraceV:

; 186  : 		}
; 187  : 
; 188  : 		wchar_t fileName[_MAX_PATH] = {'\0'};	

  00191	68 08 02 00 00	 push	 520			; 00000208H
  00196	6a 00		 push	 0
  00198	8d 85 d0 f5 ff
	ff		 lea	 eax, DWORD PTR _fileName$[ebp]
  0019e	50		 push	 eax
  0019f	e8 00 00 00 00	 call	 _memset
  001a4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 189  : #if _MSC_VER < 1900
; 190  : 		if (swprintf_s(fileName, _MAX_PATH, L"%S", pszFileName) == -1)
; 191  : #else
; 192  : 		if (swprintf_s(fileName, _MAX_PATH, L"%hs", pszFileName) == -1)

  001a7	8b 4d 08	 mov	 ecx, DWORD PTR _pszFileName$[ebp]
  001aa	51		 push	 ecx
  001ab	68 00 00 00 00	 push	 OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  001b0	68 04 01 00 00	 push	 260			; 00000104H
  001b5	8d 95 d0 f5 ff
	ff		 lea	 edx, DWORD PTR _fileName$[ebp]
  001bb	52		 push	 edx
  001bc	e8 00 00 00 00	 call	 _swprintf_s
  001c1	83 c4 10	 add	 esp, 16			; 00000010H
  001c4	83 f8 ff	 cmp	 eax, -1
  001c7	75 0d		 jne	 SHORT $LN10@TraceV

; 193  : #endif
; 194  : 		{
; 195  : 			return;

  001c9	8d 8d e0 f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  001cf	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  001d4	eb 33		 jmp	 SHORT $LN1@TraceV
$LN10@TraceV:

; 196  : 		}
; 197  : 
; 198  : 		_CrtDbgReportW(_CRT_WARN, fileName, nLine, nullptr, L"%ls", static_cast<const wchar_t*>(wszBuf));

  001d6	8d 8d e0 f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  001dc	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  001e1	50		 push	 eax
  001e2	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  001e7	6a 00		 push	 0
  001e9	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  001ec	50		 push	 eax
  001ed	8d 8d d0 f5 ff
	ff		 lea	 ecx, DWORD PTR _fileName$[ebp]
  001f3	51		 push	 ecx
  001f4	6a 00		 push	 0
  001f6	e8 00 00 00 00	 call	 __CrtDbgReportW
  001fb	83 c4 18	 add	 esp, 24			; 00000018H

; 199  : 	}

  001fe	8d 8d e0 f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00204	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
$LN1@TraceV:
  00209	52		 push	 edx
  0020a	8b cd		 mov	 ecx, ebp
  0020c	50		 push	 eax
  0020d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN16@TraceV
  00213	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00218	58		 pop	 eax
  00219	5a		 pop	 edx
  0021a	5f		 pop	 edi
  0021b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0021e	33 cd		 xor	 ecx, ebp
  00220	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00225	81 c4 34 0a 00
	00		 add	 esp, 2612		; 00000a34H
  0022b	3b ec		 cmp	 ebp, esp
  0022d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00232	8b e5		 mov	 esp, ebp
  00234	5d		 pop	 ebp
  00235	c3		 ret	 0
  00236	66 90		 npad	 2
$LN16@TraceV:
  00238	03 00 00 00	 DD	 3
  0023c	00 00 00 00	 DD	 $LN15@TraceV
$LN15@TraceV:
  00240	f8 f7 ff ff	 DD	 -2056			; fffff7f8H
  00244	00 08 00 00	 DD	 2048			; 00000800H
  00248	00 00 00 00	 DD	 $LN12@TraceV
  0024c	e0 f7 ff ff	 DD	 -2080			; fffff7e0H
  00250	04 00 00 00	 DD	 4
  00254	00 00 00 00	 DD	 $LN13@TraceV
  00258	d0 f5 ff ff	 DD	 -2608			; fffff5d0H
  0025c	08 02 00 00	 DD	 520			; 00000208H
  00260	00 00 00 00	 DD	 $LN14@TraceV
$LN14@TraceV:
  00264	66		 DB	 102			; 00000066H
  00265	69		 DB	 105			; 00000069H
  00266	6c		 DB	 108			; 0000006cH
  00267	65		 DB	 101			; 00000065H
  00268	4e		 DB	 78			; 0000004eH
  00269	61		 DB	 97			; 00000061H
  0026a	6d		 DB	 109			; 0000006dH
  0026b	65		 DB	 101			; 00000065H
  0026c	00		 DB	 0
$LN13@TraceV:
  0026d	77		 DB	 119			; 00000077H
  0026e	73		 DB	 115			; 00000073H
  0026f	7a		 DB	 122			; 0000007aH
  00270	42		 DB	 66			; 00000042H
  00271	75		 DB	 117			; 00000075H
  00272	66		 DB	 102			; 00000066H
  00273	00		 DB	 0
$LN12@TraceV:
  00274	77		 DB	 119			; 00000077H
  00275	73		 DB	 115			; 00000073H
  00276	7a		 DB	 122			; 0000007aH
  00277	43		 DB	 67			; 00000043H
  00278	61		 DB	 97			; 00000061H
  00279	74		 DB	 116			; 00000074H
  0027a	65		 DB	 101			; 00000065H
  0027b	67		 DB	 103			; 00000067H
  0027c	6f		 DB	 111			; 0000006fH
  0027d	72		 DB	 114			; 00000072H
  0027e	79		 DB	 121			; 00000079H
  0027f	00		 DB	 0
?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ?GetCategoryName@CTrace@ATL@@CAPA_WI@Z
_TEXT	SEGMENT
_i$1 = -4						; size = 4
_nCategory$ = 8						; size = 4
?GetCategoryName@CTrace@ATL@@CAPA_WI@Z PROC		; ATL::CTrace::GetCategoryName, COMDAT

; 132  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 133  : 		for(unsigned int i = 0; i < m_nLastCategory; i++) 

  0000b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00012	eb 09		 jmp	 SHORT $LN4@GetCategor
$LN2@GetCategor:
  00014	8b 45 fc	 mov	 eax, DWORD PTR _i$1[ebp]
  00017	83 c0 01	 add	 eax, 1
  0001a	89 45 fc	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@GetCategor:
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _i$1[ebp]
  00020	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  00026	73 22		 jae	 SHORT $LN3@GetCategor

; 134  : 		{
; 135  : 			if (m_nMap[i].nCategory == nCategory)

  00028	69 55 fc 04 01
	00 00		 imul	 edx, DWORD PTR _i$1[ebp], 260
  0002f	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[edx]
  00035	3b 45 08	 cmp	 eax, DWORD PTR _nCategory$[ebp]
  00038	75 0e		 jne	 SHORT $LN5@GetCategor

; 136  : 			{
; 137  : 				return m_nMap[i].categryName;

  0003a	69 45 fc 04 01
	00 00		 imul	 eax, DWORD PTR _i$1[ebp], 260
  00041	05 04 00 00 00	 add	 eax, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  00046	eb 04		 jmp	 SHORT $LN1@GetCategor
$LN5@GetCategor:

; 138  : 			}
; 139  : 		}

  00048	eb ca		 jmp	 SHORT $LN2@GetCategor
$LN3@GetCategor:

; 140  : 
; 141  : 		return nullptr;

  0004a	33 c0		 xor	 eax, eax
$LN1@GetCategor:

; 142  : 	}

  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
?GetCategoryName@CTrace@ATL@@CAPA_WI@Z ENDP		; ATL::CTrace::GetCategoryName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceISAPI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceISAPI@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceISAPI'', COMDAT

; 119  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceISAPI> atlTraceISAPI(_T("atlTraceISAPI"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG94192
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceISAPI@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceISAPI''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 00 00 40 00	 push	 4194304			; 00400000H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSync@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSync@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSync'', COMDAT

; 118  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSync> atlTraceSync(_T("atlTraceSync"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG94143
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceSync@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSync''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 00 00 20 00	 push	 2097152			; 00200000H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSecurity@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSecurity@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSecurity'', COMDAT

; 117  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSecurity> atlTraceSecurity(_T("atlTraceSecurity"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG94094
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceSecurity@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSecurity''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 00 00 10 00	 push	 1048576			; 00100000H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceUtil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceUtil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceUtil'', COMDAT

; 116  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceUtil> atlTraceUtil(_T("atlTraceUtil"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG94045
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceUtil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceUtil''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceMap@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceMap@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceMap'', COMDAT

; 115  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceMap> atlTraceMap(_T("atlTraceMap"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG94040
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceMap@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceMap''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 00 00 04 00	 push	 262144			; 00040000H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceString@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceString@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceString'', COMDAT

; 114  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceString> atlTraceString(_T("atlTraceString"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93991
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceString@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceString''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 00 00 02 00	 push	 131072			; 00020000H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceStencil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceStencil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceStencil'', COMDAT

; 113  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceStencil> atlTraceStencil(_T("atlTraceStencil"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93942
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceStencil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceStencil''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 00 00 01 00	 push	 65536			; 00010000H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceCache@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCache@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCache'', COMDAT

; 112  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCache> atlTraceCache(_T("atlTraceCache"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93893
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceCache@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCache''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 00 80 00 00	 push	 32768			; 00008000H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceTime@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceTime@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceTime'', COMDAT

; 111  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceTime> atlTraceTime(_T("atlTraceTime"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93844
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceTime@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceTime''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 00 40 00 00	 push	 16384			; 00004000H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93795
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ PROC	; ATL::CTraceCategoryEx<8192,0>::operator unsigned int, COMDAT
; _this$ = ecx

; 79   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  0000e	b8 00 20 00 00	 mov	 eax, 8192		; 00002000H

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ ENDP	; ATL::CTraceCategoryEx<8192,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 00 20 00 00	 push	 8192			; 00002000H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceAllocation@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceAllocation@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceAllocation'', COMDAT

; 109  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceAllocation> atlTraceAllocation(_T("atlTraceAllocation"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93746
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceAllocation@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceAllocation''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 00 10 00 00	 push	 4096			; 00001000H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceNotImpl@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceNotImpl@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceNotImpl'', COMDAT

; 108  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceNotImpl> atlTraceNotImpl(_T("atlTraceNotImpl"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93697
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceNotImpl@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceNotImpl''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ PROC	; ATL::CTraceCategoryEx<2048,0>::operator unsigned int, COMDAT
; _this$ = ecx

; 79   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  0000e	b8 00 08 00 00	 mov	 eax, 2048		; 00000800H

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAEIXZ ENDP	; ATL::CTraceCategoryEx<2048,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 00 08 00 00	 push	 2048			; 00000800H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSnapin@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSnapin@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSnapin'', COMDAT

; 107  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSnapin> atlTraceSnapin(_T("atlTraceSnapin"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93648
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceSnapin@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSnapin''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 00 04 00 00	 push	 1024			; 00000400H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceDBProvider@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBProvider@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBProvider'', COMDAT

; 106  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBProvider> atlTraceDBProvider(_T("atlTraceDBProvider"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93599
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceDBProvider@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBProvider''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 00 02 00 00	 push	 512			; 00000200H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceDBClient@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBClient@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBClient'', COMDAT

; 105  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBClient> atlTraceDBClient(_T("atlTraceDBClient"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93550
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceDBClient@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBClient''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 00 01 00 00	 push	 256			; 00000100H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceHosting@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceHosting@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceHosting'', COMDAT

; 104  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceHosting> atlTraceHosting(_T("atlTraceHosting"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93501
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceHosting@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceHosting''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 80 00 00 00	 push	 128			; 00000080H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceControls@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceControls@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceControls'', COMDAT

; 103  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceControls> atlTraceControls(_T("atlTraceControls"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93452
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceControls@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceControls''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ PROC	; ATL::CTraceCategoryEx<64,0>::operator unsigned int, COMDAT
; _this$ = ecx

; 79   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  0000e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAEIXZ ENDP	; ATL::CTraceCategoryEx<64,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	6a 40		 push	 64			; 00000040H
  00010	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00019	83 c4 08	 add	 esp, 8

; 482  : }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceWindowing@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceWindowing@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceWindowing'', COMDAT

; 102  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceWindowing> atlTraceWindowing(_T("atlTraceWindowing"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93403
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceWindowing@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceWindowing''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ PROC	; ATL::CTraceCategoryEx<32,0>::operator unsigned int, COMDAT
; _this$ = ecx

; 79   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  0000e	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ ENDP	; ATL::CTraceCategoryEx<32,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	6a 20		 push	 32			; 00000020H
  00010	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00019	83 c4 08	 add	 esp, 8

; 482  : }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceRefcount@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRefcount@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRefcount'', COMDAT

; 101  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRefcount> atlTraceRefcount(_T("atlTraceRefcount"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93354
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceRefcount@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRefcount''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	6a 10		 push	 16			; 00000010H
  00010	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00019	83 c4 08	 add	 esp, 8

; 482  : }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceRegistrar@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRegistrar@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRegistrar'', COMDAT

; 100  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRegistrar> atlTraceRegistrar(_T("atlTraceRegistrar"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93305
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceRegistrar@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRegistrar''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ PROC		; ATL::CTraceCategoryEx<8,0>::operator unsigned int, COMDAT
; _this$ = ecx

; 79   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  0000e	b8 08 00 00 00	 mov	 eax, 8

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CTraceCategoryEx@$07$0A@@ATL@@QAEIXZ ENDP		; ATL::CTraceCategoryEx<8,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	6a 08		 push	 8
  00010	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00019	83 c4 08	 add	 esp, 8

; 482  : }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceQI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceQI@ATL@@YAXXZ PROC				; ATL::`dynamic initializer for 'atlTraceQI'', COMDAT

; 99   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceQI> atlTraceQI(_T("atlTraceQI"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93256
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceQI@ATL@@YAXXZ ENDP				; ATL::`dynamic initializer for 'atlTraceQI''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	6a 04		 push	 4
  00010	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00019	83 c4 08	 add	 esp, 8

; 482  : }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceCOM@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCOM@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCOM'', COMDAT

; 98   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCom> atlTraceCOM(_T("atlTraceCOM"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93207
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceCOM@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCOM''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ PROC		; ATL::CTraceCategoryEx<2,0>::operator unsigned int, COMDAT
; _this$ = ecx

; 79   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  0000e	b8 02 00 00 00	 mov	 eax, 2

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ENDP		; ATL::CTraceCategoryEx<2,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	6a 02		 push	 2
  00010	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00019	83 c4 08	 add	 esp, 8

; 482  : }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceGeneral@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceGeneral@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceGeneral'', COMDAT

; 97   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceGeneral> atlTraceGeneral(_T("atlTraceGeneral"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG93134
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceGeneral@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceGeneral''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$00$0A@@ATL@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTraceCategoryEx@$00$0A@@ATL@@QAEIXZ PROC		; ATL::CTraceCategoryEx<1,0>::operator unsigned int, COMDAT
; _this$ = ecx

; 79   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  0000e	b8 01 00 00 00	 mov	 eax, 1

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CTraceCategoryEx@$00$0A@@ATL@@QAEIXZ ENDP		; ATL::CTraceCategoryEx<1,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	6a 01		 push	 1
  00010	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00019	83 c4 08	 add	 esp, 8

; 482  : }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 00 00 08 00	 push	 524288			; 00080000H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlconv.h
;	COMDAT ?DEVMODEOLE2T_EX@@YAPAU_devicemodeW@@PAU1@@Z
_TEXT	SEGMENT
_lp$ = 8						; size = 4
?DEVMODEOLE2T_EX@@YAPAU_devicemodeW@@PAU1@@Z PROC	; DEVMODEOLE2T_EX, COMDAT

; 1414 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1415 : 	return lp;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]

; 1416 : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?DEVMODEOLE2T_EX@@YAPAU_devicemodeW@@PAU1@@Z ENDP	; DEVMODEOLE2T_EX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT
_p$1 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ PROC ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 690  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN2@CAtlSafeAl:

; 691  : 		// Walk the list and free the buffers
; 692  : 		while (m_pHead != NULL)

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001d	74 22		 je	 SHORT $LN1@CAtlSafeAl

; 693  : 		{
; 694  : 			CAtlSafeAllocBufferNode* p = m_pHead;

  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	89 55 f8	 mov	 DWORD PTR _p$1[ebp], edx

; 695  : 			m_pHead = m_pHead->m_pNext;

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00031	89 02		 mov	 DWORD PTR [edx], eax

; 696  : 			Allocator::Free(p);

  00033	8b 4d f8	 mov	 ecx, DWORD PTR _p$1[ebp]
  00036	51		 push	 ecx
  00037	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPAX@Z ; ATL::CCRTAllocator::Free
  0003c	83 c4 04	 add	 esp, 4

; 697  : 		}

  0003f	eb d6		 jmp	 SHORT $LN2@CAtlSafeAl
$LN1@CAtlSafeAl:

; 698  : 	}

  00041	83 c4 08	 add	 esp, 8
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
_nRequestedSize$ = 8					; size = 4
?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z PROC ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 678  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 679  : 		CAtlSafeAllocBufferNode *p = (CAtlSafeAllocBufferNode*)Allocator::Allocate(::ATL::AtlAddThrow(nRequestedSize, static_cast<SIZE_T>(sizeof(CAtlSafeAllocBufferNode))));

  00017	6a 08		 push	 8
  00019	8b 45 08	 mov	 eax, DWORD PTR _nRequestedSize$[ebp]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??$AtlAddThrow@K@ATL@@YAKKK@Z ; ATL::AtlAddThrow<unsigned long>
  00022	83 c4 08	 add	 esp, 8
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ; ATL::CCRTAllocator::Allocate
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax

; 680  : 		if (p == NULL)

  00031	83 7d f8 00	 cmp	 DWORD PTR _p$[ebp], 0
  00035	75 04		 jne	 SHORT $LN2@Allocate

; 681  : 			return NULL;

  00037	33 c0		 xor	 eax, eax
  00039	eb 1a		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 682  : 
; 683  : 		// Add buffer to the list
; 684  : 		p->m_pNext = m_pHead;

  0003b	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  0003e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00041	8b 02		 mov	 eax, DWORD PTR [edx]
  00043	89 01		 mov	 DWORD PTR [ecx], eax

; 685  : 		m_pHead = p;

  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  0004b	89 11		 mov	 DWORD PTR [ecx], edx

; 686  : 
; 687  : 		return p->GetData();

  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  00050	e8 00 00 00 00	 call	 ?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData
$LN1@Allocate:

; 688  : 	}

  00055	83 c4 08	 add	 esp, 8
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ PROC ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 675  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 674  : 	CAtlSafeAllocBufferManager() : m_pHead(NULL)

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 676  : 	}

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlconv.h
;	COMDAT ?OLE2T_EX@@YAPA_WPA_WI@Z
_TEXT	SEGMENT
_lp$ = 8						; size = 4
___formal$ = 12						; size = 4
?OLE2T_EX@@YAPA_WPA_WI@Z PROC				; OLE2T_EX, COMDAT

; 817  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 818  : 	return lp;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]

; 819  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?OLE2T_EX@@YAPA_WPA_WI@Z ENDP				; OLE2T_EX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlconv.h
;	COMDAT ?T2OLE_EX@@YAPA_WPA_WI@Z
_TEXT	SEGMENT
_lp$ = 8						; size = 4
___formal$ = 12						; size = 4
?T2OLE_EX@@YAPA_WPA_WI@Z PROC				; T2OLE_EX, COMDAT

; 807  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 808  : 	return lp;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]

; 809  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?T2OLE_EX@@YAPA_WPA_WI@Z ENDP				; T2OLE_EX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlconv.h
;	COMDAT ?OLE2CT_EX_DEF@@YAPB_WPB_W@Z
_TEXT	SEGMENT
_lp$ = 8						; size = 4
?OLE2CT_EX_DEF@@YAPB_WPB_W@Z PROC			; OLE2CT_EX_DEF, COMDAT

; 801  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  : 	return lp;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]

; 803  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?OLE2CT_EX_DEF@@YAPB_WPB_W@Z ENDP			; OLE2CT_EX_DEF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlconv.h
;	COMDAT ?OLE2CT_EX@@YAPB_WPB_WI@Z
_TEXT	SEGMENT
_lp$ = 8						; size = 4
___formal$ = 12						; size = 4
?OLE2CT_EX@@YAPB_WPB_WI@Z PROC				; OLE2CT_EX, COMDAT

; 797  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 798  : 	return lp;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]

; 799  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?OLE2CT_EX@@YAPB_WPB_WI@Z ENDP				; OLE2CT_EX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlconv.h
;	COMDAT ?T2COLE_EX@@YAPB_WPB_WI@Z
_TEXT	SEGMENT
_lp$ = 8						; size = 4
___formal$ = 12						; size = 4
?T2COLE_EX@@YAPB_WPB_WI@Z PROC				; T2COLE_EX, COMDAT

; 787  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 788  : 	return lp;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]

; 789  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?T2COLE_EX@@YAPB_WPB_WI@Z ENDP				; T2COLE_EX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlconv.h
;	COMDAT ?ocscpy_s@@YA_NPA_WIPB_W@Z
_TEXT	SEGMENT
tv75 = -4						; size = 4
_dest$ = 8						; size = 4
_maxSize$ = 12						; size = 4
_src$ = 16						; size = 4
?ocscpy_s@@YA_NPA_WIPB_W@Z PROC				; ocscpy_s, COMDAT

; 745  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 746  : 	return 0 == memcpy_s(dest, maxSize*sizeof(WCHAR), src, (ocslen(src)+1)*sizeof(WCHAR));

  0000b	8b 45 10	 mov	 eax, DWORD PTR _src$[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?ocslen@@YAHPB_W@Z	; ocslen
  00014	83 c4 04	 add	 esp, 4
  00017	8d 4c 00 02	 lea	 ecx, DWORD PTR [eax+eax+2]
  0001b	51		 push	 ecx
  0001c	8b 55 10	 mov	 edx, DWORD PTR _src$[ebp]
  0001f	52		 push	 edx
  00020	8b 45 0c	 mov	 eax, DWORD PTR _maxSize$[ebp]
  00023	d1 e0		 shl	 eax, 1
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _dest$[ebp]
  00029	51		 push	 ecx
  0002a	e8 00 00 00 00	 call	 _memcpy_s
  0002f	83 c4 10	 add	 esp, 16			; 00000010H
  00032	85 c0		 test	 eax, eax
  00034	75 09		 jne	 SHORT $LN3@ocscpy_s
  00036	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv75[ebp], 1
  0003d	eb 07		 jmp	 SHORT $LN4@ocscpy_s
$LN3@ocscpy_s:
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN4@ocscpy_s:
  00046	8a 45 fc	 mov	 al, BYTE PTR tv75[ebp]

; 747  : }

  00049	83 c4 04	 add	 esp, 4
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
?ocscpy_s@@YA_NPA_WIPB_W@Z ENDP				; ocscpy_s
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlconv.h
;	COMDAT ?ocslen@@YAHPB_W@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
?ocslen@@YAHPB_W@Z PROC					; ocslen, COMDAT

; 731  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 732  : 	if (x == NULL)

  00003	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  00007	75 04		 jne	 SHORT $LN2@ocslen

; 733  : 	{
; 734  : 		return 0;

  00009	33 c0		 xor	 eax, eax
  0000b	eb 0c		 jmp	 SHORT $LN1@ocslen
$LN2@ocslen:

; 735  : 	}
; 736  : 
; 737  : 	return static_cast<int>(wcslen(x));

  0000d	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 _wcslen
  00016	83 c4 04	 add	 esp, 4
$LN1@ocslen:

; 738  : }

  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?ocslen@@YAHPB_W@Z ENDP					; ocslen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC			; ATL::_AtlGetConversionACP, COMDAT

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 99   : #ifdef _CONVERSION_DONT_USE_THREAD_LOCALE
; 100  : 	return CP_ACP;
; 101  : #else
; 102  : 	return CP_THREAD_ACP;

  00003	b8 03 00 00 00	 mov	 eax, 3

; 103  : #endif
; 104  : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlAdd@K@ATL@@YAJPAKKK@Z
_TEXT	SEGMENT
_ptResult$ = 8						; size = 4
_tLeft$ = 12						; size = 4
_tRight$ = 16						; size = 4
??$AtlAdd@K@ATL@@YAJPAKKK@Z PROC			; ATL::AtlAdd<unsigned long>, COMDAT

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 85   : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00003	83 c8 ff	 or	 eax, -1
  00006	2b 45 0c	 sub	 eax, DWORD PTR _tLeft$[ebp]
  00009	3b 45 10	 cmp	 eax, DWORD PTR _tRight$[ebp]
  0000c	73 0f		 jae	 SHORT $LN2@AtlAdd

; 86   : 	{
; 87   : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  0000e	68 16 02 00 00	 push	 534			; 00000216H
  00013	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00018	83 c4 04	 add	 esp, 4
  0001b	eb 0d		 jmp	 SHORT $LN1@AtlAdd
$LN2@AtlAdd:

; 88   : 	}
; 89   : 	*ptResult= tLeft + tRight;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR _tLeft$[ebp]
  00020	03 4d 10	 add	 ecx, DWORD PTR _tRight$[ebp]
  00023	8b 55 08	 mov	 edx, DWORD PTR _ptResult$[ebp]
  00026	89 0a		 mov	 DWORD PTR [edx], ecx

; 90   : 	return S_OK;

  00028	33 c0		 xor	 eax, eax
$LN1@AtlAdd:

; 91   : }

  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$AtlAdd@K@ATL@@YAJPAKKK@Z ENDP			; ATL::AtlAdd<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z
_TEXT	SEGMENT
tv84 = -88						; size = 4
tv81 = -84						; size = 4
tv86 = -80						; size = 4
__$AllocaPad$$ = -72					; size = 4
$T2 = -64						; size = 4
_p$3 = -60						; size = 4
_hrAdd$4 = -56						; size = 4
_size$5 = -48						; size = 4
_bStackAvailable$ = -33					; size = 1
__$ArrayPad$ = -28					; size = 4
__$SEHRec$ = -24					; size = 24
_Size$ = 8						; size = 4
?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z PROC ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable, COMDAT

; 617  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a fe		 push	 -2			; fffffffeH
  00005	68 00 00 00 00	 push	 OFFSET __sehtable$?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z
  0000a	68 00 00 00 00	 push	 OFFSET __except_handler4
  0000f	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00015	50		 push	 eax
  00016	83 c4 b8	 add	 esp, -72		; ffffffb8H
  00019	53		 push	 ebx
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	8d 7d a8	 lea	 edi, DWORD PTR [ebp-88]
  0001f	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	31 45 f8	 xor	 DWORD PTR __$SEHRec$[ebp+16], eax
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 e4	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 65 e8	 mov	 DWORD PTR __$SEHRec$[ebp], esp
  00045	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR __$AllocaPad$$[ebp], 0

; 618  :     bool bStackAvailable = true;

  0004c	c6 45 df 01	 mov	 BYTE PTR _bStackAvailable$[ebp], 1

; 619  : 
; 620  :     __try

  00050	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$SEHRec$[ebp+20], 0

; 621  :     {
; 622  : 		SIZE_T size=0;

  00057	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _size$5[ebp], 0

; 623  : 		HRESULT hrAdd=::ATL::AtlAdd(&size, Size, static_cast<SIZE_T>(_ATL_STACK_MARGIN));

  0005e	68 00 20 00 00	 push	 8192			; 00002000H
  00063	8b 45 08	 mov	 eax, DWORD PTR _Size$[ebp]
  00066	50		 push	 eax
  00067	8d 4d d0	 lea	 ecx, DWORD PTR _size$5[ebp]
  0006a	51		 push	 ecx
  0006b	e8 00 00 00 00	 call	 ??$AtlAdd@K@ATL@@YAJPAKKK@Z ; ATL::AtlAdd<unsigned long>
  00070	83 c4 0c	 add	 esp, 12			; 0000000cH
  00073	89 45 c8	 mov	 DWORD PTR _hrAdd$4[ebp], eax

; 624  : 		if(FAILED(hrAdd))

  00076	83 7d c8 00	 cmp	 DWORD PTR _hrAdd$4[ebp], 0
  0007a	7d 30		 jge	 SHORT $LN3@AtlVerifyS

; 625  : 		{
; 626  : 			ATLASSERT(FALSE);

  0007c	33 d2		 xor	 edx, edx
  0007e	75 26		 jne	 SHORT $LN6@AtlVerifyS
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0008a	6a 00		 push	 0
  0008c	68 72 02 00 00	 push	 626			; 00000272H
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@EFJOHFCD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00096	6a 02		 push	 2
  00098	e8 00 00 00 00	 call	 __CrtDbgReportW
  0009d	83 c4 18	 add	 esp, 24			; 00000018H
  000a0	83 f8 01	 cmp	 eax, 1
  000a3	75 01		 jne	 SHORT $LN6@AtlVerifyS
  000a5	cc		 int	 3
$LN6@AtlVerifyS:

; 627  : 			bStackAvailable = false;

  000a6	c6 45 df 00	 mov	 BYTE PTR _bStackAvailable$[ebp], 0

; 628  : 		}

  000aa	eb 30		 jmp	 SHORT $LN2@AtlVerifyS
$LN3@AtlVerifyS:

; 629  : 		else
; 630  : 		{
; 631  : 			PVOID p = _alloca(size);

  000ac	8b 4d d0	 mov	 ecx, DWORD PTR _size$5[ebp]
  000af	83 c1 24	 add	 ecx, 36			; 00000024H
  000b2	89 4d b0	 mov	 DWORD PTR tv86[ebp], ecx
  000b5	8b 45 b0	 mov	 eax, DWORD PTR tv86[ebp]
  000b8	e8 00 00 00 00	 call	 __alloca_probe_16
  000bd	89 65 ac	 mov	 DWORD PTR tv81[ebp], esp
  000c0	89 65 e8	 mov	 DWORD PTR __$SEHRec$[ebp], esp
  000c3	8d 55 b8	 lea	 edx, DWORD PTR __$AllocaPad$$[ebp]
  000c6	52		 push	 edx
  000c7	8b 55 b0	 mov	 edx, DWORD PTR tv86[ebp]
  000ca	8b 4d ac	 mov	 ecx, DWORD PTR tv81[ebp]
  000cd	e8 00 00 00 00	 call	 @_RTC_AllocaHelper@12
  000d2	83 45 ac 20	 add	 DWORD PTR tv81[ebp], 32	; 00000020H
  000d6	8b 45 ac	 mov	 eax, DWORD PTR tv81[ebp]
  000d9	89 45 c4	 mov	 DWORD PTR _p$3[ebp], eax
$LN2@AtlVerifyS:

; 632  : 			(p);
; 633  : 		}
; 634  :     }

  000dc	c7 45 fc fe ff
	ff ff		 mov	 DWORD PTR __$SEHRec$[ebp+20], -2 ; fffffffeH
  000e3	eb 3a		 jmp	 SHORT $LN13@AtlVerifyS
$LN10@AtlVerifyS:
$LN20@AtlVerifyS:

; 635  :     __except ((EXCEPTION_STACK_OVERFLOW == GetExceptionCode()) ?

  000e5	8b 4d ec	 mov	 ecx, DWORD PTR __$SEHRec$[ebp+4]
  000e8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ea	8b 02		 mov	 eax, DWORD PTR [edx]
  000ec	89 45 c0	 mov	 DWORD PTR $T2[ebp], eax
  000ef	81 7d c0 fd 00
	00 c0		 cmp	 DWORD PTR $T2[ebp], -1073741571 ; c00000fdH
  000f6	75 09		 jne	 SHORT $LN7@AtlVerifyS
  000f8	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv84[ebp], 1
  000ff	eb 07		 jmp	 SHORT $LN8@AtlVerifyS
$LN7@AtlVerifyS:
  00101	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN8@AtlVerifyS:
  00108	8b 45 a8	 mov	 eax, DWORD PTR tv84[ebp]
$LN12@AtlVerifyS:
$LN19@AtlVerifyS:
  0010b	c3		 ret	 0
$LN11@AtlVerifyS:
  0010c	8b 65 e8	 mov	 esp, DWORD PTR __$SEHRec$[ebp]

; 636  :                    EXCEPTION_EXECUTE_HANDLER :
; 637  :                    EXCEPTION_CONTINUE_SEARCH)
; 638  :     {
; 639  :         bStackAvailable = false;

  0010f	c6 45 df 00	 mov	 BYTE PTR _bStackAvailable$[ebp], 0

; 640  :         _resetstkoflw();

  00113	e8 00 00 00 00	 call	 __resetstkoflw

; 632  : 			(p);
; 633  : 		}
; 634  :     }

  00118	c7 45 fc fe ff
	ff ff		 mov	 DWORD PTR __$SEHRec$[ebp+20], -2 ; fffffffeH
$LN13@AtlVerifyS:

; 641  :     }
; 642  :     return bStackAvailable;

  0011f	8a 45 df	 mov	 al, BYTE PTR _bStackAvailable$[ebp]
$LN9@AtlVerifyS:

; 643  : }

  00122	52		 push	 edx
  00123	8b cd		 mov	 ecx, ebp
  00125	50		 push	 eax
  00126	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN18@AtlVerifyS
  0012c	ff 75 b8	 push	 DWORD PTR __$AllocaPad$$[ebp]
  0012f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars2@12
  00134	58		 pop	 eax
  00135	5a		 pop	 edx
  00136	8d 65 98	 lea	 esp, DWORD PTR [ebp-104]
  00139	8b 4d f0	 mov	 ecx, DWORD PTR __$SEHRec$[ebp+8]
  0013c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00143	59		 pop	 ecx
  00144	5f		 pop	 edi
  00145	5e		 pop	 esi
  00146	5b		 pop	 ebx
  00147	8b 4d e4	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014a	33 cd		 xor	 ecx, ebp
  0014c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00151	8b e5		 mov	 esp, ebp
  00153	5d		 pop	 ebp
  00154	c3		 ret	 0
  00155	0f 1f 00	 npad	 3
$LN18@AtlVerifyS:
  00158	03 00 00 00	 DD	 3
  0015c	00 00 00 00	 DD	 $LN17@AtlVerifyS
$LN17@AtlVerifyS:
  00160	df ff ff ff	 DD	 -33			; ffffffdfH
  00164	01 00 00 00	 DD	 1
  00168	00 00 00 00	 DD	 $LN14@AtlVerifyS
  0016c	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00170	04 00 00 00	 DD	 4
  00174	00 00 00 00	 DD	 $LN15@AtlVerifyS
  00178	b8 ff ff ff	 DD	 -72			; ffffffb8H
  0017c	04 00 00 00	 DD	 4
  00180	00 00 00 00	 DD	 $LN16@AtlVerifyS
$LN16@AtlVerifyS:
  00184	5f		 DB	 95			; 0000005fH
  00185	24		 DB	 36			; 00000024H
  00186	41		 DB	 65			; 00000041H
  00187	6c		 DB	 108			; 0000006cH
  00188	6c		 DB	 108			; 0000006cH
  00189	6f		 DB	 111			; 0000006fH
  0018a	63		 DB	 99			; 00000063H
  0018b	61		 DB	 97			; 00000061H
  0018c	50		 DB	 80			; 00000050H
  0018d	61		 DB	 97			; 00000061H
  0018e	64		 DB	 100			; 00000064H
  0018f	24		 DB	 36			; 00000024H
  00190	00		 DB	 0
$LN15@AtlVerifyS:
  00191	73		 DB	 115			; 00000073H
  00192	69		 DB	 105			; 00000069H
  00193	7a		 DB	 122			; 0000007aH
  00194	65		 DB	 101			; 00000065H
  00195	00		 DB	 0
$LN14@AtlVerifyS:
  00196	62		 DB	 98			; 00000062H
  00197	53		 DB	 83			; 00000053H
  00198	74		 DB	 116			; 00000074H
  00199	61		 DB	 97			; 00000061H
  0019a	63		 DB	 99			; 00000063H
  0019b	6b		 DB	 107			; 0000006bH
  0019c	41		 DB	 65			; 00000041H
  0019d	76		 DB	 118			; 00000076H
  0019e	61		 DB	 97			; 00000061H
  0019f	69		 DB	 105			; 00000069H
  001a0	6c		 DB	 108			; 0000006cH
  001a1	61		 DB	 97			; 00000061H
  001a2	62		 DB	 98			; 00000062H
  001a3	6c		 DB	 108			; 0000006cH
  001a4	65		 DB	 101			; 00000065H
  001a5	00		 DB	 0
?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Free@CCRTAllocator@ATL@@SAXPAX@Z PROC			; ATL::CCRTAllocator::Free, COMDAT

; 266  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 267  : 		free(p);

  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 _free
  0000c	83 c4 04	 add	 esp, 4

; 268  : 	}

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?Free@CCRTAllocator@ATL@@SAXPAX@Z ENDP			; ATL::CCRTAllocator::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z PROC		; ATL::CCRTAllocator::Allocate, COMDAT

; 261  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  : 		return malloc(nBytes);

  00003	8b 45 08	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 _malloc
  0000c	83 c4 04	 add	 esp, 4

; 263  : 	}

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ENDP		; ATL::CCRTAllocator::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlchecked.h
;	COMDAT ?memcpy_s@Checked@ATL@@YAXPAXIPBXI@Z
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S1max$ = 12						; size = 4
__S2$ = 16						; size = 4
__N$ = 20						; size = 4
?memcpy_s@Checked@ATL@@YAXPAXIPBXI@Z PROC		; ATL::Checked::memcpy_s, COMDAT

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 69   : 	ATLMFC_CRT_ERRORCHECK(::memcpy_s(_S1, _S1max, _S2, _N));

  00003	8b 45 14	 mov	 eax, DWORD PTR __N$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __S2$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 0c	 mov	 edx, DWORD PTR __S1max$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 08	 mov	 eax, DWORD PTR __S1$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _memcpy_s
  00018	83 c4 10	 add	 esp, 16			; 00000010H
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?AtlCrtErrorCheck@ATL@@YAHH@Z ; ATL::AtlCrtErrorCheck
  00021	83 c4 04	 add	 esp, 4

; 70   : }

  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?memcpy_s@Checked@ATL@@YAXPAXIPBXI@Z ENDP		; ATL::Checked::memcpy_s
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?AtlCoTaskMemRecalloc@ATL@@YAPAXPAXKK@Z
_TEXT	SEGMENT
_nBytes$ = -12						; size = 4
_hr$ = -4						; size = 4
_pvMemory$ = 8						; size = 4
_nCount$ = 12						; size = 4
_nSize$ = 16						; size = 4
?AtlCoTaskMemRecalloc@ATL@@YAPAXPAXKK@Z PROC		; ATL::AtlCoTaskMemRecalloc, COMDAT

; 220  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 221  : 	HRESULT hr;
; 222  : 	ULONG nBytes=0;

  00018	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nBytes$[ebp], 0

; 223  : 	if( FAILED(hr=::ATL::AtlMultiply(&nBytes, nCount, nSize)))

  0001f	8b 45 10	 mov	 eax, DWORD PTR _nSize$[ebp]
  00022	50		 push	 eax
  00023	8b 4d 0c	 mov	 ecx, DWORD PTR _nCount$[ebp]
  00026	51		 push	 ecx
  00027	8d 55 f4	 lea	 edx, DWORD PTR _nBytes$[ebp]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ??$AtlMultiply@K@ATL@@YAJPAKKK@Z ; ATL::AtlMultiply<unsigned long>
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH
  00033	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax
  00036	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0003a	7d 04		 jge	 SHORT $LN2@AtlCoTaskM

; 224  : 	{
; 225  : 		return NULL;

  0003c	33 c0		 xor	 eax, eax
  0003e	eb 17		 jmp	 SHORT $LN1@AtlCoTaskM
$LN2@AtlCoTaskM:

; 226  : 	}
; 227  : 	return ::CoTaskMemRealloc(pvMemory, nBytes);

  00040	8b f4		 mov	 esi, esp
  00042	8b 45 f4	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00045	50		 push	 eax
  00046	8b 4d 08	 mov	 ecx, DWORD PTR _pvMemory$[ebp]
  00049	51		 push	 ecx
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoTaskMemRealloc@8
  00050	3b f4		 cmp	 esi, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@AtlCoTaskM:

; 228  : }

  00057	52		 push	 edx
  00058	8b cd		 mov	 ecx, ebp
  0005a	50		 push	 eax
  0005b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@AtlCoTaskM
  00061	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00066	58		 pop	 eax
  00067	5a		 pop	 edx
  00068	5e		 pop	 esi
  00069	83 c4 10	 add	 esp, 16			; 00000010H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
  00077	90		 npad	 1
$LN6@AtlCoTaskM:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN5@AtlCoTaskM
$LN5@AtlCoTaskM:
  00080	f4 ff ff ff	 DD	 -12			; fffffff4H
  00084	04 00 00 00	 DD	 4
  00088	00 00 00 00	 DD	 $LN4@AtlCoTaskM
$LN4@AtlCoTaskM:
  0008c	6e		 DB	 110			; 0000006eH
  0008d	42		 DB	 66			; 00000042H
  0008e	79		 DB	 121			; 00000079H
  0008f	74		 DB	 116			; 00000074H
  00090	65		 DB	 101			; 00000065H
  00091	73		 DB	 115			; 00000073H
  00092	00		 DB	 0
?AtlCoTaskMemRecalloc@ATL@@YAPAXPAXKK@Z ENDP		; ATL::AtlCoTaskMemRecalloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ?AtlCoTaskMemCAlloc@ATL@@YAPAXKK@Z
_TEXT	SEGMENT
_nBytes$ = -12						; size = 4
_hr$ = -4						; size = 4
_nCount$ = 8						; size = 4
_nSize$ = 12						; size = 4
?AtlCoTaskMemCAlloc@ATL@@YAPAXKK@Z PROC			; ATL::AtlCoTaskMemCAlloc, COMDAT

; 206  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 207  : 	HRESULT hr;
; 208  : 	ULONG nBytes=0;

  00018	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nBytes$[ebp], 0

; 209  : 	if( FAILED(hr=::ATL::AtlMultiply(&nBytes, nCount, nSize)))

  0001f	8b 45 0c	 mov	 eax, DWORD PTR _nSize$[ebp]
  00022	50		 push	 eax
  00023	8b 4d 08	 mov	 ecx, DWORD PTR _nCount$[ebp]
  00026	51		 push	 ecx
  00027	8d 55 f4	 lea	 edx, DWORD PTR _nBytes$[ebp]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ??$AtlMultiply@K@ATL@@YAJPAKKK@Z ; ATL::AtlMultiply<unsigned long>
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH
  00033	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax
  00036	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0003a	7d 04		 jge	 SHORT $LN2@AtlCoTaskM

; 210  : 	{
; 211  : 		return NULL;

  0003c	33 c0		 xor	 eax, eax
  0003e	eb 13		 jmp	 SHORT $LN1@AtlCoTaskM
$LN2@AtlCoTaskM:

; 212  : 	}
; 213  : 	return ::CoTaskMemAlloc(nBytes);

  00040	8b f4		 mov	 esi, esp
  00042	8b 45 f4	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00045	50		 push	 eax
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoTaskMemAlloc@4
  0004c	3b f4		 cmp	 esi, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@AtlCoTaskM:

; 214  : }

  00053	52		 push	 edx
  00054	8b cd		 mov	 ecx, ebp
  00056	50		 push	 eax
  00057	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@AtlCoTaskM
  0005d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00062	58		 pop	 eax
  00063	5a		 pop	 edx
  00064	5e		 pop	 esi
  00065	83 c4 10	 add	 esp, 16			; 00000010H
  00068	3b ec		 cmp	 ebp, esp
  0006a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
  00073	90		 npad	 1
$LN6@AtlCoTaskM:
  00074	01 00 00 00	 DD	 1
  00078	00 00 00 00	 DD	 $LN5@AtlCoTaskM
$LN5@AtlCoTaskM:
  0007c	f4 ff ff ff	 DD	 -12			; fffffff4H
  00080	04 00 00 00	 DD	 4
  00084	00 00 00 00	 DD	 $LN4@AtlCoTaskM
$LN4@AtlCoTaskM:
  00088	6e		 DB	 110			; 0000006eH
  00089	42		 DB	 66			; 00000042H
  0008a	79		 DB	 121			; 00000079H
  0008b	74		 DB	 116			; 00000074H
  0008c	65		 DB	 101			; 00000065H
  0008d	73		 DB	 115			; 00000073H
  0008e	00		 DB	 0
?AtlCoTaskMemCAlloc@ATL@@YAPAXKK@Z ENDP			; ATL::AtlCoTaskMemCAlloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@K@ATL@@YAJPAKKK@Z
_TEXT	SEGMENT
_i64Result$ = -8					; size = 8
_piResult$ = 8						; size = 4
_iLeft$ = 12						; size = 4
_iRight$ = 16						; size = 4
??$AtlMultiply@K@ATL@@YAJPAKKK@Z PROC			; ATL::AtlMultiply<unsigned long>, COMDAT

; 165  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 166  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00014	8b 45 0c	 mov	 eax, DWORD PTR _iLeft$[ebp]
  00017	f7 65 10	 mul	 DWORD PTR _iRight$[ebp]
  0001a	89 45 f8	 mov	 DWORD PTR _i64Result$[ebp], eax
  0001d	89 55 fc	 mov	 DWORD PTR _i64Result$[ebp+4], edx

; 167  : 	if(i64Result>ULONG_MAX)

  00020	83 7d fc 00	 cmp	 DWORD PTR _i64Result$[ebp+4], 0
  00024	77 06		 ja	 SHORT $LN4@AtlMultipl
  00026	83 7d f8 ff	 cmp	 DWORD PTR _i64Result$[ebp], -1
  0002a	76 0f		 jbe	 SHORT $LN2@AtlMultipl
$LN4@AtlMultipl:

; 168  : 	{
; 169  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  0002c	68 16 02 00 00	 push	 534			; 00000216H
  00031	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00036	83 c4 04	 add	 esp, 4
  00039	eb 0a		 jmp	 SHORT $LN1@AtlMultipl
$LN2@AtlMultipl:

; 170  : 	}
; 171  : 	*piResult=static_cast<unsigned long>(i64Result);

  0003b	8b 45 f8	 mov	 eax, DWORD PTR _i64Result$[ebp]
  0003e	8b 4d 08	 mov	 ecx, DWORD PTR _piResult$[ebp]
  00041	89 01		 mov	 DWORD PTR [ecx], eax

; 172  : 	return S_OK;

  00043	33 c0		 xor	 eax, eax
$LN1@AtlMultipl:

; 173  : }

  00045	83 c4 08	 add	 esp, 8
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??$AtlMultiply@K@ATL@@YAJPAKKK@Z ENDP			; ATL::AtlMultiply<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@I@ATL@@YAJPAIII@Z
_TEXT	SEGMENT
_i64Result$ = -8					; size = 8
_piResult$ = 8						; size = 4
_iLeft$ = 12						; size = 4
_iRight$ = 16						; size = 4
??$AtlMultiply@I@ATL@@YAJPAIII@Z PROC			; ATL::AtlMultiply<unsigned int>, COMDAT

; 135  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 136  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00014	8b 45 0c	 mov	 eax, DWORD PTR _iLeft$[ebp]
  00017	f7 65 10	 mul	 DWORD PTR _iRight$[ebp]
  0001a	89 45 f8	 mov	 DWORD PTR _i64Result$[ebp], eax
  0001d	89 55 fc	 mov	 DWORD PTR _i64Result$[ebp+4], edx

; 137  : 	if(i64Result>UINT_MAX)

  00020	83 7d fc 00	 cmp	 DWORD PTR _i64Result$[ebp+4], 0
  00024	77 06		 ja	 SHORT $LN4@AtlMultipl
  00026	83 7d f8 ff	 cmp	 DWORD PTR _i64Result$[ebp], -1
  0002a	76 0f		 jbe	 SHORT $LN2@AtlMultipl
$LN4@AtlMultipl:

; 138  : 	{
; 139  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  0002c	68 16 02 00 00	 push	 534			; 00000216H
  00031	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00036	83 c4 04	 add	 esp, 4
  00039	eb 0a		 jmp	 SHORT $LN1@AtlMultipl
$LN2@AtlMultipl:

; 140  : 	}
; 141  : 	*piResult=static_cast<unsigned int>(i64Result);

  0003b	8b 45 f8	 mov	 eax, DWORD PTR _i64Result$[ebp]
  0003e	8b 4d 08	 mov	 ecx, DWORD PTR _piResult$[ebp]
  00041	89 01		 mov	 DWORD PTR [ecx], eax

; 142  : 	return S_OK;

  00043	33 c0		 xor	 eax, eax
$LN1@AtlMultipl:

; 143  : }

  00045	83 c4 08	 add	 esp, 8
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??$AtlMultiply@I@ATL@@YAJPAIII@Z ENDP			; ATL::AtlMultiply<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@H@ATL@@YAJPAHHH@Z
_TEXT	SEGMENT
_i64Result$ = -8					; size = 8
_piResult$ = 8						; size = 4
_iLeft$ = 12						; size = 4
_iRight$ = 16						; size = 4
??$AtlMultiply@H@ATL@@YAJPAHHH@Z PROC			; ATL::AtlMultiply<int>, COMDAT

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 121  : 	__int64 i64Result=static_cast<__int64>(iLeft) * static_cast<__int64>(iRight);

  00015	8b 45 0c	 mov	 eax, DWORD PTR _iLeft$[ebp]
  00018	99		 cdq
  00019	8b c8		 mov	 ecx, eax
  0001b	8b f2		 mov	 esi, edx
  0001d	8b 45 10	 mov	 eax, DWORD PTR _iRight$[ebp]
  00020	99		 cdq
  00021	52		 push	 edx
  00022	50		 push	 eax
  00023	56		 push	 esi
  00024	51		 push	 ecx
  00025	e8 00 00 00 00	 call	 __allmul
  0002a	89 45 f8	 mov	 DWORD PTR _i64Result$[ebp], eax
  0002d	89 55 fc	 mov	 DWORD PTR _i64Result$[ebp+4], edx

; 122  : 	if(i64Result>INT_MAX || i64Result < INT_MIN)

  00030	83 7d fc 00	 cmp	 DWORD PTR _i64Result$[ebp+4], 0
  00034	7f 1c		 jg	 SHORT $LN3@AtlMultipl
  00036	7c 09		 jl	 SHORT $LN5@AtlMultipl
  00038	81 7d f8 ff ff
	ff 7f		 cmp	 DWORD PTR _i64Result$[ebp], 2147483647 ; 7fffffffH
  0003f	77 11		 ja	 SHORT $LN3@AtlMultipl
$LN5@AtlMultipl:
  00041	83 7d fc ff	 cmp	 DWORD PTR _i64Result$[ebp+4], -1
  00045	7f 1a		 jg	 SHORT $LN2@AtlMultipl
  00047	7c 09		 jl	 SHORT $LN3@AtlMultipl
  00049	81 7d f8 00 00
	00 80		 cmp	 DWORD PTR _i64Result$[ebp], -2147483648 ; 80000000H
  00050	73 0f		 jae	 SHORT $LN2@AtlMultipl
$LN3@AtlMultipl:

; 123  : 	{
; 124  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  00052	68 16 02 00 00	 push	 534			; 00000216H
  00057	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  0005c	83 c4 04	 add	 esp, 4
  0005f	eb 0a		 jmp	 SHORT $LN1@AtlMultipl
$LN2@AtlMultipl:

; 125  : 	}
; 126  : 	*piResult=static_cast<int>(i64Result);

  00061	8b 55 f8	 mov	 edx, DWORD PTR _i64Result$[ebp]
  00064	8b 45 08	 mov	 eax, DWORD PTR _piResult$[ebp]
  00067	89 10		 mov	 DWORD PTR [eax], edx

; 127  : 	return S_OK;

  00069	33 c0		 xor	 eax, eax
$LN1@AtlMultipl:

; 128  : }

  0006b	5e		 pop	 esi
  0006c	83 c4 08	 add	 esp, 8
  0006f	3b ec		 cmp	 ebp, esp
  00071	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
??$AtlMultiply@H@ATL@@YAJPAHHH@Z ENDP			; ATL::AtlMultiply<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_wstdio.h
;	COMDAT _swprintf_s
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_swprintf_s PROC					; COMDAT

; 1523 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 1524 :             int _Result;
; 1525 :             va_list _ArgList;
; 1526 :             __crt_va_start(_ArgList, _Format);

  0001b	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0001e	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1527 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  00021	8b 4d f8	 mov	 ecx, DWORD PTR __ArgList$[ebp]
  00024	51		 push	 ecx
  00025	6a 00		 push	 0
  00027	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  0002a	52		 push	 edx
  0002b	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  0002e	50		 push	 eax
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  00032	51		 push	 ecx
  00033	e8 00 00 00 00	 call	 __vswprintf_s_l
  00038	83 c4 14	 add	 esp, 20			; 00000014H
  0003b	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1528 :             __crt_va_end(_ArgList);

  0003e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1529 :             return _Result;

  00045	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1530 :         }

  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
_swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_wstdio.h
;	COMDAT __vswprintf_s_l
_TEXT	SEGMENT
tv73 = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vswprintf_s_l PROC					; COMDAT

; 1256 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 1257 :         int const _Result = __stdio_common_vswprintf_s(

  00014	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00017	50		 push	 eax
  00018	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  0001f	52		 push	 edx
  00020	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  00027	51		 push	 ecx
  00028	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0002d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00030	52		 push	 edx
  00031	8b 00		 mov	 eax, DWORD PTR [eax]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ___stdio_common_vswprintf_s
  00039	83 c4 1c	 add	 esp, 28			; 0000001cH
  0003c	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1258 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1259 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1260 : 
; 1261 :         return _Result < 0 ? -1 : _Result;

  0003f	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00043	7d 09		 jge	 SHORT $LN3@vswprintf_
  00045	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
  0004c	eb 06		 jmp	 SHORT $LN4@vswprintf_
$LN3@vswprintf_:
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR __Result$[ebp]
  00051	89 4d f8	 mov	 DWORD PTR tv73[ebp], ecx
$LN4@vswprintf_:
  00054	8b 45 f8	 mov	 eax, DWORD PTR tv73[ebp]

; 1262 :     }

  00057	83 c4 08	 add	 esp, 8
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
__vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 90   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00003	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\atlmfc\include\atlexcept.h
;	COMDAT ?AtlThrowImpl@ATL@@YGXJ@Z
_TEXT	SEGMENT
tv85 = -16						; size = 4
$T1 = -12						; size = 8
_dwExceptionCode$ = -4					; size = 4
_hr$ = 8						; size = 4
?AtlThrowImpl@ATL@@YGXJ@Z PROC				; ATL::AtlThrowImpl, COMDAT

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 96   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );

  00017	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5@
  00020	6a 00		 push	 0
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  00027	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8192,0>::operator unsigned int
  0002c	50		 push	 eax
  0002d	6a 60		 push	 96			; 00000060H
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@ECNMIKGK@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00034	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00037	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00042	83 c4 14	 add	 esp, 20			; 00000014H

; 97   : 	ATLASSERT( false );

  00045	33 c9		 xor	 ecx, ecx
  00047	75 23		 jne	 SHORT $LN7@AtlThrowIm
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe@
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00053	6a 00		 push	 0
  00055	6a 61		 push	 97			; 00000061H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@DEDHKNLM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0005c	6a 02		 push	 2
  0005e	e8 00 00 00 00	 call	 __CrtDbgReportW
  00063	83 c4 18	 add	 esp, 24			; 00000018H
  00066	83 f8 01	 cmp	 eax, 1
  00069	75 01		 jne	 SHORT $LN7@AtlThrowIm
  0006b	cc		 int	 3
$LN7@AtlThrowIm:

; 98   : 	DWORD dwExceptionCode;
; 99   : 	switch(hr)

  0006c	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]
  0006f	89 45 f0	 mov	 DWORD PTR tv85[ebp], eax
  00072	81 7d f0 0e 00
	07 80		 cmp	 DWORD PTR tv85[ebp], -2147024882 ; 8007000eH
  00079	74 02		 je	 SHORT $LN4@AtlThrowIm
  0007b	eb 09		 jmp	 SHORT $LN5@AtlThrowIm
$LN4@AtlThrowIm:

; 100  : 	{
; 101  : 	case E_OUTOFMEMORY:
; 102  : 		dwExceptionCode = STATUS_NO_MEMORY;

  0007d	c7 45 fc 17 00
	00 c0		 mov	 DWORD PTR _dwExceptionCode$[ebp], -1073741801 ; c0000017H

; 103  : 		break;

  00084	eb 07		 jmp	 SHORT $LN2@AtlThrowIm
$LN5@AtlThrowIm:

; 104  : 	default:
; 105  : 		dwExceptionCode = EXCEPTION_ILLEGAL_INSTRUCTION;

  00086	c7 45 fc 1d 00
	00 c0		 mov	 DWORD PTR _dwExceptionCode$[ebp], -1073741795 ; c000001dH
$LN2@AtlThrowIm:

; 106  : 	}
; 107  : 	_AtlRaiseException((DWORD)dwExceptionCode);

  0008d	6a 01		 push	 1
  0008f	8b 4d fc	 mov	 ecx, DWORD PTR _dwExceptionCode$[ebp]
  00092	51		 push	 ecx
  00093	e8 00 00 00 00	 call	 ?_AtlRaiseException@ATL@@YAXKK@Z ; ATL::_AtlRaiseException
$LN6@AtlThrowIm:

; 108  : }

  00098	83 c4 10	 add	 esp, 16			; 00000010H
  0009b	3b ec		 cmp	 ebp, esp
  0009d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 04 00	 ret	 4
?AtlThrowImpl@ATL@@YGXJ@Z ENDP				; ATL::AtlThrowImpl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControl.cpp
_TEXT	SEGMENT
tv71 = -4						; size = 4
_DllCanUnloadNow@0 PROC

; 65   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 66   :     return (_Module.GetLockCount()==0) ? S_OK : S_FALSE;

  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET ?_Module@@3VCComModule@ATL@@A ; _Module
  00010	e8 00 00 00 00	 call	 ?GetLockCount@CAtlModule@ATL@@UAEJXZ ; ATL::CAtlModule::GetLockCount
  00015	85 c0		 test	 eax, eax
  00017	75 09		 jne	 SHORT $LN3@DllCanUnlo
  00019	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
  00020	eb 07		 jmp	 SHORT $LN4@DllCanUnlo
$LN3@DllCanUnlo:
  00022	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv71[ebp], 1
$LN4@DllCanUnlo:
  00029	8b 45 fc	 mov	 eax, DWORD PTR tv71[ebp]

; 67   : }

  0002c	83 c4 04	 add	 esp, 4
  0002f	3b ec		 cmp	 ebp, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
_DllCanUnloadNow@0 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Develop\OPOS-CCO\zGestureControl\GestureControl.cpp
_TEXT	SEGMENT
_rclsid$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
_DllGetClassObject@12 PROC

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 74   :     return _Module.GetClassObject(rclsid, riid, ppv);

  00003	8b 45 10	 mov	 eax, DWORD PTR _ppv$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _riid$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 08	 mov	 edx, DWORD PTR _rclsid$[ebp]
  0000e	52		 push	 edx
  0000f	b9 00 00 00 00	 mov	 ecx, OFFSET ?_Module@@3VCComModule@ATL@@A ; _Module
  00014	e8 00 00 00 00	 call	 ?GetClassObject@CComModule@ATL@@QAEJABU_GUID@@0PAPAX@Z ; ATL::CComModule::GetClassObject

; 75   : }

  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	5d		 pop	 ebp
  00021	c2 0c 00	 ret	 12			; 0000000cH
_DllGetClassObject@12 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IClassFactory@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IClassFactory@@QAE@XZ PROC				; IClassFactory::IClassFactory, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0IUnknown@@QAE@XZ
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0IClassFactory@@QAE@XZ ENDP				; IClassFactory::IClassFactory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\shared\winerror.h
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = -4						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT

; 29051: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  0000f	7f 08		 jg	 SHORT $LN3@HRESULT_FR
  00011	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00014	89 45 fc	 mov	 DWORD PTR tv68[ebp], eax
  00017	eb 18		 jmp	 SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
  00019	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  0001c	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00022	81 c9 00 00 07
	00		 or	 ecx, 458752		; 00070000H
  00028	81 c9 00 00 00
	80		 or	 ecx, -2147483648	; 80000000H
  0002e	89 4d fc	 mov	 DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
  00031	8b 45 fc	 mov	 eax, DWORD PTR tv68[ebp]
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\shared\guiddef.h
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT
tv69 = -4						; size = 4
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID PROC					; COMDAT

; 160  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  0000b	6a 10		 push	 16			; 00000010H
  0000d	8b 45 0c	 mov	 eax, DWORD PTR _rguid2$[ebp]
  00010	50		 push	 eax
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _rguid1$[ebp]
  00014	51		 push	 ecx
  00015	e8 00 00 00 00	 call	 _memcmp
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001d	85 c0		 test	 eax, eax
  0001f	75 09		 jne	 SHORT $LN3@IsEqualGUI
  00021	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@IsEqualGUI
$LN3@IsEqualGUI:
  0002a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@IsEqualGUI:
  00031	8b 45 fc	 mov	 eax, DWORD PTR tv69[ebp]

; 162  : }

  00034	83 c4 04	 add	 esp, 4
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
_IsEqualGUID ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\shared\guiddef.h
;	COMDAT _InlineIsEqualGUID
_TEXT	SEGMENT
tv84 = -4						; size = 4
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_InlineIsEqualGUID PROC					; COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 152  :    return (

  0000c	b8 04 00 00 00	 mov	 eax, 4
  00011	6b c8 00	 imul	 ecx, eax, 0
  00014	ba 04 00 00 00	 mov	 edx, 4
  00019	6b c2 00	 imul	 eax, edx, 0
  0001c	8b 55 08	 mov	 edx, DWORD PTR _rguid1$[ebp]
  0001f	8b 75 0c	 mov	 esi, DWORD PTR _rguid2$[ebp]
  00022	8b 0c 0a	 mov	 ecx, DWORD PTR [edx+ecx]
  00025	3b 0c 06	 cmp	 ecx, DWORD PTR [esi+eax]
  00028	75 61		 jne	 SHORT $LN3@InlineIsEq
  0002a	ba 04 00 00 00	 mov	 edx, 4
  0002f	c1 e2 00	 shl	 edx, 0
  00032	b8 04 00 00 00	 mov	 eax, 4
  00037	c1 e0 00	 shl	 eax, 0
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _rguid1$[ebp]
  0003d	8b 75 0c	 mov	 esi, DWORD PTR _rguid2$[ebp]
  00040	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  00043	3b 14 06	 cmp	 edx, DWORD PTR [esi+eax]
  00046	75 43		 jne	 SHORT $LN3@InlineIsEq
  00048	b8 04 00 00 00	 mov	 eax, 4
  0004d	d1 e0		 shl	 eax, 1
  0004f	b9 04 00 00 00	 mov	 ecx, 4
  00054	d1 e1		 shl	 ecx, 1
  00056	8b 55 08	 mov	 edx, DWORD PTR _rguid1$[ebp]
  00059	8b 75 0c	 mov	 esi, DWORD PTR _rguid2$[ebp]
  0005c	8b 04 02	 mov	 eax, DWORD PTR [edx+eax]
  0005f	3b 04 0e	 cmp	 eax, DWORD PTR [esi+ecx]
  00062	75 27		 jne	 SHORT $LN3@InlineIsEq
  00064	b9 04 00 00 00	 mov	 ecx, 4
  00069	6b d1 03	 imul	 edx, ecx, 3
  0006c	b8 04 00 00 00	 mov	 eax, 4
  00071	6b c8 03	 imul	 ecx, eax, 3
  00074	8b 45 08	 mov	 eax, DWORD PTR _rguid1$[ebp]
  00077	8b 75 0c	 mov	 esi, DWORD PTR _rguid2$[ebp]
  0007a	8b 14 10	 mov	 edx, DWORD PTR [eax+edx]
  0007d	3b 14 0e	 cmp	 edx, DWORD PTR [esi+ecx]
  00080	75 09		 jne	 SHORT $LN3@InlineIsEq
  00082	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv84[ebp], 1
  00089	eb 07		 jmp	 SHORT $LN4@InlineIsEq
$LN3@InlineIsEq:
  0008b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN4@InlineIsEq:
  00092	8b 45 fc	 mov	 eax, DWORD PTR tv84[ebp]

; 153  :       ((unsigned long *) &rguid1)[0] == ((unsigned long *) &rguid2)[0] &&
; 154  :       ((unsigned long *) &rguid1)[1] == ((unsigned long *) &rguid2)[1] &&
; 155  :       ((unsigned long *) &rguid1)[2] == ((unsigned long *) &rguid2)[2] &&
; 156  :       ((unsigned long *) &rguid1)[3] == ((unsigned long *) &rguid2)[3]);
; 157  : }

  00095	5e		 pop	 esi
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
_InlineIsEqualGUID ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_wstring.h
;	COMDAT ?wcsstr@@YAPA_WPA_WPB_W@Z
_TEXT	SEGMENT
__String$ = 8						; size = 4
__SubStr$ = 12						; size = 4
?wcsstr@@YAPA_WPA_WPB_W@Z PROC				; wcsstr, COMDAT

; 549  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 550  :         return const_cast<wchar_t*>(wcsstr(static_cast<wchar_t const*>(_String), _SubStr));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __SubStr$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __String$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 _wcsstr
  00010	83 c4 08	 add	 esp, 8

; 551  :     }

  00013	3b ec		 cmp	 ebp, esp
  00015	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?wcsstr@@YAPA_WPA_WPB_W@Z ENDP				; wcsstr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_memcpy_s.h
_TEXT	SEGMENT
tv79 = -24						; size = 4
tv75 = -20						; size = 4
tv66 = -16						; size = 4
__Expr_val$1 = -12					; size = 4
__Expr_val$2 = -8					; size = 4
__Expr_val$3 = -4					; size = 4
__Destination$ = 8					; size = 4
__DestinationSize$ = 12					; size = 4
__Source$ = 16						; size = 4
__SourceSize$ = 20					; size = 4
_memcpy_s PROC

; 45   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 46   :         if (_SourceSize == 0)

  0001d	83 7d 14 00	 cmp	 DWORD PTR __SourceSize$[ebp], 0
  00021	75 07		 jne	 SHORT $LN2@memcpy_s

; 47   :         {
; 48   :             return 0;

  00023	33 c0		 xor	 eax, eax
  00025	e9 f1 00 00 00	 jmp	 $LN1@memcpy_s
$LN2@memcpy_s:

; 49   :         }
; 50   : 
; 51   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  0002a	83 7d 08 00	 cmp	 DWORD PTR __Destination$[ebp], 0
  0002e	74 09		 je	 SHORT $LN9@memcpy_s
  00030	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00037	eb 07		 jmp	 SHORT $LN10@memcpy_s
$LN9@memcpy_s:
  00039	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN10@memcpy_s:
  00040	8b 45 f0	 mov	 eax, DWORD PTR tv66[ebp]
  00043	89 45 fc	 mov	 DWORD PTR __Expr_val$3[ebp], eax
  00046	83 7d fc 00	 cmp	 DWORD PTR __Expr_val$3[ebp], 0
  0004a	75 1a		 jne	 SHORT $LN3@memcpy_s
  0004c	e8 00 00 00 00	 call	 __errno
  00051	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  00057	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  0005c	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  00061	e9 b5 00 00 00	 jmp	 $LN1@memcpy_s
$LN3@memcpy_s:

; 52   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  00066	83 7d 10 00	 cmp	 DWORD PTR __Source$[ebp], 0
  0006a	74 0c		 je	 SHORT $LN5@memcpy_s
  0006c	8b 4d 0c	 mov	 ecx, DWORD PTR __DestinationSize$[ebp]
  0006f	3b 4d 14	 cmp	 ecx, DWORD PTR __SourceSize$[ebp]
  00072	0f 83 8d 00 00
	00		 jae	 $LN4@memcpy_s
$LN5@memcpy_s:

; 53   :         {
; 54   :             memset(_Destination, 0, _DestinationSize);

  00078	8b 55 0c	 mov	 edx, DWORD PTR __DestinationSize$[ebp]
  0007b	52		 push	 edx
  0007c	6a 00		 push	 0
  0007e	8b 45 08	 mov	 eax, DWORD PTR __Destination$[ebp]
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 _memset
  00087	83 c4 0c	 add	 esp, 12			; 0000000cH

; 55   : 
; 56   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);

  0008a	83 7d 10 00	 cmp	 DWORD PTR __Source$[ebp], 0
  0008e	74 09		 je	 SHORT $LN11@memcpy_s
  00090	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR tv75[ebp], 1
  00097	eb 07		 jmp	 SHORT $LN12@memcpy_s
$LN11@memcpy_s:
  00099	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN12@memcpy_s:
  000a0	8b 4d ec	 mov	 ecx, DWORD PTR tv75[ebp]
  000a3	89 4d f8	 mov	 DWORD PTR __Expr_val$2[ebp], ecx
  000a6	83 7d f8 00	 cmp	 DWORD PTR __Expr_val$2[ebp], 0
  000aa	75 17		 jne	 SHORT $LN6@memcpy_s
  000ac	e8 00 00 00 00	 call	 __errno
  000b1	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  000b7	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  000bc	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  000c1	eb 58		 jmp	 SHORT $LN1@memcpy_s
$LN6@memcpy_s:

; 57   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);

  000c3	8b 55 0c	 mov	 edx, DWORD PTR __DestinationSize$[ebp]
  000c6	3b 55 14	 cmp	 edx, DWORD PTR __SourceSize$[ebp]
  000c9	72 09		 jb	 SHORT $LN13@memcpy_s
  000cb	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR tv79[ebp], 1
  000d2	eb 07		 jmp	 SHORT $LN14@memcpy_s
$LN13@memcpy_s:
  000d4	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN14@memcpy_s:
  000db	8b 45 e8	 mov	 eax, DWORD PTR tv79[ebp]
  000de	89 45 f4	 mov	 DWORD PTR __Expr_val$1[ebp], eax
  000e1	83 7d f4 00	 cmp	 DWORD PTR __Expr_val$1[ebp], 0
  000e5	75 17		 jne	 SHORT $LN7@memcpy_s
  000e7	e8 00 00 00 00	 call	 __errno
  000ec	c7 00 22 00 00
	00		 mov	 DWORD PTR [eax], 34	; 00000022H
  000f2	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  000f7	b8 22 00 00 00	 mov	 eax, 34			; 00000022H
  000fc	eb 1d		 jmp	 SHORT $LN1@memcpy_s
$LN7@memcpy_s:

; 58   : 
; 59   :             // Unreachable, but required to suppress /analyze warnings:
; 60   :             return EINVAL;

  000fe	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  00103	eb 16		 jmp	 SHORT $LN1@memcpy_s
$LN4@memcpy_s:

; 61   :         }
; 62   :         memcpy(_Destination, _Source, _SourceSize);

  00105	8b 4d 14	 mov	 ecx, DWORD PTR __SourceSize$[ebp]
  00108	51		 push	 ecx
  00109	8b 55 10	 mov	 edx, DWORD PTR __Source$[ebp]
  0010c	52		 push	 edx
  0010d	8b 45 08	 mov	 eax, DWORD PTR __Destination$[ebp]
  00110	50		 push	 eax
  00111	e8 00 00 00 00	 call	 _memcpy
  00116	83 c4 0c	 add	 esp, 12			; 0000000cH

; 63   :         return 0;

  00119	33 c0		 xor	 eax, eax
$LN1@memcpy_s:

; 64   :     }

  0011b	83 c4 18	 add	 esp, 24			; 00000018H
  0011e	3b ec		 cmp	 ebp, esp
  00120	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00125	8b e5		 mov	 esp, ebp
  00127	5d		 pop	 ebp
  00128	c3		 ret	 0
_memcpy_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_I@YGXPAXIIP6EX0@Z@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
tv68 = -4						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_I@YGXPAXIIP6EX0@Z@Z PROC				; `vector destructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	8b 45 0c	 mov	 eax, DWORD PTR ___s$[ebp]
  00018	0f af 45 10	 imul	 eax, DWORD PTR ___n$[ebp]
  0001c	03 45 08	 add	 eax, DWORD PTR ___t$[ebp]
  0001f	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
$LN2@vector:
  00022	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  00025	89 4d fc	 mov	 DWORD PTR tv68[ebp], ecx
  00028	8b 55 10	 mov	 edx, DWORD PTR ___n$[ebp]
  0002b	83 ea 01	 sub	 edx, 1
  0002e	89 55 10	 mov	 DWORD PTR ___n$[ebp], edx
  00031	83 7d fc 00	 cmp	 DWORD PTR tv68[ebp], 0
  00035	76 09		 jbe	 SHORT $LN5@vector
  00037	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  0003e	eb 07		 jmp	 SHORT $LN6@vector
$LN5@vector:
  00040	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN6@vector:
  00047	83 7d f8 00	 cmp	 DWORD PTR tv69[ebp], 0
  0004b	74 1a		 je	 SHORT $LN1@vector
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  00050	2b 45 0c	 sub	 eax, DWORD PTR ___s$[ebp]
  00053	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00056	8b f4		 mov	 esi, esp
  00058	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  0005b	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0005e	3b f4		 cmp	 esi, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	eb bb		 jmp	 SHORT $LN2@vector
$LN1@vector:
  00067	5e		 pop	 esi
  00068	83 c4 08	 add	 esp, 8
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 10 00	 ret	 16			; 00000010H
??_I@YGXPAXIIP6EX0@Z@Z ENDP				; `vector destructor iterator'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv67 = -8						; size = 4
tv66 = -4						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
$LN2@vector:
  00015	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  00018	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  0001b	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  0001e	83 e9 01	 sub	 ecx, 1
  00021	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00024	83 7d fc 00	 cmp	 DWORD PTR tv66[ebp], 0
  00028	76 09		 jbe	 SHORT $LN5@vector
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv67[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN6@vector
$LN5@vector:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
$LN6@vector:
  0003a	83 7d f8 00	 cmp	 DWORD PTR tv67[ebp], 0
  0003e	74 1a		 je	 SHORT $LN1@vector
  00040	8b f4		 mov	 esi, esp
  00042	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00045	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  00048	3b f4		 cmp	 esi, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b 55 08	 mov	 edx, DWORD PTR ___t$[ebp]
  00052	03 55 0c	 add	 edx, DWORD PTR ___s$[ebp]
  00055	89 55 08	 mov	 DWORD PTR ___t$[ebp], edx
  00058	eb bb		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0005a	5e		 pop	 esi
  0005b	83 c4 08	 add	 esp, 8
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
